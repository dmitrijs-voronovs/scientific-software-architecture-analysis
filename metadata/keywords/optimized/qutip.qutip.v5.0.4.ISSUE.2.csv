quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Deployability,Installation issues on MS Windows 8 and 10 64 bit,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377:0,Install,Installation,0,https://qutip.org,https://github.com/qutip/qutip/issues/377,1,['Install'],['Installation']
Deployability,Installation of qutip shows various warnings on ubuntu 20.04.1,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1389:0,Install,Installation,0,https://qutip.org,https://github.com/qutip/qutip/issues/1389,1,['Install'],['Installation']
Deployability,Installation on OS X with Homebrew script error,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/348:0,Install,Installation,0,https://qutip.org,https://github.com/qutip/qutip/issues/348,1,['Install'],['Installation']
Deployability,Installation using MacPorts and Anaconda (without the Fortran mcsolver) both work fine on OSX. I would recommend using one of those.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/348#issuecomment-113357619:0,Install,Installation,0,https://qutip.org,https://github.com/qutip/qutip/issues/348#issuecomment-113357619,1,['Install'],['Installation']
Deployability,"Installation via pip or from source seems to work. Oh, and I'm also pretty sure that the conda installation *used* to work on this machine (a few weeks ago)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/674#issuecomment-289227191:0,Install,Installation,0,https://qutip.org,https://github.com/qutip/qutip/issues/674#issuecomment-289227191,2,"['Install', 'install']","['Installation', 'installation']"
Deployability,"Installing FORTRAN on OS X can be a bit tricky, but I've seen several people successfully use the [HPC for OS X](http://hpc.sourceforge.net/) builds of gfortran.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/391#issuecomment-154595439:0,Install,Installing,0,https://qutip.org,https://github.com/qutip/qutip/issues/391#issuecomment-154595439,1,['Install'],['Installing']
Deployability,Installing QuTiP fails in Poetry,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2322:0,Install,Installing,0,https://qutip.org,https://github.com/qutip/qutip/issues/2322,1,['Install'],['Installing']
Deployability,"Installing `qutip` as an external dependency fails if `cython` is not installed since it's imported without checks in [`setup.py`.](https://github.com/qutip/qutip/blob/0f412cd4bf983a3b497d54406103d0209b553a7a/setup.py#L52-53). From what I can tell, this was an issue before (#426) and was subsequently fixed (#489) but then again broken (https://github.com/qutip/qutip/commit/82e209512927a0d6086de31364004fdb0da8c59a). Sidestepping this would be great since for instance readthedocs to my knowledge doesn't allow running custom commands (like `pip install cython`) before installing dependencies when building a documentation that requires `qutip`.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1174:0,Install,Installing,0,https://qutip.org,https://github.com/qutip/qutip/issues/1174,4,"['Install', 'install']","['Installing', 'install', 'installed', 'installing']"
Deployability,Installing as external dependency fails if Cython is missing,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1174:0,Install,Installing,0,https://qutip.org,https://github.com/qutip/qutip/issues/1174,1,['Install'],['Installing']
Deployability,Installing from conda gives fatal error for missing spmv_openmp.hpp,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1334:0,Install,Installing,0,https://qutip.org,https://github.com/qutip/qutip/issues/1334,1,['Install'],['Installing']
Deployability,Installing from source is probably the way to go.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/674#issuecomment-365811269:0,Install,Installing,0,https://qutip.org,https://github.com/qutip/qutip/issues/674#issuecomment-365811269,1,['Install'],['Installing']
Deployability,"Installing qutip via the conda package and then importing it produces a crash for me:. goerz@mlhpc2:~> conda create -y -c conda-forge -m -n qutiptest python=3.5 qutip; Using Anaconda Cloud api site https://api.anaconda.org; Fetching package metadata: ........; Solving package specifications: ......... Package plan for installation in environment /home/goerz/.conda/envs/qutiptest:. The following NEW packages will be INSTALLED:. certifi: 2017.1.23-py35_0; cython: 0.25.2-py35_1; libgfortran: 3.0.0-1; mkl: 2017.0.1-0; ncurses: 5.9-10 numpy: 1.12.1-py35_0; openssl: 1.0.2k-1; pip: 9.0.1-py35_1; python: 3.5.3-1; qutip: 4.1.0-np112py35_1; readline: 6.2-2 (soft-link); scipy: 0.19.0-np112py35_0; setuptools: 33.1.1-py35_0; sqlite: 3.13.0-1; tk: 8.5.19-1; wheel: 0.29.0-py35_0; xz: 5.2.2-1; zlib: 1.2.11-0. Linking packages ...; [ COMPLETE ]|##########################| 100%; #; # To activate this environment, use:; # $ source activate qutiptest; #; # To deactivate this environment, use:; # $ source deactivate; #; goerz@mlhpc2:~> source activate qutiptest; discarding /home/goerz/.conda/envs/default/bin from PATH; prepending /home/goerz/.conda/envs/qutiptest/bin to PATH; (qutiptest)goerz@mlhpc2:~> python; Python 3.5.3 | packaged by conda-forge | (default, Feb 9 2017, 14:37:12); [GCC 4.8.2 20140120 (Red Hat 4.8.2-15)] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import qutip; /home/goerz/.conda/envs/qutiptest/lib/python3.5/site-packages/qutip/__init__.py:161: UserWarning: matplotlib not found: Graphics will not work.; warnings.warn(""matplotlib not found: Graphics will not work.""); Illegal instruction (core dumped); (qutiptest)goerz@mlhpc2:~>. Let me know if you need further information on my setup in order to reproduce this",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/674:0,Install,Installing,0,https://qutip.org,https://github.com/qutip/qutip/issues/674,3,"['INSTALL', 'Install', 'install']","['INSTALLED', 'Installing', 'installation']"
Deployability,Integrate scheduler into the compiler,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1444:0,Integrat,Integrate,0,https://qutip.org,https://github.com/qutip/qutip/pull/1444,1,['Integrat'],['Integrate']
Deployability,Integrate the pulse scheduler into Processor,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1365:0,Integrat,Integrate,0,https://qutip.org,https://github.com/qutip/qutip/pull/1365,1,['Integrat'],['Integrate']
Deployability,"Interesting observation, the vector_to_operator seems to expect an ""operator-ket"" class, as seen in the examples: . http://qutip.org/docs/3.1.0/guide/guide-states.html. In the code, it expects the dimensions of the operator(""op"") should be: . `op.dims = [ [[rows], [cols]], [1]]`. This is probably to keep in line with the way operator_to_vector sets the dimensions. I am not sure what the expected behavior is supposed to be with a ""ket"" instead of a ""operator-ket"". You are correct to think that this behavior changed in release 4.5 as the shape passed to the sp_reshape function in vector_to_operator changed from:. `n = int(np.sqrt(op.shape[0]))`; `shape = (n, n)`. to . `shape = (np.prod(q.dims[0]), np.prod(q.dims[1]))`. The first preserves the correct ""size"" (which is later used in the check which throws ""Exception: Total size of array must be unchanged."") but the latter one does not for kets. . Maybe we should return the shape assignment to the previous one ?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1204#issuecomment-600771828:523,release,release,523,https://qutip.org,https://github.com/qutip/qutip/issues/1204#issuecomment-600771828,1,['release'],['release']
Deployability,"Interesting... It seems I can not reproduce the problem. I've run the for loop 150 times and always got 1e-12.; about():. > QuTiP: Quantum Toolbox in Python; > Copyright (c) 2011 and later.; > Alexander Pitchford, Chris Granade, Paul D. Nation & Robert J. Johansson; > ; > QuTiP Version: None; > Numpy Version: 1.11.1; > Scipy Version: 0.18.0; > Cython Version: 0.24.1; > Matplotlib Version: 1.5.1; > Python Version: 2.7.12; > Number of CPUs: 2; > BLAS Info: INTEL MKL; > INTEL MKL Ext: True; > Platform Info: Windows (x86); > Installation path: E:\Miniconda2\lib\site-packages\qutip-none-py2.7-win32.egg\qutip",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/526#issuecomment-242813827:527,Install,Installation,527,https://qutip.org,https://github.com/qutip/qutip/issues/526#issuecomment-242813827,1,['Install'],['Installation']
Deployability,"Interesting... You see, the gate `Gate(RY, targets=[0, 1], controls=None)` is clearly wrong because RY acts only on one qubits. I guess you are probably using a released version of QuTiP (4.5.2/3 maybe) and not the master branch. This error was hidden before in those released version. If you try to install from source (http://qutip.org/docs/latest/installation.html#installing-from-source) (which you have to if you want to contribute anyway), you will probably see this error message.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1330#issuecomment-810554275:161,release,released,161,https://qutip.org,https://github.com/qutip/qutip/issues/1330#issuecomment-810554275,5,"['install', 'release']","['install', 'installation', 'installing-from-source', 'released']"
Deployability,Internal note: `bloch_redfield_solve` quit without raising an error when ode integration fails.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1965#issuecomment-1203283104:77,integrat,integration,77,https://qutip.org,https://github.com/qutip/qutip/issues/1965#issuecomment-1203283104,1,['integrat'],['integration']
Deployability,"Introduce a common ODE integrator interface for qutip's solver. Presently qutip's solver use `scipy.integratre.ode`'s zvode ODE solver, which support `adams` and `bdf` methods.; These are great method in most case, but not always optimal.; This PR introduce, a common interface to allow other ODE method to be used by solvers.; It also add 2 new scipy ODE solvers: `lsoda` and `dop853`.; `lsoda` detect if the system is stiff and switch between `adams` and `bdf`.; `dop853` is a 8th order Runge-Kutta method. The `Integrator` use `Data` as state and return the state as a pair `(t, state)`.; Often solver's run only compute the expectation values, so there is no need to create a `Qobj`.; Returning the time with the state is for `mcsolve` which have the integration advancing with one internal step and the run loop is cleaner in solver. . I did some benchmark and `adams` method is often the best scipy method.; Sparse system: loglog plot of time in function of system size.; ![image](https://user-images.githubusercontent.com/17770236/131005186-aa51aa86-8ecf-4c03-8ba4-eeddcd65af30.png). Dense time-dependent system.; ![image](https://user-images.githubusercontent.com/17770236/131005465-5c0a9e8e-9ec7-4409-8cda-70aab5129e1f.png). *`vern7`, `vern9`, and `diag` method will be introduced in another PR.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1643:23,integrat,integrator,23,https://qutip.org,https://github.com/qutip/qutip/pull/1643,4,"['Integrat', 'integrat']","['Integrator', 'integration', 'integrator', 'integratre']"
Deployability,Is Python Headers a package? How to install? It is required for the following reason.; Python Headers 2.7+ Linux only. Needed for compiling Cython files; http://qutip.org/docs/latest/installation.html; Thanks~,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1222:36,install,install,36,https://qutip.org,https://github.com/qutip/qutip/issues/1222,2,['install'],"['install', 'installation']"
Deployability,"Is anyone working on this? I see no assignee, and it would be nice to get this feature on a stable release.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1887#issuecomment-1278553473:99,release,release,99,https://qutip.org,https://github.com/qutip/qutip/issues/1887#issuecomment-1278553473,1,['release'],['release']
Deployability,"Is it ok if sneak in parallelisation of the HEOM stuff into this issue? A bunch of groups have done it already, and it apparently gives some advantages, but only Tanimura himself has released code and details showing their approach http://pubs.acs.org/doi/abs/10.1021/acs.jctc.5b00488?journalCode=jctcce. I was talking to alex about importing their code with cython (assuming they allow it, they haven't specified a licence that I noticed). Otherwise, their approach seems to be to do a taylor series expansion of the propagator, and do all the resulting matrix multiplication stuff on a GPU. Though I guess there's something tricky involving memory in that last step.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/438#issuecomment-186782990:183,release,released,183,https://qutip.org,https://github.com/qutip/qutip/issues/438#issuecomment-186782990,1,['release'],['released']
Deployability,Is it possible to create a Hamiltonian which has continuous operators such as spatial differential operator? Perhaps this would be done using Sympy in some way?,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/635:49,continuous,continuous,49,https://qutip.org,https://github.com/qutip/qutip/issues/635,1,['continuous'],['continuous']
Deployability,"Is it the case so, I was just about to upgrade to Mojave. Is it the issue with IDLE or Notebooks?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/919#issuecomment-427550075:39,upgrade,upgrade,39,https://qutip.org,https://github.com/qutip/qutip/issues/919#issuecomment-427550075,1,['upgrade'],['upgrade']
Deployability,"Is multiprocessing used by default in some functions ? Can we do away with that in the __init__.py file and add it where it is used ? . Why do we need to check for numpy and scipy versions at each import ? Is it not enough to check it when installing qutip ?. What do you mean by ""avoiding internal imports"" ? Do you mean to say that we should remove all * imports ? . ```; from qutip.tomography import *; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/580#issuecomment-269518208:240,install,installing,240,https://qutip.org,https://github.com/qutip/qutip/issues/580#issuecomment-269518208,1,['install'],['installing']
Deployability,"Is there any performance reason why we should not compile the extensions using C++ ?. We are having issues with the conda forge packages:; conda-forge/qutip-feedstock#16; I am sure than this problem would not occur if we were compiling using MS compilers.; We are receiving lots of support requests on the Google group for help installing on Windows; We do not have a solution for python>=3.5 on Windows. I posted a question on the Cython help group asking about accessing complex functions on Windows. One suggestion was to try C++, importing functions from `complex` rather than `complex.h`. I made a small test project that imported `conj` and it compiled using MS compilers and worked on Windows 10 with both Python 2.7 and 3.5. We only have one small C source file. I guess it could be rewritten in C++ quite easily.; I can do further tests to check performance if we consider C++ compilation is an option for qutip.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/647:328,install,installing,328,https://qutip.org,https://github.com/qutip/qutip/issues/647,1,['install'],['installing']
Deployability,Is this PR done? If so I can merge it and make a new release candidate dist file.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/195#issuecomment-49124612:53,release,release,53,https://qutip.org,https://github.com/qutip/qutip/pull/195#issuecomment-49124612,1,['release'],['release']
Deployability,Is this merge ready? I am looking to make the 4.0.2 release,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/609#issuecomment-269961480:52,release,release,52,https://qutip.org,https://github.com/qutip/qutip/pull/609#issuecomment-269961480,1,['release'],['release']
Deployability,Issue #905 and #892; Numpy Requirements updated to 1.12 from 1.8 and Optional Dependency for Matplotlib added.; MacOS test is failing as mentioned in #963,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/967:40,update,updated,40,https://qutip.org,https://github.com/qutip/qutip/pull/967,1,['update'],['updated']
Deployability,"It appears that they have removed hw.cpufrequency on these things (About this mac doesn't show a freq. either). I don't know what is their policy in this regard but I did find these two related issues: https://github.com/giampaolo/psutil/issues/1892 and https://github.com/shirou/gopsutil/pull/999. My workaround was to comment out the code and hard-wire a random value in there :-) A quick grep didn't seem to show any use of cpu_freq elsewhere in the code but then I didn't look too much in depth. I don't personally use qutip, my partner does, she's the physicist, I'm just the geek helping hand :). It does look like this code could use some error handling and put some ""reasonable"" default values if the sysctl's fail indeed. Happy to test a patch and report. She's currently away so there will be some latency (I can occasionally ssh into her laptop but it takes preparation), so I can't really submit a PR myself at this point.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1606#issuecomment-880308664:747,patch,patch,747,https://qutip.org,https://github.com/qutip/qutip/issues/1606#issuecomment-880308664,1,['patch'],['patch']
Deployability,"It could be in the installation instruction. . Or solution 3 should be easy and quick do implement as a temporary patch. A good first cython PR.; We just need to decide if we accept it like this, go back to make a better fix later or wait for scipy / blas to fix it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1197#issuecomment-628675623:19,install,installation,19,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-628675623,2,"['install', 'patch']","['installation', 'patch']"
Deployability,It did work for me with QuTiP master on Python 3.10.5. Could you try with master to? We need to do a 4.7.1 release soon anyway.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1978#issuecomment-1219847833:107,release,release,107,https://qutip.org,https://github.com/qutip/qutip/pull/1978#issuecomment-1219847833,1,['release'],['release']
Deployability,"It doesn't fail on Python 3.10 and below, because there are pre-built wheels for those Pythons. Python 3.11 wasn't released when 4.7.0 came out, so there aren't prebuilt wheels for that.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2036#issuecomment-1342844102:115,release,released,115,https://qutip.org,https://github.com/qutip/qutip/issues/2036#issuecomment-1342844102,1,['release'],['released']
Deployability,"It gives me correct result when I change the ODE tolerances as you mentioned, in mesolve(). Thank you so much. I tried in v4.7.3, now, after I upgrade it to v5, still same result as v4.7.3.; Now I can try my original calculation, your suggestion should work then.; Thanks. > It is a little annoying it is just failing silently. yes, I agree....",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2229#issuecomment-1713148770:143,upgrade,upgrade,143,https://qutip.org,https://github.com/qutip/qutip/issues/2229#issuecomment-1713148770,1,['upgrade'],['upgrade']
Deployability,"It is about time that we made the 4.3 release, @ajgpitch @nonhermitian. Could you please check and merge this? I will build the 4.3 dist and the documentation and then update pip and the conda-forge version. We have the new scattering module and PIQS in this version.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/889:38,release,release,38,https://qutip.org,https://github.com/qutip/qutip/pull/889,2,"['release', 'update']","['release', 'update']"
Deployability,It is fixed in the latest release (4.7.2) with #2082.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2211#issuecomment-1674730690:26,release,release,26,https://qutip.org,https://github.com/qutip/qutip/issues/2211#issuecomment-1674730690,1,['release'],['release']
Deployability,"It is not only the number of calls to expect that changes. It seems like the key difference in your example is the number of calls to ode.integrate, which are doubled in numbers and account for an additional 60 sec of wall time, out of which at most 3.7 is spent for calculating expectation values. Maybe the following can provide some additional clues. For `tlist = linspace(0, 10, 10)`. ```; ncalls tottime percall cumtime percall filename:lineno(function); ...; 500 2.669 0.005 39.053 0.078 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:757(_mc_alg_evolve); 163354 0.476 0.000 35.217 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:376(integrate); 163354 34.360 0.000 34.477 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:859(run); 157186 0.265 0.000 28.734 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:747(step); 533/1 0.004 0.000 0.761 0.761 <frozen importlib._bootstrap>:2234(_find_and_load); ```. For `tlist = linspace(0, 10, 100)`. ```; ncalls tottime percall cumtime percall filename:lineno(function); ...; 500 6.320 0.013 108.141 0.216 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:757(_mc_alg_evolve); 290347 0.887 0.000 95.006 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:376(integrate); 290347 93.419 0.000 93.705 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:859(run); 238940 0.414 0.000 45.467 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:747(step); 153438 3.721 0.000 3.721 0.000 {built-in method cy_expect_psi_csr}; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/264#issuecomment-64520821:138,integrat,integrate,138,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-64520821,9,['integrat'],['integrate']
Deployability,"It is possible that someone having trouble compiling qutip extensions may wish to set CFLAGS, CPATH, C_INCLUDE_PATH. Currently these would not be used in the qutip installation / building or extensions generally. I had a scenario where I was trying to install qutip on machines which I did not have sudo access on. They did not have cython or pydev. So I managed to install pydev and cython into the home folder. For the latter I had to set the C_INCLUDE_PATH to the local install of the C headers, or maybe I used the -I switch with CFLAGS. This did not work for qutip, so I made some changes to the `setup.py` files, and also the `pyximport` in `__init__.py`. However, none of it worked due to disk space issues in the end. Clearly, if there had been enough disk space, then Anaconda would have been a much better solution. So, the question are: ; 1. Is there any value in making a PR from the changes I made (in a local copy) to use the CFLAGS, CPATH, C_INCLUDE_PATH env vars if they are set?. 2. If so should the qutip pyximport extend or prepend the CFLAGS or should it not set CFLAGS at all if the user has set values?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/571:164,install,installation,164,https://qutip.org,https://github.com/qutip/qutip/issues/571,4,['install'],"['install', 'installation']"
Deployability,It is possible to do any release. I just did master for testing.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/279#issuecomment-65757704:25,release,release,25,https://qutip.org,https://github.com/qutip/qutip/pull/279#issuecomment-65757704,1,['release'],['release']
Deployability,"It is there because one has to build all the cython modules in the cy folder. Since cython is used for time dependent stuff, we stopped packaging the c code itself and just let the user build it since cython is a required package. > On Mar 4, 2016, at 10:05, Alexander Pitchford notifications@github.com wrote:; > ; > There is a section in qutip/init.py that checks the cython version, then re cythonizes all the pyx. It prints a warning if cython is not found. So after install, during which all the cython modules get built, during the first import of qutip all the building happens again. This seems unnecessary, and is actually an issue if we are making a pre-built package. I have patched out this section in the conda-forge feedstock. All but 7 of the tests are successful.; > ; > Cython is not actually needed at run time for most of QuTiP. Why is it sometimes needed at runtime?; > ; > Should we look remove this section from the init.py, and put some warning in the methods that use cython at runtime?; > ; > —; > Reply to this email directly or view it on GitHub.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/448#issuecomment-192387820:471,install,install,471,https://qutip.org,https://github.com/qutip/qutip/issues/448#issuecomment-192387820,2,"['install', 'patch']","['install', 'patched']"
Deployability,"It looks like the mcsolve tests hang if the interpolate tests are run. This is probably related to the use of multiprocessing / mcsolve inside both. Update: Actually, the mcsolve tests are hanging periodically even without the interpolate tests.; Further update: It seems to be the test `TestConstantCollapse::test_states_and_expect[string]` that hangs, so perhaps it is related to compiling Cython functions on the fly while running mcsolve?; Furtherer update: I'm trying removing the unused imports in mcsolve. This shouldn't really make a difference but with multiprocessing who knows, so it seems worth a try.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1854#issuecomment-1097121753:149,Update,Update,149,https://qutip.org,https://github.com/qutip/qutip/pull/1854#issuecomment-1097121753,3,"['Update', 'update']","['Update', 'update']"
Deployability,"It looks like this CI check was killed prematurely again. I'm not sure what is happening with Travis lately, but I suspect it's related to their move over to container-based deployment.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/359#issuecomment-129753540:174,deploy,deployment,174,https://qutip.org,https://github.com/qutip/qutip/pull/359#issuecomment-129753540,1,['deploy'],['deployment']
Deployability,"It looks like we are going to just go with installing dependencies with macports and do a pip install for qutip itself from here on out. This is already the procedure listed in the 3.1 docs. Therefore, I am going to close this issue if there are no other thoughts on the matter.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/283#issuecomment-67802461:43,install,installing,43,https://qutip.org,https://github.com/qutip/qutip/issues/283#issuecomment-67802461,2,['install'],"['install', 'installing']"
Deployability,"It now all fare similarly to 4.3.1. or considerably better, also when `e_ops` are given:. ### QuTiP 4.4 with this patch (updated):. * Case 1) Average states = False, Store States = True; **Real cell time: 17s (previously: 28.9s. version 4.3.1: 25s)**. * Case 2) Average states = False, Store States = False; Real cell time: 8s (previously: 18.64s. version 4.3.1: 11s). * Case 3) Average states = True, Store States = True; **Real cell time: 9s (previously: 23s. version 4.3.1: 65s)**. * Case 4) Default options; Real cell time: 8s (previously: 19s. version 4.3.1: 8s ). * Case 5) Average states = True, Store States = False; Real cell time: 8.7s (previously: 28s. version 4.3.1: 8.7s)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1024#issuecomment-504745846:114,patch,patch,114,https://qutip.org,https://github.com/qutip/qutip/pull/1024#issuecomment-504745846,2,"['patch', 'update']","['patch', 'updated']"
Deployability,"It probably depends on the C++ environment I guess? I just reinstalled qutip `dev.major`, ran the above script and saw; ```; cl : Command line warning D9025 : overriding '/W3' with '/w'; cl : Command line warning D9025 : overriding '/O2' with '/O1'; cqobjevo_compiled_coeff_117945645340.cpp; E:\Miniconda3\envs\qutip5\lib\site-packages\numpy\core\include\numpy\npy_1_7_deprecated_api.h(14) : Warning Msg: Using deprecated NumPy API, disable it with #define NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; Creating library C:\Users\Boxi\.pyxbld\temp.win-amd64-cpython-39\Release\Users\Boxi\.pyxbld\temp.win-amd64-cpython-39\Release\pyrex\cqobjevo_compiled_coeff_117945645340.cp39-win_amd64.lib and object C:\Users\Boxi\.pyxbld\temp.win-amd64-cpython-39\Release\Users\Boxi\.pyxbld\temp.win-amd64-cpython-39\Release\pyrex\cqobjevo_compiled_coeff_117945645340.cp39-win_amd64.exp; Generating code; Finished generating code; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1190#issuecomment-1171712449:565,Release,Release,565,https://qutip.org,https://github.com/qutip/qutip/issues/1190#issuecomment-1171712449,4,['Release'],['Release']
Deployability,"It seems like I could change or remove the option if I could find it. Here is a dump of my issue with setup.py: . $ sudo python setup.py install; Installing without the fortran mcsolver.; running install; running build; running config_cc; unifing config_cc, config, build_clib, build_ext, build commands --compiler options; running config_fc; unifing config_fc, config, build_clib, build_ext, build commands --fcompiler options; running build_src; build_src; building py_modules sources; building extension ""qutip.cy.spmatfuncs"" sources; building extension ""qutip.cy.stochastic"" sources; building extension ""qutip.cy.sparse_utils"" sources; building extension ""qutip.cy.graph_utils"" sources; building extension ""qutip.control.cy_grape"" sources; building data_files sources; build_src: building npy-pkg config files; running build_py; copying qutip/version.py -> build/lib.linux-armv7l-2.7/qutip; copying build/src.linux-armv7l-2.7/qutip/**config**.py -> build/lib.linux-armv7l-2.7/qutip; running build_ext; customize UnixCCompiler; customize UnixCCompiler using build_ext; building 'qutip.cy.spmatfuncs' extension; compiling C sources; C compiler: arm-linux-gnueabihf-gcc -pthread -fno-strict-aliasing -DNDEBUG -g -fwrapv -O2 -Wall -Wstrict-prototypes -fPIC. compile options: '-I/usr/lib/python2.7/dist-packages/numpy/core/include -I/usr/lib/python2.7/dist-packages/numpy/core/include -I/usr/lib/python2.7/dist-packages/numpy/core/include -I/usr/include/python2.7 -c'; extra options: '-w -ffast-math -O3 -march=native -mfpmath=sse'; arm-linux-gnueabihf-gcc: qutip/cy/spmatfuncs.c; arm-linux-gnueabihf-gcc: error: unrecognized command line option '-mfpmath=sse'; arm-linux-gnueabihf-gcc: error: unrecognized command line option '-mfpmath=sse'; error: Command ""arm-linux-gnueabihf-gcc -pthread -fno-strict-aliasing -DNDEBUG -g -fwrapv -O2 -Wall -Wstrict-prototypes -fPIC -I/usr/lib/python2.7/dist-packages/numpy/core/include -I/usr/lib/python2.7/dist-packages/numpy/core/include -I/usr/lib/python2.7/dist",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/309:137,install,install,137,https://qutip.org,https://github.com/qutip/qutip/issues/309,3,"['Install', 'install']","['Installing', 'install']"
Deployability,"It seems that over the last year, nearly all packages in the scientific Python ecosystem have started to provide wheels. This is great news, as it make installation on platforms that don't have the necessary compilers installed very easy, and it's also extremely fast. So far, `conda` has been the only realistic option to install qutip outside of Linux development workstation, and it's not without caveats (https://github.com/qutip/qutip/issues/674). Conda has also been getting extremely slow; (https://github.com/conda/conda/issues/7239), which causes problem with continuous integration services or readthedocs (together with the fact that setting up conda on these services isn't entirely trivial, and, for readthedocs, buggy: https://github.com/rtfd/readthedocs.org/issues/3925, https://github.com/rtfd/readthedocs.org/issues/3829). If qutip were to provide wheels, this might alleviate all of these problems. Depending on how complicated the process is compared compared to a conda package, it might then even be ok to drop conda support.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/933:152,install,installation,152,https://qutip.org,https://github.com/qutip/qutip/issues/933,5,"['continuous', 'install', 'integrat']","['continuous', 'install', 'installation', 'installed', 'integration']"
Deployability,"It seems that you are running qutip from the installation directory. You should change directories first. . > On Apr 28, 2016, at 08:47, lightning469 notifications@github.com wrote:; > ; > Hi,; > ; > AttributeError Traceback (most recent call last); > C:\Users\David Feng\Desktop\qutip-3.1.0\qutip\tests\test_wigner.py in (); > 37 from numpy.testing import assert_, run_module_suite, assert_equal; > 38 ; > ---> 39 from qutip.states import coherent, fock; > 40 from qutip.wigner import wigner; > 41 from qutip.random_objects import rand_dm, rand_ket; > ; > C:\Users\David Feng\Desktop\qutip-3.1.0\qutip__init__.pyc in (); > 60 qutip.settings.ipython = True; > 61 except:; > ---> 62 qutip.settings.ipython = False; > 63 ; > 64 # -----------------------------------------------------------------------------; > ; > AttributeError: 'module' object has no attribute 'settings'; > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly or view it on GitHub; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/469#issuecomment-215877900:45,install,installation,45,https://qutip.org,https://github.com/qutip/qutip/issues/469#issuecomment-215877900,1,['install'],['installation']
Deployability,"It seems the new macOS can not compile QuTiP, it can not find `<complex>`. The headers do present in `/usr/include` (however it required a header package installation on the new macOS)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/919:154,install,installation,154,https://qutip.org,https://github.com/qutip/qutip/issues/919,1,['install'],['installation']
Deployability,It seems to be caused by a new version of cython which affect which files are used for tests by nose. I made a patch.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/917#issuecomment-431498898:111,patch,patch,111,https://qutip.org,https://github.com/qutip/qutip/pull/917#issuecomment-431498898,1,['patch'],['patch']
Deployability,"It seems to work now (the failing test is unrelated). I will briefly summarize what I found out and changed. Setting up and using an MPI environment is surprisingly difficult, and I don't think it is in the scope of qutip to try and make that easier, or guide users to do that. The philosophy here is, if the user can get the `mpi4py.futures.MPIPoolExecutor` to work, then they can also use `mpi_pmap` in qutip. However, I did show in the tutorial notebook explicitly as an example how it works on the RIKEN cluster, and I refer to the mpi4py users guide. That being said, we do want to set up an automated test for this, and we do want to understand what went wrong in our initial attempts to set up those tests. The two main problems we encountered were (a) if mpi4py is installed with pip, all mpi_pmap calls hang; (b) if it is installed with conda, test_map_pass_error hangs sometimes.; The difference between pip and conda comes from the fact that mpi4py requires an MPI implementation. If we use mpi4py's GH workflow to install it with pip, it installs MPICH, and with conda, it installs OpenMPI by default. I noticed that in both cases where mpi_pmap hangs, there *are* error messages, but they are captured by pytest and then never printed because the program hangs... Regarding problem (a), in short, it looks like an MPICH bug to me. I thus decided to use OpenMPI instead, and added `conda install ""openmpi<5"" mpi4py` to just one of our test runs (the python 3.12 one). Regarding problem (b), the problem was that we requested more processes than the default number of slots available. With OpenMPI, the default number of slots available is the number of physical cpu cores (which seems to be 2 on the machine running our tests, leaving only one slot for a worker process). In the `parallel` module, if num_cpus is not provided, it defaults to `available_cpu_count()` (which is 4 on this machine, since there are 4 logical cpus). We could try to find a better default value for num_cpus for ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2296#issuecomment-1923102432:773,install,installed,773,https://qutip.org,https://github.com/qutip/qutip/pull/2296#issuecomment-1923102432,2,['install'],['installed']
Deployability,"It should be fixed with v5's release.; Now the documentation says that `c_ops` can be a list of `QobjEvo` or anything that can be interpreted as such, including functions.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2270#issuecomment-2028996738:29,release,release,29,https://qutip.org,https://github.com/qutip/qutip/issues/2270#issuecomment-2028996738,1,['release'],['release']
Deployability,"It was during fixing/changing the behaviour shown in 1808 that I first saw the issue. It seems now that I can change the qutip code, and to some degree at least it does compile, but the mentioned error still shows up in the terminal on running reload(qutip). Its likely that the error was there before I started modifying any files, and that I did not happen to spot it between all the lines jupyter tends to print in the terminal. It also shows up on my system after I force a fresh installation of qutip with no changes. It does not currently seem to stop me from doing anything, but I don't know what causes it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1810#issuecomment-1046958786:484,install,installation,484,https://qutip.org,https://github.com/qutip/qutip/issues/1810#issuecomment-1046958786,1,['install'],['installation']
Deployability,"It was my mistake; I removed the old install manually and compiled it again, now everything's fine. Thanks.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/126#issuecomment-42923244:37,install,install,37,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42923244,1,['install'],['install']
Deployability,It will be added it the next major release.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1990#issuecomment-1248613448:35,release,release,35,https://qutip.org,https://github.com/qutip/qutip/issues/1990#issuecomment-1248613448,1,['release'],['release']
Deployability,"It will be useful for solver feedback.; In v4 we can define Hamiltonian to depend on the state: `H(t, args, psi/rho)`.; We don't have it working in v5, but we will need to restore it before release.; This `_prepare` catch the time and state at the start of `matmul` and `expect` and update the arguments according to feedback.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2016#issuecomment-1302681575:190,release,release,190,https://qutip.org,https://github.com/qutip/qutip/pull/2016#issuecomment-1302681575,2,"['release', 'update']","['release', 'update']"
Deployability,"It would be really nice if qutip coud support the numba jit compiler (https://numba.pydata.org/) in some future releases. This would also enable, to perform calculations using the GPU very easily.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/900:112,release,releases,112,https://qutip.org,https://github.com/qutip/qutip/issues/900,1,['release'],['releases']
Deployability,"It's ""Cython version 0.20.1post0"" and the official release of QuTiP (2.2.0) I'm using.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/126#issuecomment-42849332:51,release,release,51,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42849332,1,['release'],['release']
Deployability,"It's fine to not split the PR in too many chunks.; Yes it's easier to review, but I don't want to have it half implemented/merged at release, which is coming soon.; You could just add `kron` here. The other can be implemented using matmul and can wait. It's fine to take some time. Just ping me when you want a re-review.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2314#issuecomment-1942727858:133,release,release,133,https://qutip.org,https://github.com/qutip/qutip/pull/2314#issuecomment-1942727858,1,['release'],['release']
Deployability,It's fixed in `master` with #1752. A patch should be released soon.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1766#issuecomment-1014616780:37,patch,patch,37,https://qutip.org,https://github.com/qutip/qutip/issues/1766#issuecomment-1014616780,2,"['patch', 'release']","['patch', 'released']"
Deployability,"It's in development. ; If you use qutip v5.0.0a2 on pypi or master branch here with [qutip-jax](https://github.com/qutip/qutip-jax), some solver can work on gpu. (We tested `sesolve` and `mesolve`, mcsolve should work, stochastic, HOEM, brmesolve don't.); The readthedocs of qutip-jax shows how to use it. qutip-jax is not up to date with the latest versions.; If you are interested in trying it, I will make it works with the latest jax version and qutip master.; Any and all feedback appreciated. We expect an official release of these features in March.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2320#issuecomment-1932348944:521,release,release,521,https://qutip.org,https://github.com/qutip/qutip/issues/2320#issuecomment-1932348944,1,['release'],['release']
Deployability,It's looking good but there are a few gate decompositions in the test notebook (i've updated and checked it in) that fails. It would be good if we could sort that out before merging this.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/145#issuecomment-45212370:85,update,updated,85,https://qutip.org,https://github.com/qutip/qutip/pull/145#issuecomment-45212370,1,['update'],['updated']
Deployability,"It's probably relevant that scipy 1.6.1 fixed some problems with sparse matrices (with COO format constructor), see https://docs.scipy.org/doc/scipy-1.6.1/reference/release.1.6.1.html including PR#13403 https://github.com/scipy/scipy/pull/13403",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1451#issuecomment-784228597:165,release,release,165,https://qutip.org,https://github.com/qutip/qutip/issues/1451#issuecomment-784228597,1,['release'],['release']
Deployability,"It's very clean, I really like the `set & set` and reusing the classes. But in v4, while we used `f(t, args)` in most examples, we never said that it should be the exact signature up to variable name, so I don't think it an appropriate check for which version to use. Ideally, the check should be good enough we don't need to change any tests not directly related to the addition of this feature. Also what should; ```; def f(t, w, a=1):; return a. coeff = coefficient(f, args={'w':1}); coeff.replace_arguments(a=2)(0); ```; give? Since `a` is not given, it's not our job to update it, or should we add it to `_f_arg_names`?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1633#issuecomment-894438481:575,update,update,575,https://qutip.org,https://github.com/qutip/qutip/pull/1633#issuecomment-894438481,1,['update'],['update']
Deployability,It's very likely that the Python you used to install QuTiP was not the one you used to import it. It can happen when several Python versions/environments are present (e.g. on a server).,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1391#issuecomment-735452873:45,install,install,45,https://qutip.org,https://github.com/qutip/qutip/issues/1391#issuecomment-735452873,1,['install'],['install']
Deployability,"Just a few comments:; * The changes in behavior are probably due to a different QuTiP version. Your `qutip.about()` output shows that you have installed version 5.0.3 on the one PC and version 4.6.2 on the other. Version 5 was recently released, and it is a major update and changes many of the internals of QuTiP. Old code should still work with version 5 in the majority of cases, but it is not guaranteed to always work. For old code, you might therefore prefer to use version 4 (the latest release of version 4 is v4.7.6).; * Your notebooks are rather long, and for a person who has not written them it can be hard to figure out what they do. If you would like to investigate in detail where the different behavior comes from, I would recommend to try to boil it down to a *short, self-contained* example script that gives different results in versions 4 and 5.; * The differing plots show values with a magnitude of $10^{-14}$ or so. That is rather small. By default, QuTiP's solvers use tolerances of $10^{-12}$, so you should not expect the numerical results to have a higher precision than that. In numerical calculations, it is generally recommended to rescale your units such that your parameters and results have a magnitude around $1$ if possible.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2501#issuecomment-2249560375:143,install,installed,143,https://qutip.org,https://github.com/qutip/qutip/issues/2501#issuecomment-2249560375,4,"['install', 'release', 'update']","['installed', 'release', 'released', 'update']"
Deployability,"Just a minor update where the diags of the sparse matrix are grabbed directly rather than converting the matrix to dense form. For larger density matrices, this method outperforms the dense method due to the time it takes to convert the format and do the multiplication.; - Also added more Wigner unit tests.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/527:13,update,update,13,https://qutip.org,https://github.com/qutip/qutip/pull/527,1,['update'],['update']
Deployability,Just a ping to @araza6 for any update. Cc @quantshah.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-633933697:31,update,update,31,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-633933697,1,['update'],['update']
Deployability,"Just a small additional comment, the ODE solver is probably slow in your case because of the large disparity in parameters (particularly the very large dephasing rate), which makes it a bit stiff I guess (and hence maybe why BDF works a little better than adams in this case?). I will close this issue, but if you have any comments/updates on improving the performance of your example, feel free to comment or re-open it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1591#issuecomment-900015271:332,update,updates,332,https://qutip.org,https://github.com/qutip/qutip/issues/1591#issuecomment-900015271,1,['update'],['updates']
Deployability,"Just a small comment in the meanwhile, might be instructive to run the code on ipython (on the terminal instead of jupyter), usually it gives the behavior of os.run() commands as well. Might help with installation of missing packages.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1185#issuecomment-601944385:201,install,installation,201,https://qutip.org,https://github.com/qutip/qutip/issues/1185#issuecomment-601944385,1,['install'],['installation']
Deployability,"Just adding my two cents. From my experience, a lot of our users don't know how to efficiently locate the error and find the solution. Simply posting a HOW-TO guide along with the release notes might not be sufficient, because the users may not be aware of its existence. It would help I think if we could; - raise an error or warning message that locates the error as clear as possible and; - if feasible, leave a link in the error/warning message directing the users to the HOW-TO guide.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1949#issuecomment-1179740053:180,release,release,180,https://qutip.org,https://github.com/qutip/qutip/issues/1949#issuecomment-1179740053,1,['release'],['release']
Deployability,Just found that installing through pip gave the same problem.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/690#issuecomment-298964798:16,install,installing,16,https://qutip.org,https://github.com/qutip/qutip/issues/690#issuecomment-298964798,1,['install'],['installing']
Deployability,"Just found what may have been the cause of the segfault. Incorrect indexing in `data.csr.Accumulator.gather` led to uninitialised memory being exposed if it encountered a zero value which in the current PR would only have been exposed by `Qobj.ptrace` on CSR to CSR, but by no fault of its own. This PR is ready for review - these last couple of patches I've just been sending could equally have gone to the next PR I'm preparing which is waiting for this one to be merged so I can rebase it on top of the new `dev.major`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1338#issuecomment-678399544:346,patch,patches,346,https://qutip.org,https://github.com/qutip/qutip/pull/1338#issuecomment-678399544,1,['patch'],['patches']
Deployability,"Just noticed this thread. . I can take a detailed look, perhaps with @arnelg as we recently updated the superoperator functions in 4.5. . My initial reaction is this is ""off label use"" of `vector_to_operator`. If so, then we can update the docs to make this point clear.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1204#issuecomment-641690849:92,update,updated,92,https://qutip.org,https://github.com/qutip/qutip/issues/1204#issuecomment-641690849,2,['update'],"['update', 'updated']"
Deployability,"Just to add that we also have operator evolution in the form. $$ \partial_t \begin{pmatrix} U \\\\ U' \end{pmatrix} = -i \begin{pmatrix} H & 0 \\\\ H' & H \end{pmatrix} \begin{pmatrix} U \\\\ U' \end{pmatrix}, $$. and similar with $U$ switched for a map and $H$ for some Lindblad superoperator, in goat, which seems to work fine in terms of the multiplication during the ODE update step. So, as suggested, it would seem that mainly we just want a nice, efficient method for constructing / extracting these objects.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2384#issuecomment-2046601871:375,update,update,375,https://qutip.org,https://github.com/qutip/qutip/issues/2384#issuecomment-2046601871,1,['update'],['update']
Deployability,"Just to get the ball rolling, I will go ahead and ask my question here and migrate it if necessary. . My code performs quantum annealing on a transverse-field Ising Hamiltonian as inspired by D-Wave Systems devices which is explained briefly [here](https://docs.dwavesys.com/docs/latest/c_gs_2.html), but the essential equation is; ![D-Wave-hamiltonian](https://user-images.githubusercontent.com/29308150/61193322-bdb48c00-a688-11e9-94ac-22c5d093b47a.png).; The A(s) and B(s) factors dictate the time-evolution from the initial Hamiltonian to the final Hamiltonian where s is a linear function of time, i.e. s(t) is linear with slope between 0 and some max and 0 <= s <= 1. In my code, my sesolve command looks like 'results = qt.sesolve(listH, init_state, discretized_times_list)' where 'listH = [[Hx, A(s(t))], [Hz, B(s(t))]]' and A(s(t)) and B(s(t)) and created by using QuTiP's interpolate.Cubic_Spline function that dictates what the A and B parameters should be at each point in time. . When I make successive calls, it is to do several different things. For example, I may change coupling (h and J) values to create a new spin-glass, adjust number of qubits (larger or smaller H), or anneal for a longer or shorter time. I am not sure how to directly relate this to what has been posted so far, but perhaps I am not fully understanding the point made in https://github.com/qutip/qutip/issues/966#issuecomment-474569011.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/966#issuecomment-511266095:21,rolling,rolling,21,https://qutip.org,https://github.com/qutip/qutip/issues/966#issuecomment-511266095,1,['rolling'],['rolling']
Deployability,"Just to make sure, but I guess you already restarted the console after everything is installed?. If you got the pdf, then the LaTeX part is working. Have you tried to use the ImageMagick command to convert the pdf to png yourself?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1888#issuecomment-1112216929:85,install,installed,85,https://qutip.org,https://github.com/qutip/qutip/issues/1888#issuecomment-1112216929,1,['install'],['installed']
Deployability,Krylov as an integrator,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1986:13,integrat,integrator,13,https://qutip.org,https://github.com/qutip/qutip/pull/1986,1,['integrat'],['integrator']
Deployability,"Last review re-request, hopefully. I think everything's correct and ready now. 1. I had forgotten to build the sdist here, so it would have been missing from the pip package. That's fixed now.; 2. It's harder than you might expect to quickly fail all jobs in a GitHub Actions workflow right now. It seems that they expect you to try and continue for as long as possible for jobs on different runners, so I had to make everything depend on the confirmation verification to get the fail-fast behaviour.; 3. Hopefully neatened up the language we've been talking about.; 4. Removed installation of unnecessary VC++ tools for Python 2.7 on Windows.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1465#issuecomment-807184002:578,install,installation,578,https://qutip.org,https://github.com/qutip/qutip/pull/1465#issuecomment-807184002,1,['install'],['installation']
Deployability,"Last week we added numpy 2 support but did not update the requirements in `setup.cfg`. This update dependency to build using numpy 2 instead of oldest-supported-numpy.; I also increased the minimum requirements for matplotlib and scipy to version tested. I added more test using numpy 2, only one tests build and run using numpy 1.X.; I added more windows / mac tests. Using these os for testing numpy versions and no cython.; `cvxopt` (`dnorm`) does not run with numpy 2 yet, so it's only tested with older numpy version. Fix sqrtm needing copy. This mean that the test intended to run with numpy 2 previouly did not...",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2457:47,update,update,47,https://qutip.org,https://github.com/qutip/qutip/pull/2457,2,['update'],['update']
Deployability,"Let me look at this tonight. I have uploaded the spline interp method, and just need to integrate it with the solvers. I have done something similar elsewhere so it should be straightforward (provided I find the time). The nonlinear list is also easy to incorporate, for SciPy 0.18+, so I think that there interp methods will replace the array based format in the future.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/520#issuecomment-245346539:88,integrat,integrate,88,https://qutip.org,https://github.com/qutip/qutip/pull/520#issuecomment-245346539,1,['integrat'],['integrate']
Deployability,Let me make some updates before review.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/291#issuecomment-66950762:17,update,updates,17,https://qutip.org,https://github.com/qutip/qutip/pull/291#issuecomment-66950762,1,['update'],['updates']
Deployability,"Looking at it, the issue is in `sesolve` which is called by `mesovle` when no `c_ops` are passed. It save the Hamiltonian in the results. If you do; ```; if hasattr(out, 'SolverSystem'):; out.SolverSystem = None; ```; before pickling, it should work. But I would suggest to extract the states as numpy arrays and use `numpy.save`. With it, the data should stay readable even if you update numpy or python, while any qutip (or scipy) update could make it impossible to unpickle `Qobj`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1684#issuecomment-934345372:382,update,update,382,https://qutip.org,https://github.com/qutip/qutip/issues/1684#issuecomment-934345372,2,['update'],['update']
Deployability,"Looking at the docs `requirements.txt`, it looks like the docs build failing is an indication that your build process isn't correct. The docs requirements is a pinning file that's now quite old, so it still has Numpy 1.19. That fails, which indicates your build is using a too-new version of Numpy. You probably want to update the docs requirements pins, but equally you probably want to add a CI test case that deliberately uses Numpy <1.20 on Python 3.7 or 3.8 to ensure that your build is correct.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1735#issuecomment-989840346:320,update,update,320,https://qutip.org,https://github.com/qutip/qutip/pull/1735#issuecomment-989840346,1,['update'],['update']
Deployability,"Looking good, could you add the file `doc/change/2103.misc` containing a short description of the changes.; We use it to make sure we don't forget contributions when making release documentation.; See https://qutip.org/docs/latest/development/contributing.html#changelog-generation",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2103#issuecomment-1451965023:173,release,release,173,https://qutip.org,https://github.com/qutip/qutip/pull/2103#issuecomment-1451965023,1,['release'],['release']
Deployability,"Looking great, good job! . Just a few minor problems with the unit tests:; - use .np.array on line 214 in random_objects.py; - I get errors like ""AttributeError: 'numpy.ndarray' object has no attribute 'H'"". We need to use numpy.matrix instead of numpy.ndarray if .H is to be used.; - line 57 insuperop_reps: ""inpt=q_oper.data.reshape([sqrt_shape] \* 4)."" gives an error because q_oper.data is csr sparse matrix and does not implement reshape. I guess that the unit tests work on your system (maybe some version differences of numpy/scipy), so I'll go ahead and merge this PR now, and try to fix the unit test problems I get here. Just go ahead and make a new PR if there is anything else that you want to add or update. We really appreciate your contribution!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/22#issuecomment-18782823:713,update,update,713,https://qutip.org,https://github.com/qutip/qutip/pull/22#issuecomment-18782823,1,['update'],['update']
Deployability,"Looking into the function `_mc_alg_evolve` in the source code of mcsolve, I have two questions in mind:; 1. Why do you divide the interval into each `tlist[k]` (`while ODE.t < tlist[k]:`) and run the ode internal step `ODE.integrate(tlist[k], step=1)` one at a time and evaluate `if norm2_psi <= rand_vals[0]:`?; Alternatively, can I run the ode `ODE.integrate(tlist, step=n)` without collapse until `norm2_psi <= rand_vals[0]`? It seems to be faster if `ODE.integrate(tlist, step=n)` can store the state. In this way I ignore `tlist[k]` totally.; 2. After `if norm2_psi <= rand_vals[0]:`, you find the collapse time to within specified tolerance. Can I just take the collapse time as the time immediately after `ODE.integrate(tlist[k], step=1)`? Since the step in the `ODE` should be small enough, would it make a lot difference by ignoring the steps of finding the collapse time to within specified tolerance?. Thank you very much.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/503:223,integrat,integrate,223,https://qutip.org,https://github.com/qutip/qutip/issues/503,4,['integrat'],['integrate']
Deployability,"Looks cool, you can make the PR against the master branch. We do not have a; dev branch. On Mon, 22 Jul 2019 at 19:14, Michael Goerz <notifications@github.com>; wrote:. > Sorry.. got a little distracted, and wanted to check the contributing; > guidelines on what branch to make the pull request against. Currently it’s; > master. Is that ok? If yes, I’ll undraft it.; >; > Draft PRs are pretty new, and a very nice way to kick off the Continuous; > Integration. Like in this case, I wanted to check if any of the tests; > involve that message. As they don’t, this actually is ready to go.; >; > —; > You are receiving this because you were mentioned.; >; >; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/pull/1049?email_source=notifications&email_token=ABVFIBCN7YWP77NBJVTZA2LQAXTJDA5CNFSM4IEC7VHKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD2QRIRA#issuecomment-513872964>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/ABVFIBHWIDKPIYAU6NMZXILQAXTJDANCNFSM4IEC7VHA>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1049#issuecomment-513873973:435,Continuous,Continuous,435,https://qutip.org,https://github.com/qutip/qutip/pull/1049#issuecomment-513873973,2,"['Continuous', 'Integrat']","['Continuous', 'Integration']"
Deployability,"Looks good in general. Will have a closer test later today. There are some unnecessary style changes to other parts of the code. Especially `'` to `""` was quite unnecessary... It is not massive but it makes it a bit hard to identify which is the essential change. How hard is it to revert the changes of `'` to `""`? Other styling updates like removing unused importations are fine.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2442#issuecomment-2145262488:330,update,updates,330,https://qutip.org,https://github.com/qutip/qutip/pull/2442#issuecomment-2145262488,1,['update'],['updates']
Deployability,"Looks like it's resolved now (unless documentation should be updated on how to use the --with-openmp option with the new build method. I'm not sure if end users should now be using wheels builds). Both `--config-setting=""--global-option=--with-openmp""` and `--config-setting=""--build-option=--with-openmp""` achieve a wheels (PEP517) build and `python -c ""import qutip; qutip.about()""` reports `OPENMP Installed: True` for both python3.10 and python 3.11. `--global-option` gets a warning message:; ```; $ python3.10 -m build --skip-dependency-check --no-isolation --wheel --outdir /projects/misc/build/qutip/.pybuild/cpython3_3.10_qutip --config-setting=""--global-option=--with-openmp""; * Building wheel...; /usr/lib/python3/dist-packages/setuptools/build_meta.py:307: SetuptoolsDeprecationWarning: ; The arguments ['--with-openmp'] were given via `--global-option`.; Please use `--build-option` instead,; `--global-option` is reserved to flags like `--verbose` or `--quiet`.; ; warnings.warn(msg, SetuptoolsDeprecationWarning); ...; ```; So it's saying we should be using `--build-option` not `--global-option`",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1875#issuecomment-1368866726:61,update,updated,61,https://qutip.org,https://github.com/qutip/qutip/issues/1875#issuecomment-1368866726,2,"['Install', 'update']","['Installed', 'updated']"
Deployability,"Looks like there were breaking changes introduced in CVXPY 1.1 that changed some sort of matrix handling? I think the entirely of the `dnorm` function was written by Chris Granade about 5 years ago, and they're off at Microsoft now. As an immediate workaround, you can pin the version of CVXPY in conda to 1.0 (`conda install 'cvxpy=1.0'`) to fix it. Otherwise, probably there's a solution in swapping over a load of `*` to `@` in `qutip/semidefinite.py` and `qutip/metrics.py`, but that might be a bit nontrivial to solve. If you succeed, please do make a pull request. The reason that the ""simple"" cases work is that QuTiP detects them as known results and has fast paths avoiding `cvxpy`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1422#issuecomment-764772713:318,install,install,318,https://qutip.org,https://github.com/qutip/qutip/issues/1422#issuecomment-764772713,1,['install'],['install']
Deployability,"MESolver`, `SSESolver`. The main change is that the options used to be passed as keywords (`**kwargs`) and are now passed as an options dict.; - `m_ops` and `dW_factors` are properties of the classes, but not available to overwrite through the function interface. ; - The multiples end condition (`target_tol`, `timeout`) are added.; - The `solver` keyword is now `method` options, as it is in other solver.; - The method that was referring the homodyne or heterodyne detection is now the `heterodyne` keyword. ie before `method=""heterodyne""` now `heterodyne=True`.; - The default integration method is now `rouchon`, instead of `taylor1.5`. ie the method coming from a physic paper and not a mathematics textbook. . - The stochastic integration methods have been spitted in smaller chunk instead of the huge classes in _stochastic.pyx. I kept most methods, only skipping the taylor order 2.0 method. The python interface is kept very similar to the `Integrator` as `SIntegrator`, the main difference being that `set_state` and `get_state` use an extra random number generator with the time and state. The integration methods are usually 5%~10% slower than they where for medium size problems (shape ~100). Most method are computed the same way as before, but the rouchon method no longer use super operator, but keep the density matrix as a matrix and not an oper-ket. - The derivative computation for used by the integration method has also been split into multiple functions and made only available for `smesolve`. For there methods to be valid, the each diffusion contribution must commute. For `smesolve`, this means that each `sc_ops` must commute, as documented. For `ssesolve`, each `sc_ops` must not only commute, but also commute with other `sc_ops`'s adjoint, this last part being missing from v4's documentation. It also meant that the sc_ops needed to commute with it's own adjoint when using heterodyne detection... - `ssepdpsolve`, `smepdpsolve`, `photocurrent_mesolve`, `photocurrent_s",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2131:1128,Integrat,Integrator,1128,https://qutip.org,https://github.com/qutip/qutip/pull/2131,1,['Integrat'],['Integrator']
Deployability,"MacOS Mojave deliberately deleted the `user/include` folder so when compiling cython code, gcc cannot find the headers. I struggled a bit after suddenly updating to the latest MacOS and could find the solution here:. https://programmer.help/blogs/how-to-resolve-pip-install-twisted-error-limits.h-no-such-file-or-directory.html. Just do . ```; open /Library/Developer/CommandLineTools/Packages/macOS_SDK_headers_for_macOS_10.14.pkg; ```. In case others also update and end up with this error. @nathanshammah",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1030:266,install,install-twisted-error-limits,266,https://qutip.org,https://github.com/qutip/qutip/issues/1030,2,"['install', 'update']","['install-twisted-error-limits', 'update']"
Deployability,"Made another quick change. We know from Prop. 3.44 of (Watrous, 2018) that the diamond norm of CPTP channel is 1. So I added a quick `if` statement that checks this. Also refactored `dnorm` so there's only one return statement to make code climate happy. Looks like it's unhappy with something else and maybe made the logic harder to follow. Please advise if you have a preference. Again, can't really run tests locally, so approving the CI pipeline would be fantastic.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2416#issuecomment-2098903691:441,pipeline,pipeline,441,https://qutip.org,https://github.com/qutip/qutip/pull/2416#issuecomment-2098903691,1,['pipeline'],['pipeline']
Deployability,Manual integration in floquet.floquet_master_equation_rates fail sometimes,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/767:7,integrat,integration,7,https://qutip.org,https://github.com/qutip/qutip/issues/767,1,['integrat'],['integration']
Deployability,"Many thanks! I solved it!; Now I have this WARNING:matplotlib.animation:MovieWriter avconv; unavailable. Trying to use pillow instead.; *Many thanks*. *P**arfait Atchadé*. *Tel Spain: 0034661205543*; *Tel Deutsch: 00491706659017*. On Wed, 9 Dec 2020 at 15:45, Jake Lishman <notifications@github.com> wrote:. > You'll find it easier installing from conda-forge, since we distribute; > binary releases there: see the installation guide; > <http://qutip.org/docs/latest/installation.html> here.; >; > If you want to install from source using pip, you need to configure your; > C++ development environment correctly - you'll probably need to enable the; > XCode command-line tools (see e.g. this; > <https://osxdaily.com/2014/02/12/install-command-line-tools-mac-os-x/>).; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/1404#issuecomment-742038577>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AGKQN3YYS6ZYMTV4HEHFTELST7OW3ANCNFSM4UT7TWQQ>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1404#issuecomment-742050650:332,install,installing,332,https://qutip.org,https://github.com/qutip/qutip/issues/1404#issuecomment-742050650,6,"['install', 'release']","['install', 'install-command-line-tools-mac-os-x', 'installation', 'installing', 'releases']"
Deployability,"Matplolib 3.9 (released 20h ago) is not imported properly in python 3.9:; https://github.com/qutip/qutip/actions/runs/9118045396/job/25070276189; ```; $ conda list; ...; loky 3.4.1 pypi_0 pypi; matplotlib 3.9.0 pypi_0 pypi; matplotlib-inline 0.1.7 pypi_0 pypi; ...; $ python -c ""import qutip; qutip.about()""; /home/runner/work/qutip/qutip/qutip/__init__.py:24: UserWarning: matplotlib not found: Graphics will not work.; ```; In master we no longer support python 3.9, so for the micro release I just set an upper limit on the matplotlib version in python 3.9 tests.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2429#issuecomment-2116072715:15,release,released,15,https://qutip.org,https://github.com/qutip/qutip/pull/2429#issuecomment-2116072715,2,['release'],"['release', 'released']"
Deployability,Matplotlib update broke qpt_plot_combined,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2233:11,update,update,11,https://qutip.org,https://github.com/qutip/qutip/issues/2233,1,['update'],['update']
Deployability,Maybe we can change the base branch to master. Never did it before but it seems straightforward https://help.github.com/en/articles/changing-the-base-branch-of-a-pull-request and then update qip opt branch.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1025#issuecomment-505045224:184,update,update,184,https://qutip.org,https://github.com/qutip/qutip/pull/1025#issuecomment-505045224,1,['update'],['update']
Deployability,"Merged!; Thank you Alberto. If you want to continue contribute on it: add support for independent `L_m` and `L_p`.; Or update it for v5, presently the `dev.major` branch, we would really appreciate.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1660#issuecomment-929203460:119,update,update,119,https://qutip.org,https://github.com/qutip/qutip/pull/1660#issuecomment-929203460,1,['update'],['update']
Deployability,"Merged. > I changed the merge target from `qutip-5.0.X` to `master`. The `qutip-...` branches are for released version. Could you merge the current master branch, we added fixes for the new numpy, scipy version and it should help tests to passes. Merged my qutip-5.0.X to master",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2140#issuecomment-1610357858:102,release,released,102,https://qutip.org,https://github.com/qutip/qutip/pull/2140#issuecomment-1610357858,1,['release'],['released']
Deployability,"Merging since this looks straight forward and it would be good to have it for the 4.7.1 release, but would appreciate post-merge review.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2043#issuecomment-1345288271:88,release,release,88,https://qutip.org,https://github.com/qutip/qutip/pull/2043#issuecomment-1345288271,1,['release'],['release']
Deployability,"Minimal script to reproduce the error that only uses numpy:; ```; # On a CPU with AVX512 extensions and numpy 1.21.2:; # (only tested on Ubuntu); # It works again on numpy 1.21.4 (and maybe 1.21.3 -- I did not check because 1.21.3 was not conda installable). import numpy as np. L = np.diag([1+0j, 1, 1, 1]); b = np.array([1+0j, 0, 0, 0]). # commenting out the line below makes everything work, with it solve returns nans.; np.exp(0); # breakpoint(). v = np.linalg.solve(L, b); np.testing.assert_allclose(v, b); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1694#issuecomment-967000449:245,install,installable,245,https://qutip.org,https://github.com/qutip/qutip/pull/1694#issuecomment-967000449,1,['install'],['installable']
Deployability,Minor homebrew script update,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/284:22,update,update,22,https://qutip.org,https://github.com/qutip/qutip/pull/284,1,['update'],['update']
Deployability,Minor updates to guide overview and guide basic operations,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1757:6,update,updates,6,https://qutip.org,https://github.com/qutip/qutip/pull/1757,1,['update'],['updates']
Deployability,"Most of it is already in qutip or in development:; - We already have a progress bar.; - We have feedback to support solvers where parameters are changed depending on the current state. Those should not updated at each time-step, but included in the rhs. Otherwise, it will increase runtime and often the numerical error. We mostly use multistep method (Adams and BDF) which are particularly sensible to that.; - In my rework of `mcsolve`, I'm including the capacity to stop after a certain time, (already merged) and after the error bar gets under a certain tolerance. I have not though an equivalent for `me/sesolve` would be needed but it would be simple enough to add. We could have function that takes the expect value and tell the solver to stop or continue. ; - I was thinking of adding the ability to step through the evolution (draft in #1455):; ```; solver = MeSolver(H, c_ops, options=opt); solver.start(t0, rho0); for t in [t1,t2, ...]:; rho_t = solver.step(t, args=new_args); ```; Which would work like a `yield`:; ```; solver = MeSolver(H, c_ops, options=opt); for rho_t in solver.yield_run(rho0, tlist):; if needed:; solver.update_parameter(args=new_args); ```; I prefer using steps since you don't have do define `tlist` first, you could use it in a `while True` loop or interactively.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-858740451:202,update,updated,202,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-858740451,1,['update'],['updated']
Deployability,"Most recent macOS Big Sur version change the output of command. ```bash; $ sysctl -n machdep.cpu.brand_string; Apple M1; ```. The output does not contains information about the frequency of CPU. To fix this problem, I use command . ```bash; $ sysctl hw.cpufrequency; hw.cpufrequency: 2400000000; ``` . The updated code should be able to get cpu frequency correctly.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1401#issuecomment-751540091:306,update,updated,306,https://qutip.org,https://github.com/qutip/qutip/pull/1401#issuecomment-751540091,1,['update'],['updated']
Deployability,"Move compiler to a separate package. The new code climate issues are all from there. After #1074 get merged, one has to update all the `qutip.qip.gates` to `qutip.qip.operations` in this PR. Everything else should be fine.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1155#issuecomment-578532075:120,update,update,120,https://qutip.org,https://github.com/qutip/qutip/pull/1155#issuecomment-578532075,1,['update'],['update']
Deployability,"My current understanding is that if NumPy is installed but not Cython, then when `egg-info` is called, NumPy distutils will happily follow `add_subpackage` to pull in `qutip/cy/setup.py`, then choke on the missing Cython dependency. On the other hand, if both are missing, the new fallbacks introduced in this PR will be tripped, such that the `add_subpackage` call will not happen, and `qutip/cy/setup.py` will not get called. I'll readily admit that NumPy but not Cython is an edge case, but it's one that we can probably deal with by trying to import Cython at the top and letting the `ImportError` branch us onto the fallback path. Thoughts?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/489#issuecomment-225778916:45,install,installed,45,https://qutip.org,https://github.com/qutip/qutip/pull/489#issuecomment-225778916,1,['install'],['installed']
Deployability,"My guess is it is a side effect of using the step function time-dependence. Instead, try a tanh, or other continuous and differentiable approximation, and see if that works.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/771#issuecomment-338078907:106,continuous,continuous,106,https://qutip.org,https://github.com/qutip/qutip/issues/771#issuecomment-338078907,1,['continuous'],['continuous']
Deployability,"Nevermind, sorry I was being stupid. Changed the integrator tolerance and it work :/.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1492#issuecomment-815315471:49,integrat,integrator,49,https://qutip.org,https://github.com/qutip/qutip/issues/1492#issuecomment-815315471,1,['integrat'],['integrator']
Deployability,New Integrator methods,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1644:4,Integrat,Integrator,4,https://qutip.org,https://github.com/qutip/qutip/pull/1644,1,['Integrat'],['Integrator']
Deployability,"New information:; I ran the same script on another PC and it reproduced the same result as 3 years ago. Also, I didn't encounter the same importing problem as reported in #2500 .; I am reproducing the qutip.about() output below for this other PC:. ```; QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman and Simon Cross.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.6.2; Numpy Version: 1.21.5; Scipy Version: 1.7.3; Cython Version: None; Matplotlib Version: 3.5.1; Python Version: 3.9.9; Number of CPUs: 8; BLAS Info: Generic; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Windows (AMD64); Installation path: C:\Users\ychao\Anaconda3\envs\qutip-env\lib\site-packages\qutip; ================================================================================; Please cite QuTiP in your publication.; ================================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2501#issuecomment-2249532978:985,Install,Installed,985,https://qutip.org,https://github.com/qutip/qutip/issues/2501#issuecomment-2249532978,2,['Install'],"['Installation', 'Installed']"
Deployability,"New schemes for the options. All options's default value can be set and seen in qutip.settings:; ```; >>> from qutip import settings; >>> settings.solver[""atol""] = 1e-10; >>> settings.core[""auto_tidyup""] = False; >>> settings.solver.mcsolve[""norm_tol""] = 1e-4; >>> settings.save(); >>> print(qutip.settings); qutip.settings.install:; debug : False; log_handler : 'default'; colorblind_safe : False; tmproot : '/home/eric/.qutip/coeffs'; mkl_lib : None; has_mkl : False; ipython : True; _logger : <Logger qutip.installsettings (WARNING)>; eigh_unsafe : False. qutip.settings.core:; auto_tidyup : False; auto_tidyup_dims : True; auto_herm : True; atol : 1e-12; auto_tidyup_atol : 1e-12; ...; ```. The main changes are; - `settings` is an object in `qutip/settings.py`.; - Actual options are accessed as dictionary values instead of attributes.; - `settings`'s values are read from qutiprc at import.; - Easy saving of settings; - `reset` function as described in documentation but not available yet.; - solver `Options` renamed and split, some options removed (`rhs_with_state`, ...). @jakelishman, I commented out most of the openmp stuff, I expect you to pass behind me and clean when you re-implement it.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1337:324,install,install,324,https://qutip.org,https://github.com/qutip/qutip/pull/1337,2,['install'],"['install', 'installsettings']"
Deployability,"Nice, this is great. Perhaps someone with working conda environment for windows could build binary qutip packages for windows using conda-recipes/qutip and upload to binstar (now anaconda cloud?), for example here:. https://anaconda.org/jrjohansson/qutip/files. It would be nice with binary builds for all platform there (or rather, we should create a new official qutip project account on binstar), so that it would be possible to install qutip on any platform in the same way by specifying the binstar channel. . Since conda is taking over the scientific python community with storm, I think we should even consider discontinuing debian, macports, brew as installation option and only promote conda and pypi. As it is now we have too many installation options, and I think it confuses users more than it helps.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-150410961:432,install,install,432,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-150410961,3,['install'],"['install', 'installation']"
Deployability,Nice. Also update 'gate_expand_3toN' to take an argument 'controls' instead of 'control1' and 'control2'. The unit tests in 'qutip.tests.test_gate.py' also need to be updated.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/136#issuecomment-44073618:11,update,update,11,https://qutip.org,https://github.com/qutip/qutip/pull/136#issuecomment-44073618,2,['update'],"['update', 'updated']"
Deployability,No errors from the following:; ```; try:; from qutip import *; from qutip.qip import *; except ImportError:; !pip install --quiet qutip--4.7.5 qutip-qip; from qutip import *; from qutip.qip import *; ```,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2334#issuecomment-1962951064:114,install,install,114,https://qutip.org,https://github.com/qutip/qutip/issues/2334#issuecomment-1962951064,1,['install'],['install']
Deployability,"No worries! Re-merging pull requests with master is frequently necessary, no problem at all. Thanks for the updates! It looks all fine as far as I can tell without running tests. Is this merge ready from your point of view?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/294#issuecomment-67725094:108,update,updates,108,https://qutip.org,https://github.com/qutip/qutip/pull/294#issuecomment-67725094,1,['update'],['updates']
Deployability,"No worries, I just wanted to get it merged so that I could pull it into the qutip-3.1.X branch and start preparing release files.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/297#issuecomment-68322113:115,release,release,115,https://qutip.org,https://github.com/qutip/qutip/pull/297#issuecomment-68322113,1,['release'],['release']
Deployability,"No, I don't know what exactly caused this. All operation are through `Qobj`. Maybe `tidyup` have some effect.; But testing for a pure `0` with floating number is never a good idea. Which test do you think we should update. `test_quantumcircuit` is testing what it should.; `test_measurement` tests case which have `0` probabilities with `np.testing.assert_almost_equal`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1656#issuecomment-917054484:215,update,update,215,https://qutip.org,https://github.com/qutip/qutip/pull/1656#issuecomment-917054484,1,['update'],['update']
Deployability,"No, I guess we never did, at least not on `master`. I've updated this PR to do both.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1414#issuecomment-754585483:57,update,updated,57,https://qutip.org,https://github.com/qutip/qutip/pull/1414#issuecomment-754585483,1,['update'],['updated']
Deployability,"No, `dtype` should always be respected, even for jax.; So the default need to be changed.; One options would be to set `dtype=None` for the default and then if it's `None` and sparse, then use dense. (+ update the docstring and tests.); Another options would be to remove the `dtype` parameter and replace it with `sparse` like `eigenenergies`. But I would like to keep support for both for a while has we should no introduce breaking change outside of major release which won't come anytime soon (detect if the user input a dtype and warn it in that case, but still give him his intended behaviour.)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2484#issuecomment-2231753388:203,update,update,203,https://qutip.org,https://github.com/qutip/qutip/pull/2484#issuecomment-2231753388,2,"['release', 'update']","['release', 'update']"
Deployability,"No, if `test` is used for the branch name, it will still deploy to testpypi. Both `deploy to ...` jobs were cut and pasted with only 2 lines changed so I merged them so we don't forget to update one without the other. I also added more feedback to the job that would show uploaded files even for a dry run.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2477#issuecomment-2199969342:57,deploy,deploy,57,https://qutip.org,https://github.com/qutip/qutip/pull/2477#issuecomment-2199969342,3,"['deploy', 'update']","['deploy', 'update']"
Deployability,"No, it was deliberate. I added these in as part of the 4.0 release. They need to be distributed with the pip installer, otherwise it cannot build. At least that is why I added them in.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/653#issuecomment-283903360:59,release,release,59,https://qutip.org,https://github.com/qutip/qutip/pull/653#issuecomment-283903360,2,"['install', 'release']","['installer', 'release']"
Deployability,"No, see this commit; https://github.com/numpy/numpy/pull/5597; which enabled it.; Hence, it will be a problem for future numpy versions as well. Sure you can do whatever you want with the options, or you could do a; double option,. opts = get_info('lapack_opt',0); opts2 = get_info('qutip',0); opts.update(opts2). or something alike, that should be your decision.; The above would enable a specific [qutip] block in the site.cfg which; localizes settings ;). 2015-11-08 22:06 GMT+01:00 Chris Granade notifications@github.com:. > Does this change break when using extra_link_args on NumPy ≤ 0.10.1?; > Also, should extra_link_args here be allowed to override site.cfg? It; > might be good to do a newblas.update() to allow users to explicitly pass; > compile args for qutraj_run that differ from site.cfg.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/qutip/qutip/issues/392#issuecomment-154871830. ## . Kind regards Nick",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/392#issuecomment-154875854:299,update,update,299,https://qutip.org,https://github.com/qutip/qutip/issues/392#issuecomment-154875854,2,['update'],['update']
Deployability,"No, this PR include #990. ; Once This is merged, only the updated citation (Phys. Rev. A 91, 012118, (2015).) will be left to merge from #990.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/991#issuecomment-498737855:58,update,updated,58,https://qutip.org,https://github.com/qutip/qutip/pull/991#issuecomment-498737855,1,['update'],['updated']
Deployability,"No, we usually have no problem on linux. How did you install it? `pip`, `python setup.py install`? Did you have a prior installation? Some time, if you install qutip without openmp but installed it previously with openmp there are errors.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1205#issuecomment-600635973:53,install,install,53,https://qutip.org,https://github.com/qutip/qutip/issues/1205#issuecomment-600635973,5,['install'],"['install', 'installation', 'installed']"
Deployability,"Not a complete switch-over to `CSR` from `fast_csr_matrix`, but this goes a really long way to achieving that. `Qobj` is done completely, but `QobjEvo` is pretty difficult to disentangle, and that really slowed me down a lot, and I'm not at all sure I've got it right there yet. OpenMP is ignored for now as low-priority. We'll need to get it working before a QuTiP 5.0 release, but I'm not working on it at the moment. `CQobjEvo` has been absolutely stripped bare. All its variants are gone, since the data layer types will handle this instead. `QobjEvo` is basically managed by shim at the moment, and needs a huge tidy up to bring it up to speed with the new data layer, and keep it maintainable. The data layer types have been taught to pickle themselves safely and automatically, and so consequently `QobjEvo` is magically pickle-able (aside from the OpenMP types). This PR includes all the commits from #1296 as well, but it's still a pretty giant PR as it stands right now. The tests won't pass yet, because I haven't finished converting everything.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1328:370,release,release,370,https://qutip.org,https://github.com/qutip/qutip/pull/1328,1,['release'],['release']
Deployability,Not installing cvxpy will do this.; This is to deal with #880,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/881:4,install,installing,4,https://qutip.org,https://github.com/qutip/qutip/pull/881,1,['install'],['installing']
Deployability,"Not really much to add, except that if it were possible to try a fresh; install of anaconda, and maybe python 3.6, but that is just guessing.; Probably an install from source is better on linux any way.; The conda packages were mainly developed for users with issues compiling; (i.e. on Windows). Though things have moved on so much since we started; trying that as a solution. On 26 March 2017 at 02:01, Paul Nation <notifications@github.com> wrote:. > Oh sorry, I thought you were reporting the sys gcc, not the conda one.; >; > Conda-forge and QuTiP are tested heavily against Ubuntu 14.04, so if any; > platform works, it should be that one.; >; > As I originally suspected, the problem comes from the Cython code.; > Specifically for the sparse matrix math. The fact that you can build it; > yourself suggests a binary incompatibility. However, again, we test; > against 14.04, so I am hard pressed to think about what the issue could be.; > gdb might be able to hunt down where the dump occurs.; >; > On Mar 25, 2017 18:27, ""Michael Goerz"" <notifications@github.com> wrote:; >; > Since it's the python from the conda package, I'm assuming that's because; > Continuum created the linux package on a Redhat system. GCC is identified; > like that on both of the workstations. But yeah, my guess would be that; > there is some shared library that's compiled in a way that's incompatible; > with the rest of the system. Is there any linux utility that would allow to; > determine which library is being accessed at the moment of the crash? Some; > invocation of ldd?; >; > —; > You are receiving this because you commented.; >; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/674#issuecomment-289249308>, or; > mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/ABMPqT0F1WSzbd-; > hOyso9XQM0K5ldiiwks5rpbEBgaJpZM4MpI4Z>; > .; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly,",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/674#issuecomment-289852411:72,install,install,72,https://qutip.org,https://github.com/qutip/qutip/issues/674#issuecomment-289852411,2,['install'],['install']
Deployability,Not sure if the failure on windows is related to the numpy release or not. It's a different issue so I will merge this and look at it another time.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2510#issuecomment-2296970652:59,release,release,59,https://qutip.org,https://github.com/qutip/qutip/pull/2510#issuecomment-2296970652,1,['release'],['release']
Deployability,"Not sure. Conda seems to be complaining about how the update is called. Maybe something has changed in conda. Need to check. . > On Nov 8, 2015, at 14:08, Chris Granade notifications@github.com wrote:; > ; > This looks like a good change. Not sure why it would cause Travis to not see conda at all, though, that's bizarre. Any ideas?; > ; > —; > Reply to this email directly or view it on GitHub.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/393#issuecomment-154874510:54,update,update,54,https://qutip.org,https://github.com/qutip/qutip/pull/393#issuecomment-154874510,1,['update'],['update']
Deployability,Note that I have removed my previous qutip installation and did a fresh install to verify.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/269#issuecomment-65179998:43,install,installation,43,https://qutip.org,https://github.com/qutip/qutip/issues/269#issuecomment-65179998,2,['install'],"['install', 'installation']"
Deployability,"Note that the same holds for Cython:. ``` zsh; % pip install qutip; Collecting qutip; Using cached qutip-3.1.0.tar.gz; Complete output from command python setup.py egg_info:; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/tmp/pip-build-hg437fn6/qutip/setup.py"", line 159, in <module>; configuration=configuration; File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/core.py"", line 135, in setup; config = configuration(); File ""/tmp/pip-build-hg437fn6/qutip/setup.py"", line 135, in configuration; config.add_subpackage('qutip'); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 1002, in add_subpackage; caller_level = 2); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 971, in get_subpackage; caller_level = caller_level + 1); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 908, in _get_configuration_from_setup_py; config = setup_module.configuration(*args); File ""qutip/setup.py"", line 8, in configuration; config.add_subpackage('cy'); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 1002, in add_subpackage; caller_level = 2); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 971, in get_subpackage; caller_level = caller_level + 1); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 883, in _get_configuration_from_setup_py; ('.py', 'U', 1)); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/imp.py"", line 234, in load_module; return load_source(name, filename, file); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/imp.py"", line 172, in load_source; module = _load(spec); File",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/426#issuecomment-183253786:53,install,install,53,https://qutip.org,https://github.com/qutip/qutip/issues/426#issuecomment-183253786,5,"['configurat', 'install']","['configuration', 'install']"
Deployability,"Note to self: After discussion with @Ericgig, I'm going to remove the deprecation warning for now since qutip-lattice is not yet updated and published to PyPI. qutip-lattice is still where future development should happen.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1819#issuecomment-1059196652:129,update,updated,129,https://qutip.org,https://github.com/qutip/qutip/pull/1819#issuecomment-1059196652,1,['update'],['updated']
Deployability,"Note: in theory you can install QuTiP from the test PyPI server right now by doing; ```; pip install -i https://test.pypi.org/simple qutip-jakelishman; ```; (that's just the name - you still do `import qutip`) but since it's on the ""wrong"" server, you first have to manually install `numpy` and `scipy`. When it's released properly on PyPI it'll handle the dependencies correctly - this is only an artifact of being on the testing server. Running that command will install a binary version with no compilation, and should work on any (reasonable) Linux machine, Mac (possibly not M1 chips) and Windows. It's possible you may get an error about `ndarray size changed ... this may indicate binary incompatibility` - if so, either force `numpy` up to the new 1.20 or down to 1.19 (whichever one you don't have). This was a breaking change in numpy 1.20. Per my reading of the release notes, it won't be an issue provided in the future we always build against `numpy>=1.20` (even when using lower `numpy` at runtime) because the new version updates a certain C-API macro to take into account the possibility of runtime variability. I have pushed an additional change to the build requirements to ensure this always happens. This has another knock-on effect: numpy 1.20 only supports Python 3.7+ (released June 2017). Currently, officially QuTiP supports Python 3.6, but I think it's reasonable to follow numpy's footsteps and **drop support for python 3.6 from qutip 5.0**. It's offset by gaining support for 3.9. (Apologies for all the force-pushing - whenever I want to re-run a test release on my own branch I have to temporarily add an extra commit to swap to the testing server, then force-push a rewind of this PR's branch.)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1429#issuecomment-770459519:24,install,install,24,https://qutip.org,https://github.com/qutip/qutip/pull/1429#issuecomment-770459519,9,"['install', 'release', 'update']","['install', 'release', 'released', 'updates']"
Deployability,Now I don't understand what is the problem with the Travis test.; UPDATE: The problem is somehow self cured.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/529#issuecomment-243373614:66,UPDATE,UPDATE,66,https://qutip.org,https://github.com/qutip/qutip/pull/529#issuecomment-243373614,1,['UPDATE'],['UPDATE']
Deployability,Now it is an actual progressbar. It uses the '\r' character; in order to erase the entire line before each update. It works in the IPython notebook as well. Tested in 3.4. It should work in 2.7. Not sure about 2.6 (because of // division operator?),MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/121:107,update,update,107,https://qutip.org,https://github.com/qutip/qutip/pull/121,1,['update'],['update']
Deployability,Now solved by @Ericgig in release 4.4.0.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/844#issuecomment-510885355:26,release,release,26,https://qutip.org,https://github.com/qutip/qutip/issues/844#issuecomment-510885355,1,['release'],['release']
Deployability,"Numpy 1.20 officially deprecated use of `np.int` and other things like `np.complex`. These were just thin aliases to Python types anyway, so that replacement is safe. Swap `float` and `complex` to `np.float64` and `np.complex128`; these still match Python precision (and standard double-precision floats), but more importantly we assume at all points in Cython code that we're dealing with double-precision arithmetic. Anything else would be a larger problem for us. In cases where `np.int` was used as a type check, we actually care more about checking for Integral typing, rather than specifically the int class; super weird constructs like; ```python; isinstance(np.int64(1), int) == False; ```; so taking indices out of an ndarry may lead to incorrect results when this sort of test is used. Better to use the abstract; ```python; isinstance(..., numbers.Integral); ```. See: https://numpy.org/doc/stable/release/1.20.0-notes.html#using-the-aliases-of-builtin-types-like-np-int-is-deprecated",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1432:909,release,release,909,https://qutip.org,https://github.com/qutip/qutip/pull/1432,1,['release'],['release']
Deployability,"Numpy interprets the Python base type `complex` as equal to `np.complex128` when passed as a dtype. Personally I think `np.complex128` is much clearer (since it specifies the size in the name too), but I wouldn't worry too much about changing everything everywhere. `cqobjevo.pyx` in particular is going to be nearly entirely rewritten in the next major QuTiP release anyway.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1451#issuecomment-785001605:360,release,release,360,https://qutip.org,https://github.com/qutip/qutip/issues/1451#issuecomment-785001605,1,['release'],['release']
Deployability,Numpy is maintaining a list of project versions that support numpy 2 -- https://github.com/numpy/numpy/issues/26191. They're waiting of downstream packages to be ready before release. We could add ourselves there if we liked.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2421#issuecomment-2108725817:175,release,release,175,https://qutip.org,https://github.com/qutip/qutip/pull/2421#issuecomment-2108725817,1,['release'],['release']
Deployability,Numpy seems to add it this way - https://github.com/numpy/numpy/blob/master/MANIFEST.in. If it is okay then I can change the MANIFEST files and continue the 4.3 release.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/894#issuecomment-403686597:161,release,release,161,https://qutip.org,https://github.com/qutip/qutip/issues/894#issuecomment-403686597,1,['release'],['release']
Deployability,ODE Integration Error in Tutorial Code,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1896:4,Integrat,Integration,4,https://qutip.org,https://github.com/qutip/qutip/issues/1896,1,['Integrat'],['Integration']
Deployability,OK that seemed to work. I'm curious how these changes might affect https://github.com/qutip/continuous-benchmark,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/76#issuecomment-36084634:92,continuous,continuous-benchmark,92,https://qutip.org,https://github.com/qutip/qutip/pull/76#issuecomment-36084634,1,['continuous'],['continuous-benchmark']
Deployability,"OK, I see. If you are refactoring the parallelization of the mcsolve (which is currently tightly integrated in the mc code and quite messy) I would strongly recommend and lobby for using the new parallel_map API, and do away with all multiprocessing code in the mcsolve module and not using the callback function. I think this could make the mcsolve module vastly more readable and easier to maintain.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/264#issuecomment-65020826:97,integrat,integrated,97,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-65020826,1,['integrat'],['integrated']
Deployability,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2085#issuecomment-1426693519:40,release,release,40,https://qutip.org,https://github.com/qutip/qutip/pull/2085#issuecomment-1426693519,2,"['release', 'update']","['release', 'updates']"
Deployability,"OK, I'll have a look at it. Is there any specific reason for not making more frequent (and with less features) releases?. I'm closing the issue as it should be fixed in latest dev branch. I will reopen if I still experience the issue after updating.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/542#issuecomment-249343387:111,release,releases,111,https://qutip.org,https://github.com/qutip/qutip/issues/542#issuecomment-249343387,1,['release'],['releases']
Deployability,"ORY.md"">requests's changelog</a>.</em></p>; <blockquote>; <h2>2.31.0 (2023-05-22)</h2>; <p><strong>Security</strong></p>; <ul>; <li>; <p>Versions of Requests between v2.3.0 and v2.30.0 are vulnerable to potential; forwarding of <code>Proxy-Authorization</code> headers to destination servers when; following HTTPS redirects.</p>; <p>When proxies are defined with user info (<a href=""https://user:pass@proxy:8080"">https://user:pass@proxy:8080</a>), Requests; will construct a <code>Proxy-Authorization</code> header that is attached to the request to; authenticate with the proxy.</p>; <p>In cases where Requests receives a redirect response, it previously reattached; the <code>Proxy-Authorization</code> header incorrectly, resulting in the value being; sent through the tunneled connection to the destination server. Users who rely on; defining their proxy credentials in the URL are <em>strongly</em> encouraged to upgrade; to Requests 2.31.0+ to prevent unintentional leakage and rotate their proxy; credentials once the change has been fully deployed.</p>; <p>Users who do not use a proxy or do not supply their proxy credentials through; the user information portion of their proxy URL are not subject to this; vulnerability.</p>; <p>Full details can be read in our <a href=""https://github.com/psf/requests/security/advisories/GHSA-j8r2-6x86-q33q"">Github Security Advisory</a>; and <a href=""https://nvd.nist.gov/vuln/detail/CVE-2023-32681"">CVE-2023-32681</a>.</p>; </li>; </ul>; <h2>2.30.0 (2023-05-03)</h2>; <p><strong>Dependencies</strong></p>; <ul>; <li>; <p>⚠️ Added support for urllib3 2.0. ⚠️</p>; <p>This may contain minor breaking changes so we advise careful testing and; reviewing <a href=""https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html"">https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html</a>; prior to upgrading.</p>; <p>Users who wish to stay on urllib3 1.x can pin to <code>urllib3&lt;2</code>.</p>; </li>; </ul>; <h2>2.29.0 (2023-04-26)</h2>; <p><s",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2164:3817,deploy,deployed,3817,https://qutip.org,https://github.com/qutip/qutip/pull/2164,1,['deploy'],['deployed']
Deployability,"Of course, Python does in general allow users to override whatever behaviour we choose - a user can always define `Qobj.__array__` or any of the others themselves, which will monkey-patch QuTiP into doing what that user wants. Similarly, we _could_ have `Qobj.__array__` defined conditionally on a global QuTiP option; pydata/sparse takes this approach, although theirs is a slightly different case semantically because they are trying to make sparse equivalents of `ndarray`, rather than sparse matrices.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1433#issuecomment-773997386:182,patch,patch,182,https://qutip.org,https://github.com/qutip/qutip/issues/1433#issuecomment-773997386,1,['patch'],['patch']
Deployability,"Oh man, yeah, that's embarrassing. Yeah, that's exactly what I _meant_ to put. I dunno how I screwed up the patch that badly!. I'll rebase these commits onto `master` and squash them into one or two nice modular commits. I think a little bit of the development here is worth preserving in the commit history for if someone looks at it in the future (there's no guarantee that this PR discussion will _always_ be up, but commit messages are forever). I'll force-push to this branch, so you'll have to force-pull a copy (or just delete your copy of this branch). Not the best practice, but better for keeping the `master` commit history neat.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1194#issuecomment-605528198:108,patch,patch,108,https://qutip.org,https://github.com/qutip/qutip/pull/1194#issuecomment-605528198,1,['patch'],['patch']
Deployability,Oh ok. I'll wait for the next update to be pushed on pip then I think. I can workaround this in the meantime.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/542#issuecomment-249287554:30,update,update,30,https://qutip.org,https://github.com/qutip/qutip/issues/542#issuecomment-249287554,1,['update'],['update']
Deployability,"Oh, damn, you're right, I forgot to run install. My bad :)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/236#issuecomment-56970513:40,install,install,40,https://qutip.org,https://github.com/qutip/qutip/issues/236#issuecomment-56970513,1,['install'],['install']
Deployability,"Oh, don't worry about rushing - there's no hurry. We don't expect to release 4.7 for _at least_ a month, probably two. I was just mentioning it now so you'd have time if you were still interested.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1469#issuecomment-853281689:69,release,release,69,https://qutip.org,https://github.com/qutip/qutip/pull/1469#issuecomment-853281689,1,['release'],['release']
Deployability,"Oh, you're right Simon - I think I was just thinking about conda-forge, where we have the pinning files. The build process may need updating a bit now - I pinned cibuildwheel to a pre-2 version, but since I wrote that, cibuildwheel 2 was released, and should generally work fine. You may want to look at things like `CIBW_DEPENDENCY_VERSIONS` to set constraints on the versions of Numpy and Scipy used in the build to maintain compatibility perhaps?. @drew-parsons: will Debian's version requirements recognise that a version of QuTiP built against Numpy 1.20 can no longer support Numpys before 1.20? Anything that compiles C extensions against Numpy will have that potential issue.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1720#issuecomment-976973209:238,release,released,238,https://qutip.org,https://github.com/qutip/qutip/issues/1720#issuecomment-976973209,1,['release'],['released']
Deployability,"Ok great! Thanks, I was worried I screwed up the install somehow",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180#issuecomment-1601854467:49,install,install,49,https://qutip.org,https://github.com/qutip/qutip/issues/2180#issuecomment-1601854467,1,['install'],['install']
Deployability,"Ok so if we have to start we do away with all the * imports first except. ```from qutip.qobj import *```. then we can remove the numpy and scipy checks but numpy is still used to setup pyximport in . ```; # Setup pyximport ; import pyximport; os.environ['CFLAGS'] = '-O2 -w -ffast-math'; pyximport.install(setup_args={'include_dirs': [numpy.get_include()]}); del pyximport; ```. Then we can move the section regarding multiprocessing to some appropiate place. Currently it is used in the following files. Can we put the multiprocessing stuff in a file called `multiprocessing_config.py` and run it to get the settings in `__init__` at all the places where we need multiprocessing.; ```; /Users/shahnawaz/dev/qutip/qutip/__init__.py:; 33 from __future__ import division, print_function, absolute_import; 34 import os; 35: # Fix the multiprocessing issue with NumPy compiled against OPENBLAS; 36 if 'OPENBLAS_MAIN_FREE' not in os.environ:; 37 os.environ['OPENBLAS_MAIN_FREE'] = '1'; ..; 149 # cpu/process configuration; 150 #; 151: import multiprocessing; 152 ; 153 # Check if environ flag for qutip processes is set; ...; 164 qutip.settings.num_cpus = info['cpus']; 165 else:; 166: qutip.settings.num_cpus = multiprocessing.cpu_count(); 167 ; 168 ; ...; 270 # Clean name space; 271 #; 272: del os, sys, numpy, scipy, multiprocessing. /Users/shahnawaz/dev/qutip/qutip/fortran/mcsolve_f90.py:; 83 serial : boolean; 84 If True (default is False) the solver will not make use of the; 85: multiprocessing module, and simply run in serial.; 86 ptrace_sel: list; 87 This optional argument specifies a list of components to keep when; ..; 226 ; 227 def parallel(self):; 228: from multiprocessing import Process, Queue, JoinableQueue; 229 ; 230 if debug:. /Users/shahnawaz/dev/qutip/qutip/hardware_info.py:; 36 import os; 37 import sys; 38: import multiprocessing; 39 ; 40 def _mac_hardware_info():; ..; 91 ncpus += int(cpu.Properties_['NumberOfCores'].Value); 92 except:; 93: ncpus = int(multiprocessing.cpu_co",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/580#issuecomment-270871889:298,install,install,298,https://qutip.org,https://github.com/qutip/qutip/issues/580#issuecomment-270871889,1,['install'],['install']
Deployability,"Ok, I added the tests. Took me a little moment, first time I'm doing this. Are these sufficient or should I add something else?; It's not rigorously testing everything but for sure the things that I adjusted. I also stumbled upon a deprecation warning, so I updated the syntax for the `colormaps`. With the tests for `HarmonicOscillatorWaveFunction` and `HarmonicOscillatorProbabilityFunction` I got the warning `ComplexWarning: Casting complex values to real discards the imaginary part` in two instances. Not sure how I should proceed, so I wanted to ask. Should I just ignore it and keep it like it was or search for where exactly this happens and adjust it so it explicitly calls np.real(), or maybe np.abs()? Thanks a lot for the help!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2548#issuecomment-2420588426:258,update,updated,258,https://qutip.org,https://github.com/qutip/qutip/pull/2548#issuecomment-2420588426,1,['update'],['updated']
Deployability,"Ok, I'm going to merge this now because I'm gearing up for the 4.6 release and I want to include this bugfix.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1478#issuecomment-816312032:67,release,release,67,https://qutip.org,https://github.com/qutip/qutip/pull/1478#issuecomment-816312032,1,['release'],['release']
Deployability,"Ok, I'm not sure that enforcing numpy >= 1.20 at compile time is sufficient. I don't know if it's a Cython thing, a numpy thing or an us thing, but I'll figure it out later when I've got more time. The distribution changes here are still good here, and if it ends up that for the initial release of 5.0 we only support numpy 1.20+, that's unfortunate but not really the end of the world.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1429#issuecomment-770477015:288,release,release,288,https://qutip.org,https://github.com/qutip/qutip/pull/1429#issuecomment-770477015,1,['release'],['release']
Deployability,"Ok, I've reverted to using the PR number for the news fragment file names, and updated the contributing/PR instructions. I also looked into why the `towncrier-check` test is failing. It looks like towncrier is not finding the `pyproject.toml` config file because it is not running in the root directory. I added a `working-directory: /` specification to the action step to address this, hopefully this should fix it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1927#issuecomment-1159608537:79,update,updated,79,https://qutip.org,https://github.com/qutip/qutip/pull/1927#issuecomment-1159608537,1,['update'],['updated']
Deployability,"Ok, I've updated all PR links. It was no harder than basically running `sed s_#_qutip/qutip-doc#_g` on the commit messages - I checked that nothing untoward got changed as well. I've also updated the PR template - thanks Eric, I never would have thought of that (not sure how I missed it while using `grep` though!).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1513#issuecomment-829953403:9,update,updated,9,https://qutip.org,https://github.com/qutip/qutip/pull/1513#issuecomment-829953403,2,['update'],['updated']
Deployability,"Ok, great thanks.; I will start work on the release. On 23 February 2017 at 17:34, Paul Nation <notifications@github.com> wrote:. > Ready.; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/649#issuecomment-282063195>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AIxX7Z-0RBHwqj9EUPTc_uCRxOHvw8Hdks5rfcM6gaJpZM4MI5S0>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/649#issuecomment-282065212:44,release,release,44,https://qutip.org,https://github.com/qutip/qutip/issues/649#issuecomment-282065212,1,['release'],['release']
Deployability,"Ok, it seems that for some reason the 'mkl_info' key from the NumPy config info is no longer available in some miniconda installs. This took forever to find as I could not reproduce the error at home when using a fresh miniconda install. Now I look in the libs as well for BLAS info.; - Also removed matplotlib from the requirements as it is not a requirement. At least not at present.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/547#issuecomment-252450097:121,install,installs,121,https://qutip.org,https://github.com/qutip/qutip/pull/547#issuecomment-252450097,2,['install'],"['install', 'installs']"
Deployability,"Ok, it turns out I got the numpy release notes the wrong way round; we have to build our binaries with `1.16.6 <= numpy < 1.20` to maintain ABI compatibility no matter the numpy version. I have updated the compiler infrastructure to take this into account - this is in some ways a temporary restriction until two or three years in the future when we can drop support for all numpy versions less than 1.20. This is ready for final review. If you're fast, you can also try installing from the test PyPI server to see if the wheels work for you. While it's on the temporary server, you need to install `numpy` and `scipy` manually yourself (as they don't exist on test.pypi.org), but pip will do the dependencies correctly for you once it's publishing to the full repo.; ```bash; conda create -n pypi-test; conda install python pip numpy scipy; pip install -i https://test.pypi.org/simple qutip-jakelishman; python -c 'import qutip; qutip.about()'; ```. @hodgestar, @nathanshammah: perhaps you could just glance over this again and make sure everything looks right to you? Simon, I know you already looked over it once, so if you've not got time again, no problem - barely anything has changed since you last saw it. Nathan: in theory once we're in a position where deployments push to PyPI I think I can write an action for qutip/qutip.github.io to push a commit updating the website with the new information too. However, with the docs currently using a completely separate build process in a different repo, they can't really be triggered by a release here. I wrote this PR against `dev.major`, but I suppose in theory I could backport it to the 4.x branch if that's absolutely required. I think some parts of the setup changed for `dev.major`, which is why I didn't originally try to make it to the current version.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1429#issuecomment-774353158:33,release,release,33,https://qutip.org,https://github.com/qutip/qutip/pull/1429#issuecomment-774353158,8,"['deploy', 'install', 'release', 'update']","['deployments', 'install', 'installing', 'release', 'updated']"
Deployability,"Ok, let's drop the tensor thing then. I'll make a new patch which includes the time-dependence syntax that you suggest, indeed a more convenient way. Do you think it would be necessary to perform linear interpolation as I did or would just rounding to the nearest point be ok. It looks like I'll need to add code to sesolve and mesolve, and these files seem to have some duplicate code already, do you think it would be useful to make a new file with some shared helper functions (mostly for generating the cython code)?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/141#issuecomment-44796169:54,patch,patch,54,https://qutip.org,https://github.com/qutip/qutip/pull/141#issuecomment-44796169,1,['patch'],['patch']
Deployability,"Ok, so I did some benchmarking at https://nbviewer.ipython.org/gist/goerz/34af142b78d7e344417d838bbea78aaf/06_example_3states_benchmark.ipynb ([gist](https://gist.github.com/goerz/34af142b78d7e344417d838bbea78aaf)), based on [one of the example notebooks from the Krotov package](https://qucontrol.github.io/krotov/v1.2.1/notebooks/06_example_3states.html). I'll be referring to the numbered cells in that notebook in the discussion below. @jakelishman in https://github.com/qutip/qutip/issues/1571#issuecomment-859873615:. > I think you might be able to achieve a lot of what you want already. The pseudo-code looks like it's not using `mesolve` super efficiently, though maybe it's only because of simplifications to make a MWE. For example, if your controls are piecewise constant, then it might be inefficient to represent those terms as ""time dependent""; doing so means you incur the cost of multiplying each term by a scalar at every intermediate step the integrator chooses to take, then you have to perform the matrix-vector product for each one individually and add them up. That's certainly worth trying: when calling `mesolve` in a loop over the time grid, I did indeed see a significant speedup when summing the Lindbladian into a single constant `Qobj`, see `In [21]` vs `In [24]`. On the other hand, it doesn't always give a speedup: in the low-level [`DensityMatrixODEPropagator`](https://github.com/qucontrol/krotov/blob/cfe6b108708cdfd29ab7eee24f2112977b951ed2/src/krotov/propagators.py#L162) it actually makes the propagation slower, see `In [29]` vs `In [32]`. It's a bit surprising, but then, as you say:. > [...] This isn't guaranteed, because it involves copying rather more data _before_ the call. So that's ok. > Would something like this work for you? [...]; >; > By giving `mesolve` the Liouvillian instead of the Hamiltonian and collapse operators separately. To be clear, I personally never use collapse operators (and the Krotov documentation heavily discourages it). Inst",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243:962,integrat,integrator,962,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243,1,['integrat'],['integrator']
Deployability,"Ok, so I tweaked the template and configuration for towncrier so that it doesn't render an issue/PR number next to each changelog entry. This frees you from requiring an issue / PR number when writing a news fragment. ; @hodgestar yes I think with this configuration you can just use any unique string for the filename.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1927#issuecomment-1156932155:34,configurat,configuration,34,https://qutip.org,https://github.com/qutip/qutip/pull/1927#issuecomment-1156932155,2,['configurat'],['configuration']
Deployability,"Ok, something must have happened here, `read_qasm` is not imported at all. It is hard to debug `from ... import *`. I don't think our recent release of `qutip==4.7.5` changed anything on the importation behaviour. It was just bug fix. You could try `from qutip.qip.qasm import read_qasm`. This should work as expected and will show the detailed reason if not.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2334#issuecomment-1962960400:141,release,release,141,https://qutip.org,https://github.com/qutip/qutip/issues/2334#issuecomment-1962960400,1,['release'],['release']
Deployability,"Ok, the issue seems to be rooted in Scipy's `block_diag` function which was fixed in 0.19.; https://github.com/scipy/scipy/issues/4908. I attempted to bump up the scipy and cython version and tested this locally. All tests pass now. I will try the same with conda. ```; QuTiP Version: 4.3.0.dev0+2ac36add; Numpy Version: 1.14.4; Scipy Version: 0.19.1; Cython Version: 0.28.3; Matplotlib Version: None; Python Version: 2.7.15; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (x86_64); Installation path: /Users/shahnawaz/dev/qutip/qutip; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/861#issuecomment-396122238:473,Install,Installed,473,https://qutip.org,https://github.com/qutip/qutip/pull/861#issuecomment-396122238,2,['Install'],"['Installation', 'Installed']"
Deployability,"On a subsequent run, the build on Travis CI failed. . The two runs were prompted by the same branch, minutes apart, but differed for the version of Python that Travis CI picked up (3.72 working, 3.73 failing) and some minor decimal difference in release version of one dependency (Cython if I remember correctly). . Making a branch with a special .travis.yml file with additional osx_image instructions for the Mac OS build might help to sort this out. Two days ago Travis switched to Python 3 as default installation language and unexpectedly yesterday I noticed that some of the failing builds on previous branches were successful. We are always building with Python 3, as it says in the change log, I am just wondering if some dependency was doing something incorrectly.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/961#issuecomment-484739775:246,release,release,246,https://qutip.org,https://github.com/qutip/qutip/pull/961#issuecomment-484739775,2,"['install', 'release']","['installation', 'release']"
Deployability,"On mac os, try brew install imagemagick",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/702#issuecomment-435592809:20,install,install,20,https://qutip.org,https://github.com/qutip/qutip/issues/702#issuecomment-435592809,1,['install'],['install']
Deployability,"On the page of the documentation talking about qutip.mcsolve (""Monte Carlo Solver""), it describes the algorithm for the monte carlo simulation as:. > I: Choose a random number r between zero and one, representing the probability that a quantum jump occurs.; > II: Integrate the Schrödinger equation, using the effective Hamiltonian (1) until a time τ such that the norm of the wave function satisfies ⟨ψ(τ)|ψ(τ)⟩=r, at which point a jump occurs.; > III: The resultant jump projects the system at time τ into one of the renormalized states given by Eq. (3). The corresponding collapse operator Cn is chosen such that n is the smallest integer satisfying:; > (5); > ∑_{i=1}^{n} P_n(τ)≥r. In actuality, through my own reading of the code, **two** random numbers are generated, one for determining if a jump occurs, and another to determine which jump operator was responsible. I suggest the following change (changes highlighted in bold):. > I: Choose a random number **r_1** between zero and one, representing the probability that a quantum jump occurs.; > II: Integrate the Schrödinger equation, using the effective Hamiltonian (1) until a time τ such that the norm of the wave function satisfies ⟨ψ(τ)|ψ(τ)⟩=**r_1**, at which point a jump occurs.; > **III: Choose a random number r_2 between zero and one, used to select which collapse operator was responsible for the jump.**; > IV: The resultant jump projects the system at time τ into one of the renormalized states given by Eq. (3). The corresponding collapse operator Cn is chosen such that n is the smallest integer satisfying:; > (5); > ∑_{i=1}^{n} P_n(τ)≥**r_2**. While this is not an issue in the code, the way the documentation is written at the moment implies that jumps which occur after a short amount of time will primarily be due to collapse operators at the end of the c_ops list, while jumps that happen after a long time will be biased towards collapse operators at the start of the c_ops list. Again, the code is correct, but the do",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1666:264,Integrat,Integrate,264,https://qutip.org,https://github.com/qutip/qutip/issues/1666,1,['Integrat'],['Integrate']
Deployability,"Once a Pull Request is merged to QuTiP, the contributor could add a short description to the Changelog, which contains changes of each [version release](http://qutip.org/docs/latest/changelog.html). ; It could be in the style of current changelog:. * A one-liner for **minor changes**, with a descriptive text and the author's name. ; * A short paragraph for **major changes**. . This guideline could be added to the contribution [how-to](https://github.com/qutip/qutip-doc/blob/master/qutip_dev_contrib.md ).",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1055:144,release,release,144,https://qutip.org,https://github.com/qutip/qutip/issues/1055,1,['release'],['release']
Deployability,"Once installed, running; ```; import qutip.testing as qt; qt.run(); ```. fails:; ```; Python Version: 2.7.15; Traceback (most recent call last):; File ""t.py"", line 2, in <module>; qt.run(); File ""/usr/local/lib/python2.7/site-packages/qutip/testing.py"", line 40, in run; about(); File ""/usr/local/lib/python2.7/site-packages/qutip/about.py"", line 77, in about; print(""Number of CPUs: %s"" % hardware_info()['cpus']); KeyError: 'cpus'; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/891#issuecomment-403717297:5,install,installed,5,https://qutip.org,https://github.com/qutip/qutip/issues/891#issuecomment-403717297,1,['install'],['installed']
Deployability,"Once pull #648 is merged I am keen to get a v4.1 released.; The conda-forge packages for Windows currently do work. I am very keen to resolve this. ; Also very keen to get a solution for qutip on MS Windows with Python >= 3.5 out there.; I am happy to do the admin work for the release. The installation documentation will need updating, I am happy to this.; Is there anything else we would like to finish off, that can be done quickly, that we would like to get into a release of 4.1?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/649:49,release,released,49,https://qutip.org,https://github.com/qutip/qutip/issues/649,4,"['install', 'release']","['installation', 'release', 'released']"
Deployability,"One can also think about moving the fortran solver to its own installer as a qutip add-on. With the recent performance gains of the Python based solver, this change is not so bad in my opinion.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/283#issuecomment-66561013:62,install,installer,62,https://qutip.org,https://github.com/qutip/qutip/issues/283#issuecomment-66561013,1,['install'],['installer']
Deployability,"Other than doing the changes you suggested, I updated [the description](https://github.com/qutip/qutip/pull/2170#issue-1737987577) and deleted all deprecated functions.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2170#issuecomment-1620368190:46,update,updated,46,https://qutip.org,https://github.com/qutip/qutip/pull/2170#issuecomment-1620368190,1,['update'],['updated']
Deployability,"Our diamond norm calculation in [QPtomographer](https://github.com/Tomographer/QPtomographer/) is written in C++ in the file [QPtomographer/cxx/diamond_norm_scs.h](https://github.com/Tomographer/QPtomographer/blob/master/cxx/diamond_norm_scs.h) (see [QPtomographer/test/test_diamond_norm.cxx](https://github.com/Tomographer/QPtomographer/blob/master/test/test_diamond_norm.cxx) for an example usage) and uses the C interface of [the SCS solver](https://github.com/cvxgrp/scs). The way it stands, it also depends on [Eigen C++ header library](http://eigen.tuxfamily.org/), but it should be easy to remove this dependency as it is only used to specify the input matrices. Other minor dependencies are easily removed. I'm not sure what underlying mechanism you use in QuTiP, but it should be relatively straightforward to reformat the whole class into a C implementation with only SCS as a dependency. Unfortunately the python `scs` package does not install C headers, so that dependency might turn out to be something to worry about. Perhaps SCS itself can be integrated in the QuTiP source?. I'd be happy if our code is useful for you, and let me know if you'd like any clarifications about our implementation.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/874#issuecomment-494716341:947,install,install,947,https://qutip.org,https://github.com/qutip/qutip/issues/874#issuecomment-494716341,2,"['install', 'integrat']","['install', 'integrated']"
Deployability,"Out of interest, I had a look around. BSD-3 clause and GPL-v2 are ""compatible"", but only in the sense that the resultant _must_ be GPL-licensed (see [a bit of discussion here](https://opensource.stackexchange.com/questions/7180/can-i-combine-gplv2-and-bsd-3-clause-code-and-keep-the-bsd-permissions)). That probably means that we're technically not following the rules at the moment. That said, my understanding is that licences are just a general statement of rights that are given to everyone. If we get explicit permission from the creator of the library to include it in this library with a rider that this particular section cannot be copied or used in a public project except under GPL-v2 terms, then I think we'd be fine (except that might make it super annoying for downstream projects...). In general I think the primary reason that we can't release GPL'd code under a BSD licence is that the BSD licence doesn't have the restriction that source code must be made available. I _think_, however, that since the circuit drawing isn't an integral part of QuTiP, it would be allowed for us to distribute this portion as a stand-alone extension to QuTiP which is individually GPL'd, even if we couldn't get a relicensed version of the LaTeX package. It's always fine for private use to use GPL'd stuff.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1187#issuecomment-607176262:851,release,release,851,https://qutip.org,https://github.com/qutip/qutip/pull/1187#issuecomment-607176262,1,['release'],['release']
Deployability,PIQS module and updates,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/861:16,update,updates,16,https://qutip.org,https://github.com/qutip/qutip/pull/861,1,['update'],['updates']
Deployability,Parallelizing `mcsolve` doesn't work with qutip Integrators with `improved_sampling=False`,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2450:48,Integrat,Integrators,48,https://qutip.org,https://github.com/qutip/qutip/issues/2450,1,['Integrat'],['Integrators']
Deployability,"Passes fine for me, patched onto 4.6.2.; Running tests locally,; ```; ...; tests/test_processor.py::TestCircuitProcessor::testPlot PASSED [ 79%]; ...; tests/test_wigner.py::test_wigner_clenshaw_sp_iter_dm PASSED [100%]. === 1910 passed, 20 skipped, 67 deselected, 53 warnings in 472.83s (0:07:52) ===; autopkgtest [16:47:24]: test test-qutip: -----------------------]; autopkgtest [16:47:24]: test test-qutip: - - - - - - - - - - results - - - - - - - - - -; test-qutip PASS; autopkgtest [16:47:24]: @@@@@@@@@@@@@@@@@@@@ summary; test-qutip PASS; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1648#issuecomment-909311635:20,patch,patched,20,https://qutip.org,https://github.com/qutip/qutip/pull/1648#issuecomment-909311635,1,['patch'],['patched']
Deployability,Patch metrics,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/130:0,Patch,Patch,0,https://qutip.org,https://github.com/qutip/qutip/pull/130,1,['Patch'],['Patch']
Deployability,Patch qutip.entropy.concurrence for pure states,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/143:0,Patch,Patch,0,https://qutip.org,https://github.com/qutip/qutip/pull/143,1,['Patch'],['Patch']
Deployability,Patches visualization,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/102:0,Patch,Patches,0,https://qutip.org,https://github.com/qutip/qutip/pull/102,1,['Patch'],['Patches']
Deployability,"Perhaps a bit more computationally efficient solution (although, it probably wouldn't make more than a marginal difference, at any reasonable order of number of indices, at which insertion is to be performed): insert at an index `i + k` , where `i` is the original index as per the `index` list, and `k` is the number of insertions performed so far, as part of the insertion loop. I'll raise a PR with the proposed fix. **Update:** The PR in question is https://github.com/qutip/qutip/pull/1892.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1497#issuecomment-1123990033:422,Update,Update,422,https://qutip.org,https://github.com/qutip/qutip/issues/1497#issuecomment-1123990033,1,['Update'],['Update']
Deployability,"Perhaps at the info level. At least that is my naive thinking. However, I think maybe the exception that you have in the dnorm is good enough. Then the user can install the required module if they want to use that function. Regardless though, this is something that really needs to be specified in the docs.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/465#issuecomment-215308429:161,install,install,161,https://qutip.org,https://github.com/qutip/qutip/pull/465#issuecomment-215308429,1,['install'],['install']
Deployability,Perhaps better to default to installing the latest release rather than master?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/279#issuecomment-65757518:29,install,installing,29,https://qutip.org,https://github.com/qutip/qutip/pull/279#issuecomment-65757518,2,"['install', 'release']","['installing', 'release']"
Deployability,"Pillow/commit/5beb0b66648db8b542bb5260eed79b25e33d643b""><code>5beb0b6</code></a> Update CHANGES.rst [ci skip]</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/cac6ffa7b399ea79b6239984d1307056a0b19af2""><code>cac6ffa</code></a> Merge pull request <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7927"">#7927</a> from python-pillow/imagemath</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/f5eeeacf7539eaa0d93a677d7666bc7c142c8d1c""><code>f5eeeac</code></a> Name as 'options' in lambda_eval and unsafe_eval, but '_dict' in deprecated eval</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/facf3af93dabcbdd8cdbda8c3b50eefafa3bb04c""><code>facf3af</code></a> Added release notes</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/2a93aba5cfcf6e241ab4f9392c13e3b74032c061""><code>2a93aba</code></a> Use strncpy to avoid buffer overflow</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/a670597bc30e9d489656fc9d807170b8f3d7ca57""><code>a670597</code></a> Update CHANGES.rst [ci skip]</li>; <li>Additional commits viewable in <a href=""https://github.com/python-pillow/Pillow/compare/10.2.0...10.3.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=10.2.0&new-version=10.3.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recrea",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2381:15039,Update,Update,15039,https://qutip.org,https://github.com/qutip/qutip/pull/2381,1,['Update'],['Update']
Deployability,"Please merge with master and resolve conflicts and push the updates. In general, to avoid conflicts, you should do 'git pull upsteam master' into your master before creating a new branch.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/294#issuecomment-67649107:60,update,updates,60,https://qutip.org,https://github.com/qutip/qutip/pull/294#issuecomment-67649107,1,['update'],['updates']
Deployability,Please refer to [`smesolve` new methods](https://nbviewer.jupyter.org/github/qutip/qutip-notebooks/blob/master/development/development-smesolver-new-methods.ipynb) and [benchmark](https://nbviewer.jupyter.org/github/qutip/qutip-notebooks/blob/master/development/development-smesolve-tests.ipynb). I think you should just use `c_ops` or `sc_ops`. Keeping this open as the notebook needs to be updated and the Users guide documentation. The [API documentation](http://qutip.org/docs/latest/apidoc/functions.html?highlight=smesolve#qutip.stochastic.smesolve) is updated.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1029#issuecomment-510889471:392,update,updated,392,https://qutip.org,https://github.com/qutip/qutip/issues/1029#issuecomment-510889471,2,['update'],['updated']
Deployability,"Please update this pull to the latest master so that we can check if it passes with all of the new changes. Also, your last correlation pull did not clean up the *.pyx files generated for the time-dependent code. Please check that no *.pyx files are left hanging around in this pull.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/520#issuecomment-272532379:7,update,update,7,https://qutip.org,https://github.com/qutip/qutip/pull/520#issuecomment-272532379,1,['update'],['update']
Deployability,"Possible solution to automating changelog/release notes, and adding PR templates",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1108:42,release,release,42,https://qutip.org,https://github.com/qutip/qutip/issues/1108,1,['release'],['release']
Deployability,Prepare 4.6.2 release,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1565:14,release,release,14,https://qutip.org,https://github.com/qutip/qutip/pull/1565,1,['release'],['release']
Deployability,Prepare 4.7.0 release.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1856:14,release,release,14,https://qutip.org,https://github.com/qutip/qutip/pull/1856,1,['release'],['release']
Deployability,Prepare QuTiP 4.7.1 release.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2046:20,release,release,20,https://qutip.org,https://github.com/qutip/qutip/pull/2046,1,['release'],['release']
Deployability,Prepare release 4.7.5,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2310:8,release,release,8,https://qutip.org,https://github.com/qutip/qutip/pull/2310,1,['release'],['release']
Deployability,"Previously .render(...) took fig and axes arguments and overwrote self.fig and self.axes if the arguments were None. The actual values of the arguments were completely discarded (!!). In addition, not supplying a value for fig and axes would overwrite the values passed to the constructor as Bloch(..., fig=fig, axes=axes). The new behaviour is as follows:. * If an external figure is passed to the constructor it is retained. * If no figure is supplied, .render() will create a figure if one has not been created yet, or if the figure has been closed, will recreate it. As a special case, it will *not* recreate *closed* figures inside Jupyter notebooks using the inline backend, because that closes figures at the end of every cell and displays closed figures quite happily. . * .render() will always call self.fig.canvas.update() to ensure that any existing figure that is already shown will be updated. * .show() will now always render the figure and call `IPython.display.display` (if running in an IPython terminal) or `fig.plot()` otherwise. Previously it was possible to cause .render() to raise obscure exceptions by, e.g., calling .render(), closing the figure, calling; .render() again. See, for example, https://github.com/qutip/qutip/issues/1616. Previously when running in an IPython shell `.show()` would have to be called twice to have any effect if no figure was passed in. Now it only needs to be called once. The external figure tracking was backported from Qiskit's copy of Bloch and was inspired by PR https://github.com/Qiskit/qiskit-terra/pull/1091/. **Related issues or PRs**. * fixes #1616; * inspired by https://github.com/Qiskit/qiskit-terra/pull/1091/; * issue with `.show()` under `IPython` mentioned in #1690. **Changelog**. More carefully track the state of the Bloch sphere figure and axes to prevent exceptions during rendering.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1619:824,update,update,824,https://qutip.org,https://github.com/qutip/qutip/pull/1619,2,['update'],"['update', 'updated']"
Deployability,"Previously, all tests in `test_metrics.py` were skipped if cvxpy or cvxopt were not installed. Addresses part 1 of https://github.com/qutip/qutip/issues/1703. **Changelog**; Only skip the dnorm tests if cvxpy is not installed (previously all metrics tests were skipped).",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1704:84,install,installed,84,https://qutip.org,https://github.com/qutip/qutip/pull/1704,2,['install'],['installed']
Deployability,Print `qutip.about()` to get info on open mp. In general if you did not enforce it in installation it should be `False`.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1175#issuecomment-583685282:86,install,installation,86,https://qutip.org,https://github.com/qutip/qutip/issues/1175#issuecomment-583685282,1,['install'],['installation']
Deployability,Problems installing qutip on OSX Yosemite,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/265:9,install,installing,9,https://qutip.org,https://github.com/qutip/qutip/issues/265,1,['install'],['installing']
Deployability,Proposal for 4.4.1 Mostly to fix the bugs reported since 4.4.0's release but include small improvements. Bug Fixes; -------------. - Fixed the pickling but that made solver unable to run in parallel on Windows. (Thank **lrunze** for reporting); - Removed warning when mesolve fall back on sesolve (by **Michael Goerz**).; - Fixed dimension check and confusing documentation in random ket (by **Yariv Yanay**).; - Fixed Qobj isherm not working after using Qobj.permute. (Thank **llorz1207** for reporting); - Correlation functions call now properly handle multiple time dependant functions. (Thank **taw181** for reporting); - Removed mutable default values in mesolve/sesolve (by **Michael Goerz**); - Fixed simdiag bug (Thank **Croydon-Brixton** for reporting); - Better support of constant QobjEvo. (by **Boxi Li**). Improvements; ------------------. - QobjEvo do not need to start from 0 anymore. (by **Eric Giguere**); - Add a quantum object purity function. (by **Nathan Shammah** and **Shahnawaz Ahmed**); - Add step function interpolation for array time-coefficient. (by **Boxi Li**),MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1069:65,release,release,65,https://qutip.org,https://github.com/qutip/qutip/pull/1069,1,['release'],['release']
Deployability,"Pursuant to discussions over the build failures observed in #359, this PR migrates Travis CI support to their new container-based configuration. I've observed that the builds with this configuration are more reliable, but they are slower for some reason. In the [instructions](http://docs.travis-ci.com/user/migrating-from-legacy/?utm_source=legacy-notice&utm_medium=banner&utm_campaign=legacy-upgrade#Faster-builds) they provide, Travis say that this configuration should be faster, and to let them know if our build is slower; that might be worth doing.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/360:130,configurat,configuration,130,https://qutip.org,https://github.com/qutip/qutip/pull/360,4,"['configurat', 'upgrade']","['configuration', 'upgrade']"
Deployability,"Py 1.21.0 release highlights are</p>; <ul>; <li>continued SIMD work covering more functions and platforms,</li>; <li>initial work on the new dtype infrastructure and casting,</li>; <li>universal2 wheels for Python 3.8 and Python 3.9 on Mac,</li>; <li>improved documentation,</li>; <li>improved annotations,</li>; <li>new <code>PCG64DXSM</code> bitgenerator for random numbers.</li>; </ul>; <p>In addition there are the usual large number of bug fixes and other; improvements.</p>; <p>The Python versions supported for this release are 3.7-3.9. Official; support for Python 3.10 will be added when it is released.</p>; <p>:warning: Warning: there are unresolved problems compiling NumPy 1.21.0 with gcc-11.1 .</p>; <ul>; <li>Optimization level <code>-O3</code> results in many wrong warnings when running the tests.</li>; <li>On some hardware NumPy will hang in an infinite loop.</li>; </ul>; <h2>New functions</h2>; <h3>Add PCG64DXSM BitGenerator</h3>; <p>Uses of the PCG64 BitGenerator in a massively-parallel context have; been shown to have statistical weaknesses that were not apparent at the; first release in numpy 1.17. Most users will never observe this weakness; and are safe to continue to use PCG64. We have introduced a new; PCG64DXSM BitGenerator that will eventually become the new default; BitGenerator implementation used by <code>default_rng</code> in future releases.; PCG64DXSM solves the statistical weakness while preserving the; performance and the features of PCG64.</p>; <p>See <code>upgrading-pcg64</code> for more details.</p>; <p>(<a href=""https://github-redirect.dependabot.com/numpy/numpy/pull/18906"">gh-18906</a>)</p>; <h2>Expired deprecations</h2>; <ul>; <li>The <code>shape</code> argument <code>numpy.unravel_index</code> cannot be; passed as <code>dims</code> keyword argument anymore. (Was deprecated in NumPy; 1.16.)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1767:1400,release,release,1400,https://qutip.org,https://github.com/qutip/qutip/pull/1767,1,['release'],['release']
Deployability,PyPi release done. Bump 4.2.0 to 4.2.1. @ajgpitch,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/744:5,release,release,5,https://qutip.org,https://github.com/qutip/qutip/pull/744,1,['release'],['release']
Deployability,Python 3.10 breaks qutip install,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1732:25,install,install,25,https://qutip.org,https://github.com/qutip/qutip/issues/1732,1,['install'],['install']
Deployability,"Python 3.8 was released awhile ago, so I thought I'd try activate its travis build and see if it passes.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1170:15,release,released,15,https://qutip.org,https://github.com/qutip/qutip/pull/1170,1,['release'],['released']
Deployability,QIP module extension and integration with other modules,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/441:25,integrat,integration,25,https://qutip.org,https://github.com/qutip/qutip/issues/441,1,['integrat'],['integration']
Deployability,Qcircuit update to version 2.6,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1187:9,update,update,9,https://qutip.org,https://github.com/qutip/qutip/pull/1187,1,['update'],['update']
Deployability,Qobj updates,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/418:5,update,updates,5,https://qutip.org,https://github.com/qutip/qutip/pull/418,1,['update'],['updates']
Deployability,"QuTiP 4.5.3 doesn't support M1 Macs, sorry. None of us has access to one to test, and our CI didn't support them for quite a while. This will be fixed in the next release of QuTiP. In the meantime, you can either build the package from the current source code here, or you can go into your QuTiP installation folder and comment out lines 48 and 49 of `qutip/hardware_info.py` to work around it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1473#issuecomment-808873718:163,release,release,163,https://qutip.org,https://github.com/qutip/qutip/issues/1473#issuecomment-808873718,2,"['install', 'release']","['installation', 'release']"
Deployability,"QuTiP 4.5.3 fails to build from source distribution on PyPI, e.g. on Windows:; ```; c1xx: fatal error C1083: Cannot open source file: 'qutip/cy/openmp/src/zspmv_openmp.cpp': No such file or directory; ```; **Checklist**; Thank you for contributing to QuTiP! Please make sure you have finished the following tasks before opening the PR. - [ ] Please read [Contributing to QuTiP Development](https://github.com/qutip/qutip-doc/blob/master/CONTRIBUTING.md); - [ ] Contributions to qutip should follow the [pep8 style](https://www.python.org/dev/peps/pep-0008/).; You can use [pycodestyle](http://pycodestyle.pycqa.org/en/latest/index.html) to check your code automatically; - [ ] Please add tests to cover your changes if applicable.; - [ ] If the behavior of the code has changed or new feature has been added, please also update the [documentation](https://github.com/qutip/qutip-doc) and the [notebook](https://github.com/qutip/qutip-notebooks). Feel free to ask if you are not sure. Delete this checklist after you have completed all the tasks. If you have not finished them all, you can also open a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/) to let the others know this on-going work and keep this checklist in the PR description. **Description**; Describe here the proposed change. **Related issues or PRs**; Please mention the related issues or PRs here. If the PR fixes an issue, use the keyword fix/fixes/fixed followed by the issue id, e.g. fix #1184. **Changelog**; Give a short description of the PR in a few words. This will be shown in the QuTiP change log after the PR gets merged.; For example: ; Fixed error checking for null matrix in essolve.; Added option for specifying resolution in Bloch.save function.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1449:821,update,update,821,https://qutip.org,https://github.com/qutip/qutip/pull/1449,1,['update'],['update']
Deployability,"QuTiP 4.6.3 has be released with the likely fix and we have no more information or ability to reproduce, so closing for now.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1705#issuecomment-1856852938:19,release,released,19,https://qutip.org,https://github.com/qutip/qutip/issues/1705#issuecomment-1856852938,1,['release'],['released']
Deployability,QuTiP 4.6.3 has been released some time ago. :),MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1750#issuecomment-1856865560:21,release,released,21,https://qutip.org,https://github.com/qutip/qutip/issues/1750#issuecomment-1856865560,1,['release'],['released']
Deployability,"QuTiP 4.7.0 remove the hardware_info file. I suspect that your new install is just different to your old one. E.g. you seem to now be running SciPy 1.7.3, but maybe a more recent SciPy would work better (e.g. 1.8.2 or 1.9.0). In either case, this is almost certainly an issue with SciPy on M1 and not specific to QuTiP. Of course we would still like QuTiP to work for you -- it's just that the solution may lie in updating or installing SciPy differently, not QuTiP.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1987#issuecomment-1229185731:67,install,install,67,https://qutip.org,https://github.com/qutip/qutip/issues/1987#issuecomment-1229185731,2,['install'],"['install', 'installing']"
Deployability,QuTiP 4.7.1 has been released to PyPI -- https://pypi.org/project/qutip/4.7.1/ -- and `pip install qutip` now works for me on Python 3.11.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2036#issuecomment-1347417696:21,release,released,21,https://qutip.org,https://github.com/qutip/qutip/issues/2036#issuecomment-1347417696,2,"['install', 'release']","['install', 'released']"
Deployability,QuTiP 4.7.2 was just released on pypi.; coda-forge release coming next.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180#issuecomment-1613443341:21,release,released,21,https://qutip.org,https://github.com/qutip/qutip/issues/2180#issuecomment-1613443341,4,['release'],"['release', 'released']"
Deployability,"QuTiP activities. QuTiP project members and contributors agree to abide by it and to build an inclusive community where criticism is provided and taken constructively and with empathy. Admin team members are responsible to enforce the Code of Conduct. Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at qutip-admin@googlegroups.com _[activate this or alternate email]_. . ### 2. Admin Team; **The Admin Team leads technical code development and manages directly QuTiP-related activities.** It’s thanks to their work and the broader community that the QuTiP project keeps lively, the software is maintained and the features keep expanding and improving. . **<span style=""text-decoration:underline;"">Tasks</span>**. The admin team is listed on the qutip website and specific areas of competence are shown. Members of the admin team pledge to volunteer to:. - Maintain the project through software release updates and bug fixes (core code development, documentation, notebooks, website, other Github-related things). . **- Make decisions about specific technical issues, features, bugs and pull requests. They are the primary mechanism of guiding the code review process and merging pull requests. This includes closing pull requests or issues that are inactive for long or deemed not relevant. **. - Develop new features in qutip/qutip and qutip/other-libraries. ; - Help keep a steady pace of qutip library releases (e.g., ~2 minor releases/year). ; - Actively participate / respond to the qutip-dev internal forum.; - Help in the Q&A support group, qutip public forum. ; - Volunteer time for remote mentorship.; - Discuss code developments.; - Once a year, on a rotation basis, one admin team member is responsible for drafting a report for the QuTiP board.; - **For each subproject that is not qutip/qutip, at least one admin should actively be watching the repository.**. - If there are new projects that wish to come under the umbr",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1373:7633,release,release,7633,https://qutip.org,https://github.com/qutip/qutip/issues/1373,2,"['release', 'update']","['release', 'updates']"
Deployability,"QuTiP cannot be imported after updating Scipy package to version 1.3.0. . Python 3.6.8 (tags/v3.6.8:3c6b436a57, Dec 24 2018, 00:16:47) [MSC v.1916 64 bit (AMD64)] on win32; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import qutip; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""D:\Python\Python36\lib\site-packages\qutip\__init__.py"", line 171, in <module>; from qutip.qobj import *; File ""D:\Python\Python36\lib\site-packages\qutip\qobj.py"", line 60, in <module>; from qutip.fastsparse import fast_csr_matrix, fast_identity; File ""D:\Python\Python36\lib\site-packages\qutip\fastsparse.py"", line 37, in <module>; from scipy.sparse.sputils import (upcast, upcast_char, to_native, isdense, isshape,; ImportError: cannot import name 'IndexMixin'; >>>. I've consulted the problem with the Scipy team and they suggested that:; IndexMixin got moved and changed in gh-7827. It was private though, so QuTiP should not be using it. So would it be possible to update the QuTiP and to fix this problem? Thanks.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1019:1014,update,update,1014,https://qutip.org,https://github.com/qutip/qutip/issues/1019,1,['update'],['update']
Deployability,"QuTiP currently uses QCircuit 2 (version of 2011) to generate LaTeX circuits that are printed to screen or saved to file. A newer version of QCircuit is available, 2.6.0 (2018) https://www.ctan.org/pkg/qcircuit. * `qcircuit` could be updated to the latest version . * Also, the use of this open source package could be highlighted more evidently in the documentation. * Another package has been recently released, https://arxiv.org/abs/1809.03842, Quantikz, which has some features related to noise that could be useful especially with regard to PR #1065, Google Summer of Code project by @BoxiLi on noise modeling in QIP. As this other package is very young, maybe an option to draw the circuit with this package, instead of qcircuit, could be given, also to avoid issues.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1096:234,update,updated,234,https://qutip.org,https://github.com/qutip/qutip/issues/1096,2,"['release', 'update']","['released', 'updated']"
Deployability,"QuTiP development is now based on a large community of continuous users and a smaller group of sporadic developers. Some developers continuously contribute to the development. . The nature of QuTiP, at the frontier of quantum physics research, implies that the development of new modules sometimes overlaps or stems from research projects. It could be nice to enhance the rate of contribution and mentoring from the users community in the spirit of openness and scalability. . ## GSoC and Wiki; An example of project ideas has been provided by the [Google Summer of Code 2019](https://numfocus.org/programs/google-summer-code), for which various researchers and coders, even if not directly part of the lead development team, proposed new projects on the [Wiki](https://github.com/qutip/qutip/wiki//Google-Summer-of-Code-2019). Two of these ideas were eventually brought forth by two students to develop their own projects over the summer. . The details are here https://gsoc2019-boxili.blogspot.com/ and here https://latticemodelfunctions.blogspot.com/. ## KWoC; I applied to the Kharagpur Winter of Code ([KWoC](https://kwoc.kossiitkgp.org/)) where mainly BSc and also MSc / PhDs can participate over the winter to a project on QuTiP. QuTiP just got selected and there is the opportunity for students projects over the winter. I will begin with proposing mine, but this is an opportunity also for mentors to propose their projects, beginning in priority from the lead developers. . ## Other Funding Schemes; Similarly, I have been writing NumFOCUS [small development grants](https://numfocus.org/blog/fall-2018-open-source-development-grants), which have a different goal but can be set up similarly. Also, in the future we may apply again to [Google Season of Docs](https://developers.google.com/season-of-docs). . ## Future Opportunities; Several senior researchers and team leaders have aired the desire to contribute to the project more actively. Setting up a space where they can propose projec",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1132:55,continuous,continuous,55,https://qutip.org,https://github.com/qutip/qutip/issues/1132,2,['continuous'],"['continuous', 'continuously']"
Deployability,QuTiP executive error due to update of scipy,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1019:29,update,update,29,https://qutip.org,https://github.com/qutip/qutip/issues/1019,1,['update'],['update']
Deployability,QuTiP install for latest Python (3.9) on fresh conda env fails,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1371:6,install,install,6,https://qutip.org,https://github.com/qutip/qutip/issues/1371,1,['install'],['install']
Deployability,QuTiP installation test - FAILED test power-gmres,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1750:6,install,installation,6,https://qutip.org,https://github.com/qutip/qutip/issues/1750,1,['install'],['installation']
Deployability,"QuTiP is currently distributed through both Anaconda's conda-forge channel (`conda install qutip`) and PyPI (`pip install qutip`).; It could be helpful to the maintainers to have the project also on the test channel of PyPI, https://test.pypi.org, testing the distribution before uploading a new release on the actual PyPI channel. The [instructions](https://packaging.python.org/guides/using-testpypi/) are straightforward. Placing this as a memo for v. 4.4. Testing this would be helpful also as we attempt the wheels configuration (#933), which, as I understood from @Ericgig, might not be so straightforward given the low-level calls that QuTiP makes in some functions.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/992:83,install,install,83,https://qutip.org,https://github.com/qutip/qutip/issues/992,4,"['configurat', 'install', 'release']","['configuration', 'install', 'release']"
Deployability,"QuTiP is hosted on Anaconda's conda-forge channel and on PyPI. I would like to showcase downloads on the [website](https://github.com/qutip/qutip.github.io) and possibly have a development notebook (or in a personal repository) showing them updated, for QuTiP presentations. . * **conda install qutip**: For conda-forge, it is possible to use the `anaconda-package-data` with `dask` and `intake`, ; https://github.com/ContinuumIO/anaconda-package-data. * **pip install qutip**: For PyPI, it is possible to use, `pypinfo` ; https://github.com/ofek/pypinfo; Note that with`pypinfo` Google's Big Data queries are not free, but new accounts come with some budget credited. Some data: . *`pip install qutip` data starts in 2016. In 2018, 8000 downloads are reported. For 2019, well over 10,000 downloads are predicted. *`conda install qutip` data starts in March 2017. For 2018, 30,000 downloads have been performed. This data is useful to gauge the effective popularity of the two package managers and distribution platforms and can help in setting priorities for relative support and bug fixing. . ## Anaconda downloads; <img width=""441"" alt=""qutip-conda-forge-downloads"" src=""https://user-images.githubusercontent.com/14573436/57989417-45d94380-7ad5-11e9-9694-623fec86865b.png"">. ## PyPI downloads; ![pip-install-qutip-png](https://user-images.githubusercontent.com/14573436/57979590-df174400-7a5a-11e9-807e-c2f46bbb830e.png). With `pypinfo` we can also easily extract other information on users' machines details, such as python usage, which can provide guidance on aspects: . ### Python version; #### 2018; | python_version | percent | download_count |; | -------------- | ------: | -------------: |; | 3.6 | 47.33% | 4,079 |; | 2.7 | 24.25% | 2,090 |; | 3.7 | 13.97% | 1,204 |; | 3.5 | 12.43% | 1,071 |; | 3.4 | 1.94% | 167 |; | 2.6 | 0.09% | 8 |; | Total | | 8,619 |. #### 2017; | python_version | percent | download_count |; | -------------- | ------: | -------------: |; | 2.7 | 51.55% | 4,333 |; ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/997:241,update,updated,241,https://qutip.org,https://github.com/qutip/qutip/issues/997,5,"['install', 'update']","['install', 'updated']"
Deployability,"QuTiP: Quantum Toolbox in Python. ================================. Copyright (c) QuTiP team 2011 and later. Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed,; Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman, Simon Cross, Asier; Galicia, Paul Menczel, and Patrick Hopf. Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco; Nori and Will Zeng. Original developers: R. J. Johansson & P. D. Nation. Previous lead developers: Chris Granade & A. Grimsmo. Currently developed through wide collaboration. See https://github.com/qutip; for details. QuTiP Version: 5.0.4. Numpy Version: 1.24.3. Scipy Version: 1.14.1. Cython Version: None. Matplotlib Version: 3.7.2. Python Version: 3.11.5. Number of CPUs: 16. BLAS Info: INTEL MKL. INTEL MKL Ext: False. Platform Info: Windows (AMD64). Installation path: C:\Users\sabhy\anaconda3\Lib\site-packages\qutip. ================================================================================. Please cite QuTiP in your publication. ================================================================================. For your convenience a bibtex reference can be easily generated using; `qutip.cite()`. On Wed, Sep 25, 2024 at 4:09 AM Paul ***@***.***> wrote:. > Could you please include the output of the command qutip.about()? Because; > your code does not give an error on my setup.; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/2536#issuecomment-2372741589>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AJVIYE6VAXW7QIVMRM4WQTDZYILLZAVCNFSM6AAAAABOYAR32CVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDGNZSG42DCNJYHE>; > .; > You are receiving this because you authored the thread.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2536#issuecomment-2373078683:827,Install,Installation,827,https://qutip.org,https://github.com/qutip/qutip/issues/2536#issuecomment-2373078683,1,['Install'],['Installation']
Deployability,"QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Current admin team: Alexander Pitchford, Paul D. Nation, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, and Eric Giguère.; Project Manager: Franco Nori.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.5.0; Numpy Version: 1.18.1; Scipy Version: 1.4.1; Cython Version: 0.29.14; Matplotlib Version: 3.1.2; Python Version: 3.7.3; Number of CPUs: 32; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1175#issuecomment-583693680:654,Install,Installed,654,https://qutip.org,https://github.com/qutip/qutip/issues/1175#issuecomment-583693680,1,['Install'],['Installed']
Deployability,"Quick example is below. To add a bit more, the ''slowness'''of the standard brmesolve() run in this example depends on whether I install mkl or not. without mkl, its >10 mins, with mkl, about one minute. The run with converting the tensor to sparse always takes around 30-40 seconds, and doesn't depend too much on mkl. ```; import qutip as qt; import numpy as np. #spectral density; def Jw(w): ; return lam**2 * gamma * w / ((w0**2 - w**2)**2 + (gamma**2) * (w**2)); ; ; #power spectrum; def J_power_spectrum(w):; """""" The Ohmic bath power spectrum as a function of w; (and the bath parameters).; """"""; return (; Jw(w) * 2 * (w>0); ); def Ising_solve(N, g0, J0, gamma, tlist, options, use_csr=True):; # N : number of spins; # g0 : splitting; # J0 : couplings. #Setup operators for individual qubits; sx_list, sy_list, sz_list = [], [], []; for i in range(N):; op_list = [qt.qeye(2)] * N; op_list[i] = qt.sigmax(); sx_list.append(qt.tensor(op_list)); op_list[i] = qt.sigmay(); sy_list.append(qt.tensor(op_list)); op_list[i] = qt.sigmaz(); sz_list.append(qt.tensor(op_list)). # Hamiltonian - Energy splitting terms; H = 0.; for i in range(N):; H += g0 * sz_list[i]. # Interaction terms; for n in range(N - 1):; H += -J0 * sx_list[n] * sx_list[n + 1]. # Initial state; state_list = [qt.basis(2, 1)] * (N-1); state_list.append(qt.basis(2, 0)); psi0 = qt.tensor(state_list); fx = 1; fy = 1.1; fz = 0.9; coup = (fx * (sx_list[N-1]) ; + fy * (sy_list[N-1]); + fz * (sz_list[N-1])). ; if use_csr:; R = qt.bloch_redfield_tensor(H, [[coup, J_power_spectrum]], fock_basis=True, sparse_eigensolver=True,br_dtype = 'sparse', sec_cutoff=-1); R = R.to('csr').tidyup(); result = qt.mesolve(R,psi0, tlist, options=options); else:; result = qt.brmesolve(H, psi0, tlist, a_ops = [[coup, J_power_spectrum]], e_ops=sz_list, options=options, sec_cutoff=-1); return result. #bath sd params; lam = 5; w0 = 10; gamma = 5; . #system params; N = 5; g0 = 1; J0 = 5. tlist = np.linspace(0, 100, 1000); options ={""nsteps"": 15000, ""s",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2530#issuecomment-2403834583:129,install,install,129,https://qutip.org,https://github.com/qutip/qutip/issues/2530#issuecomment-2403834583,1,['install'],['install']
Deployability,"Quick update for readers: We (@cgranade, @jakelishman, @Ericgig and I) agreed that the best next step is to implement a draft `Instrument` class that shows the function signatures and interactions with `Qobj` and a few examples and then to see where to go from there.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1673#issuecomment-940314000:6,update,update,6,https://qutip.org,https://github.com/qutip/qutip/issues/1673#issuecomment-940314000,1,['update'],['update']
Deployability,Qutip 4.4.x release ready,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1037:12,release,release,12,https://qutip.org,https://github.com/qutip/qutip/pull/1037,1,['release'],['release']
Deployability,"Qutip `essolve` and QOtoolbox's `ode2es` both work by diagonalizing `L`. Once the eigenstates are computed, the time evolution is mostly free.; `mesolve` solve the ODE system one time increment at a time. So for any long enough `tlist`, `essolve` will be faster. Also, unless you compiled Qutip yourself with the openmp option, `mesolve` will run on one cpu, while the eigen solver run in parallel. With 16 cpus and the size of your problem, not running in parallel will slow you down. With some luck, the next major version release will be distributed compiled with openmp. . With the present release, if you compile with openmp (https://qutip.org/docs/latest/installation.html#direct-setuptools-source-builds) you should get better time, but correlation will still not be great.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1591#issuecomment-870937294:525,release,release,525,https://qutip.org,https://github.com/qutip/qutip/issues/1591#issuecomment-870937294,3,"['install', 'release']","['installation', 'release']"
Deployability,Qutip does not install on M1 mac due to build Numpy requirement,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:15,install,install,15,https://qutip.org,https://github.com/qutip/qutip/issues/1740,1,['install'],['install']
Deployability,Qutip fails to install on Python 3.11.0,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2036:15,install,install,15,https://qutip.org,https://github.com/qutip/qutip/issues/2036,1,['install'],['install']
Deployability,"Qutip use Scipy's Ode solvers. The interface of scipy solvers chaged in recent version, but we are still using [ode](https://docs.scipy.org/doc/scipy/reference/generated/scipy.integrate.ode.html#scipy.integrate.ode). We are using zvode integrator and adams method per default. Most of qutip's solver accept an options arguments which can change the method to 'bdf' but cannot be changed to Isoda or dopri. Mpi is not supported but multiprocessing is used by mcsolve and the stochastic solvers. If you [compile qutip](http://qutip.org/docs/latest/installation.html?highlight=openmp) yourself, we have a openmp parallelized matrix-vector product which can be used to speed up problem with large Hamiltonian.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1101#issuecomment-542843153:176,integrat,integrate,176,https://qutip.org,https://github.com/qutip/qutip/issues/1101#issuecomment-542843153,4,"['install', 'integrat']","['installation', 'integrate', 'integrator']"
Deployability,"Qutip works fine with numpy 1.21.1, but fails on import with 1.22 numpy, released Dec 31st. Tested on ubuntu and MacOS. ```; >>> import qutip; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/work/miniconda3/envs/QF9/lib/python3.9/site-packages/qutip/__init__.py"", line 73, in <module>; (_blas_info() == ""OPENBLAS"" and platform.system() == 'Darwin'); File ""/Users/work/miniconda3/envs/QF9/lib/python3.9/site-packages/qutip/utilities.py"", line 430, in _blas_info; blas_info = config.blas_opt_info; AttributeError: module 'numpy.__config__' has no attribute 'blas_opt_info'; ```. Failure occurs here,. https://github.com/qutip/qutip/blob/52d01da181a21b810c3407812c670f35fdc647e8/qutip/utilities.py#L340. which is kind of mysterious since line 339 explicitly checks that the 'blas_opt_info' attribute exists, and then fails at line 340 because the attribute doesn't exist.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1766:73,release,released,73,https://qutip.org,https://github.com/qutip/qutip/issues/1766,1,['release'],['released']
Deployability,"RCE=1 -D_LARGEFILE64_SOURCE=1 -DNO_ATLAS_INFO=3 -DHAVE_CBLAS -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/umath -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/npymath -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/common -Inumpy/core/include -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/include/numpy -Inumpy/core/src/common -Inumpy/core/src -Inumpy/core -Inumpy/core/src/npymath -Inumpy/core/src/multiarray -Inumpy/core/src/umath -Inumpy/core/src/npysort -I/opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/include/python3.9 -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/common -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/npymath -c numpy/core/src/multiarray/buffer.c -o build/temp.macosx-11.0-arm64-3.9/numpy/core/src/multiarray/buffer.o -MMD -MF build/temp.macosx-11.0-arm64-3.9/numpy/core/src/multiarray/buffer.o.d -faltivec -I/System/Library/Frameworks/vecLib.framework/Headers"" failed with exit status 1; ----------------------------------------; ERROR: Failed building wheel for numpy; Failed to build numpy; ERROR: Could not build wheels for numpy, which is required to install pyproject.toml-based projects; ----------------------------------------; WARNING: Discarding https://files.pythonhosted.org/packages/4c/72/42569d71f1643e581c8ad53073c0773cfadaa8f8cf12ac7599b9de01a9ec/qutip-4.6.2.tar.gz#sha256=9614e8e8270dd28728150c00f74ec750b9a2a23fb3b4fe629006f86dd02011df (from https://pypi.org/simple/qutip/). Command errored out with exit status 1: /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/bin/python3.9 /private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-standalone-pip-g3h2vfu_/__env_pip__.zip/pip install --ignore-installed --no-user --prefix /private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-build-env-m9x0lkny/overlay --no-warn-script-location --no-binary :none: --only-binary :none: -i https://pypi.org/simple -- setuptools packaging wheel 'cython>=0.29.20' 'numpy>=1.16.6,<1.20' 'scipy>=1.0' Check the logs for full command output.; `",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:70451,install,install,70451,https://qutip.org,https://github.com/qutip/qutip/issues/1740,1,['install'],['install']
Deployability,"RESOLVED. First, I changed to a source install inside the anaconda site-packages folder instead of pulling from the site. I was still getting the error, but I found this similar issue at https://github.com/qutip/qutip/pull/311, which suggested I remove the fpmath calls in a couple of the c compiler setup.py files. In particular, the setups in the cy and control subdirectories (see links). For instance, something like . ```; extra_compile_args=['-w', '-ffast-math',; '-O3', '-march=native, '-mfpmath=sse']; ```. to. ```; extra_compile_args=['-w', '-ffast-math',; '-O3', '-march=native'], #, '-mfpmath=sse'; ```. For some reason, this wasn't working either, so I decided to try changing; -march=native. to; -march=x86-64. , and that did the trick!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/409#issuecomment-165934550:39,install,install,39,https://qutip.org,https://github.com/qutip/qutip/issues/409#issuecomment-165934550,1,['install'],['install']
Deployability,"ROR: Some build dependencies for qutip from https://files.pythonhosted.org/packages/43/41/cae32aa94bfe0b22d2aec9392b2676210e5473ce097b10c689297b254a80/qutip-5.0.1.tar.gz conflict with the backend dependencies: numpy==1.17.3 is incompatible with numpy>=1.19.; ```. I know this is quite an old OS and Python version, but that's what I have available. Numpy 1.24 should be supported in Python 3.8.10. ### Code to Reproduce the Bug. ```shell; $ python3 -m venv /tmp/test-venv. $ source /tmp/test-venv/bin/activate. $ pip install --upgrade pip; Collecting pip; Using cached pip-24.0-py3-none-any.whl (2.1 MB); Installing collected packages: pip; Attempting uninstall: pip; Found existing installation: pip 20.0.2; Uninstalling pip-20.0.2:; Successfully uninstalled pip-20.0.2; Successfully installed pip-24.0. $ pip list; Package Version; ------------- -------; pip 24.0; pkg_resources 0.0.0; setuptools 44.0.0. $ pip install qutip; Collecting qutip; Using cached qutip-5.0.1.tar.gz (6.4 MB); Installing build dependencies ... done; Getting requirements to build wheel ... done; ERROR: Some build dependencies for qutip from https://files.pythonhosted.org/packages/43/41/cae32aa94bfe0b22d2aec9392b2676210e5473ce097b10c689297b254a80/qutip-5.0.1.tar.gz conflict with the backend dependencies: numpy==1.17.3 is incompatible with numpy>=1.19.; ```. ### Code Output. _No response_. ### Expected Behaviour. Qutip should install normally. ### Your Environment. ```shell; QuTiP Version: 5.0.1; Numpy Version: (1.17.3) (apparently this is the version it's trying to install); Scipy Version: (1.10.1); Cython Version: (3.0.2); Matplotlib Version: -; Python Version: 3.8.10; Number of CPUs: 16; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64) (Ubuntu 20.04.6 LTS); ```. ### Additional Context. Here's the output of `pip install --verbose qutip`, not sure if it's of any help. <details><summary>Output</summary>. ```; pip install --verbose qutip; Using pip 24.0 from ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2412:1096,Install,Installing,1096,https://qutip.org,https://github.com/qutip/qutip/issues/2412,1,['Install'],['Installing']
Deployability,Rand updates,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/419:5,update,updates,5,https://qutip.org,https://github.com/qutip/qutip/pull/419,1,['update'],['updates']
Deployability,"Referencing this : https://github.com/qutip/qutip-doc/pull/70. 1. Having manually compiled the changelog for v4.4.1 and v4.5.x today, I think that maybe we should try automating the release notes/changelogs with something like this : https://github.com/github-tools/github-release-notes; I'm attaching release notes generated by this for QuTiP.; [RELEASE_NOTES.txt](https://github.com/qutip/qutip/files/3728179/RELEASE_NOTES.txt). 2. We could also, in pursuit of having an automated release notes/changelog system start with making commits in more of a standard format, using some pre-decided keywords like [bugfix] or [improvement] in the commit message. I understand that this is a rather ambitious thing to say, but we can then use `grep` and `git log` itself to generate these in markdown. As a first step, I am proposing to use **Pull request /Issue** templates, something like this for instance : https://github.com/angular-translate/angular-translate/blob/master/.github/ISSUE_TEMPLATE.md; This way, all our Pull Requests and Issues will be homogeneously formatted.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1108:182,release,release,182,https://qutip.org,https://github.com/qutip/qutip/issues/1108,4,['release'],"['release', 'release-notes']"
Deployability,"Regarding the suggestions in the TODO list:. > Have qutip-qip be an optional dependency. I'm wondering about this. Having `pip install qutip[qip]` is nice, but what should happen with `pip install qutip[full]`? Should that also install `qutip_qip`? If not should we then leave `qutip_qip` out of `full`? And should we have `qutip[full-family]`?. > Add installation of qutip-qip to the CI workflow. This we should not do -- we don't want anything in core qutip to accidentally require qutip_qip (that was sort of the point of the family packages).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1920#issuecomment-1147715338:127,install,install,127,https://qutip.org,https://github.com/qutip/qutip/pull/1920#issuecomment-1147715338,4,['install'],"['install', 'installation']"
Deployability,"Regarding your questions:. - It's the same in QuTiP 5 currently. I am creating a PR also for that version, but I will include support for multiple coupling operators to the PR.; - Yes, I will add a test for this.; - This parameter is only relevant for `fmmesolve` ( master equation solver ). There is already the parameter `kmax` which sets the truncation of sidebands to be considered for the integration of the coupling operator. The integral to solve reads as:. $$ \frac{1}{T} \int_0^T dt e^{-ik\Omega t} f(t) $$. where $k \in \[-k_{max}, k_{max} \]$ and $f(t)$ is a $T$-periodic function. Hence, we know the frequency of the integrand and therefore the required number of grid points for the numerical integration can be set based on `kmax`.; I think, we don't need to create another parameter for `nT`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1961#issuecomment-1198959790:394,integrat,integration,394,https://qutip.org,https://github.com/qutip/qutip/pull/1961#issuecomment-1198959790,2,['integrat'],['integration']
Deployability,Release 3.1 code cleanup,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/292:0,Release,Release,0,https://qutip.org,https://github.com/qutip/qutip/pull/292,2,['Release'],['Release']
Deployability,Release for 4.6.2 version.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1565:0,Release,Release,0,https://qutip.org,https://github.com/qutip/qutip/pull/1565,1,['Release'],['Release']
Deployability,Release status updated,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/656:0,Release,Release,0,https://qutip.org,https://github.com/qutip/qutip/pull/656,2,"['Release', 'update']","['Release', 'updated']"
Deployability,"Release\pyrex\rhs14880.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_pw_8rhs14880_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:7589,Release,Release,7589,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"Release\pyrex\rhs14881.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_pw_8rhs14881_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:13342,Release,Release,13342,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"Release\pyrex\rhs14882.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_pw_8rhs14882_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:19260,Release,Release,19260,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"Release\pyrex\rhs14883.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_pw_8rhs14883_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; ok; correlation: comparing TLS emission correlations (fn-list td format) ... ok; correlation: comparing TLS emission correlations (fn td format) ... ok; Counting statistics: current and current noise in a DQD model ... ok; Dispersive cQED Setup: compare unitary matrix for ISWAP and propogator ... ok; Dispersive cQED Setup: compare unitary matrix for ISWAP, SQRTISWAP, ... ok; Diagonalization of random two-level system ... ok; Diagonalizat",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:25178,Release,Release,25178,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,Remove mpi from full and update versions,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2319:25,update,update,25,https://qutip.org,https://github.com/qutip/qutip/pull/2319,1,['update'],['update']
Deployability,"Reproduce the Bug. ```shell; $ python3 -m venv /tmp/test-venv. $ source /tmp/test-venv/bin/activate. $ pip install --upgrade pip; Collecting pip; Using cached pip-24.0-py3-none-any.whl (2.1 MB); Installing collected packages: pip; Attempting uninstall: pip; Found existing installation: pip 20.0.2; Uninstalling pip-20.0.2:; Successfully uninstalled pip-20.0.2; Successfully installed pip-24.0. $ pip list; Package Version; ------------- -------; pip 24.0; pkg_resources 0.0.0; setuptools 44.0.0. $ pip install qutip; Collecting qutip; Using cached qutip-5.0.1.tar.gz (6.4 MB); Installing build dependencies ... done; Getting requirements to build wheel ... done; ERROR: Some build dependencies for qutip from https://files.pythonhosted.org/packages/43/41/cae32aa94bfe0b22d2aec9392b2676210e5473ce097b10c689297b254a80/qutip-5.0.1.tar.gz conflict with the backend dependencies: numpy==1.17.3 is incompatible with numpy>=1.19.; ```. ### Code Output. _No response_. ### Expected Behaviour. Qutip should install normally. ### Your Environment. ```shell; QuTiP Version: 5.0.1; Numpy Version: (1.17.3) (apparently this is the version it's trying to install); Scipy Version: (1.10.1); Cython Version: (3.0.2); Matplotlib Version: -; Python Version: 3.8.10; Number of CPUs: 16; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64) (Ubuntu 20.04.6 LTS); ```. ### Additional Context. Here's the output of `pip install --verbose qutip`, not sure if it's of any help. <details><summary>Output</summary>. ```; pip install --verbose qutip; Using pip 24.0 from /tmp/test-venv/lib/python3.8/site-packages/pip (python 3.8); Collecting qutip; Using cached qutip-5.0.1.tar.gz (6.4 MB); Running command pip subprocess to install build dependencies; Ignoring cython: markers 'python_version >= ""3.10""' don't match your environment; Collecting setuptools; Using cached setuptools-69.5.1-py3-none-any.whl.metadata (6.2 kB); Collecting packaging; Using cached packaging-24.0-py3-no",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2412:1517,install,install,1517,https://qutip.org,https://github.com/qutip/qutip/issues/2412,1,['install'],['install']
Deployability,"Required due to changes in scipy 1.6.1. Using an explicit dtype will make matrix construction more robust. Fixes qutip Issue #1451. Tested on Debian unstable, with this patch tests/test_sparse.py now passes with scipy 1.6.1. **Description**. scipy 1.6.1 changed the API for constructing sparse matrices with `scipy.sparse.csr_matrix` (affecting the COO format). This caused qutip TestDicke tests in test_piqs.py (test_lindbladian, test_lindbladian_dims, test_liouvillian) to fail. . This patch avoids the problem by setting the dtype explicitly to np,complex128. . **Related issues or PRs**. fixes #1451. **Changelog**; Provide explicit dtype=np.complex128 when constructing sparse matrixes with csr_matrix. Required for working with scipy 1.6.1.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1452:169,patch,patch,169,https://qutip.org,https://github.com/qutip/qutip/pull/1452,2,['patch'],['patch']
Deployability,Reset master to Beta non-released and bump point release,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/721:25,release,released,25,https://qutip.org,https://github.com/qutip/qutip/pull/721,2,['release'],"['release', 'released']"
Deployability,"Restructed the benchmark scripts so that matlab and qutip benchmarks can be run separately, and the comparison be done with two arbitrary benchmark results. The point of this is to make it possible to compare the benchmark results of two qutip versions, for example the last stable release and the current development code.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/14:282,release,release,282,https://qutip.org,https://github.com/qutip/qutip/pull/14,1,['release'],['release']
Deployability,Rewrite entire git procedure for release,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1544:33,release,release,33,https://qutip.org,https://github.com/qutip/qutip/pull/1544,1,['release'],['release']
Deployability,"Running `conda update qutip` didn't update my installation. Then, when I tried to install a specific version using `conda install qutip=4.6.2` it gave me a very large number of conflicts. . However, I then removed my install and was able to install the current version of QuTiP using `pip` and it appears to now be working. Thank you for the help.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1634#issuecomment-895792055:15,update,update,15,https://qutip.org,https://github.com/qutip/qutip/issues/1634#issuecomment-895792055,7,"['install', 'update']","['install', 'installation', 'update']"
Deployability,"Running `travis lint` gives a bunch of warning. Like for instance, `sudo : required` is no longer needed, and Travis migrated to a new architecture. So the `travis.yml` file needs to be updated. https://blog.travis-ci.com/2018-10-04-combining-linux-infrastructures",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1133:186,update,updated,186,https://qutip.org,https://github.com/qutip/qutip/issues/1133,1,['update'],['updated']
Deployability,Running it through the profiler suggests that cy_expect_psi_csr is only responsible for a small part of the time (accumulative time 4.2 sec as compared to total run time of 148 sec). ```; Wed Nov 26 15:04:59 2014 profile.out; 5155120 function calls (5143582 primitive calls) in 148.280 seconds; Ordered by: cumulative time; List reduced from 3097 to 100 due to restriction <100>; ncalls tottime percall cumtime percall filename:lineno(function); 441/1 0.014 0.000 148.283 148.283 {built-in method exec}; 1 0.001 0.001 148.283 148.283 mcsolve-performance.py:1(<module>); 2 0.000 0.000 147.463 73.732 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:69(mcsolve); 2 0.000 0.000 147.411 73.706 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:446(run); 2 0.000 0.000 147.411 73.705 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:423(parallel); 2 0.011 0.006 147.411 73.705 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:415(serial); 1000 8.867 0.009 147.340 0.147 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:757(_mc_alg_evolve); 453518 1.543 0.000 130.497 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:376(integrate); 453518 127.846 0.000 128.245 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:859(run); 395940 0.709 0.000 74.413 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:747(step); 171960 4.219 0.000 4.219 0.000 {built-in method cy_expect_psi_csr}; ```,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/264#issuecomment-64519867:1249,integrat,integrate,1249,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-64519867,4,['integrat'],['integrate']
Deployability,"Running this code; import qutip.testing as qt; qt.run(); produces an error:. Monte-carlo: Collapse terms constant (str format) ... cl : Command line warning D9025 : overriding '/W3' with '/w'; cl : Command line warning D9025 : overriding '/Ox' with '/O1'; cqobjevo_compiled_coeff_130828459648281117.cpp; c:\anaconda\lib\site-packages\numpy\core\include\numpy\npy_1_7_deprecated_api.h(14) : Warning Msg: Using deprecated NumPy API, disable it with #define NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; Creating library C:\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\pyrex\cqobjevo_compiled_coeff_130828459648281117.cp37-win_amd64.lib and object C:\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\pyrex\cqobjevo_compiled_coeff_130828459648281117.cp37-win_amd64.exp; Generating code; Finished generating code; cl : Command line warning D9025 : overriding '/W3' with '/w'; cl : Command line warning D9025 : overriding '/Ox' with '/O1'; cqobjevo_compiled_coeff_8398411180025011525.cpp; c:\anaconda\lib\site-packages\numpy\core\include\numpy\npy_1_7_deprecated_api.h(14) : Warning Msg: Using deprecated NumPy API, disable it with #define NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; Creating library C:\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\pyrex\cqobjevo_compiled_coeff_8398411180025011525.cp37-win_amd64.lib and object C:\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\pyrex\cqobjevo_compiled_coeff_8398411180025011525.cp37-win_amd64.exp; Generating code; Finished generating code; Process SpawnPoolWorker-671:; Process SpawnPoolWorker-669:; Traceback (most recent call last):; Traceback (most recent call last):; File ""C:\Anaconda\lib\multiprocessing\process.py"", line 297, in _bootstrap; self.run(); File ""C:\Anaconda\lib\multiprocessing\process.py"", line 297, in _bootstrap; self.run(); File ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1084:559,Release,Release,559,https://qutip.org,https://github.com/qutip/qutip/issues/1084,4,['Release'],['Release']
Deployability,"Same for me :; I rolled back to previous mkl and qutip by running:; conda install mkl=2018.0.3; conda install qutip=4.1.3. Now my programs calling steadystate work again but I also get 1 error related to mkl and steady when running the full test. Denis. De : zhang [mailto:notifications@github.com]; Envoyé : samedi 28 septembre 2019 09:33; À : qutip/qutip <qutip@noreply.github.com>; Cc : VION Denis <denis.vion@cea.fr>; Comment <comment@noreply.github.com>; Objet : Re: [qutip/qutip] Error with conda MKL2019.0 on Windows (#975). This was reported on the help group; https://groups.google.com/forum/#!topic/qutip/L-MIFFwK0xU. (copying from there); the newest mkl(Math library for intel) version(2019) can not work on QuTiP 4.3.1. I rollback it to mkl(2018.0.3), the qutip.testing then work well. If using mkl(2019.0), there will MKL read problems, like:. File ""C:\Users\ym24chen\Anaconda3\. x = lu.solve(b, verbose=verbose). File ""C:\Users\ym24chen\Anaconda3\envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 164, in solve. np_x, np_error). OSError: exception: access violation reading 0x0000000000000008. envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 384, in mkl_spsolve. Env info:. QuTiP Version: 4.3.1. Numpy Version: 1.15.4. Scipy Version: 1.1.0. Cython Version: 0.29.6. Matplotlib Version: 3.0.3. Python Version: 3.7.2. Number of CPUs: 8. BLAS Info: INTEL MKL. OPENMP Installed: False. INTEL MKL Ext: True. Platform Info: Windows (AMD64). Installation path: C:\Users\canwa\AppData\Local\conda\conda\envs\qutipenv\lib\site-packages\qutip. ==============================================================================. How can I rollback it to mkl(2018.0.3)? I just use ""conda install mkl=2018"" but the test still return errors. —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/qutip/qutip/issues/975?email_source=notifications&email_token=ADBRKX2X6OKO5WY3XBOXMFLQL4CEJA5CNFSM4HFQJOJ2YY3PNVWWK3TUL52",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/975#issuecomment-536288655:74,install,install,74,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-536288655,3,"['install', 'rollback']","['install', 'rollback']"
Deployability,"Scipy 1.14 is not supported yet. The patch will release with 5.0.3, ~~hopefully today~~, tomorrow.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2472#issuecomment-2191420632:37,patch,patch,37,https://qutip.org,https://github.com/qutip/qutip/issues/2472#issuecomment-2191420632,2,"['patch', 'release']","['patch', 'release']"
Deployability,"Scipy 1.5 changed the methods of performing the matrix multiplication to; avoid copying the `indptr` matrix multiple times. This is actually not an; issue at all for us, because we only allow int32 indices (so if the; indices were to upcast, we just throw and exception), but the underlying; private Cython call structure also changed, and our `fast_csr_matrix` was; a direct clone. We add try/catch blocks to switch on the correct types (the overhead; from a failed lookup is trivial compared to the matrix multiplication; time), because we have to support more than just the most recent version; of scipy. We could look up the version of scipy installed, but the; ""try it and see"" approach is more typical Python. This problem should be eliminated by the move to the new data types, as; we will stop relying on private scipy code. See: commit scipy/scipy@53fac7a",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1298:646,install,installed,646,https://qutip.org,https://github.com/qutip/qutip/pull/1298,1,['install'],['installed']
Deployability,"Scipy<1.5 hermitian eigenvalue claculation causing wrong results, should update requirements and testsuite",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1495:73,update,update,73,https://qutip.org,https://github.com/qutip/qutip/issues/1495,1,['update'],['update']
Deployability,See https://github.com/qutip/qutip/pull/1069; The code is (until merged) at https://github.com/qutip/qutip/tree/qutip-4.4.1.; Should be released next week.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1039#issuecomment-520089216:136,release,released,136,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-520089216,1,['release'],['released']
Deployability,"Seems to be back with matplotlib 3.4.1 in my case - exactly same error, very annoying (from matplotlib's site). QuTiP Version: 4.6.0; Numpy Version: 1.20.2; Scipy Version: 1.6.3; Cython Version: 0.29.23; Matplotlib Version: 3.4.1; Python Version: 3.8.8; Number of CPUs: 32; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /home/XXX/anaconda3/envs/qutip/lib/python3.8/site-packages/qutip. raise Exception(""Could not convert string to importable function, ""; Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_xxxxx.pyx",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1326#issuecomment-832382977:302,Install,Installed,302,https://qutip.org,https://github.com/qutip/qutip/issues/1326#issuecomment-832382977,2,['Install'],"['Installation', 'Installed']"
Deployability,"Setting up the testing environment with `conda` avoids the segfault, but hangs indefinitely while running the tests. I'm using the following `run_tests_conda.sh`:; ~~~; #!/usr/bin/env bash; conda create -y -p venv python=3.8 'cython>=0.21' 'numpy>=1.12' 'scipy>=1.0' matplotlib ipython pytest; ./venv/bin/python setup.py install; ./venv/bin/pip freeze > test.log; ./venv/bin/python -c 'import scipy; print(""Scipy config:""); scipy.__config__.show()' >> test.log; ./venv/bin/python -c 'import numpy; print(""Numpy config:""); numpy.__config__.show()' >> test.log; (cd venv && ./bin/python -c 'from qutip.testing import run; run()' 2>&1 | tee -a ../test.log); ~~~. This produces the attached [`test.log`](https://github.com/qutip/qutip/files/4307943/test.log): testing hangs at `test_mcsolve.py::test_MCTDFunc`",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1197#issuecomment-596652939:321,install,install,321,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-596652939,1,['install'],['install']
Deployability,Setup updates,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/606:6,update,updates,6,https://qutip.org,https://github.com/qutip/qutip/pull/606,1,['update'],['updates']
Deployability,"Shall we schedule a 4.6.1 patch release for later this week? Perhaps I should email the others and set up a video call so I can demonstrate the release procedures. I can think of a few little patches that can be backported to 4.6.0, and then hopefully we can make 4.6.2 with new patches we get from Unitary Hack. The Floquet changes (currently on my desk - we've swapped to dealing by email a bit more) and the changes in Wigner will likely be part of the 4.7 release, of stuff I know right now.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1541#issuecomment-831237284:26,patch,patch,26,https://qutip.org,https://github.com/qutip/qutip/pull/1541#issuecomment-831237284,6,"['patch', 'release']","['patch', 'patches', 'release']"
Deployability,"Should be closed by QuTiP [v. 4.5.2](https://github.com/qutip/qutip/releases/tag/v4.5.2), just released.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1304#issuecomment-663613720:68,release,releases,68,https://qutip.org,https://github.com/qutip/qutip/issues/1304#issuecomment-663613720,2,['release'],"['released', 'releases']"
Deployability,Should be fixed by #1199 and released in QuTiP 4.5.2.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1196#issuecomment-809400723:29,release,released,29,https://qutip.org,https://github.com/qutip/qutip/issues/1196#issuecomment-809400723,1,['release'],['released']
Deployability,Should be fixed with the 4.7.5 release.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2293#issuecomment-1969569230:31,release,release,31,https://qutip.org,https://github.com/qutip/qutip/issues/2293#issuecomment-1969569230,2,['release'],['release']
Deployability,"Should be. On Jan 2, 2017 04:35, ""Alexander Pitchford"" <notifications@github.com>; wrote:. > Is this merge ready? I am looking to make the 4.0.2 release; >; > —; > You are receiving this because you were assigned.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/pull/609#issuecomment-269961480>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/ABMPqSIT-mM87hOq6Snnf_eEVt0_ngKnks5rOOEWgaJpZM4LY4iC>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/609#issuecomment-269976248:145,release,release,145,https://qutip.org,https://github.com/qutip/qutip/pull/609#issuecomment-269976248,1,['release'],['release']
Deployability,"Should fix tests/test_propagator.py::testPropHOStrTd sometime failing, ran it 100 times with the patch without error.; Cause: compiling the same string by multiple process at once resulted in them writing temp files with the same filename, resulting in a race condition and random fails. Not sure why it was not caught before.; @nathanshammah, @ajgpitch",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1169:97,patch,patch,97,https://qutip.org,https://github.com/qutip/qutip/pull/1169,1,['patch'],['patch']
Deployability,"Should gcc be reporting redhat 4.8.2 when running​ on ubuntu?. On Mar 25, 2017 11:00, ""Michael Goerz"" <notifications@github.com> wrote:. > Installing qutip via the conda package and then importing it produces a; > crash for me:; >; > goerz@mlhpc2:~> conda create -y -c conda-forge -m -n qutiptest python=3.5 qutip; > Using Anaconda Cloud api site https://api.anaconda.org; > Fetching package metadata: ........; > Solving package specifications: .........; >; > Package plan for installation in environment /home/goerz/.conda/envs/qutiptest:; >; > The following NEW packages will be INSTALLED:; >; > certifi: 2017.1.23-py35_0; > cython: 0.25.2-py35_1; > libgfortran: 3.0.0-1; > mkl: 2017.0.1-0; > ncurses: 5.9-10 numpy: 1.12.1-py35_0; > openssl: 1.0.2k-1; > pip: 9.0.1-py35_1; > python: 3.5.3-1; > qutip: 4.1.0-np112py35_1; > readline: 6.2-2 (soft-link); > scipy: 0.19.0-np112py35_0; > setuptools: 33.1.1-py35_0; > sqlite: 3.13.0-1; > tk: 8.5.19-1; > wheel: 0.29.0-py35_0; > xz: 5.2.2-1; > zlib: 1.2.11-0; >; > Linking packages ...; > [ COMPLETE ]|##########################| 100%; > #; > # To activate this environment, use:; > # $ source activate qutiptest; > #; > # To deactivate this environment, use:; > # $ source deactivate; > #; > goerz@mlhpc2:~> source activate qutiptest; > discarding /home/goerz/.conda/envs/default/bin from PATH; > prepending /home/goerz/.conda/envs/qutiptest/bin to PATH; > (qutiptest)goerz@mlhpc2:~> python; > Python 3.5.3 | packaged by conda-forge | (default, Feb 9 2017, 14:37:12); > [GCC 4.8.2 20140120 (Red Hat 4.8.2-15)] on linux; > Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; > >>> import qutip; > /home/goerz/.conda/envs/qutiptest/lib/python3.5/site-packages/qutip/__init__.py:161: UserWarning: matplotlib not found: Graphics will not work.; > warnings.warn(""matplotlib not found: Graphics will not work.""); > Illegal instruction (core dumped); > (qutiptest)goerz@mlhpc2:~>; >; > Let me know if you need further information on my setup",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/674#issuecomment-289248444:139,Install,Installing,139,https://qutip.org,https://github.com/qutip/qutip/issues/674#issuecomment-289248444,3,"['INSTALL', 'Install', 'install']","['INSTALLED', 'Installing', 'installation']"
Deployability,"Should have been taken care in the recent conda and pip release of QuTiP, 4.4.0, #1037.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/987#issuecomment-510879357:56,release,release,56,https://qutip.org,https://github.com/qutip/qutip/issues/987#issuecomment-510879357,1,['release'],['release']
Deployability,Should now be fixed by later releases of MKL; see scipy/scipy#8205.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/937#issuecomment-809450728:29,release,releases,29,https://qutip.org,https://github.com/qutip/qutip/issues/937#issuecomment-809450728,1,['release'],['releases']
Deployability,"Should we also update the setup.cfg file with the latest version of numpy and python employed in tests? Allowing the installation of previous numpy versions that are not included in the CI may lead unanticipated bugs. Is there any reason to allow older versions of numpy in the setup.cfg (currently `numpy>=1.16"") instead of matching those with the versions used for testing?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1941#issuecomment-1163372067:15,update,update,15,https://qutip.org,https://github.com/qutip/qutip/pull/1941#issuecomment-1163372067,2,"['install', 'update']","['installation', 'update']"
Deployability,"Simon managed the 4.6.1 release using the current version of the release documentation, and we identified lots of places where it wasn't as clear as it could have been. This is a new pass at the same documentation trying to improve it. There are points of the website and documentation procedures that we want to update as well, but at the moment we're just trying to document what you do _right now_.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1544:24,release,release,24,https://qutip.org,https://github.com/qutip/qutip/pull/1544,3,"['release', 'update']","['release', 'update']"
Deployability,"Simulating the stochastic master equation, I got confused since `dW_factors` are used to; compute the measured value, e.g. `_smesolve_single_trajectory` in stochastic.py,; but not in the update of density matrix, e.g. `_rhs_rho_euler_maruyama` in stochastic.py. If it is not a bug, how shall I set the value?; Shall I understand as a fixed quantity as in this [tutorial](http://nbviewer.jupyter.org/github/qutip/qutip-notebooks/blob/master/examples/smesolve-heterodyne.ipynb), ; or is it a free parameter?. Thanks in advance!",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/926:187,update,update,187,https://qutip.org,https://github.com/qutip/qutip/issues/926,1,['update'],['update']
Deployability,"Since I have been using GCC 4.8 for a while now, i did not think about compilers back to 4.4. I will take a look at this code on Monday, but my initial thinking is just to drop the optimization and leave it at that. This would save us from having to run an extra test suite on Travis. The only compiler flags that matter at the end are O3 and the fast math. Everything else is just a few percent improvement at best. . Paul. > On Feb 21, 2015, at 06:42, Dominic Meiser notifications@github.com wrote:; > ; > gcc 4.4 does not support the -flto option for link time optimization. This is still a common compiler because it is the system gcc in centos 6 and redhat enterprise 6.; > ; > In this pull request I've removed that option. Users who need this could set the CCFLAGS environment variable to customize the compiler flags. Alternatively, we could add options to setup.py to enable or disable link time optimization.; > ; > I've also added additional rows to the travis build matrix to test building with gcc 4.4 and clang. In its current form this adds 4 additional rows to the build matrix (2 additional compilers, each tested with python 2.7 and 3.4). Let me know if you think this is excessive. It's possible to add just one python version for gcc 4.4 and clang.; > ; > You can view, comment on, or merge this pull request online at:; > ; > https://github.com/qutip/qutip/pull/318; > ; > Commit Summary; > ; > Remove -flto compilation flags.; > Add gcc4.4 and clang builds to travis build matrix.; > File Changes; > ; > M .travis.yml (8); > M qutip/control/setup.py (4); > M qutip/cy/setup.py (2); > Patch Links:; > ; > https://github.com/qutip/qutip/pull/318.patch; > https://github.com/qutip/qutip/pull/318.diff; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/318#issuecomment-75334652:1606,Patch,Patch,1606,https://qutip.org,https://github.com/qutip/qutip/pull/318#issuecomment-75334652,2,"['Patch', 'patch']","['Patch', 'patch']"
Deployability,"Since NumPy 1.12, `np.linspace` raises a DeprecationWarning when its third `num` parameter cannot be safely interpreted as an integer. This method is used in the `mesolve` tests. Fixed by feeding the calls to `linspace` 100 instead of 100.0. The warning (in Travis CI):; ; ![image](https://user-images.githubusercontent.com/220701/27771317-c325fe9c-5f4c-11e7-8d4b-66980255dcfd.png). The deprecation: https://github.com/numpy/numpy/releases/tag/v1.12.0",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/708:431,release,releases,431,https://qutip.org,https://github.com/qutip/qutip/pull/708,1,['release'],['releases']
Deployability,"Since tests pass with the updated branch, I'm going to merge this.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1692#issuecomment-947776584:26,update,updated,26,https://qutip.org,https://github.com/qutip/qutip/pull/1692#issuecomment-947776584,1,['update'],['updated']
Deployability,"Since the update to version 4.4, calling `mesolve` without collapse operators prints a message ""no collapse operator, using sesolve"" to stdout. Is printing this message really necessary? It breaks our examples for the `krotov` package, see e.g. the notebook https://krotov.readthedocs.io/en/latest/notebooks/01_example_simple_state_to_state.html, where these messages show up in the notebook when it runs with qutip 4.4. Of course I understand that the message is technically correct, and we could work around the problem in `krotov`, but it was nice to be able to use `mesolve` as a catch-all for either a Schrödinger equation or a master equation. We'd have to start routing different cases to `mesolve` and `sesolve` manually, otherwise. Personally, I would argue that this kind of message should be emitted as `logger.debug` instead of `print`, if at all.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1047:10,update,update,10,https://qutip.org,https://github.com/qutip/qutip/issues/1047,1,['update'],['update']
Deployability,"Since we are now using Anaconda as the default installation platform, I think that it is time to move the mcf90 module to its own installer. This can be done in Pull #648, with the files left where they are, and then moved to another install when we get around to it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/439#issuecomment-281571152:47,install,installation,47,https://qutip.org,https://github.com/qutip/qutip/issues/439#issuecomment-281571152,3,['install'],"['install', 'installation', 'installer']"
Deployability,Small doc updates,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2439:10,update,updates,10,https://qutip.org,https://github.com/qutip/qutip/pull/2439,1,['update'],['updates']
Deployability,"So I applied the solution to the code , its doesn't work well in ourcase, their solution does okay for the preset angle ; This is the updated code with custom ordering ; <img width=""661"" alt=""image"" src=""https://github.com/qutip/qutip/assets/54374648/0e02b27c-d09c-4f13-8d29-1031e2f0c92a"">; <img width=""647"" alt=""image"" src=""https://github.com/qutip/qutip/assets/54374648/37c62667-cf01-4d37-9c20-770b6fc3da8f"">; It messes up the older pic, so I feel its best to make custom ordering a parameter users can choose to opt for, they can choose between min, max, average and custom ; While this solution improves it after 2 days of searching this seems like a common problem and a solution is yet to come by from matplotlib ; reference ; https://github.com/matplotlib/matplotlib/issues/25534#issue-1637116709. Some improvements comes from adding the bars one by one ourself ; https://www.mail-archive.com/matplotlib-users@lists.sourceforge.net/msg19740.html#:~:text=As%20for%20the,will%20have%20problems",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2442#issuecomment-2145034602:134,update,updated,134,https://qutip.org,https://github.com/qutip/qutip/pull/2442#issuecomment-2145034602,1,['update'],['updated']
Deployability,"So I decided to reinstall Python (Anaconda specifically) to get a fresh slate as in my own debugging and trying to update packages other code started to behave weirdly. Here is my current qutip.about():; QuTiP Version: 4.6.2; Numpy Version: 1.20.1; Scipy Version: 1.6.2; Cython Version: 0.29.23; Matplotlib Version: 3.3.4; Python Version: 3.8.8; Number of CPUs: 4; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Windows (AMD64); Installation path: C:\ProgramData\Anaconda3\lib\site-packages\qutip. I am using the Qt5Agg matplotlib backend, and changing to the TkAgg backend gives the same behaviour. However, running the code you pasted in a separate (command line) console I am able to view the sphere with even the b.show() command.; I still have this behaviour in my editor however (Visual Studio Code) so I think the problem is something to so with my debug environment, this code even behaves as it should in the powershell window in VS code. ; I know this isnt the VS code issue page but if you have any suggestions I'd much appreciate it",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1616#issuecomment-883428764:115,update,update,115,https://qutip.org,https://github.com/qutip/qutip/issues/1616#issuecomment-883428764,3,"['Install', 'update']","['Installation', 'Installed', 'update']"
Deployability,"So I did an update of my conda environment to the latest version and now also the installation via pip has a problem, producing an `ImportError` (but not a segfault!) in the same location:. goerz@mlhpc2 develop:~/Documents/Programming/QNET> ipython; Python 3.6.0 |Anaconda 4.3.1 (64-bit)| (default, Dec 23 2016, 12:22:00); Type ""copyright"", ""credits"" or ""license"" for more information. IPython 5.1.0 -- An enhanced Interactive Python.; ? -> Introduction and overview of IPython's features.; %quickref -> Quick reference.; help -> Python's own help system.; object? -> Details about 'object', use 'object??' for extra details. In [1]: import qutip; ---------------------------------------------------------------------------; ImportError Traceback (most recent call last); <ipython-input-1-ad45215f3e51> in <module>(); ----> 1 import qutip. /home/goerz/.conda/envs/default/lib/python3.6/site-packages/qutip/__init__.py in <module>(); 169; 170 # core; --> 171 from qutip.qobj import *; 172 from qutip.states import *; 173 from qutip.operators import *. /home/goerz/.conda/envs/default/lib/python3.6/site-packages/qutip/qobj.py in <module>(); 58 import qutip.settings as settings; 59 from qutip import __version__; ---> 60 from qutip.fastsparse import fast_csr_matrix, fast_identity; 61 from qutip.cy.ptrace import _ptrace; 62 from qutip.permute import _permute. /home/goerz/.conda/envs/default/lib/python3.6/site-packages/qutip/fastsparse.py in <module>(); 404 #Need to do some trailing imports here; 405 #-------------------------------------; --> 406 from qutip.cy.spmath import (zcsr_transpose, zcsr_adjoint, zcsr_mult). ImportError: /home/goerz/.conda/envs/default/lib/python3.6/site-packages/qutip/cy/spmath.cpython-36m-x86_64-linux-gnu.so: undefined symbol: _ZTINSt8ios_base7failureB5cxx11E. The verbose log file from the installation (`pip install -v --no-cache-dir qutip`) is here: [pip_log.txt](https://github.com/qutip/qutip/files/914669/pip_log.txt)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/674#issuecomment-293395036:12,update,update,12,https://qutip.org,https://github.com/qutip/qutip/issues/674#issuecomment-293395036,4,"['install', 'update']","['install', 'installation', 'update']"
Deployability,"So I did just that, and the ""overloaded method"" error doesn't happen again, which is good.; But installation still fails on other errors, I believe related to NumPy:. ```; ./setup.py install --user; Compiling qutip/cy/spmatfuncs.pyx because it changed.; Compiling qutip/cy/stochastic.pyx because it changed.; Compiling qutip/cy/sparse_utils.pyx because it changed.; Compiling qutip/cy/graph_utils.pyx because it changed.; Compiling qutip/cy/interpolate.pyx because it changed.; Compiling qutip/cy/spmath.pyx because it changed.; Compiling qutip/cy/heom.pyx because it changed.; Compiling qutip/cy/math.pyx because it changed.; Compiling qutip/cy/spconvert.pyx because it changed.; Compiling qutip/cy/ptrace.pyx because it changed.; Compiling qutip/cy/testing.pyx because it changed.; Compiling qutip/cy/brtools.pyx because it changed.; Compiling qutip/cy/brtools_testing.pyx because it changed.; [ 1/13] Cythonizing qutip/cy/brtools.pyx. Error compiling Cython file:; ------------------------------------------------------------; ... DTYPE = np.float64; ^; ------------------------------------------------------------. qutip/cy/parameters.pxi:2:10: cimported module has no attribute 'float64'. Error compiling Cython file:; ------------------------------------------------------------; ... DTYPE = np.float64; ctypedef np.float64_t DTYPE_t. ITYPE = np.int32; ^; ------------------------------------------------------------. qutip/cy/parameters.pxi:5:10: cimported module has no attribute 'int32'. Error compiling Cython file:; ------------------------------------------------------------; ...; ctypedef np.float64_t DTYPE_t. ITYPE = np.int32; ctypedef np.int32_t ITYPE_t. CTYPE = np.complex128; ^; ------------------------------------------------------------. qutip/cy/parameters.pxi:8:10: cimported module has no attribute 'complex128'. Error compiling Cython file:; ------------------------------------------------------------; ...; ctypedef np.int32_t ITYPE_t. CTYPE = np.complex128; ctypedef np.co",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/723#issuecomment-317495769:96,install,installation,96,https://qutip.org,https://github.com/qutip/qutip/issues/723#issuecomment-317495769,2,['install'],"['install', 'installation']"
Deployability,"So after starting with a fresh install of Anaconda and going through the steps described in https://qutip.org/docs/4.1/installation.html to install through conda-forge and conda, I am still seeing the same behaviour. However I have found a workaround that gives me exactly what I want. During my debugging I ending up adding the `b.make_sphere()` command, this seems to have caused the extra set of axes to keep appearing. I found that by omitting the `make_sphere` command and just replacing `b.show()` with `plt.show()` worked perfectly.; Heres my MWE; ```python; import qutip; import matplotlib.pyplot as plt; b=qutip.Bloch(). b.add_vectors([1,0,0]); b.render(). plt.show(); ```. My `qutip.about()` output is:; ```; QuTiP Version: 4.6.2; Numpy Version: 1.20.3; Scipy Version: 1.6.2; Cython Version: 0.29.24; Matplotlib Version: 3.3.4; Python Version: 3.9.5; Number of CPUs: 4; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Windows (AMD64); Installation path: C:\Users\Chester\.conda\envs\qutip-env\lib\site-packages\qutip; ```. Hopefully this helps someone. @jakelishman I tried interactive mode toggling when this problem first occurred as that's what the behaviour reminded me of too. Gave it another go with my example in this text (replacing the `plt.show()` with `b.show()`) but still same behaviour.; I think it's to do with something similar to the problem/solution in https://stackoverflow.com/questions/12369693/how-to-make-the-plot-not-disappear/12905317 as `self.fig` within the Bloch class is initialised in `render()` (and then called in `show()`) a similar way. But I am not familiar enough with the qutip backend to know if this is an error, especially as this does not seem like a common issue.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1616#issuecomment-883619754:31,install,install,31,https://qutip.org,https://github.com/qutip/qutip/issues/1616#issuecomment-883619754,5,"['Install', 'install']","['Installation', 'Installed', 'install', 'installation']"
Deployability,"So far:; I have created the 4.1.x branch; Created the gztar and zip via sdist; (there was a problem with missing hpp files, now fixed); I have uploaded the packages to the website and updated the links.; I have updated the conda-forge recipe. I am waiting to see how the packages work out before going any further. The Windows ones take about 24 before they get processed in the queue",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/649#issuecomment-285766694:184,update,updated,184,https://qutip.org,https://github.com/qutip/qutip/issues/649#issuecomment-285766694,2,['update'],['updated']
Deployability,"So the error is because QuTiP uses 32 bit int indices. This is because; that was all the scipy supported at the time. This can be updated to; support 64 ints as well, but is a bit of work to do. On Fri, Apr 6, 2018, 08:53 Xavier <notifications@github.com> wrote:. > Thanks for your quick reply. I am using multiple profilers at the moment,; > but albeit large, the RAM usage may not be the main problem. I am running; > the program on a 2 TB VM as well, and it looks like the maximum of N before; > the program crashes is the same. (N=115 crashes, but there should be enough; > RAM available for this parameter. Now running for N=112.); >; > The specific error I get is the following one:; >; > *Traceback (most recent call last):*; > File ""SPI_V5.py"", line 197, in; > H_BS1=-BS_1/(2.*Dt_BS1)*(a_UPs.dag()*a_LOWs+a_UPs*a_LOWs.dag()+a_UPi.dag(); > *a_LOWi+a_UPi*a_LOWi.dag()); > File ""/usr/local/lib/python3.5/dist-packages/qutip/qobj.py"", line 414, in; > *add*; > out.data = self.data + other.data; > File ""/usr/local/lib/python3.5/dist-packages/scipy/sparse/base.py"", line; > 375, in *add*; > return self._add_sparse(other); > File ""/usr/local/lib/python3.5/dist-packages/scipy/sparse/compressed.py"",; > line 342, in _add_sparse; >; > return self._binopt(other, '*plus*'); > File ""/usr/local/lib/python3.5/dist-packages/qutip/fastsparse.py"", line; > 115, in _binopt; > A = fast_csr_matrix((data, indices, indptr), dtype=data.dtype,; > shape=self.shape); > File ""/usr/local/lib/python3.5/dist-packages/qutip/fastsparse.py"", line; > 60, in *init*; >; > *raise TypeError('fast_csr_matrix allows only int32 indices.') TypeError:; > fast_csr_matrix allows only int32 indices.*; >; > To me, it seems that it is due to a bad type of integer passed to a QuTiP; > function. Do you agree?; > I admit that it is hard to solve a problem without having the code; > available, but perhaps you know more of this specific TypeError in QuTiP.; >; > Best regards,; > Xavier; >; > —; > You are receiving this because yo",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/845#issuecomment-379268268:130,update,updated,130,https://qutip.org,https://github.com/qutip/qutip/issues/845#issuecomment-379268268,1,['update'],['updated']
Deployability,"So, I did a lot of digging around trying to add the banner for all the older documentation to point towards the latest. But it was a pain to modify and add manually a message on each page to point towards the latest docs. However, for future releases, we could use the `cannonical_url` option of `sphinx_rtd_theme` which makes search engines index the latest links to the documentations. https://docs.readthedocs.io/en/stable/canonical.html",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1516#issuecomment-467538074:242,release,releases,242,https://qutip.org,https://github.com/qutip/qutip/issues/1516#issuecomment-467538074,1,['release'],['releases']
Deployability,"Solved by QuTiP 4.4.0 PyPI release. It proved quite slow to build the wheels on my try on Colab (5 minutes), we can open another issue in case this is standard.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1008#issuecomment-510884494:27,release,release,27,https://qutip.org,https://github.com/qutip/qutip/issues/1008#issuecomment-510884494,1,['release'],['release']
Deployability,Solved in QuTiP 4.4.0 release. See [`ssesolve` new methods](https://nbviewer.jupyter.org/github/qutip/qutip-notebooks/blob/master/development/development-ssesolver-new-methods.ipynb) and [benchmarks](https://nbviewer.jupyter.org/github/qutip/qutip-notebooks/blob/master/development/development-ssesolve-tests.ipynb) for details. I checked that your snippet now runs.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/857#issuecomment-510887275:22,release,release,22,https://qutip.org,https://github.com/qutip/qutip/issues/857#issuecomment-510887275,1,['release'],['release']
Deployability,Solver contain unique integrator,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1879:22,integrat,integrator,22,https://qutip.org,https://github.com/qutip/qutip/pull/1879,1,['integrat'],['integrator']
Deployability,"Some TestDicke tests in `test_piqs.py` (test_lindbladian, test_lindbladian_dims, test_liouvillian) fail with the recent scipy 1.6.1 release. They were previously passing with scipy 1.6.0. **To Reproduce**. ```; $ cp -r qutip/tests/ /tmp/qutip; $ cd /tmp/qutip; $ pytest-3 -v -k ""TestDicke""; ```. The test error message from `TestDicke.test_lindbladian` is; ```; ___________________________________________________________________________________________ TestDicke.test_lindbladian ____________________________________________________________________________________________. self = <tests.test_piqs.TestDicke object at 0x7f55475a0c10>. def test_lindbladian(self):; """"""; PIQS: Test the generation of the Lindbladian matrix.; """"""; N = 1; gCE = 0.5; gCD = 0.5; gCP = 0.5; gE = 0.1; gD = 0.1; gP = 0.1; ; system = Dicke(; N=N,; emission=gE,; pumping=gP,; dephasing=gD,; collective_emission=gCE,; collective_pumping=gCP,; collective_dephasing=gCD,; ); ; > lindbladian = system.lindbladian(). tests/test_piqs.py:450: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _; /usr/lib/python3/dist-packages/qutip/piqs.py:509: in lindbladian; return cythonized_dicke.lindbladian(); qutip/cy/piqs.pyx:313: in qutip.cy.piqs.Dicke.lindbladian; ???; qutip/cy/piqs.pyx:431: in qutip.cy.piqs.Dicke.lindbladian; ???; /usr/lib/python3/dist-packages/scipy/sparse/compressed.py:54: in __init__; other = self.__class__(coo_matrix(arg1, shape=shape,; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _. self = <[AttributeError('dtype not found') raised in repr()] coo_matrix object at 0x7f55475a0ca0>; arg1 = ([(-0.6000000238418579+0j), (0.6000000238418579+0j), (-0.9000000357627869+0j), (-0.90000003576",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1451:132,release,release,132,https://qutip.org,https://github.com/qutip/qutip/issues/1451,1,['release'],['release']
Deployability,"Some Updates: . 1. I have added some tests for both the Measurement (in qutip/tests/test_circuit_measurement.py) portion and the circuit run (qutip/tests/test_qubitcircuit.py) portions of the code. There is a slight hiccup with the Python 3.8 run of one of the tests (test_run_statistics). I am not sure why it is only failing in the Python 3.8 case. ; 2. I have converted all the tests in qutip/tests/test_qubitcircuit.py to pytest style tests. Maybe, @jakelishman can comment if further changes are required. ; 3. Finally, since `measurement_density` and `measurement_ket` allow for POVM style measurements, it might be better to move those functions to qutip/measurement.py but I am not sure. Maybe @hodgestar can comment on that.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1274#issuecomment-639989935:5,Update,Updates,5,https://qutip.org,https://github.com/qutip/qutip/pull/1274#issuecomment-639989935,1,['Update'],['Updates']
Deployability,Some patches for qip.Gate,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/995:5,patch,patches,5,https://qutip.org,https://github.com/qutip/qutip/pull/995,1,['patch'],['patches']
Deployability,Some updates to the Cython code. Also removed the test scripts for the mcf90 routine as Pull #648 removed the ability to install the module.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/650:5,update,updates,5,https://qutip.org,https://github.com/qutip/qutip/pull/650,2,"['install', 'update']","['install', 'updates']"
Deployability,"Some updates: . 1. I have added specifying kets as `ops` in `measure` and `measurement_statistics`. I have also added a check for whether the sum of all the measurement operators sums to identity which should be the case with any POVMs. New tests for the same have been added as well ! ; 2. I have removed `self.gates` as well as `self.gates_and_measurements`. The replacement is the more ""general"" (and less of a mouthful) `self.circuit_ops` which contains both. I still allow `propagators` function to be allowed in this case (because it is useful internally in `run`). However, now if a circuit with measurement needs to call `resolve_gates` or `adjacent_gates`, it needs to add measurements after the fact. . @BoxiLi, any opinions ? I have also addressed all the other minor issues as well ! . P.S. All of the new codeclimate issues are just previous issues re-appearing carried on because I modified those lines.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1274#issuecomment-647187809:5,update,updates,5,https://qutip.org,https://github.com/qutip/qutip/pull/1274#issuecomment-647187809,1,['update'],['updates']
Deployability,Some updates:. 1. All measurements (except the one in the computational basis) have now been moved to qutip/measurement.py. The interface for the previous measurement style (using observables and eigenstates) remains the same. The only difference is that the `measure` and `measurement_statistics` functions now act as dispatch functions that can carry out projective measurements instead when the `op : list of projection operators` ; 2. I have moved all measurement tests to qutip/tests/test_measurement.py as well as moved all measurement tests to pytest style,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1274#issuecomment-643731499:5,update,updates,5,https://qutip.org,https://github.com/qutip/qutip/pull/1274#issuecomment-643731499,1,['update'],['updates']
Deployability,"Sorry @vikas-chaudhary-2802 I didn't notice your question last week. As boxi said, might be a bad install or you are using the wrong version. The ''how to contribute to qutip'' section of this tutorial might be useful for setting things up https://colab.research.google.com/drive/1RcgX7oEzGjzPAF8Ryus54Q5UmyMddmLA?usp=sharing",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2345#issuecomment-2016997897:98,install,install,98,https://qutip.org,https://github.com/qutip/qutip/issues/2345#issuecomment-2016997897,1,['install'],['install']
Deployability,"Sorry for such a long delay... @QuantumFall This issue somehow escaped from my email list and I never noticed it. This is actually a situation often encountered when testing just one gate. If Hamiltonian acts trivially on the state for a few time steps, the adaptive solver may decide on a step size so large that all the reaming pulses are skipped. Set the max step size fixes it:; ```python; options = qutip.Options(max_step=0.05); processor_state = processor.run_state(init_state, options=options).states[-1].tidyup(1.0e-6); ```. Usually, this is because the Hamiltonian is 0 at the first few steps. This example is actually slightly different. The first pulse is a non-trivial (sxsx+sysy) (swap-like). Maybe it is because it has no effect on the initial state `(0,0,0,1)`. But `(1,0,0,0)` seems to work well. It seems really necessary to adaptively choose a step size for the simulators. BTW, new updates will most likely only be added to the separate package [`qutip-qip`](https://github.com/qutip/qutip-qip). Please feel free to check there.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2003#issuecomment-1343478054:901,update,updates,901,https://qutip.org,https://github.com/qutip/qutip/issues/2003#issuecomment-1343478054,1,['update'],['updates']
Deployability,"Sorry for the delay - my Windows decided it needed an update, which took hours.; I ran the specific test `test_MCSimpleConstFunc` : OK; I ran all the interpolation followed by the all the mcsolve tests: OK; This would seem to resolve #728 ; I would say this is ready to merge. Good work. Thank you @nonhermitian",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/729#issuecomment-317883897:54,update,update,54,https://qutip.org,https://github.com/qutip/qutip/pull/729#issuecomment-317883897,1,['update'],['update']
Deployability,Sorry for the delay @nathanshammah . I have made the changes in https://github.com/qutip/qutip/pull/1165 . Looking forward to see the new release!,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1148#issuecomment-578520593:138,release,release,138,https://qutip.org,https://github.com/qutip/qutip/issues/1148#issuecomment-578520593,1,['release'],['release']
Deployability,"Sorry for the delay on the docstrings and so on, I think all suggestions should be incorporated now. However, thanks to Paul's suggestion of adapting the tutorial 1e. I realized that I made a ""mistake from the very beggining"", namely the function used to fit the correlation function is only good if the imaginary part of the spectral density is 0 at t=0, because I'm using. $C(t)=\sum_{k}a_{k}e^{-b_{k} t}e^{i c_{k} t}$. so . $C_{R}(t)=\sum_{k}a_{k}e^{-b_{k} t}cos(c_{k} t)$. $C_{I}(t)=\sum_{k}a_{k}e^{-b_{k} t}sin(c_{k} t)$. No matter how many terms I take $C_{I}(0)=0$. I should have realized before but this can be bypassed by excluding $t=0$ from the fit, and starting at a small t, you get a decent fit, as long as you don't look at C(0), and I never check for these situations before. The results of doing this are pretty decent, but updating tutorial 1e I realized it required higher calculation times for the HEOMSolver when compared to using another ansatz for the correlation function, since solving is the expensive bit then I changed the code use another function for fitting. $C(t)=\sum_{k}(a_{k}+i d_{k})e^{-b_{k} t}e^{i c_{k} t}$. The downside is that since this function has 4 parameters, it required changing other functions as well, luckily only functions starting with _, hopefully this won't delay the PR too much. I updated the tutorials with this as well, and added a bit so that passing the parameters for the fitting is easier (after this comment), if the change is not desirable we can just go back to the commit before this comment",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2260#issuecomment-1925945764:1338,update,updated,1338,https://qutip.org,https://github.com/qutip/qutip/pull/2260#issuecomment-1925945764,1,['update'],['updated']
Deployability,"Sorry for the delayed reply, here is what I've been trying to do:. N = 8; max_excitation = 1 ; num_levels = 2; dims = [num_levels] * N`. ann_operators = enr_destroy(dims, excitations = max_excitation); w_r = 2 * np.pi * 5; w = np.array([w_r] * N). J_r = 2 * np.pi * 0.4; J_t2 = 1.353 * J_r; J_t1 = 1.035 * J_r. J = np.array([J_t2, J_t1] + [J_r] * (N-5) + [J_t1, J_t2]). kappa = 2.92 * J_r; drive_amp = 2 * np.pi * 0.0001. mod_freq = 2 * np.pi * 0.87; mod_amp = mod_freq * 0.8. t = []. detuning_list = 2 * np.pi * np.linspace(-1, 1, 501). for detuning in detuning_list:; drive_w = (w_r - detuning). H_r = 0; for i, a in enumerate(ann_operators):; H_r += (w[i] - drive_w) * a.dag() * a. H_int = 0; for i in range(len(ann_operators)-1):; H_int += J[i] * (ann_operators[i].dag() * ann_operators[i+1] + ann_operators[i+1].dag() * ann_operators[i]). H_d = -1j * drive_amp * (ann_operators[0] - ann_operators[0].dag()). H = H_r + H_int + H_d; c_ops = [np.sqrt(kappa)*ann_operators[0], np.sqrt(kappa)*ann_operators[-1]]; Op_t = mod_amp * ann_operators[6].dag() * ann_operators[6]. rho_ss = steadystate_floquet(H, c_ops, Op_t, w_d = mod_freq). a_out = np.sqrt(kappa) * expect(ann_operators[-1], rho_ss); t.append(np.sqrt(kappa) * a_out/drive_amp). t = np.array(t). dB = 0. if dB:; plt.plot(detuning_list/2/np.pi, 20*np.log10(np.abs(t))); plt.xlabel(""Detuning (GHz)""); plt.ylabel(""|S21|(dB)""); plt.ylim(-10,0.01). else:; plt.plot(detuning_list/2/np.pi, (np.abs(t))); plt.xlabel(""Detuning (GHz)""); plt.ylabel(""|S21|""); plt.grid()`. Qutip 4.7:; ![image](https://github.com/qutip/qutip/assets/61804899/95a303ef-dcef-4fae-bace-5d6f5b7b24a1). Qutip 5.1.0 (installed by downloading a zip from the git as on April 11th):; ![image](https://github.com/qutip/qutip/assets/61804899/04d3e168-2893-435b-9818-91fe917c5d6b)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2386#issuecomment-2050649919:1641,install,installed,1641,https://qutip.org,https://github.com/qutip/qutip/issues/2386#issuecomment-2050649919,1,['install'],['installed']
Deployability,"Sorry, this reply is very late! I was testing openmp installs on windows the other day. if you make a new conda environment, and make sure to install openmp first, it seems OK. (In once instance I did seem to have your issue, but I am not exactly sure what I did to reproduce it because it suddenly disappeared. Perhaps you had qutip already installed, and then tried to reinstall on top of it with openmp enabled?). however, you may then run into the issue currently being fixed in https://github.com/qutip/qutip/pull/1471 ; You might need to wait a little for that fix to be merged, or use Jake's branch in the mean time.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1378#issuecomment-808861212:53,install,installs,53,https://qutip.org,https://github.com/qutip/qutip/issues/1378#issuecomment-808861212,3,['install'],"['install', 'installed', 'installs']"
Deployability,"Sorry.. got a little distracted, and wanted to check the contributing guidelines on what branch to make the pull request against. Currently it’s master. Is that ok? If yes, I’ll undraft it. Draft PRs are pretty new, and a very nice way to kick off the Continuous Integration. Like in this case, I wanted to check if any of the tests involve that message. As they don’t, this actually is ready to go.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1049#issuecomment-513872964:252,Continuous,Continuous,252,https://qutip.org,https://github.com/qutip/qutip/pull/1049#issuecomment-513872964,2,"['Continuous', 'Integrat']","['Continuous', 'Integration']"
Deployability,Sounds like it is xvfb that is interfering with the test environment. I guess if you install it you'll likely be able to reproduce the error.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1639#issuecomment-908496458:85,install,install,85,https://qutip.org,https://github.com/qutip/qutip/issues/1639#issuecomment-908496458,1,['install'],['install']
Deployability,"Status: Completed.; - New functions for parallelization: parallel_map in parfor module (using multiprocessing) and ipynbtools module (using IPython.parallel). These functions are designed to be as general as possible, and to support the qutip.ui.progressbar interface for displaying progress.; - They will be used to parallelize solvers in qutip.stochastic ; - Perhaps qutip.mcsolve could use this interface too, sometime in the future, instead of rolling its own parallelization using multiprocessing.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/253:448,rolling,rolling,448,https://qutip.org,https://github.com/qutip/qutip/pull/253,1,['rolling'],['rolling']
Deployability,Steadystate patches,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/98:12,patch,patches,12,https://qutip.org,https://github.com/qutip/qutip/pull/98,1,['patch'],['patches']
Deployability,Stochastic patch,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1010:11,patch,patch,11,https://qutip.org,https://github.com/qutip/qutip/pull/1010,1,['patch'],['patch']
Deployability,Stochastic updates,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/288:11,update,updates,11,https://qutip.org,https://github.com/qutip/qutip/pull/288,1,['update'],['updates']
Deployability,"String-based QobjEvo generates several warning messages when it is compiled. The terminal is overwhelmed by those messages when using string-based solvers. Is it possible to suppress/correct them?. Example:; ```python; import numpy as np; from qutip import *; tlist = np.array([0., 1., 2., 3.]); H = [[sigmaz(), 'exp(-t)']]; qu = QobjEvo(H, tlist=tlist); qu.compile(); ```. Terminal output:; ```; cl : Command line warning D9025 : overriding '/W3' with '/w'; cl : Command line warning D9025 : overriding '/Ox' with '/O1'; cqobjevo_compiled_coeff_4851660043300.cpp; c:\users\boxi\miniconda3\envs\qutip-dev-py3\lib\site-packages\numpy\core\include\numpy\npy_1_7_deprecated_api.h(14) : Warning Msg: Using deprecated NumPy API, disable it with #define NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; cqobjevo_compiled_coeff_4851660043300.obj : warning ; LNK4197: export 'PyInit_cqobjevo_compiled_coeff_4851660043300' specified multiple times; using first specification; Creating library C:\Users\Boxi\.pyxbld\temp.win-amd64-3.6\Release\Users\Boxi\.pyxbld\temp.win-amd64-3.6\Release\pyrex\cqobjevo_compiled_coeff_4851660043300.cp36-win_amd64.lib and object C:\Users\Boxi\.pyxbld\temp.win-amd64-3.6\Release\Users\Boxi\.pyxbld\temp.win-amd64-3.6\Release\pyrex\cqobjevo_compiled_coeff_4851660043300.cp36-win_amd64.exp; Generating code; Finished generating code; ```. Environment:; ```; QuTiP Version: 4.5.0.dev0+0f412cd4; Numpy Version: 1.17.5; Scipy Version: 1.2.1; Cython Version: 0.29.14; Matplotlib Version: 2.2.4; Python Version: 3.6.7; Number of CPUs: 12; BLAS Info: Generic; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Windows (AMD64); ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1190:1019,Release,Release,1019,https://qutip.org,https://github.com/qutip/qutip/issues/1190,5,"['Install', 'Release']","['Installed', 'Release']"
Deployability,"Subject: Re: [qutip/qutip] More detailed information for GSoC 2020 project; > (#1184); >; > Hi Boxi,; >; > Can you please modify the projects of the Wiki page as you deem best?; > All: we can also think of changing the order of them. It may be that; > project #3 is deemed the most important.; >; > Best wishes,; >; > Nathan; >; > Dr. Nathan Shammah; > Postdoctoral Research Scientist; > Theoretical Quantum Physics Laboratory; > RIKEN, Wako, Saitama, Japan; > www.nathanshammah.com; >; >; >; > On Sun, Feb 23, 2020 at 5:42 AM Boxi Li <notifications@github.com> wrote:; >; > > I have some detail information for the GSoC 2020 project ""Error; > mitigation; > > in QuTiP"". Unfortunately, I don't have writing access to the QuTiP GitHub; > > Wiki page. I post it here so if anyone finds it nice could copy it to the; > > Wiki page.; > >; > > I add some details based on the original description:; > > ------------------------------; > > 1. Error mitigation in QuTiP; > >; > > From the QuTiP 4.5 release, the qutip.qip module now contains the noisy; > > quantum circuit simulator (which was a GSoC project) providing enhanced; > > features for a pulse-level description of quantum circuits and noise; > > models. A new class Processor and several subclasses are added to; > > represent different platforms for quantum computing. They can transfer a; > > quantum circuit into the corresponding control sequence and simulate the; > > dynamics with QuTiP solvers. Different noise models can be added to; > > qutip.qip.noise to simulate noise in a quantum device.; > >; > > This module is still young and many features can be improved, including; > > new device models, new noise models and integration with the existing; > > general framework for quantum circuits (qutip.qip.circuit). There are; > > also possible applications such as error mitigation techniques [1-3].; > >; > > The tutorial notebooks can be found at; > > http://qutip.org/tutorials.html#nisq. A recent presentation on the; > FOSDEM; > > co",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553:4451,release,release,4451,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553,1,['release'],['release']
Deployability,"Sure, but I suppose I meant: are you planning to integrate that process in the ODE passed to the scipy integrator?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/525#issuecomment-249344184:49,integrat,integrate,49,https://qutip.org,https://github.com/qutip/qutip/pull/525#issuecomment-249344184,2,['integrat'],"['integrate', 'integrator']"
Deployability,Swappable ODE integrators.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1643:14,integrat,integrators,14,https://qutip.org,https://github.com/qutip/qutip/pull/1643,1,['integrat'],['integrators']
Deployability,"Switching `auto_tidyup` to being a relative tolerance not an absolute tolerance I think is a really good idea. It raises the cost of it a bit by making it a two-pass operation (and for sure let's use the max norm, not the trace norm!), but I think it's a sensible compromise. We could even have two options - `tidyup_atol` and `tidyup_rtol` to have both, and have `tidyup_atol` default to `0`. Also, fine point about `QobjEvo` - I'd forgotten that it internally called `tidyup`. I'm certainly in favour of swapping the default to `False` for the next major release. I know people may still want the option, so not a good idea to remove it completely, but I think having the default be `False` is safer numerically.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1349#issuecomment-680027055:557,release,release,557,https://qutip.org,https://github.com/qutip/qutip/issues/1349#issuecomment-680027055,1,['release'],['release']
Deployability,Test skip for 4.5.1 release,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1257:20,release,release,20,https://qutip.org,https://github.com/qutip/qutip/pull/1257,1,['release'],['release']
Deployability,Test updates,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/458:5,update,updates,5,https://qutip.org,https://github.com/qutip/qutip/pull/458,1,['update'],['updates']
Deployability,"Testing locally in a conda environment without NumPy, this seems to work. In particular, I tested with the following commands:. ``` bash; $ conda create -n nonp python=2.7; $ source activate nonp; $ pip install git+https://github.com/cgranade/qutip.git@fix-setup-numpy#egg=QuTiP; ```. Notably, `conda create` still provides setuptools. I have not yet tested with neither setuptools nor numpy.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/489#issuecomment-224191450:203,install,install,203,https://qutip.org,https://github.com/qutip/qutip/pull/489#issuecomment-224191450,1,['install'],['install']
Deployability,"Testing without cython is faster but cython is needed to install qutip. Most tests are only useful to us. We should make a subset of tests to check installation without checking all options. We could have only 1 stochastic test instead of running all 8 solvers, unless you are working on this part of the code, they will all fail or pass together. @costrouc running one test per file would be better than removing some file. Are you in an hurry? I could make it once I am back from vacation (unless someone else have time during new year)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1147#issuecomment-569766176:57,install,install,57,https://qutip.org,https://github.com/qutip/qutip/issues/1147#issuecomment-569766176,2,['install'],"['install', 'installation']"
Deployability,"Thank you Jake for taking a quick look!; I checked once more and the following produces an error (used in an ""empty"" virtual environment):; ```; > pip install setuptools wheel 'cython>=0.29.20' 'numpy>=1.16.6,<1.20' 'scipy>=1.0'; > python setup.py develop. Traceback (most recent call last):; File ""/home/kaladin/Documents/git/qutip/qutip4/setup.py"", line 13, in <module>; import packaging.version; ModuleNotFoundError: No module named 'packaging'; ```; So I think `packaging` it is not included with `setuptools`. . > `requirements.txt` has no special meaning at all so it doesn't really matter,; Lets not add wheels and setuptools to the requirements then. Updating it with the latest dependency versions in setup.cfg dependencies should be fine though.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1715#issuecomment-973123214:151,install,install,151,https://qutip.org,https://github.com/qutip/qutip/pull/1715#issuecomment-973123214,1,['install'],['install']
Deployability,"Thank you Paul,; I will give this a test, probably tomorrow now. ; I am going to try and fix some of the little niggles (mainly in the control tests), then I am going to make a 4.0.2 release. I guess I can include this and the rest of the commits you have made since we made 4.0.0?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/596#issuecomment-269847535:183,release,release,183,https://qutip.org,https://github.com/qutip/qutip/pull/596#issuecomment-269847535,1,['release'],['release']
Deployability,"Thank you Sidhant. I’d split it up. On Sat, 27 Jun 2020 at 06:07, Sidhant Saraogi <notifications@github.com>; wrote:. > Update : Most of the functionality is now there, except measure and; > conditional statements, I hope to add those after we are done merging the; > measurement PR. @nathanshammah <https://github.com/nathanshammah> I was; > wondering if writing to QASM should be a separate PR or the same one ?; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/pull/1291#issuecomment-650486135>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADPF67AEYTRJEAW23HB3JLDRYVV7LANCNFSM4OAG5ZOA>; > .; >; -- ; Dr. Nathan Shammah; www.nathanshammah.com",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1291#issuecomment-650556880:120,Update,Update,120,https://qutip.org,https://github.com/qutip/qutip/pull/1291#issuecomment-650556880,1,['Update'],['Update']
Deployability,Thank you for all the info @hodgestar! I reinstalled qutip in a new environment as you advise and then `conda install nomkl qutip` worked as expected. It resulted now in passing all tests (skipping a few) so I think it's best to leave it as it is for now since @Gerb0ise did not have more success upgrading numpy separately.; This is my current `qutip.about()`; ```; QuTiP Version: 4.6.2; Numpy Version: 1.22.0; Scipy Version: 1.7.3; Cython Version: 0.29.25; Matplotlib Version: 3.5.0; Python Version: 3.9.7; Number of CPUs: 4; BLAS Info: Generic; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Windows (AMD64); Installation path: C:\Users\Stela Kusar\anaconda3\envs\qutip-env\lib\site-packages\qutip; ```,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1750#issuecomment-1006378710:110,install,install,110,https://qutip.org,https://github.com/qutip/qutip/issues/1750#issuecomment-1006378710,3,"['Install', 'install']","['Installation', 'Installed', 'install']"
Deployability,Thank you for creating this thread and encouraging to see that there are more people raising the same issues. I saw it one week ago and came to the conclusion that my research group would be much helped if QuTiP used int64 for the sparce matrix indices. I have the following questions:; 1. When do you decide if you go int64?; 2. How long would it take for you to implement this update?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/850#issuecomment-383573047:379,update,update,379,https://qutip.org,https://github.com/qutip/qutip/issues/850#issuecomment-383573047,1,['update'],['update']
Deployability,"Thank you for doing this quickly, I guess you did until quite late. Yes, tests in `test_integrator` are parameterized over all integrators registered in `sesolve_integrators`, etc.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1643#issuecomment-925428011:127,integrat,integrators,127,https://qutip.org,https://github.com/qutip/qutip/pull/1643#issuecomment-925428011,1,['integrat'],['integrators']
Deployability,Thank you for finding it. You can make a patch if you have time. nonhermitian's `np.iinfo(np.int32).max` seems the best solution. seeds should be `dtype=np.uint32`,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/968#issuecomment-478688966:41,patch,patch,41,https://qutip.org,https://github.com/qutip/qutip/issues/968#issuecomment-478688966,1,['patch'],['patch']
Deployability,"Thank you for looking into this issue. I tried doing as instructed but it doesn't seem to be able to execute the command succesfully. This has been running for 30min now:; ![imagen](https://user-images.githubusercontent.com/85493516/148235603-f69bf0f7-6f69-4eac-8479-863ab7aa3872.png). Below here my qutip.about(). ```; QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman and Simon Cross.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.6.2; Numpy Version: 1.20.3; Scipy Version: 1.7.1; Cython Version: 0.29.24; Matplotlib Version: 3.4.3; Python Version: 3.9.7; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Windows (AMD64); Installation path: C:\Users\Stela Kusar\anaconda3\lib\site-packages\qutip; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1750#issuecomment-1005741549:1057,Install,Installed,1057,https://qutip.org,https://github.com/qutip/qutip/issues/1750#issuecomment-1005741549,2,['Install'],"['Installation', 'Installed']"
Deployability,"Thank you for picking up my suggestion in #1096. ### Suggested Changes; - 1) There are some minor issues with CodeClimate ([here](https://codeclimate.com/github/qutip/qutip/pull/1187)). @christian512 can you please reformat to 79 lines?; This can be done with tools like `black`:; ```; pip install black; black circuit.py --line-length 79; ```; - 2) @christian512 could you add something also in `qutip-doc` to acknowledge the use of this library in the documentation? @BoxiLi recently added circuits to the User Guide, if I remember correctly. . ## Questions and comments; - 3) I then leave it to @BoxiLi to review the PR more closely, if he has time, otherwise I'll look into it this week. . - 4) Is there a problem in theory using `qcircuit` code, which is with license `gpl-2.0` into a BSD-new (maybe @Ericgig @ajgpitch or @goerz know more)?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1187#issuecomment-602522398:290,install,install,290,https://qutip.org,https://github.com/qutip/qutip/pull/1187#issuecomment-602522398,1,['install'],['install']
Deployability,"Thank you for pointing, these functions were added and modified over years and it would be a good idea to unify the documentation. . However we are short handed, so it will probably wait until we rework the dimension representation in a future major release; ( #1476). We are open to help until then.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1722#issuecomment-979361059:250,release,release,250,https://qutip.org,https://github.com/qutip/qutip/issues/1722#issuecomment-979361059,1,['release'],['release']
Deployability,Thank you for replying so quickly. I changed the definition as you mentioned and updated the example; no change in behavior.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/226#issuecomment-54697854:81,update,updated,81,https://qutip.org,https://github.com/qutip/qutip/issues/226#issuecomment-54697854,1,['update'],['updated']
Deployability,"Thank you for reporting, should work in 4.4.1 ; https://github.com/qutip/qutip/tree/qutip-4.4.1 (Should be released next week).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1067#issuecomment-520054549:107,release,released,107,https://qutip.org,https://github.com/qutip/qutip/issues/1067#issuecomment-520054549,1,['release'],['released']
Deployability,"Thank you for reporting, the fix is available in the qutip-4.7.X branch.; We will try to make a release with the fix soon.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2182#issuecomment-1608172869:96,release,release,96,https://qutip.org,https://github.com/qutip/qutip/issues/2182#issuecomment-1608172869,1,['release'],['release']
Deployability,"Thank you for reporting.; There seems to be an issue with our detection of mkl for a while.; Since it's an optional dependancy, the related tests have been quietly skipped for a while... You could probably manually import it until we make a patch:; ```; from ctypes import cdll; import sys; import os. qutip.settings._mkl_lib = cdll.LoadLibrary( os.path.dirname(sys.executable) + r'\Library\bin\mkl_rt.dll' ); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2496#issuecomment-2243309367:241,patch,patch,241,https://qutip.org,https://github.com/qutip/qutip/issues/2496#issuecomment-2243309367,1,['patch'],['patch']
Deployability,"Thank you for reporting.; This should be already fixed in the `master` branch.; You can use `master`, we keep it stable enough that it can be used at any time, or wait for the next release.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1640#issuecomment-902706073:181,release,release,181,https://qutip.org,https://github.com/qutip/qutip/issues/1640#issuecomment-902706073,1,['release'],['release']
Deployability,"Thank you for reporting.; Yes, Qutip does not work with cython 3.0.0.; I found a bug in cython trying to fix it so the patch could take some time.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2198#issuecomment-1642186485:119,patch,patch,119,https://qutip.org,https://github.com/qutip/qutip/issues/2198#issuecomment-1642186485,1,['patch'],['patch']
Deployability,"Thank you for taking this issue. The contribution to the phase is `np.exp(1.0j * 1 * phi)`, ignoring the `m` and it's not documented. So I guess all ket are `m = 1`...; Since it's wrong and not documented, you are free to choose which ever way you prefer. But please update the docstring so that is is clear.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1839#issuecomment-1082462658:267,update,update,267,https://qutip.org,https://github.com/qutip/qutip/issues/1839#issuecomment-1082462658,1,['update'],['update']
Deployability,"Thank you for the answer. I will try to use functions as you suggested. I didn't know how to use pdb so I didn't know what to do. I added print(e) but nothing happens. I can attach my code (in Jupyter notebook) if you'd like to look at it. To give you more information, I tried the same code in a Linux machine and it works fine. So I think the problem might be for Mac computers only. Also, these problem popped up after I upgraded to qutip 4.5. The problem didn't go away when I reverted to the previous Conda environment though...",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1196#issuecomment-596178441:424,upgrade,upgraded,424,https://qutip.org,https://github.com/qutip/qutip/issues/1196#issuecomment-596178441,1,['upgrade'],['upgraded']
Deployability,"Thank you for the comments! . Also, as someone who uses QuTip on a daily basis as part of my work, I was really happy with the changes and restructuring of the solver module. Thank you for the work 😄 . If I may take this opportunity to ask two things:; * I have been looking on Qutip 4.7 for ways to speed up the mc solver simulations, and one of them was to not compute the average density matrix for all times, but only for the last time. Since the behaviour at 4.7 of `mcsolve` was to average the state anyways (despite what I passed on the options object), I found a workaround by having an independent list to create my time dependant Hamiltonian and the `tlist` argument of the solver. Is this something achievable more straightforwardly/differently in Qutip 5.0?; * (shorter): Is there a roadmap for when will Qutip 5.0 be released?. Thank you for your time, and I hope its fine me asking here 😆",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2167#issuecomment-1571077559:830,release,released,830,https://qutip.org,https://github.com/qutip/qutip/pull/2167#issuecomment-1571077559,1,['release'],['released']
Deployability,"Thank you for the details on the new updates. @fminga's suggestions seemed reasonable to me: personally, I would be somewhat reluctant to modify something that is so much at the heart of the library machinery (master equations, etc.) for what seems a very specific use. I admit that part of this resistance is that I cannot really foresee the implications of this change. Now the Qobj permute tests are failing for example. I also see your point for more general definitions. I would recommend that docstrings and tests be included and possibly even some dev notebook or tutorial, or even just a gist here.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1098#issuecomment-571299702:37,update,updates,37,https://qutip.org,https://github.com/qutip/qutip/pull/1098#issuecomment-571299702,1,['update'],['updates']
Deployability,"Thank you for the explanation @phfaist. I don't know the answer unfortunately. There are upcoming developments in quantum tomography with QuTiP, including recently added [notebooks](https://github.com/qutip/qutip-notebooks/pull/79), that warrant looking into this library integration further. . Besides this, regarding cvxpy, the package is now actively maintained also on conda forge https://anaconda.org/cvxgrp/cvxpy/files?page=1, we could add a check in the test failures to the to-do list...",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/874#issuecomment-500419184:272,integrat,integration,272,https://qutip.org,https://github.com/qutip/qutip/issues/874#issuecomment-500419184,1,['integrat'],['integration']
Deployability,Thank you for the fix! I tested it locally and I was able to reproduce the error in #1753 and confirm it is fixed with this PR. `qutip.about()` also returns same message locally (not sure where it is tested if it is tested). It seems that CI was not complaining because we do not test for numpy 1.22 yet (although build requirements do install latest numpy version) but I think @hodgestar plans to include numpy 1.22 in the CI soon (see comments in #1747). I hope this PR can be merged soon as tests in PR qutip/qutip-tensornetwork#10 are failing due to `qutip.about()` not working with numpy 1.22.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1752#issuecomment-1005999347:336,install,install,336,https://qutip.org,https://github.com/qutip/qutip/pull/1752#issuecomment-1005999347,1,['install'],['install']
Deployability,Thank you for the helpful replies and the quick patch. I agree that defaulting to a unipartite system is what most users would expect.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/769#issuecomment-337920147:48,patch,patch,48,https://qutip.org,https://github.com/qutip/qutip/issues/769#issuecomment-337920147,1,['patch'],['patch']
Deployability,"Thank you for the review. > Could you add `mpi4py` to the requirement ins setup.cfg?; >; > You added the function to tests, but mpi4py is never installed for the automated tests. Did you try adding it to one of the job in `.github/workflow/tests.yml`? I am pretty sure it will run with only one process, but running the parallel function on one cpu is better than not testing it at all. If you tried and couldn't install mpi4py on github runner, please add a note about the issues somewhere. I have added it to setup.cfg, and now some tasks are failing.; * The documentation build fails because it can't install `mpi4py` (`mpi.h` is missing). I don't quite understand why that is... I can install `mpi4py` on my laptop without problems (it just uses regular parallel processes instead).; * The `mpi_pmap` tests are still being skipped. I'm sorry, but I don't understand what needs to be done with the `tests.yml`.; * The failing tests on ubuntu-latest, python 3.10 / 3.11 seem unrelated to my changes.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2296#issuecomment-1903335386:144,install,installed,144,https://qutip.org,https://github.com/qutip/qutip/pull/2296#issuecomment-1903335386,4,['install'],"['install', 'installed']"
Deployability,"Thank you for the updates, @gsuarezr !. To give a brief summary of the progress: on our todo-list we have the following items left:; * Neill's comment above and one TODO comment I left somewhere in the code earlier; * Finishing tests for the environment module and the fitting utility function; * Adding tests for the HEOM solver using the new API; * Updating (at least some of) the HEOM tutorial notebooks to show off the new features. The main code and documentation is converging from our side, and I think ready for more detailed reviews.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2534#issuecomment-2437142464:18,update,updates,18,https://qutip.org,https://github.com/qutip/qutip/pull/2534#issuecomment-2437142464,1,['update'],['updates']
Deployability,Thank you for your continuous improvement. I will take a look at it next week.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1739#issuecomment-1045249945:19,continuous,continuous,19,https://qutip.org,https://github.com/qutip/qutip/pull/1739#issuecomment-1045249945,1,['continuous'],['continuous']
Deployability,"Thank you for your interest.; You are looking at the development version of the documentation (`master` instead of `latest`).; If you want to try that function, you will need to install qutip from source or wait until the 5.1 release. (Should be released this fall.)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2525#issuecomment-2334203314:178,install,install,178,https://qutip.org,https://github.com/qutip/qutip/issues/2525#issuecomment-2334203314,3,"['install', 'release']","['install', 'release', 'released']"
Deployability,"Thank you for your prompt reply. @sahmed95. QuTip was installed on Windows; ```; pyhton 3.6.4; ```; We download anaconda and install QuTip from conda-forge with; ```; conda install -c conda-forge qutip; ```; but when run ; ```; import qutip.testing as qt; qt.run(); ```; the following message occurred:; ```; QuTiP: Quantum Toolbox in Python; Copyright (c) 2011 and later.; A. J. Pitchford, P. D. Nation, R. J. Johansson, A. Grimsmo, and C. Granade. QuTiP Version: 4.2.0; Numpy Version: 1.13.3; Scipy Version: 1.0.0; Cython Version: 0.27.3; Matplotlib Version: 2.1.2; Python Version: 3.6.4; Number of CPUs: 4; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Windows (AMD64); Installation path: C:\ProgramData\Anaconda3\lib\site-packages\qutip. DEBUG:qutip.logging_utils:Creating logger for qutip.control.grape with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimconfig with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dynamics with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dump with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.tslotcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.fidcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.propcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimizer with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulsegen with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.loadparams with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulseoptim with policy basic.; Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transf",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-387626958:54,install,installed,54,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-387626958,5,"['Install', 'install']","['Installation', 'Installed', 'install', 'installed']"
Deployability,"Thank you for your swift response Eric. . Your suggestion helped me out. Apparently the relevant .dll file in my \Library\bin\ folder was named 'mkl_rt.2.dll', rather than 'mkl_rt.dll'. I duplicated the my file and renamed it and now everything works as expected. . It seems when qutip is checking for mkl with qutip.settings._find_mkl() it specifically looks for '\mkl_rt.dll'. Probably including the possibility for a deviation of the above form should patch it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2496#issuecomment-2243348834:455,patch,patch,455,https://qutip.org,https://github.com/qutip/qutip/issues/2496#issuecomment-2243348834,1,['patch'],['patch']
Deployability,"Thank you so much all of your help and for responding so quickly! The fix to the example works very well, thanks!. I am working on getting the patch working and installed commits ecca45c, 3e908bb, 8ce7757, 03b4cb7, 346b2e7, and a1c809a. I am getting a ValueError when I run the example and think I might have accidentally missed a commit - would you have an idea of what I might be missing? I am including my QuTiP version information below. Thanks for all of your help. QuTiP Version: 4.7.0.dev0+a1c809a; Numpy Version: 1.21.0; Scipy Version: 1.4.1; Cython Version: 0.29.24; Matplotlib Version: 3.4.2; Python Version: 3.7.6; Number of CPUs: 2; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (x86_64)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1617#issuecomment-886058842:143,patch,patch,143,https://qutip.org,https://github.com/qutip/qutip/issues/1617#issuecomment-886058842,3,"['Install', 'install', 'patch']","['Installed', 'installed', 'patch']"
Deployability,Thank you! I'll try qutip-jax. Looking forward to the official release!,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2320#issuecomment-1933954768:63,release,release,63,https://qutip.org,https://github.com/qutip/qutip/issues/2320#issuecomment-1933954768,1,['release'],['release']
Deployability,Thanks - I'm doing an install on behalf of one of our researchers - I'll pass comment back.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/491#issuecomment-224640717:22,install,install,22,https://qutip.org,https://github.com/qutip/qutip/issues/491#issuecomment-224640717,1,['install'],['install']
Deployability,"Thanks @BoxiLi ; Okay, embarrassingly, I was still in my `update-4,x` branch, so hence didn't find the file. Still, I did try a lot of stuff like `from qutip import hadamard_transform` (in other envs) that didn't work, before I found (with some help) that `from qutip import gates` is a good option. It seems like there was a deliberate choice not to expose the function names individually. A search for ""hadamard_transform"" or ""gates"" does not return anything helpful. Does it need pointing at in the docs build?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2389#issuecomment-2046653469:58,update,update-,58,https://qutip.org,https://github.com/qutip/qutip/issues/2389#issuecomment-2046653469,1,['update'],['update-']
Deployability,Thanks @cgranade. @BoxiLi what's the timeline to remove `qip` from `qutip/qutip`? Are we waiting the QuTiP 5 release?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1781#issuecomment-1028904411:109,release,release,109,https://qutip.org,https://github.com/qutip/qutip/pull/1781#issuecomment-1028904411,1,['release'],['release']
Deployability,"Thanks @eendebakpt for the fix! ; However, a similar fix was already included in dev.major in #1918. The only difference with your approach is that I did not include a try expect for import of iPython because the relevant change for the print_figure function was done 8 years ago. Besides, there is also the issue that currently our tests workflows do not install ipython so `repr` in your tests will not call `_repr_svg_`. Sorry I did not include this fix in master as well, but if you want it to be fixed I recommend cherry-picking the commits of #1918.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1943#issuecomment-1166512776:356,install,install,356,https://qutip.org,https://github.com/qutip/qutip/pull/1943#issuecomment-1166512776,1,['install'],['install']
Deployability,"Thanks @tehruhn for swiftly addressing this issue opened by @Titanosaurus. Please remember update the change log and .rst documentation file, when you manage. (It may be nice to find a way to remind contributors to update the Change log for the new version release, or understand how this can be partly done automatically, as in qiksit).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1104#issuecomment-542009457:91,update,update,91,https://qutip.org,https://github.com/qutip/qutip/pull/1104#issuecomment-542009457,3,"['release', 'update']","['release', 'update']"
Deployability,"Thanks Jake. I've raised the Issue in regards to building deb packages from source (https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=999517), so pip can't be used in that context. The Debian build machinery invokes `python3 setup.py {config,build,install}` not `setup.py develop`, c.f. past build log with numpy 1.19 [here](https://buildd.debian.org/status/fetch.php?pkg=qutip&arch=amd64&ver=4.6.2-2&stamp=1630423818&raw=0).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1720#issuecomment-974835138:248,install,install,248,https://qutip.org,https://github.com/qutip/qutip/issues/1720#issuecomment-974835138,1,['install'],['install']
Deployability,"Thanks Nathan. Once I install your versions of the packages and Python 3.7, these errors are gone.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1018#issuecomment-501582503:22,install,install,22,https://qutip.org,https://github.com/qutip/qutip/issues/1018#issuecomment-501582503,1,['install'],['install']
Deployability,"Thanks Paul, I forgot to make the actual release!. Did you find my little script in qutip-doc for stripping the underscores?. On 12 March 2017 at 16:06, Paul Nation <notifications@github.com> wrote:. > Nevermind. Forgot about the underscore issue with jekyll.; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/649#issuecomment-285954579>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AIxX7U6T0rFVTeBAjupMlDimnzs4dc7Eks5rlBgfgaJpZM4MI5S0>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/649#issuecomment-286080945:41,release,release,41,https://qutip.org,https://github.com/qutip/qutip/issues/649#issuecomment-286080945,1,['release'],['release']
Deployability,"Thanks a lot for the update! Could you please add few unit tests for this module, perhaps based on some of the examples from your notebook?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/282#issuecomment-69420379:21,update,update,21,https://qutip.org,https://github.com/qutip/qutip/pull/282#issuecomment-69420379,1,['update'],['update']
Deployability,"Thanks again for this, that's good to know. With these and related changes we have got some nice speed improvements :-). https://github.com/qutip/continuous-benchmark",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/58#issuecomment-25672612:146,continuous,continuous-benchmark,146,https://qutip.org,https://github.com/qutip/qutip/pull/58#issuecomment-25672612,1,['continuous'],['continuous-benchmark']
Deployability,"Thanks alot for your great help.; Activating conda solved the problem, but still the command ""import numpy as; np"" leads to the following error:. File ""<stdin>"", line 1; import numpy as np; ^; IndentationError: unexpected indent. Other commands like ""import matplotlib.pyplot as plt"" works fine but; something like ""r=np.random.rand(4,4)"" does not work.; My numpy version is 1.19.2. Would you please help me to solve the problem.; Many thanks. On Tue, Dec 1, 2020 at 12:44 AM Boxi Li <notifications@github.com> wrote:. > Every time you open a new terminal, you will need to activate the conda; > environment by conda activate qutip-env. QuTiP is only installed in this; > environment. If you are interested, you could check; > https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html; > for details.; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/1391#issuecomment-736060302>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AR53J43QBLGZO3C3WKRB7BDSSQDMJANCNFSM4UGXA6UA>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1391#issuecomment-736727232:651,install,installed,651,https://qutip.org,https://github.com/qutip/qutip/issues/1391#issuecomment-736727232,1,['install'],['installed']
Deployability,"Thanks for merging!; Is it possible to make a release of qutip 4? Or, if you have a set release calendar, when to expect it?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2283#issuecomment-1887804548:46,release,release,46,https://qutip.org,https://github.com/qutip/qutip/pull/2283#issuecomment-1887804548,2,['release'],['release']
Deployability,"Thanks for pointing this out. I did not know that this was the case. Ironically the complex numbers are done this way to support compilers (VS in particular) that do not obey C99. The suggested patch is a bit difficult to implement as the runtime generated Cython code is compiled via pyximport and getting in there to change the c files would be a bit tricky. However, I know that the Intel compiler has no problem with the Cython code (at least on Linux). So perhaps that is the way to go for Python 3.5.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/447#issuecomment-222288358:194,patch,patch,194,https://qutip.org,https://github.com/qutip/qutip/issues/447#issuecomment-222288358,1,['patch'],['patch']
Deployability,"Thanks for reporting this problem! It seems to be related to the recent numpy 1.9 (works fine with older numpy releases). We should either add `dtype=object` in the call to np.array or use list, as you suggests.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/228#issuecomment-55124130:111,release,releases,111,https://qutip.org,https://github.com/qutip/qutip/issues/228#issuecomment-55124130,1,['release'],['releases']
Deployability,"Thanks for reporting this, indeed it was missing. I have made a PR to fix it. After the PR is merged, you can use the fixed version by compiling `qutip` from the source yourself or wait for the next release (in a few weeks hopefully). If you want to use the fixed sooner and without compiling `qutip` yourself. An alternative is to use the [`qutip-qip`](https://github.com/qutip/qutip-qip) package. Which is equivalent to the module `qutip.qip` you are using. Everything should work if you replace `from qutip.qip import ...` by `from qutip_qip import ...`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1602#issuecomment-875407374:199,release,release,199,https://qutip.org,https://github.com/qutip/qutip/issues/1602#issuecomment-875407374,1,['release'],['release']
Deployability,"Thanks for reporting this. The new version of packaging removed LegacyVersion. They deprecated *constructing* LegacyVersion for two years, but not doing the right thing and raising an error on LegacyVersion ourselves (which we do). So we'll have to remove our check and release 4.7.1 to fix this.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2036#issuecomment-1342764859:270,release,release,270,https://qutip.org,https://github.com/qutip/qutip/issues/2036#issuecomment-1342764859,1,['release'],['release']
Deployability,"Thanks for reporting this. This is actually a bit of a concern - as far as I know none of the developers have the new ARM chips (or even macOS 11) and I don't know how long it'll be until CI servers have them, so there may be more bugs lurking for you. Please let us know if you have any more problems, especially building from source or string-format time-dependence - I'd expect those to be the most fragile to new kernel and hardware changes. @ajgpitch This is actually going to be a nuisance for distributing wheels too. I _think_ GH actions will have the necessary Xcode 12 support, but I'm not sure the multi-wheel tool I'm using does - the new Apple silicon is ARM not x86 so it needs different compilation. We may not be able to support M1 macs in binary releases initially.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1395#issuecomment-735863085:763,release,releases,763,https://qutip.org,https://github.com/qutip/qutip/issues/1395#issuecomment-735863085,1,['release'],['releases']
Deployability,"Thanks for reporting this. We've already fixed it in `master`, but haven't yet pushed a new patch release out. We hope to do that soon. You can temporarily work around it by installing SciPy 1.4 in your QuTiP environment, or building QuTiP from the latest source.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1304#issuecomment-651614556:92,patch,patch,92,https://qutip.org,https://github.com/qutip/qutip/issues/1304#issuecomment-651614556,3,"['install', 'patch', 'release']","['installing', 'patch', 'release']"
Deployability,"Thanks for reporting this. Yes, we certainly want the installation to be smooth on osx... Exactly what problems did you have with macports and xcode? I've got thing running on yosemite and macports, so that's certainly possible, but I have not installed this environment from scratch in a long while, so I don't know what difficulties you might encounter when doing this. . I've not used brew myself, but if you wrote down the steps you had to do to set up things with brew we could provide these as an alternative install path.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/265#issuecomment-64202123:54,install,installation,54,https://qutip.org,https://github.com/qutip/qutip/issues/265#issuecomment-64202123,3,['install'],"['install', 'installation', 'installed']"
Deployability,"Thanks for reviewing! Sounds good, will make those changes ASAP. . Quick disclaimer, I can't seem to install `cvxpy` on my machine without using anaconda, so I haven't run the qutip tests personally. I assume these run automatically in the pipeline. I have done a lot of testing independently though and the implementation seems to work very reliably (often giving more accurate results than the semidefinite program).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2416#issuecomment-2094916281:101,install,install,101,https://qutip.org,https://github.com/qutip/qutip/pull/2416#issuecomment-2094916281,2,"['install', 'pipeline']","['install', 'pipeline']"
Deployability,"Thanks for testing it. Macports still have some advantages over pip, since it supports dependencies on non-python packages. I'm not sure if installing qutip via pip from on a fresh system will resolve all dependencies properly (will have to test this more carefully before next qutip release). Homebrew looks interesting from this point of view (I don't like that everything has to be built from source with macports..) but it is a bit unfortunate that not all qutip dependencies are in the standard homebrew repository.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/62#issuecomment-27496281:140,install,installing,140,https://qutip.org,https://github.com/qutip/qutip/issues/62#issuecomment-27496281,2,"['install', 'release']","['installing', 'release']"
Deployability,"Thanks for the PR @terrorfisch!. I'm not very familiar with this so I'm probably making stupid mistakes. When I try locally `pip3 install \qutip`, also on WSL actually, it still chocks at the line `from Cython.Build import cythonize` in the `setup.py`. And I don't really understand why `pyproject.toml` can help come across that. Do you understand the reason behind why it should work?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1309#issuecomment-654957169:130,install,install,130,https://qutip.org,https://github.com/qutip/qutip/pull/1309#issuecomment-654957169,1,['install'],['install']
Deployability,Thanks for the comment and sorry for the typo. I corrected it. The issue still persists. I also updated [the question](https://quantumcomputing.stackexchange.com/questions/22187/qutip-vs-rk45-which-one-gives-the-correct-results-for-time-dependent-systems) on stack exchange.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1733#issuecomment-986660625:96,update,updated,96,https://qutip.org,https://github.com/qutip/qutip/issues/1733#issuecomment-986660625,1,['update'],['updated']
Deployability,"Thanks for the comment. I was not aware of the change, but actually I do not understand the meaning of partial trace over an object that is not made of multiple tensored objects? And the output in the previous case was the quantum object itself, i.e., there is no effect of `ptrace` if the object is already a single subspace object, right? I see it can come handy in some applications where there is an iterative process of partial tracing subsystems. Not sure of why the change was made, maybe @Ericgig knows more. I still need to understand better to have an opinion. Thanks for opening the issue. Maybe a deprecation warning could be of use, replacing the old mechanism, if the devs want to change the feature with a major release.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1413#issuecomment-753941995:727,release,release,727,https://qutip.org,https://github.com/qutip/qutip/issues/1413#issuecomment-753941995,1,['release'],['release']
Deployability,"Thanks for the explanation. ; You'll see I found some relative imports i missed and updated, and Travis CI is off again",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/246#issuecomment-63487433:84,update,updated,84,https://qutip.org,https://github.com/qutip/qutip/pull/246#issuecomment-63487433,1,['update'],['updated']
Deployability,"Thanks for the interest! To be clear, I wasn't trying to suggest that the whole thing is in scope for QuTiP per se; this PR concerns calling a small one-file [client library](https://github.com/cgranade/tskmon-client) from QuTiP. Given the similarity with that and the PiCloud functionality's goal (integrate QuTiP with third-party web services), maybe a good architecture would be something like a `qutip.services` package, where the expectation is that each submodule would require some additional client library?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/255#issuecomment-63312872:299,integrat,integrate,299,https://qutip.org,https://github.com/qutip/qutip/pull/255#issuecomment-63312872,1,['integrat'],['integrate']
Deployability,Thanks for the merge! Did you update the notebook as well? Thanks,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/783#issuecomment-352050277:30,update,update,30,https://qutip.org,https://github.com/qutip/qutip/pull/783#issuecomment-352050277,1,['update'],['update']
Deployability,"Thanks for the quick response - currently I've just pip-installed the package, but I would be happy to use the main branch if you would be able to fix this. I would find this very useful - for the quantities I am interested in calculating I need much less than 800 repeats to get convergence. I understand it is possible to calculate the expectation directly in ssesolve but I find it is useful to save the states to a file so I have more freedom to calculate a range of different operators at a later date.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2299#issuecomment-1904394637:56,install,installed,56,https://qutip.org,https://github.com/qutip/qutip/issues/2299#issuecomment-1904394637,1,['install'],['installed']
Deployability,Thanks for the reminder. I will discuss once with Nathan regarding some small changes and fix up all the pep8 issues. We are discussing if the name of the module should remain `piqs` and the class as `Dicke` following the manuscript. I will update this by tomorrow and we can merge it asap.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/753#issuecomment-368972564:241,update,update,241,https://qutip.org,https://github.com/qutip/qutip/pull/753#issuecomment-368972564,1,['update'],['update']
Deployability,"Thanks for the response. Now that we have a second opinion from @ajgpitch, a class-based implementation would be awesome. That is of course if you can spare the extra effort @bencbartlett . If not then we can merge this now and open another PR to do this. Once again, thank you very much @bencbartlett for your contribution. Let me know your final comments on whether you can combine the functions to have a cleaner class-based module and I can merge this after. Thank you very much for the contribution. This will certainly be a major feature to showcase in the next version release.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/848#issuecomment-385970958:576,release,release,576,https://qutip.org,https://github.com/qutip/qutip/pull/848#issuecomment-385970958,1,['release'],['release']
Deployability,"Thanks for the review!. > * Should we stop the user from passing a list of kets to `mcsolve` directly?; > Presently it work but it's not documented (and list `ntraj` don't.). You are right, done. Of course we could also allow the same arguments for `mcsolve` as for `run`, but I thought it might be good to keep the `mcsolve` interface simpler. > * It would be nice to have the trajectories per initial state information stored in the result somewhere. I have added that information and checking it in a test. Edit: I forgot that I still haven't updated the docs. Will do that. Edit 2: Done",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2437#issuecomment-2149017143:546,update,updated,546,https://qutip.org,https://github.com/qutip/qutip/pull/2437#issuecomment-2149017143,1,['update'],['updated']
Deployability,"Thanks for the review, I'll update my MR accordingly :)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/762#issuecomment-337017576:28,update,update,28,https://qutip.org,https://github.com/qutip/qutip/pull/762#issuecomment-337017576,1,['update'],['update']
Deployability,"Thanks for this. We've already merged a fix to master (#1440), and we'll be releasing a new version of QuTiP in the coming days that will officially support Numpy 1.20. In the meantime, you can work around by pinning your Numpy version 1.19 (there are some other problems within all current released QuTiP versions when dealing with Numpy 1.20 as well).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1442#issuecomment-780017025:291,release,released,291,https://qutip.org,https://github.com/qutip/qutip/issues/1442#issuecomment-780017025,1,['release'],['released']
Deployability,"Thanks for your comment!; I somehow missed the note that it's on a TODO for the next major release - that's great, as it will make things a bit more consistent.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1672#issuecomment-929486716:91,release,release,91,https://qutip.org,https://github.com/qutip/qutip/issues/1672#issuecomment-929486716,1,['release'],['release']
Deployability,"Thanks for your comments @Ericgig , I will see if there is a way to implement the alternative solution while maintaining the backwards compatibility. Also I'll be happy to contribute and update the docs, let's keep this issue open, I have my full time work but after hours gradually I'll come up with a pull request.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1238#issuecomment-643878326:187,update,update,187,https://qutip.org,https://github.com/qutip/qutip/issues/1238#issuecomment-643878326,1,['update'],['update']
Deployability,"Thanks for your quick reply, I upgraded qutip and the issue is indeed fixed",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2438#issuecomment-2134117269:31,upgrade,upgraded,31,https://qutip.org,https://github.com/qutip/qutip/issues/2438#issuecomment-2134117269,1,['upgrade'],['upgraded']
Deployability,"Thanks for your replies.; I did not have any python on my computer. Firstly, I installed Anaconda, then build a qutip-env. I typed ""conda activate qutip-env"" and then used the following command to install the requirements: ""conda install numpy scipy cython matplotlib pytest pytest-cov jupyter notebook spyder"" .; Then, I added ""conda config --append channels conda-forge"", getting the following warning: ""conda-forge already in channels list, moving to the bottem"".; Then, I run ""conda install qutip"" with no errors.; qutip was installed in ""/root/anaconda3/env"" and i opened a terminal in ""/root"", typed ""python"" and then ""import qutip.testing as qt"" getting the above error.; I really appreciate any help!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1391#issuecomment-735554120:79,install,installed,79,https://qutip.org,https://github.com/qutip/qutip/issues/1391#issuecomment-735554120,5,['install'],"['install', 'installed']"
Deployability,"Thanks for your reply!; My conda version is 4.5.1, and qutip version is 4.2.0.; I use jupyter in anaconda as my IDE, instead of Visual Studio.; I have updated the conda and qutip and it doesn't work either.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/854#issuecomment-382595062:151,update,updated,151,https://qutip.org,https://github.com/qutip/qutip/issues/854#issuecomment-382595062,1,['update'],['updated']
Deployability,"Thanks for your work on this, @hodgestar . I hope you don't mind me asking: do you have a planned release date for `v4.7.1`? I just need to know so that I can decide whether I wait for it to be released or if I look for a temporary workaround.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2036#issuecomment-1344152741:98,release,release,98,https://qutip.org,https://github.com/qutip/qutip/issues/2036#issuecomment-1344152741,2,['release'],"['release', 'released']"
Deployability,"Thanks very much @Ericgig for preparing this!. I feel like it will be quite confusing if gates like `cnot` have different signatures than the ones in qutip-qip. Moreover, many of those gates/transformations are not only relevant to `qip`, but also used in other applications, so maybe we should keep more of them in the main qutip. One of the reasons that we want to include those gates into `qutip.operators` is because a few other downstream packages (e.g. `krylovsolver` that is now merged into qutip, and `qutip-tensornetwork` also uses Hadamard transform) also use them for testing (only) purposes. Having them in the main qutip may save them from depending on qutip-qip. I guess it would be better if we either; - Remove all qip and only define a few `_cnot`, `_swap` as private functions for testing inside the main qutip. And ask whoever else wants to use some gates to install `qutip-qip`. This may result in e.g. `qutip-tensornetwork` depending on `qutip-qip or having to implement a copy of some gates. or; - Include some more commonly used gates like `rx`, `ry` (they are unitaries generated by the Paulis and directly relevant to quantum control) `iswap` etc and keep them identical to the ones in qutip-qip, so that those who just want some gates for testing does not have to download the full qutip-qip. If the problem is the `qutip.qip.expand_operator`. I would argue that we can even include it into the main qutip. It is `tensor` + `permutation` and works not just for qubit systems, but also for other composite Hilbert spaces (provided a `dims`). It is quite handy not just for `qip`, but also for control and probably some other applications. What do you think?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1890#issuecomment-1120403103:878,install,install,878,https://qutip.org,https://github.com/qutip/qutip/pull/1890#issuecomment-1120403103,1,['install'],['install']
Deployability,"Thanks! I used git checkout for ecca45c and reinstalled with python setup.py install, and I get the following error for the minimal example:; ```; Traceback (most recent call last):; File ""MinimalErrorExample.py"", line 62, in <module>; result = cpo.optimize_pulse_unitary(drift, ctrls, U_0, U_targ, n_ts, evo_time, fid_err_targ=fid_err_targ, min_grad=min_grad, max_iter=max_iter, max_wall_time=max_wall_time, out_file_ext=f_ext, init_pulse_type=p_type, log_level=log_level,gen_stats=True,dyn_params=dict(oper_dtype=Qobj,sparse_eigen_decomp=True)); File ""/Users/msoley/opt/anaconda3/lib/python3.7/site-packages/qutip/control/pulseoptim.py"", line 757, in optimize_pulse_unitary; gen_stats=gen_stats); File ""/Users/msoley/opt/anaconda3/lib/python3.7/site-packages/qutip/control/pulseoptim.py"", line 459, in optimize_pulse; result = optim.run_optimization(); File ""/Users/msoley/opt/anaconda3/lib/python3.7/site-packages/qutip/control/optimizer.py"", line 957, in run_optimization; result = self._create_result(); File ""/Users/msoley/opt/anaconda3/lib/python3.7/site-packages/qutip/control/optimizer.py"", line 362, in _create_result; result.initial_fid_err = self.dynamics.fid_computer.get_fid_err(); File ""/Users/msoley/opt/anaconda3/lib/python3.7/site-packages/qutip/control/fidcomp.py"", line 412, in get_fid_err; return np.abs(1 - self.get_fidelity()); File ""/Users/msoley/opt/anaconda3/lib/python3.7/site-packages/qutip/control/fidcomp.py"", line 422, in get_fidelity; self.fid_norm_func(self.get_fidelity_prenorm()); File ""/Users/msoley/opt/anaconda3/lib/python3.7/site-packages/qutip/control/fidcomp.py"", line 438, in get_fidelity_prenorm; dyn.compute_evolution(); File ""/Users/msoley/opt/anaconda3/lib/python3.7/site-packages/qutip/control/dynamics.py"", line 1394, in compute_evolution; self.tslot_computer.recompute_evolution(); File ""/Users/msoley/opt/anaconda3/lib/python3.7/site-packages/qutip/control/tslotcomp.py"", line 265, in recompute_evolution; prop_comp._compute_prop_grad(k, j); File ""/Us",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1617#issuecomment-886098212:77,install,install,77,https://qutip.org,https://github.com/qutip/qutip/issues/1617#issuecomment-886098212,1,['install'],['install']
Deployability,"Thanks! I'll work out how to handle this numpy 1.20 C-API change properly before this is ready to merge, I think - turns out my reading of the numpy release notes was wrong, or (possibly) Cython is generating some compile-time-constant code it should be deciding at runtime (as of the latest numpy). Hopefully it's just a configuration change on our end that I can work out somewhere.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1429#issuecomment-770779664:149,release,release,149,https://qutip.org,https://github.com/qutip/qutip/pull/1429#issuecomment-770779664,2,"['configurat', 'release']","['configuration', 'release']"
Deployability,"Thanks!. @Ericgig ; > If you need to use an array coefficient and this is your restriction on tlist, use qutip.Cubic_spline (or build the QobjEvo before the solver, but I don't remember if it is safe in v4). This is exactly my case. I see, I can just give mesolve a Cubic_spline object, very nice. I didn't know that give `tlist` to mesolve is same as asking these intermediate results. I was using it just as a match for array coefficient. Actually, I've been using array coefficient for a while and I don't even know such functionality exists. And I remember someone else mentioned this to me before, so I shouldn't be the only one. I see in the doc there is a section mentioning it. Probably we could stress it a bit more. @jakelishman ; > We probably shouldn't mutate the given Options object, but the call as written here doesn't make a huge amount of sense - why would you want to run the integrator but not have any output stored at all? You'd just be spinning your processor. Sorry, my post was a bit unclear. I only need the final result. So I set `store_final_state=True`, but that doesn't change the behaviour of `store_state` at all. Indeed, I'm doing so just because I didn't know the solution Eric pointed out before. For me a warning before changing `Options` would be nice. And probably pointing out the solution Eric mentioned?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1437#issuecomment-775319207:895,integrat,integrator,895,https://qutip.org,https://github.com/qutip/qutip/issues/1437#issuecomment-775319207,1,['integrat'],['integrator']
Deployability,"Thanks, I'm glad that it's useful! I broadly agree that moving instructions to Anaconda makes a lot of sense, though I'd suggest keeping the alternative installation methods on a new page (""Advanced Installion,"" perhaps?), as they're still useful for less typical installations. As for the binstar/Anaconda cloud recipes, I do have a working Anaconda 2.3 installation for Windows 10 64-bit, but only for Python 2.7. I've had a lot of trouble with getting side-by-side of 2.7 and 3.4 on Windows for some reason, and there's a few 2-specific libraries I need. When I get through some of my current deadlines, I'll work on getting a Windows binstar recipe going for installing on 2.7, though I'd appreciate help getting it to work on 3.4 as well. Thanks!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-150433198:153,install,installation,153,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-150433198,5,"['Install', 'install']","['Installion', 'installation', 'installations', 'installing']"
Deployability,"Thanks, and I'm sorry for the hassle. No idea what happened last time. Perhaps it's related to using the legacy container? If you think it's helpful, I can play with `travis.yml` to try and [get the migration working](http://docs.travis-ci.com/user/migrating-from-legacy/?utm_source=legacy-notice&utm_medium=banner&utm_campaign=legacy-upgrade).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/358#issuecomment-128693856:335,upgrade,upgrade,335,https://qutip.org,https://github.com/qutip/qutip/pull/358#issuecomment-128693856,1,['upgrade'],['upgrade']
Deployability,"Thanks, confirming the stray rhs*.pyx files are no longer installed in 4.4.1.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/987#issuecomment-547067014:58,install,installed,58,https://qutip.org,https://github.com/qutip/qutip/issues/987#issuecomment-547067014,1,['install'],['installed']
Deployability,"Thanks, it worked! I simply moved it to the library where third-party packages are installed in Canopy.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/469#issuecomment-215968543:83,install,installed,83,https://qutip.org,https://github.com/qutip/qutip/issues/469#issuecomment-215968543,1,['install'],['installed']
Deployability,"Thanks, it works!; (And actually, PyPi is a better solution. (As you were using MacPorts, and its direct replacement is Homebrew, I though that there is a particular reason it won't work with `pip install qutip`.))",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/62#issuecomment-27495167:197,install,install,197,https://qutip.org,https://github.com/qutip/qutip/issues/62#issuecomment-27495167,1,['install'],['install']
Deployability,"Thanks, this helps track it down. It seems not to be an issue with ENR per se, but with the floquet steadystate solver itself (it also appears without using ENR states). . I think I pinned it down to two small bugs in that seem to have crept in to the solver with the data layer updates, I will make a PR for it and ping you for some feedback, if thats ok. We lack a sufficiently robust test for this solver really, if you can suggest something tractable (very small example, potentially analytical solution we can check against), it would be very helpful.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2386#issuecomment-2051189504:279,update,updates,279,https://qutip.org,https://github.com/qutip/qutip/issues/2386#issuecomment-2051189504,1,['update'],['updates']
Deployability,"Thanks. I added numpy, scipy and matplotlib to the modules not to be reloaded, and the issue seems to have resolved. By the way, I am using an old version of spyder on my device. Could that be the cause of this issue? I do not have the admin control over the device, so if that is likely a cause, I will ask the admin to update spyder.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2121#issuecomment-1469782342:321,update,update,321,https://qutip.org,https://github.com/qutip/qutip/issues/2121#issuecomment-1469782342,1,['update'],['update']
Deployability,"Thanks. I was thinking of restarting the build. Since the PR for the bump worked out just fine (#890), I guess this is okay. Making a new release now.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/889#issuecomment-403668485:138,release,release,138,https://qutip.org,https://github.com/qutip/qutip/pull/889#issuecomment-403668485,1,['release'],['release']
Deployability,"Thanks. Looking good so I'm merging. PS. You do not need to create a new PR when updating a file in a PR. Just commit and push more changes into the branch that you made the pull request from and the PR will be automatically updated. This PR #44 could therefore have a continuation of PR #43. Not a big deal, JFYI.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/44#issuecomment-22769605:225,update,updated,225,https://qutip.org,https://github.com/qutip/qutip/pull/44#issuecomment-22769605,1,['update'],['updated']
Deployability,Thanks. The many files in the diff is because you merged with master rather than rebased to latest commit in master. It's not a problem. I'll take care of this PR manually because if the remaining merge conflicts. This will be the last PR that is excepted for the 3.1 release.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/301#issuecomment-68475039:268,release,release,268,https://qutip.org,https://github.com/qutip/qutip/pull/301#issuecomment-68475039,1,['release'],['release']
Deployability,"That is true. I'll try to look into why this is the case. However, it does have three expectation calculated. You can check this with output.expect ! . Edit: . So, I just realized that the noise-spectrum is associated with the coupling operator [sigmax()], I think the correct call to brmesolve must infact be (updated to current qutip standards) . `output = brmesolve(H, psi0, tlist, [[sigmax(), ohmic_spectrum]], e_ops)`. This is in line with the notation we use in example (https://nbviewer.jupyter.org/github/qutip/qutip-notebooks/blob/master/examples/brmesolve-time-dependent-Liouvillian.ipynb). I will make a pull request updating both the example notebook (http://qutip.org/docs/4.0.2/guide/dynamics/dynamics-bloch-redfield.html ) to reflect this and make sure we depreciate the spectra_cb argument in bloch_redfield_tensor to eliminate the confusion. Thanks for bringing this to notice !",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1223#issuecomment-605711703:311,update,updated,311,https://qutip.org,https://github.com/qutip/qutip/issues/1223#issuecomment-605711703,1,['update'],['updated']
Deployability,"That last commit updates the versions of macOS and XCode that we test against. XCode 12 is comparatively very slow (both compile and run), so we should likely try to figure out why that's the case and improve it. We made the same commit on `dev.major` in #1348.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1347#issuecomment-680065748:17,update,updates,17,https://qutip.org,https://github.com/qutip/qutip/pull/1347#issuecomment-680065748,1,['update'],['updates']
Deployability,"That's a good question... I'm not sure if we should update parfor or create new functions parallel_map, but this is a first attempt to try to generalize the parfor functions we have to work with functions that take arbitray arguments and keyword arguments, and that works with the ui.progressbar interface. The main point here is that I want the multiprocessing and IPython.parallel backed impementation of ""par_something"" to be swappable. The ones we have now are not. If we can agree on a new API for how these functions should behave we could update the old parfor functions instead of creating new ones. However, this would break backwards compatibility in some minor ways, so I didn't want to mess with the existing parfor functions, since they are part of our published API. Hence the new functions.. I know it's not ideal to have alternative functions that does the same thing, but also not good to break backwards compatibility.. Also, the parfor name is a bit of a misnomer, since it is a map function rather than a for loop.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/253#issuecomment-63156126:52,update,update,52,https://qutip.org,https://github.com/qutip/qutip/pull/253#issuecomment-63156126,2,['update'],['update']
Deployability,"That's actually a very nice solution that I hadn't thought about. I guess it's kind of weird that we have a `try/finally` directly inside a context manager, but effectively we're just monkey-patching the `__exit__` method so that `os.chdir(previous_dir)` gets called first, so it's always going to look a little funky. There's our nice commit that swaps them over.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1194#issuecomment-605345803:191,patch,patching,191,https://qutip.org,https://github.com/qutip/qutip/pull/1194#issuecomment-605345803,1,['patch'],['patching']
Deployability,"The ""known issues"" are definitely still there. They cause whatever `dnorm` does using cvxpy to fail, just through having `mkl` as a conda package. `test_metrics` uses the `qutip.settings.has_mkl` to determine whether to skip the dnorm tests. This however is False whenever blas_info is not mkl, mkl could still be installed.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/872#issuecomment-394201492:314,install,installed,314,https://qutip.org,https://github.com/qutip/qutip/issues/872#issuecomment-394201492,1,['install'],['installed']
Deployability,"The Read The Docs version is compiled on each commit, but the website version requires downloading the update version and manually updating the website repo.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2104#issuecomment-1454074321:103,update,update,103,https://qutip.org,https://github.com/qutip/qutip/issues/2104#issuecomment-1454074321,1,['update'],['update']
Deployability,The Travis CI should be up and running now. Can you rebase your PR so we can rerun the tests with the latest travis ci configuration?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/76#issuecomment-36082072:119,configurat,configuration,119,https://qutip.org,https://github.com/qutip/qutip/pull/76#issuecomment-36082072,1,['configurat'],['configuration']
Deployability,"The Travis build seems to create a new conda env each time it runs the test. Consequently it downloads and installs the latest [conda] numpy, scipy etc. I tried creating a fresh conda env yesterday and found that the numpy version was higher than my qutip dev env, which I created a few months ago.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/379#issuecomment-148349639:107,install,installs,107,https://qutip.org,https://github.com/qutip/qutip/pull/379#issuecomment-148349639,1,['install'],['installs']
Deployability,"The Windows test failure is the strange ""Tcl is not properly installed one"". Someone else reported this at https://github.com/microsoft/azure-pipelines-tasks/issues/16426 so I mentioned that we see it too. I linked to this build failure there, so please don't re-run it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1968#issuecomment-1207185394:61,install,installed,61,https://qutip.org,https://github.com/qutip/qutip/pull/1968#issuecomment-1207185394,2,"['install', 'pipeline']","['installed', 'pipelines-tasks']"
Deployability,The [workaround](https://stackoverflow.com/questions/58897928/macos-sdk-headers-for-macos-10-14-pkg-is-incompatible-with-this-version-of-maco) for me seems to be ; ```; sudo rm -rf /Library/Developer/CommandLineTools; xcode-select --install; cd /Library/Developer/CommandLineTools/Packages/; open macOS_SDK_headers_for_macOS_10.14.pkg; ```,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1030#issuecomment-593426036:233,install,install,233,https://qutip.org,https://github.com/qutip/qutip/issues/1030#issuecomment-593426036,1,['install'],['install']
Deployability,"The `Qcircuit.tex` PR was unfortunately many many years ago, long before I made my first commit to QuTiP (according to `git log` it was by Anubhav Vardhan in 2014), so the damage is already done. It was on my mind because there was a PR about updating the version of the code in it (#1187). Nonetheless, we definitely should remove it. @BoxiLi Boxi: `Qcircuit.tex` is a concern for `qutip-qip` more than the main library from 5.0 onwards - it's currently in `qip/circuit_latex.py`, which we'll have removed, but you've gained. It might be most appropriate to handle this the same way Qiskit does - generate code which does `\usepackage{qcircuit}`, and leave it up to the user to have a properly-provisioned LaTeX environment. I note that `qcircuit` is included in MikTeX and TexLive since at least 2018 (but not sure when exactly it was added). > Yeah putting years I think is the correct thing. Didn't know that at the time. Ah, that's good to know, thanks. I'm trying to learn more about licensing - I'm trying to get it sorted now into the right form, but it's a really complicated field. I think if we change `LICENCE.txt` to. ```text; Copyright (c) 2011--2021 Paul Nation and Robert Johansson.; Copyright (c) 2021--2021 QuTiP Admin Team.; All rights reserved. <BSD 3-clause licence>; ```. and update the final `2021` as appropriate, we'll be in the best standing. That's also why we might want to remove the general licence text from each file - it's already redundant, but it'll be much harder to update if we have it scattered everywhere (automation would run the risk of us messing up and changing any external code's licence as well, I think, which would be wrong). > Look forward to talking to you in July!. Me too!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1579#issuecomment-864059845:1298,update,update,1298,https://qutip.org,https://github.com/qutip/qutip/pull/1579#issuecomment-864059845,2,['update'],['update']
Deployability,"The `fidelity` function use the Nielsen & Chuang definition. In a future release, [process_fidelity](https://github.com/qutip/qutip/blob/eeae142630e23818cd08a6b3ea5f6145e3e60225/qutip/core/metrics.py#L148), will be the fidelity version you expect.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2102#issuecomment-1450305103:73,release,release,73,https://qutip.org,https://github.com/qutip/qutip/issues/2102#issuecomment-1450305103,1,['release'],['release']
Deployability,"The array interface is now working for qutip master, but I don't know when it will be made in a release.; overlap between operator is also added.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/938#issuecomment-445046066:96,release,release,96,https://qutip.org,https://github.com/qutip/qutip/issues/938#issuecomment-445046066,1,['release'],['release']
Deployability,"The bug in 1) seems to refer to Issue #1008 due to #999, the incompatibility of current version releases with SciPy 1.3. Try to pinpoint in your virtual environment the version of SciPy to 1.2.1.; Something like `pip install scipy==1.2.1` should work. Also, this is a minor thing but please refer to the current documentation, http://qutip.org/docs/latest/installation.html (QuTiP 4.3, not 4.1). . In a conda environment everything should work properly with these specifications:; ```; QuTiP Version: 4.3.1; Numpy Version: 1.15.4; Scipy Version: 1.2.1; Cython Version: 0.29.8; Matplotlib Version: 3.1.0; Python Version: 3.7.3; Number of CPUs: 2; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (x86_64); Installation path: /miniconda3/lib/python3.7/site-packages/qutip; ```; Also, consider upgrading to python 3.6 or 3.7.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1018#issuecomment-501560442:96,release,releases,96,https://qutip.org,https://github.com/qutip/qutip/issues/1018#issuecomment-501560442,5,"['Install', 'install', 'release']","['Installation', 'Installed', 'install', 'installation', 'releases']"
Deployability,"The canopy needs to be updated as it points toward an old os 10.6 whose SDK is not available on your newer osx. . Paul. > On Oct 14, 2015, at 13:49, rjmagyar notifications@github.com wrote:; > ; > I just built and installed Qutip on the command line using Enthought python. No errors...; > ; > Then when I run I get:; > ; > Enthought Canopy Python 2.7.9 | 64-bit | (default, May 20 2015, 20:01:56) ; > [GCC 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2335.6)] on darwin; > Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; > ; > from qutip import *; > Compiling with an SDK that doesn't seem to exist: /Developer/SDKs/MacOSX10.6.sdk; > Please check your Xcode installation; > In file included from /usr/local/lib/gcc/x86_64-apple-darwin14.4.0/5.1.0/include-fixed/syslimits.h:7:0,; > from /usr/local/lib/gcc/x86_64-apple-darwin14.4.0/5.1.0/include-fixed/limits.h:34,; > from /Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/include/python2.7/Python.h:19,; > from /Users/rjmagya/.pyxbld/temp.macosx-10.6-x86_64-2.7/pyrex/qutip/cy/spmatfuncs.c:16:; > /usr/local/lib/gcc/x86_64-apple-darwin14.4.0/5.1.0/include-fixed/limits.h:168:61: error: no include path in which to search for limits.h; > In file included from /Users/rjmagya/.pyxbld/temp.macosx-10.6-x86_64-2.7/pyrex/qutip/cy/spmatfuncs.c:16:0:; > /Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/include/python2.7/Python.h:33:19: fatal error: stdio.h: No such file or directory; > compilation terminated.; > Traceback (most recent call last):; > File """", line 1, in ; > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/init.py"", line 213, in ; > from qutip.qobj import *; > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/qobj.py"", line 60, in ; > from qutip.ptrace import ptrace; > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packa",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/382#issuecomment-148179436:23,update,updated,23,https://qutip.org,https://github.com/qutip/qutip/issues/382#issuecomment-148179436,3,"['install', 'update']","['installation', 'installed', 'updated']"
Deployability,The commit af17ded3dec6d712eb852575bf6d5a6c5bbaf832 introduced a performance regression in Qobj.expm. https://github.com/qutip/continuous-benchmark#qobj_expm_20,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/50:127,continuous,continuous-benchmark,127,https://qutip.org,https://github.com/qutip/qutip/issues/50,1,['continuous'],['continuous-benchmark']
Deployability,"The compulsive renaming continues.; I also reduced the number of time steps in the test to speed things up, and set to ignore the IntegrationWarning",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/455#issuecomment-194836741:130,Integrat,IntegrationWarning,130,https://qutip.org,https://github.com/qutip/qutip/pull/455#issuecomment-194836741,1,['Integrat'],['IntegrationWarning']
Deployability,The conflict is just because that trailing white space PR got merged. You can update from qutip master and resolve it locally. No worries.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1291#issuecomment-656382945:78,update,update,78,https://qutip.org,https://github.com/qutip/qutip/pull/1291#issuecomment-656382945,1,['update'],['update']
Deployability,"The conflicts are because first we branched qip_opt from master, but then qip_opt was not updated to master itself and I tried to update it against master since this will be a PR which gets merged into master and not your GSoC project. This led to many changes which happened over master and were not there in your PR and led to some conflicts between `master` and `qip_opt` I suppose.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1025#issuecomment-505057710:90,update,updated,90,https://qutip.org,https://github.com/qutip/qutip/pull/1025#issuecomment-505057710,2,['update'],"['update', 'updated']"
Deployability,"The coverall integration is nice, but could we configure it not to comment each and every travis build on every PR? I think is is rather noisy and generates a lot of email notifications... Perhaps the badge in the README file would be sufficient?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/254:13,integrat,integration,13,https://qutip.org,https://github.com/qutip/qutip/issues/254,1,['integrat'],['integration']
Deployability,"The current error handling for failure in ode integration, in mesolve/sesolve, is very bad. Now exceptions are raised when this occur, so that these errors can be caught more easily by users.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/243:46,integrat,integration,46,https://qutip.org,https://github.com/qutip/qutip/pull/243,1,['integrat'],['integration']
Deployability,"The current version of `clebsch` gives wildly incorrect results for high `j`, because it relies on the precise cancellation of extremely large quantities. This leads to incorrect answers for anything that depends on this function, such as the spin Wigner function for Rydberg atoms. Example of problem:. ```; clebsch(15, 15, 30, 0, 0, 0) ; > 7.03237620084722 ; clebsch(20, 20, 40, 0, 0, 0); > 8986860.153685257; clebsch(30, 30, 60, 0, 0, 0); > nan; ```. Is it possible to implement one of the many higher-precision methods to compute Clebsch-Gordan coefficients? If that would be slower, is it possible to add a flag to toggle between the methods?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1141:620,toggle,toggle,620,https://qutip.org,https://github.com/qutip/qutip/issues/1141,1,['toggle'],['toggle']
Deployability,"The default Apple `clang` version doesn't recognise `-fopenmp` out-of-the-box, because Apple don't ship an OMP library with macOS. You'll have more luck (with most C/C++ projects!) if you install a fully-featured compiler and environment. On [homebrew](https://brew.sh) you can find both `clang`/`clang++` and `gcc`/`g++`, both of which can be installed with OMP support. Make sure your set `PATH`/`CC`/`CXX` environment variables are set up correctly after you've installed, so you're calling the compiler you've just installed, not just the Xcode versions. This isn't a bug in QuTiP, although we could remember this when somebody's working on modernising the distribution - in C/C++ land, tools like `automake` run through a big list of things to check during build configuration, and one of them is if OMP appears to exist. That way the error message is a little clearer (although in this case it's reasonable clear if you're used to C compilers).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1230#issuecomment-611425774:188,install,install,188,https://qutip.org,https://github.com/qutip/qutip/issues/1230#issuecomment-611425774,5,"['configurat', 'install']","['configuration', 'install', 'installed']"
Deployability,"The default scaling factor of \sqrt(2) used by wigner() and plot_wigner() is confusing. ```; alpha = 3; psi = coherent(N,alpha); plot_wigner(psi); ```. produced a plot with coherent state that is NOT centered at alpha = 3 (mega confusing). Does anyone know where this default scaling of $\sqrt{2}$ comes from? . In particular, I would suggest that the default be changed to g = 1 to make the above code segment not internally self-inconsisitent. I can easily submit a patch if needed",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1112:468,patch,patch,468,https://qutip.org,https://github.com/qutip/qutip/issues/1112,1,['patch'],['patch']
Deployability,The deprecation is because of the QuTiP 4.5 update. The notebook is a bit outdated. The importation should be `from qutip.qip.operations import *`. This should solve the problem,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1096#issuecomment-593089971:44,update,update,44,https://qutip.org,https://github.com/qutip/qutip/issues/1096#issuecomment-593089971,1,['update'],['update']
Deployability,"The deprecation warning from `scipy==1.11` reads; `DeprecationWarning: scipy.array is deprecated and will be removed in SciPy 2.0.0, use numpy.array instead`. However, clearly this functionality broke before that release; with some discussion here: ; - https://github.com/scipy/scipy/issues/19065#issuecomment-1678439743; - https://github.com/scipy/scipy/pull/19067",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2300#issuecomment-1906274768:213,release,release,213,https://qutip.org,https://github.com/qutip/qutip/issues/2300#issuecomment-1906274768,1,['release'],['release']
Deployability,The dnorm tests are sporadically (quite regularly) failing e.g. ```; ======================================================================; ERROR: Metrics: checks that special cases for dnorm agree with SDP solutions.; ----------------------------------------------------------------------; cvxpy.error.SolverError: Solver 'CVXOPT' failed. Try another solver or solve with verbose=True for more information. Try recentering the problem data around 0 and rescaling to reduce the dynamic range.; ```. I suggest we turn them off by not installing cvxpy for any of the test configurations.; We can turn them on again if someone can make an attempt to make the dnorm tests more reliable @cgranade . I will raise a PR for this now.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/880:534,install,installing,534,https://qutip.org,https://github.com/qutip/qutip/issues/880,2,"['configurat', 'install']","['configurations', 'installing']"
Deployability,"The dpsi option worked fine on my mac from jupyter. ; - please update the docstring to highlight this option (could also add the presence of the `name` option, besides directory and format); - It is a nice feature, it could be highlighted in the documentation, here https://github.com/qutip/qutip-doc/blob/master/guide/guide-bloch.rst; - add to 4.4.1 enhancements in the changelog, https://github.com/qutip/qutip-doc/blob/master/changelog.rst; Let's skip the codeclimate issues for the moment, but in the future it might be nice to refactor the Bloch class inner workings, as it took me a while to sort out issue #1027.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1104#issuecomment-541539574:63,update,update,63,https://qutip.org,https://github.com/qutip/qutip/pull/1104#issuecomment-541539574,1,['update'],['update']
Deployability,"The easiest would be to make special integrators for HEOM which take a dict of `QobjEvo`: `system = {(from, to): H0,}` and list of states. Then we loop over the items: `drho[from] = QobjEvo(t) @ rho[to]`. As long as the state can be represented in an array, every ODE from scipy, jax, etc can be used. We have tools to stack, unstack, split columns, etc, so the conversion between array and list of `Dense` is easy and efficient. For scipy integrators, that would only need to change 3 methods. Would that work on the HEOM side?; This mean we would need specialised integrator in JAX etc, but would be a lot easier than the stochastic ones so I don't think it's an issue. Changing the `QobjEvo` would be more work, but doable.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2384#issuecomment-2310307934:37,integrat,integrators,37,https://qutip.org,https://github.com/qutip/qutip/issues/2384#issuecomment-2310307934,3,['integrat'],"['integrator', 'integrators']"
Deployability,"The eigenvectors returned by .eigenstates() method are determined up to a sign (which is correct, but leads to interesting issues in some cases). Is it possible to update the eigenstates method to fix these internally? A simple workaround is to invert (multiply by -1) any eigenstates that cause trouble, but I'm not sure I know of a universal test for ""trouble"". As an example, [this gist](https://gist.github.com/amcdawes/437f8756fcb8ff8ca4c1b720600adf43) demonstrates a fix whereby all eigenstates are made to have positive initial values. I suspect this fix is specific to SHO states, but perhaps a universal standard exists where each vector could be made to match the expected result?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1118:164,update,update,164,https://qutip.org,https://github.com/qutip/qutip/issues/1118,1,['update'],['update']
Deployability,"The error comes from the file `/usr/local/lib/python2.7/dist-packages/qutip/tests/test_Qobj.py`. This file is no longer part of qutip (development version), so it must come from the old installation. Make sure you delete that file before installing the development version.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/126#issuecomment-42922781:186,install,installation,186,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42922781,2,['install'],"['installation', 'installing']"
Deployability,"The example provided no longer produces that error when I run it. However, the error still occurs whenever I run an odd value for N. I would like to look more into this issue and try to resolve it.; ### Code Output; For N=10 `0.006061302499141838 0.006061302499140235`; For N=5 `-inf 0.004046653546081098`; For N=7 `-inf 0.004630127471444943`; For N=9 `-inf 0.005564781691231526`; ### Your Environment; ```; uTiP Version: 5.0.2; Numpy Version: 1.26.4; Scipy Version: 1.12.0; Cython Version: 3.0.10; Matplotlib Version:3.5.1; Python Version: 3.10.12; Number of CPUs: 8; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1919#issuecomment-2178970555:597,Install,Installed,597,https://qutip.org,https://github.com/qutip/qutip/issues/1919#issuecomment-2178970555,1,['Install'],['Installed']
Deployability,"The failing test in `CircuitSimulator` is likely from `run_statistics`, which collects all the possible outcomes wrt. the measurement result. If the measurement result is `None`, it will skip that state. I can also set tolerance there, or update the test.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1656#issuecomment-917056083:239,update,update,239,https://qutip.org,https://github.com/qutip/qutip/pull/1656#issuecomment-917056083,1,['update'],['update']
Deployability,"The fermionic stuff looks to me! For the change in the terminator, I see the logic I guess. Also makes it easier for the user to include it or not, without remaking the bath. I have some reservations about it just because I can imagine someone following the examples and using jupyter notebook rerunning the same cell multiple times and continuously modifying their Hsys or something? But that can just be made clear in the examples so lets go ahead and merge this.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1726#issuecomment-987532370:337,continuous,continuously,337,https://qutip.org,https://github.com/qutip/qutip/pull/1726#issuecomment-987532370,1,['continuous'],['continuously']
Deployability,The first error generally occurs if you are running qutip from within the directory where you installed it,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/891#issuecomment-404096438:94,install,installed,94,https://qutip.org,https://github.com/qutip/qutip/issues/891#issuecomment-404096438,1,['install'],['installed']
Deployability,"The fix is already merged in the qutip-4.7.X branch (#2178).; I can't say when the patch will be officially released, but I am expecting it to come sooner than later.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2179#issuecomment-1601564240:83,patch,patch,83,https://qutip.org,https://github.com/qutip/qutip/issues/2179#issuecomment-1601564240,2,"['patch', 'release']","['patch', 'released']"
Deployability,"The fix seems to be rather straight forward in that the `_get_coord_info_new` function in `_remove_margins` needs to be updated to the new matplotlib one. . I could get on it myself later this week and create a PR. However this fix would probably lead to an incompatibility with `matplotlib<=3.9`, how would this be generally handled?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2535#issuecomment-2370679738:120,update,updated,120,https://qutip.org,https://github.com/qutip/qutip/issues/2535#issuecomment-2370679738,1,['update'],['updated']
Deployability,"The fixes in #1471 were released in 4.6.0, Neill reported that it worked for him, so I'm closing this issue for now. Please comment or reopen it if there is more to report.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1378#issuecomment-892638766:24,release,released,24,https://qutip.org,https://github.com/qutip/qutip/issues/1378#issuecomment-892638766,1,['release'],['released']
Deployability,The following files get generated in the user's root when installing QuTiP: ; rhs77050.pyx; rhs77051.pyx; rhs77052.pyx; rhs77053.pyx; rhs77054.pyx; rhs77055.pyx; rhs77056.pyx; rhs77057.pyx; rhs77058.pyx; An example of the content is here https://gist.github.com/nathanshammah/7054fd9954d0e5abe17db1d1981903d4.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1009:58,install,installing,58,https://qutip.org,https://github.com/qutip/qutip/issues/1009,1,['install'],['installing']
Deployability,"The green line is after the first commit of this pull request where I used a for loop. The orange line is after the second commit when I switched to using numpy.cumprod.; The red line is from the quantum optics framework written in julia that I'm currently working on (https://github.com/bastikr/QuantumOptics.jl). While doing some benchmarks I realized that for large N qutips coherent function failed which is why I wrote this patch. I don't know where the constant offset in the benchmark originates from but I think the speed is fine now, creating coherent states is probably never a bottleneck anyway.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/683#issuecomment-292929031:429,patch,patch,429,https://qutip.org,https://github.com/qutip/qutip/pull/683#issuecomment-292929031,1,['patch'],['patch']
Deployability,The heterodyne stochastic example was updated as part of this year's GSoC tutorial renovation project. The updated notebook can be found at https://nbviewer.org/urls/qutip.org/qutip-tutorials/tutorials-v4/time-evolution/015_smesolve-heterodyne.ipynb. Thank you for reporting this.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1029#issuecomment-1345303687:38,update,updated,38,https://qutip.org,https://github.com/qutip/qutip/issues/1029#issuecomment-1345303687,2,['update'],['updated']
Deployability,"The installation seems to succeed, but there seems to be a problem when the tests are run (or when I go into python, trying to load anything like `from qutip import *` gives an error. The script gives the following error (which can be reproduced by just running `import qutip.testing as qt` in python):. ```; [. . .]; Successfully installed qutip-3.1.0; Running QuTiP unit tests; /Users/justin/.pyxbld/temp.macosx-10.10-x86_64-2.7/pyrex/qutip/cy/spmatfuncs.c:250:10: fatal error: 'numpy/arrayobject.h' file not found; #include ""numpy/arrayobject.h""; ^; 1 error generated.; /Users/justin/.pyxbld/temp.macosx-10.10-x86_64-2.7/pyrex/qutip/cy/spmatfuncs.c:250:10: fatal error: 'numpy/arrayobject.h' file not found; #include ""numpy/arrayobject.h""; ^; 1 error generated.; /Users/justin/.pyxbld/temp.macosx-10.10-x86_64-2.7/pyrex/qutip/cy/spmatfuncs.c:250:10: fatal error: 'numpy/arrayobject.h' file not found; #include ""numpy/arrayobject.h""; ^; 1 error generated.; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/usr/local/lib/python2.7/site-packages/qutip/__init__.py"", line 213, in <module>; from qutip.qobj import *; File ""/usr/local/lib/python2.7/site-packages/qutip/qobj.py"", line 60, in <module>; from qutip.ptrace import _ptrace; File ""/usr/local/lib/python2.7/site-packages/qutip/ptrace.py"", line 38, in <module>; from qutip.sparse import sp_reshape; File ""/usr/local/lib/python2.7/site-packages/qutip/sparse.py"", line 49, in <module>; from qutip.cy.sparse_utils import (_sparse_profile, _sparse_permute,; File ""/usr/local/lib/python2.7/site-packages/qutip/cy/__init__.py"", line 1, in <module>; from qutip.cy.spmatfuncs import *; File ""/usr/local/lib/python2.7/site-packages/pyximport/pyximport.py"", line 431, in load_module; language_level=self.language_level); File ""/usr/local/lib/python2.7/site-packages/pyximport/pyximport.py"", line 209, in load_module; inplace=build_inplace, language_level=language_level); File ""/usr/local/lib/python2.7/site-packages/pyximpo",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/348:4,install,installation,4,https://qutip.org,https://github.com/qutip/qutip/issues/348,2,['install'],"['installation', 'installed']"
Deployability,The issue seems that your version of `cvxpy` is not compatible with the version of `scipy` installed.; Try to update it and import it directly.; `cvxpy` is optional so you could also uninstall it before importing qutip.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2500#issuecomment-2248041684:91,install,installed,91,https://qutip.org,https://github.com/qutip/qutip/issues/2500#issuecomment-2248041684,2,"['install', 'update']","['installed', 'update']"
Deployability,The issue was with the conda update that pulled a libgcc package that broke Travis,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/758#issuecomment-332886926:29,update,update,29,https://qutip.org,https://github.com/qutip/qutip/pull/758#issuecomment-332886926,1,['update'],['update']
Deployability,"The latest attempt seems to correctly generate `egg_info` if NumPy is missing, if NumPy is present by not Cython, or if both are present. That should make it much easier to list QuTiP as an external dependency in `requirements.txt`, as our`setup.py` should no longer assume a particular install order. If the latest CI passes, I'll add the review merge ready label.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/489#issuecomment-225887759:287,install,install,287,https://qutip.org,https://github.com/qutip/qutip/pull/489#issuecomment-225887759,1,['install'],['install']
Deployability,"The latest release is 3.0.1 and current development version is 3.1.0 like the setup.py file suggest. Not sure why about reports 3.0.0, that's strange. Have you run setup.py install?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/236#issuecomment-56970079:11,release,release,11,https://qutip.org,https://github.com/qutip/qutip/issues/236#issuecomment-56970079,2,"['install', 'release']","['install', 'release']"
Deployability,The latest release of Qutip has some fixes for arrays of `Qobj`. Updating to 4.6.2 should solve the issue.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1661#issuecomment-919287769:11,release,release,11,https://qutip.org,https://github.com/qutip/qutip/issues/1661#issuecomment-919287769,1,['release'],['release']
Deployability,"The latest version of QuTIP uploaded to PyPI (4.0.1 uploaded on 2016-12-29) has scipy (>=0.15) listed as a dependency. However, the file fastsparse.py imports `get_sum_dtype` from scipy.sparse.sputils, which is only available in scipy 0.18 and newer. I believe that the function was not actually used, and the import was removed in commit #596. . I am not certain that the current version still requires scipy(>=0.18), but the version currently available on PyPI (and thus auto-installed with pip) does require it. If the user has an earlier version of scipy, qutip will fail on import (ImportError).",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/616:478,install,installed,478,https://qutip.org,https://github.com/qutip/qutip/issues/616,1,['install'],['installed']
Deployability,"The main function of the `Options` class is to hold the documentation of the options supported by solver, mostly integrator related ones are an issue. Since sub-packages can add new integration methods, it should be somewhere dynamic that can fetch them at runtime. We can't have them in the description of the function interface directly, but it must be clear from that documentation where to find them.; We can't have them in the documentation of the solver class. It could be in a solver instance, but that too late: needing to initialize a `BrSolver` or `HEOMSolver` just to know which options `bsmesolve` and `heomsolve` support is not user friendly.; The Integrator class is useless for the users: if they want to solve ODE, they should use `scipy.integrate`, for quantum systems evolution, `mesolve` etc. So we should not ask them to look there. `SolverOptions(name)` make it reasonably easy to check the supported options and their default before using the solver. Another approach I see is to fix the integrator when using the functions interface, this way we could properly document the function with all items from both the solver and integrator. When using the class interface, we keep both options separated (and make the choice of integrator it's own keyword):; ```; solver = SeSolver(H, integrator_method='adams', options=solver_options, ode_options=ode_options); solver.options # Solver options only. solver.set_integrator('vern7', ode_options); help(solver.ode_options) # See description of integrator options; ```. That way the function calls is very close to v4 and easy to use, and the class interface give access to new features. ; This also makes `krylovsolve` fit more. Since `method` is used by the solver, not the integrator, it should not be under the `options.ode`, but it seems confusing to have it with the normal options, so having it as an independent parameter could make it clearer.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1947#issuecomment-1174438897:113,integrat,integrator,113,https://qutip.org,https://github.com/qutip/qutip/pull/1947#issuecomment-1174438897,9,"['Integrat', 'integrat']","['Integrator', 'integrate', 'integration', 'integrator']"
Deployability,"The main purpose of this patch is to cherry-pick up the commits which allow us to move our testing infrastructure to GitHub Actions, without absolutely messing up the merge of #1481. After that is merged, I'll merge everything up properly. This stop-gap measure is necessary because Travis CI is shutting down its free tier _today_, and we haven't managed to effect the merge yet. Unfortunately, I had to pick out rather more than I had hoped to get this without seriously rewriting `__init__.py`, `setup.py` and the testing workflow, so apologies for the larger PR. I have, however, cherry-picked out PRs in full, rather than splitting them, to make it logically a bit simpler. I have also cherry-picked the PRs commit-by-commit, rather than squashing them, to make it easier to understand the history when I have to do a larger merge later (even though it'll still be more confusing in the `git log` than desirable). The cherry-picked PRs are:; - #1465; - #1471; - #1484; - #1510; - #1541; - #1551 (the actual target). I had to fix several merge conflicts in `__init__.py` over time, but most stuff was trivial to solve. The largest merge conflicts that needed to be handled were issues where the old and new methods of handling settings conflicted, but again, it's obvious what is the correct version in this. I have also disabled warnings-as-errors in the testing infrastructure, until we've fixed them properly on this branch.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1574:25,patch,patch,25,https://qutip.org,https://github.com/qutip/qutip/pull/1574,1,['patch'],['patch']
Deployability,"The main reason is time. I only have an occasional hour or two to put in. In addition, there are many holes in the docs and examples that need to be closed before a release. We are trying to take care of all of this before next years APS meeting.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/542#issuecomment-249343558:165,release,release,165,https://qutip.org,https://github.com/qutip/qutip/issues/542#issuecomment-249343558,1,['release'],['release']
Deployability,"The message in `qutip.cite()` is updated with current lead developers. The previous lead/core developers can be added, uniformly with the names listed in the [readme](https://github.com/qutip/qutip) page.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1121:33,update,updated,33,https://qutip.org,https://github.com/qutip/qutip/issues/1121,1,['update'],['updated']
Deployability,The new version is merged and will be released soon.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/738#issuecomment-465875615:38,release,released,38,https://qutip.org,https://github.com/qutip/qutip/issues/738#issuecomment-465875615,1,['release'],['released']
Deployability,The nonmarkov folder is not being installed during the setup.; I have done a fix that I will push now,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/413:34,install,installed,34,https://qutip.org,https://github.com/qutip/qutip/issues/413,1,['install'],['installed']
Deployability,The notebook book would live in here:; https://github.com/qutip/qutip-notebooks/tree/master/examples; We would then link it in here:; https://github.com/qutip/qutip.github.io/blob/master/tutorials.html; I guess in the Basics section. As for the qutip-docs:; It would be good to update functions.rst. This is for the auto-generated API docs. If you are feeling super keen then you could add a guide-measurement.rst in:; https://github.com/qutip/qutip-doc/tree/master/guide; and link it from:; https://github.com/qutip/qutip-doc/blob/master/guide/guide.rst. Barring a few build problems here and there the docs building has been okay recently (I think).; Instructions can be found here:; https://github.com/qutip/qutip-doc/blob/master/README.md,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1090#issuecomment-547176797:278,update,update,278,https://qutip.org,https://github.com/qutip/qutip/pull/1090#issuecomment-547176797,1,['update'],['update']
Deployability,"The old `cdef ndarray` syntax can _technically_ be a little faster in some Cython applications because it doesn't involve instantiating a new type; Cython just generates Numpy C-API code. However, this is legacy behaviour of Cython and using these variables generates very old Numpy C-API code in some instances (e.g. pre-Numpy 1.7 (2013)). The memory-view syntax does not require holding the GIL and is rather shorter and easier to read - the former makes threaded parallelisation more possible, particularly in `dev.major` where we are more aggressive about releasing the GIL during heavy computation. Closing for now because it's not really urgent to update old code, but we'll touch it up (speed permitting) as we modify this sort of file in the future. `dev.major` already removed well over half the uses of it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/866#issuecomment-809641984:654,update,update,654,https://qutip.org,https://github.com/qutip/qutip/issues/866#issuecomment-809641984,1,['update'],['update']
Deployability,"The options is in development ( #1231 ) , the options will be set in the qutiprc file. However it will probably not be released before end of fall if not winter.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1259#issuecomment-628263381:119,release,released,119,https://qutip.org,https://github.com/qutip/qutip/issues/1259#issuecomment-628263381,1,['release'],['released']
Deployability,"The parallel issue was resolved earlier. See the ipynbtools import of ipyparallel. ncps should not be an issue as it has always has fallen back on the multiprocessing count. > On Feb 9, 2016, at 18:40, Alexander Pitchford notifications@github.com wrote:; > ; > I was helping someone with an install on windows 7 yesterday.; > We were testing using a notebook, and it worked fine except the version_table. The first error was resolved by installing ipython parallel. Still after that it was failing with something like key 'ncpus' missing. Sorry for not supplying exact errors. I could ask the user to post them if necessary.; > ; > @nonhermitian is #421 likely to resolve this? Even if say they don't have win32com or comtypes installed?; > ; > —; > Reply to this email directly or view it on GitHub.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/423#issuecomment-182174246:291,install,install,291,https://qutip.org,https://github.com/qutip/qutip/issues/423#issuecomment-182174246,3,['install'],"['install', 'installed', 'installing']"
Deployability,"The particular example that was given as an MKL error, is a tricky problem. Seems that the MKL cannot solve for it in the `power` steady mode. As such, I have implemented a 'solver' kwarg that allows for picking the solver that is used in the direct and power methods. The default is SciPy, which could be the usual SuperLU solver, or UMFPACK, if installed via scikits.umfpack. The 'mkl' option can be passed to do the mkl library. I will see what the Intel people have to say about solving the particular matrix that was given:. https://groups.google.com/d/msg/qutip/axGZ-7vtnhI/2Rlsl7ExAgAJ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/720#issuecomment-315449568:347,install,installed,347,https://qutip.org,https://github.com/qutip/qutip/pull/720#issuecomment-315449568,1,['install'],['installed']
Deployability,"The particular reported bug was fixed in #1199, and released in QuTiP 4.5.2.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1207#issuecomment-809399835:52,release,released,52,https://qutip.org,https://github.com/qutip/qutip/issues/1207#issuecomment-809399835,1,['release'],['released']
Deployability,The physicalcpu item from the commandline has shifted locations in the latest MacOS release. This fi should fix this and all later versions.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/536:84,release,release,84,https://qutip.org,https://github.com/qutip/qutip/pull/536,1,['release'],['release']
Deployability,"The problem is indeed the use of `blas_opt['extra_compile_args']`which works well on my mac too, but for some reason that I couldn't get to the bottom with, it does not work on the macports build environment. Perhaps the numpy dependency is not properly specified in the ports file, or something similar. I agree with the OP that it would be highly desirable to get this working, but right now i don't have the time work on trying to fix it. Unless it this get fixed somehow, we should probably revise the recommended installation instructions to use macports+pip or homebrew+pip instead.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/283#issuecomment-66273918:518,install,installation,518,https://qutip.org,https://github.com/qutip/qutip/issues/283#issuecomment-66273918,1,['install'],['installation']
Deployability,"The problem with windows has been that there was/is no free 64 bit compiler, and because of that it has been way easier to just install anaconda 32 and use mingw32 on windows (even on windows 64). . In principle is should be possible build and install qutip 64-bit version on windows with a commercial 64-bit compiler (e.g. Visual Studio), but since few people has access to such a compiler we have not tested this option. Perhaps mingw64 is now a viable option, but I'm not sure how useful it is now. Would be great if someone could test it. . Binary builds for 32 and 64 conda packages for windows would be highly desirable in my opinion. I have once created a conda package for qutip (https://github.com/conda/conda-recipes/tree/master/qutip) ; so if someone got the development environment with the required compilers setup for windows it should be straightforward to build the packages.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-145857462:128,install,install,128,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-145857462,2,['install'],['install']
Deployability,"The qutip.fortran module seems to be built and installed in the TravisCI environment, but for some reason loading it after install fails, so the tests are skipped. . See for example the build log at https://travis-ci.org/qutip/qutip/jobs/19551778",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/80:47,install,installed,47,https://qutip.org,https://github.com/qutip/qutip/issues/80,2,['install'],"['install', 'installed']"
Deployability,"The qutip/debian directory should also be moved out of the qutip main repository, but this would require changing the configuration in launchpad and could be a bit tricky.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/160:118,configurat,configuration,118,https://qutip.org,https://github.com/qutip/qutip/issues/160,1,['configurat'],['configuration']
Deployability,The recently released v5 support callback for `c_ops`.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1254#issuecomment-2029218180:13,release,released,13,https://qutip.org,https://github.com/qutip/qutip/issues/1254#issuecomment-2029218180,1,['release'],['released']
Deployability,"The requirements are described in the pyproject.toml file (which seems to be considered the current ""best practice"" for Python projects) and the setup.cfg file (which is an older best practice). Typically for development one would install with either `python setup.py develop` or `pip install -e '.[full]'` both of which should read the dependencies from the pyproject.toml file. Closing this for now but happy to help more if needed.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1763#issuecomment-1014882006:231,install,install,231,https://qutip.org,https://github.com/qutip/qutip/issues/1763#issuecomment-1014882006,2,['install'],['install']
Deployability,"The solver seems to be working nicely, and passes all the tests that I have come up with. The last few tests still need to be added, interpolation functions should be able to be used for H and c_op terms, and the docstrings need to be updated as there is a new preferred way to input the a_ops that eliminated the need for a spectra_cb kwarg.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/676#issuecomment-300685498:235,update,updated,235,https://qutip.org,https://github.com/qutip/qutip/pull/676#issuecomment-300685498,1,['update'],['updated']
Deployability,"The test failure on Python 3.6 appears to be due to some exceptionally weird behaviour by `conda` in the Travis setup - if you look closely, you can see that when it runs `conda uninstall cython`, it _downgrades_ `numpy` to 1.14.2. This would not be a problem in a `conda-forge` release build, because the `numpy` API dependency is pinned in the feedstock, but it is a potential problem on `pip` source builds. It's possible this super odd behaviour of `conda` is the cause of people's complaints on the email lists about failed imports. I will push a change to the requirements here to try and enforce `numpy >= 1.16.6`, which ought to solve the dependency issues. I will make a similar change on `master` and in #1429 (which I will likely back-port to master before 4.6).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1448#issuecomment-782105359:279,release,release,279,https://qutip.org,https://github.com/qutip/qutip/pull/1448#issuecomment-782105359,1,['release'],['release']
Deployability,"The tests don't work with numpy 1.25, the actual code work but raise warnings from time to time.; The fix is already merged in the qutip-4.7.X branch (#2178).; I can't say when the patch will be officially released, but I am expecting it to come sooner than later.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180#issuecomment-1601563608:181,patch,patch,181,https://qutip.org,https://github.com/qutip/qutip/issues/2180#issuecomment-1601563608,2,"['patch', 'release']","['patch', 'released']"
Deployability,"The tests fail because if one defines `f(t, args, k)` and defines `g = partial(f, k=0.5)` then the signature of g is `<Signature (t, args, *, k=5)>`. There will likely be other cases like this (e.g. many decorators will change the signature). I vote that we give up on all the complicated detection of the old syntax and simply ask users to change `f(t, args)` to `f(t, **args)` when they upgrade to QuTiP 5.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1609#issuecomment-892540881:389,upgrade,upgrade,389,https://qutip.org,https://github.com/qutip/qutip/pull/1609#issuecomment-892540881,1,['upgrade'],['upgrade']
Deployability,"The tests failed because of the recent packaging release (see #2037). The documentation builds passed though, so I'm merging this change to the documentation requirements.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2035#issuecomment-1342951991:49,release,release,49,https://qutip.org,https://github.com/qutip/qutip/pull/2035#issuecomment-1342951991,1,['release'],['release']
Deployability,"The tests ran fine, besides for the option with OpenMP, where it gave ; ```; /home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+2fe7701-py3.7-linux-x86_64.egg/qutip/__init__.py:166: UserWarning: matplotlib not found: Graphics will not work.; warnings.warn(""matplotlib not found: Graphics will not work.""); Calibrating OPENMP threshold...; No output has been received in the last 10m0s, this potentially indicates a stalled build or something wrong with the build itself.; Check the details on how to adjust your build configuration on: https://docs.travis-ci.com/user/common-build-problems/#build-times-out-because-no-output-was-received; The build has been terminated; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/934#issuecomment-566115975:557,configurat,configuration,557,https://qutip.org,https://github.com/qutip/qutip/pull/934#issuecomment-566115975,1,['configurat'],['configuration']
Deployability,"The times at which the `L` are computed are not those at which the states are computed. It computes the derivative at times farther than the desired time and do an interpolation step to get the state. . Some feature (pulse) may be skipped by this method and you should set `Options(max_step=...)` with a `max_step` smaller than half the pulse width, but it should have no issue with a linear ramp. We use the `zvode` integrator of `scipy.integrate.ode`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1821#issuecomment-1058493500:417,integrat,integrator,417,https://qutip.org,https://github.com/qutip/qutip/issues/1821#issuecomment-1058493500,2,['integrat'],"['integrate', 'integrator']"
Deployability,"The tutorials only use it indirectly, so it's just qutip-qip that we need to update. Update: This might be a little tricky, since `qutip-qtrl` only supports QuTiP v5 and `qutip-qip` supports both v4 and v5.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2116#issuecomment-1466322463:77,update,update,77,https://qutip.org,https://github.com/qutip/qutip/pull/2116#issuecomment-1466322463,2,"['Update', 'update']","['Update', 'update']"
Deployability,"The version of qutip in the macports repository is outdated (2.2.0), which is unfortunate especially since it is still included in the documentation as an ""official"" installation path (http://qutip.org/docs/3.0.1/installation.html#installation-on-mac-os-x-10-6). ; I saw that a patch to 3.0.1 was submitted to MacPorts a while ago (https://trac.macports.org/ticket/44555), but apparently there were some errors and then nothing further happened. It would be great if this could be updated.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/283:166,install,installation,166,https://qutip.org,https://github.com/qutip/qutip/issues/283,5,"['install', 'patch', 'update']","['installation', 'installation-on-mac-os-x-', 'patch', 'updated']"
Deployability,"The version requirements need increasing. This was posted on the help group.; Please update the requirements, for the new features (PIQS and photon scattering) to work Numpy = 1.12.0+ is required as numpy.flip() and numpy.geomspace are used.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/905:85,update,update,85,https://qutip.org,https://github.com/qutip/qutip/issues/905,1,['update'],['update']
Deployability,"There are ""breaking"" changes within the scipy private code which various parts of QuTiP depended on (see gh-1298, gh-1301 and commits 46e04a1, 6c85261 and 663d7d2). We ensure that at least one test on Travis uses a scipy version before 1.5 so that we always maintain support for it - the other tests will typically install scipy>=1.5. This particular test is chosen by elimination:; - we want the ""default"" case testing against the newest versions of Python to use the newest versions of the libraries available; - we want the Cython parts to be tested against both versions of scipy, since we link against their versions of LAPACK/BLAS.; - the Mac tests (at the time of writing) skip some tests which are problematic because of intermittent segfaults, including at least one which has issues with scipy 1.5. The MKL/OMP one skips some tests, but not any which use scipy.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1302:315,install,install,315,https://qutip.org,https://github.com/qutip/qutip/pull/1302,1,['install'],['install']
Deployability,"There are conda versions for cvxopt and cvxpy (https://anaconda.org/mcg/cvxpy) but nobody seems to be maintaining or updating them. Installing the conda version downgrades everything else. I will first try to fix the yml issue. Nothing seemed to be incorrect in the YML file, and the travis CI linter is not available, so I am not sure what is wrong with the file. Will update if I make progress.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/873#issuecomment-394298574:132,Install,Installing,132,https://qutip.org,https://github.com/qutip/qutip/pull/873#issuecomment-394298574,2,"['Install', 'update']","['Installing', 'update']"
Deployability,"There are many deprecation warnings arising from the Travis tests. It would seem wise to resolve these before generating the next stable release, as it is likely to be long-lived.; Although there are lots of warnings, the sources might be few.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/381:137,release,release,137,https://qutip.org,https://github.com/qutip/qutip/issues/381,1,['release'],['release']
Deployability,"There are no test code for progress bars yet.; You will need to create a new test file: `qutip/tests/test_progressbar.py`. The test can be as simple as creating the bar, call `update`, call `finished` and check that the total time is a sensible value.; You could also use pytest to catch print with [capsys](https://docs.pytest.org/en/7.1.x/how-to/capture-stdout-stderr.html#accessing-captured-output-from-a-test-function) and confirm that something was printed when `update` / `finished` is called.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2112#issuecomment-1471949520:176,update,update,176,https://qutip.org,https://github.com/qutip/qutip/pull/2112#issuecomment-1471949520,2,['update'],['update']
Deployability,"There are ten other test files with `from qutip import *`. I will fix these soon, as this may fix the problem we are experiencing with tests on Windows with the release we are trying to make",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/726#issuecomment-317071325:161,release,release,161,https://qutip.org,https://github.com/qutip/qutip/pull/726#issuecomment-317071325,1,['release'],['release']
Deployability,"There are two different issues and now I am realizing I should have filed them separately. One issue is that when I use a time-dependent Hamiltonian given in the list array format I get the wrong result. Your example doesn't contain a time-dependent Hamiltonian given in list array format. To reproduce the issue in your example I replaced; ```; H = [H0, [H1, 't']]; output = mesolve(H, psi0, tlist, c_op_list, [sm.dag() * sm], {}); ```; with; ```; H = [H0, [H1, tlist]]; output = mesolve(H, psi0, tlist, c_op_list, [sm.dag() * sm], {}); ```; For the other case (list callback format) I cannot reproduce the issue with your example. I am starting to think that this problem is not directly caused by having t[0] != 0. What I see is that for `t0 > 5` in my example, I get a constant output from mesolve when I should get an oscillatory solution. Is it possible that the numerical integration is failing silently and the returned expectation values are just for the initial condition?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/561#issuecomment-264643370:879,integrat,integration,879,https://qutip.org,https://github.com/qutip/qutip/issues/561#issuecomment-264643370,1,['integrat'],['integration']
Deployability,"There doesn't seem to be the package released under Ubuntu 16.04 channel. After I added the Ubuntu PPA for QuTiP, I got the following error/warning:. ```; qxd@ubuntu1604$: sudo apt-get update; ...; W: The repository 'http://ppa.launchpad.net/jrjohansson/qutip-releases/ubuntu xenial Release' does not have a Release file.; N: Data from such a repository can't be authenticated and is therefore potentially dangerous to use.; N: See apt-secure(8) manpage for repository creation and user configuration details.; E: Failed to fetch http://ppa.launchpad.net/jrjohansson/qutip-releases/ubuntu/dists/xenial/main/binary-amd64/Packages 404 Not Found; E: Failed to fetch http://ppa.launchpad.net/jrjohansson/qutip-releases/ubuntu/dists/xenial/main/binary-i386/Packages 404 Not Found; ```. Thanks for maintaining it :)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/472:37,release,released,37,https://qutip.org,https://github.com/qutip/qutip/issues/472,8,"['Release', 'configurat', 'release', 'update']","['Release', 'configuration', 'released', 'releases', 'update']"
Deployability,"There is a section in qutip/**init**.py that checks the cython version, then re cythonizes all the pyx. It prints a warning if cython is not found. So after install, during which all the cython modules get built, during the first import of qutip all the building happens again. This seems unnecessary, and is actually an issue if we are making a pre-built package. I have patched out this section in the conda-forge feedstock. All but 7 of the tests are successful. Cython is not actually needed at run time for most of QuTiP. Why is it sometimes needed at runtime?. Should we look remove this section from the **init**.py, and put some warning in the methods that use cython at runtime?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/448:157,install,install,157,https://qutip.org,https://github.com/qutip/qutip/issues/448,2,"['install', 'patch']","['install', 'patched']"
Deployability,"There is no agreement on how this should be handled yet. It's been removed from `dev.major` with the plan to restore it before the release, but the exact interface is not fixed. It certainly will not be some special keyword in args. It could be a special value, or a special parameter / method for the solver class.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/947#issuecomment-1142124017:131,release,release,131,https://qutip.org,https://github.com/qutip/qutip/issues/947#issuecomment-1142124017,1,['release'],['release']
Deployability,"There is no support at all right now, but it is in progress.; It should work with the QobjEvoFunc PR, but it will take a quite some time before it is finished, an more before it is merged and released, it probably won't come before v5. For now, H can be a callback to a liouvillian. So he can make it work like this:; ```; def L(t, args):; H = H(t, ...); c_op = C(H, t, ...); return qutip.liouvillian(H, [c_op]). mesolve(L, ..., c_ops=[]); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1260#issuecomment-627565548:192,release,released,192,https://qutip.org,https://github.com/qutip/qutip/issues/1260#issuecomment-627565548,1,['release'],['released']
Deployability,"There is one particular setup where the sparse eigen solver segfault. This happen with pure scipy and is not related to qutip.; Looking into it, I saw that when we installed qutip, it updated scipy version. It downgraded scipy 1.12 to 1.11, thus we never tested for 1.12.; Also build isolation meant that the version of numpy, scipy and cython we set in our test matrix did not match the one at installation. This is not ideal for cython since the compilation version could have a major impact. I set it to not use build isolation and used the matrix set version to compile qutip.; This had the side effect of not using the setup that caused the segfault and solving the failing test issue.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2361#issuecomment-2019207660:164,install,installed,164,https://qutip.org,https://github.com/qutip/qutip/pull/2361#issuecomment-2019207660,3,"['install', 'update']","['installation', 'installed', 'updated']"
Deployability,"There isn't a QuTiP build for Apple ARM CPUs on PyPI because we don't have the hardware to build it. I recommend installing from conda-forge by following the instructions at https://qutip.org/docs/latest/installation.html#installing-with-conda. You can also compile from source yourself by installing all the necessary dependencies, but I think try conda-forge first.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2027#issuecomment-1335129564:113,install,installing,113,https://qutip.org,https://github.com/qutip/qutip/issues/2027#issuecomment-1335129564,4,['install'],"['installation', 'installing', 'installing-with-conda']"
Deployability,"There's no link, just bad luck. This won't prevent merge - the tests clearly show your change is fine. Unfortunately our test suite isn't perfect, and sometimes it tries to integrate an insanely stiff system or something like that by accident.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1380#issuecomment-729963050:173,integrat,integrate,173,https://qutip.org,https://github.com/qutip/qutip/pull/1380#issuecomment-729963050,1,['integrat'],['integrate']
Deployability,"These are to be removed in QuTiP 5.0. We use `FutureWarning` rather than `DeprecationWarning` because a lot (most?) QuTiP users run interactively in notebooks, which generally filter out the latter. *edit*: changed to `DeprecationWarning` after review. The ""es"" solver options in correlation gain warning filters, because they aren't being removed in 5.0; the small parts of functionality they need is just being folded into private helpers within the module. The legacy correlation API had its deprecation warnings issued in 2014... But nonetheless, we shouldn't actually remove functionality until a major release. See fe5ef7d, d9ea79a for more details around the removals that have already been merged into `dev.major`. Fix #1281",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1480:608,release,release,608,https://qutip.org,https://github.com/qutip/qutip/pull/1480,1,['release'],['release']
Deployability,"These failing tests are different from those random failing we've been seeing before. I also have this in my scheduler PR, but it is completely unrelated to the PR. It starts to appear yesterday, but nothing was merged in the last three weeks. Does anyone have a clue?. The error seems to come from the core data part @jakelishman @Ericgig. Scipy made a release 4 days ago and we are using one of the private attributes.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1274#issuecomment-649280292:354,release,release,354,https://qutip.org,https://github.com/qutip/qutip/pull/1274#issuecomment-649280292,1,['release'],['release']
Deployability,"These fortran errors only appears when installing through the dist file. When installing from the source directory in the repo it works. Something is missing the the dist file, perhaps the .f2py_f2cmap file or something similar.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/197#issuecomment-49159675:39,install,installing,39,https://qutip.org,https://github.com/qutip/qutip/pull/197#issuecomment-49159675,2,['install'],['installing']
Deployability,"These tests are now skipped with the skipif decorator, but should be looked at again before next release.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/30#issuecomment-35974556:97,release,release,97,https://qutip.org,https://github.com/qutip/qutip/issues/30#issuecomment-35974556,1,['release'],['release']
Deployability,"This PR addresses #410 by attempting to import `setuptools`, which has support for unittesting and nose integration. Upon failure, it should leave the setup process as it was. This PR also fixes a rare exception in `settings.py` that can be caused if you have a `*.pyc` file for `logging.py` and call into QuTiP from something like nose.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/429:104,integrat,integration,104,https://qutip.org,https://github.com/qutip/qutip/pull/429,1,['integrat'],['integration']
Deployability,"This PR is part of PR #969 , splitting that PR in two parts. It contains:; - `qobjevo`'s args that update with the state. (replacing rhs_with_state functionality) ; - method `norm` renamed to `_cdc` as it was not used as a norm.; - cython side of expect method no longer take `isherm` as an arguments.; - security check in propagator for `H` as a function with `batch` method.; - `propagator` uses `sesolve` capability to evolve operators.; - floquet now call `sesolve` instead of `mesolve` with no collapse.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/990:99,update,update,99,https://qutip.org,https://github.com/qutip/qutip/pull/990,1,['update'],['update']
Deployability,This PR mainly reformats some line lengths. I'm going to reject it for now in favour of a more comprehensive update of this documentation for QuTiP 5 at some point.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1773#issuecomment-1168805739:109,update,update,109,https://qutip.org,https://github.com/qutip/qutip/pull/1773#issuecomment-1168805739,1,['update'],['update']
Deployability,This PR updates the version of QCircuit used for plotting circuits.; LaTeX code was taken from the [QCircuit repository](https://github.com/CQuIC/qcircuit) and small modifications were done to change from .sty file to .tex file.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1187:8,update,updates,8,https://qutip.org,https://github.com/qutip/qutip/pull/1187,1,['update'],['updates']
Deployability,"This bug is only in 4.4.0, the patch has not been released yet.; Don't use parallel_map in windows for mcsolve and stochastic solvers to go around it.; Or if you can install from source, the working version is in #1040",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1039#issuecomment-519914331:31,patch,patch,31,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-519914331,3,"['install', 'patch', 'release']","['install', 'patch', 'released']"
Deployability,"This commit, [1315742](https://github.com/qutip/qutip/commit/1315742843dd27a6505ef70b539fbcb4882a53f0), already has removed `from scipy import array` from `parallel.py`. But it appears this commit is not included in the most recent releases of 4.7.X. Edit:; The problem lies on this branch here: https://github.com/qutip/qutip/blob/qutip-4.7.X/qutip/parallel.py",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2300#issuecomment-1906351746:232,release,releases,232,https://qutip.org,https://github.com/qutip/qutip/issues/2300#issuecomment-1906351746,1,['release'],['releases']
Deployability,"This could possibly be fixed in new scipy https://github.com/scipy/scipy/pull/2972. I'd inadvertently introduced a speed regression for non-huge matrices when I changed the scipy expm implementation from Higham 2005 to 2009. Sorry about that. Although scipy expm has many unit tests, I'm not completely sure how it deals with complex matrices because the Higham codes are designed for 64 bit float. Also scipy doesn't have the continuous benchmarking like https://github.com/qutip/continuous-benchmark which would be awesome.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/182#issuecomment-48622482:427,continuous,continuous,427,https://qutip.org,https://github.com/qutip/qutip/pull/182#issuecomment-48622482,2,['continuous'],"['continuous', 'continuous-benchmark']"
Deployability,This did just bite me when trying to deploy QuTiP to MyBinder for my QuTiP SciPy tutorial and I can confirm this bug is incredibly annoying.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1915#issuecomment-1158105114:37,deploy,deploy,37,https://qutip.org,https://github.com/qutip/qutip/issues/1915#issuecomment-1158105114,1,['deploy'],['deploy']
Deployability,"This error comes from the integration algorithm.; Take a differential equation like dy/dt = -i*y.; With a simple method like euler: ; y(t+dt) = y(t) + f' dt = y(1-i*dt); So the norm increase exponentially *(1+dt**2) at each iteration, not somewhat randomly.; The default method we use is ""adams"" from scipy's solver, which is a lot better than euler, but still have a bias. We also stop the solver for re-normalization of the state from time to time, introducing another bias.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1085#issuecomment-531322708:26,integrat,integration,26,https://qutip.org,https://github.com/qutip/qutip/issues/1085#issuecomment-531322708,1,['integrat'],['integration']
Deployability,This error is because of a conflict between versions. Remove the old qutip installation in /usr/local/lib/python2.7/dist-packages/qutip and reinstall the development version.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/126#issuecomment-42904625:75,install,installation,75,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42904625,1,['install'],['installation']
Deployability,"This fails for python2.7 and it might also be related to older scipy version. I could not even install it locally in my python2.7 conda environment with scipy 0.15 as I get some compile errors for the `cy/brtools` module. One more reason to move to Python 3 and update scipy perhaps. @ajgpitch . If you have seen this error before with a conda env clashing with the Python GIL, please let me know,; ```; qutip/cy/brtools.pyx:98:51: Converting to Python object not allowed without gil; Traceback (most recent call last):; ```; The conda environment is as follows:; ```; # packages in environment at /Users/shahnawaz/miniconda3/envs/python2:; #; # Name Version Build Channel; blas 1.0 mkl; ca-certificates 2018.4.16 0 conda-forge; certifi 2018.4.16 py27_0 conda-forge; cython 0.28.3 py27_0 conda-forge; intel-openmp 2018.0.3 0; libgfortran 3.0.1 h93005f0_2; mkl 2018.0.3 1; ncurses 5.9 10 conda-forge; numpy 1.9.3 py27hb3dd696_3; numpy-base 1.14.3 py27ha9ae307_2; openblas 0.2.20 8 conda-forge; openssl 1.0.2o 0 conda-forge; pip 9.0.3 py27_0 conda-forge; python 2.7.15 0 conda-forge; qutip 4.3.0.dev0+2a849f2e <pip>; readline 7.0 0 conda-forge; scipy 0.15.1 np19py27_0; setuptools 39.2.0 py27_0 conda-forge; sqlite 3.20.1 2 conda-forge; tk 8.6.7 0 conda-forge; wheel 0.31.0 py27_0 conda-forge; zlib 1.2.11 h470a237_3 conda-forge; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/861#issuecomment-396111344:95,install,install,95,https://qutip.org,https://github.com/qutip/qutip/pull/861#issuecomment-396111344,2,"['install', 'update']","['install', 'update']"
Deployability,This feels a bit weird. To update the qip_opt branch from the master. But I guess this is how it should be. @ajgpitch @BoxiLi,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1014#issuecomment-500747351:27,update,update,27,https://qutip.org,https://github.com/qutip/qutip/pull/1014#issuecomment-500747351,1,['update'],['update']
Deployability,"This file included GPL'd code, which is incompatible with QuTiP's 3-clause BSD licence. Instead, we rely on the user to have a functional install of the file (it's been included in TeXLive since at least 2014). See qutip/qutip#1579. **Changelog**: removed vendored version of LaTeX package `qcircuit`",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1580:138,install,install,138,https://qutip.org,https://github.com/qutip/qutip/pull/1580,1,['install'],['install']
Deployability,"This file is now correctly distributed in the `4.6` sdist release (see #1449), though do note that people who want to use OpenMP will probably have an easier time of it if they are installing from the latest `git` source.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1205#issuecomment-828360653:58,release,release,58,https://qutip.org,https://github.com/qutip/qutip/issues/1205#issuecomment-828360653,2,"['install', 'release']","['installing', 'release']"
Deployability,This fixes installations on OSX 10.14. fixes #919,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/922:11,install,installations,11,https://qutip.org,https://github.com/qutip/qutip/pull/922,1,['install'],['installations']
Deployability,"This fixes the calls to the `qutip.configrc` module in `qutip/__init__.py` when setting up OpenMP. Also, this tidies up a lot of very old code out of `__init__.py` that was testing for ancient versions of SciPy and Numpy. Since we have hard requirements at installation time for those, it's fine for us not to test their versions at initialisation. We still should check the version of Cython because it's an optional dependency, so isn't always constrained by the package manager. Some of the changes deliberately make `qutip/__init__.py` less forgiving of exceptions, especially when it comes to loading up `pyximport`. This is deliberate, even though it may make a couple more errors surface that have previously gone undetected. As it stands right now, the file will causes several errors to be silently ignored, even if they weren't the error we were testing for. That masks problems for a short while, but they usually resurface during use when they're much harder to debug. We should be solving the underlying problems, not sweeping them under the rug. In particular, we've frequently had complaints about `pyximport` failing, or trying to import OpenMP modules that have previously been compiled but aren't currently active, and things like that. This patch won't fix all those problems, but it hopefully will make some of them easier to debug when they do appear. There is more explanation to the logic behind each change in the commit messages. Fix #1470.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1471:257,install,installation,257,https://qutip.org,https://github.com/qutip/qutip/pull/1471,2,"['install', 'patch']","['installation', 'patch']"
Deployability,"This has been going on for a while now - `test_diag_liou_mult` fails about ~5-10% of the time on Travis runs, with only 1 or 2 elements of the huge matrix differing by a small relative tolerance. I _think_ this started around the time that scipy 1.5 was released, which changed how `scipy.linalg.eigh` chose its underlying LAPACK driver, and broke a load of tests that relied on our custom `eigh` functions reproducing the `scipy` behaviour exactly (#1299). At the time we fixed those tests (#1298, #1301), but this intermittent failure of `test_diag_liou_mult` may have slipped through. Equally, at the same time on `dev.major` I think I was moving the `brtools` internals to use the new `CSR` types, which involved rewriting things like `diag_liou_mult`. I don't think this is the cause (though I may have done at the time), because we see the intermittent test failures still on `master`, which does not use the new types yet. I'm not absolutely certain the `eigh` changes are the cause, which is why I don't want to just bump up `atol`/`rtol` in the test without going through and calculating what the acceptable tolerance _should_ be. This is a note for posterity. I'll look into it myself and try and determine the true root cause, and PR an appropriate change.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1431:254,release,released,254,https://qutip.org,https://github.com/qutip/qutip/issues/1431,1,['release'],['released']
Deployability,"This is a draft for the qutip-jax related project for GSoC 2023. Based on the ideas discussed internally, I made the focus of the project to be the design of an integrator that can benefit from autodifferentiation. @quantshah, @Ericgig, @hodgestar what are your thoughts? for instance, I am worried that the project is too specific (?).",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2064:161,integrat,integrator,161,https://qutip.org,https://github.com/qutip/qutip/pull/2064,1,['integrat'],['integrator']
Deployability,"This is a really great idea! Since we're putting this into version 5, I have a suggestion to take things a small step further and try the following:. Let's have only one function element type that accepts functions of the form `f(t, ...)` where `...` is any signature that does not include `POSITIONAL_ONLY` arguments (i.e. no `/`) or a `VAR_POSITIONAL` argument (i.e. no `*args`) and is implemented as follows:. When the function element is constructed, we use `inspect.signature(f)` to:. * raise an error if any `POSITIONAL_ONLY` or `VAR_POSITIONAL` arguments are present; * determine the list of `POSITIONAL_OR_KEYWORD` argument; * determine whether a `VAR_KEYWORDS` argument is present. When the function arguments are updated:. * if `VAR_KEYWORDS` was present, we just keep all arguments; * if not, set the arguments to just `{k: new_args[k] for k in argument_list}`. When the function element is called:. * we can just just call `f(t, **args)` as before, because `args` already contains either just the named arguments we want or all the arguments if a `VAR_KEYWORDS` argument was present in f. Thoughts?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1609#issuecomment-881312472:723,update,updated,723,https://qutip.org,https://github.com/qutip/qutip/pull/1609#issuecomment-881312472,1,['update'],['updated']
Deployability,This is also an error for me. Do I need to downconvert matplotlib for windows as well?. QuTiP Version: 4.6.2; Numpy Version: 1.21.2; Scipy Version: 1.7.1; Cython Version: 0.29.24; Matplotlib Version: 3.5.0; Python Version: 3.9.7; Number of CPUs: 12; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Windows (AMD64); Installation path: C:\Users\XXX\Anaconda3\envs\qutip\lib\site-packages\qutip,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1326#issuecomment-996827395:279,Install,Installed,279,https://qutip.org,https://github.com/qutip/qutip/issues/1326#issuecomment-996827395,2,['Install'],"['Installation', 'Installed']"
Deployability,"This is an interesting bug, thanks for raising it! Roughly, QuTiP looks at `$HOME` to find where the `qutiprc`configuration file. If QuTiP can't find it, it will raise a warning and proceed with defaults, so that shouldn't adversely affect you unless you've set some flags like `debug=True`. That said, we should definitely raise a less intimidating warning when `$HOME` is unset.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/365#issuecomment-136613770:110,configurat,configuration,110,https://qutip.org,https://github.com/qutip/qutip/issues/365#issuecomment-136613770,1,['configurat'],['configuration']
Deployability,"This is causing test failures in all CI builds against scipy 1.5 currently. The other failing tests on scipy 1.5 are due to changes to the handling of `csr` matmul operations, which is fixed in patch #1298. As far as I can see, there is no way to recover the exact same behaviour as existed in scipy < 1.5 (there's optimisations of the `lwork` input to the LAPACK routine), and consequently we are not getting the exact same set of eigenvectors for problem dimensions > 32. This does not mean that `brtools` is suddenly doing something wrong. It just means that the test assumed we would have the exact same output as `scipy`, and we don't any more. . This is an annoying problem to fix, I think. Two possible methods:. 1. attempt to ""trick"" scipy into doing the same pre-1.5 behaviour. Possibly this would involve monkey-patching out the ability of `eigh` to optimise the `lwork` parameters (i.e. stubbing out `scipy.linalg.lapack._compute_lwork` to always return `lwork=18*nrows`, `lrwork=24*nrows` and `liwork=10*nrows` to match `qutip.cy.brtools.ZHEEVR`).; 2. do some linear algebra work to determine that the eigenvectors we have returned are equivalent to the ones scipy has returned. 2 is a better solution, but harder to implement, especially in the presence of degenerate or near-degenerate eigenvalues (of which there are likely a lot around 0). 1 is very unsatisfying, but might be enough. In general, this problem will hopefully be solved a bit more thoroughly when `brmesolve` is updated to use the new data layer types, and we standardise the calculation of eigenvalues and -vectors across QuTiP. Hopefully someone has a better idea than me? @Ericgig, @nonhermitian.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1299:194,patch,patch,194,https://qutip.org,https://github.com/qutip/qutip/issues/1299,3,"['patch', 'update']","['patch', 'patching', 'updated']"
Deployability,"This is due to numerical error in the integration, you can change the precision in options:; `Options(max_step=1/(wr * 100), atol=1e-9, rtol=1e-9)`",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2258#issuecomment-1793050302:38,integrat,integration,38,https://qutip.org,https://github.com/qutip/qutip/issues/2258#issuecomment-1793050302,1,['integrat'],['integration']
Deployability,"This is implemented in the development branch for the next major release of QuTiP, but likely won't appear in the 4.x branch.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1259#issuecomment-809319324:65,release,release,65,https://qutip.org,https://github.com/qutip/qutip/issues/1259#issuecomment-809319324,1,['release'],['release']
Deployability,"This is just FYI because I needed some time to track this one down, but I do not think it can be fixed in qutip (or scipy). A Bug in Intel MKL causes scipy.linalg.eig to break and return zeros if the matrix is too large. This in turn breaks wigner.qfunc if the state in question is a density matrix. Possibly related are issues ; https://github.com/scipy/scipy/issues/8713 and https://github.com/scipy/scipy/issues/8205. However the fix mentioned there does not solve the problem for me, so it might be unrelated. If you run into this error, the only workaround I know of is to link scipy and numpy to a different blas library, e.g. openblas. Note that anaconda on windows always uses MKL on intel machines, so you need to install either manually or with pip.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/937:723,install,install,723,https://qutip.org,https://github.com/qutip/qutip/issues/937,1,['install'],['install']
Deployability,"This is just a test. ; Since many failed Travis builds had a malloc error, also according to [this StackOverflow thread](https://stackoverflow.com/questions/19840671/malloc-error-incorrect-checksum-for-freed-object-object-was-probably-mod/19841133) it seemed that XCode was the source of the problem. . I added as osx environment in the travis configuration file xcode 10.2 (should be on osx 10.14 Mojave, not sure though). Build still fails, now at ; ```; Qobj subtraction ... python(2491,0x1192585c0) malloc: Incorrect checksum for freed object 0x7ffe6ff1ad50: probably modified after being freed.; Corrupt value: 0x3ff0000000000000; python(2491,0x1192585c0) malloc: *** set a breakpoint in malloc_error_break to debug; /Users/travis/.travis/functions: line 104: 2491 Abort trap: 6 nosetests --verbosity=2 --with-coverage --cover-package=qutip qutip; The command ""nosetests --verbosity=2 --with-coverage --cover-package=qutip qutip"" exited with 134.; ```; which seems a pretty basic test.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/985#issuecomment-485054530:344,configurat,configuration,344,https://qutip.org,https://github.com/qutip/qutip/pull/985#issuecomment-485054530,1,['configurat'],['configuration']
Deployability,"This is post for discussion over whether it might be beneficial to consider additional continuous integration (CI) tools for QuTiP, beyond Travis CI. . Some open-source projects use multiple CI tools, possibly to do different tasks and test different configurations. For example by adding QuTiP to the list of projects using Sphinx for the documentation I noticed they use concurrently Travis CI, CircleCI and [Appveyor](https://github.com/marketplace/appveyor). . [Stackshare](https://stackshare.io/stackups/circleci-vs-jenkins-vs-travis-ci) allows to compare multiple developers tools.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/959:87,continuous,continuous,87,https://qutip.org,https://github.com/qutip/qutip/issues/959,3,"['configurat', 'continuous', 'integrat']","['configurations', 'continuous', 'integration']"
Deployability,This is post for discussion over whether it might be beneficial to switch from `nose` to another unit testing software. . - QuTiP is using nose for unit testing. A [disclaimer](https://nose.readthedocs.io/en/latest/) on that project homepage warns that nose might not be maintained in the future. . - [`nose2`](https://nose2.readthedocs.io/en/latest/differences.html) is the successor to `nose`. It is actively maintained. There are some [differences](https://nose2.readthedocs.io/en/latest/differences.html). . - [pytest](https://pytest.readthedocs.io/en/latest/) is another open-source solution. By comparing [nose2](https://github.com/nose-devs/nose2/graphs/contributors?from=2010-08-01&to=2019-02-27&type=a) and [pytest](https://github.com/pytest-dev/pytest/graphs/contributors?from=2009-04-05&to=2019-02-27&type=a) activity it seems that the latter has grown and is actively updated. . I wonder whether it would make sense to migrate to a more popular (possibly more robust?) software and how much work this would mean. Other implications are not clear to me at this moment.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/958:880,update,updated,880,https://qutip.org,https://github.com/qutip/qutip/issues/958,1,['update'],['updated']
Deployability,"This is the base PR for the split-up of #1181. This one puts in all the helper functions and updates to previously converted files that are present in that PR, and needs to be merged first before any of the others can be merged. The commits are tidied up and rebased onto `master`. This is the base PR for #1250, #1251 and #1252. **Changelog**; Add pytest helper functions for large-scale test refactoring",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1249:93,update,updates,93,https://qutip.org,https://github.com/qutip/qutip/pull/1249,1,['update'],['updates']
Deployability,This is the changelog for 4.6.1 that we forgot to merge when we made the actual release.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1548:80,release,release,80,https://qutip.org,https://github.com/qutip/qutip/pull/1548,1,['release'],['release']
Deployability,"This is the clean PR contains the main part of my commits to this GoSC project. It includes the following main points:. 1. A numerical Noisy Intermediate Scale Quantum Computing (NISQ) simulator using the QuTiP opens system solver.; 2. Refactoring the existing `SpinChain` and `CavityQED` module, so that they can also use the numerical simulator.; 3. A noise module `CircuitNoise` that complements the simulator with a framework for noise handling. Documentation can be found at https://github.com/qutip/qutip-doc/pull/85; Notebooks and examples are at https://github.com/qutip/qutip-notebooks/pull/88 . There are other small independent RPs. It would be helpful for the review if they are merged first. - [x] #1050 Modifies the QobjEvo class for step function coefficients; - [x] #1052 Update expand_operator for cyclic permutation; - [x] #1064 Fix the wrong type handling for constant QobjEvo; - [x] #1075 Fix the cyclic importation in the control module. After they get merged, the changed files should be limited within the `qip` module.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1065:788,Update,Update,788,https://qutip.org,https://github.com/qutip/qutip/pull/1065,1,['Update'],['Update']
Deployability,This is the same error as #681. It is an issue with the Arch linux package. You should install another way.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/690#issuecomment-298933237:87,install,install,87,https://qutip.org,https://github.com/qutip/qutip/issues/690#issuecomment-298933237,1,['install'],['install']
Deployability,This is the update which fixes the inclusion of .pyx files when qutip source distribution is generated by sdist in the presence of MANIFEST.in. More discussions in #894,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/896:12,update,update,12,https://qutip.org,https://github.com/qutip/qutip/pull/896,2,['update'],['update']
Deployability,This is to fix issue #413 that caused new installations to be non-functional.; Anyone got any ideas as to why this was not picked up by the travis tests?,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/414:42,install,installations,42,https://qutip.org,https://github.com/qutip/qutip/pull/414,1,['install'],['installations']
Deployability,"This isn't a complete ""fix"" of every piece of bad formatting in the API documentation that we're building, but it does fix every warning that Sphinx produces in both the `html` and `latexpdf` targets. It's quite a big patch, but there's no meaningful changes, only formatting ones - I haven't attempted to actually change the meaning of any of the writing, only to reformat it. If we want to make any changes to any of the docstrings, we can do that in separate patches. My intent is to merge this in as the very final patch in the 4.6 release, since it's useful for doing the documentation release. See also qutip/qutip-doc#136",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1493:218,patch,patch,218,https://qutip.org,https://github.com/qutip/qutip/pull/1493,5,"['patch', 'release']","['patch', 'patches', 'release']"
Deployability,"This issue has a two-fold interest: decreasing test time in general and expand the platforms through which QuTiP is available. . What is the reason it takes so long on Nix? QuTiP, in the [latest PR](https://travis-ci.org/qutip/qutip/builds/628865624?utm_source=github_status&utm_medium=notification), takes on average 20 minutes to run its tests on a given platform. Much of this I think is due to the Cython configurations, indeed the no-cython option takes only 13 minutes. My first suggestion would be to try without Cython if things speed up, from those requirements (@Ericgig set that up and I am not knowledgeable about it). . From your PR on `nixpkgs` do you build on Travis CI or a similar cloud? If you could give a list of time taken by the different tests that would help. . The idea of a subset of tests is interesting (essential tests vs. thorough tests), in general; for example thorough tests could be done only in production and a lighter version could be called with `qutip.testing.run()`. Although, in specific, it is not clear to me how to triage which tests to skip. I would be glad to have the others opinion on this too (pinged them as assignees).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1147#issuecomment-569696700:409,configurat,configurations,409,https://qutip.org,https://github.com/qutip/qutip/issues/1147#issuecomment-569696700,1,['configurat'],['configurations']
Deployability,"This issue has been fixed by #1000, but don't you think there should be a new release of QuTiP to integrate it? A minor release integrating only the corresponding commit could be enough. There is nothing more frustrating for a beginner than when the installation instructions fail. I can grantee that most QuTiP users are not expert of packages dependencies and follow installation instructions without understanding them.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1019#issuecomment-503156655:78,release,release,78,https://qutip.org,https://github.com/qutip/qutip/issues/1019#issuecomment-503156655,6,"['install', 'integrat', 'release']","['installation', 'integrate', 'integrating', 'release']"
Deployability,"This issue is mostly obseleted by the merging of #1465, since the complete build structure is now different. In that we didn't necessarily implement the complete change requested here (we don't have `pytest` as a requirement), but we do have the PEP-517-approved way of fully specifying build requirements, so getting a correct build environment is automated. I will note that `pip install -e .` doesn't play very nicely with packages with Cython components to build; at the time of writing, `pip` would tend to install dependencies and perform the build in a venv regardless of what was installed in the activated Python environment (especially if conda), which meant that the complete set of Cython files needed to be re-compiled every time this command was run. That's fine if you just want to edit the Python files, but `setup.py develop` would correctly remember which Cython files actually _needed_ to be re-compiled, so remains much more useful for low-level QuTiP development for practical purposes right now.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1263#issuecomment-809340570:382,install,install,382,https://qutip.org,https://github.com/qutip/qutip/issues/1263#issuecomment-809340570,3,['install'],"['install', 'installed']"
Deployability,"This looks great and I think it will help a lot in cleanly implementing more complex solvers light the HEOMSolver. I have two suggestions for future improvements:. - I'd like to see `.options = ...` become a method because it now modifies the existing integrator and `.options(...)` would both make that clearer and more flexible. E.g. with a method we could allow both `.options(new_options)` to completely override the options and `.options(key=new_value)` to update just one setting. - The first call to `result.add(t, X)` uses `X = state0` but state0 could be almost anything the user passed in (and not necessarily the canonical form returned by `_restore_state`). It would be better if either there was a separate method to override to convert `state0` into the canonical form, or `result.add(t, X)` was called initially with `X = _restore_state(_data0)`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1879#issuecomment-1108749616:252,integrat,integrator,252,https://qutip.org,https://github.com/qutip/qutip/pull/1879#issuecomment-1108749616,2,"['integrat', 'update']","['integrator', 'update']"
Deployability,This looks great! Please update the code. And maybe with a few inline comments/docs/link to that post so that people understand a bit how it works.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2442#issuecomment-2145125136:25,update,update,25,https://qutip.org,https://github.com/qutip/qutip/pull/2442#issuecomment-2145125136,1,['update'],['update']
Deployability,This looks like a duplicate of #2118. A fix was just released in QuTiP 4.7.2 -- would you mind trying with that and letting us know if the fix works for you?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2189#issuecomment-1615929767:53,release,released,53,https://qutip.org,https://github.com/qutip/qutip/issues/2189#issuecomment-1615929767,1,['release'],['released']
Deployability,"This looks like a very interesting pull. I will have to play around with it. In the mean time, you will need to get the Travis tests to run and probably make a jupyter notebook to demo the usage. Hopefully the former just requires adding pyopencl to the install packages in Travis.yml",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/554#issuecomment-258476718:254,install,install,254,https://qutip.org,https://github.com/qutip/qutip/pull/554#issuecomment-258476718,1,['install'],['install']
Deployability,"This makes a `qutip[full]` target for pip, to make it easier to install qutip and all its optional dependencies.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1510:64,install,install,64,https://qutip.org,https://github.com/qutip/qutip/pull/1510,1,['install'],['install']
Deployability,"This may not really be an issue per se, but I thought it would a good idea to post it anyway.; On updating my conda environment which is devoted for qutip I get, . > Collecting package metadata: done; Solving environment: \ ; The environment is inconsistent, please check the package plan carefully; The following packages are causing the inconsistency:; conda-forge/osx-64::qutip==4.2.0=np113py36_2; done; All requested packages already installed. Is this because qutip depends on somewhat older versions of it's dependencies (like numpy, etc)?; MacOS 10.13.6",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/988:438,install,installed,438,https://qutip.org,https://github.com/qutip/qutip/issues/988,1,['install'],['installed']
Deployability,"This moves our entire testing apparatus over to GitHub Actions, since Travis has changed its pricing model and we can no longer rely on it. This actually has several advantages for us right now:; - better integration with other GitHub Actions workflows; - more concurrent jobs; - more access to Windows and macOS machines; - easier job dependency graphs within our resources. This first commit does not add in any Windows tests because they're currently known to fail, but the intention is to turn them on. The blocking issue is currently a failure of the multiprocessing capabilities, which also affects mcsolve. We can now reasonably run coverage reporting on every test run, and upload all of them to Coveralls at the end, so we get accurate stats on what lines were actually tested. I've also turned pytest's timer, so it reports all tests that took longer than a second to run. This should really help identify where the real problems in our testing are - right now you should see that there's a `correlation` test that takes around 2 minutes to run, which is a very sizable chunk of the entire test suite. We can concentrate on rewriting the longest tests to make sure we're still testing all the behaviour, without excessively long runtimes. I've been fairly conservative with the number of tests I set in motion. On the free GitHub plan we can have 20 concurrent VMs running across the whole QuTiP organisation, which I think spreads across all repositories and all test runs. With no Windows tests currently active this is 6 test runs plus the documentation build. If we want more, we could consider spending some money ($4/user/month) to convert into a Teams account which gets us 60 concurrent VMs, but I don't see any need to do this right now. All the test runners now start up almost instantly, which really solves a lot of the slowdown we were getting on Travis. The actual speeds of the Linux VMs seem to be similar to what we had on Travis - the walltimes are slightly longer because ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1551:205,integrat,integration,205,https://qutip.org,https://github.com/qutip/qutip/pull/1551,1,['integrat'],['integration']
Deployability,"This patch obsoletes #1429, by applying the packaging changes to the current version of `master` rather than needing the new structure on `dev.major`. This patch should (mostly) apply cleanly to `dev.major` as well, so merging this up will be easy - the new automated systems in `setup.py` also mean that the distribution can handle both the current `master` and the `dev.major` package layouts with no changes. The rest of this text is very similar to the original message in #1429. ---. This patch overhauls how QuTiP is packaged and distributed. Once this patch is merged, there will be an option on QuTiP's GitHub Actions tab for people who have write permission on qutip/qutip to build all wheels and optionally release the build to PyPI, making it available on `pip` as a binary release. The major changes are in the files `pyproject.toml`, `setup.py`, `setup.cfg` and `.github/workflows/build.yml`, while `MANIFEST.in` and a new file `VERSION` were also touched. ### Distribution changes:; - there is a GitHub Action which will build all the wheels for CPython 3.6+ on Linux (`manylinux1` x86 and x86_64), macOS and Windows (32- and 64-bit). This action is triggered manually, and the wheels will be available for download afterwards. Optionally, the action will push to PyPI, making the version immediately available on `pip` by binary release.; - `.cpp` files are now distributed with the wheels but not added to source control. This is a step towards a full Cython-free delivery of the QuTiP source (binary releases never require Cython), but right now I think our `setuptools` machinery doesn't quite handle that. ### Changes to `setup.py`; - all package metadata is moved out into `setup.cfg`, which is easier to read and change, and modern `setuptools`' preferred way of doing things; - all directory-tree access is done in a completely platform-agnostic manner, rather than just hoping that Unix-style paths will work on Windows; - the file is tidied and structured into a small script, ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1465:5,patch,patch,5,https://qutip.org,https://github.com/qutip/qutip/pull/1465,6,"['patch', 'release']","['patch', 'release']"
Deployability,"This patch overhauls how QuTiP is packaged and distributed. Once this patch is merged to `master` (not just `dev.major`), there will be an option on QuTiP's GitHub Actions tab for people who have write permission on qutip/qutip to build all wheels and optionally release the build to PyPI, making it available on `pip` as a binary release. The major changes are in the files `pyproject.toml`, `setup.py`, `setup.cfg` and `.github/workflows/build.yml`, while `MANIFEST.in` and a new file `VERSION` were also touched. The patch also contains two commits that remove unused OpenMP code and remove a particularly problematic C struct from some inner Python code; the struct and the presence of the dead code caused portability problems, and they in no way change the behaviour of the package. ### Distribution changes:; - there is a GitHub Action which will build all the wheels for CPython 3.6+ on Linux (`manylinux1` x86 and x86_64), macOS and Windows (32- and 64-bit). This action is triggered manually, and the wheels will be available for download afterwards. Optionally, the action will push to PyPI, making the version immediately available on `pip` by binary release.; - `.cpp` files are now distributed with the wheels but not added to source control. This is a step towards a full Cython-free delivery of the QuTiP source (binary releases never require Cython), but right now I think our `setuptools` machinery doesn't quite handle that. ### Changes to `setup.py`; - all package metadata is moved out into `setup.cfg`, which is easier to read and change, and modern `setuptools`' preferred way of doing things; - build requirements are moved into `pyproject.toml` including listing `setuptools` as the build method, in accordance with PEP 517. Any PEP 517-complaint installation and build process will now _enforce_ the presence of `numpy`, `scipy` and `cython` (and `setuptools`) before attempting the build, so no more need for attempted import guards.; - packages are now discovered rather th",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1429:5,patch,patch,5,https://qutip.org,https://github.com/qutip/qutip/pull/1429,5,"['patch', 'release']","['patch', 'release']"
Deployability,"This problem appears to have resolved itself. Testing now runs correctly. The only change to the system has been keeping SciPy packages up to date using the Enthought Canopy package manager. Originally the problem only occurred when installing with the f90 solver, installing without the f90 solver everything ran normally. I was using IPython to run the tests. Testing now runs successfully from IPython (qtconsole and notebook) and from the python interpreter.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/46#issuecomment-25209786:233,install,installing,233,https://qutip.org,https://github.com/qutip/qutip/issues/46#issuecomment-25209786,2,['install'],['installing']
Deployability,This problem has since gotten worse. The linked notebook is no longer available. I'm going to update the documentation with the numbering convention.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/385#issuecomment-350960435:94,update,update,94,https://qutip.org,https://github.com/qutip/qutip/issues/385#issuecomment-350960435,1,['update'],['update']
Deployability,"This proved more challenging than expected for the current release, e.g., as various Linux distribution require different wheels. Still looking at it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/933#issuecomment-510896073:59,release,release,59,https://qutip.org,https://github.com/qutip/qutip/issues/933#issuecomment-510896073,1,['release'],['release']
Deployability,"This ran fine on Mac Mojave with the latest conda and pip release (4.4.0). In pip, I first created a new conda environment and then ran `conda install pip`, `pip install cython numpy scipy qutip` Feel free to reopen if it is not solved on your machine.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/932#issuecomment-510894832:58,release,release,58,https://qutip.org,https://github.com/qutip/qutip/issues/932#issuecomment-510894832,3,"['install', 'release']","['install', 'release']"
Deployability,"This removes the `CI_QUTIP_RELEASE` environment variable and the `--release` flag to `setup.py` in favour of deriving this information from the `VERSION` file. This file should now contain a `.dev` suffix on the `master` and `dev.major` branches to indicate that they are not releases, while release branches will omit it. This means that sdists will no longer attempt to build in local development mode. This also fixes the related bug in handling local versioning when `git` is not installed on the system by making sure any relevant errors are caught. Fix #1514 (after a new sdist release)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1541:68,release,release,68,https://qutip.org,https://github.com/qutip/qutip/pull/1541,5,"['install', 'release']","['installed', 'release', 'releases']"
Deployability,This resolves issue where running subsequent optimisations with pulses; where the number of timeslots changes; Also updated the save_amps method to allow for excluding the time column; and handling any error saving the file,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/281:116,update,updated,116,https://qutip.org,https://github.com/qutip/qutip/pull/281,1,['update'],['updated']
Deployability,"This sounds like an old issue we had, around when numpy 1.20 released - we pushed a fix for that in QuTiP 4.5.3. Could you post the output of `qutip.about()` to show your Numpy and QuTiP versions?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1634#issuecomment-895475026:61,release,released,61,https://qutip.org,https://github.com/qutip/qutip/issues/1634#issuecomment-895475026,1,['release'],['released']
Deployability,"This still happens if I also install matplotlib into the environment (without the ""matplotlib not found"" warning)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/674#issuecomment-289224893:29,install,install,29,https://qutip.org,https://github.com/qutip/qutip/issues/674#issuecomment-289224893,1,['install'],['install']
Deployability,This updates the Travis build process. It is for Py3 only.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/924:5,update,updates,5,https://qutip.org,https://github.com/qutip/qutip/pull/924,1,['update'],['updates']
Deployability,"This updates the licence holders to be the ""QuTiP Admin Team"" (this is similar to how Numpy handle their licensing). This also updates the text of the licence file to a GitHub-readable version of the 3-clause BSD licence, so it should present better information to users as well. At present, erroneous whitespace in the licence file means that GitHub's detection can't tell what exactly the licence is. In addition, having the text of the licence in each file is redundant, and just made it more annoying to edit the files. It also made it much harder to update the information in the licence in order to put the whole admin team as copyright holders, so I have removed it. Again, this is in keeping with how other large-scale projects manage their licensing. We always distribute `LICENSE.txt` with all copies of the QuTiP source (either by clone of the repository, or by sdist). **Changelog**: update licence holders with regards to new governance model, and remove extraneous licensing information from source files.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1579:5,update,updates,5,https://qutip.org,https://github.com/qutip/qutip/pull/1579,4,['update'],"['update', 'updates']"
Deployability,"This was an incredibly minor optimisation that had a ~2% speedup in some cases on Linux/Mac, but was preventing the build in some configurations on Windows due to failed type conversions. That's not a worthwhile trade-off for some functions that aren't even used that heavily in QuTiP code. I'm now using `dev.major` QuTiP on a Windows machine in day-to-day life, so maybe I'll catch a few more problems with it.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1485:130,configurat,configurations,130,https://qutip.org,https://github.com/qutip/qutip/pull/1485,1,['configurat'],['configurations']
Deployability,"This was reported on the help group; https://groups.google.com/forum/#!topic/qutip/L-MIFFwK0xU. (copying from there); the newest mkl(Math library for intel) version(2019) can not work on QuTiP 4.3.1. I rollback it to mkl(2018.0.3), the qutip.testing then work well. If using mkl(2019.0), there will MKL read problems, like:; ```; File ""C:\Users\ym24chen\Anaconda3\; x = lu.solve(b, verbose=verbose); File ""C:\Users\ym24chen\Anaconda3\envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 164, in solve; np_x, np_error); OSError: exception: access violation reading 0x0000000000000008; envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 384, in mkl_spsolve; ```. Env info:; ```; QuTiP Version: 4.3.1; Numpy Version: 1.15.4; Scipy Version: 1.1.0; Cython Version: 0.29.6; Matplotlib Version: 3.0.3; Python Version: 3.7.2; Number of CPUs: 8; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Windows (AMD64); Installation path: C:\Users\canwa\AppData\Local\conda\conda\envs\qutipenv\lib\site-packages\qutip; ==============================================================================; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/975:202,rollback,rollback,202,https://qutip.org,https://github.com/qutip/qutip/issues/975,3,"['Install', 'rollback']","['Installation', 'Installed', 'rollback']"
Deployability,This will take a bit of work. Especially since the docs are not so easy to read. Just changing the setup import does not work as we use numpy.distutils for the configuration.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/593#issuecomment-269730765:160,configurat,configuration,160,https://qutip.org,https://github.com/qutip/qutip/issues/593#issuecomment-269730765,1,['configurat'],['configuration']
Deployability,"To get OPENMP to work on OSX one needs to install the LLVM from homebrew. However, there is a libomp clash with the OPENMP from MKL as two libraries with the same name are simultaneously initialized. I believe that this is due to the fact that the llvm has its own openmp lib, where as the MKL was compiled against a different openmp lib (perhaps from the Intel compiler as Apple's clang does not have openmp). This likely also occurs on Windows if using mingwpy. The workaround is to set; `os.environ['KMP_DUPLICATE_LIB_OK'] = 'True'`. This is not recommended at all, but seems to work fine. Perhaps we should give an unsupported warning on platforms where this issues arrises. Or, we could just roll the dice and see how it goes.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/652#issuecomment-284520576:42,install,install,42,https://qutip.org,https://github.com/qutip/qutip/pull/652#issuecomment-284520576,1,['install'],['install']
Deployability,"Today I encountered the same problem when installing qutip 4.3.1 from conda-forge channel on Ubuntu 18.04. I have Anaconda 2018.12 with Python 3.7. Installing via pip in the system python didn't work either. The solution was in fact to install from source in anaconda which I did in the following manner:; 1. download the qutip source file from webpage, in my case it was: qutip-4.3.1.tar.gz; 2. write in terminal: ""whereis pip""; 3. choose the anaconda pip location, something like: /home/miriam/anaconda3/bin/pip ; 4. go to the directory where you downloaded the source file and type: sudo *here_goes_the_pip_location_from_previous_step* install qutip-4.3.1.tar.gz; 5. it finally works for me.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/674#issuecomment-457501976:42,install,installing,42,https://qutip.org,https://github.com/qutip/qutip/issues/674#issuecomment-457501976,4,"['Install', 'install']","['Installing', 'install', 'installing']"
Deployability,"Travis CI tests update - NOMKL+OPENMP, cvx NOMKL only",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/875:16,update,update,16,https://qutip.org,https://github.com/qutip/qutip/pull/875,1,['update'],['update']
Deployability,TravisCI integration for QuTiP,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/78:9,integrat,integration,9,https://qutip.org,https://github.com/qutip/qutip/pull/78,1,['integrat'],['integration']
Deployability,"Tried to install Qutip in windows 10, but showing following errors while working. .; .; .; .....; U = propagator(H,1, unitary_mode='single'); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\propagator.py"", line 164, in propagator; _safe_mode=False); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\sesolve.py"", line 185, in sesolve; progress_bar); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\sesolve.py"", line 520, in _sesolve_list_str_td; exec(code, globals()); File ""<string>"", line 1, in <module>; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 462, in load_module; language_level=self.language_level); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 231, in load_module; raise exc.with_traceback(tb); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 215, in load_module; inplace=build_inplace, language_level=language_level); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 191, in build_module; reload_support=pyxargs.reload_support); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyxbuild.py"", line 102, in pyx_to_dll; dist.run_commands(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 966, in run_commands; self.run_command(cmd); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 186, in run; _build_ext.build_ext.run(self); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 194, in build_extensions; self.build_extension(ext); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 533, in build_extension; depends=ext.depends); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccom",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467317662:9,install,install,9,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467317662,1,['install'],['install']
Deployability,Try again after pulling updates from master. I've just fixed it (the declaration was moved to the pxd 'header' file),MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/52#issuecomment-25344028:24,update,updates,24,https://qutip.org,https://github.com/qutip/qutip/pull/52#issuecomment-25344028,1,['update'],['updates']
Deployability,Try conda install gcc.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/965#issuecomment-471147975:10,install,install,10,https://qutip.org,https://github.com/qutip/qutip/issues/965#issuecomment-471147975,1,['install'],['install']
Deployability,"Two small bugs appeared in floquet steadystate in v5, this is a quick patch. **Description**; Two bugs:. 1) Small minus sign error in one of the terms (comparing to v4.7 and what is written in the old toolbox guide). 2) Some kind of data copying confusion with the S and T operators when updating their data contents with the results. Just initiating these two separately seems to fix it. other minor fix: updated the link to the toolbox guide. Some other minor niggles that I didn't fix:; - some of the optional solver methods dont work (seem not to support square right hand sides in '_data.solve()'. I didn't dig much on fixing these though. - the 'splu' method fails for a couple of reasons. I can get it to work by removing the choice of warnings as errors in 'solve.py' (which make it fail in other instances as well i suppose, like with normal steadystate()), making sure the solver option is not passed to steadystate(), and making sure that S and T are always converted back to CSR() after being updated in the iterative bit (in `steadystate_floquet()' they get returned as dense from _data.solve). I did not include those changes here though as the docstrings dont actually indicate support for splu anyway, so perhaps not needed. I am marking this as draft at the moment as I also want to update the test to be sensitive to these bugs (its a bit too coarse at the moment), and double check that the results from this solver are now correct. **Related issues or PRs**; fix #2386",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2393:70,patch,patch,70,https://qutip.org,https://github.com/qutip/qutip/pull/2393,4,"['patch', 'update']","['patch', 'update', 'updated']"
Deployability,Two small patches,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/141:10,patch,patches,10,https://qutip.org,https://github.com/qutip/qutip/pull/141,1,['patch'],['patches']
Deployability,"Two suggestions: ; 1. QuTiP uses an environment variable `NUM_THREADS`. We should probably name-space this variable, calling it `QUTIP_NUM_THREADS` (consistent with how other packages name their variables, like `MKL_NUM_THREADS` and `OPENBLAS_NUM_THREADS`. The upcoming 3.0 release would be a good time to make this change.; 2. Considering that QuTiP does not use thread but processes, it would be even better to call the variable `QUTIP_NUM_PROCESSES`.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/119:274,release,release,274,https://qutip.org,https://github.com/qutip/qutip/issues/119,1,['release'],['release']
Deployability,Unable to install on macos (apple silicon),MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2027:10,install,install,10,https://qutip.org,https://github.com/qutip/qutip/issues/2027,1,['install'],['install']
Deployability,Unfortunately I do not think the continuous-benchmark tests that we have in https://github.com/qutip/continuous-benchmark covers any of the code that has been changed in this PR.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/76#issuecomment-36086389:33,continuous,continuous-benchmark,33,https://qutip.org,https://github.com/qutip/qutip/pull/76#issuecomment-36086389,2,['continuous'],['continuous-benchmark']
Deployability,"Uninstalling cython or using a virtualenv without it will make the risky code make an import error and not crash. cython is needed for installation, but mostly optional at runtime. It can be used to speedup some computations but usually the compilation time is not worth it. Or, you can run tests per section:; ```; import nose; import glob; for testfile in glob.glob("".../qutip/qutip/tests/*.py):; test = testfile[N:-3].repace(""\"",""."") # remove the whole path and the .py: ( ""qutip.tests.test_qobj"" ); nose.run(defaultTest=test, argv=['nosetests', '-v']); ```; test_mccolve, test_stochastic_se and test_stochastic_me will fail/crash, but I expect most of the rest to pass.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1084#issuecomment-531884694:135,install,installation,135,https://qutip.org,https://github.com/qutip/qutip/issues/1084#issuecomment-531884694,1,['install'],['installation']
Deployability,"Unrelated, but it might also be good to mention updating the sidebar links since we've occasionally forgotten to update those in the past.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2399#issuecomment-2069939373:113,update,update,113,https://qutip.org,https://github.com/qutip/qutip/pull/2399#issuecomment-2069939373,1,['update'],['update']
Deployability,"Update : Most of the functionality is now there, except `measure` and conditional statements, I hope to add those after we are done merging the measurement PR. @nathanshammah I was wondering if writing to QASM should be a separate PR or the same one ?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1291#issuecomment-650486135:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/1291#issuecomment-650486135,1,['Update'],['Update']
Deployability,Update CODE_OF_CONDUCT.md,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/984:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/984,1,['Update'],['Update']
Deployability,Update HEOM for v5.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1869:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/1869,1,['Update'],['Update']
Deployability,Update Issue Template [issue #1266],MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1728:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/1728,1,['Update'],['Update']
Deployability,Update My Binder link to index.ipynb,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1279:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/issues/1279,1,['Update'],['Update']
Deployability,Update QuTiP to used scipy.sparse instead of scipy.sparse.X.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1823:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/issues/1823,1,['Update'],['Update']
Deployability,Update README to link to new index of notebooks,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1280:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/1280,1,['Update'],['Update']
Deployability,Update Readme,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1228:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/1228,1,['Update'],['Update']
Deployability,"Update Travis build passes. ### Summary . This PR helps convert between superop reps with non-square shape. This is needed because quantum channels can have input and output spaces of different dimension. It works between super, choi, kraus. It correctly handles tensor product structures and systems with different dimensions e.g. a qubit and a qutrit. . It does not work for Chi rep or the Steinspring rep. In the Chi rep only the qubit Pauli basis has been implemented. One would need to first get the Chi rep working for Qudits. At the moment it is unclear how to generalize to the Stinespring rep. . **changes**; - in `type_from_dims` the flag `enforce_square` was set to `False`. This helps in the conversion.; - in `qobj`, `__mul__` was extended to allow construction of non square operators from an outer product using the suggestion of @Ericgig ; - `_super_tofrom_choi`, `choi_to_kraus`, `kraus_to_choi` have been changed so they work with non-square shapes.; - to support the above changes `vector_to_operator` and `vec2mat` were changed to allow for non square shapes. **other changes**; - `Qobj permute`. `tidyup` was removed from to resolve a failing test at the suggestion of @nonhermitian ; - `choi_to_kraus` and `to_kraus`. When converting from Choi to to Kraus there are many small norm Kraus operators. A `tol` parameter was added to help remove these spurious operators. ### Added Tests; **test_superoperator_reps**; - Convert non-square Kraus operator to Super + Choi matrix and back.; - Neglect tiny Kraus operators when converting Choi to Kraus. **test_superoper**; - Operator - vector - operator conversion with a tensor product state.; - Operator - vector - operator conversion for non-square matrix. **test_qobj**; - bra and ket multiplication with different dims e.g. [N, 1] and [1, M] for M \neq N",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1098#issuecomment-576981021:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/1098#issuecomment-576981021,1,['Update'],['Update']
Deployability,Update Travis build process,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/924:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/924,1,['Update'],['Update']
Deployability,Update `guide-settings` with v5's options,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2025:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/2025,1,['Update'],['Update']
Deployability,Update `spectrum` to use the data layer,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2050:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/2050,1,['Update'],['Update']
Deployability,Update `ttmsolve` for v5,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2142:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/2142,1,['Update'],['Update']
Deployability,Update actions tools versions,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2430:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/2430,1,['Update'],['Update']
Deployability,Update bloch.py,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1836:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/1836,1,['Update'],['Update']
Deployability,Update build process to support Python 3.10,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1735:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/1735,1,['Update'],['Update']
Deployability,Update changelog for 4.6.3 release.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1793:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/1793,2,"['Update', 'release']","['Update', 'release']"
Deployability,Update changelog for 4.7.0.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1852:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/1852,1,['Update'],['Update']
Deployability,Update changelog for 4.7.1.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2045:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/2045,1,['Update'],['Update']
Deployability,Update changelog for v5b1,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2343:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/2343,1,['Update'],['Update']
Deployability,Update cibuildwheel version,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2367:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/2367,1,['Update'],['Update']
Deployability,Update conftest.py,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2281:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/2281,1,['Update'],['Update']
Deployability,Update deprecated usage of Iterable,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1007:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/1007,1,['Update'],['Update']
Deployability,Update dev.major CI tests setup from master.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1791:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/1791,1,['Update'],['Update']
Deployability,Update diag_liou_mult test tolerances,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1486:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/1486,1,['Update'],['Update']
Deployability,Update docs Floquet Markov formalism,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1958:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/1958,1,['Update'],['Update']
Deployability,Update documentation builds to Sphix 6.1 and matplotlib 3.7,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2149:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/2149,1,['Update'],['Update']
Deployability,Update dynamic documentation for dev.major,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2028:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/2028,1,['Update'],['Update']
Deployability,Update for numpy 1.25 deprecations,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2177:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/2177,1,['Update'],['Update']
Deployability,Update for scipy 1.4,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1144:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/1144,2,['Update'],['Update']
Deployability,"Update from Google Meet discussion:. @jakelishman @Ericgig and I had a quick video call and decided that `.replace(...)` should be renamed something like `.replace_arguments(...)` and accept either a dictionary of arguments (as a positional only argument) or keyword arguments (with the new values for the arguments). In either case, the given argument keys should be update to their new values and any other keys should retain their previous values. For the other attributes `.replace(...)` was supporting replace:. * the shift value can just be updated by wrapping the coefficient with `ShiftCoefficient` or updating the `t0` of an existing shift coefficient.; * the `tlist` value really doesn't make that much sense to update without also updating the associated function values and there are many ways this can go wrong (e.g. sub-expressions with different tlists, supplying a new tlist with the incorrect length).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1507#issuecomment-856760085:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/1507#issuecomment-856760085,4,"['Update', 'update']","['Update', 'update', 'updated']"
Deployability,Update guide-random/basic for v5,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2024:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/2024,1,['Update'],['Update']
Deployability,Update ipynbtools version table,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/227:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/227,1,['Update'],['Update']
Deployability,Update keyword name for `eigh` for scipy 1.10,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2055:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/2055,1,['Update'],['Update']
Deployability,Update licence information in QuTiP,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1579:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/1579,1,['Update'],['Update']
Deployability,Update links in template,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2107:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/2107,1,['Update'],['Update']
Deployability,Update mailmap,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1454:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/1454,1,['Update'],['Update']
Deployability,Update master version number to 5.1,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2372:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/2372,1,['Update'],['Update']
Deployability,Update master with change made directly for 4.4.1; Somewhat messy merge because of mixed cherry-pick and direct commit...,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1073:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/1073,1,['Update'],['Update']
Deployability,Update master with the official version 4.4,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1037:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/1037,1,['Update'],['Update']
Deployability,Update minimum versions,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2241:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/2241,1,['Update'],['Update']
Deployability,Update plot_wigner_sphere and delete matrix_histogram_complex,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2193:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/2193,1,['Update'],['Update']
Deployability,Update readme,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1511:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/1511,1,['Update'],['Update']
Deployability,Update requirement to include numpy 2,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2457:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/2457,1,['Update'],['Update']
Deployability,Update scipy requirements,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1982:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/1982,1,['Update'],['Update']
Deployability,Update setup file for dev to bump up on top of 4.5.0 release,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1168:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/1168,2,"['Update', 'release']","['Update', 'release']"
Deployability,Update setup to development requirements,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1263:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/issues/1263,1,['Update'],['Update']
Deployability,Update solver's signature to take `e_ops` and `args` as keyword only.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2503:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/2503,1,['Update'],['Update']
Deployability,Update sp 1.3,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1000:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/1000,1,['Update'],['Update']
Deployability,Update sphinx-rtd-theme to fix search.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2375:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/2375,1,['Update'],['Update']
Deployability,Update steadystate.py,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1275:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/1275,1,['Update'],['Update']
Deployability,Update steadystates tests to pytest,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1679:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/1679,1,['Update'],['Update']
Deployability,Update superoperator.py,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/582:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/582,1,['Update'],['Update']
Deployability,Update test matrix to include python 3.12,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2309:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/2309,1,['Update'],['Update']
Deployability,Update test_superop_reps to parameterized pytest format,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1825:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/1825,1,['Update'],['Update']
Deployability,Update tests,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1125:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/1125,1,['Update'],['Update']
Deployability,"Update the ""Stochastic Solver"" page on the Users Guide",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1706:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/issues/1706,1,['Update'],['Update']
Deployability,Update the readme note for v5 and add setuptools requirement,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2377:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/2377,1,['Update'],['Update']
Deployability,Update the release action to push to testpypi and allow dev release.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2069:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/2069,3,"['Update', 'release']","['Update', 'release']"
Deployability,Update the release guide to use readthedocs,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2399:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/2399,2,"['Update', 'release']","['Update', 'release']"
Deployability,Update the roadmap and ideas to show completed work as of August 2022.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1967:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/1967,1,['Update'],['Update']
Deployability,"Update to 4.1 dev or do [e_ops]. -P. On Feb 9, 2017 06:10, ""WolfgangLechner"" <notifications@github.com> wrote:. > To reproduce the problem:; >; > -; >; > run Lecture 8 - Adiabatic sweep from qutip lectures with qutip 4.02; > -; >; > Error message:; >; > Traceback (most recent call last):; > File ""as.py"", line 92, in; > mesolve(h_t, psi0, taulist, [], process_rho, args); > File ""/usr/local/lib/python2.7/site-packages/qutip/mesolve.py"", line 208,; > in mesolve; > _solver_safety_check(H, rho0, c_ops, e_ops, args); > File ""/usr/local/lib/python2.7/site-packages/qutip/solver.py"", line 822,; > in _solver_safety_check; > for ii in range(len(e_ops)):; > TypeError: object of type 'function' has no len(); >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/645>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/ABMPqUOt9R6_QP67bFpCcaIVV3D2Su2cks5raxBggaJpZM4L8Gzy>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/645#issuecomment-278673105:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/issues/645#issuecomment-278673105,1,['Update'],['Update']
Deployability,Update to account for moved function in scipy 1.3.; This increase the minimum requirement to scipy 1.0,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1000:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/1000,1,['Update'],['Update']
Deployability,Update to fix scipy1.12 deprecation warnings,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2307:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/2307,1,['Update'],['Update']
Deployability,Update to the HarmonicOscillatorWaveFunction with a wave function recurrence that uses Cython.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2553:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/2553,1,['Update'],['Update']
Deployability,"Update to the original 4.5.1 which is already a month old. New inclusions: . Better error message for failed string coefficient compilation.; Run the python 3.8 test in travis. (by Simon Cross ); Fix clebsch function for half-integer (by Thomas Walker); Deprecate graph function (by Jake Lishman); Fix travis warning (by Ivan Carvalho); Fix spin husimi/wigner functions (by maij). I would like the mac stuff to be fixed and moving the mac test to 3.8, but that will take some time.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1215:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/1215,1,['Update'],['Update']
Deployability,Update travis build,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/923:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/923,1,['Update'],['Update']
Deployability,Update user guide content of documentation to QuTiP 5,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1898:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/issues/1898,1,['Update'],['Update']
Deployability,Update version,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2366:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/2366,2,['Update'],['Update']
Deployability,Update version and changelog,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2292:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/2292,1,['Update'],['Update']
Deployability,Update with micro release to 4.5.1 to include bug fix on tests.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1173:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/pull/1173,2,"['Update', 'release']","['Update', 'release']"
Deployability,Update4.1 osx sort patch,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/666:19,patch,patch,19,https://qutip.org,https://github.com/qutip/qutip/pull/666,1,['patch'],['patch']
Deployability,"Update: I managed to find the propagator in a somewhat makeshift manner by sending an identity matrix to mesolve (although with reduced dimensions than in the code above):. ```shell; results = mesolve(H, psi_0, t, c_ops = c_ops) ### Dimensions here are [2,2,2] as compared to [3,3,7] above; plt.plot(t, expect(a_u.dag() * a_u, results.states), label=""mesolve""); for i in range(len(t)):; rho_vec = mat2vec(ρ0.full()); rho_T = Qobj(vec2mat(U_me.states[i].data * rho_vec), dims = ρ0.dims); plt.plot(t[i], expect(a_u.dag() * a_u, rho_T), ""x"", color=""orange""); plt.ylabel(""Population""); plt.xlabel(""Time""); plt.legend(); plt.show(); ```. ![image](https://github.com/user-attachments/assets/f65f25df-db91-49d6-a92a-77c3dced0900). If there's a better way of doing it, please let me know!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2532#issuecomment-2357056333:0,Update,Update,0,https://qutip.org,https://github.com/qutip/qutip/issues/2532#issuecomment-2357056333,1,['Update'],['Update']
Deployability,Updated Bibliography and added citation for GRAPE,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1933:0,Update,Updated,0,https://qutip.org,https://github.com/qutip/qutip/pull/1933,1,['Update'],['Updated']
Deployability,Updated RCM and one/inf-norms.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/654:0,Update,Updated,0,https://qutip.org,https://github.com/qutip/qutip/pull/654,1,['Update'],['Updated']
Deployability,Updated doc strings & removed mc version of 2op1t,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/218:0,Update,Updated,0,https://qutip.org,https://github.com/qutip/qutip/pull/218,1,['Update'],['Updated']
Deployability,"Updated docs + example notebook would be great. Thanks, merging this now.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/316#issuecomment-74656936:0,Update,Updated,0,https://qutip.org,https://github.com/qutip/qutip/pull/316#issuecomment-74656936,1,['Update'],['Updated']
Deployability,"Updated expm function. Fixes bug in previous version. Defaults to sparse=False as resulting matrix is almost always dense, and the algorithm runs about 10x faster.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/464:0,Update,Updated,0,https://qutip.org,https://github.com/qutip/qutip/pull/464,1,['Update'],['Updated']
Deployability,Updated plot_fock_distribution,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/929:0,Update,Updated,0,https://qutip.org,https://github.com/qutip/qutip/pull/929,1,['Update'],['Updated']
Deployability,Updated qobj docstrings with hyperlinks (Issue 71),MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/976:0,Update,Updated,0,https://qutip.org,https://github.com/qutip/qutip/pull/976,1,['Update'],['Updated']
Deployability,Updated travis.yml to move to pytest. ; Also updated qutip.testing to use pytest.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1131:0,Update,Updated,0,https://qutip.org,https://github.com/qutip/qutip/pull/1131,2,"['Update', 'update']","['Updated', 'updated']"
Deployability,"Updates for the device simulator: fixing bugs, better doc and visual demo",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1245:0,Update,Updates,0,https://qutip.org,https://github.com/qutip/qutip/pull/1245,1,['Update'],['Updates']
Deployability,"Updates the README to point various links at the new places in the documentation (this cannot be merged until qutip/qutip-doc#142 is merged and the docs are re-built on the website). As part of this, I tidied up the sections quite a lot and grouped similar ones together to make it a bit easier to read. I added some download and installation badges as well (see #983). Probably the best way to look at this PR is looking at [the rendered version on my fork](https://github.com/jakelishman/qutip/tree/update-readme#qutip-quantum-toolbox-in-python).",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1511:0,Update,Updates,0,https://qutip.org,https://github.com/qutip/qutip/pull/1511,3,"['Update', 'install', 'update']","['Updates', 'installation', 'update-readme']"
Deployability,Updates the `.mailmap` file that git uses to link people and emails (try `git shortlog` with vs without this patch). Just general book-keeping.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1454:0,Update,Updates,0,https://qutip.org,https://github.com/qutip/qutip/pull/1454,2,"['Update', 'patch']","['Updates', 'patch']"
Deployability,Updates to SS module,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/221:0,Update,Updates,0,https://qutip.org,https://github.com/qutip/qutip/pull/221,1,['Update'],['Updates']
Deployability,Updates to SS power method,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/326:0,Update,Updates,0,https://qutip.org,https://github.com/qutip/qutip/pull/326,2,['Update'],['Updates']
Deployability,Updates to SS solver module,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/195:0,Update,Updates,0,https://qutip.org,https://github.com/qutip/qutip/pull/195,1,['Update'],['Updates']
Deployability,Updates to Steady state module,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/250:0,Update,Updates,0,https://qutip.org,https://github.com/qutip/qutip/pull/250,1,['Update'],['Updates']
Deployability,Updates to mcsolve,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/264:0,Update,Updates,0,https://qutip.org,https://github.com/qutip/qutip/pull/264,1,['Update'],['Updates']
Deployability,Updates to propagator,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/496:0,Update,Updates,0,https://qutip.org,https://github.com/qutip/qutip/pull/496,1,['Update'],['Updates']
Deployability,Updates to remove some of the errors from the Sphinx docs. Many errors in the control module have yet to be fixed.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/516:0,Update,Updates,0,https://qutip.org,https://github.com/qutip/qutip/pull/516,1,['Update'],['Updates']
Deployability,Updates to steady state module,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/166:0,Update,Updates,0,https://qutip.org,https://github.com/qutip/qutip/pull/166,1,['Update'],['Updates']
Deployability,"Updates:. 1. Added `str_qasm` to read QASM input from string. Added tests for export by doing export followed by import. ; 2. The only remaining issue is that of global phase with gates. Specifically, with the `SQRTNOT`, `CSIGN` gates, the global phase is distorted when exporting to QASM and then re-importing. Should we just add a warning that this might happen more generally? Furthermore, gates like iSWAP become pretty useless with this. @BoxiLi . Otherwise, the PR is mostly ready for review.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1318#issuecomment-657746734:0,Update,Updates,0,https://qutip.org,https://github.com/qutip/qutip/pull/1318#issuecomment-657746734,1,['Update'],['Updates']
Deployability,"Updates:; - I have switched the order of `state` and `op`/`ops`. ; - There is now an optional `targets` arguments on each of the measurement functions to enable applying `ops` on particular; `qubits` although this is inherently delicate, especially when dealing with non-qubit type dimensions. Right now, it's restricted to `qubit` style expansions (in terms of dimensions). This indicated in the docstring. I will add some more information on how to use this in the user guide but I think it works best for more simpler use cases !",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1274#issuecomment-648548980:0,Update,Updates,0,https://qutip.org,https://github.com/qutip/qutip/pull/1274#issuecomment-648548980,1,['Update'],['Updates']
Deployability,"Users should not be installing pip dependencies into a conda environment. They should be using conda, not pip. You are only running into this because you are using pip inside a conda environment, and yes, you'll need the dependencies (with their proper conda names) in that environment. (And, since wheels work inside conda, `pip install cutip` should work inside a conda env, even if they should be using conda - it's only because you are building inside it, which is very much not supported for normal users)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1738#issuecomment-990018307:20,install,installing,20,https://qutip.org,https://github.com/qutip/qutip/pull/1738#issuecomment-990018307,2,['install'],"['install', 'installing']"
Deployability,"Using the exact same qutip, numpy, scipy and python versions, I still cannot reproduce your error. Perhaps something messed up your installation? I would recommend trying again in a fresh conda environment.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2536#issuecomment-2375830378:132,install,installation,132,https://qutip.org,https://github.com/qutip/qutip/issues/2536#issuecomment-2375830378,1,['install'],['installation']
Deployability,"Using the stable release of QuTiP doesn't really help me: I'm trying to prepare a pull request for QuTiP, so I need to be able to run tests on `master` and my topic branch. I've been relying on the CI to run the tests for me, but that gets tricky once you run into test failures. You can't really debug the tests if you can't run them locally. I'm also not surprised you're not able to reproduce this on your machine on Linux: this is definitely a platform-dependent problem. The issue is that QuTiP's use of Cython is *extremely* brittle. This makes contributing to the library quite difficult. Until the most recent release (4.4.1), these kinds of problems were also affecting me and colleagues a lot as a user, but luckily that seems to have gotten better. Nonetheless, it would be great if QuTiP's low-level parts became even more robust. I know this is not a trivial problem (or I'd contribute some fixes myself), and I'm very thankful for all the core developers' work, but it's definitely a source of frustration.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1093#issuecomment-540025634:17,release,release,17,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-540025634,2,['release'],['release']
Deployability,"ValueError: ZIP does not support timestamps before 1980</code> when using; <code>SOURCE_DATE_EPOCH=0</code> or when on-disk timestamps are earlier than 1980-01-01. Such; timestamps are now changed to the minimum value before packaging.</li>; </ul>; <p><strong>0.37.1 (2021-12-22)</strong></p>; <ul>; <li>Fixed <code>wheel pack</code> duplicating the <code>WHEEL</code> contents when the build number has changed (<a href=""https://github-redirect.dependabot.com/pypa/wheel/issues/415"">#415</a>)</li>; <li>Fixed parsing of file names containing commas in <code>RECORD</code> (PR by Hood Chatham)</li>; </ul>; <p><strong>0.37.0 (2021-08-09)</strong></p>; <ul>; <li>Added official Python 3.10 support</li>; <li>Updated vendored <code>packaging</code> library to v20.9</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/pypa/wheel/commit/6f1608dc1a88f00d2390b9044bd655753f39234c""><code>6f1608d</code></a> Created a new release</li>; <li><a href=""https://github.com/pypa/wheel/commit/cf8f5ef50e32b836c4ffb43af68107f78dca8d80""><code>cf8f5ef</code></a> Moved news item from PR <a href=""https://github-redirect.dependabot.com/pypa/wheel/issues/484"">#484</a> to its proper place</li>; <li><a href=""https://github.com/pypa/wheel/commit/9ec201660fa07ee0714edd17c979a7039ea852a4""><code>9ec2016</code></a> Removed install dependency on setuptools (<a href=""https://github-redirect.dependabot.com/pypa/wheel/issues/483"">#483</a>)</li>; <li><a href=""https://github.com/pypa/wheel/commit/747e1f6090547abcf65108c5a229cbe21a64a2ae""><code>747e1f6</code></a> Fixed PyPy SOABI parsing (<a href=""https://github-redirect.dependabot.com/pypa/wheel/issues/484"">#484</a>)</li>; <li><a href=""https://github.com/pypa/wheel/commit/76275484bc0de72d1f56601dbba3e816fc2f00c6""><code>7627548</code></a> [pre-commit.ci] pre-commit autoupdate (<a href=""https://github-redirect.dependabot.com/pypa/wheel/issues/480"">#480</",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2052:2941,release,release,2941,https://qutip.org,https://github.com/qutip/qutip/pull/2052,1,['release'],['release']
Deployability,"Version 5 does not officially support python 3.8.; We seems to have miss something in the requirement needed to have pip find version 4 instead. If you really want v5, you could probably install it without build-isolation, something like:; ```; pip install numpy>=1.19.0 scipy>=1.8.0 cython==0.27.37 setuptools packaging ; pip install --no-build-isolation qutip; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2412#issuecomment-2085295423:187,install,install,187,https://qutip.org,https://github.com/qutip/qutip/issues/2412#issuecomment-2085295423,3,['install'],['install']
Deployability,Version and release status updated,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/675:12,release,release,12,https://qutip.org,https://github.com/qutip/qutip/pull/675,2,"['release', 'update']","['release', 'updated']"
Deployability,"Very nice! The fortran stuff never worked on travis. In fact, it builds and install ok, but fails to load when the tests are ran. Perhaps some missing library path?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/300#issuecomment-68425677:76,install,install,76,https://qutip.org,https://github.com/qutip/qutip/pull/300#issuecomment-68425677,1,['install'],['install']
Deployability,"Very probably. The integrator doesn't know what you're trying to achieve, and you've set it exact tolerance limits (either implicitly or explicitly), so it has to integrate within those limits. If you want the steady-state solution, you can try `qutip.steadystate` instead.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1605#issuecomment-886246136:19,integrat,integrator,19,https://qutip.org,https://github.com/qutip/qutip/issues/1605#issuecomment-886246136,2,['integrat'],"['integrate', 'integrator']"
Deployability,WIP: SS updates,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/347:8,update,updates,8,https://qutip.org,https://github.com/qutip/qutip/pull/347,1,['update'],['updates']
Deployability,WIP: Update HEOM for v5,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1868:5,Update,Update,5,https://qutip.org,https://github.com/qutip/qutip/pull/1868,1,['Update'],['Update']
Deployability,WIP: Updates to mcsolver,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/263:5,Update,Updates,5,https://qutip.org,https://github.com/qutip/qutip/pull/263,1,['Update'],['Updates']
Deployability,"Was planning to do it today. Probably in about 4 hours from now.; I assume I am including all your recent pulls. On 9 March 2017 at 20:06, Paul Nation <notifications@github.com> wrote:. > When are you thinking or branching a 4.1 release?; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/649#issuecomment-285465642>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AIxX7bacLwu2bPN0JyuG4UpFaPkZUxnjks5rkFuugaJpZM4MI5S0>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/649#issuecomment-285601574:229,release,release,229,https://qutip.org,https://github.com/qutip/qutip/issues/649#issuecomment-285601574,1,['release'],['release']
Deployability,"We (mainly @Ericgig ) are developing some changes that would only be included in the next major release. It would make sense to merge these into one branch, but not the `master` branch, so that we can test their compatibility. Maybe `development` is a good name, although we often refer to our `master` as the 'development' branch. I have seen some template for this in another project, but cannot remember where. If anyone has some ideas for this, then would be good if they could share here",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/964:96,release,release,96,https://qutip.org,https://github.com/qutip/qutip/issues/964,1,['release'],['release']
Deployability,We aim at delivering the next release in a couple of weeks. Maybe just adding tests to be sure nothing is broken here would help including this PR.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1098#issuecomment-573569425:30,release,release,30,https://qutip.org,https://github.com/qutip/qutip/pull/1098#issuecomment-573569425,1,['release'],['release']
Deployability,"We already don't match our requirement with tests. We require scipy 1.0 but test for >=1.4. Same for numpy, we tests for >=1.20.; We should update it before making the release. ; But we will still build with oldest-supported-numpy so it may not be inline with the tests.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1941#issuecomment-1163446152:140,update,update,140,https://qutip.org,https://github.com/qutip/qutip/pull/1941#issuecomment-1163446152,2,"['release', 'update']","['release', 'update']"
Deployability,We are making a 4.3 release so that master is bumped to 4.4 now. @ajgpitch,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/890:20,release,release,20,https://qutip.org,https://github.com/qutip/qutip/pull/890,1,['release'],['release']
Deployability,"We are planning on moving to use the Anaconda suite as the primary method for installing and using QuTiP. However, this means that one can not install the mcf90 files in a straightforward manner. How are we going to handle these fortran files from here on out?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/439:78,install,installing,78,https://qutip.org,https://github.com/qutip/qutip/issues/439,2,['install'],"['install', 'installing']"
Deployability,"We can in theory drop that requirement for users - it was there in the immediate aftermath of the Numpy 1.20 release, which broke C-ABI compatibility with previous versions, and we had a couple of problems with people building against Numpy 1.20 but trying to run against a prior version. Our CI and release versions will still all need to be built against Numpy 1.16 (or our minimum supported runtime Numpy) as the lowest common denominator until we drop support for all Numpy releases before 1.20, but we enforce that in our build pipelines anyway. Just to be clear (though I think you knew this):. > Can qutip be updated to run with current versions of Numpy?. QuTiP already runs correctly against Numpy 1.20 and Numpy 1.21, and its runtime requirements on Numpy are uncapped. It's just building from source that'll fail, and that was originally a sort of ""fail-safe"" mechanism. Also `pip install -e .` should automatically do build isolation for you, including installing all the build requirements into a temporary virtual environment, so it should have just worked here. Calling `setup.py develop` directly is kind of out-dated now, though it can still be useful if you're planning on doing Cython development; `pip`'s isolation actually usually means that the Cython compiler can't detect changes any more, so it always needs to rebuild everything. `setup.py develop`, because of its much lower-level status, leaves the source and extension-library files well enough untouched that it can do incremental compilation. If you're not doing Cython development (only Python), `pip install -e .` is much better.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1720#issuecomment-974830497:109,release,release,109,https://qutip.org,https://github.com/qutip/qutip/issues/1720#issuecomment-974830497,8,"['install', 'pipeline', 'release', 'update']","['install', 'installing', 'pipelines', 'release', 'releases', 'updated']"
Deployability,We can keep this in mind for the next micro version release.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1187#issuecomment-661856927:52,release,release,52,https://qutip.org,https://github.com/qutip/qutip/pull/1187#issuecomment-661856927,1,['release'],['release']
Deployability,"We can't implement `__hash__` for `Qobj`, sorry - it's just not possible while following the [Python data model](https://docs.python.org/3/reference/datamodel.html#object.__hash__). The two principle points that a hash function must follow from there are; 1. objects which compare equal with `__eq__` have the same hash; 2. the hash of an object cannot change after instantiation (no mutable types). Unfortunately we fail on both points. `Qobj.__eq__` is a rounding match, because it gives a total `True` or `False` based on a floating point tolerance, not on exact equality. I'm not aware of any hash function which can handle this. Second, the `data` attribute of a `Qobj` is mutable in-place, and so hashing based on the data in the object is not valid. This is the same reason that `list` and `np.ndarray` are also not hashable types. If your cache is just for memoisation over a small number of `Qobj` where you know that floating-point tolerance will never be an issue, you may be able to get away with rolling your own cache decorator which uses linear lookup rather than constant-time. I mean something like; ```python; In [1]: import functools; ...: import qutip; ...:; ...: def linear_cache(f):; ...: cache = []; ...: @functools.wraps(f); ...: def out(*args):; ...: for cached_args, cached_value in cache:; ...: if args == cached_args:; ...: print(""Getting from cache""); ...: return cached_value; ...: print(""Computing new value""); ...: value = f(*args); ...: cache.append((args, value)); ...: return value; ...: return out; ...:; ...: @linear_cache; ...: def negate(x):; ...: return -x; ...:; ...: sx = qutip.sigmax(); ...: sy = qutip.sigmay(); ...: negate(sx); ...: negate(sx); ...: negate(sy); ...: negate(sx); ...: negate(sy); Computing new value; Getting from cache; Computing new value; Getting from cache; Getting from cache; ```; This will lead to degraded performance if you need to do it for a large number of possible inputs, but if you have a relatively small number of inputs an",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1321#issuecomment-658078277:1009,rolling,rolling,1009,https://qutip.org,https://github.com/qutip/qutip/issues/1321#issuecomment-658078277,1,['rolling'],['rolling']
Deployability,"We can, but I think it is best to wait. This is just one example of where; we need to add int64 support. It is going to be a bit of work to do that,; so should wait till next release. On Jul 14, 2017 4:04 AM, ""Alexander Pitchford"" <notifications@github.com>; wrote:. > @nonhermitian <https://github.com/nonhermitian> can we merge this?; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/pull/699#issuecomment-315322772>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/ABMPqR6nNyKdMdldv4uM2mAnglMlJmnlks5sNz04gaJpZM4Nr1OC>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/699#issuecomment-315347447:175,release,release,175,https://qutip.org,https://github.com/qutip/qutip/pull/699#issuecomment-315347447,1,['release'],['release']
Deployability,We could install without `semidefinite` for 3.11 to remove `cvxopt` from the requirement.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2041#issuecomment-1344657806:9,install,install,9,https://qutip.org,https://github.com/qutip/qutip/pull/2041#issuecomment-1344657806,1,['install'],['install']
Deployability,"We currently link to the PR in the changelog text, and that that seems a good thing to keep, so we already have to write or update the text after the PR is created. I'm a bit against pulling information from the PR description. My observation is that the descriptions (even my own) are not very good, because they're written when the PR is just opened, before all of the improvements that happen during review. @trentfridey Does the PR number have to appear in the filename or confer any special advantages? Or can one just use a meaningful unique name for the file? E.g. `fix-20220614-add-towncrier`?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1927#issuecomment-1155008517:124,update,update,124,https://qutip.org,https://github.com/qutip/qutip/pull/1927#issuecomment-1155008517,1,['update'],['update']
Deployability,We don't currently test or build for 3.12 on the `qutip-4.7.X` branch. Probably we should since 5 isn't fully released yet.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2293#issuecomment-1892426006:110,release,released,110,https://qutip.org,https://github.com/qutip/qutip/issues/2293#issuecomment-1892426006,1,['release'],['released']
Deployability,We don't support cython 3.X and the fix for matplotlib 3.8 is not released yet.; My guess is if you roll back cython to 0.29.36 it will work. Fix for cython 3.X will be in the next major release.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2245#issuecomment-1773217627:66,release,released,66,https://qutip.org,https://github.com/qutip/qutip/issues/2245#issuecomment-1773217627,2,['release'],"['release', 'released']"
Deployability,We have a patch already written in #1440 - just needs a review before we merge and hopefully push out a new version to conda.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1433#issuecomment-778863114:10,patch,patch,10,https://qutip.org,https://github.com/qutip/qutip/issues/1433#issuecomment-778863114,1,['patch'],['patch']
Deployability,"We have an install now, through conda-forge packages, and #570, that works on all platforms, even without a C compiler. We have a working compiler solution for all platforms except Python 3.5/3.6 on Windows. So I don't think we need to work further on making qutip work without a C compiler. We should be trying to include the dynamic C for all users, which we almost have. I am keen on making the import lighter though. Though it's not super urgent. I will be looking more into the pyximport and settings soon. I think we should be able to move the `pyximport.install` to just before when it is needed. And the same with the `hardware_info` call.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/580#issuecomment-271126292:11,install,install,11,https://qutip.org,https://github.com/qutip/qutip/issues/580#issuecomment-271126292,2,['install'],['install']
Deployability,"We have been talking about pulse level control in the `qip` device simulator for a while, but I just released that we didn't really define it in as separate ""pulse"". I find it really important and therefore I rewrite the data part of the `qip` numerical simulator as a new class `Pulse`. It's quite interesting that I end up to define a class very similar to `EvoElement` in `Qobjevo` (I called it `_EvoElement` for internal use, cannot find a better name). Instead of the full Hamiltonian, I only save the target qubits label and the non-trivial Hamiltonian (e.g. `sigmaz()` instead of `tensor(sigmaz(), identity(2)`). It is defined in this way for easy inspection after initialized, such as adding noise. `_EvoElement` consists of; - Hamlitonian; - Target qutbis label; - `tlist`; - `coeff`. `Pulse` consists of. - ideal part: `_Evoelement`; - coherent noise: list of `_Evoelement`; - lindblad noise: list of `_Evoelement`. The advantages are:; - A list of `Pulse `is easier to understand and manipulate compared to the old design: a list of H and a list of `coeff`. Now different `tlist `can also be defined for different pulses.; - Adding noise is much easier as we now can get the non-trivial part of the Hamiltonian and the targets of each pulse, instead of only a huge Hamiltonian in `QobjEvo`. One can now define noise for each Pulse. Still working on the docs.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1155:101,release,released,101,https://qutip.org,https://github.com/qutip/qutip/pull/1155,1,['release'],['released']
Deployability,"We have decided not to continue to maintain the Ubuntu channel. Please; install from source to using qutip 3.2.; Alternatively you can use the conda-forge channel if you are able to work; with qutip 3.1. On 9 May 2016 at 02:52, Qi notifications@github.com wrote:. > There doesn't seem to be the package released under Ubuntu 16.04 channel.; > After I added the Ubuntu PPA for QuTiP, I got the following error/warning:; > ; > qxd@ubuntu1604$: sudo apt-get update; > ...; > W: The repository 'http://ppa.launchpad.net/jrjohansson/qutip-releases/ubuntu xenial Release' does not have a Release file.; > N: Data from such a repository can't be authenticated and is therefore potentially dangerous to use.; > N: See apt-secure(8) manpage for repository creation and user configuration details.; > E: Failed to fetch http://ppa.launchpad.net/jrjohansson/qutip-releases/ubuntu/dists/xenial/main/binary-amd64/Packages 404 Not Found; > E: Failed to fetch http://ppa.launchpad.net/jrjohansson/qutip-releases/ubuntu/dists/xenial/main/binary-i386/Packages 404 Not Found; > ; > Thanks for maintaining it :); > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly or view it on GitHub; > https://github.com/qutip/qutip/issues/472",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/472#issuecomment-218122293:72,install,install,72,https://qutip.org,https://github.com/qutip/qutip/issues/472#issuecomment-218122293,9,"['Release', 'configurat', 'install', 'release', 'update']","['Release', 'configuration', 'install', 'released', 'releases', 'update']"
Deployability,"We have done quite a bit of work, and added a lot of functionality for a point release. I am suggesting that we bump the dev version to 4.0, and have this be the version that corresponds to the PRX paper. A list of additional things I want in a 4.0 release is in the roadmap:. https://github.com/qutip/qutip/wiki/Roadmap",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/532:79,release,release,79,https://qutip.org,https://github.com/qutip/qutip/pull/532,2,['release'],['release']
Deployability,"We have made some progress! But I also have some questions for the experts here.; * We have added a Users Guide for the new solver, as a new subsection of the ""Monte Carlo Solver"" guide. On my machine, I can build the documentation without problems (there are some warnings, but unrelated to this pull request). However, the check here failed and I do not see a useful error message. Does someone have an idea what is going on?; * We have two example notebooks to add to qutip-notebooks. How to proceed in practice: do we open a separate pull request in qutip-notebooks?; * The _run_one_traj function now exists 3 times, with practically identical code:; https://github.com/qutip/qutip/blob/master/qutip/solver/multitraj.py#L197; https://github.com/qutip/qutip/blob/master/qutip/solver/mcsolve.py#L427; https://github.com/pmenczel/qutip/blob/nonmarkovian-mcsolve/qutip/solver/nm_mcsolve.py#L160; I've noticed a small bug that has gone unnoticed because of this: ""step"" [here](https://github.com/qutip/qutip/blob/master/qutip/solver/multitraj.py#L206) should be ""integrate"", I think. Maybe it would be a good idea to make the type of `Result` that is used for single trajectories generic in multi-trajectory solvers (just like the `resultclass` is already generic in solvers in general)? I have implemented that [here](https://github.com/pmenczel/qutip/commit/4a25709f90ed7c6dc2153011ee5a8110f3957c95) and could merge that commit into this PR if you think that's a good idea. Side note: due to a WSL bug, some of my commit timestamps are messed up. Because of that, some commits seem to be shown out of order here...",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2070#issuecomment-1446149901:1062,integrat,integrate,1062,https://qutip.org,https://github.com/qutip/qutip/pull/2070#issuecomment-1446149901,1,['integrat'],['integrate']
Deployability,"We only use it for Travis, the end user only needs to install pytest.; I don't think removing it should change the output, but we can try it if you think it might work.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1134#issuecomment-560293809:54,install,install,54,https://qutip.org,https://github.com/qutip/qutip/issues/1134#issuecomment-560293809,1,['install'],['install']
Deployability,"We probably shouldn't mutate the given `Options` object, but the call as written here doesn't make a huge amount of sense - why would you want to run the integrator but not have any output stored at all? You'd just be spinning your processor. That said, if we're going to do something different to what the user requested we should at least emit a warning. There's also interplay with `store_final_state` here too; it's questionable technique to do `e_ops=None, store_final_state=True` with a `tlist` with more than two elements, but probably people who aren't familiar with `nsteps` will do something like that, and it seems a bit picky to prevent/warn on that when the intention seems clear. I think that the current behaviour doesn't take this case into account when falling back - it'll store all states, which in the 4.x branch is a fairly major time sink (but much much faster in 5.0). What behaviour would you expect for your use case? I'd probably do something like:; 1. if we change the `Options`, we have to clone it first to prevent leaking our mutations; 2. if we're not going to save anything, we should warn the user but then do it anyway - maybe their time-dependence functions leak state, and they're just doing something weird with that; 3. `store_final_state` should count as ""storing something"", so no need to set `store_states` if `store_final_states=True` and there are no `e_ops`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1437#issuecomment-775216824:154,integrat,integrator,154,https://qutip.org,https://github.com/qutip/qutip/issues/1437#issuecomment-775216824,1,['integrat'],['integrator']
Deployability,"We removed the need for cython at run time (officially) recently. It is still needed at installation for installation from sources, but conda can be used if cython is not available. I am not sure about the minimum version, but it does not have to be that recent. Pickling of cdef class is done manually and depend more on pickle version than cython's.; We don't support python2 anymore since numpy also removed it's support, but 4.3 or 4.2 should date from a time it was still supported. Are some of the cython files compiling or are they all failing?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1129#issuecomment-607866651:88,install,installation,88,https://qutip.org,https://github.com/qutip/qutip/issues/1129#issuecomment-607866651,2,['install'],['installation']
Deployability,We should release the patch soon. @hodgestar Let me know if you need any help with the release.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1766#issuecomment-1018630360:10,release,release,10,https://qutip.org,https://github.com/qutip/qutip/issues/1766#issuecomment-1018630360,3,"['patch', 'release']","['patch', 'release']"
Deployability,"We use the scipy ode solver. In their documentation ; https://docs.scipy.org/doc/scipy/reference/generated/scipy.integrate.ode.html; they state that for the ZVODE solver. > Warning; > This integrator is not re-entrant. You cannot have two ode instances using the “zvode” integrator at the same time. This does seem a big shame, as there are of course many good reasons to want to parallelise solving ODEs.; Not really sure that there is any easy way around this. Only one of the ode integrators does not carry this warning. We currently don't have any setting that allows switching integrator method",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/822#issuecomment-365680262:113,integrat,integrate,113,https://qutip.org,https://github.com/qutip/qutip/issues/822#issuecomment-365680262,5,['integrat'],"['integrate', 'integrator', 'integrators']"
Deployability,"We'll have a new release before Monday, and maybe today.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2036#issuecomment-1344178773:17,release,release,17,https://qutip.org,https://github.com/qutip/qutip/issues/2036#issuecomment-1344178773,1,['release'],['release']
Deployability,"Website is updated, so all the links are now live. Merging.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1511#issuecomment-829095859:11,update,updated,11,https://qutip.org,https://github.com/qutip/qutip/pull/1511#issuecomment-829095859,1,['update'],['updated']
Deployability,"Welcome, and thanks for filing your first issue. `measurement_statistics_observable` determines the eigenvalues and eigenstates of the supplied operator, so it's likely to be slow as the size of the system grows. If there is a means to speed it up, we'd be happy to give that a try. You could also try the alpha release of QuTiP 5 (`pip install qutip==5.0.0a2`) and compare performance there. Are you only seeing the negative probabilities when `state` is a density matrix? Perhaps we can make the code a bit better and explicitly tidy up the small unphysical negative probabilities.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2265#issuecomment-1819949808:312,release,release,312,https://qutip.org,https://github.com/qutip/qutip/issues/2265#issuecomment-1819949808,2,"['install', 'release']","['install', 'release']"
Deployability,"Well how about we just stick with the way it is, change squeez to squeeze in the next release (with squeez depreciated and calling the new version), and mentioning in the docs that qutip should probably be imported last?. On Wednesday, June 5, 2013 at 11:54 AM, Robert Johansson wrote:. > I would have preferred if the squeez function was called squeeze... but that's just a personal preference. There are many very generic symbol names in qutip, such as tensor, create, etc. These could easily appear in some other package, such as scipy or numpy sometime in the future, and then become a conflict, so I tend to prefer not relying on distorting the function names to make them more unique. For example, identity seems more readable to qeye, which is why i prefer it.; > What is your suggestion? That we remove identity again? If you think that's the best thing to do that I'm ok with that.; > However, if best practices python programming is followed, either by not importing into the global namespace or by importing packages in dependency order (for example numpy, matplotlob, scipy. followed by qutip), then this isn't really a problem.; > ; > —; > Reply to this email directly or view it on GitHub (https://github.com/qutip/qutip/issues/25#issuecomment-18952812).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/25#issuecomment-18955374:86,release,release,86,https://qutip.org,https://github.com/qutip/qutip/issues/25#issuecomment-18955374,1,['release'],['release']
Deployability,Well the most naive way I can think of is to overwrite the `circuit.py` file in your local installation of qutip with this new `circuit.py` file. It is located in `qutip/qutip/qip` in your local python package installation folder. If you can't find it then you can go for a fresh install with this file. - Remove your current qutip version with a `pip uninstall qutip`; - Download the latest qutip version from the [website](qutip.org) and replace the `circuit.py` file in `qutip/qip` folder with the one from here.; - Reinstall qutip by running `python setup.py install` from your qutip folder. Of course there are better ways to do this such as pulling this branch locally and updating your qutip version. If you need any help ping me on our gitter channel https://gitter.im/qutip/Lobby.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/679#issuecomment-291664172:91,install,installation,91,https://qutip.org,https://github.com/qutip/qutip/pull/679#issuecomment-291664172,4,['install'],"['install', 'installation']"
Deployability,"Well, the default implementation for states is actually nearly completely unchanged (the only difference is that I replaced `np.fliplr(array)` with `array[::-1]`, which I think is a more readable idiom for ""backwards""). You're right that in the new form, basically the method is that you cache various parts of the `np.polyval` call into a 3D tensor, rather than recomputing this large polynomial each time. The `np.polyval` call is how you actually go from an array of different values of `alpha` (which comes from the meshgrid) to the coherent state, but doing it with `polyval` means you construct the coherent state and do the dot product simultaneously to save memory. If you need to repeat the calculations a bunch, and you've got enough memory to spare, you can build up all the `alpha**n / sqrt(factorial(n))` tensor once, then just dot it against every state. Since we're dealing with _complex_ Hilbert spaces, the inner product isn't a straight dot product, it needs the conjugate of one of the sides, so we only store the conjugate of the alpha tensor. You can see in the timings that this isn't _always_ the biggest win you'd expect; in some cases, the additional memory usage causes you to be more heavily bound by memory bandwidth issues rather than CPU pipelined stuff, which is another reason we allow forcing either method to be used. If you're interested in the most readable implementation, you might want to look at the test:; https://github.com/qutip/qutip/blob/a20c26307e2f6e738f87efd75abafc3dff4daad5/qutip/tests/test_wigner.py#L251-L260",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1583#issuecomment-877254212:1268,pipeline,pipelined,1268,https://qutip.org,https://github.com/qutip/qutip/pull/1583#issuecomment-877254212,1,['pipeline'],['pipelined']
Deployability,"Well, yesterday when helping said user, I installed a fresh Anaconda 32bit for winodws + mingw + libpython. Then I installed the latest github release of qutip. And still I got these issues.; I could try to reproduce on a clean win7 virtual machine I have here?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/423#issuecomment-182176833:42,install,installed,42,https://qutip.org,https://github.com/qutip/qutip/issues/423#issuecomment-182176833,3,"['install', 'release']","['installed', 'release']"
Deployability,"Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_pw_8rhs14880_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:7166,Release,Release,7166,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_pw_8rhs14881_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:13003,Release,Release,13003,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_pw_8rhs14882_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:19007,Release,Release,19007,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_pw_8rhs14883_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:25011,Release,Release,25011,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"What QuTiP version, how is it installed and on what os?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/916#issuecomment-464297771:30,install,installed,30,https://qutip.org,https://github.com/qutip/qutip/issues/916#issuecomment-464297771,1,['install'],['installed']
Deployability,"What do you think is more efficient than doing; ```python; states = [qutip.basis(2, 0), qutip.basis(2, 1)]; results = [qutip.sesolve(H, state, times) for state in states]; ```; ?. I'm saying that to do each state independently, `mesolve` and `sesolve` have to independently integrate each state, so even if we added this functionality into those functions directly, it would be little more than that loop I just wrote if you have used the tools I described in the first comment. If you want the entire system propagator, `qutip.propagator` can calculate that for you. Lots of people have successfully used QuTiP already as part of reinforcement learning protocols - I've worked with at least a couple, but if you have very specific domain knowledge of your system, you often will be able to write an integrator which is faster for your cases, rather than the full general-purposes ones in QuTiP.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1323#issuecomment-660471465:274,integrat,integrate,274,https://qutip.org,https://github.com/qutip/qutip/issues/1323#issuecomment-660471465,2,['integrat'],"['integrate', 'integrator']"
Deployability,"What happens if you try one of the control pulseoptim notebooks? e.g.:; http://nbviewer.jupyter.org/github/qutip/qutip-notebooks/blob/master/examples/control-pulseoptim-QFT.ipynb. They do not have any cython components. On 27 February 2018 at 13:09, Bilal Riaz <notifications@github.com> wrote:. > I installed using conda-forge channel and installation worked without any; > problems, but when i run following jupyter notebook from example code on; > documentation: (http://nbviewer.jupyter.org/github/qutip/qutip-notebooks/; > blob/master/examples/control-grape-cnot.ipynb); > it gives following error; > [image: grape]; > <https://user-images.githubusercontent.com/34689025/36730450-652e8d18-1c02-11e8-83a8-8741d69f24d6.JPG>; >; > —; > You are receiving this because you modified the open/close state.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/826#issuecomment-368867793>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AIxX7dXsxCq1txKUU7RuhVSNZaW3A9oPks5tY_5_gaJpZM4SSlE1>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/826#issuecomment-368895127:300,install,installed,300,https://qutip.org,https://github.com/qutip/qutip/issues/826#issuecomment-368895127,2,['install'],"['installation', 'installed']"
Deployability,What is the possible source of this installation error?,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/911:36,install,installation,36,https://qutip.org,https://github.com/qutip/qutip/issues/911,1,['install'],['installation']
Deployability,"What's wrong with just using a loop? Adding the `combine` statement is already extra work for you, and using the solver in a loop will be much clearer about what's going on. The `Qobj` object container is not meant to a vector of objects itself - use a list for that, or a numpy array if you're only going to do simple mathematical operations that you want broadcasting for (numpy will broadcast `*`, `/`, `+`, `-` and `**` correctly). The calculational complexity of the solver isn't helped by knowing you're going to do it a few times, but there are some setup costs that QuTiP already gives you the tools to alleviate. `mesolve` constructs a Liouvillian out the Hamiltonian and collapse operators; if you want to reuse the result of this, you should use `qutip.liouvillian` and `qutip.QobjEvo`, and use the `compile` method of the latter. You can pass the result of this directly as the `H` parameter of `mesolve` and it'll skip all the setup. There is some work going on about making a class-based interface to the solvers, which allows easier use of the tools to reduce setup time, but those likely won't be released for some time yet. In the meantime, just use a loop here. There will not be a notable slow down (unlike numpy maths operations) because the Python iteration over elements takes a negligible amount of time compared to single numerical intergration. As a side note, in this particular case you're doing unitary dynamics with state vectors, so this call to `mesolve` is actually translated into one to `sesolve`, which does not need to construct the Liouvillian.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1323#issuecomment-660459774:1113,release,released,1113,https://qutip.org,https://github.com/qutip/qutip/issues/1323#issuecomment-660459774,1,['release'],['released']
Deployability,"When I follow the example to generate animation for bloch sphere plotting, i.e., page 120-122 from [this doc](http://qutip.org/downloads/4.2.0/QuTiP_4.2.pdf), I faced ; `'Axes3D' object is not iterable`; problem, which happens for the `save` function. > .../matplotlib/animation.py in save(self, filename, writer, fps, dpi, codec, bitrate, extra_args, metadata, extra_anim, savefig_kwargs); 1192 for anim in all_anim:; 1193 # Clear the initial frame; -> 1194 anim._init_draw(); 1195 for data in zip(*[a.new_saved_frame_seq() for a in all_anim]):; 1196 for anim, d in zip(all_anim, data):. > .../matplotlib/animation.py in _init_draw(self); 1755 raise RuntimeError('The init_func must return a '; 1756 'sequence of Artist objects.'); -> 1757 for a in self._drawn_artists:; 1758 a.set_animated(self._blit); 1759 self._save_seq = []. >TypeError: 'Axes3D' object is not iterable. My environment:. QuTiP: Quantum Toolbox in Python; Copyright (c) 2011 and later.; A. J. Pitchford, P. D. Nation, R. J. Johansson, A. Grimsmo, and C. Granade. QuTiP Version: 4.2.0; Numpy Version: 1.14.1; Scipy Version: 1.0.0; Cython Version: 0.27.3; Matplotlib Version: 2.2.0; Python Version: 3.5.2; Number of CPUs: 2; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (x86_64)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/836:1222,Install,Installed,1222,https://qutip.org,https://github.com/qutip/qutip/issues/836,1,['Install'],['Installed']
Deployability,"When I was trying to run a script written with qutip on a cluster with Ubunt 18.04, python 2.7 conda 4.7.12 installed, the following error occurred. Traceback (most recent call last):; File ""test.py"", line 13, in <module>; from qutip import *; File ""/home/user/miniconda2/lib/python2.7/site-packages/qutip/__init__.py"", line 171, in <module>; from qutip.qobj import *; File ""/home/user/miniconda2/lib/python2.7/site-packages/qutip/qobj.py"", line 2434, in <module>; import qutip.superop_reps as sr; File ""/home/user/miniconda2/lib/python2.7/site-packages/qutip/superop_reps.py"", line 61, in <module>; from qutip.superoperator import vec2mat, spre, spost, operator_to_vector; File ""/home/user/miniconda2/lib/python2.7/site-packages/qutip/superoperator.py"", line 408, in <module>; from qutip.qobjevo import QobjEvo; File ""/home/user/miniconda2/lib/python2.7/site-packages/qutip/qobjevo.py"", line 515; raise TypeError(""Qobj not compatible."") from e",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1119:108,install,installed,108,https://qutip.org,https://github.com/qutip/qutip/issues/1119,1,['install'],['installed']
Deployability,When are you thinking or branching a 4.1 release?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/649#issuecomment-285465642:41,release,release,41,https://qutip.org,https://github.com/qutip/qutip/issues/649#issuecomment-285465642,1,['release'],['release']
Deployability,"When attempting to create (and then draw on) the Bloch sphere, the command b.show() as per the documentation (after doing the correct setup) does not display the Bloch sphere. Rather a matplotlib window appears for a fraction of a second before closing itself.; Using plt.pause() after the b.show() line allows this window to remain open however it is simply black with nothing rendered on it.; I am able to get a graph of the Bloch sphere by using the plt.show() command in place of b.show(). However this also brings up another window at the same time showing only a set of 3d axes. Here is my MWE. ```python; import qutip; import matplotlib.pyplot as plt. b = qutip.Bloch(). b.make_sphere(); b.render(). ```; This is the line I can replace with plt.show(); ```; b.show(); ```. As per the documentation I would expect b.show() to be the only command required to display the Bloch sphere. I have attempted to install correctly but I assume I am missing something still. My environment is:; QuTiP Version: 4.6.2; Numpy Version: 1.21.1; Scipy Version: 1.6.2; Cython Version: 0.29.24; Matplotlib Version: 3.0.3; Python Version: 3.7.1; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Windows (AMD64); Installation path: C:\ProgramData\Anaconda3\lib\site-packages\qutip. Thanks",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1616:910,install,install,910,https://qutip.org,https://github.com/qutip/qutip/issues/1616,3,"['Install', 'install']","['Installation', 'Installed', 'install']"
Deployability,"When installing Qutip from source in an MSYS2 environment, the build flags should be set to GCC-style like in *nix installations - I updated the relevant files to do this. I just check for the existence of the MSYSTEM environment variable to check for this case.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/779:5,install,installing,5,https://qutip.org,https://github.com/qutip/qutip/pull/779,3,"['install', 'update']","['installations', 'installing', 'updated']"
Deployability,"When running eigenstates, function in line 1653 of qobj.py, I get the error ``` AttributeError: 'numpy.ndarray' object has no attribute 'norm' ```. I changed the contents of the function to:. ```python; evals, evecs = sp_eigs(self.data, self.isherm, sparse=sparse, sort=sort,; eigvals=eigvals, tol=tol, maxiter=maxiter); ekets = []; for i in range(len(evals)):; ekets.append(Qobj(evecs[i])); for ket in ekets:; ket = ket*(1./ket.norm()); return evals, ekets; ```. Which seems to work for me. **Your Environment**. QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Current admin team: Alexander Pitchford, Paul D. Nation, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, and Boxi Li; Project Manager: Franco Nori.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.5.2; Numpy Version: 1.20.1; Scipy Version: 1.6.2; Cython Version: 0.29.23; Matplotlib Version: 3.3.4; Python Version: 3.8.8; Number of CPUs: 8; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Darwin (x86_64). This is the machine I am currently using, but I has the same issue in an older (2011) Mac with 10.11.6 and a windows 10 PC.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1661:1176,Install,Installed,1176,https://qutip.org,https://github.com/qutip/qutip/issues/1661,1,['Install'],['Installed']
Deployability,"While solving some time-dependent Hamiltonians, I decided to refactor the list-style definition of my Hamiltonian and completely get rid of all ```partial``` calls which made my code much cleaner. In particular, I implemented a small class to construct the time-dependent components that go into the Hamiltonian and overwrote the ```__call__``` method to make my class object directly callable by Qutip. However, this was rejected by Qutip as an ""Incorrect Hamiltonian specification"" due to the format check. Since, as far as I know, subclassing the built-in FunctionType ```function``` is not possible in Python, and subclasses of FunctionType would not be accepted by Qutip either (```_td_format_check``` calls ```isinstance``` and not ```issubclass```), I suggest that Qutip also accepts general objects which have the ```__call__``` attribute defined. Changes: Update ```_td_format_check``` by one extra condition to allow any object with attribute ```__call__``` in the definition of a Hamiltonian.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1107:865,Update,Update,865,https://qutip.org,https://github.com/qutip/qutip/pull/1107,1,['Update'],['Update']
Deployability,"While this has been fixed ""by hand"" by @tehruhn, a fix for the future releases is needed.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1531#issuecomment-574250631:70,release,releases,70,https://qutip.org,https://github.com/qutip/qutip/issues/1531#issuecomment-574250631,1,['release'],['releases']
Deployability,"While this isn't an alternative for this PR, scipy 1.5 made new LAPACK drivers available for `scipy.linalg.eigh`, one or more of which might not have the same problems in OpenBLAS on Mac. Still, we can't require scipy 1.5 when that only released like 5 days ago, but it's interesting going forwards.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1288#issuecomment-649793403:237,release,released,237,https://qutip.org,https://github.com/qutip/qutip/pull/1288#issuecomment-649793403,1,['release'],['released']
Deployability,"While you're at it, could you update the mac test to a more recent version of mac. xcode12 is now out but we are still testing on xcode10 (https://docs.travis-ci.com/user/reference/osx). There were segfault with xcode11, thus we skipped it, but I hope it's solved with the `eigh` patch.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1348#issuecomment-679979350:30,update,update,30,https://qutip.org,https://github.com/qutip/qutip/pull/1348#issuecomment-679979350,2,"['patch', 'update']","['patch', 'update']"
Deployability,"Whoops, that's a mistake in fef7a9c - I accidentally removed a `skipif` checking for the Cython version. I've updated my local setup so I have two environments, one with and one without `Cython` so I can catch that kind of thing locally. I'm force-pushing over fef7a9c and bf6f75c after a nice little rebase to keep the commit history tidier. (Ideally I would have caught this locally and wouldn't have needed to force-push a rebase commit, but c'est la vie, and `--force-with-lease` didn't complain).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1181#issuecomment-603229265:110,update,updated,110,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-603229265,1,['update'],['updated']
Deployability,Why do we need a new function for this? Can't we just update the existing parfor function with the changes you have made?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/253#issuecomment-63155928:54,update,update,54,https://qutip.org,https://github.com/qutip/qutip/pull/253#issuecomment-63155928,1,['update'],['update']
Deployability,Why not try installing via Anaconda?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/690#issuecomment-299022469:12,install,installing,12,https://qutip.org,https://github.com/qutip/qutip/issues/690#issuecomment-299022469,1,['install'],['installing']
Deployability,Will do. Also going to update a few things in the function itself soon.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/724#issuecomment-317231533:23,update,update,23,https://qutip.org,https://github.com/qutip/qutip/pull/724#issuecomment-317231533,1,['update'],['update']
Deployability,"Win32com is in win Anaconda. That is how I tested the code. . > On Feb 8, 2016, at 22:34, Chris Granade notifications@github.com wrote:; > ; > I only had comtypes installed for something else, but at least it's in conda and pip. Sadly, win32com is not in either repository.; > ; > —; > Reply to this email directly or view it on GitHub.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/421#issuecomment-181909452:163,install,installed,163,https://qutip.org,https://github.com/qutip/qutip/pull/421#issuecomment-181909452,1,['install'],['installed']
Deployability,"With #393 now in, can you update your branch from master? Thanks!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/394#issuecomment-154918223:26,update,update,26,https://qutip.org,https://github.com/qutip/qutip/pull/394#issuecomment-154918223,1,['update'],['update']
Deployability,"With the Google Summer of Code 2019 project by @BoxiLi on noise models, we are making some big changes to update the QIP module. One of the things that came up is having a `DeviceProcessor` or `Device`` class which interfaces with hardware implementations directly and runs quantum circuits on models such as SpinChain, cQED. We will also work towards linking the OptPulseProcessor to find optimal pulses to implement a circuit and add a `noise` module. I am opening this issue to discuss the restructuring of the QIP module and also adding a `measure` function/module (later) to get samples and expectation values from a circuit. We c can use this thread to discuss other issues too regarding the QIP module and how we can interface it better to QuTiP core functionalities. . - qip; - device/; - processor (which has DeviceProcessor (base class for spinchain, cqed), OptPulseProcessor etc); - spinchain; - cqed; - circuit.py; - operations.py (gates.py + qft.py); - noise.py; - measurement. @ajgpitch @nathanshammah @qutip/owners ; @BoxiLi please feel free to suggest, change or discuss more on this issue as you continue working on it. Thanks.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1072:106,update,update,106,https://qutip.org,https://github.com/qutip/qutip/issues/1072,1,['update'],['update']
Deployability,"Without seeing the code it is difficult to be sure exactly what this problem was. Python's garbage collection should have been aggressively pruning the stored objects once they were no longer referenced, and I'm not aware of any other people reporting memory usage problems in `mesolve`, but it's possible there was a reference being kept to a dense Liouvillian at every time step at some point in the past (the Liouvillian would explain the N^4 usage, as opposed to a dm which should be just N^2). I'm fairly sure this isn't a problem any more at least; I was able to run the test script; ```python; import qutip; import numpy as np; N = 500; L = [[qutip.liouvillian(qutip.rand_herm(N)), '1']]; rho = qutip.rand_dm(N); times = np.linspace(0, 1, 101); e_op = qutip.jmat((N - 1)/2, 'x'); qutip.mesolve(L, rho, times, e_ops=[e_op]); ```; on a fairly non-descript Macbook without issue as of a `master` shortly (hopefully) before the 4.6 release, without ever exceeding 3GB of RAM used. Just for approximate calculations for N=115: a 100% dense DM stored in CSR format takes ~257kB of memory, while a 100% dense Liouvillian would be ~3.26GB. Closing now due to lack of activity.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/845#issuecomment-809630515:935,release,release,935,https://qutip.org,https://github.com/qutip/qutip/issues/845#issuecomment-809630515,1,['release'],['release']
Deployability,"Without the black changes, the patch would have applied cleanly, I think. With them, it's better to wait til the end, and then rebase the PR on top of master (in git, not github), then merge the PR into master as normal. The rebase is a destructive operation (rewrites history of the PR), so we have to take more care when working with more than one person, but it's better afterwards. I've heard this called a few things - Atlassian calls it a ""foxtrot merge"", for example. Here's a blog post they made about them, and some of the problems: https://blog.developer.atlassian.com/stop-foxtrots-now/. *Edit*: I usually wouldn't care about this, and we'd just squash the PR into a single commit to avoid all these problems, but in this particular case, the PR is kind of like two logical things at once. First it does @dweigand's original PR (but completed), and then it does what could have been another improvement change to all the code. We want to preserve the history in source control of the original PR (so you can see the changes I made to speed it up), so it needs to go in as two separate commits, doing a regular merge. If you're working on your own stuff, normally you'd be able to just squash and be done with it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1583#issuecomment-878194970:31,patch,patch,31,https://qutip.org,https://github.com/qutip/qutip/pull/1583#issuecomment-878194970,1,['patch'],['patch']
Deployability,"Woot for finding this buglet. I have some questions:. - What happens in v5?; - Can we also add a test for this case where a different nT is needed?; - Should we make nT a parameter which defaults to your new value? How closely do the signatures of the various Floquet solvers match currently? If they already have different options we can likely just add a new parameter. If not, perhaps we can anyway, but we should think a bit more.; - We should update the docstring to match.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1961#issuecomment-1198052613:448,update,update,448,https://qutip.org,https://github.com/qutip/qutip/pull/1961#issuecomment-1198052613,1,['update'],['update']
Deployability,"Would it be okay to use `_path_from_env(""XDG_CONFIG_HOME"", Path.home() / "".config"")` rather than depend on the `xdg` package?. How does one know if one is on a system where XDG is supported? E.g. I know Windows used to use a special APP configuration folder of its own.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1876#issuecomment-1219758222:237,configurat,configuration,237,https://qutip.org,https://github.com/qutip/qutip/issues/1876#issuecomment-1219758222,1,['configurat'],['configuration']
Deployability,"Would the use of [plotly](https://plotly.com/) to make the 3d plots better looking and reactive? I'm no expert but it seems very nice especially for 3D visualization in the browser that got integration with [Jupyter notebooks](https://github.com/plotly/plotly.py) (Another app that natively runs in the browser is Bokeh, but that may be more oriented toward data science visualization, while plotly seems more general). It also seems that plotly surpassed [mayavi](https://docs.enthought.com/mayavi/mayavi/) in recent times, with more users, features and more actively developed. This could be relevant for notebooks especially when on My Binder, etc.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1276:190,integrat,integration,190,https://qutip.org,https://github.com/qutip/qutip/issues/1276,1,['integrat'],['integration']
Deployability,"Wow, that a lot of work. Good to see you are still working on the lattice stuff. Right now, we don't have enough hands to maintain it and it pretty much abandoned. If you have the will to give it some love, it would be great. However could you make those PRs to qutip-lattice, in small review able chunks? v4.7 is the last of the v4 series and new feature like this can't be a bug-fix release. And in v5 we are splitting lattice, qip and control in other repo and keeping in Qutip only what me and @hodgestar can actively maintain. qutip-notebook is also taking the door in favour of qutip-tutorial, which tests notebooks and adds other maintainability features. Is this tools you created for your research that you are now contributing or do you plan to stick around contributing on qutip-lattice?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1956#issuecomment-1186306765:385,release,release,385,https://qutip.org,https://github.com/qutip/qutip/pull/1956#issuecomment-1186306765,1,['release'],['release']
Deployability,"Yeah, Google will just update itself over time, I think - the http links aren't dead, they just redirect through to the https ones (or at least they will when I force https access from tomorrow). There's a similar PR on the website (qutip/qutip.github.io#145) to fix links there as well.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1555#issuecomment-840558024:23,update,update,23,https://qutip.org,https://github.com/qutip/qutip/pull/1555#issuecomment-840558024,1,['update'],['update']
Deployability,"Yeah, `qutip-qip` is a much easier build and installation process because you don't need to be concerned about compiler infrastructure, ABI compatibility or stuff like that. In addition in that particular test run, there were three individual calls to change the installed packages, which meant plenty of space for stuff to go wrong. In this case, I think it was a strange interaction between the old `.travis.yml` specifically installing `numpy` and all other dependencies from `conda-forge`, without the channel being in the defaults list. Since `conda uninstall` doesn't specify an additional channel, the dependency calculator considers `defaults` to be higher priority, so it sets various packages to arbitrary allowed ones from `defaults`, which with `openblas` installed like this meant numpy `1.14`. That's my guess at least - it's a pretty weird set up circumstances, but the new `.travis.yml` file that's already in `master` is far simpler about the build process.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1448#issuecomment-782177609:45,install,installation,45,https://qutip.org,https://github.com/qutip/qutip/pull/1448#issuecomment-782177609,4,['install'],"['installation', 'installed', 'installing']"
Deployability,"Yeah, auto-tidyup should be a function of CSR matrices only. It doesn't make sense for dense matrices to have it, that's just burning cycles. As Asier mentioned, you already can't rely on floating-point operations being exactly identical between different matrix types, so there's no particular problem there. The point about auto-differentiation is an excellent reason that it must be allowed to vary between types as well. To be honest, I'm not sure how many cases the auto-tidyup operation actually helps in keeping things efficient. It may well be worth us having a proper investigation, and seeing how often it actually helps. I can tweak the addition and matrix-multiplication sparse algorithms to automatically tidy up when generating their output (if they don't already...), in which case we could probably entirely remove all ""automatic"" tidyup, and just have it be a manual operation?. `isherm_csr_full` is actually explicitly meant to handle all cases, _especially_ those involving matrices that have not been tidied up. The logic is actually sound (it's been deployed in `master` for a while now), but looks like there's a typo made when I handled the merge up, and the data-layer is missing a few of its mathematical tests so it didn't get spotted. I'll fix that now.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1610#issuecomment-882040752:1071,deploy,deployed,1071,https://qutip.org,https://github.com/qutip/qutip/pull/1610#issuecomment-882040752,1,['deploy'],['deployed']
Deployability,"Yeah, definitely there's no point running tests that aren't really testing the package properly. I would hope that if we're much more aggressive about converting time-dependent lists into QobjEvo objects inside `mesolve`, `mcsolve` and `sesolve` (or the class-based versions of them), we could significantly reduce the amount of testing that needs to be done with them. Most of the tests of time-dependent formats would then occur in the QobjEvo tests. We could still test all the configurations of the solvers without too heavy a time penalty. If we only use a small number of different time-dependent operators, we can compile them all only once, and have `pytest` manage the resources through shared fixtures. That would really cut down the run times, especially for the current ""slow"" tests. Another avenue for cutting down run time is if we could merge say the MKL and OpenMP tests into one Travis job - the setup time for one job is about 2.5 minutes, and that's before any tests have run at all. I would hazard a guess that having MKL but not OpenMP is a pretty rare case (maybe more common on high-performance clusters where people submit single-cpu jobs?).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1217#issuecomment-604348182:481,configurat,configurations,481,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604348182,1,['configurat'],['configurations']
Deployability,"Yeah, it was not a fresh conda, but one that I did not previously install QuTiP in. However, that warning is essentially telling me that it is trying to build the Cython openmp stuff at init. It should not be doing this, but will do so if it is trying to load a Cython generated file that was not built yet.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1334#issuecomment-670133651:66,install,install,66,https://qutip.org,https://github.com/qutip/qutip/issues/1334#issuecomment-670133651,1,['install'],['install']
Deployability,"Yeah, seems like in v5 if you give a list of colors to add_points it ignores whether you choose 's' or 'm' and just plots multicolored. I would keep that as is (since i guess the logic of choosing 's' or 'm' is more about what default values to choose if the user provides no list of colors), and maybe update the docstring to just say giving a list of colors to add_points will override the choice of 's' or 'm'? . in v4.7 on the other hand, giving point_color() seems to still obey the choice of s or m used in add_points(). i would say its not so important to preserve that (presumably if you give a list you want multiple colors). @AGaliciaMartinez @Ericgig does this sound reasonable?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1974#issuecomment-1905451596:303,update,update,303,https://qutip.org,https://github.com/qutip/qutip/issues/1974#issuecomment-1905451596,1,['update'],['update']
Deployability,"Yeah, so this bug is fixed in QuTiP 4.5.3 and above. You can also fix it by downgrading Numpy to 1.19 or below (in 1.20 they changed how they handle object arrays, which broke us and a few other packages). That's strange that Conda won't let you upgrade beyond 4.5.2; there's no constraint on our conda package which should prevent it. Do you have any other packages installed that depend on QuTiP? If so, they might be pinning our version. What happens when you run `conda update qutip`? (By the way, you can also install `qutip` from `pip` easily since the 4.6 release).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1634#issuecomment-895511734:246,upgrade,upgrade,246,https://qutip.org,https://github.com/qutip/qutip/issues/1634#issuecomment-895511734,5,"['install', 'release', 'update', 'upgrade']","['install', 'installed', 'release', 'update', 'upgrade']"
Deployability,"Yeah, that was what I was referring to - Travis just tests that the Cython parts compile. I'm new to working on code in any kind of organisation, so I wasn't sure if it's normal to have the unit tests run as part of the CI process, or if that was only meant to test the installation path.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1158#issuecomment-576016364:270,install,installation,270,https://qutip.org,https://github.com/qutip/qutip/issues/1158#issuecomment-576016364,1,['install'],['installation']
Deployability,"Yeah, this feels like a bug in `propagator` - I bet at some point we do `qeye(L.shape[0])` instead of `qeye(L.dims[0])`. There's sometimes quite a bit of that in older code - it used to slip through because we weren't super strict about dimension handling, so in certain cases (like this one), we'd accept bad dimensions. I might try and have a look tonight (UK time), if I have time - I've wanted to break up the large `propagator` monolith into smaller components for quite a while. ---. About numerical precision: if you want to try increasing the precision of the integrators, try passing `options=qutip.Options(nsteps=1_000_000, atol=1e-12, rtol=1e-10)` to `propagator`. `atol` and `rtol` are absolute and relative tolerances respectively, and `nsteps` is the number of subdivisions the integrator is _allowed_ to take (if it reaches its tolerance goals, it won't take all of them). You'll find that `atol` and `rtol` will have only a loose relation to the tolerance of your fidelity value, because there's a _lot_ of floating-point operations between those points in which the errors compound, and there's a hard limit on the tolerances the integrator can achieve, so you might not be able to get a perfect answer. The fidelity calculation involves finding the square root of a density operator, so that's another large possible source of error. About times: if you only care about the state at the last time, setting `tlist = np.linspace(0, x, 201)` is quite inefficient. Instead, set `tlist = [0, x]`, and then pass `options=qutip.Options(nsteps=<very very big integer>)`. It's more efficient because it doesn't need to achieve tolerance goals and construct/store `Qobj` instances at every intermediate timestep. Temporary workaround: this is _very_ temporary, and generally a bad idea in QuTiP, but you can ""flatten"" all your operators into a single space for now, while we implement a fix. To do that:; ```python; # initial setup; H = qutip.tensor(...); c_ops = [qutip.tensor(...)]. original",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1585#issuecomment-865903199:568,integrat,integrators,568,https://qutip.org,https://github.com/qutip/qutip/issues/1585#issuecomment-865903199,2,['integrat'],"['integrator', 'integrators']"
Deployability,"Yeah, this is just one of those silly things caused by ImageMagick choosing a _very_ generic name and then getting burned (hence the swap to `magick`...). Probably the best thing to do is to try and run `convert` once at discovery and to see what happens. If you run `convert -version` on an IM6 install, does it output a string that looks like; > Version: ImageMagick 6.blahblahblah; or something similar?. If so, try this patch: [check_convert.txt](https://github.com/qutip/qutip/files/4397692/check_convert.txt). It rearranged the functions a little for a more logical order (I'll rebase the PR before merge), but the main change is that it now tests the output of `convert -version` to see if it contains the substring `imagemagick` (case insensitive). The reason to do this now is because if we allowed the error to propagate later, we'd have to check it every time and it would mean we'd have to pass through the ""special cases"" more frequently, and it would make the core logic more complex. Also, we _could_ catch a subprocess `CalledProcessError` later (say if one of the other commands were to fail for some reason) and re-raise our own, but to be honest I didn't want to over-engineer what ought to have been a relatively simple PR.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1194#issuecomment-605504526:296,install,install,296,https://qutip.org,https://github.com/qutip/qutip/pull/1194#issuecomment-605504526,2,"['install', 'patch']","['install', 'patch']"
Deployability,"Yeah. Just do a 'git pull upstream master' on this branch. The Travis; config file was updated and it's not the same as this branch. You don't; have to do a painful rebase. The tests need to run online. On Mon, Jun 18, 2018, 9:03 PM Louis Tessler <notifications@github.com>; wrote:. > @sahmed95 <https://github.com/sahmed95> shouldn't the merge automatically; > take care of that without bothering to rebase?; >; > I'd like to avoid wasting time on a rebase if there's no tangible benefit; >; > —; > You are receiving this because you were mentioned.; >; >; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/pull/883#issuecomment-398031660>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AGpUBArCWgSxWGFO-QoURjxQPLZ63Eeiks5t95crgaJpZM4UrUyK>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/883#issuecomment-398048087:87,update,updated,87,https://qutip.org,https://github.com/qutip/qutip/pull/883#issuecomment-398048087,1,['update'],['updated']
Deployability,Yes please. Also make sure that you update to the latest master in your pull so that the travis tests pass.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/565#issuecomment-264249437:36,update,update,36,https://qutip.org,https://github.com/qutip/qutip/pull/565#issuecomment-264249437,1,['update'],['update']
Deployability,Yes we are not sensitive to the point releases typically. I will merge this when I get home.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/276#issuecomment-66585827:38,release,releases,38,https://qutip.org,https://github.com/qutip/qutip/pull/276#issuecomment-66585827,1,['release'],['releases']
Deployability,"Yes, I also tried using these packages. If you see #484 and all the; corresponding links you will see why we switched to the pip install. It's questionable whether we should have a feature that relies on a library; that is not maintaining a conda package. But that is a question for another; day. On 4 June 2018 at 10:51, Shahnawaz Ahmed <notifications@github.com> wrote:. > There are conda versions for cvxopt and cvxpy (https://anaconda.org/mcg/; > cvxpy) but nobody seems to be maintaining or updating them. Installing; > the conda version downgrades everything else. I will first try to fix the; > yml issue. Nothing seemed to be incorrect in the YML file, and the travis; > CI linter is not available, so I am not sure what is wrong with the file.; > Will update if I make progress.; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/pull/873#issuecomment-394298574>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AIxX7e0B0n4eEJ-sZ3Ts6PTblD_UxUD8ks5t5QMkgaJpZM4UYSyh>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/873#issuecomment-394303776:129,install,install,129,https://qutip.org,https://github.com/qutip/qutip/pull/873#issuecomment-394303776,3,"['Install', 'install', 'update']","['Installing', 'install', 'update']"
Deployability,"Yes, I am currently using the M1 chip. However, I previously had no issues with scipy or qutip before, only after I wiped my Mac and reinstall everything did these problems occur. . Last time I installed qutip I went into the hardware_info.py script and changed two lines of code to get the module to work on my M1. I tried to do this again in the exact same way but once I navigated to the qutip folder I found there was no such file. Could this be an issue?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1987#issuecomment-1229183720:194,install,installed,194,https://qutip.org,https://github.com/qutip/qutip/issues/1987#issuecomment-1229183720,1,['install'],['installed']
Deployability,"Yes, I am not going to worry about it, everything works from scripts and when called from the library, so probably just some funny business. I am about to commit a minor update where the diags are grabbed directly from the sparse density matrix, for larger density matrices, or really sparse ones, this bumps up the speed a bit. I will also make a few more unit tests, just for my own sanity. Thanks.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/526#issuecomment-242821449:170,update,update,170,https://qutip.org,https://github.com/qutip/qutip/issues/526#issuecomment-242821449,1,['update'],['update']
Deployability,"Yes, I have not been able to install mcf90 under anaconda.; I think I remember seeing some discussion suggesting that the mcf90 has little or any performance improvement over the standard mcsolver. I have not tried myself. Being an anaconda user, this would take some effort for me.; I think that if it is not offering much greater performance, then we should just exclude it from the conda package.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/439#issuecomment-186524698:29,install,install,29,https://qutip.org,https://github.com/qutip/qutip/issues/439#issuecomment-186524698,1,['install'],['install']
Deployability,"Yes, I have restarted the console after the installation. I tried it now, through the command prompt and it worked fine, the qcirc.pdf file was converted to qcirc.png and I could open it. So I am not sure what is the origin of the problem when running the command q.png in python...; Thanks!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1888#issuecomment-1112231739:44,install,installation,44,https://qutip.org,https://github.com/qutip/qutip/issues/1888#issuecomment-1112231739,1,['install'],['installation']
Deployability,"Yes, `target` makes them a bit specialized and calling `expand_operator` manually is probably a good option. If I may propose the following:; - Move `expand_operator` to `dimensions.py` and keep it in qutip.; - Keep two functions `hadamard_transform` and `qubit_clifford_group`, and find a proper place for them in the main qutip (`operator.py`?). They are not that trivial to implement like the rest of the gates and are also not limited to just `qip`. Keep them consistent with other functions that generate Qobj (support `dtype`).; - Remove all rest of the gates and create some private substitutions just for testing. We should probably add somewhere in the changelog for the major release that if users are using gates like `cnot` for testing and now cannot find it. They should either define the gate themselves (and use `expand_operator` if needed) or install `qutip-qip`. (BTW, is there a place where we can maintain a list of those notes for the major release?)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1890#issuecomment-1121214389:686,release,release,686,https://qutip.org,https://github.com/qutip/qutip/pull/1890#issuecomment-1121214389,3,"['install', 'release']","['install', 'release']"
Deployability,"Yes, installing Microsoft visual C++ solved the problem.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2322#issuecomment-1948097986:5,install,installing,5,https://qutip.org,https://github.com/qutip/qutip/issues/2322#issuecomment-1948097986,1,['install'],['installing']
Deployability,"Yes, that also fails, with the same error (on Windows):. `Building module rhs44481 failed: ['distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat\n']`. I just realized that this particular problem is probably just that this Windows VM doesn't have Visual Studio installed (maybe I should try again with the 20GB developer's VM that Microsoft has). So as a user on Windows, having installed QuTiP through Anaconda, I can't do any time propagation? Somehow, I would have thought that having Cython though Anaconda would also come with some compiler like gcc (which is what it seems to be doing on the Mac). Otherwise, that seems like a very limiting factor to any Windows user. There's no way to run QuTiP while preventing it to cythonize time-dependencies, right? That is, aside from workarounds like the one I did here: https://github.com/qucontrol/krotov/blob/247d4066c83ee4923769b934486da9dae95f6879/src/krotov/objectives.py#L175. Anyway, this is likely not really the same issue as the original problem on the Mac.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/932#issuecomment-464148578:279,install,installed,279,https://qutip.org,https://github.com/qutip/qutip/issues/932#issuecomment-464148578,2,['install'],['installed']
Deployability,"Yes, that is to keep the installation light. Matplolib is surely used for the visualization but most runtime modules can do without it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/892#issuecomment-403674547:25,install,installation,25,https://qutip.org,https://github.com/qutip/qutip/issues/892#issuecomment-403674547,1,['install'],['installation']
Deployability,"Yes, the QT stuff is bit troublesome.. and it is not a core functionality in qutip. The about() and demos() does not do much harm, so deprecate them in next release we can drop them alltogether in the following release. The progressbar is a bigger problem, because (if I got this right) it is partly due to the event-loop tricks we need to do to get the qt progressbar to work we have problems with catching keyboardinterrupt properly in for example mcsolve, and this makes it difficult to abort a calculation cleanly. This is big problem in IPython notebooks, where one cannot hit Ctrl-C and Ctrl-Z until process is stopped.. Factoring the qt progressbar out of mcsolve should therefore be a priority, and the simplest way to do this would obviously be to drop the qt progressbar function completely... I'll add a note about this in the roadmap wiki and closing this issue now.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/19#issuecomment-18917941:157,release,release,157,https://qutip.org,https://github.com/qutip/qutip/issues/19#issuecomment-18917941,2,['release'],['release']
Deployability,"Yes. I saw that. So should we have a single script for all the if statements (checking and installing python2.7, MKL, CVOPT etc.) and run it by passing some command line argument such as. ```; - travis_config install_conda; - travis_config install_mkl; - travis_config install; ```. to do all the complex config stuff?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/875#issuecomment-394644625:91,install,installing,91,https://qutip.org,https://github.com/qutip/qutip/pull/875#issuecomment-394644625,2,['install'],"['install', 'installing']"
Deployability,Yes. Perhaps it is a problem with my scipy installation or something. I'll do some more poking around and try to figure it out.; - Bill,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/501#issuecomment-229492311:43,install,installation,43,https://qutip.org,https://github.com/qutip/qutip/issues/501#issuecomment-229492311,1,['install'],['installation']
Deployability,"You are probably installing with the Anaconda Python package. It points to a location that does not exist for the mkl blas libraries, which it doesnt ship with. . The fortran solver is somewhat dated, and the Python solver is now close in performance. You should probably use the latter one.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/491#issuecomment-224636252:17,install,installing,17,https://qutip.org,https://github.com/qutip/qutip/issues/491#issuecomment-224636252,1,['install'],['installing']
Deployability,You can choose the scipy version to install: `conda install scipy=1.2.1` or `pip install scipy==1.2.1`.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1019#issuecomment-502357838:36,install,install,36,https://qutip.org,https://github.com/qutip/qutip/issues/1019#issuecomment-502357838,3,['install'],['install']
Deployability,"You can compute the propagator with `mesolve` by passing it an identity matrix as the input state: ; `U = qutip.mesolve(H, qutip.qeye(H.dims), times, options=options).states`. `QobjEvo` should be supported by `propagator`, I will add it to my to-do for the next major release.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1482#issuecomment-814921274:268,release,release,268,https://qutip.org,https://github.com/qutip/qutip/issues/1482#issuecomment-814921274,1,['release'],['release']
Deployability,"You can go ahead and merge it. The tests are passing and I checked the; latex code and visualization myself. On 05-Apr-2017 3:04 PM, ""Alexander Pitchford"" <notifications@github.com>; wrote:. > @mortenkjaergaard <https://github.com/mortenkjaergaard> once merged there; > are documented procedures for you to install the latest version from this; > repo; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/pull/679#issuecomment-291807222>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AGpUBEIN656ybDBmGOjjWYVVsvlBH2Qnks5rs2AIgaJpZM4MyxeC>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/679#issuecomment-291862617:307,install,install,307,https://qutip.org,https://github.com/qutip/qutip/pull/679#issuecomment-291862617,1,['install'],['install']
Deployability,You can test with the 4.4.0 conda / pip release.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/965#issuecomment-510881793:40,release,release,40,https://qutip.org,https://github.com/qutip/qutip/issues/965#issuecomment-510881793,1,['release'],['release']
Deployability,"You can use it to select number of processes to use, right? I think it is useful if you don't want to use all processors for a calculation, although I usually use the .qutiprc configuration file for this rather than environment variables. I guess it is not really necessary but could be useful I guess.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/119#issuecomment-41985199:176,configurat,configuration,176,https://qutip.org,https://github.com/qutip/qutip/issues/119#issuecomment-41985199,1,['configurat'],['configuration']
Deployability,"You can use: `smesolve(..., store_all_expect=True)` then use `result.runs_expect[traj_n, e_op, t]`.; (Please check the order of the index.). You can also use `options=SolverOptions(average_states=False, store_states=True)` to have `results.states` keep the states of all trajectories. If you use the v5 pre-release, the with `options = {'keep_run_results': True}` you have both `result.average_expect` and `result.runs_expect`. Same for the states, adding `'store_states':True` to the options, you can get the trajectories states with `result.runs_states` and the averaged states with `result.average_state`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2194#issuecomment-1635773906:307,release,release,307,https://qutip.org,https://github.com/qutip/qutip/issues/2194#issuecomment-1635773906,1,['release'],['release']
Deployability,"You may be trying to run QuTiP from the same directory you installed it; from. On Jan 18, 2017 9:51 AM, ""17643015"" <notifications@github.com> wrote:. > If I try to import qutip a second time, I get the following error:; > ------------------------------; >; > AttributeError Traceback (most recent call last); > in (); > ----> 1 from qutip import*; >; > /home/jan/.local/lib/python2.7/site-packages/qutip/*init*.pyc in (); > 60 qutip.settings.ipython = True; > 61 except:; > ---> 62 qutip.settings.ipython = False; > 63; > 64 # ------------------------------------------------------------; > -----------------; >; > AttributeError: 'module' object has no attribute 'settings'; >; > Also I am running ubuntu 16.10; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/637#issuecomment-273531916>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/ABMPqUlvpTPnqA51MHD8rB-A_QVrHsXYks5rTkMngaJpZM4LnG0_>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/637#issuecomment-273536944:59,install,installed,59,https://qutip.org,https://github.com/qutip/qutip/issues/637#issuecomment-273536944,1,['install'],['installed']
Deployability,You might be waiting a while. You can install the github master via pip fairly easily.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/542#issuecomment-249295313:38,install,install,38,https://qutip.org,https://github.com/qutip/qutip/issues/542#issuecomment-249295313,1,['install'],['install']
Deployability,"You must have some other package installed that's conflicting with QuTiP somehow - our dependencies are pretty lax. We only ask for Numpy >= 1.16.6 and Scipy >= 1.0 as hard dependencies (with no upper bounds), and both of those versions are old. Good to know it's fixed now.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1634#issuecomment-895828645:33,install,installed,33,https://qutip.org,https://github.com/qutip/qutip/issues/1634#issuecomment-895828645,1,['install'],['installed']
Deployability,"You probably need to patch this line in Qobj.norm. https://github.com/cgranade/qutip/blob/feature-supermeta/qutip/qobj.py#L766. so that matrix norm functions are used instead of vector norm. . But there are probably many other places where the code relies on Qobj.type being either of ket/bra/oper/super, so I think it might be a better idea to add the new information about the superoperator representation in another Qobj attribute, such as Qobj.superrep.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/90#issuecomment-37779230:21,patch,patch,21,https://qutip.org,https://github.com/qutip/qutip/pull/90#issuecomment-37779230,1,['patch'],['patch']
Deployability,"You should install qutip with anacondas package manager and not pip. Please install using. ```conda install -c conda-forge qutip; ```. On Tue 8 May, 2018, 10:50 PM hchanzy, <notifications@github.com> wrote:. > I installed anaconda on windows 10.; > I used then ""pip install qutip"", and I get this error :; > File ""\lib\distutils\cygwinccompiler.py"" line 129, in *init*; > if self.ld_version >= ""2.10.90"" :; > TypeError: '>=' not supported between instances of 'NoneType' and 'str'; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/860>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AGpUBK8samd0yf037ZRMulY3XfyKvmEdks5twaK9gaJpZM4T2rnS>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/860#issuecomment-387572634:11,install,install,11,https://qutip.org,https://github.com/qutip/qutip/issues/860#issuecomment-387572634,5,['install'],"['install', 'installed']"
Deployability,"You'll find it easier installing from conda-forge, since we distribute binary releases there: see the [installation guide](http://qutip.org/docs/latest/installation.html) here. If you want to install from source using `pip`, you need to configure your C++ development environment correctly - you'll probably need to enable the XCode command-line tools ([see e.g. this](https://osxdaily.com/2014/02/12/install-command-line-tools-mac-os-x/)).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1404#issuecomment-742038577:22,install,installing,22,https://qutip.org,https://github.com/qutip/qutip/issues/1404#issuecomment-742038577,6,"['install', 'release']","['install', 'install-command-line-tools-mac-os-x', 'installation', 'installing', 'releases']"
Deployability,"You're trying to plot a Hamiltonian with a principle frequency of ~32 GHz, and you want to scan time over ~3ms. That involves integrating over 5 million periods of oscillation - there's little you can do to get a sensible runtime any more because you're evolving it for so long. You might want to make a frame transformation in your Hamiltonian and make a rotating-wave approximation to suppress these very high-frequency terms.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1376#issuecomment-721217434:126,integrat,integrating,126,https://qutip.org,https://github.com/qutip/qutip/issues/1376#issuecomment-721217434,1,['integrat'],['integrating']
Deployability,"Yup, it installed ok, the openmp threshold check error is gone, and all tests passed ok~!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1471#issuecomment-808886693:8,install,installed,8,https://qutip.org,https://github.com/qutip/qutip/pull/1471#issuecomment-808886693,1,['install'],['installed']
Deployability,[![Coverage Status](https://coveralls.io/builds/1558211/badge)](https://coveralls.io/builds/1558211). Coverage decreased (-0.05%) when pulling **2b8ccd0fbcdd5a49a861feeef4b7fcd064d17326 on jrjohansson:parallel-updates** into **f4cb22d03d23d44debcd3513ded09f71c43a167c on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/271#issuecomment-65347711:210,update,updates,210,https://qutip.org,https://github.com/qutip/qutip/pull/271#issuecomment-65347711,1,['update'],['updates']
Deployability,[![Coverage Status](https://coveralls.io/builds/1589410/badge)](https://coveralls.io/builds/1589410). Coverage increased (+0.0%) when pulling **2ee79ccbcdd2ae154e0698fc574a50d31bd0b71c on jrjohansson:mesolve-docstring-updates** into **3279ab91e606305a4b0ae2af4f012e2d50a14ab0 on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/286#issuecomment-66420471:218,update,updates,218,https://qutip.org,https://github.com/qutip/qutip/pull/286#issuecomment-66420471,1,['update'],['updates']
Deployability,[![Coverage Status](https://coveralls.io/builds/1595186/badge)](https://coveralls.io/builds/1595186). Coverage remained the same when pulling **f9948fd4a89b64e4782e4df493c8dc1a539abb9e on jrjohansson:travis-update** into **5bccdbad62a807d73594bd1ba6f0cc4beff8cb7a on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/289#issuecomment-66605084:207,update,update,207,https://qutip.org,https://github.com/qutip/qutip/pull/289#issuecomment-66605084,1,['update'],['update']
Deployability,[![Coverage Status](https://coveralls.io/builds/1600488/badge)](https://coveralls.io/builds/1600488). Coverage increased (+0.05%) when pulling **407427aaa85974f65d1fe8005185c6fbad5f9e53 on jrjohansson:stochastic-updates** into **61d84f359162ee7dd680073e212e6f27f3047031 on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/288#issuecomment-66726276:212,update,updates,212,https://qutip.org,https://github.com/qutip/qutip/pull/288#issuecomment-66726276,1,['update'],['updates']
Deployability,[![Coverage Status](https://coveralls.io/builds/1601222/badge)](https://coveralls.io/builds/1601222). Coverage decreased (-0.0%) when pulling **f22d3cb7280b49e1e1ed8bc06ba330b3dd95df8b on jrjohansson:parallel-updates** into **bd95c50c75209754f66fb658897186467945dce0 on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/290#issuecomment-66743493:209,update,updates,209,https://qutip.org,https://github.com/qutip/qutip/pull/290#issuecomment-66743493,1,['update'],['updates']
Deployability,[![Coverage Status](https://coveralls.io/builds/1628628/badge)](https://coveralls.io/builds/1628628). Coverage decreased (-0.0%) when pulling **525ec5dfe379a6e2dd310bf85b3cce313dd2e9b8 on jrjohansson:release-3.1-code-cleanup** into **23e525934c4ccac56acd7fe441ba3d0f3ed72add on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/292#issuecomment-67436094:200,release,release-,200,https://qutip.org,https://github.com/qutip/qutip/pull/292#issuecomment-67436094,1,['release'],['release-']
Deployability,[![Coverage Status](https://coveralls.io/builds/1628903/badge)](https://coveralls.io/builds/1628903). Coverage decreased (-0.01%) when pulling **6801b8539eb7190121cb9eda01e00ab583c7527e on jrjohansson:release-3.1-code-cleanup** into **947ff2b33ee81de77bc75ee6f839ee41e4be9429 on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/293#issuecomment-67442213:201,release,release-,201,https://qutip.org,https://github.com/qutip/qutip/pull/293#issuecomment-67442213,1,['release'],['release-']
Deployability,[![Coverage Status](https://coveralls.io/builds/1628962/badge)](https://coveralls.io/builds/1628962). Coverage decreased (-0.01%) when pulling **db750cf06b0b6c9c7280a5f2131caef1cd8e6e4e on jrjohansson:release-3.1-code-cleanup** into **947ff2b33ee81de77bc75ee6f839ee41e4be9429 on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/293#issuecomment-67443547:201,release,release-,201,https://qutip.org,https://github.com/qutip/qutip/pull/293#issuecomment-67443547,1,['release'],['release-']
Deployability,[![Coverage Status](https://coveralls.io/builds/1660698/badge)](https://coveralls.io/builds/1660698). Changes Unknown when pulling **f30d623a6f8a4e5ab7808eae47306091178e029b on jrjohansson:3.1-release-updates** into *\* on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/297#issuecomment-68126894:193,release,release-updates,193,https://qutip.org,https://github.com/qutip/qutip/pull/297#issuecomment-68126894,1,['release'],['release-updates']
Deployability,[![Coverage Status](https://coveralls.io/builds/1663131/badge)](https://coveralls.io/builds/1663131). Changes Unknown when pulling **fa4ce7b6db204a1ee838bb80d5dd4dc0af738320 on jrjohansson:3.1-release-updates** into *\* on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/297#issuecomment-68168766:193,release,release-updates,193,https://qutip.org,https://github.com/qutip/qutip/pull/297#issuecomment-68168766,1,['release'],['release-updates']
Deployability,[![Coverage Status](https://coveralls.io/builds/1665631/badge)](https://coveralls.io/builds/1665631). Changes Unknown when pulling **e4f0f6fd6a898029c0a6bc48b55a6af6d4cf6e3d on jrjohansson:3.1-release-updates** into *\* on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/297#issuecomment-68201063:193,release,release-updates,193,https://qutip.org,https://github.com/qutip/qutip/pull/297#issuecomment-68201063,1,['release'],['release-updates']
Deployability,[![Coverage Status](https://coveralls.io/builds/1676678/badge)](https://coveralls.io/builds/1676678). Changes Unknown when pulling **6e0d65421c4d5bf7a8dc4d1262c9880cbf9fafee on nonhermitian:travis-updates** into *\* on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/300#issuecomment-68425623:197,update,updates,197,https://qutip.org,https://github.com/qutip/qutip/pull/300#issuecomment-68425623,1,['update'],['updates']
Deployability,[![Coverage Status](https://coveralls.io/builds/1676696/badge)](https://coveralls.io/builds/1676696). Changes Unknown when pulling **88d0f89e3f341ed06b874e009eb23e1d084897f9 on nonhermitian:travis-updates** into *\* on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/300#issuecomment-68425931:197,update,updates,197,https://qutip.org,https://github.com/qutip/qutip/pull/300#issuecomment-68425931,1,['update'],['updates']
Deployability,[![Coverage Status](https://coveralls.io/builds/22915335/badge)](https://coveralls.io/builds/22915335). Coverage decreased (-0.007%) to 72.421% when pulling **983b91405467b32b82eb4ff97d673f59d00a48b3 on ThatAdamsGuy:patch-1** into **3f2f3f2486c8f266784e2ca29731bb7fe3138c29 on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/984#issuecomment-484914912:216,patch,patch-,216,https://qutip.org,https://github.com/qutip/qutip/pull/984#issuecomment-484914912,1,['patch'],['patch-']
Deployability,[![Coverage Status](https://coveralls.io/builds/24995156/badge)](https://coveralls.io/builds/24995156). Coverage increased (+0.01%) to 71.788% when pulling **df9d7c97402f4a8b1d675190fd4e8ed632114cd3 on yarrriv:patch-1** into **181a98e910a1f34bb29be31b91d61f765d6c5a37 on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1058#issuecomment-518337579:210,patch,patch-,210,https://qutip.org,https://github.com/qutip/qutip/pull/1058#issuecomment-518337579,1,['patch'],['patch-']
Deployability,[![Coverage Status](https://coveralls.io/builds/37292804/badge)](https://coveralls.io/builds/37292804). Coverage remained the same at 63.189% when pulling **8645164cfed7b1f7055c49cca80cb6de25dcc796 on cgohlke:patch-1** into **469b18c879b8e46b765caf4d6637e4d61b99747d on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1449#issuecomment-782561040:209,patch,patch-,209,https://qutip.org,https://github.com/qutip/qutip/pull/1449#issuecomment-782561040,1,['patch'],['patch-']
Deployability,[![Coverage Status](https://coveralls.io/builds/37454317/badge)](https://coveralls.io/builds/37454317). Coverage remained the same at 63.189% when pulling **d0f4a71e606ffa0d0ce63c20c1539ba5343c23c4 on jakelishman:update-mailmap** into **f995f6f638c4a275f3b44016f22adb5fdb16845f on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1454#issuecomment-786076488:213,update,update-mailmap,213,https://qutip.org,https://github.com/qutip/qutip/pull/1454#issuecomment-786076488,1,['update'],['update-mailmap']
Deployability,[![Coverage Status](https://coveralls.io/builds/39186985/badge)](https://coveralls.io/builds/39186985). Coverage decreased (-0.004%) to 64.305% when pulling **1a7ff5023a7363df5b4c62ef2c9ac8eb55f37d5b on jakelishman:update-readme** into **87f61257f65b35756305405daf82aafdc39e1b41 on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1511#issuecomment-828397393:215,update,update-readme,215,https://qutip.org,https://github.com/qutip/qutip/pull/1511#issuecomment-828397393,1,['update'],['update-readme']
Deployability,[![Coverage Status](https://coveralls.io/builds/39289486/badge)](https://coveralls.io/builds/39289486). Coverage remained the same at 64.305% when pulling **7edb262b7554e07e6a58233dcf8fe45a23315c44 on jakelishman:fix-release-versioning** into **963c1bb56dbd30f6bf39cd6211bab4603ac88f13 on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1541#issuecomment-830806647:217,release,release-versioning,217,https://qutip.org,https://github.com/qutip/qutip/pull/1541#issuecomment-830806647,1,['release'],['release-versioning']
Deployability,[![Coverage Status](https://coveralls.io/builds/39351308/badge)](https://coveralls.io/builds/39351308). Coverage increased (+0.2%) to 64.312% when pulling **52c3db5926158598708118e9420d4dbd58c0ee1e on hodgestar:4.6.1-release-preparation** into **d6f5838cf859d0f58d0119b22e71a266743b50cf on qutip:qutip-4.6.X**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1543#issuecomment-832021362:217,release,release-preparation,217,https://qutip.org,https://github.com/qutip/qutip/pull/1543#issuecomment-832021362,1,['release'],['release-preparation']
Deployability,[![Coverage Status](https://coveralls.io/builds/39416644/badge)](https://coveralls.io/builds/39416644). Coverage increased (+0.004%) to 64.333% when pulling **a5519d1043410cf158fe3c14e61d80ca6af9f32d on jakelishman:update-release-docs** into **4a9da224b72165dbad66ba0ba449d9429cd510c8 on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1544#issuecomment-832675360:215,update,update-release-docs,215,https://qutip.org,https://github.com/qutip/qutip/pull/1544#issuecomment-832675360,1,['update'],['update-release-docs']
Deployability,[![Coverage Status](https://coveralls.io/builds/39690016/badge)](https://coveralls.io/builds/39690016). Coverage decreased (-0.04%) to 64.893% when pulling **65a695d39530ebcba83d84dae823d47b73b436de on WingCode:patch-1** into **fe91fdda6b14c4408efe427fad0f5ebdcbabfa4a on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1558#issuecomment-841148767:211,patch,patch-,211,https://qutip.org,https://github.com/qutip/qutip/pull/1558#issuecomment-841148767,1,['patch'],['patch-']
Deployability,[![Coverage Status](https://coveralls.io/builds/40239573/badge)](https://coveralls.io/builds/40239573). Coverage increased (+0.009%) to 64.937% when pulling **40af6dde3a558f2b2ba78b0ca03a34b6208f9be7 on quantshah:changelog-update-4.6.2** into **acb6cfe23f951673b8f4bcba7ea0b7a62b1e6305 on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1564#issuecomment-852993886:223,update,update-,223,https://qutip.org,https://github.com/qutip/qutip/pull/1564#issuecomment-852993886,1,['update'],['update-']
Deployability,[![Coverage Status](https://coveralls.io/builds/42690711/badge)](https://coveralls.io/builds/42690711). Coverage remained the same at 65.763% when pulling **4ba6c3a1b16bfbaf85065191f2a03e58d62e55af on Erotemic:patch-1** into **d78b3b1fbd058f3fb727dd271da14af0dafbb99d on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1652#issuecomment-914083278:210,patch,patch-,210,https://qutip.org,https://github.com/qutip/qutip/pull/1652#issuecomment-914083278,1,['patch'],['patch-']
Deployability,[![Coverage Status](https://coveralls.io/builds/43080503/badge)](https://coveralls.io/builds/43080503). Coverage increased (+0.004%) to 65.871% when pulling **a377949b2d459876aebac0e60f494924566f7453 on hodgestar:feature/update-floquet-guide-fesolve-call** into **9b235c48217fbc9965f993757b0819ebf8ee1f16 on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1675#issuecomment-927639215:221,update,update-floquet-guide-fesolve-call,221,https://qutip.org,https://github.com/qutip/qutip/pull/1675#issuecomment-927639215,1,['update'],['update-floquet-guide-fesolve-call']
Deployability,[![Coverage Status](https://coveralls.io/builds/43279924/badge)](https://coveralls.io/builds/43279924). Coverage increased (+0.2%) to 65.124% when pulling **ac8e9d40d23d253173918a2d353d47f23abdf633 on Ericgig:integrators** into **f8ed1be97946171ae8ba9242673cf2674430da56 on qutip:dev.major**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1643#issuecomment-920331445:209,integrat,integrators,209,https://qutip.org,https://github.com/qutip/qutip/pull/1643#issuecomment-920331445,1,['integrat'],['integrators']
Deployability,[![Coverage Status](https://coveralls.io/builds/44101627/badge)](https://coveralls.io/builds/44101627). Coverage increased (+0.3%) to 65.437% when pulling **af38507293a5f1465f01682e0c34f1499b21f377 on Ericgig:solver.integrator** into **9395b959fd308afc1bf2087171f3e83f6d3387e4 on qutip:dev.major**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1700#issuecomment-953871052:216,integrat,integrator,216,https://qutip.org,https://github.com/qutip/qutip/pull/1700#issuecomment-953871052,1,['integrat'],['integrator']
Deployability,[![Coverage Status](https://coveralls.io/builds/44887329/badge)](https://coveralls.io/builds/44887329). Coverage remained the same at 65.525% when pulling **d3a5c6e3ebb43afa0c2eb7b2456c886cb9651bd1 on Ericgig:safe.integrator** into **298316b4f034f467788943015b3277bf88f3fc9b on qutip:dev.major**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1734#issuecomment-989070040:214,integrat,integrator,214,https://qutip.org,https://github.com/qutip/qutip/pull/1734#issuecomment-989070040,1,['integrat'],['integrator']
Deployability,[![Coverage Status](https://coveralls.io/builds/44890781/badge)](https://coveralls.io/builds/44890781). Coverage decreased (-0.02%) to 68.272% when pulling **351a56170119246c77692112d6b46d21a75410a3 on henryiii:patch-1** into **9c2c08b82040c2c47fe8290bc23ecf6047e00bc5 on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1738#issuecomment-990098258:211,patch,patch-,211,https://qutip.org,https://github.com/qutip/qutip/pull/1738#issuecomment-990098258,1,['patch'],['patch-']
Deployability,[![Coverage Status](https://coveralls.io/builds/44907513/badge)](https://coveralls.io/builds/44907513). Coverage decreased (-0.007%) to 68.323% when pulling **d183195b99a0312d8069b01266b929b47decd198 on madphysicist:patch-1** into **3c4110a12dbac851276e146fdebc26d2b72963a7 on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1469#issuecomment-807669665:216,patch,patch-,216,https://qutip.org,https://github.com/qutip/qutip/pull/1469#issuecomment-807669665,1,['patch'],['patch-']
Deployability,[![Coverage Status](https://coveralls.io/builds/45783203/badge)](https://coveralls.io/builds/45783203). Coverage decreased (-0.03%) to 68.295% when pulling **ed351d809c2dc2146aca7ef99779af12a79d98d7 on VolodyaCO:hotfix/volodyaco/title-in-visualization** into **b6b86579d6208fc2df5859059bd1cad18f1db06b on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1707#issuecomment-967185365:212,hotfix,hotfix,212,https://qutip.org,https://github.com/qutip/qutip/pull/1707#issuecomment-967185365,1,['hotfix'],['hotfix']
Deployability,[![Coverage Status](https://coveralls.io/builds/46168599/badge)](https://coveralls.io/builds/46168599). Coverage increased (+0.07%) to 65.687% when pulling **299f22bc6d2d57f572db0948fa1f0fbff32b8ed6 on hodgestar:fix/update-dev-major-ci-tests** into **0503eb03e2f1a53e747c21b99221d1d4adc1b833 on qutip:dev.major**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1791#issuecomment-1028153738:216,update,update-dev-major-ci-tests,216,https://qutip.org,https://github.com/qutip/qutip/pull/1791#issuecomment-1028153738,1,['update'],['update-dev-major-ci-tests']
Deployability,[![Coverage Status](https://coveralls.io/builds/47184103/badge)](https://coveralls.io/builds/47184103). Coverage remained the same at 68.993% when pulling **175afa8685d8c131ab09587014abc7f6e863d6ad on hodgestar:update-superop-tests** into **71ad3088887e6ccde897fa5f2a632932218ae337 on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1825#issuecomment-1061784670:211,update,update-superop-tests,211,https://qutip.org,https://github.com/qutip/qutip/pull/1825#issuecomment-1061784670,1,['update'],['update-superop-tests']
Deployability,[![Coverage Status](https://coveralls.io/builds/48246604/badge)](https://coveralls.io/builds/48246604). Coverage increased (+0.03%) to 69.593% when pulling **a5cb85fbcc0aea7fad8a570cca4a9ae29671638a on hodgestar:feature/update-changelog-for-qutip-4-7** into **5f926b45fd8a36e2f33ea7bf36f02b8cb7ffef9f on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1852#issuecomment-1096749552:220,update,update-changelog-for-qutip-,220,https://qutip.org,https://github.com/qutip/qutip/pull/1852#issuecomment-1096749552,1,['update'],['update-changelog-for-qutip-']
Deployability,[![Coverage Status](https://coveralls.io/builds/48544268/badge)](https://coveralls.io/builds/48544268). Coverage increased (+0.02%) to 65.506% when pulling **eaae9c110b5c9a78169db01ff213b1b4b04a0043 on Ericgig:integrator.step.fix** into **539e2e4bcd730894dffaec8cd2e0ac9b72efef77 on qutip:dev.major**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1880#issuecomment-1108857030:210,integrat,integrator,210,https://qutip.org,https://github.com/qutip/qutip/pull/1880#issuecomment-1108857030,1,['integrat'],['integrator']
Deployability,[![Coverage Status](https://coveralls.io/builds/48593127/badge)](https://coveralls.io/builds/48593127). Coverage increased (+1.4%) to 67.07% when pulling **ec1c71c02f434b2d56fad69a8db2069f22a6b9bf on Ericgig:integrators.verner** into **414c5eccd2263a5607bf9f57b3b73381ea377504 on qutip:dev.major**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1644#issuecomment-953951326:208,integrat,integrators,208,https://qutip.org,https://github.com/qutip/qutip/pull/1644#issuecomment-953951326,1,['integrat'],['integrators']
Deployability,[![Coverage Status](https://coveralls.io/builds/49888682/badge)](https://coveralls.io/builds/49888682). Coverage increased (+0.01%) to 65.507% when pulling **273803aa68ccccb848933ef7536af43dc7b4abe5 on Ericgig:install.fix** into **781d58c9062fcea0b7cbacf4eaaf437adf01b274 on qutip:dev.major**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1926#issuecomment-1151371449:210,install,install,210,https://qutip.org,https://github.com/qutip/qutip/pull/1926#issuecomment-1151371449,1,['install'],['install']
Deployability,[![Coverage Status](https://coveralls.io/builds/51447321/badge)](https://coveralls.io/builds/51447321). Coverage remained the same at 69.927% when pulling **b179082f96cc04c039cb636c15b1b10a57794c58 on hodgestar:feature/update-roadmap-and-ideas-to-show-completed-work-2022-08** into **7a09e3ecbbeb491c70c17d8f05bb9d1dfcda5a05 on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1967#issuecomment-1206374899:219,update,update-roadmap-and-ideas-to-show-completed-work-,219,https://qutip.org,https://github.com/qutip/qutip/pull/1967#issuecomment-1206374899,1,['update'],['update-roadmap-and-ideas-to-show-completed-work-']
Deployability,[![Coverage Status](https://coveralls.io/builds/51467716/badge)](https://coveralls.io/builds/51467716). Coverage decreased (-0.05%) to 71.537% when pulling **d459df96541e5a96f5010314520a252d61750dad on xspronken:UpdateManifest** into **50be470d9d23981c7cbfed0b04a702a23d440eb8 on qutip:dev.major**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1971#issuecomment-1207225971:212,Update,UpdateManifest,212,https://qutip.org,https://github.com/qutip/qutip/pull/1971#issuecomment-1207225971,1,['Update'],['UpdateManifest']
Deployability,[![Coverage Status](https://coveralls.io/builds/55196508/badge)](https://coveralls.io/builds/55196508). Coverage decreased (-0.2%) to 72.452% when pulling **c26257095ae5d7c9f6fd69c04bcc2206ab76c581 on Ericgig:krylov.integrator** into **a0ca511e15f2edb4d707096e74341a89d7a9d442 on qutip:dev.major**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1986#issuecomment-1228914050:216,integrat,integrator,216,https://qutip.org,https://github.com/qutip/qutip/pull/1986#issuecomment-1228914050,1,['integrat'],['integrator']
Deployability,[![Coverage Status](https://coveralls.io/builds/55225653/badge)](https://coveralls.io/builds/55225653). Coverage remained the same at 69.926% when pulling **e0747ab227153f16854be1a5e54a070dc8d0bded on eltociear:patch-1** into **ff9ada8cbab96b98e3163e9f5c9337c29ca59ac1 on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2049#issuecomment-1354531823:211,patch,patch-,211,https://qutip.org,https://github.com/qutip/qutip/pull/2049#issuecomment-1354531823,1,['patch'],['patch-']
Deployability,[![Coverage Status](https://coveralls.io/builds/56843722/badge)](https://coveralls.io/builds/56843722). Coverage: 72.029%. Remained the same when pulling **778cbba6833f6472ac1cb4c1c5eea7164cd3d70c on hodgestar:feature/update-ipython-version-for-docs-to-8.10.0** into **6da3fc2b87406053389e11ff68e8308e87b352e4 on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2086#issuecomment-1426703028:218,update,update-ipython-version-for-docs-to-,218,https://qutip.org,https://github.com/qutip/qutip/pull/2086#issuecomment-1426703028,1,['update'],['update-ipython-version-for-docs-to-']
Deployability,[![Coverage Status](https://coveralls.io/builds/58517887/badge)](https://coveralls.io/builds/58517887). Coverage: 75.271%. Remained the same when pulling **97596dbf927b20ded1d70ad4d890e377f736dba4 on hodgestar:feature/update-doc-build-requirements** into **32bbdf958ec2fe8ef37e8143f945929ed881ae6a on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2149#issuecomment-1494663755:218,update,update-doc-build-requirements,218,https://qutip.org,https://github.com/qutip/qutip/pull/2149#issuecomment-1494663755,1,['update'],['update-doc-build-requirements']
Deployability,[![Coverage Status](https://coveralls.io/builds/61043380/badge)](https://coveralls.io/builds/61043380). coverage: 78.106% (-0.02%) from 78.129% when pulling **e07d26cc2443f5ade4d9db7a5a929410a9102cad on SJUW:patch-1** into **ec0fcc60142fb5bfb3adc7f9b720fc7b2af9d8a2 on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2181#issuecomment-1609825456:208,patch,patch-,208,https://qutip.org,https://github.com/qutip/qutip/pull/2181#issuecomment-1609825456,1,['patch'],['patch-']
Deployability,[![Coverage Status](https://coveralls.io/builds/64827370/badge)](https://coveralls.io/builds/64827370). coverage: 84.196%. remained the same; when pulling **1529237b401bf8f5271bf878498ca6cc9d07f772 on anonymousdouble:patch-1**; into **7fbb5672242600481d84ee4e5144c95748bf17dc on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2281#issuecomment-1873806211:217,patch,patch-,217,https://qutip.org,https://github.com/qutip/qutip/pull/2281#issuecomment-1873806211,1,['patch'],['patch-']
Deployability,[![Coverage Status](https://coveralls.io/builds/65358635/badge)](https://coveralls.io/builds/65358635). coverage: 70.442%. remained the same; when pulling **c540878f3be02e5285af1162d535808f39f6a54c on Ericgig:prepare-release-4.7.5**; into **e4ba3bd12055d66515955435075a8e14a920764f on qutip:qutip-4.7.X**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2310#issuecomment-1915073450:217,release,release-,217,https://qutip.org,https://github.com/qutip/qutip/pull/2310#issuecomment-1915073450,1,['release'],['release-']
Deployability,[![Coverage Status](https://coveralls.io/builds/66647562/badge)](https://coveralls.io/builds/66647562). coverage: 86.032%. remained the same; when pulling **dc69fee10a5e4958649e997c3fee5057ca34e9bf on hodgestar:feature/update-sphinx-rtd-theme-to-fix-search**; into **7fcc3f3fb9d626c3057fed9721a11f32f5647266 on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2375#issuecomment-2030606847:219,update,update-sphinx-rtd-theme-to-fix-search,219,https://qutip.org,https://github.com/qutip/qutip/pull/2375#issuecomment-2030606847,1,['update'],['update-sphinx-rtd-theme-to-fix-search']
Deployability,[![Coverage Status](https://coveralls.io/builds/67764030/badge)](https://coveralls.io/builds/67764030). coverage: 86.27%. first build; when pulling **bb554d0ecb8d299e3fd859ba2218c82d62ef58ed on pmenczel:doc-updates**; into **e450d6df3cb54961e455234c37c4abe84d614039 on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2439#issuecomment-2137151588:207,update,updates,207,https://qutip.org,https://github.com/qutip/qutip/pull/2439#issuecomment-2137151588,1,['update'],['updates']
Deployability,"[-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_pw_8rhs14880_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:17",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:7704,Release,Release,7704,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"[-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_pw_8rhs14881_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t' may be used u",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:13541,Release,Release,13541,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"[-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_pw_8rhs14882_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t' may be used u",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:19545,Release,Release,19545,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"[-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_pw_8rhs14883_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > ok; > correlation: comparing TLS emission correlations (fn-list td format) ... ok; > correlation: comparing TL",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:25549,Release,Release,25549,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"[0], taulist, None, a_op.dag(), a_op)[0]; > + G1 = correlation_3op(; > + solver, state0, [0], taulist, None, a_op.dag(), a_op; > + )[0]; >; > ------------------------------; >; > In qutip/solver/correlation.py; > <https://github.com/qutip/qutip/pull/2186#discussion_r1245592358>:; >; > > + solver_instance = FLiMESolver(; > + floquet_basis,; > + c_ops,; > + args,; > + time_sense=time_sense; > + ); >; > ⬇️ Suggested change; >; > - solver_instance = FLiMESolver(; > - floquet_basis,; > - c_ops,; > - args,; > - time_sense=time_sense; > - ); > + solver_instance = FLiMESolver(; > + floquet_basis,; > + c_ops,; > + args,; > + time_sense=time_sense,; > + options=options,; > + ); >; > ------------------------------; >; > In qutip/solver/floquet.py; > <https://github.com/qutip/qutip/pull/2186#discussion_r1245594985>:; >; > > @@ -929,4 +930,5 @@ def run(self, state0, tlist, *, floquet=False, args=None, e_ops=None):; > stats[""run time""] = progress_bar.total_time(); > # TODO: It would be nice if integrator could give evolution statistics; > # stats.update(_integrator.stats); > +; >; > Why a new empty line here?; > ------------------------------; >; > In qutip/solver/floquet.py; > <https://github.com/qutip/qutip/pull/2186#discussion_r1245604228>:; >; > > + self.evecs = _data.permute.indices(; > + evecs, col_perm=np.argsort(perm)); >; > This file already has black ran on it and the style is ok as is.; > (But I just learned that black exclude the newline in it's character count; > while pycodestyle include it.); > Since it's not the main part of your PR, please revert it to it's original; > state.; > ------------------------------; >; > In qutip/solver/flimesolve.py; > <https://github.com/qutip/qutip/pull/2186#discussion_r1245610200>:; >; > > + total_R_tensor[key] += np.reshape(flime_FirstTerm - (1 / 2); > + * (flime_SecondTerm +; > + flime_ThirdTerm),; > + (Hdim**2, Hdim**2)); > + except KeyError:; > + total_R_tensor[key] = np.reshape(flime_FirstTerm - (1 / 2); > + * (flime_SecondTer",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2186#issuecomment-1612045847:2879,integrat,integrator,2879,https://qutip.org,https://github.com/qutip/qutip/pull/2186#issuecomment-1612045847,2,['integrat'],['integrator']
Deployability,"[Gitter](https://gitter.im) is a networking platform with tight integration to Github. Its shows the latest activity (commits, PR, comments on issues) and can be a place for people to quickly connect with other QuTiP users and find solutions. For example, the gitter channel for Dipy is pretty active and helpful. (https://gitter.im/nipy/dipy). Has QuTiP considered [integrating](https://github.com/integrations/gitter) gitter with the repository ?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/564:64,integrat,integration,64,https://qutip.org,https://github.com/qutip/qutip/issues/564,3,['integrat'],"['integrating', 'integration', 'integrations']"
Deployability,[RFC][Ecosystem] Hooks for integrating with the Qobj constructor : `__qobj__` interface,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508:27,integrat,integrating,27,https://qutip.org,https://github.com/qutip/qutip/issues/1508,1,['integrat'],['integrating']
Deployability,"[Terminal Saved Output.txt](https://github.com/qutip/qutip/files/67295/Terminal.Saved.Output.txt); Hi, I hope I'm handling this correctly, as I'm new to both qutip and git (recent MATLAB deserter)... I've been trying to set up qutip within my anaconda distribution using . ```; conda install -c https://conda.anaconda.org/jrjohansson qutip; ```. The package linking completes with no errors. But when I . ```; import qutip; ```. I get the following. ```; ImportError: Building module qutip.cy.spmatfuncs failed: ; [""CompileError: command 'gcc' failed with exit status 1\n""]; ```. After running. ```; conda update gcc; conda update cython; ```. I get the same error. I am running OS X 10.11.1. I'm really looking forward to using this software for thesis work, so I hope to get resolved ASAP! Thanks for reading.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/409:284,install,install,284,https://qutip.org,https://github.com/qutip/qutip/issues/409,3,"['install', 'update']","['install', 'update']"
Deployability,"[mkdtemp.txt](https://github.com/qutip/qutip/files/4396123/mkdtemp.txt). Could you try and apply this patch and see if it fixes the problem? Just download it somewhere, then; ```; git apply /path/to/mkdtemp.txt; ```; should do it. If so, I'll commit and push.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1194#issuecomment-605336931:102,patch,patch,102,https://qutip.org,https://github.com/qutip/qutip/pull/1194#issuecomment-605336931,1,['patch'],['patch']
Deployability,"\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\py",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:5227,Release,Release,5227,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: format '%s",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:5089,Release,Release,5089,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:4944,Release,Release,4944,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\py",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:11064,Release,Release,11064,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: format '%s",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:10926,Release,Release,10926,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:10781,Release,Release,10781,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\py",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:17068,Release,Release,17068,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: format '%s",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:16930,Release,Release,16930,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:16785,Release,Release,16785,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\py",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:23072,Release,Release,23072,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: format '%s",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:22934,Release,Release,22934,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:22789,Release,Release,22789,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _. t = 0.0, args = {'op': CSR(shape=(3, 3), nnz=3)}. > ???; E NameError: name 'expect_csr' is not defined. <string>:4: NameError; ======================================================================= short test summary info =======================================================================; FAILED miniconda3/envs/qutip-tmp/lib/python3.11/site-packages/qutip-5.0.0.dev0+7892453-py3.11-linux-x86_64.egg/qutip/tests/core/test_coefficient.py::test_CoeffOptions; FAILED miniconda3/envs/qutip-tmp/lib/python3.11/site-packages/qutip-5.0.0.dev0+7892453-py3.11-linux-x86_64.egg/qutip/tests/core/test_coefficient.py::test_advance_use; =============================================== 2 failed, 214 passed, 1 skipped, 5700 deselected, 13 warnings in 1.17s ================================================; ```. (Note that the second failing test only fails because without cython, there is no `cimport`.). ---. If we install filelock, everything works as expected:. ```shell; $ conda install filelock; $ ipython; 	import qutip; 	coeff = qutip.coefficient(""sin(t)""); 	> [1/1] Cythonizing qtcoeff_f230db93af3a399e4166e330cf4663.pyx; 	> [...]; 	type(coeff); 	> qtcoeff_f230db93af3a399e4166e330cf4663.StrCoefficient; 	exit(); $ pytest --disable-pytest-warnings --pyargs qutip.tests.core -k test_coefficient; ========================================================================= test session starts =========================================================================; platform linux -- Python 3.11.3, pytest-7.1.2, pluggy-1.0.0; rootdir: /home/paul; collected 5917 items / 5700 deselected / 217 selected. miniconda3/envs/qutip-tmp/lib/python3.11/site-packages/qutip-5.0.0.dev0+7892453-py3.11-linux-x86_64.egg/qutip/tests/core/test_coefficient.py .................. [ 8%]; ............................................................................................................................................................... [",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2162:7658,install,install,7658,https://qutip.org,https://github.com/qutip/qutip/issues/2162,1,['install'],['install']
Deployability,"_2_unitary_with_list_func_H - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_96649686147152.pyx; FAILED qutip/tests/test_sesolve.py::TestSESolve::test_06_4_compare_state_and_unitary_list_str - Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_98549686147162.pyx; ============================================================================================================== 21 failed, 15 passed, 3233 deselected, 33 warnings in 15.37s ==============================================================================================================; ```. ### Expected Behaviour. Tests should pass with python3.12. ### Your Environment. ```shell; $ python3.12 -c ""import qutip; qutip.about()"". QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman, Simon Cross and Asier Galicia.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.7.3; Numpy Version: 1.24.2; Scipy Version: 1.10.1; Cython Version: 0.29.36; Matplotlib Version: 3.6.3; Python Version: 3.12.1; Number of CPUs: 8; BLAS Info: OPENBLAS; OPENMP Installed: True; INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /usr/lib/python3/dist-packages/qutip; ================================================================================; Please cite QuTiP in your publication.; ================================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; ```. ### Additional Context. cython3-legacy 0.29.36-3",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2293:27841,Install,Installed,27841,https://qutip.org,https://github.com/qutip/qutip/issues/2293,2,['Install'],"['Installation', 'Installed']"
Deployability,"_Last updated: 2020-08-12_. This is an issue for tracking and publicising the development status of a separated data layer. This is a major breaking change to be introduced in QuTiP 5, and will change how library functions and users access the underlying data structures of `Qobj`. This document and issue will change over time. Development is taking place on the [`dev.major` branch](https://github.com/qutip/qutip/tree/dev.major) in `qutip/qutip`. Pull requests implementing new features:; - #1282 separating out the core QuTiP operations into a (logical but user-transparent) package `qutip.core`.; - #1296 implementing the first parts of the data multiple dispatch and new data types.; - #1332 replacing the `fast_csr_matrix` with the new Cython type `CSR` all across QuTiP; - #1338 implementing the data-layer creation, conversion and dispatcher routines. We are writing a new ""developers' guide"" to explain the logic behind the design decisions, and help new QuTiP developers work on the code. You can follow initial development hosted as [a repo in my user account](https://github.com/jakelishman/qutip-devguide) until we decide how this will be added to the main documentation. You can view a rendered version of the documentation at https://jakelishman.github.io/qutip-devguide. Some design documents:; - [data layer](https://github.com/jakelishman/qutip-doc/blob/design-data-layer/design/01-data-time-layer-separation.md); - [data structure implementation choices](https://github.com/jakelishman/qutip-doc/blob/design-data-layer/design/02-data-structures.md); - [original GSoC proposal (PDF)](https://www.binhbar.com/posts/2020/05/welcome-to-google-summer-of-code-2020/proposal.pdf). New design elements under consideration:; - [improved `'type'` and `'dims'` handling for tensor-product spaces](https://github.com/qutip/qutip/issues/1320). Major breaking changes to QuTiP:; - `Qobj.data` is no longer an instance of `scipy.sparse.spmatrix`, but the new abstract ""data-layer type"" `core.data",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1278:6,update,updated,6,https://qutip.org,https://github.com/qutip/qutip/issues/1278,1,['update'],['updated']
Deployability,"__osx==13.4=0; - feature:|@/osx-arm64::__osx==13.4=0; - qutip -> numpy[version='>=1.22.4,<2.0a0'] -> __osx[version='>=10.9']. Your installed version is: 13.4; ```; This is odd given that I am using `numpy 1.26.2` and `Mac OS 13.4`, which appear to satisfy the requirements. Instead, I tried using `pip install qutip` which circumvented this error, but results in incorrect behavior as described below. ### Code to Reproduce the Bug. ```shell; import numpy as np; import qutip as qt. X = qt.sigmax(); print(np.linalg.eigh(X)[1]); ```. ### Code Output. ```shell; `; [[-0.70710678-0.70710678j 0.70710678+1.20710678j]; [ 0.70710678+0.70710678j 0.70710678+0.5j ]]; `; ```. ### Expected Behaviour. `; [[-0.70710678+0.j 0.70710678+0.j]; [ 0.70710678+0.j 0.70710678+0.j]]; `. ### Your Environment. ```shell; QuTiP Version: 4.7.3; Numpy Version: 1.26.2; Scipy Version: 1.11.4; Cython Version: None; Matplotlib Version: 3.8.2; Python Version: 3.12.0; Number of CPUs: 10; BLAS Info: Generic; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (arm64); ```. ### Additional Context. I am just comparing the behavior between two environments. The first one correctly diagonalizes the Pauli X operator with a Hadamard, and the second does not. The ""correct"" environment uses a standard numpy 1.26.2 install, with qutip installed with conda. The ""incorrect"" environment uses the `accelerate` numpy install, and qutip installed with pip. Each environment has the same `qutip.about()` return string. In reality, my use case is more complex than this, but I managed to boil down the error to faulty matrix diagonlization. I also want to add that I do indeed get a factor of ~4 speedup in pure numpy examples (like those linked in the SE post), so it's only when integrating with QuTiP that something goes awry. It might be the case that there really is some compatibility issue, and using `pip` doesn't really fix anything. I'm mainly wondering whether this behavior is expected, or if there is a corre",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2273:1635,Install,Installed,1635,https://qutip.org,https://github.com/qutip/qutip/issues/2273,1,['Install'],['Installed']
Deployability,"_correlation.py"", line 278, in test_str_list_td_corr; sm.dag(), sm.dag() * sm, sm, args=args); File ""/opt/local/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/qutip/correlation.py"", line 392, in correlation_3op_2t; solver=solver, args=args, options=options); File ""/opt/local/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/qutip/correlation.py"", line 1086, in _correlation_2t; args=args, options=options); File ""/opt/local/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/qutip/correlation.py"", line 1135, in _correlation_me_2t; ).expect[0]; File ""/opt/local/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/qutip/mesolve.py"", line 280, in mesolve; progress_bar); File ""/opt/local/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/qutip/mesolve.py"", line 618, in _mesolve_list_str_td; return _generic_ode_solve(r, rho0, tlist, e_ops, opt, progress_bar); File ""/opt/local/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/qutip/mesolve.py"", line 867, in _generic_ode_solve; r.integrate(r.t + dt[t_idx]); File ""/opt/local/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/scipy/integrate/_ode.py"", line 388, in integrate; self.f_params, self.jac_params); File ""/opt/local/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/scipy/integrate/_ode.py"", line 867, in run; args[5:])); File ""rhs4877011.pyx"", line 19, in rhs4877011.cy_td_ode_rhs (/Users/paul/.pyxbld/temp.macosx-10.10-x86_64-3.4/pyrex/rhs4877011.c:2080); def cy_td_ode_rhs(double t, np.ndarray[CTYPE_t, ndim=1] vec, np.ndarray[CTYPE_t, ndim=1] data0, np.ndarray[int, ndim=1] idx0, np.ndarray[int, ndim=1] ptr0, np.ndarray[CTYPE_t, ndim=1] data1, np.ndarray[int, ndim=1] idx1, np.ndarray[int, ndim=1] ptr1, np.float_t tp, np.int_t t_off):; TypeError: cy_td_ode_rhs() takes exactly 10 positional arguments (11 given); ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/269:1773,integrat,integrate,1773,https://qutip.org,https://github.com/qutip/qutip/issues/269,4,['integrat'],['integrate']
Deployability,"_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_pw_8rhs14880_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Releas",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:8480,Release,Release,8480,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_pw_8rhs14881_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_V",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:14317,Release,Release,14317,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_pw_8rhs14882_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_V",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:20321,Release,Release,20321,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_pw_8rhs14883_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > ok; > correlation: comparing TLS emission correlations (fn-list td format) ... ok; > correlation: comparing TLS emission correlations (fn td format) ... ok; > Counting statistics: current and current noise in a DQD model ... ok; > Dispersive cQED Setup: compare unitary matrix for ISWAP and propogator ... ok; > Dispersive cQED Setup: compare unitary matrix for ISWAP, SQRTISWAP, ... ok; > Diagonalization of random two-level system ... ok; > Diagonalization of composite systems ... ok; > Excitation-number-restricted state-space: full state space ... ok; > Excitation-number-restricted state space: single excitations ... ok; > Excitation-number-restricted state space: two excitations ... ok; > Excitation-number-restricted state space: fock states ... ok; > Excitation-number-restricted state space: identity operator ... ok; > Excitation-number-restricted state space: thermal dens",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:26325,Release,Release,26325,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"` returns True, same as with openblas_info. numpy provides a summary of its configuration in `np.show_config()`:; ```; numpy.show_config(); blas_armpl_info:; NOT AVAILABLE; blas_mkl_info:; NOT AVAILABLE; blis_info:; NOT AVAILABLE; openblas_info:; NOT AVAILABLE; accelerate_info:; NOT AVAILABLE; atlas_3_10_blas_threads_info:; NOT AVAILABLE; atlas_3_10_blas_info:; NOT AVAILABLE; atlas_blas_threads_info:; NOT AVAILABLE; atlas_blas_info:; NOT AVAILABLE; blas_info:; libraries = ['blas', 'blas']; library_dirs = ['/usr/lib/x86_64-linux-gnu']; include_dirs = ['/usr/local/include', '/usr/include']; language = c; define_macros = [('HAVE_CBLAS', None)]; blas_opt_info:; define_macros = [('NO_ATLAS_INFO', 1), ('HAVE_CBLAS', None)]; libraries = ['blas', 'blas']; library_dirs = ['/usr/lib/x86_64-linux-gnu']; include_dirs = ['/usr/local/include', '/usr/include']; language = c; lapack_armpl_info:; NOT AVAILABLE; lapack_mkl_info:; NOT AVAILABLE; openblas_lapack_info:; NOT AVAILABLE; openblas_clapack_info:; NOT AVAILABLE; flame_info:; NOT AVAILABLE; atlas_3_10_threads_info:; NOT AVAILABLE; atlas_3_10_info:; NOT AVAILABLE; atlas_threads_info:; NOT AVAILABLE; atlas_info:; NOT AVAILABLE; lapack_info:; libraries = ['lapack', 'lapack']; library_dirs = ['/usr/lib/x86_64-linux-gnu']; language = f77; lapack_opt_info:; libraries = ['lapack', 'lapack', 'blas', 'blas']; library_dirs = ['/usr/lib/x86_64-linux-gnu']; language = c; define_macros = [('NO_ATLAS_INFO', 1), ('HAVE_CBLAS', None)]; include_dirs = ['/usr/local/include', '/usr/include']; Supported SIMD extensions in this NumPy install:; baseline = SSE,SSE2,SSE3; found = SSSE3,SSE41,POPCNT,SSE42,AVX,F16C,FMA3,AVX2; not found = AVX512F,AVX512CD,AVX512_SKX,AVX512_CLX,AVX512_CNL,AVX512_ICL; ```; So numpy itself marks openblas_info as NOT AVAILABLE (evidently using a build-time test, not runtime, which arguably is a pity). It seems to me that `hasattr` in qutip's BLAS support tests is returning false positives and false negatives. It indicates i",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2053:3188,install,install,3188,https://qutip.org,https://github.com/qutip/qutip/issues/2053,1,['install'],['install']
Deployability,"`MESolver`, and `state` for `SMESolver`. ### Code to Reproduce the Bug. ```shell; import numpy as np; from qutip import destroy, coherent, SMESolver, expect. # parameters; DIM = 20 # Hilbert space dimension; DELTA = 5 * 2 * np.pi # cavity detuning; KAPPA = 2 # cavity decay rate; INTENSITY = 4 # intensity of initial state; NUMBER_OF_TRAJECTORIES = 500. # operators; a = destroy(DIM); x = a + a.dag(); H = DELTA * a.dag() * a. rho_0 = coherent(DIM, np.sqrt(INTENSITY)); times = np.arange(0, 1, 0.0025). stoc_solver = SMESolver(; H,; c_ops=[],; sc_ops=[np.sqrt(KAPPA) * a],; heterodyne=False,; options={""dt"": 0.00125, ""store_measurement"": True,}; ); data = [4.]; stoc_solver.start(state=rho_0, t0=times[0]); for t in times[1:]:; psi_t = stoc_solver.step(t); data.append(expect(x, psi_t)); ```. ### Code Output. ```shell; ---------------------------------------------------------------------------; ValueError Traceback (most recent call last); Cell In[4], line 29; 27 stoc_solver.start(state=rho_0, t0=times[0]); 28 for t in times[1:]:; ---> 29 psi_t = stoc_solver.step(t); 30 data.append(expect(x, psi_t)). File /user/anaconda/envs/myenv/lib/python3.9/site-packages/qutip/solver/multitraj.py:129, in MultiTrajSolver.step(self, t, args, copy); 127 raise RuntimeError(""The `start` method must called first.""); 128 self._argument(args); --> 129 _, state = self._integrator.integrate(t, copy=False); 130 return self._restore_state(state, copy=copy). ValueError: too many values to unpack (expected 2); ```. ### Expected Behaviour. It should have returned the state at time step t instead of failing. It would also be nice if the method would return the output of the measurement current as well. ### Your Environment. ```shell; QuTiP Version: 5.0.3; Numpy Version: 1.26.4; Scipy Version: 1.13.1; Cython Version: None; Matplotlib Version: 3.6.0; Python Version: 3.9.19; Number of CPUs: 16; BLAS Info: Generic; INTEL MKL Ext: False; Platform Info: Linux (x86_64); ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2491:1973,integrat,integrate,1973,https://qutip.org,https://github.com/qutip/qutip/issues/2491,1,['integrat'],['integrate']
Deployability,"`QobjEvo` have a `with_state` method `QobjEvo.with_state(t, psi, args={})` which can be used instead of `__call__` if needed. It compute the coefficient on the python side and send them to the cython part if needed. But I don't like it like this, using `__call__` will raise and error if a psi is needed, and we need to treat it differently in solvers.; How about having the state inserted in the args dictionary.; So if the users have the key ""psi_vec"" or ""psi_Qobj"" in args and mul_vec (spmv)/ expect is used, it is automatically updated. With that definition most solvers could work without a special cases for `rhs_with_state=True`. The present method could still be supported using decorator.; Also it would be relatively simple to support expectation value in args in a similar way:; if a specific key/value is found in the dictonary (`args[""_expect""+name] = Qobj/ QobjEvo` ), it is replaced with the operator expectation value when possible. . For the present case, we should document it more than change it, going back to Qobj will slow the simulation. Maybe `rhs_with_state` could be more than a bool and offer the option?; Here ` expect_rho_vec(data, vec, isherm)` from qutip.expect could be used to skip the vec -> Qobj conversion. . Also, the users should not need to know the matrix format and have to do the conversion themselves. They should never have to use `dense2D_to_fastcsr_fmode`. `QObj((vec2mat(rho))` works and should be sufficient.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/947#issuecomment-462591342:532,update,updated,532,https://qutip.org,https://github.com/qutip/qutip/issues/947#issuecomment-462591342,1,['update'],['updated']
Deployability,"```; Python 3.6.7 (default, Oct 22 2018, 11:32:17) ; [GCC 8.2.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> from qutip.ipynbtools import version_table; >>> version_table(); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/home/mmmm1998/.local/lib/python3.6/site-packages/qutip/ipynbtools.py"", line 103, in version_table; (""Number of CPUs"", qutip.hardware_info.hardware_info()['cpus']),; KeyError: 'cpus'; ```. I installed qutip version 4.3.1 via pip3.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1004:486,install,installed,486,https://qutip.org,https://github.com/qutip/qutip/issues/1004,1,['install'],['installed']
Deployability,"`c_ops` don't support arbitrary function, and there is no easy way to go around it for `mcsolve`. The main runner of the evolution is in cython and rewriting a python mcsolver would probably be easier than to try to force it.; In one of my old PR: #1123, I believe mcsolve and mesolve accepted arbitrary function for `c_ops` but `stochastic` was still in progress. You could try that, but there is no guaranties.; Otherwise, the next major release should accept functions, but it's still far away.; `mesolve` is probably the easiest way.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1398#issuecomment-740001840:440,release,release,440,https://qutip.org,https://github.com/qutip/qutip/issues/1398#issuecomment-740001840,1,['release'],['release']
Deployability,`conda install libgcc` seems to solve the problem for now. The conda-package still fails with a segfault.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/674#issuecomment-293402620:7,install,install,7,https://qutip.org,https://github.com/qutip/qutip/issues/674#issuecomment-293402620,1,['install'],['install']
Deployability,`fmmesolve` multiple c_ops and rate integration fix,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1962:36,integrat,integration,36,https://qutip.org,https://github.com/qutip/qutip/pull/1962,1,['integrat'],['integration']
Deployability,"`mesolve([],...)` fails while `mesolve(identity,...)` works. There is no failure if `rhs_reuse` is not involved. ```; File ""/lustre/home/client/fas/jiang/sk943/python_lab/lib/python3.4/site-packages/qutip/mesolve.py"", line 269, in mesolve; progress_bar); File ""/lustre/home/client/fas/jiang/sk943/python_lab/lib/python3.4/site-packages/qutip/mesolve.py"", line 602, in _mesolve_list_str_td; return _generic_ode_solve(r, rho0, tlist, e_ops, opt, progress_bar); File ""/lustre/home/client/fas/jiang/sk943/python_lab/lib/python3.4/site-packages/qutip/mesolve.py"", line 949, in _generic_ode_solve; r.integrate(r.t + dt[t_idx]); File ""/lustre/home/client/fas/jiang/sk943/python_lab/lib/python3.4/site-packages/scipy/integrate/_ode.py"", line 388, in integrate; self.f_params, self.jac_params); File ""/lustre/home/client/fas/jiang/sk943/python_lab/lib/python3.4/site-packages/scipy/integrate/_ode.py"", line 866, in run; args[5:])); File ""rhs0.pyx"", line 13, in rhs0.cy_td_ode_rhs (/home/fas/jiang/sk943/.pyxbld/temp.linux-x86_64-3.4/pyrex/rhs0.c:1427); def cy_td_ode_rhs(double t, np.ndarray[CTYPE_t, ndim=1] vec, np.ndarray[CTYPE_t, ndim=1] data0, np.ndarray[int, ndim=1] idx0, np.ndarray[int, ndim=1] ptr0):; ValueError: Buffer dtype mismatch, expected 'double complex' but got 'double'; ```. Offtopic: is qutip trying to decide on its own when to use `rhs_reuse`? I had this phantom bug that never appeared in the ipython notebook, but appeared in batch scripts.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/123:594,integrat,integrate,594,https://qutip.org,https://github.com/qutip/qutip/issues/123,4,['integrat'],['integrate']
Deployability,"`mesolve` use cython code for speed and there was a strange bug when using sparse matrix with stored `0` so the `tidyup` is needed. As long as pure `0` are not kept, small values can be used. For now `..solve` will respond to `settings.auto_tidyup_atol` with #1832 for such cases. In a future major release (branch `dev.major` if you are curious), the support is for sparse matrix is improved a lot and those settings are used in the sparse matrices operations directly, so they will apply everywhere.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1831#issuecomment-1064226855:299,release,release,299,https://qutip.org,https://github.com/qutip/qutip/issues/1831#issuecomment-1064226855,1,['release'],['release']
Deployability,"`np.tensordot` is faster than a triple loop. On my applications the function became up to 100 times faster. Also, the way to handle `dims` of the Choi matrix was incorrect (or I misunderstood something). It is explained in the comments. This was coded in collab with [Rafael Haenel](https://github.com/rafaelha). Also, please, could you make a release of the qutip 4 with all the new changes after this PR passes?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2283:344,release,release,344,https://qutip.org,https://github.com/qutip/qutip/pull/2283,1,['release'],['release']
Deployability,"`python3 -mbuild` has a `-C` option (`--config-setting`), see`https://pypa-build.readthedocs.io/en/latest/`. It sounds like it could be used for build configuration options like qutip's openmp support. It doesn't seem to work with the current handling in setup.py however. Permutations of `-C--with-openmp`, `-Copenmp`, `-Copenmp=1` enable a succcessful qutip PEP517 build, but `qutip.about()` then reports; ```; OPENMP Installed: False; ```; indicating the option is ignored.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1875#issuecomment-1107460223:151,configurat,configuration,151,https://qutip.org,https://github.com/qutip/qutip/issues/1875#issuecomment-1107460223,2,"['Install', 'configurat']","['Installed', 'configuration']"
Deployability,"`qcircuit` is no longer vendored by QuTiP, so it uses whatever version of `qcircuit` is installed along with LaTeX (e.g. TexLive includes `qcircuit`).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1096#issuecomment-1097171860:88,install,installed,88,https://qutip.org,https://github.com/qutip/qutip/issues/1096#issuecomment-1097171860,1,['install'],['installed']
Deployability,"`qutip` has binary built extensions and we distribute binary releases through `conda`. These generally have to be built against a specific version of CPython, so we haven't released a cp39 candidate package yet, and `conda` will recognise that as effectively a requirement that `python<3.9`. `pip` should install from source, because we haven't yet built wheels to distribute that way (though I've been looking into that a bit more recently), so the error will likely be completely different - what sort of error do you get from that?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1371#issuecomment-711168808:61,release,releases,61,https://qutip.org,https://github.com/qutip/qutip/issues/1371#issuecomment-711168808,3,"['install', 'release']","['install', 'released', 'releases']"
Deployability,"`result.measurement` is not the same as `result.expect`, the measurement is an expectation value, but not of the `e_ops` but `m_ops` which are usually automatically generated from the `c_ops` and noise is added to the computed expectation value of the state of the trajectory. The noise is usually larger than the signal and makes it hard to see, but it should converge to mesolve's solution eventually. `smesolve`'s `expect` are just the expectation value of the state of each trajectories (averaged or not depending on options) and should average to the master equation solutions with enough trajectories. Plot in cell 8 show the match is quite good. Even with enough trajectories, the numerical error from `smesolve` will be visible. The equation solved are those written in the notebook. Various stochastic integration method are provided, the default is the taylor expansion of order 1.5.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2194#issuecomment-1634520926:811,integrat,integration,811,https://qutip.org,https://github.com/qutip/qutip/issues/2194#issuecomment-1634520926,1,['integrat'],['integration']
Deployability,"`scipy` 1.5 has changed some of its private attributes for matrix multiplication (to a _much_ better name!), and so matrix-matrix multiplication is completely broken for us at the moment: see scipy/scipy@53fac7a. There's also been some changes to how Hermitian eigenvalues and vectors are calculated (which actually is good news for us in general), which may has a bit of a knock-on for some of the `zheevr` tests, which is going to be a bit of a nuisance to fix. To avoid polluting this PR with (any more) off-topic discussion, I've opened #1299. The new data layer types will fix the matrix multiplication issue permanently, because we'll not be duplicating/reusing large tracts of `scipy` private code - we have our own Cython versions that operate faster on more optimised types. In the meantime, #1298 is a patch to catch the renames.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1274#issuecomment-649446743:812,patch,patch,812,https://qutip.org,https://github.com/qutip/qutip/pull/1274#issuecomment-649446743,1,['patch'],['patch']
Deployability,"`setup.py test` invokes test_td_formats.py, which generates rhs*.pyx files in the build subdir. `setup.py install` installs everything in the build subdir. So that includes the rhs*pyx test files. The test files get installed at the toplevel of the installation path, just above the qutip dir.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/987:106,install,install,106,https://qutip.org,https://github.com/qutip/qutip/issues/987,4,['install'],"['install', 'installation', 'installed', 'installs']"
Deployability,`xcode-select --install` does not fix the problem,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/932#issuecomment-438355753:16,install,install,16,https://qutip.org,https://github.com/qutip/qutip/issues/932#issuecomment-438355753,1,['install'],['install']
Deployability,"a maintainer of QuTiP. And it; > seems that there is no way to make a PR to Wiki. I can also send you the; > markdown source code per email like this, but I’m not sure if it works as I; > expected.; >; > The following is the markdown source code:; >; > -----------------------------------; > ## 1. Error mitigation in QuTiP; > From the QuTiP 4.5 release, the qutip.qip module now contains the noisy; > quantum circuit simulator (which was a GSoC project) providing enhanced; > features for a pulse-level description of quantum circuits and noise; > models. A new class `Processor` and several subclasses are added to; > represent different platforms for quantum computing. They can transfer a; > quantum circuit into the corresponding control sequence and simulate the; > dynamics with QuTiP solvers. Different noise models can be added to; > `qutip.qip.noise` to simulate noise in a quantum device.; >; > This module is still young and many features can be improved, including; > new device models, new noise models and integration with the existing; > general framework for quantum circuits (`qutip.qip.circuit`). There are; > also possible applications such as error mitigation techniques [1-3].; >; > The tutorial notebooks can be found at; > http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM; > conference may help you get an overview (; > https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the; > Github Project page for a collection of related issues and ongoing Pull; > Requests.; >; > ### Expected outcomes; > - More devices defined in the `qutip.qip.device` module. At the moment, we; > have two models: spin chain and cavity QED. We would like to include some; > other commonly used planform such as Superconducting system, Ion trap; > system or silicon system. Each model will need a new set of control; > hamiltonian and a compiler that find the control pulse of a quantum gate.; > This part is gonna involve some physics and study of commonly used ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553:1651,integrat,integration,1651,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553,1,['integrat'],['integration']
Deployability,"a94bfe0b22d2aec9392b2676210e5473ce097b10c689297b254a80/qutip-5.0.1.tar.gz conflict with the backend dependencies: numpy==1.17.3 is incompatible with numpy>=1.19.; ```. ### Code Output. _No response_. ### Expected Behaviour. Qutip should install normally. ### Your Environment. ```shell; QuTiP Version: 5.0.1; Numpy Version: (1.17.3) (apparently this is the version it's trying to install); Scipy Version: (1.10.1); Cython Version: (3.0.2); Matplotlib Version: -; Python Version: 3.8.10; Number of CPUs: 16; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64) (Ubuntu 20.04.6 LTS); ```. ### Additional Context. Here's the output of `pip install --verbose qutip`, not sure if it's of any help. <details><summary>Output</summary>. ```; pip install --verbose qutip; Using pip 24.0 from /tmp/test-venv/lib/python3.8/site-packages/pip (python 3.8); Collecting qutip; Using cached qutip-5.0.1.tar.gz (6.4 MB); Running command pip subprocess to install build dependencies; Ignoring cython: markers 'python_version >= ""3.10""' don't match your environment; Collecting setuptools; Using cached setuptools-69.5.1-py3-none-any.whl.metadata (6.2 kB); Collecting packaging; Using cached packaging-24.0-py3-none-any.whl.metadata (3.2 kB); Collecting wheel; Using cached wheel-0.43.0-py3-none-any.whl.metadata (2.2 kB); Collecting cython<3.0.3,>=0.29.20; Using cached Cython-3.0.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (3.1 kB); Collecting oldest-supported-numpy; Using cached oldest_supported_numpy-2023.12.21-py3-none-any.whl.metadata (9.8 kB); Collecting scipy>=1.8; Using cached scipy-1.10.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (58 kB); Collecting numpy==1.17.3 (from oldest-supported-numpy); Using cached numpy-1.17.3-cp38-cp38-manylinux1_x86_64.whl.metadata (2.0 kB); INFO: pip is looking at multiple versions of scipy to determine which version is compatible with other requirements. This could take a whil",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2412:2263,install,install,2263,https://qutip.org,https://github.com/qutip/qutip/issues/2412,1,['install'],['install']
Deployability,"abot.com/python-pillow/Pillow/issues/4526"">#4526</a>; [baletu, radarhere, newpanjing, hugovk]</p>; </li>; <li>; <p>De-zigzag JPEG's DQT when loading; deprecate convert_dict_qtables <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/4989"">#4989</a>; [gofr, radarhere]</p>; </li>; <li>; <p>Replaced xml.etree.ElementTree <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5565"">#5565</a>; [radarhere]</p>; </li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/python-pillow/Pillow/commit/8013f130a5077b238a4346b73e149432b180a8ea""><code>8013f13</code></a> 8.3.2 version bump</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/23c7ca82f09df6ba1047d2d96714eb825f0d7948""><code>23c7ca8</code></a> Update CHANGES.rst</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/8450366be331762ae327036e3c6658c517b05638""><code>8450366</code></a> Update release notes</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/a0afe89990f5ba40a019afc2f22e1b656f8cfd03""><code>a0afe89</code></a> Update test case</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/9e08eb8f78fdfd2f476e1b20b7cf38683754866b""><code>9e08eb8</code></a> Raise ValueError if color specifier is too long</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/bd5cf7db87c6abf7c3510a50170851af5538249f""><code>bd5cf7d</code></a> FLI tests for Oss-fuzz crash.</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/94a0cf1b14f09626c7403af83fa9fef0dfc9bb47""><code>94a0cf1</code></a> Fix 6-byte OOB read in FliDecode</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/cece64f4be10ab28b12a83a3555af579dad343a5""><code>cece64f</code></a> Add 8.3.2 (2021-09-02) [CI skip]</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/e42238637651f191c2fc6e3f4024348c126e0ccc""><code>e422386</code></a",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1654:7481,Update,Update,7481,https://qutip.org,https://github.com/qutip/qutip/pull/1654,2,"['Update', 'release']","['Update', 'release']"
Deployability,"ackages/qutip/mesolve.py in mesolve(H, rho0, tlist, c_ops, e_ops, args, options, progress_bar, _safe_mode); 252 ss = H; 253 elif isinstance(H, (list, Qobj, QobjEvo)):; --> 254 ss = _mesolve_QobjEvo(H, c_ops, tlist, args, options); 255 elif callable(H):; 256 ss = _mesolve_func_td(H, c_ops, rho0, tlist, args, options). /opt/anaconda3/envs/qutip-env/lib/python3.8/site-packages/qutip/mesolve.py in _mesolve_QobjEvo(H, c_ops, tlist, args, opt); 298 ; 299 nthread = opt.openmp_threads if opt.use_openmp else 0; --> 300 L_td.compile(omp=nthread); 301 ; 302 ss = SolverSystem(). /opt/anaconda3/envs/qutip-env/lib/python3.8/site-packages/qutip/qobjevo.py in compile(self, code, matched, dense, omp); 1553 if self.use_cython:; 1554 # All factor can be compiled; -> 1555 self.coeff_get, Code, file_ = _compiled_coeffs(; 1556 self.ops,; 1557 self.args,. /opt/anaconda3/envs/qutip-env/lib/python3.8/site-packages/qutip/qobjevo_codegen.py in _compiled_coeffs(ops, args, dyn_args, tlist); 121 """"""; 122 code = _make_code_4_cimport(ops, args, dyn_args, tlist); --> 123 coeff_obj, filename = _import_str(code, ""cqobjevo_compiled_coeff_"",; 124 ""CompiledStrCoeff"", True); 125 return coeff_obj(ops, args, tlist, dyn_args), code, filename. /opt/anaconda3/envs/qutip-env/lib/python3.8/site-packages/qutip/qobjevo_codegen.py in _import_str(code, basefilename, obj_name, cythonfile); 80 if not import_list:; 81 raise Exception(""Could not convert string to importable function, ""; ---> 82 ""tmpfile:"" + try_file + ext) from e; 83 coeff_obj = import_list[0]; 84 return coeff_obj, try_file + ext. UnboundLocalError: local variable 'e' referenced before assignment. Version details.; QuTiP Version: 4.5.0; Numpy Version: 1.18.1; Scipy Version: 1.3.1; Cython Version: 0.29.15; Matplotlib Version: 3.1.3; Python Version: 3.8.1; Number of CPUs: 4; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Darwin (x86_64); Installation path: /opt/anaconda3/envs/qutip-env/lib/python3.8/site-packages/qutip",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1196:2454,Install,Installed,2454,https://qutip.org,https://github.com/qutip/qutip/issues/1196,2,['Install'],"['Installation', 'Installed']"
Deployability,"actually, I had installed the 4.4.1 firstly, but it had always a similar problem. have you had other advice?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1079#issuecomment-527691554:16,install,installed,16,https://qutip.org,https://github.com/qutip/qutip/issues/1079#issuecomment-527691554,1,['install'],['installed']
Deployability,"ad of it's own. When then using `update` (without calling `start` manually again) there will be an `AttributeError` because `width` is not getting initialized by `__init__`. ### Code to Reproduce the Bug. ```shell; from qutip.ui.progressbar import *. n = 10; a = EnhancedTextProgressBar(n); # a.start(n); for i in range(n):; a.update(i); a.finished(); ```. ### Code Output. ```shell; Traceback (most recent call last):; File ""C:\Users\Name\Desktop\qutip_bug.py"", line 6, in <module>; a.update(i); File ""C:\Users\Name\AppData\Local\Programs\Python\Python311\Lib\site-packages\qutip\ui\progressbar.py"", line 96, in update; all_full = self.width - 2; ^^^^^^^^^^; AttributeError: 'EnhancedTextProgressBar' object has no attribute 'width'; ```. ### Expected Behaviour. Proper initialization of the `width` attribute by `EnhancedTextProgressBar.__init__`. ### Your Environment. ```shell; QuTiP Version: 4.7.1; Numpy Version: 1.24.2; Scipy Version: 1.10.1; Cython Version: 0.29.33; Matplotlib Version: 3.7.1; Python Version: 3.11.0; Number of CPUs: 8; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Windows (AMD64); ```. ### Additional Context. Currently in master the `__init__` for both `TextProgressBar` and `EnhancedTextProgressBar` have been commented out and made to just pass. See https://github.com/qutip/qutip/blob/af49884aa1db47a980626ac00adfe83277d8d261/qutip/ui/progressbar.py#L66 and https://github.com/qutip/qutip/blob/af49884aa1db47a980626ac00adfe83277d8d261/qutip/ui/progressbar.py#L94. I would suggest making them both call their own `start` method to omit an additional call of start by the user right after initialization. This would also make both classes be in line with the usage suggested by the docstring of `BaseProgressBar.` Otherwise I would suggest to include the call to start in said docstring. As I'm pretty new to github and git in general I would like to try and create a PR myself once you give me approval for the suggested change here.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2148:1225,Install,Installed,1225,https://qutip.org,https://github.com/qutip/qutip/issues/2148,1,['Install'],['Installed']
Deployability,additional arguments added to load_parameters so that a general object attributes can be loaded from a configuration file. For a example a custom fidelity computer,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/403:103,configurat,configuration,103,https://qutip.org,https://github.com/qutip/qutip/pull/403,1,['configurat'],['configuration']
Deployability,"ages/pep517/in_process/_in_process.py"", line 363, in <module>; main(); File ""/usr/lib/python3/dist-packages/pep517/in_process/_in_process.py"", line 345, in main; json_out['return_val'] = hook(**hook_input['kwargs']); File ""/usr/lib/python3/dist-packages/pep517/in_process/_in_process.py"", line 261, in build_wheel; return _build_backend().build_wheel(wheel_directory, config_settings,; File ""/usr/lib/python3/dist-packages/setuptools/build_meta.py"", line 230, in build_wheel; return self._build_with_temp_dir(['bdist_wheel'], '.whl',; File ""/usr/lib/python3/dist-packages/setuptools/build_meta.py"", line 211, in _build_with_temp_dir; sys.argv = (sys.argv[:1] + setup_command +; TypeError: can only concatenate list (not ""str"") to list. ERROR Backend subproccess exited when trying to invoke build_wheel; ```. The other method; ```; --config-setting=""--build-option=--with-openmp""; ```; appears to work in the sense that it builds successfully. But after installing the package it reports that openmp is still missing; ```; $ python3 -c ""import qutip; qutip.about()"". QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman and Simon Cross.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.7.0; Numpy Version: 1.21.5; Scipy Version: 1.8.1; Cython Version: 0.29.30; Matplotlib Version: 3.5.2; Python Version: 3.10.6; Number of CPUs: 8; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /usr/lib/python3/dist-packages/qutip; ====================================================================",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1875#issuecomment-1219841152:1297,install,installing,1297,https://qutip.org,https://github.com/qutip/qutip/issues/1875#issuecomment-1219841152,1,['install'],['installing']
Deployability,"ahh this is the link I referred to, looks like there is not a lot of content on this. I will try and update the code with fixes they have recommended but I think this issue is still ongoing with matplotlib",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2442#issuecomment-2143466419:101,update,update,101,https://qutip.org,https://github.com/qutip/qutip/pull/2442#issuecomment-2143466419,1,['update'],['update']
Deployability,"ails>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/psf/requests/releases"">requests's releases</a>.</em></p>; <blockquote>; <h2>v2.31.0</h2>; <h2>2.31.0 (2023-05-22)</h2>; <p><strong>Security</strong></p>; <ul>; <li>; <p>Versions of Requests between v2.3.0 and v2.30.0 are vulnerable to potential; forwarding of <code>Proxy-Authorization</code> headers to destination servers when; following HTTPS redirects.</p>; <p>When proxies are defined with user info (<a href=""https://user:pass@proxy:8080"">https://user:pass@proxy:8080</a>), Requests; will construct a <code>Proxy-Authorization</code> header that is attached to the request to; authenticate with the proxy.</p>; <p>In cases where Requests receives a redirect response, it previously reattached; the <code>Proxy-Authorization</code> header incorrectly, resulting in the value being; sent through the tunneled connection to the destination server. Users who rely on; defining their proxy credentials in the URL are <em>strongly</em> encouraged to upgrade; to Requests 2.31.0+ to prevent unintentional leakage and rotate their proxy; credentials once the change has been fully deployed.</p>; <p>Users who do not use a proxy or do not supply their proxy credentials through; the user information portion of their proxy URL are not subject to this; vulnerability.</p>; <p>Full details can be read in our <a href=""https://github.com/psf/requests/security/advisories/GHSA-j8r2-6x86-q33q"">Github Security Advisory</a>; and <a href=""https://nvd.nist.gov/vuln/detail/CVE-2023-32681"">CVE-2023-32681</a>.</p>; </li>; </ul>; <h2>v2.30.0</h2>; <h2>2.30.0 (2023-05-03)</h2>; <p><strong>Dependencies</strong></p>; <ul>; <li>; <p>⚠️ Added support for urllib3 2.0. ⚠️</p>; <p>This may contain minor breaking changes so we advise careful testing and; reviewing <a href=""https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html"">https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html</a>; prior to upgrading.<",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2164:1117,upgrade,upgrade,1117,https://qutip.org,https://github.com/qutip/qutip/pull/2164,1,['upgrade'],['upgrade']
Deployability,"alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warn",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:6048,Release,Release,6048,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs1488",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:6599,Release,Release,6599,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warn",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:11885,Release,Release,11885,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs1488",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:12352,Release,Release,12352,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warn",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:17889,Release,Release,17889,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs1488",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:18270,Release,Release,18270,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warn",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:23893,Release,Release,23893,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs1488",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:24188,Release,Release,24188,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"am(); H = w * (np.cos(theta) * sz + np.sin(theta) * sx); # collapse operators; c_op_list = []; n_th = 0.5 # temperature; rate = gamma1 * (n_th + 1); if rate > 0.0: c_op_list.append(np.sqrt(rate) * sm); rate = gamma1 * n_th; if rate > 0.0: c_op_list.append(np.sqrt(rate) * sm.dag()); rate = gamma2; if rate > 0.0: c_op_list.append(np.sqrt(rate) * sz); # evolve and calculate expectation values; output = qutip.mesolve(H, psi0, tlist, c_op_list, [sx, sy, sz]); return output.expect[0], output.expect[1], output.expect[2]. ## calculate the dynamics; w = 1.0 * 2 * np.pi # qubit angular frequency; theta = 0.2 * np.pi # qubit angle from sigma_z axis (toward sigma_x axis); gamma1 = 0.5 # qubit relaxation rate; gamma2 = 0.2 # qubit dephasing rate; # initial state; a = 1.0; psi0 = (a*qutip.basis(2, 0) + (1-a)*qutip.basis(2, 1))/np.sqrt(a**2 + (1-a)**2); tlist = np.linspace(0, 4, 250); #expectation values for ploting; sx, sy, sz = qubit_integrate(w, theta, gamma1, gamma2, psi0, tlist). fig = pyplot.figure(); ax = Axes3D(fig, azim=-40, elev=30); sphere = qutip.Bloch(axes=ax). def animate(i):; sphere.clear(); sphere.add_vectors([np.sin(theta), 0, np.cos(theta)]); sphere.add_points([sx[:i+1], sy[:i+1], sz[:i+1]]); sphere.make_sphere(); return ax. def init():; sphere.vector_color = ['r']; return ax. ani = animation.FuncAnimation(fig, animate, np.arange(len(sx)),; init_func=init, blit=False, repeat=False); ani.save('bloch_sphere.mp4', fps=20); ```. ### Code Output. _No response_. ### Expected Behaviour. An animated Bloch sphere similar to the animation on the user guide [here](https://raw.githubusercontent.com/qutip/qutip/master/doc/figures/bloch_decay.mp4). ### Your Environment. ```shell; QuTiP Version: 4.7.1; Numpy Version: 1.23.5; Scipy Version: 1.10.1; Cython Version: None; Matplotlib Version: 3.7.1; Python Version: 3.11.2; Number of CPUs: 12; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Linux (x86_64); ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2156:3401,Install,Installed,3401,https://qutip.org,https://github.com/qutip/qutip/issues/2156,1,['Install'],['Installed']
Deployability,"amd64-2.7\Release\pyrex\rhs14880.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: too many arg",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:3739,Release,Release,3739,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: unknown conver",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:5253,Release,Release,5253,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: too man",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:5389,Release,Release,5389,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"amd64-2.7\Release\pyrex\rhs14881.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: too many arg",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:9492,Release,Release,9492,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: unknown conver",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:11006,Release,Release,11006,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: too man",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:11142,Release,Release,11142,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"amd64-2.7\Release\pyrex\rhs14882.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: too many arg",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:15410,Release,Release,15410,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: unknown conver",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:16924,Release,Release,16924,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: too man",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:17060,Release,Release,17060,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"amd64-2.7\Release\pyrex\rhs14883.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: too many arg",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:21328,Release,Release,21328,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: unknown conver",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:22842,Release,Release,22842,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: too man",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:22978,Release,Release,22978,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"amiltonian aren't mutable; the preprocessing of `mesolve` means that none of those objects will exist inside the integrator loop. That's fine for this use-case, but it's not very general. These problems of mutability would apply to callback functions as well. A different way of using `yield` or callback function would be to really lean into a co-routine sort of pattern. So `mesolve` internally would look like; ```python; def mesolve(H, state, times, c_ops, e_ops, options):; # [... set up problem ...]; integrator = scipy.integrate.ode(...); for time in times[1:]:; state = integrator.step_to(time); instructions = yield _mesolve_output_state(state, time, e_ops); integrator = _mesolve_process_instructions(instructions, integrator); ```; and a call to `mesolve` would be like; ```python; solver = mesolve(H, rho0, times, c_ops); try:; result = next(solver); while True:; next_control = krotov.get_next_control(result.time, result.state); result = solver.send([; ('update-arguments', {'control': next_control}),; ('update-hamiltonian', ...),; ('add-c_op', ...),; # possible examples of API commands; ]); except StopIteration:; pass; ```; That's not super user friendly, but it _is_ nicely re-entrant. You'd have a single object you can copy and branch off, and QuTiP would be able to update the relevant objects for you at any given time. Still, I don't think it's a good strategy in general - we'd have to _very_ rigorously define the ""instructions"" API, and it would be pretty awkward to use. It would also be a nuisance for extensibility, probably; the intermediate state and instructions of `mesolve` would just more APIs we have to maintain and keep constant. Note that you can achieve the exact same thing with a callback function pattern here, except that control would never really pass back to the caller, so it would be impossible to (for example) branch execution part way through. The new, modular system we want to put into QuTiP 5 is an attempt to get the best of all these worlds. ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-859907481:2292,update,update-arguments,2292,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-859907481,2,['update'],"['update-arguments', 'update-hamiltonian']"
Deployability,"an_2ls or testMEDecayAsStrList or test_array_str or test_qobjevo or test_04 or test_06_4_compare_state_and_unitary_list_str or testPropHOStrTd']])"". QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman, Simon Cross and Asier Galicia.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.7.3; Numpy Version: 1.24.2; Scipy Version: 1.10.1; Cython Version: 0.29.36; Matplotlib Version: 3.6.3; Python Version: 3.12.1; Number of CPUs: 8; BLAS Info: OPENBLAS; OPENMP Installed: True; INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /usr/lib/python3/dist-packages/qutip; ================================================================================; Please cite QuTiP in your publication.; ================================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; ================================================================================================================================== test session starts ===================================================================================================================================; platform linux -- Python 3.12.1, pytest-7.4.4, pluggy-1.3.0 -- /usr/bin/python3.12; cachedir: .pytest_cache; hypothesis profile 'default' -> database=DirectoryBasedExampleDatabase(PosixPath('/home/drew/projects/misc/build/.hypothesis/examples')); rootdir: /home/drew/projects/misc/build/qutip; plugins: remotedata-0.4.1, asyncio-0.20.3, filter-subpackage-0.1.2, doctestplus-1.1.0, flaky-3.7.0, arra",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2293:3919,Install,Installed,3919,https://qutip.org,https://github.com/qutip/qutip/issues/2293,2,['Install'],"['Installation', 'Installed']"
Deployability,"and I would value input from everyone involved in this review process (@sahmed95 , @kafischer, @nonhermitian, @ajgpitch). I've outlined my thoughts on the pros and cons of this change below. **Pros:**; - Consolidating these functions to class methods would be convenient in terms of reducing verbosity, since you would have to specify fewer arguments when calling these functions; - This would allow for a small performance increase, since maintaining a class-wide Evolver would mean that propagators would be precomputed for later simulations. However, this performance increase would be small and would be nearly un-noticeable for simulating N>3 scattered photons, since N=2 fully computes all propagators U[t1, t2]; - This could allow for additional helper functions to be added without cluttering up the exported top-level functions. Examples could include a `temporal_basis` function which could enumerate all `temporal_basis_vector`s for a given configuration of waveguides and list of times, or a `to_ndarray` function which could create an n-dimensional numpy array containing the projections of the computed scattered state onto appropriate basis vectors. **Cons:**; - Making this a class seems to be at odds with the general style that QuTiP is coded in. In physics-related modules which users regularly interact with, QuTiP seems to reserve classes exclusively for physical things, like states and operators, instead using functions to represent physics calculations which can be done with these objects. (Or, if you like, ""classes are nouns, functions are verbs"".) There are 25 keyword occurrences of ""class"" in the top-level qutip directory and subdirectories thereof:; - 21 are not physics-related:; - 6 are related to plotting or visualization utilities ; - 6 are `Distribution` classes or subclasses, which seem to be only used for visualization; - 6 are related to solver options or results; - 3 are low-level classes that users typically wouldn't interact with; - This leaves only 4 ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/848#issuecomment-384821368:3338,configurat,configuration,3338,https://qutip.org,https://github.com/qutip/qutip/pull/848#issuecomment-384821368,1,['configurat'],['configuration']
Deployability,"and `dW_factors` are properties of the classes, but not available to overwrite through the function interface. ; - The multiples end condition (`target_tol`, `timeout`) are added.; - The `solver` keyword is now `method` options, as it is in other solver.; - The method that was referring the homodyne or heterodyne detection is now the `heterodyne` keyword. ie before `method=""heterodyne""` now `heterodyne=True`.; - The default integration method is now `rouchon`, instead of `taylor1.5`. ie the method coming from a physic paper and not a mathematics textbook. . - The stochastic integration methods have been spitted in smaller chunk instead of the huge classes in _stochastic.pyx. I kept most methods, only skipping the taylor order 2.0 method. The python interface is kept very similar to the `Integrator` as `SIntegrator`, the main difference being that `set_state` and `get_state` use an extra random number generator with the time and state. The integration methods are usually 5%~10% slower than they where for medium size problems (shape ~100). Most method are computed the same way as before, but the rouchon method no longer use super operator, but keep the density matrix as a matrix and not an oper-ket. - The derivative computation for used by the integration method has also been split into multiple functions and made only available for `smesolve`. For there methods to be valid, the each diffusion contribution must commute. For `smesolve`, this means that each `sc_ops` must commute, as documented. For `ssesolve`, each `sc_ops` must not only commute, but also commute with other `sc_ops`'s adjoint, this last part being missing from v4's documentation. It also meant that the sc_ops needed to commute with it's own adjoint when using heterodyne detection... - `ssepdpsolve`, `smepdpsolve`, `photocurrent_mesolve`, `photocurrent_sesolve` removed. They are all less efficient variants of `mcsolve`. `mcsolve` already include the photocurrent in the output. - `general_stochastic`, rem",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2131:1283,integrat,integration,1283,https://qutip.org,https://github.com/qutip/qutip/pull/2131,1,['integrat'],['integration']
Deployability,"and compatible with previous syntax. **Description**; Operating System: MacOS Big Sur 11.0.1; CPU: Apple M1. The syntax of output of command ; ```; sysctl -n machdep.cpu.brand_string; ``` ; has been changed. The output for previous MacOS: ; ```; $ sysctl -n machdep.cpu.brand_string; Intel(R) Core(TM) i5-5257U CPU @ 2.70GHz\n; ```. The updated output; ```; $ sysctl -n machdep.cpu.brand_string; VirtualApple @ 2.50GHz processor\n; ```. Therefore, the function [`_mac_hardware_info`](https://github.com/qutip/qutip/blob/cb201690a2ca3a9c904bc642ef6600f2ef54f763/qutip/hardware_info.py#L48) of file `hardware_info.py` cannot parse the frequency of CPU correctly. The popped error information is attached below. ```; ValueError: could not convert string to float: ' 2.50GHz proces'; ```. This pull request fix this problem and compatible with both syntax of hardware information. . Since the unit tests of file or function are not found, I do not add test files for this change. I attach python code below to prove the correctness of the implementation. ```python; # before change; old_str = 'Intel(R) Core(TM) i5-5257U CPU @ 2.70GHz\n'; new_str = 'VirtualApple @ 2.50GHz processor\n'; # parse old hardware message; int(float(old_str.split('@')[1].split(' ')[1].replace('GHz', ''))*1000); # parse new hardware message; int(float(new_str.split('@')[1].split(' ')[1].replace('GHz', ''))*1000); ```. **Related issues or PRs**; No related issue. **Changelog**; Fixed error parsing hardware information for MacOS Big Sur (Apple M1 chip)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1401:337,update,updated,337,https://qutip.org,https://github.com/qutip/qutip/pull/1401,1,['update'],['updated']
Deployability,"anvas.print_figure(bytes_io, **kw); 129 data = bytes_io.getvalue(); 130 if fmt == 'svg':. /miniconda3/lib/python3.7/site-packages/matplotlib/backend_bases.py in print_figure(self, filename, dpi, facecolor, edgecolor, orientation, format, bbox_inches, **kwargs); 2054 orientation=orientation,; 2055 dryrun=True,; -> 2056 **kwargs); 2057 renderer = self.figure._cachedRenderer; 2058 bbox_artists = kwargs.pop(""bbox_extra_artists"", None). /miniconda3/lib/python3.7/site-packages/matplotlib/backends/backend_agg.py in print_png(self, filename_or_obj, metadata, pil_kwargs, *args, **kwargs); 525 ; 526 else:; --> 527 FigureCanvasAgg.draw(self); 528 renderer = self.get_renderer(); 529 with cbook._setattr_cm(renderer, dpi=self.figure.dpi), \. /miniconda3/lib/python3.7/site-packages/matplotlib/backends/backend_agg.py in draw(self); 386 self.renderer = self.get_renderer(cleared=True); 387 with RendererAgg.lock:; --> 388 self.figure.draw(self.renderer); 389 # A GUI class may be need to update a window using this draw, so; 390 # don't forget to call the superclass. /miniconda3/lib/python3.7/site-packages/matplotlib/artist.py in draw_wrapper(artist, renderer, *args, **kwargs); 36 renderer.start_filter(); 37 ; ---> 38 return draw(artist, renderer, *args, **kwargs); 39 finally:; 40 if artist.get_agg_filter() is not None:. /miniconda3/lib/python3.7/site-packages/matplotlib/figure.py in draw(self, renderer); 1707 self.patch.draw(renderer); 1708 mimage._draw_list_compositing_images(; -> 1709 renderer, self, artists, self.suppressComposite); 1710 ; 1711 renderer.close_group('figure'). /miniconda3/lib/python3.7/site-packages/matplotlib/image.py in _draw_list_compositing_images(renderer, parent, artists, suppress_composite); 133 if not_composite or not has_images:; 134 for a in artists:; --> 135 a.draw(renderer); 136 else:; 137 # Composite any adjacent images together. /miniconda3/lib/python3.7/site-packages/matplotlib/artist.py in draw_wrapper(artist, renderer, *args, **kwargs); 36 renderer.st",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1027:2127,update,update,2127,https://qutip.org,https://github.com/qutip/qutip/issues/1027,1,['update'],['update']
Deployability,any answer/update?; Thanks,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1799#issuecomment-1035841538:11,update,update,11,https://qutip.org,https://github.com/qutip/qutip/issues/1799#issuecomment-1035841538,1,['update'],['update']
Deployability,applying qutip/qutip#668 to this release branch,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/669:33,release,release,33,https://qutip.org,https://github.com/qutip/qutip/pull/669,1,['release'],['release']
Deployability,arch arm64; ; creating build/temp.macosx-11.0-arm64-3.9/numpy/core/src/multiarray; creating build/temp.macosx-11.0-arm64-3.9/numpy/core/src/umath; creating build/temp.macosx-11.0-arm64-3.9/build/src.macosx-11.0-arm64-3.9/numpy/core/src/umath; creating build/temp.macosx-11.0-arm64-3.9/build/src.macosx-11.0-arm64-3.9/numpy/core/src/common; creating build/temp.macosx-11.0-arm64-3.9/private; creating build/temp.macosx-11.0-arm64-3.9/private/var; creating build/temp.macosx-11.0-arm64-3.9/private/var/folders; creating build/temp.macosx-11.0-arm64-3.9/private/var/folders/kj; creating build/temp.macosx-11.0-arm64-3.9/private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn; creating build/temp.macosx-11.0-arm64-3.9/private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T; creating build/temp.macosx-11.0-arm64-3.9/private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-install-cp5z29tf; creating build/temp.macosx-11.0-arm64-3.9/private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-install-cp5z29tf/numpy_1458b1f38a5449d18aa77b5bb31c63d1; creating build/temp.macosx-11.0-arm64-3.9/private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-install-cp5z29tf/numpy_1458b1f38a5449d18aa77b5bb31c63d1/numpy; creating build/temp.macosx-11.0-arm64-3.9/private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-install-cp5z29tf/numpy_1458b1f38a5449d18aa77b5bb31c63d1/numpy/_build_utils; creating build/temp.macosx-11.0-arm64-3.9/private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-install-cp5z29tf/numpy_1458b1f38a5449d18aa77b5bb31c63d1/numpy/_build_utils/src; compile options: '-DNPY_INTERNAL_BUILD=1 -DHAVE_NPY_CONFIG_H=1 -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE=1 -D_LARGEFILE64_SOURCE=1 -DNO_ATLAS_INFO=3 -DHAVE_CBLAS -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/umath -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/npymath -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/common -Inumpy/core/include -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/include/numpy -Inumpy/core/sr,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:63347,install,install-,63347,https://qutip.org,https://github.com/qutip/qutip/issues/1740,1,['install'],['install-']
Deployability,"ase\pyrex\rhs14880.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:5655,Release,Release,5655,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"ase\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: wa",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:5793,Release,Release,5793,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"ase\pyrex\rhs14881.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:11492,Release,Release,11492,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"ase\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: wa",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:11630,Release,Release,11630,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"ase\pyrex\rhs14882.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:17496,Release,Release,17496,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"ase\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: wa",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:17634,Release,Release,17634,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"ase\pyrex\rhs14883.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:23500,Release,Release,23500,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"ase\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: wa",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:23638,Release,Release,23638,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"at]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: unknown c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:5640,Release,Release,5640,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"at]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: unknown c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:11393,Release,Release,11393,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"at]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: unknown c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:17311,Release,Release,17311,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"at]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: unknown c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:23229,Release,Release,23229,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"ata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/dist.py"", line 972, in run_command; > cmd_obj.run(); > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/Cython/Distutils/build_ext.py"", line 163, in run; > _build_ext.build_ext.run(self); > File ""/Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/command/build_ext.py"", line 337, in run; > self.build_extensions(); > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/Cython/Distutils/build_ext.py"", line 171, in build_extensions; > self.build_extension(ext); > File ""/Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/command/build_ext.py"", line 496, in build_extension; > depends=ext.depends); > File ""/Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/ccompiler.py"", line 574, in compile; > self._compile(obj, src, ext, cc_args, extra_postargs, pp_opts); > File ""/Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/unixccompiler.py"", line 122, in _compile; > raise CompileError, msg; > ImportError: Building module qutip.cy.spmatfuncs failed: [""CompileError: command 'gcc' failed with exit status 1\n""]; > import numpy as np; > ; > from qutip import *; > Traceback (most recent call last):; > File """", line 1, in ; > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/init.py"", line 62, in ; > qutip.settings.ipython = False; > AttributeError: 'module' object has no attribute 'settings'; > ; > ######################; > ; > This seems similar to the build error in Installation on OS X with Homebrew script error #348.; > ; > Is this a bug in qutip ? Is there a way to fix this?; > ; > —; > Reply to this email directly or view it on GitHub.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/382#issuecomment-148179436:5142,Install,Installation,5142,https://qutip.org,https://github.com/qutip/qutip/issues/382#issuecomment-148179436,1,['Install'],['Installation']
Deployability,"ates for the propagator; evals, evecs = la.eig(U.full()). eargs = angle(evals). # make sure that the phase is in the interval [-pi, pi], so that; # the quasi energy is in the interval [-pi/T, pi/T] where T is the; # period of the driving. eargs += (eargs <= -2*pi) * (2*pi) +; # (eargs > 0) * (-2*pi); eargs += (eargs <= -pi) * (2 * pi) + (eargs > pi) * (-2 * pi); e_quasi = -eargs / T. # sort by the quasi energy; if sort:; order = np.argsort(-e_quasi); else:; order = list(range(len(evals))). # prepare a list of kets for the floquet states; new_dims = [U.dims[0], [1] * len(U.dims[0])]; new_shape = [U.shape[0], 1]; kets_order = [Qobj(np.matrix(evecs[:, o]).T,; dims=new_dims, shape=new_shape) for o in order]. return kets_order, e_quasi[order]. # create periodically-driven Hamiltonian (with degenerate quasienergies); XI = tensor(sigmax(), qeye(2)); ZI = tensor(sigmaz(), qeye(2)); a = 2.404825557695773; H = [ ZI , [0.5 * a * 10 *XI, 'cos(10*t)']]. T = 2*np.pi/10. # compute Floquet modes with different integration accuracy. fq_modes0, fq_energy0 = floquet_modes(H, T); fq_modes1, fq_energy1 = floquet_modes_mod(H, T, options=Options(rtol=1e-12,atol=1e-13, nsteps=1e+8)); fq_modes2, fq_energy2 = floquet_modes_mod(H, T, options=Options(rtol=1e-14,atol=1e-14, nsteps=1e+8)). # print overlap between two modes ; print('\tfloquet_modes:', abs(fq_modes0[0].overlap(fq_modes0[2]))); print('\tfloquet_modes_mod1:', abs(fq_modes1[0].overlap(fq_modes1[2]))); print('\tfloquet_modes_mod2:', abs(fq_modes2[0].overlap(fq_modes2[2]))); ```. ### Code Output. ```shell; floquet_modes: 0.042385964453357024; floquet_modes_mod1: 0.11521649304536484; floquet_modes_mod2: 5.384787239183031e-24; ```. ### Expected Behaviour. I expected the Floquet modes to be orthogonal up to numerical precision. ### Your Environment. ```shell; QuTiP Version: 4.6.3; Numpy Version: 1.20.2; Scipy Version: 1.6.2; Cython Version: 0.29.21; Matplotlib Version: 3.3.2; Python Version: 3.8.5; Number of CPUs: 8; BLAS Info: OPENBLAS; O",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1864:3436,integrat,integration,3436,https://qutip.org,https://github.com/qutip/qutip/issues/1864,1,['integrat'],['integration']
Deployability,"ator representation. Perhaps @cgranade knows?; > ; > import scipy; > ; > from qutip.mesolve import _generic_ode_solve; > from qutip.superoperator import liouvillian, mat2vec; > from qutip.settings import debug; > ; > if debug:; > import inspect; > ; > def _mesolve_const_super(H, E0, tlist, c_op_list, e_ops, args, opt,; > progress_bar):; > """"""; > Evolve the super-operator `E0` using an ODE solver, for constant ; > Liouvillian; > """"""; > ; > ```; > if debug:; > print(inspect.stack()[0][3]); > ; > """"""; > #; > # check initial state; > #; > if isket(rho0):; > # if initial state is a ket and no collapse operator where given,; > # fall back on the unitary schrodinger equation solver; > if len(c_op_list) == 0 and isoper(H):; > return _sesolve_const(H, rho0, tlist, e_ops, args, opt,; > progress_bar); > ; > # Got a wave function as initial state: convert to density matrix.; > rho0 = ket2dm(rho0); > """"""; > ; > #; > # check initial value; > #; > if not E0.issuper:; > raise TypeError(""Argument 'E0' should be a super-operator""); > ; > #; > # construct liouvillian; > #; > if opt.tidy:; > H = H.tidyup(opt.atol); > ; > L = liouvillian(H, c_op_list); > ; > #; > # setup integrator; > #; > initial_vector = mat2vec(E0.full()).ravel(); > # r = scipy.integrate.ode(cy_ode_rhs); > r = scipy.integrate.ode(_rhs); > # r.set_f_params(L.data.data, L.data.indices, L.data.indptr); > # not sure why I need to transpose L here:; > r.set_f_params(scipy.transpose(L.data)); > r.set_integrator('zvode', method=opt.method, order=opt.order,; > atol=opt.atol, rtol=opt.rtol, nsteps=opt.nsteps,; > first_step=opt.first_step, min_step=opt.min_step,; > max_step=opt.max_step); > r.set_initial_value(initial_vector, tlist[0]); > ; > #; > # call generic ODE code; > #; > return _generic_ode_solve(r, E0, tlist, e_ops, opt, progress_bar); > ```; > ; > def _rhs(t,y,data):; > ym = y.reshape(data.shape); > return (data*ym).flatten(); > —; > Reply to this email directly or view it on GitHub.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/384#issuecomment-150751174:4068,integrat,integrator,4068,https://qutip.org,https://github.com/qutip/qutip/issues/384#issuecomment-150751174,3,['integrat'],"['integrate', 'integrator']"
Deployability,"automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); - `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language; - `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language; - `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language; - `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language. You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/qutip/qutip/network/alerts). </details>. **Changelog**. Update ipython used to build documentation.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1780:3592,upgrade,upgrade,3592,https://qutip.org,https://github.com/qutip/qutip/pull/1780,4,"['Update', 'upgrade']","['Update', 'upgrade']"
Deployability,"ay of using `yield` or callback function would be to really lean into a co-routine sort of pattern. So `mesolve` internally would look like; ```python; def mesolve(H, state, times, c_ops, e_ops, options):; # [... set up problem ...]; integrator = scipy.integrate.ode(...); for time in times[1:]:; state = integrator.step_to(time); instructions = yield _mesolve_output_state(state, time, e_ops); integrator = _mesolve_process_instructions(instructions, integrator); ```; and a call to `mesolve` would be like; ```python; solver = mesolve(H, rho0, times, c_ops); try:; result = next(solver); while True:; next_control = krotov.get_next_control(result.time, result.state); result = solver.send([; ('update-arguments', {'control': next_control}),; ('update-hamiltonian', ...),; ('add-c_op', ...),; # possible examples of API commands; ]); except StopIteration:; pass; ```; That's not super user friendly, but it _is_ nicely re-entrant. You'd have a single object you can copy and branch off, and QuTiP would be able to update the relevant objects for you at any given time. Still, I don't think it's a good strategy in general - we'd have to _very_ rigorously define the ""instructions"" API, and it would be pretty awkward to use. It would also be a nuisance for extensibility, probably; the intermediate state and instructions of `mesolve` would just more APIs we have to maintain and keep constant. Note that you can achieve the exact same thing with a callback function pattern here, except that control would never really pass back to the caller, so it would be impossible to (for example) branch execution part way through. The new, modular system we want to put into QuTiP 5 is an attempt to get the best of all these worlds. For users who don't need all this low-level behaviour, there'll still be the convenient `mesolve`, which just keeps working the same way it does now. For users (like you) who need more, we'll expose all the inner logic of the `mesolve` loop as separate components, so you'l",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-859907481:2611,update,update,2611,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-859907481,1,['update'],['update']
Deployability,b/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/cy/math.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/libc/math.pxd.; Compiling qutip/core/data/ptrace.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/cy/coefficient.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/add.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/project.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/dense.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/integrator/explicit_rk.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/dispatch.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/__init__.pxd.; Compiling qutip/core/data/expect.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/_brtensor.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/permute.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/matmul.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/trace.pyx because it depends on /tmp/pi,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2412:6577,integrat,integrator,6577,https://qutip.org,https://github.com/qutip/qutip/issues/2412,1,['integrat'],['integrator']
Deployability,"b47""><code>94a0cf1</code></a> Fix 6-byte OOB read in FliDecode</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/cece64f4be10ab28b12a83a3555af579dad343a5""><code>cece64f</code></a> Add 8.3.2 (2021-09-02) [CI skip]</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/e42238637651f191c2fc6e3f4024348c126e0ccc""><code>e422386</code></a> Add release notes for Pillow 8.3.2</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/08dcbb873217874eee0830fc5aaa1f231c5af4fa""><code>08dcbb8</code></a> Pillow 8.3.2 supports Python 3.10 [ci skip]</li>; <li>Additional commits viewable in <a href=""https://github.com/python-pillow/Pillow/compare/8.2.0...8.3.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=8.2.0&new-version=8.3.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1654:9118,update,updates,9118,https://qutip.org,https://github.com/qutip/qutip/pull/1654,1,['update'],['updates']
Deployability,"back (most recent call last):; File ""<string>"", line 1, in <module>; File ""/tmp/pip-build-hg437fn6/qutip/setup.py"", line 159, in <module>; configuration=configuration; File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/core.py"", line 135, in setup; config = configuration(); File ""/tmp/pip-build-hg437fn6/qutip/setup.py"", line 135, in configuration; config.add_subpackage('qutip'); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 1002, in add_subpackage; caller_level = 2); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 971, in get_subpackage; caller_level = caller_level + 1); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 908, in _get_configuration_from_setup_py; config = setup_module.configuration(*args); File ""qutip/setup.py"", line 8, in configuration; config.add_subpackage('cy'); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 1002, in add_subpackage; caller_level = 2); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 971, in get_subpackage; caller_level = caller_level + 1); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 883, in _get_configuration_from_setup_py; ('.py', 'U', 1)); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/imp.py"", line 234, in load_module; return load_source(name, filename, file); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/imp.py"", line 172, in load_source; module = _load(spec); File ""<frozen importlib._bootstrap>"", line 693, in _load; File ""<frozen importlib._bootstrap>"", line 673, in _load_unlocked; File ""<frozen importlib._bootstrap_external>"", line 662, i",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/426#issuecomment-183253786:1177,configurat,configuration,1177,https://qutip.org,https://github.com/qutip/qutip/issues/426#issuecomment-183253786,1,['configurat'],['configuration']
Deployability,"bcf65108c5a229cbe21a64a2ae""><code>747e1f6</code></a> Fixed PyPy SOABI parsing (<a href=""https://github-redirect.dependabot.com/pypa/wheel/issues/484"">#484</a>)</li>; <li><a href=""https://github.com/pypa/wheel/commit/76275484bc0de72d1f56601dbba3e816fc2f00c6""><code>7627548</code></a> [pre-commit.ci] pre-commit autoupdate (<a href=""https://github-redirect.dependabot.com/pypa/wheel/issues/480"">#480</a>)</li>; <li><a href=""https://github.com/pypa/wheel/commit/7b9e8e1022b9c850756ef34bc1a4a88042988a86""><code>7b9e8e1</code></a> Test on Python 3.11 final</li>; <li><a href=""https://github.com/pypa/wheel/commit/a04dfef41be0ab10eadbb2ed5d02b600682dc487""><code>a04dfef</code></a> Updated the pypi-publish action</li>; <li><a href=""https://github.com/pypa/wheel/commit/94bb62cb182023ac6586c5510ae9031ea56bd682""><code>94bb62c</code></a> Fixed docs not building due to code style changes</li>; <li><a href=""https://github.com/pypa/wheel/commit/d635664abe560d48723cfc3b73c52ad8c906760a""><code>d635664</code></a> Updated the codecov action to the latest version</li>; <li><a href=""https://github.com/pypa/wheel/commit/fcb94cd51f7dfd40d88dff37415750d9e3638d3b""><code>fcb94cd</code></a> Updated <strong>version</strong> to match the release</li>; <li>Additional commits viewable in <a href=""https://github.com/pypa/wheel/compare/0.37.0...0.38.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=wheel&package-manager=pip&previous-version=0.37.0&new-version=0.38.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2052:4515,Update,Updated,4515,https://qutip.org,https://github.com/qutip/qutip/pull/2052,1,['Update'],['Updated']
Deployability,"bld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_pw_8rhs14880_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VE",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:8314,Release,Release,8314,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"bld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_pw_8rhs14881_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:14151,Release,Release,14151,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"bld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_pw_8rhs14882_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:20155,Release,Release,20155,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"bld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_pw_8rhs14883_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > ok; > correlation: comparing TLS emission correlations (fn-list td format) ... ok; > correlation: comparing TLS emission correlations (fn td format) ... ok; > Counting statistics: current and current noise in a DQD model ... ok; > Dispersive cQED Setup: compare unitary matrix for ISWAP and propogator ... ok; > Dispersive cQED Setup: compare unitary matrix for ISWAP, SQRTISWAP, ... ok; > Diagonalization of random two-level system ... ok; > Diagonalization of composite systems ... ok; > Excitation-number-restricted state-space: full state space ... ok; > Excitation-number-restricted state space: single excitations ... ok; > Excitation-number-restricted state space: two excitations ... ok; > Excitation-number-rest",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:26159,Release,Release,26159,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"build all the wheels for CPython 3.6+ on Linux (`manylinux1` x86 and x86_64), macOS and Windows (32- and 64-bit). This action is triggered manually, and the wheels will be available for download afterwards. Optionally, the action will push to PyPI, making the version immediately available on `pip` by binary release.; - `.cpp` files are now distributed with the wheels but not added to source control. This is a step towards a full Cython-free delivery of the QuTiP source (binary releases never require Cython), but right now I think our `setuptools` machinery doesn't quite handle that. ### Changes to `setup.py`; - all package metadata is moved out into `setup.cfg`, which is easier to read and change, and modern `setuptools`' preferred way of doing things; - build requirements are moved into `pyproject.toml` including listing `setuptools` as the build method, in accordance with PEP 517. Any PEP 517-complaint installation and build process will now _enforce_ the presence of `numpy`, `scipy` and `cython` (and `setuptools`) before attempting the build, so no more need for attempted import guards.; - packages are now discovered rather than explicitly stated, using standard `setuptools` machinery; - Cython extension modules are now discovered rather than explicitly stated, using globbing; - version information is now stored in a single-line file `VERSION`. This is mostly for CI reasons; it's much easier to parse and override at the CI level when it's a single file, rather than attempting `sed s/.../.../ setup.py` or something crazy like that. The validity of the version string is tested by regex.; - local version information is now _always_ appended, even if `git` isn't present - the local version is just then ""nogit"" rather than the git shorthash; - `setup.py` gained a new `--release` flag or environment variable `CI_QUTIP_RELEASE`; the only effect right now is to suppress the local identifier on the version information, replacing the old `ISRELEASED` boolean flag in the cod",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1429:1772,install,installation,1772,https://qutip.org,https://github.com/qutip/qutip/pull/1429,1,['install'],['installation']
Deployability,"build dependencies: started; Installing build dependencies: finished with status 'done'; Getting requirements to build wheel: started; Getting requirements to build wheel: finished with status 'done'; Preparing metadata (pyproject.toml): started; Preparing metadata (pyproject.toml): finished with status 'done'; Collecting scipy>=1.0; Using cached scipy-1.7.3-1-cp39-cp39-macosx_12_0_arm64.whl (27.0 MB); Collecting pyparsing!=3.0.5,>=2.0.2; Using cached pyparsing-3.0.6-py3-none-any.whl (97 kB); Building wheels for collected packages: numpy; Building wheel for numpy (pyproject.toml): started; Building wheel for numpy (pyproject.toml): finished with status 'error'; ERROR: Command errored out with exit status 1:; command: /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/bin/python3.9 /var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/tmp8u8pmfcw_in_process.py build_wheel /var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/tmpcrdfx79e; cwd: /private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-install-cp5z29tf/numpy_1458b1f38a5449d18aa77b5bb31c63d1; Complete output (881 lines):; Running from numpy source directory.; numpy/random/_bounded_integers.pxd.in has not changed; numpy/random/_philox.pyx has not changed; numpy/random/_bounded_integers.pyx.in has not changed; numpy/random/_sfc64.pyx has not changed; numpy/random/_mt19937.pyx has not changed; numpy/random/bit_generator.pyx has not changed; Processing numpy/random/_bounded_integers.pyx; numpy/random/mtrand.pyx has not changed; numpy/random/_generator.pyx has not changed; numpy/random/_pcg64.pyx has not changed; numpy/random/_common.pyx has not changed; Cythonizing sources; blas_opt_info:; blas_mkl_info:; customize UnixCCompiler; libraries mkl_rt not found in ['/opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib', '/usr/local/lib', '/usr/lib']; NOT AVAILABLE; ; blis_info:; libraries blis not found in ['/opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib', '/usr/local/lib', '/usr/lib']; NOT AVAILABLE;",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:2706,install,install-,2706,https://qutip.org,https://github.com/qutip/qutip/issues/1740,1,['install'],['install-']
Deployability,"c 'import sys, setuptools, tokenize; sys.argv[0] = '""'""'/tmp/pip-install-69anjthq/qutip/setup.py'""'""'; __file__='""'""'/tmp/pip-install-69anjthq/qutip/setup.py'""'""';f=getattr(tokenize, '""'""'open'""'""', open)(__file__);code=f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' egg_info --egg-base /tmp/pip-install-69anjthq/qutip/pip-egg-info; cwd: /tmp/pip-install-69anjthq/qutip/; Complete output (5 lines):; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/tmp/pip-install-69anjthq/qutip/setup.py"", line 52, in <module>; from Cython.Build import cythonize; ModuleNotFoundError: No module named 'Cython'; ----------------------------------------; ERROR: Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output. ** Installing cython fixes it **. jevon@bb8:~$ pip3 install cython; Collecting cython; Downloading Cython-0.29.17-cp38-cp38-manylinux1_x86_64.whl (2.0 MB); |████████████████████████████████| 2.0 MB 721 kB/s ; Installing collected packages: cython; Successfully installed cython-0.29.17; jevon@bb8:~$ pip3 install qutip; Collecting qutip; Using cached qutip-4.5.0.tar.gz (3.5 MB); Requirement already satisfied: cython>=0.21 in ./.local/lib/python3.8/site-packages (from qutip) (0.29.17); Requirement already satisfied: numpy>=1.12 in ./.local/lib/python3.8/site-packages (from qutip) (1.18.3); Requirement already satisfied: scipy>=1.0 in ./.local/lib/python3.8/site-packages (from qutip) (1.4.1); Building wheels for collected packages: qutip; Building wheel for qutip (setup.py) ... done; Created wheel for qutip: filename=qutip-4.5.0-cp38-cp38-linux_x86_64.whl size=17905114 sha256=3f461cbc07b40c0de96b709ea20bca495c7ffe1b6060a533a1ab733107c161ab; Stored in directory: /home/jevon/.cache/pip/wheels/3a/4d/bf/1c8e9f7874f26a6510d78790d3ba518c98e674e5771110fe1e; Successfully built qutip; Installing collected packages: qutip; Successfully installed qutip-4.5.0",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1246:1520,Install,Installing,1520,https://qutip.org,https://github.com/qutip/qutip/issues/1246,5,"['Install', 'install']","['Installing', 'install', 'installed']"
Deployability,"c rhs function exposed to all that is a bit unnecessary and makes things more complicated than it needs to be. However, I think I found a reasonable compromise in that I created new _rhs_psi_deterministic and _rhs_rho_deterministic where the current deterministic contributions are calculated. These functions can now be called from a stochastic rhs implementation, like this. ```; dpsi_t = _rhs_psi_deterministic(H, psi_t, t, dt, args); ```. In this way the implementation of a stochastic rhs function is relatively isolated from how the deterministic part is calculated (which right now is trivial, but which could become more complex when time-dependent systems are implemented). However, it also gives all the flexibility needed in the rhs function, and these deterministic rhs functions do not need to be used if it is not suitable in a particular stochastic rhs implementation. . I've added the changes to the rhs behavior to the https://github.com/qutip/qutip/tree/sme-rhs-restructuring and updated the gist with the variant of your notebook. http://nbviewer.ipython.org/6153688. Note that a few other things, like the rhs function signature, had to change in the process. I hope that this updated API will be flexible enough to let you implement implicit solver. Regards rhs implementation and d1,d2 function: Yes, I understand that not all possible rhs schemes might be compatible with the parameterization with d1 and d2 functions, but when it is possible it has the great advantage that the user do not need to worry about how the rhs is implemented, only define the SDE in terms of d1 and d2, and then possibly select a rhs solver using the solver argument to smesolve. This will not work in general for solvers like the milstein scheme, since it requires an analytical derivative (unless it can be evaluated numerically?), and in those cases it would be sufficient to implement problem specific rhs functions (like rhs_rho_milstein_homodyne etc). Regarding the use of expm: OK, I agree t",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/35#issuecomment-22156426:1418,update,updated,1418,https://qutip.org,https://github.com/qutip/qutip/issues/35#issuecomment-22156426,1,['update'],['updated']
Deployability,"c5754346afaebe165ce8e6""><code>c1b3154</code></a> Merge pull request <a href=""https://redirect.github.com/kjd/idna/issues/172"">#172</a> from kjd/optimize-contextj</li>; <li><a href=""https://github.com/kjd/idna/commit/0394ec76ff022813e770ba1fd89658790ea35623""><code>0394ec7</code></a> Merge branch 'master' into optimize-contextj</li>; <li><a href=""https://github.com/kjd/idna/commit/cd58a23173d2b0a40b95ee680baf3e59e8d33966""><code>cd58a23</code></a> Merge pull request <a href=""https://redirect.github.com/kjd/idna/issues/152"">#152</a> from elliotwutingfeng/dev</li>; <li><a href=""https://github.com/kjd/idna/commit/5beb28b9dd77912c0dd656d8b0fdba3eb80222e7""><code>5beb28b</code></a> More efficient resolution of joiner contexts</li>; <li><a href=""https://github.com/kjd/idna/commit/1b121483ed04d9576a1291758f537e1318cddc8b""><code>1b12148</code></a> Update ossf/scorecard-action to v2.3.1</li>; <li><a href=""https://github.com/kjd/idna/commit/d516b874c3388047934938a500c7488d52c4e067""><code>d516b87</code></a> Update Github actions/checkout to v4</li>; <li><a href=""https://github.com/kjd/idna/commit/c095c75943413c75ebf8ac74179757031b7f80b7""><code>c095c75</code></a> Merge branch 'master' into dev</li>; <li><a href=""https://github.com/kjd/idna/commit/60a0a4cb61ec6834d74306bd8a1fa46daac94c98""><code>60a0a4c</code></a> Fix typo in GitHub Actions workflow key</li>; <li><a href=""https://github.com/kjd/idna/commit/5918a0ef8034379c2e409ae93ee11d24295bb201""><code>5918a0e</code></a> Merge branch 'master' into dev</li>; <li>Additional commits viewable in <a href=""https://github.com/kjd/idna/compare/v3.4...v3.7"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=idna&package-manager=pip&previous-version=3.4&new-version=3.7)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2392:3220,Update,Update,3220,https://qutip.org,https://github.com/qutip/qutip/pull/2392,1,['Update'],['Update']
Deployability,"c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:4661,Release,Release,4661,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:22506,Release,Release,22506,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:10498,Release,Release,10498,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:16502,Release,Release,16502,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,calc_omega comments updated,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/746:20,update,updated,20,https://qutip.org,https://github.com/qutip/qutip/pull/746,1,['update'],['updated']
Deployability,"can compute and plot the position wave function. . However, for relatively low Fock states the routine used by Qutip begins to fail. This makes it hard to plot e.g. the GKP position wavefunction which requires a lot of Fock states to converge. The bug starts to appear for Fock state n=43. Below I have only plotted n = 47 because that's the first time it becomes very noticeable. . The (crappy) code snippet I provided seems to fail around n = 151. . ### Code to Reproduce the Bug. ```shell; import numpy as np; import matplotlib.pyplot as plt; import qutip as qt; from qutip.distributions import HarmonicOscillatorWaveFunction; from numpy.polynomial.hermite import hermval; import math. def harmonic_oscillator_wavefunction(psi, xvecs, omega0=1.0):; n_coeff = []; for n in range(psi.shape[0]):; n_coeff.append(pow(omega0 / np.pi, 0.25) / \; np.sqrt(2.0 ** n * math.factorial(n)) ; * psi.data[n, 0]); return hermval(xvecs[0], n_coeff)* np.exp(-xvecs[0] ** 2 / 2.0). xmax = 12; steps = 3000; x = np.linspace(-xmax,xmax,num=steps). # choose a fock state; n = 47; state = qt.basis(n+1,n). wav_fn = HarmonicOscillatorWaveFunction(state, omega=1, extent=[-xmax,xmax], steps=steps); y_qutip = wav_fn.data; y_good = harmonic_oscillator_wavefunction(state,[x]). plt.plot(x,y_qutip,label=""qutip""); plt.plot(x,y_good,':',label=""homebrew fn""); plt.plot(x,y_qutip-y_good,label= ""qutip - homebrew""); plt.legend(); plt.title('Harmonic Oscillator Wave Function n = '+str(n)); plt.xlabel('position'); ```. ### Code Output. _No response_. ### Expected Behaviour. <img width=""627"" alt=""image"" src=""https://github.com/qutip/qutip/assets/2394563/3b3fa3eb-c08c-46ed-abf9-972d59283344"">. ### Your Environment. ```shell; QuTiP Version: 4.7.2; Numpy Version: 1.25.1; Scipy Version: 1.11.1; Cython Version: None; Matplotlib Version: 3.7.2; Python Version: 3.11.4; Number of CPUs: 8; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (arm64); ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2286:1961,Install,Installed,1961,https://qutip.org,https://github.com/qutip/qutip/issues/2286,1,['Install'],['Installed']
Deployability,"can only do so if the number of points is small. It seems that the issue is with nsteps. As you can see, I have made nsteps very large already and if I make it any larger I get an error. I've tried debugging this to the best of my abilities but I've hit a dead end and I just can't find any useful info on nsteps online. %matplotlib inline. import matplotlib.pyplot as plt; import numpy as np; import qutip as q; import cmath; import matplotlib as mpl; from mpl_toolkits.mplot3d import Axes3D. rc_dict = {; ""figure.subplot.bottom"": 0.11,; ""figure.subplot.hspace"": 0.2,; ""figure.subplot.left"": 0.125,; ""figure.subplot.right"": 0.9,; ""figure.subplot.top"": 0.88,; ""figure.subplot.wspace"": 0.2,; ""figure.figsize"":(10,10/1.61),; ""axes.grid"": True,; ""text.usetex"": True,; ""grid.linestyle"": "":"",; ""grid.color"": ""black"", #; ""legend.fontsize"": 20,; ""lines.linewidth"": 2.5,; ""axes.linewidth"": 1.5,; ""font.family"": [""serif""],; ""font.sans-serif"": ""Times New Roman Bold"",; ""font.size"":26,; }; plt.rcParams.update(rc_dict). qutip_options = q.Odeoptions(; store_states=True,; nsteps=2000000000000; ). si, sx, sy, sz=q.qeye(2), q.sigmax(), q.sigmay(), q.sigmaz(); sp, sm=q.sigmap(), q.sigmam(); state_z_plus=q.basis(2,0); state_z_minus=q.basis(2,1); state_x_plus=1.0/cmath.sqrt(2)* (q.basis(2,0) + q.basis(2,1)); state_x_minus=1.0/cmath.sqrt(2)* (q.basis(2,0) - q.basis(2,1)); state_y_plus=1.0/cmath.sqrt(2)* (q.basis(2,0) + 1j* q.basis(2,1)); state_y_minus=1.0/cmath.sqrt(2)* (q.basis(2,0) - 1j* q.basis(2,1)). h = 6.62607015e-34; b = 0.1786195317554453 ; b_AC = 3.572390635108906e-05 ; g = 2; u = 9.274E-24 ; w = g*u*b/h . gamma_phi = 442; gamma_minus = 1. epsilon = g*u*b/h*(2*cmath.pi); Delta = g*u*b_AC/h*(2*cmath.pi). H = epsilon/2 * sz . times=np.linspace(0, 0.001*cmath.pi/2, 5). state0=(state_x_plus)/(np.sqrt(1)). H/(2*cmath.pi). results=q.mesolve(H, state0, times, c_ops=[], e_ops=[sx, sy, sz], options=qutip_options). fig, ax=plt.subplots(); ax.plot(times, results.expect[0], label=r'$\langle \sigma_x \ra",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1376:1334,update,update,1334,https://qutip.org,https://github.com/qutip/qutip/issues/1376,1,['update'],['update']
Deployability,can't install qutip on my mac,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1404:6,install,install,6,https://qutip.org,https://github.com/qutip/qutip/issues/1404,1,['install'],['install']
Deployability,"cated NumPy API, disable it with #define NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; Creating library C:\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\pyrex\cqobjevo_compiled_coeff_130828459648281117.cp37-win_amd64.lib and object C:\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\pyrex\cqobjevo_compiled_coeff_130828459648281117.cp37-win_amd64.exp; Generating code; Finished generating code; cl : Command line warning D9025 : overriding '/W3' with '/w'; cl : Command line warning D9025 : overriding '/Ox' with '/O1'; cqobjevo_compiled_coeff_8398411180025011525.cpp; c:\anaconda\lib\site-packages\numpy\core\include\numpy\npy_1_7_deprecated_api.h(14) : Warning Msg: Using deprecated NumPy API, disable it with #define NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; Creating library C:\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\pyrex\cqobjevo_compiled_coeff_8398411180025011525.cp37-win_amd64.lib and object C:\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\pyrex\cqobjevo_compiled_coeff_8398411180025011525.cp37-win_amd64.exp; Generating code; Finished generating code; Process SpawnPoolWorker-671:; Process SpawnPoolWorker-669:; Traceback (most recent call last):; Traceback (most recent call last):; File ""C:\Anaconda\lib\multiprocessing\process.py"", line 297, in _bootstrap; self.run(); File ""C:\Anaconda\lib\multiprocessing\process.py"", line 297, in _bootstrap; self.run(); File ""C:\Anaconda\lib\multiprocessing\process.py"", line 99, in run; self._target(*self._args, **self._kwargs); File ""C:\Anaconda\lib\multiprocessing\process.py"", line 99, in run; self._target(*self._args, **self._kwargs); File ""C:\Anaconda\lib\multiprocessing\pool.py"", line 110, in worker; task = get(); File ""C:\Anaconda\lib\multiprocessing\pool.py"", line 110, in worker; task = get(); File ""C:\Anaconda\lib\multipro",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1084:1386,Release,Release,1386,https://qutip.org,https://github.com/qutip/qutip/issues/1084,1,['Release'],['Release']
Deployability,"change; >; > - c_ops = []; > - c_op_rates = []; > - for entry in c_ops_and_rates:; > - c_ops.append(entry[0]); > - c_op_rates.append(entry[1]); > + c_ops, c_op_rates = zip(*c_ops_and_rates); >; > or do the check here while you are looping over all elements.; > ⬇️ Suggested change; >; > - c_ops = []; > - c_op_rates = []; > - for entry in c_ops_and_rates:; > - c_ops.append(entry[0]); > - c_op_rates.append(entry[1]); > + c_ops = []; > + c_op_rates = []; > + for c_op, rate in c_ops_and_rates:; > + if not isinstance(c_op, Qobj):; > + raise TypeError(""c_ops must be type Qobj""); > + c_ops.append(c_op); > + c_op_rates.append(rate); >; > ------------------------------; >; > In qutip/solver/flimesolve.py; > <https://github.com/qutip/qutip/pull/2186#discussion_r1245642075>:; >; > > + The state must be initialized first by calling ``start`` or; > + ``run``. If ``run`` is called,``step`` will continue from the last; > + time and state obtained.; > + """"""; > + if args:; > + raise ValueError(; > + ""FMESolver cannot update arguments""); > + state = super().step(t); > + if not floquet:; > + state = self.floquet_basis.from_floquet_basis(; > + state, t); > + elif copy:; > + state = state.copy(); > + return state; > +; > + def run(self, state00, taulist, *, floquet=False, args=None, e_ops=None,):; >; > state00?; > ------------------------------; >; > In qutip/solver/flimesolve.py; > <https://github.com/qutip/qutip/pull/2186#discussion_r1245643705>:; >; > > + elif copy:; > + state = state.copy(); > + return state; > +; > + def run(self, state00, taulist, *, floquet=False, args=None, e_ops=None,):; > + """"""; > + Calculate the evolution of the quantum system.; > +; > + For a ``state0`` at time ``tlist[0]`` do the evolution as directed by; > + ``rhs`` and for each time in ``tlist`` store the state and/or; > + expectation values in a :class:`Result`. The evolution method and; > + stored results are determined by ``options``.; > +; > + Parameters; > + ----------; > + state0 : :class:`Qobj`; >; ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2186#issuecomment-1612045847:10765,update,update,10765,https://qutip.org,https://github.com/qutip/qutip/pull/2186#issuecomment-1612045847,2,['update'],['update']
Deployability,"ckages\qutip\mesolve.py in _qobjevo_set(HS, rho0, args, e_ops, opt); 349 # Should be caught earlier in mesolve.; 350 raise ValueError(""rho0 must be a ket, density matrix or superoperator""); --> 351 _test_liouvillian_dimensions(H_td.cte.dims, rho0.dims); 352 return func, (); 353 . c:\users\mizuno\research\py38\lib\site-packages\qutip\mesolve.py in _test_liouvillian_dimensions(L_dims, rho_dims); 330 raise ValueError(""Liouvillian had nonsquare dims: "" + str(L_dims)); 331 if not ((L_dims[1] == rho_dims) or (L_dims[1] == rho_dims[0])):; --> 332 raise ValueError("""".join([; 333 ""incompatible Liouvillian and state dimensions: "",; 334 str(L_dims), "" and "", str(rho_dims),. ValueError: incompatible Liouvillian and state dimensions: [[[2, 2], [2, 2]], [[2, 2], [2, 2]]] and [[4], [4]]; ```. My environment is following.; ```; QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman and Simon Cross.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.6.2; Numpy Version: 1.19.5; Scipy Version: 1.6.2; Cython Version: 0.29.22; Matplotlib Version: 3.4.1; Python Version: 3.8.9; Number of CPUs: 16; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Windows (AMD64); Installation path: c:\users\mizuno\research\py38\lib\site-packages\qutip; ================================================================================; Please cite QuTiP in your publication.; ================================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1585:3942,Install,Installed,3942,https://qutip.org,https://github.com/qutip/qutip/issues/1585,2,['Install'],"['Installation', 'Installed']"
Deployability,closes #1106 . Adds update_view method to change view variable. Thus abstracting from attribute naming. Also forces view update in render.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1216:121,update,update,121,https://qutip.org,https://github.com/qutip/qutip/pull/1216,1,['update'],['update']
Deployability,"clude\numpy\npy_1_7_deprecated_api.h(14) : Warning Msg: Using deprecated NumPy API, disable it with #define NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; Creating library C:\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\pyrex\cqobjevo_compiled_coeff_130828459648281117.cp37-win_amd64.lib and object C:\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\pyrex\cqobjevo_compiled_coeff_130828459648281117.cp37-win_amd64.exp; Generating code; Finished generating code; cl : Command line warning D9025 : overriding '/W3' with '/w'; cl : Command line warning D9025 : overriding '/Ox' with '/O1'; cqobjevo_compiled_coeff_8398411180025011525.cpp; c:\anaconda\lib\site-packages\numpy\core\include\numpy\npy_1_7_deprecated_api.h(14) : Warning Msg: Using deprecated NumPy API, disable it with #define NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; Creating library C:\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\pyrex\cqobjevo_compiled_coeff_8398411180025011525.cp37-win_amd64.lib and object C:\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\pyrex\cqobjevo_compiled_coeff_8398411180025011525.cp37-win_amd64.exp; Generating code; Finished generating code; Process SpawnPoolWorker-671:; Process SpawnPoolWorker-669:; Traceback (most recent call last):; Traceback (most recent call last):; File ""C:\Anaconda\lib\multiprocessing\process.py"", line 297, in _bootstrap; self.run(); File ""C:\Anaconda\lib\multiprocessing\process.py"", line 297, in _bootstrap; self.run(); File ""C:\Anaconda\lib\multiprocessing\process.py"", line 99, in run; self._target(*self._args, **self._kwargs); File ""C:\Anaconda\lib\multiprocessing\process.py"", line 99, in run; self._target(*self._args, **self._kwargs); File ""C:\Anaconda\lib\multiprocessing\pool.py"", line 110, in worker; task = get(); File ""C:\Anaconda\lib\multiprocessing\pool.py"",",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1084:1337,Release,Release,1337,https://qutip.org,https://github.com/qutip/qutip/issues/1084,1,['Release'],['Release']
Deployability,"com/badges/compatibility_score?dependency-name=idna&package-manager=pip&previous-version=3.4&new-version=3.7)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/qutip/qutip/network/alerts). </details>",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2392:5424,upgrade,upgrade,5424,https://qutip.org,https://github.com/qutip/qutip/pull/2392,3,['upgrade'],['upgrade']
Deployability,"com/python-pillow/Pillow/issues/7882"">#7882</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Added reading of JPEG2000 palettes <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7870"">#7870</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Added alpha_quality argument when saving WebP images <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7872"">#7872</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fixed joined corners for ImageDraw rounded_rectangle() non-integer dimensions <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7881"">#7881</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Removed Python and NumPy pinning on Cygwin <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7880"">#7880</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Update UnidentifiedImageError and <strong>version</strong> imports <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7644"">#7644</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Stop reading EPS image at EOF marker <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7753"">#7753</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>PSD layer co-ordinates may be negative <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7706"">#7706</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Use subprocess with CREATE_NO_WINDOW flag in ImageShow WindowsViewer <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7791"">#7791</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>When saving GIF frame that restores to background color, do not fill identical pixels <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7788"">#7788<",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2381:4687,Update,Update,4687,https://qutip.org,https://github.com/qutip/qutip/pull/2381,1,['Update'],['Update']
Deployability,"compatibility_score?dependency-name=urllib3&package-manager=pip&previous-version=1.26.14&new-version=1.26.17)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/qutip/qutip/network/alerts). </details>",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2236:6532,upgrade,upgrade,6532,https://qutip.org,https://github.com/qutip/qutip/pull/2236,3,['upgrade'],['upgrade']
Deployability,"compatibility_score?dependency-name=urllib3&package-manager=pip&previous-version=1.26.17&new-version=1.26.18)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/qutip/qutip/network/alerts). </details>",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2246:3185,upgrade,upgrade,3185,https://qutip.org,https://github.com/qutip/qutip/pull/2246,3,['upgrade'],['upgrade']
Deployability,"compatibility_score?dependency-name=urllib3&package-manager=pip&previous-version=1.26.18&new-version=1.26.19)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/qutip/qutip/network/alerts). </details>",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2458:5321,upgrade,upgrade,5321,https://qutip.org,https://github.com/qutip/qutip/pull/2458,3,['upgrade'],['upgrade']
Deployability,"cript headers (<a href=""https://redirect.github.com/pygments/pygments/issues/2348"">#2348</a>, <a href=""https://redirect.github.com/pygments/pygments/issues/2349"">#2349</a>)</p>; </li>; <li>; <p>Spice: Update keywords (<a href=""https://redirect.github.com/pygments/pygments/issues/2336"">#2336</a>)</p>; </li>; <li>; <p>SQL+Jinja (<code>analyse_text</code> method): Fix catastrophic backtracking (<a href=""https://redirect.github.com/pygments/pygments/issues/2355"">#2355</a>)</p>; </li>; <li>; <p>Terraform: Add <code>hcl</code> alias (<a href=""https://redirect.github.com/pygments/pygments/issues/2375"">#2375</a>)</p>; </li>; </ul>; </li>; <li>; <p>Declare support for Python 3.11 and drop support for Python 3.6 (<a href=""https://redirect.github.com/pygments/pygments/issues/2324"">#2324</a>).</p>; </li>; <li>; <p>Update <code>native</code> style to improve contrast (<a href=""https://redirect.github.com/pygments/pygments/issues/2325"">#2325</a>).</p>; </li>; <li>; <p>Update `github-dark`` style to match latest Primer style (<a href=""https://redirect.github.com/pygments/pygments/issues/2401"">#2401</a>)</p>; </li>; <li>; <p>Revert a change that made guessing lexers based on file names slower; on Python 3.10 and older (<a href=""https://redirect.github.com/pygments/pygments/issues/2328"">#2328</a>).</p>; </li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/pygments/pygments/commit/6c187ad83267be9ce142af3fd5c9e670339dc7aa""><code>6c187ad</code></a> Prepare 2.15 release.</li>; <li><a href=""https://github.com/pygments/pygments/commit/00b9cb022cc9c05784c43c11bd7f73e64008b347""><code>00b9cb0</code></a> Prepare for release.</li>; <li><a href=""https://github.com/pygments/pygments/commit/a0824a45f0bd6c45528fa16132f09dd3570a8234""><code>a0824a4</code></a> Update CHANGES</li>; <li><a href=""https://github.com/pygments/pygments/commit/26f9f6c852846fe579c37fe936a872b68fa686ba""><code>26",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2201:11415,Update,Update,11415,https://qutip.org,https://github.com/qutip/qutip/pull/2201,1,['Update'],['Update']
Deployability,"cript headers (<a href=""https://redirect.github.com/pygments/pygments/issues/2348"">#2348</a>, <a href=""https://redirect.github.com/pygments/pygments/issues/2349"">#2349</a>)</p>; </li>; <li>; <p>Spice: Update keywords (<a href=""https://redirect.github.com/pygments/pygments/issues/2336"">#2336</a>)</p>; </li>; <li>; <p>SQL+Jinja (<code>analyse_text</code> method): Fix catastrophic backtracking (<a href=""https://redirect.github.com/pygments/pygments/issues/2355"">#2355</a>)</p>; </li>; <li>; <p>Terraform: Add <code>hcl</code> alias (<a href=""https://redirect.github.com/pygments/pygments/issues/2375"">#2375</a>)</p>; </li>; </ul>; </li>; <li>; <p>Declare support for Python 3.11 and drop support for Python 3.6 (<a href=""https://redirect.github.com/pygments/pygments/issues/2324"">#2324</a>).</p>; </li>; <li>; <p>Update <code>native</code> style to improve contrast (<a href=""https://redirect.github.com/pygments/pygments/issues/2325"">#2325</a>).</p>; </li>; <li>; <p>Update `github-dark`` style to match latest Primer style (<a href=""https://redirect.github.com/pygments/pygments/issues/2401"">#2401</a>)</p>; </li>; <li>; <p>Revert a change that made guessing lexers based on file names slower; on Python 3.10 and older (<a href=""https://redirect.github.com/pygments/pygments/issues/2328"">#2328</a>).</p>; </li>; <li>; <p>Fix some places where a locale-dependent encoding could unintentionally; be used instead of UTF-8 (<a href=""https://redirect.github.com/pygments/pygments/issues/2326"">#2326</a>).</p>; </li>; <li>; <p>Fix Python traceback handling (<a href=""https://redirect.github.com/pygments/pygments/issues/2226"">#2226</a>, <a href=""https://redirect.github.com/pygments/pygments/issues/2329"">#2329</a>).</p>; </li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/pygments/pygments/blob/master/CHANGES"">pygments's changelog</a>.</em></p>; <blockquote>; <h2>Version",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2201:5300,Update,Update,5300,https://qutip.org,https://github.com/qutip/qutip/pull/2201,1,['Update'],['Update']
Deployability,cvxpy Variable and Parameter dims passed as tuple; cvxpy and its depends only installed in tests for NOMKL builds; Extra test added for NOMKL with OPENMP,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/873:78,install,installed,78,https://qutip.org,https://github.com/qutip/qutip/pull/873,1,['install'],['installed']
Deployability,cython 3 patch for 4.7,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2202:9,patch,patch,9,https://qutip.org,https://github.com/qutip/qutip/pull/2202,1,['patch'],['patch']
Deployability,"d and distributed. Once this patch is merged, there will be an option on QuTiP's GitHub Actions tab for people who have write permission on qutip/qutip to build all wheels and optionally release the build to PyPI, making it available on `pip` as a binary release. The major changes are in the files `pyproject.toml`, `setup.py`, `setup.cfg` and `.github/workflows/build.yml`, while `MANIFEST.in` and a new file `VERSION` were also touched. ### Distribution changes:; - there is a GitHub Action which will build all the wheels for CPython 3.6+ on Linux (`manylinux1` x86 and x86_64), macOS and Windows (32- and 64-bit). This action is triggered manually, and the wheels will be available for download afterwards. Optionally, the action will push to PyPI, making the version immediately available on `pip` by binary release.; - `.cpp` files are now distributed with the wheels but not added to source control. This is a step towards a full Cython-free delivery of the QuTiP source (binary releases never require Cython), but right now I think our `setuptools` machinery doesn't quite handle that. ### Changes to `setup.py`; - all package metadata is moved out into `setup.cfg`, which is easier to read and change, and modern `setuptools`' preferred way of doing things; - all directory-tree access is done in a completely platform-agnostic manner, rather than just hoping that Unix-style paths will work on Windows; - the file is tidied and structured into a small script, with separated components; - build requirements are moved into `pyproject.toml` including listing `setuptools` as the build method, in accordance with PEP 517. Any PEP 517-complaint installation and build process will now _enforce_ the presence of `numpy`, `scipy` and `cython` (and `setuptools`) before attempting the build, so no more need for attempted import guards.; - packages are now discovered rather than explicitly stated, using standard `setuptools` machinery; - Cython extension modules are now discovered rather than ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1465:1517,release,releases,1517,https://qutip.org,https://github.com/qutip/qutip/pull/1465,1,['release'],['releases']
Deployability,"d check if a variational representation can properly capture the correlations. Trotterize the hamiltonian and get a circuit, without worrying about how to convert from one framework to the other. . I want to start the discussion on this topic eagerly because I am aware that it will take a fairly long time. If there is anything I can do to make your future internal discussions easier, do let me know. > I just want to caution you in case you're trying to work towards a PR. Indeed. I was just trying to play around with this. . > If we're going to do this (and we haven't decided if we will yet), we're going to need to get a lot of wide-ranging input from many different libraries. I completely agree with your approach. I’m simply trying to push for this to be something that will come out in a reasonable timeframe and not be something forgotten. > We've got to be concerned with backwards and forwards compatibility; what if a user wants to install and use QuTiP and a different library in the same environment without using them together, but can't even have them coexist because of version incompatibilities in optional conversion features?. I do understand your point, and I see how you want to be backward and forward compatible, however I don’t think that my proposal would break different tools in the same environment. What I propose would simply prevent `qutip.Qobj(otherlibraryobject)` from working (with an explicative error message) if `otherlibrary` does not support the same qobj interface version. Everything else would work the same. You can still import and use the two libraries independently without issues. It’s indeed possible to design around this and supporting at the same time different versions of the interface, however, and there’s value in doing so. > To me, this is absolutely one of the mistakes that Numpy made in their implementation, and we shouldn't be copying it. I don't know enough of the history behind numpy current api, but I see your point. however I'd ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-830113742:1475,install,install,1475,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-830113742,1,['install'],['install']
Deployability,"d. Right now,; > I am only plotting state_z_plus so I can focus on the T1 decay from 1 to; > -1. However, as the animation and graph indicate, it seems to stop short of; > -1 and I don't see why that should be happening. I appreciate any feedback.; >; > %matplotlib inline; > import matplotlib.pyplot as plt; > import numpy as np; > import qutip as q; > import cmath; > import matplotlib as mpl; > from mpl_toolkits.mplot3d import Axes3D; >; > rc_dict = {; > ""figure.subplot.bottom"": 0.11,; > ""figure.subplot.hspace"": 0.2,; > ""figure.subplot.left"": 0.125,; > ""figure.subplot.right"": 0.9,; > ""figure.subplot.top"": 0.88,; > ""figure.subplot.wspace"": 0.2,; > ""figure.figsize"":(10,10/1.61),; > ""axes.grid"": True,; > ""text.usetex"": True,; > ""grid.linestyle"": "":"",; > ""grid.color"": ""black"", #; > ""legend.fontsize"": 20,; > ""lines.linewidth"": 2.5,; > ""axes.linewidth"": 1.5,; > ""font.family"": [""serif""],; > ""font.sans-serif"": ""Times New Roman Bold"",; > ""font.size"":26,; > }; > plt.rcParams.update(rc_dict); >; > qutip_options = q.Odeoptions(; > store_states=True,; > nsteps=20000000; > ); > si, sx, sy, sz=q.qeye(2), q.sigmax(), q.sigmay(), q.sigmaz(); > sp, sm=q.sigmap(), q.sigmam(); > state_z_plus=q.basis(2,0); > state_z_minus=q.basis(2,1); > state_x_plus=1.0/cmath.sqrt(2)* (q.basis(2,0) + q.basis(2,1)); > state_x_minus=1.0/cmath.sqrt(2)* (q.basis(2,0) - q.basis(2,1)); > state_y_plus=1.0/cmath.sqrt(2)* (q.basis(2,0) + 1j* q.basis(2,1)); > state_y_minus=1.0/cmath.sqrt(2)* (q.basis(2,0) - 1j* q.basis(2,1)); >; > h = 6.62607015e-34; > b = 0.1786195317554453 #magnetic field; > b_AC = 3.572390635108906e-05 #oscillating magnetic field; > g = 2 #g-factor; > u = 9.274E-24 #bohr magneton; > w = g*u*b/h #omega; > w0 = 5e9 # omega0 is the rotating frame frequency; > print(w); > gamma_phi = 44200000; > gamma_minus = 100000000; >; > epsilon = g*u*b/h*(2; > *cmath.pi) Delta = g*u*b_AC/h*(2*cmath.pi); >; > H = ((w-w0)/(w))*epsilon/2 * sz #*+ Delta/2*sy; >; > print(abs(((w-w0)/(w)))*epsilon/2); >; > #note h",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1418#issuecomment-763377937:1644,update,update,1644,https://qutip.org,https://github.com/qutip/qutip/issues/1418#issuecomment-763377937,1,['update'],['update']
Deployability,"data =; [[1. 0.]; [0. 1.]]; ```. **Expected behavior**; qutip successfully initializes :-). **Your Environment**; Please use `qutip.about()` to get the information about your environment and paste it here.; ```; >>> qutip.about(). QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman and Simon Cross.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.6.2; Numpy Version: 1.21.0; Scipy Version: 1.7.0; Cython Version: 0.29.23; Matplotlib Version: 3.4.2; Python Version: 3.9.6; Number of CPUs: 8; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (arm64); Installation path: /opt/homebrew/lib/python3.9/site-packages/qutip; ================================================================================; Please cite QuTiP in your publication.; ================================================================================; ```. **Additional context**; No sysctl hw.cpufrequency at all on this machine, so it blows up (some error handling in that function would be good :-). ```$ sysctl hw; hw.ncpu: 8; hw.byteorder: 1234; hw.memsize: 17179869184; hw.activecpu: 8; hw.optional.amx_version: 2; hw.optional.arm64: 1; hw.optional.armv8_1_atomics: 1; hw.optional.armv8_2_fhm: 1; hw.optional.armv8_2_sha3: 1; hw.optional.armv8_2_sha512: 1; hw.optional.armv8_crc32: 1; hw.optional.breakpoint: 6; hw.optional.floatingpoint: 1; hw.optional.neon: 1; hw.optional.neon_fp16: 1; hw.optional.neon_hpfp: 1; hw.optional.ucnormal_mem: 1; hw.optional.watchpoint: 4; hw.cacheconfig: 8 1 1 0 0 0 0 0 0 0; hw.cachelinesize: 128; hw.ca",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1606:2317,Install,Installed,2317,https://qutip.org,https://github.com/qutip/qutip/issues/1606,2,['Install'],"['Installation', 'Installed']"
Deployability,"de is based on the following website; (section:Floquet-Markov master equation: comparison with other solvers):; https://notebook.community/cgranade/qutip-notebooks/examples/example-floquet-dynamics. What I have basically changed is replacing the Pauli operator to annihilation/creation operator formalism.; However, when comparing with the Lindblad-Master equation based simulation, the outcome is quantitatively quite different. ![Figure 2023-02-18 142921](https://user-images.githubusercontent.com/47425237/219868478-8210e6d6-155a-4587-9afd-0b0ec505fc09.png). It seems that the function ""floquet_master_equation_rates"" might be an issue, but I do not know how to fix this problem. Any help is appreciated!; Thank you very much!!. QuTiP: Quantum Toolbox in Python; ================================; QuTiP Version: 4.7.0; Numpy Version: 1.21.2; Scipy Version: 1.7.1; Cython Version: 0.29.32; Matplotlib Version: 3.5.0; Python Version: 3.9.7; Number of CPUs: 12; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Windows (AMD64). ```; from qutip import *; import matplotlib.pyplot as plt; import numpy as np; from IPython.display import Image; import math. from scipy.optimize import least_squares; from scipy.optimize import curve_fit. from Ham_tools import Ham_tools; ###--------------------physical constants-----------------------; hbar = 1.055*10**(-28) ##(*[J µs]*); ###-------------------waste mode--------------------------; ww = 2* np.pi* 7.609* 10**3 #(*[MHz] waste mode cavity frequency*); gdw = 2* np.pi* 16.6 #12 #(*[MHz]external decay rate of waste mode*). ###definitions; def J_cb(omega):; """""" Noise spectral density """"""; #print ""evaluate J_cb for omega ="", omega; return 0.5 * gdw /(2*np.pi) # 2*gdw/(np.pi**2). def cos_drv(t, args):; return np.cos(wd*t); ###=========================================================================================================; ###Set the dimensions of the Hilbert space of each participating quantum system; ###==",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2097:1408,Install,Installed,1408,https://qutip.org,https://github.com/qutip/qutip/issues/2097,1,['Install'],['Installed']
Deployability,"de>0ee5eb4</code></a> satisfy formatter, linter, and strict mypy</li>; <li><a href=""https://github.com/pallets/jinja/commit/20477c63575175196bfc8103f223cc9f5642595d""><code>20477c6</code></a> update project files (<a href=""https://redirect.github.com/pallets/jinja/issues/5457"">#5457</a>)</li>; <li><a href=""https://github.com/pallets/jinja/commit/e491223739dedbb1f4fc6a71340c1484e149d947""><code>e491223</code></a> update pyyaml dev dependency</li>; <li><a href=""https://github.com/pallets/jinja/commit/36f98854c721f98ba103f97f65a8a098da5af0d7""><code>36f9885</code></a> fix pr link</li>; <li>Additional commits viewable in <a href=""https://github.com/pallets/jinja/compare/3.1.3...3.1.4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=jinja2&package-manager=pip&previous-version=3.1.3&new-version=3.1.4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2418:3882,update,updates,3882,https://qutip.org,https://github.com/qutip/qutip/pull/2418,1,['update'],['updates']
Deployability,"de>61127bb</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/numpy/numpy/issues/19268"">#19268</a> from charris/backport-19264</li>; <li><a href=""https://github.com/numpy/numpy/commit/143d45fff3ed9e051bdeef7bdb4df38025ea7d1c""><code>143d45f</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/numpy/numpy/issues/19269"">#19269</a> from charris/backport-19228</li>; <li><a href=""https://github.com/numpy/numpy/commit/d80e4738f781a1d206bbc04a2e863299e5f2e104""><code>d80e473</code></a> BUG: Removed typing for == and != in dtypes</li>; <li>Additional commits viewable in <a href=""https://github.com/numpy/numpy/compare/v1.19.5...v1.21.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=numpy&package-manager=pip&previous-version=1.19.5&new-version=1.21.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1767:4725,update,updates,4725,https://qutip.org,https://github.com/qutip/qutip/pull/1767,1,['update'],['updates']
Deployability,"dges/compatibility_score?dependency-name=jinja2&package-manager=pip&previous-version=3.1.2&new-version=3.1.3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/qutip/qutip/network/alerts). </details>",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2291:4877,upgrade,upgrade,4877,https://qutip.org,https://github.com/qutip/qutip/pull/2291,3,['upgrade'],['upgrade']
Deployability,"dges/compatibility_score?dependency-name=jinja2&package-manager=pip&previous-version=3.1.3&new-version=3.1.4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/qutip/qutip/network/alerts). </details>",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2418:5159,upgrade,upgrade,5159,https://qutip.org,https://github.com/qutip/qutip/pull/2418,3,['upgrade'],['upgrade']
Deployability,"digits)>; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:648:17: error: no template named 'numeric_limits'; static_assert(numeric_limits<_FloatT>::radix == 2, ""FloatT has incorrect radix"");; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:651:25: error: no template named 'numeric_limits'; return _FloatBigger ? numeric_limits<_IntT>::max() : (numeric_limits<_IntT>::max() >> _Bits << _Bits);; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:651:58: error: no template named 'numeric_limits'; return _FloatBigger ? numeric_limits<_IntT>::max() : (numeric_limits<_IntT>::max() >> _Bits << _Bits);; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:661:16: error: no template named 'numeric_limits'; using _Lim = numeric_limits<_IntT>;; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:664:12: error: use of undeclared identifier '_Lim'; return _Lim::max();; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:665:21: error: use of undeclared identifier '_Lim'; } else if (__r <= _Lim::lowest()) {; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:666:12: error: use of undeclared identifier '_Lim'; return _Lim::min();; ^; 11 errors generated.; error: command '/usr/bin/clang' failed with exit code 1; [end of output]; ; note: This error originates from a subprocess, and is likely not a problem with pip.; ERROR: Failed building wheel for qutip; Failed to build qutip; ERROR: Could not build wheels for qutip, which is required to install pyproject.toml-based projects. ```; Thanks",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740#issuecomment-1640803583:3220,install,install,3220,https://qutip.org,https://github.com/qutip/qutip/issues/1740#issuecomment-1640803583,1,['install'],['install']
Deployability,"dnorm tests have historically been very flaky, and for as long as we're using random tests (which we possibly shouldn't be), we always run the risk of temperamental failures. In particular, the semidefinite solvers used in dnorm fail every now and again on random states; we historically haven't treated this as a bug, since it's pretty similar to an integration failing to converge because the system was too stiff. It means that the user has to adjust some settings and try again. To prevent this sort of error from failing our test suite, however, we can mark the tests as being allowed to rerun twice on a failure. We had a relatively small sample to judge the test failure rate by, but my very very approximate guess is that we'd have a failure about 1 in 10 runs on Travis. We counter this with two strategies:. 1. parametrise the tests in pytest style, so each random repetition is a separate instance, and known to pytest (some of this was done in earlier commits); 2. allow 2 reruns of every dnorm test. The two of these together should remove all random failures; since all random loops have been moved into pytest-handled repeats, there are far fewer calls to dnorm handled within each test. This means less chance that an individual test run will fail, but a slightly higher chance the entire suite will. Now with the test re-running a single failure point is tried again up to twice more, to determine if it was just a one-off, or if the test is truly broken. The reruns are handled by a pytest plugin pytest-rerunfailures. It's quite nontrivial behaviour to hook this in to the pytest mechanism, so better to use an external dependency to do it than to vendor in a custom version. The dnorm problems have resurfaced a little after lying dormant for a long time, because #1463 reactivated them. Before that, they'd not actually been running because none of the test runners had cvxpy installed.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1490:351,integrat,integration,351,https://qutip.org,https://github.com/qutip/qutip/pull/1490,2,"['install', 'integrat']","['installed', 'integration']"
Deployability,docstring formatting update,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/293:21,update,update,21,https://qutip.org,https://github.com/qutip/qutip/pull/293,1,['update'],['update']
Deployability,"doing this means we have to guarantee that at _no point_ is the `ctrl_array` object copied. If you wanted to branch off execution part-way through the iterator, you'd have to copy the whole state, and then you'd lose your reference to the control array unless you kept manually walking the structure of the time-dependent object (internally it gets converted into a `QobjEvo` Liouvillian) to retrieve it. The other problem is that `state0` and the `Qobj` parts of the Hamiltonian aren't mutable; the preprocessing of `mesolve` means that none of those objects will exist inside the integrator loop. That's fine for this use-case, but it's not very general. These problems of mutability would apply to callback functions as well. A different way of using `yield` or callback function would be to really lean into a co-routine sort of pattern. So `mesolve` internally would look like; ```python; def mesolve(H, state, times, c_ops, e_ops, options):; # [... set up problem ...]; integrator = scipy.integrate.ode(...); for time in times[1:]:; state = integrator.step_to(time); instructions = yield _mesolve_output_state(state, time, e_ops); integrator = _mesolve_process_instructions(instructions, integrator); ```; and a call to `mesolve` would be like; ```python; solver = mesolve(H, rho0, times, c_ops); try:; result = next(solver); while True:; next_control = krotov.get_next_control(result.time, result.state); result = solver.send([; ('update-arguments', {'control': next_control}),; ('update-hamiltonian', ...),; ('add-c_op', ...),; # possible examples of API commands; ]); except StopIteration:; pass; ```; That's not super user friendly, but it _is_ nicely re-entrant. You'd have a single object you can copy and branch off, and QuTiP would be able to update the relevant objects for you at any given time. Still, I don't think it's a good strategy in general - we'd have to _very_ rigorously define the ""instructions"" API, and it would be pretty awkward to use. It would also be a nuisance for ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-859907481:1849,integrat,integrate,1849,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-859907481,1,['integrat'],['integrate']
Deployability,"e -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/include/numpy -Inumpy/core/src/common -Inumpy/core/src -Inumpy/core -Inumpy/core/src/npymath -Inumpy/core/src/multiarray -Inumpy/core/src/umath -Inumpy/core/src/npysort -I/opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/include/python3.9 -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/common -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/npymath -c numpy/core/src/multiarray/buffer.c -o build/temp.macosx-11.0-arm64-3.9/numpy/core/src/multiarray/buffer.o -MMD -MF build/temp.macosx-11.0-arm64-3.9/numpy/core/src/multiarray/buffer.o.d -faltivec -I/System/Library/Frameworks/vecLib.framework/Headers"" failed with exit status 1; ----------------------------------------; ERROR: Failed building wheel for numpy; Failed to build numpy; ERROR: Could not build wheels for numpy, which is required to install pyproject.toml-based projects; ----------------------------------------; WARNING: Discarding https://files.pythonhosted.org/packages/4c/72/42569d71f1643e581c8ad53073c0773cfadaa8f8cf12ac7599b9de01a9ec/qutip-4.6.2.tar.gz#sha256=9614e8e8270dd28728150c00f74ec750b9a2a23fb3b4fe629006f86dd02011df (from https://pypi.org/simple/qutip/). Command errored out with exit status 1: /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/bin/python3.9 /private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-standalone-pip-g3h2vfu_/__env_pip__.zip/pip install --ignore-installed --no-user --prefix /private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-build-env-m9x0lkny/overlay --no-warn-script-location --no-binary :none: --only-binary :none: -i https://pypi.org/simple -- setuptools packaging wheel 'cython>=0.29.20' 'numpy>=1.16.6,<1.20' 'scipy>=1.0' Check the logs for full command output.; ```. ### Expected Behaviour. Qutip should build against a newer version of Numpy. ### Your Environment. Can't get output of `Qutip.about()`. MacBook Pro 2021 with M1 Pro. Python 3.9.* (miniconda and Miniforge). ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:71002,install,install,71002,https://qutip.org,https://github.com/qutip/qutip/issues/1740,2,['install'],"['install', 'installed']"
Deployability,"e Hermitian attribute; print(""Is the Hamiltonian Hermitian? Answer: {}"".format(H_t.isherm)). # And the anti-Hermitian part is truly 0; diff = H_t - H_t.dag(); print(""The norm of the anti-Hermitian part is {}"".format(diff.norm())). # Calculate the eigenvalues and eigenvectors; evals_t, evecs_t = H_t.eigenstates(). # Diagonalize the Hamiltonian; H_t = H_t.transform(evecs_t). # At this stage, the Hamiltonian still has the Hermitian attribute; print(""Is the Hamiltonian still Hermitian after diagonalization? Answer: {}"".format(H_t.isherm)). # However, the transformation gave a residual non-Hermitian part; diff = H_t - H_t.dag(); print(""The norm of the anti-Hermitian part after diagonalization is {}"".format(diff.norm())). # Truncate the Hamiltonian; H_t = H_t.extract_states(range(k_t_trunc)). # At this stage, the Hamiltonian has lost the Hermitian attribute; print(""Is the Hamiltonian still Hermitian after truncation? Answer: {}"".format(H_t.isherm)). # And it still has a non-zero Hermitian part; diff = H_t - H_t.dag(); print(""The norm of the anti-Hermitian part after truncation is {}"".format(diff.norm())); ```. ### Code Output. ```shell; Is the Hamiltonian Hermitian? Answer: True; The norm of the anti-Hermitian part is 0.0; Is the Hamiltonian still Hermitian after diagonalization? Answer: True; The norm of the anti-Hermitian part after diagonalization is 1.2427378357318259e-11; Is the Hamiltonian still Hermitian after truncation? Answer: False; The norm of the anti-Hermitian part after truncation is 6.2142895453943875e-12; ```. ### Expected Behaviour. Extracting a state of states from an Hermitian operator should yield an Hermitian operator. ### Your Environment. ```shell; QuTiP Version: 4.7.2; Numpy Version: 1.24.3; Scipy Version: 1.10.1; Cython Version: 0.29.35; Matplotlib Version: 3.7.1; Python Version: 3.10.6; Number of CPUs: 12; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (arm64); ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2199:2627,Install,Installed,2627,https://qutip.org,https://github.com/qutip/qutip/issues/2199,1,['Install'],['Installed']
Deployability,"e I can still import qutip, but with a warning. I ran the script with no problem, but still got the same deviated behavior from 3 years ago. [codes.zip](https://github.com/user-attachments/files/16367713/codes.zip). The 3-year-old script is included only to show the previous results. It is not meant to be run. I suspect if you run it with your likely different setup, you might get the same deviation as I did, or even yet another different deviation. I cannot recall the state of installation I had from 3 years ago. I believe I did it through conda. I just realized that I cannot include qutip scripts with this report. I included a zipped folder containing these two files. Please let me know if it didn'tgo through. Thank you! . ### Code to Reproduce the Bug. ```shell; Old code in ""Ikonen First Shot New Unitary Trans States 2 level Full H Gated Test 2 - Copy.ipynb""; New code in ""Test.ipynb""; Both attached.; These two codes are exactly identical. Only difference is in the qutip installation, one from 3 years ago and one just completed.; ```. ### Code Output. ```shell; Output in block 23 in the new code is significantly different from that in block 215 in the old code.; ```. ### Expected Behaviour. Expected qutip to produce same results on identical codes 3 years apart. ### Your Environment. ```shell; QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman, Simon Cross, Asier Galicia, Paul Menczel, and Patrick Hopf.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 5.0.3.post1; Numpy Version: 2.0.1; Scipy Version: 1.13.1; Cython Version: 0.29",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2501:1901,install,installation,1901,https://qutip.org,https://github.com/qutip/qutip/issues/2501,1,['install'],['installation']
Deployability,"e PNG instead of JPG compression on macOS <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7219"">#7219</a>; [abey79, radarhere]</p>; </li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/python-pillow/Pillow/commit/e34d346f10c0b1c814661e662a3e0c1ef084cf1c""><code>e34d346</code></a> Updated order</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/a62f2402a6bcf11a0a1670542216725a3f9190e0""><code>a62f240</code></a> 10.0.1 version bump</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/d50250d9eab741ae3ddd592d8910cfd7973b9d35""><code>d50250d</code></a> Added release notes for 10.0.1</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/b4c7d4b8b2710b7af6cc944a804902eb75fd9056""><code>b4c7d4b</code></a> Update CHANGES.rst [ci skip]</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/730f74600e8215ab510f71bb1fbb49d906c4356b""><code>730f746</code></a> Updated libwebp to 1.3.2</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/b0e28048d692effadfe7a4268a03e1d20e0198bb""><code>b0e2804</code></a> Updated zlib to 1.3</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/6e28ed1f36d0eb74053af54e1eddc9c29db698cd""><code>6e28ed1</code></a> 10.0.0 version bump</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/c827f3b30f50bf04fd65daeeba6bbfd56fc7b50e""><code>c827f3b</code></a> Merge pull request <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7246"">#7246</a> from radarhere/deallocate</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/39a3b1d83edcf826c3864e26bedff5b4e4dd331b""><code>39a3b1d</code></a> Fixed deallocating mask images</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/8c1dc819fd91471825da01976ac0e0bc8789590f""><code>8c1dc81</code></a> Update CHANGES.rst [ci skip]</li>; <li>Additional commits viewable in <a h",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2237:11926,Update,Updated,11926,https://qutip.org,https://github.com/qutip/qutip/pull/2237,1,['Update'],['Updated']
Deployability,"e input to the `einsum`-like function, then calls the `Dispatcher` with this information. I think this form would likely be preferable for several reasons:; 1. it will allow arbitrary mixing of different data types (`CSR` complete space and `Dense` operator, or both `CSR`, or whatever), with the allowed conversions respecting the global dispatcher rules, not having this function use a different, special configuration; 2. it will mean that the function can also be implemented by plug-in data types (TF/CuPy/etc), installed separately to QuTiP; 3. it will be more general, and easier to maintain; the current `subsystem_apply`, `partial_transpose`, `ptrace`, `tensor_contract` and this can all become special cases of this backing `einsum`-like routine.; 4. after we've implemented new dimensions objects, we'll be able to use a more standardised description of how to refer to individual subspaces of a Hilbert space, which will provide a more consistent UX across the library. This is particularly important if we want this to work well with superoperators. Really, thank you very much for making the PR - I really am excited to see people with an interest in the new data layer! I'm sorry that I took quite so long to respond properly to it, and that when I have, I've ended up being somewhat against the implementaton as it is. I would be really interested in pursuing this, likely after the initial release of 5.0, but right now I think we might need to get our ducks in a row about licensing primarily, and then about how we're going to handle tensor networks in general. In order to prevent headaches down the line (and again, very very sorry), would it be ok if we leave this unmerged, and don't attempt to modify it in any way? I don't want to get into a situation where we decide we can't accept non-QuTiP-licenced code, and we want to use/build on your code or implement something similar, but our hands are tied because anything we do will involve our knowledge of IP we don't control.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1405#issuecomment-864073566:4376,release,release,4376,https://qutip.org,https://github.com/qutip/qutip/pull/1405#issuecomment-864073566,1,['release'],['release']
Deployability,"e object satisfy the numpy `__array__` interface and can be converted by calling `np.array(netket_operator)` or `np.asarray(netket_operator)`. We can also obtain sparse representations (but there is no nice api to do that, so we simply provide a method `netket_operator.to_sparse()`. Variational states can also be converted to vectors or matrices (kets and density operators) as they also support the `__array__` interface. I would like our users to be able to call `Qobj(netket_operator)` or `Qobj(netket_state)` and obtain the corresponding qutip object. We could, in principle support a `netket_operator.to_qobj()` conversion method, but I am strongly opposed to that as this is an ugly design pattern: a way to construct a `Qobj` already exists, it's `Qobj(...)`, and the simplest-to-use api is, in my opinion, to overload this constructor to perform the conversion.; This is a standard design pattern in Julia, which I believe has the best ecosystem inter-compatibility thanks to a standardisation of this pattern through (multiple)dispatch. Numpy too, does the same, through the `__array__` interface: any object that defines a `__array__(self, dtype=None)->np.ndarray` method will be supported by `np.asarray` and `np.array`. Proposal: I would like QuTiP to support a `__qobj__` interface, meaning that your `Qobj` constructor should check if an object has this method, and if it has, then use it to convert it to a Qobj.; It should be relatively simple and involve adding another else-if in [your constructor](https://github.com/qutip/qutip/blob/624405e7c49f7c25d0623451cff5a5a5d0544559/qutip/qobj.py#L333). ```; if isinstance(inpt, Qobj):; ...; elif inpt is None:; ...; ...; elif hasattr(inpt, ""__qobj__""):; data = input.__qobj(options); self.shape = data.shape; ...; ```; The only thing to do would be discussing the interface itself and document what it should return. This will allow other software in the future to integrate with qutip, too, and I believe will help shape the ecosystem.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508:3013,integrat,integrate,3013,https://qutip.org,https://github.com/qutip/qutip/issues/1508,1,['integrat'],['integrate']
Deployability,"e provided by M. Pechal. Issue was found in qutip version 4.6.2 and 4.6.3. ### Code to Reproduce the Bug. ```shell; # Qubit evolving only under energy relaxation (with H = 0 and the only collapse operator being qt.destroy(2)).; # The relaxation rate is time-dependent.; #; # A simple calculation shows that <ad(t2).a(t1)> = exp( - ( int_0^t1 Gamma(t) dt + int_0^t2 Gamma(t) dt ) / 2 ). H = 0.0 * qt.identity(2); psi0 = qt.basis(2, 1); tlist = np.linspace(0, 1, 101); def Gamma(t):; return 8.0 * t; cops = [[qt.destroy(2), lambda t, args: np.sqrt(Gamma(t))]]; a = qt.destroy(2); ad = a.dag(). testcorr = qt.correlation_2op_2t(H, psi0, tlist, tlist, cops, ad, a); #testcorrM = qt.correlation_2op_2t_MPAF(H, psi0, tlist, tlist, cops, ad, a). i1 = 20; i2 = 50; print('qt.correlation_2op_2t:'); print('<ad(t2).a(t1)> =',testcorr[i1, i2 - i1]). #print('qt.correlation_2op_2t MPAF:'); #print('<ad(t2).a(t1)> =',testcorrM[i1, i2 - i1]). print('------'); print('""manual"" calculation using mesolve:'); rhom = qt.mesolve(H, psi0, np.linspace(0, tlist[i1], 101), cops).states[-1]; print('<ad(t2).a(t1)> =',(qt.mesolve(H, a*rhom, np.linspace(tlist[i1], tlist[i2], 101), cops).states[-1] * ad).tr()). print('------'); print('theory:'); t1 = tlist[i1]; t2 = tlist[i2]; print('<ad(t2).a(t1)> =', np.exp(-(4.0*t1**2 + 4.0*t2**2)/2)); ```. ### Code Output. ```shell; qt.correlation_2op_2t:; <ad(t2).a(t1)> = (0.7117768902828536+0j); ------; ""manual"" calculation using mesolve:; <ad(t2).a(t1)> = 0.5598976820725802; ------; theory:; <ad(t2).a(t1)> = 0.559898366565402; ```. ### Expected Behaviour. qt.correlation_2op_2t should reproduce numbers from theory and 'manual' calculations. ### Your Environment. ```shell; QuTiP Version: 4.6.3; Numpy Version: 1.20.3; Scipy Version: 1.7.1; Cython Version: 0.29.24; Matplotlib Version: 3.4.2; Python Version: 3.8.10; Number of CPUs: 8; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1808:2372,Install,Installed,2372,https://qutip.org,https://github.com/qutip/qutip/issues/1808,1,['Install'],['Installed']
Deployability,"e view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pygments&package-manager=pip&previous-version=2.14.0&new-version=2.15.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/qutip/qutip/network/alerts). </details>",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2201:15280,upgrade,upgrade,15280,https://qutip.org,https://github.com/qutip/qutip/pull/2201,3,['upgrade'],['upgrade']
Deployability,"e view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=requests&package-manager=pip&previous-version=2.28.2&new-version=2.31.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/qutip/qutip/network/alerts). </details>",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2164:8749,upgrade,upgrade,8749,https://qutip.org,https://github.com/qutip/qutip/pull/2164,3,['upgrade'],['upgrade']
Deployability,"e'll be a `step` method instead of calling the ""high-level"" interface function `mesolve`, but functionally it'll do largely the same, just with a lot less data copying than the current form has to do. In the new system, it's likely that the function `mesolve` itself will keep the exact same interface it has now, just internally most of its processing will be split into modular components, each of which will be accessible (with different names) to the user to compose themselves, if they want low-level access. That sounds perfect! I might wait for QuTiP 5 to come out, or if these things are already in `master`, I'll see if I can maybe revisit `DensityMatrixODEPropagator` and maybe also add something for the Hilbert space case (whatever `sesolve` is doing internally). As an aside, I was actually surprised how much better `DensityMatrixODEPropagator` performs compared to looping over `mesolve` (`In [29]` vs `In [21]`): Since the `DensityMatrixODEPropagator` also re-initializes `scipy.integrate.ode` in every time steps, it would seem like the only difference between the two is the overhead of `mesolve` deciding that it has to handle the specific case of density matrix propagation. That might be something to keep an eye on in future QuTiP development: Ideally, calling `mesolve` would have negligible overhead compared to manually doing whatever `mesolve` does internally for a particular case. > We're unlikely to add `yield` to `mesolve` directly because that's a very breaking change to one of QuTiP's core functions (we can't return from a generator, or at least not ergonomically), but we are splitting up the `mesolve` monolith into a much more modular architecture, and making it more user-accessible. The other advantage of this is that the integrator component will just be one element of a composable system, so we'll not be tied to scipy integrators any more. I would absolutely not expect you to modifying how `mesolve` works directly. In fact, I would strongly recommend le",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243:9133,integrat,integrate,9133,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243,1,['integrat'],['integrate']
Deployability,"e-user-images.githubusercontent.com/12125783/337660051-e4fa3d0a-ca5a-40e7-ab5b-283c30f0de07.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTc3NzY1MzMsIm5iZiI6MTcxNzc3NjIzMywicGF0aCI6Ii8xMjEyNTc4My8zMzc2NjAwNTEtZTRmYTNkMGEtY2E1YS00MGU3LWFiNWItMjgzYzMwZjBkZTA3LnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDA2MDclMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwNjA3VDE2MDM1M1omWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTk5YmExMTE2NGZhZmFmZWZiYjQ2YTU0ZTlmOWNmZDg1MzI5NWQyM2UxNWIzNDUwYWYwOTdjNmZhYzU2ZDBlZDAmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.c_jkyvIGwDUsmTXLIAr5LI0-u2IhfVNWo2orjBvElfk) with names as strings.; > ; > It would be nice to make them clickable object that links to the function signatures. Like the `tensor` in https://qutip.readthedocs.io/en/qutip-5.0.x/guide/guide-tensor.html#example-constructing-composite-hamiltonians; > ; > ![image](https://private-user-images.githubusercontent.com/12125783/337661271-ad856f69-e0f2-49a2-9ab0-f88e84444373.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTc3NzY1MzMsIm5iZiI6MTcxNzc3NjIzMywicGF0aCI6Ii8xMjEyNTc4My8zMzc2NjEyNzEtYWQ4NTZmNjktZTBmMi00OWEyLTlhYjAtZjg4ZTg0NDQ0MzczLnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDA2MDclMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwNjA3VDE2MDM1M1omWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTAzYTljNGFhMDMxY2RkNmU1ZWRiZjk1YzNkODllNjdjOTlkNDIxMDBhNDgxOTI0MWEyNmFlZjM1MTZjY2I5NTkmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.D6pMkAw1y3WWyirs_J8dFthmGjY4V6rIMr6JUHYZ19Y). Thank you for being so clear with the explanation, now I am able to build the html. I have done this update.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2441#issuecomment-2155132051:2208,update,update,2208,https://qutip.org,https://github.com/qutip/qutip/pull/2441#issuecomment-2155132051,1,['update'],['update']
Deployability,"e/releasenotes/10.2.0.html"">https://pillow.readthedocs.io/en/stable/releasenotes/10.2.0.html</a></p>; <h2>Changes</h2>; <ul>; <li>Add <code>keep_rgb</code> option when saving JPEG to prevent conversion of RGB colorspace <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7553"">#7553</a> [<a href=""https://github.com/bgilbert""><code>@​bgilbert</code></a>]</li>; <li>Trim negative glyph offsets in ImageFont.getmask() <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7672"">#7672</a> [<a href=""https://github.com/nulano""><code>@​nulano</code></a>]</li>; <li>Removed unnecessary &quot;pragma: no cover&quot; <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7668"">#7668</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Trim glyph size in ImageFont.getmask() <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7669"">#7669</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fix loading IPTC images and update test <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7667"">#7667</a> [<a href=""https://github.com/nulano""><code>@​nulano</code></a>]</li>; <li>Allow uncompressed TIFF images to be saved in chunks <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7650"">#7650</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Concatenate multiple JPEG EXIF markers <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7496"">#7496</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Changed IPTC tile tuple to match other plugins <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7661"">#7661</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Do not assign new fp attribute when exiting context manager <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7566"">#7566</a> [<a href=""https://github.com/radarhere""><code>@​",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2302:1341,update,update,1341,https://qutip.org,https://github.com/qutip/qutip/pull/2302,1,['update'],['update']
Deployability,"e](http://qutip.org/docs/4.1/guide/guide-bloch.html#animating-with-the-bloch-sphere) of how to do an animation of a Bloch sphere by saving the frames of the movie using a for loop like so:. ```python; b = Bloch(); b.vector_color = ['r']; b.view = [-40,30]; for i in range(len(sx)):; b.clear(); b.add_vectors([np.sin(theta),0,np.cos(theta)]); b.add_points([sx[:i+1],sy[:i+1],sz[:i+1]]); b.save(dirc='temp'); ```. With `b.clear()` we erase the points and vectors in the image, which is nice for updating the data, but What if I want to update also the attributes of the Bloch sphere?. To give an example let's say that I want the viewing angle of the Bloch sphere to smoothly change throughout the animation. I can define a function like so:. ```python; def bloch_camera_path(t, dt, azim_0, azim_f, elev_0, elev_f):; azim = ((azim_f-azim_0)/dt)*t+azim_0; elev = ((elev_f-elev_0)/dt)*t+elev_0; return [azim, elev]; ```. This function changes the viewing angle across time from the initial `[azim_0, elev_0]` configuration to the final `[azim_f, elev_f]` configuration in a linear manner. So I thought that by doing. ```python; b = Bloch(); b.vector_color = ['r']; for i in range(len(t)):; b.clear(); b.view = bloch_camera_path(t[i], t[-1]-t[0], -80, -70, 45, 40); b.add_vectors([np.sin(theta),0,np.cos(theta)]); b.add_points([sx[:i+1],sy[:i+1],sz[:i+1]]); b.save(dirc='temp'); ```; My animation would had that change in position of the ""camera"", but the result is just as if `b.view` wouldn't update. The only way I can make this work is by making a new bloch sphere on each iteration and defining all the attributes again and again (which I find highly inconvenient in terms of speed), like so;. ```python; import os. for i in range(len(t)):; b = Bloch(); b.vector_color = ['r']; b.view = bloch_camera_path(t[i], t[-1]-t[0], -80, -70, 45, 40); b.add_vectors([np.sin(theta),0,np.cos(theta)]); b.add_points([sx[:i+1],sy[:i+1],sz[:i+1]]); b.save(os.getcwd()+'/temp/bloch_'+str(i)+'.png', dirc='temp'); b.c",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1106:1052,configurat,configuration,1052,https://qutip.org,https://github.com/qutip/qutip/issues/1106,2,['configurat'],['configuration']
Deployability,"eaacb""><code>cae5ac4</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5924"">#5924</a> from radarhere/cves</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/ed4cf7813777ad8478cac46f448bc45416a2a99e""><code>ed4cf78</code></a> CVEs TBD</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/d7f60d1d5a746eb01d4cb3c7fb05b6593f46b0f5""><code>d7f60d1</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5923"">#5923</a> from radarhere/imagemath_eval</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/8531b01d6cdf0b70f256f93092caa2a5d91afc11""><code>8531b01</code></a> Restrict builtins for ImageMath.eval</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/1efb1d9fabd1dfdbf7982035eca0dae7306abef1""><code>1efb1d9</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5922"">#5922</a> from radarhere/releasenotes</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/f6c78713a491764dfac576f6c42127755f2c62b3""><code>f6c7871</code></a> Added release notes for <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5919"">#5919</a>, <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5920"">#5920</a> and <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5921"">#5921</a></li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/032d2dc3658f94718109068ac70799313e440754""><code>032d2dc</code></a> Update CHANGES.rst [ci skip]</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/baae9ec4b67c68e3adaf1208cf54e8de5e38a6fd""><code>baae9ec</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5921"">#5921</a> from radarhere/jpeg_eoi</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/1059eb537639925c96d3245dcd73c106d4266c83""><co",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:14627,release,releasenotes,14627,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['release'],['releasenotes']
Deployability,"ead of Qobj's -- potentially even more speedup, in fact, since with numpy now *everything* is dense (including the Hamiltonian), whereas the best thing to do numerically would be to do sparse-matrix-dense-vector operations (which is what we do in Fortran, incidentally). > In the form I've written it, this loop is thread-safe already. As it stands in the 4.x series, `mesolve` is re-entrant (I'm fairly sure), but note that it does generally mutate its arguments, especially if you pass a `QobjEvo` Liouvillian as the first argument. As long as you make sure you give each thread a distinct copy of the input Liouvillian, `mesolve` itself doesn't access global state as far as I recall. Just to be clear: there's two interconnected issues here: One is just being ""reentrant"" in the sense that I can safely have multiple `mesolve`'s run in parallel. This doesn't seem to be a problem for `mesolve` as a whole (propagating over the entire time grid). The other issue, at a lower level is whether I can keep the internal state of the integrator (`scipy.integrate.ode` or whatever else `mesolve` might be using) when propagating a single time step (and whether I can have multiple integrators to run in parallel that each safely keep track of their own state). That comes down to the integrator itself being ""reentrant"", of course. Certainly, calling `mesolve` in a loop (`In [19]`) doesn't keep the internal state of the integrator, hence the overhead between `In [21]` compared to `In [18]`. I wouldn't expect it to, of course, but the question is whether a refactoring of `mesolves` internals into an object that keeps state in a thread-safe way and allows doing time steps would alleviate this overhead (like the `mesolve_prepare_ode(H, state, c_ops) -> OdeState` that you propose in https://github.com/qutip/qutip/issues/1571#issuecomment-859917462). On the other hand, looping over the full `mesolve` as in `In [19]` obviously has no problems with parallelization. I wasn't sure if that's what you",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243:5972,integrat,integrator,5972,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243,1,['integrat'],['integrator']
Deployability,"ean that the distribution can handle both the current `master` and the `dev.major` package layouts with no changes. The rest of this text is very similar to the original message in #1429. ---. This patch overhauls how QuTiP is packaged and distributed. Once this patch is merged, there will be an option on QuTiP's GitHub Actions tab for people who have write permission on qutip/qutip to build all wheels and optionally release the build to PyPI, making it available on `pip` as a binary release. The major changes are in the files `pyproject.toml`, `setup.py`, `setup.cfg` and `.github/workflows/build.yml`, while `MANIFEST.in` and a new file `VERSION` were also touched. ### Distribution changes:; - there is a GitHub Action which will build all the wheels for CPython 3.6+ on Linux (`manylinux1` x86 and x86_64), macOS and Windows (32- and 64-bit). This action is triggered manually, and the wheels will be available for download afterwards. Optionally, the action will push to PyPI, making the version immediately available on `pip` by binary release.; - `.cpp` files are now distributed with the wheels but not added to source control. This is a step towards a full Cython-free delivery of the QuTiP source (binary releases never require Cython), but right now I think our `setuptools` machinery doesn't quite handle that. ### Changes to `setup.py`; - all package metadata is moved out into `setup.cfg`, which is easier to read and change, and modern `setuptools`' preferred way of doing things; - all directory-tree access is done in a completely platform-agnostic manner, rather than just hoping that Unix-style paths will work on Windows; - the file is tidied and structured into a small script, with separated components; - build requirements are moved into `pyproject.toml` including listing `setuptools` as the build method, in accordance with PEP 517. Any PEP 517-complaint installation and build process will now _enforce_ the presence of `numpy`, `scipy` and `cython` (and `setuptools`)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1465:1344,release,release,1344,https://qutip.org,https://github.com/qutip/qutip/pull/1465,1,['release'],['release']
Deployability,"ease\pyrex\rhs14880.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_pw_8rhs14880_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/nd",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:7343,Release,Release,7343,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"ease\pyrex\rhs14881.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_pw_8rhs14881_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; In file included from C:\Anaco",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:13096,Release,Release,13096,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"ease\pyrex\rhs14882.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_pw_8rhs14882_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; In file included from C:\Anaco",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:19014,Release,Release,19014,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"ease\pyrex\rhs14883.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_pw_8rhs14883_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; ok; correlation: comparing TLS emission correlations (fn-list td format) ... ok; correlation: comparing TLS emission correlations (fn td format) ... ok; Counting statistics: current and current n",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:24932,Release,Release,24932,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"ecomment-859717563 on the requirements: beyond yielding the propagated states, we'll also have to modify the controls, i.e. the time-dependencies for QuTiP's nested-list format. Within the `krotov` package, these would always be numpy arrays. As an explanation, see [the figure for Krotov's update scheme](https://qucontrol.github.io/krotov/v1.2.1/_images/krotovscheme.svg) from [the documentation](https://qucontrol.github.io/krotov/v1.2.1/07_krotovs_method.html#time-discretization). The single-step-`mesolve` would be for the ""(2) forward-propagation with updated control"" in the bottom of the diagram: After each propagation time step, we calculate a new control value based on the current propagated state and other information (the ∂H/∂ϵ and stored backward-propagated states χ). The new control value is then used for the next time step. I'd also add that `mesolve` ideally should be ""thread-safe"" in the sense that we may have multiple `mesolve` run in parallel (index k in the diagram, where all the different k contribute to the update of the control values at the next time step), within whatever parallelization framework Python makes available. I vaguely remember looking at some Runge-Kutta implementations within scipy where this was a problem. I noted this in the docstring of krotov's [`DensityMatrixODEPropagator`](https://github.com/qucontrol/krotov/blob/master/src/krotov/propagators.py#L162), which was an attempt to adapt some of `mesolve`'s inner workings to Krotov's needs. It turned out the overhead was still too large for this work very well, cf. the large runtime of the [corresponding example](https://qucontrol.github.io/krotov/v1.2.1/notebooks/06_example_3states.html). To get very technical, Krotov's requirements are laid out in the documentation of the [`Propagator`](https://github.com/qucontrol/krotov/blob/master/src/krotov/propagators.py#L125) abstract base class, [`DensityMatrixODEPropagator`](https://github.com/qucontrol/krotov/blob/master/src/krotov/propagat",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-859754215:2844,update,update,2844,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-859754215,1,['update'],['update']
Deployability,"ector (using `gate_expand_1toN`), and the added code (dense local). N being the number of qubits. Here I made things as hard as possible for the sparse routine (all elements non-zero), so this is probably the limit of the speed-up. ![1_local_vector_adaptive_backend](https://user-images.githubusercontent.com/47875526/101932409-91f44900-3b8f-11eb-8b5b-7a00dabec2e4.png). **Other notes**; 1. I am a contractor for NASA, and they required a slight change to the license for the code I added. This is why I made two new files for this work specifically (instead of putting it in e.g. gates.py), which now includes a Copyright NASA sentence. I will talk privately with someone about this. 2. ~~I actually think that we could make a wrapper function `local_multiply` which can additionally take a backend 'sparse', so that it is easier to compare the above code, to one using the default sparse way (e.g. using the `expand_operator` type functions). I didn't do this yet as thought i'd see what thoughts are on this -- I can easily add this.~~ **Update (20/12/20)**: I just added some basic functionality for this. Will need to add more tests and maybe re-work it a bit still. 3. Currently the input local operator is expected to be square, and we do not take output dimension arguments. This means it keeps the system dimensions the same. This can be relaxed easily, but we probably need an additional output dimension list, which needs to be consistent with the input operator. Again, this is easy to do, but was not sure if it is needed. If I get time I might add this anyway. 4. There are some examples of the code in the docstring to see how to run it (and also in the tests of course). I also have offline a script to perform certain speed comparisons (vs the sparse routine), I can share some more results of that. I figured this type of script shouldn't go into the project, but I can also add this. **Changelog**; Added a local multiplication routine, to speed up certain dense matrix operations.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1405:2592,Update,Update,2592,https://qutip.org,https://github.com/qutip/qutip/pull/1405,1,['Update'],['Update']
Deployability,"ects that build on top of it. In this document we refer to the “QuTiP project” or “ the project” with reference to all software developed under the QuTiP Github organization, hosted at “[www.github.com/qutip](www.github.com/qutip)” and all related activities involving its community happening through its official channels. **<span style=""text-decoration:underline;"">The Community</span>**. QuTiP is at the center of a lively ecosystem and creative community. As of October 2020, QuTiP’s large community comprises over 80 code contributors and thousands of users that have downloaded the software over 300’000 times. QuTiP enables an infrastructure of other scientific libraries for the investigation of specific quantum physics or quantum information processing features. . There are several ways through which members of the wider QuTiP community can receive information on QuTiP. This is through any of its official channels: the Google forum; the qutip.org/news webpage tracking the releases on Github, and opening [Issues](https://github.com/qutip/qutip/issues) on Github to file bug reports or discuss and proposed enhancements. Users are encouraged to contribute bug fixes or enhancements to the project with [Pull Requests](https://github.com/qutip/qutip/pulls). **<span style=""text-decoration:underline;"">Governance</span>**. This governance document outlines the governance of the QuTiP project, in order to better serve the community and provide robust liveliness and sustained maintenance for the project. Changes to this document need to be approved by ¾ of the Admin Team. The contents of this QuTiP Governance are shown on QuTiP’s website (qutip.org/goverance) and in its documentation. The changes are tracked at github.com/qutip/governance. We view this governance model as the formalization of what we are already doing, rather than a change in direction. This document is composed of information regarding the following:. **1. Code of Conduct**. **2. Admin Team: Tasks, Composition",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1373:5388,release,releases,5388,https://qutip.org,https://github.com/qutip/qutip/issues/1373,1,['release'],['releases']
Deployability,"ee that at _no point_ is the `ctrl_array` object copied. If you wanted to branch off execution part-way through the iterator, you'd have to copy the whole state, and then you'd lose your reference to the control array unless you kept manually walking the structure of the time-dependent object (internally it gets converted into a `QobjEvo` Liouvillian) to retrieve it. The other problem is that `state0` and the `Qobj` parts of the Hamiltonian aren't mutable; the preprocessing of `mesolve` means that none of those objects will exist inside the integrator loop. That's fine for this use-case, but it's not very general. These problems of mutability would apply to callback functions as well. A different way of using `yield` or callback function would be to really lean into a co-routine sort of pattern. So `mesolve` internally would look like; ```python; def mesolve(H, state, times, c_ops, e_ops, options):; # [... set up problem ...]; integrator = scipy.integrate.ode(...); for time in times[1:]:; state = integrator.step_to(time); instructions = yield _mesolve_output_state(state, time, e_ops); integrator = _mesolve_process_instructions(instructions, integrator); ```; and a call to `mesolve` would be like; ```python; solver = mesolve(H, rho0, times, c_ops); try:; result = next(solver); while True:; next_control = krotov.get_next_control(result.time, result.state); result = solver.send([; ('update-arguments', {'control': next_control}),; ('update-hamiltonian', ...),; ('add-c_op', ...),; # possible examples of API commands; ]); except StopIteration:; pass; ```; That's not super user friendly, but it _is_ nicely re-entrant. You'd have a single object you can copy and branch off, and QuTiP would be able to update the relevant objects for you at any given time. Still, I don't think it's a good strategy in general - we'd have to _very_ rigorously define the ""instructions"" API, and it would be pretty awkward to use. It would also be a nuisance for extensibility, probably; the interm",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-859907481:1901,integrat,integrator,1901,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-859907481,1,['integrat'],['integrator']
Deployability,"elated to mkl and steady when running the full test. Denis. De : zhang [mailto:notifications@github.com]; Envoyé : samedi 28 septembre 2019 09:33; À : qutip/qutip <qutip@noreply.github.com>; Cc : VION Denis <denis.vion@cea.fr>; Comment <comment@noreply.github.com>; Objet : Re: [qutip/qutip] Error with conda MKL2019.0 on Windows (#975). This was reported on the help group; https://groups.google.com/forum/#!topic/qutip/L-MIFFwK0xU. (copying from there); the newest mkl(Math library for intel) version(2019) can not work on QuTiP 4.3.1. I rollback it to mkl(2018.0.3), the qutip.testing then work well. If using mkl(2019.0), there will MKL read problems, like:. File ""C:\Users\ym24chen\Anaconda3\. x = lu.solve(b, verbose=verbose). File ""C:\Users\ym24chen\Anaconda3\envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 164, in solve. np_x, np_error). OSError: exception: access violation reading 0x0000000000000008. envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 384, in mkl_spsolve. Env info:. QuTiP Version: 4.3.1. Numpy Version: 1.15.4. Scipy Version: 1.1.0. Cython Version: 0.29.6. Matplotlib Version: 3.0.3. Python Version: 3.7.2. Number of CPUs: 8. BLAS Info: INTEL MKL. OPENMP Installed: False. INTEL MKL Ext: True. Platform Info: Windows (AMD64). Installation path: C:\Users\canwa\AppData\Local\conda\conda\envs\qutipenv\lib\site-packages\qutip. ==============================================================================. How can I rollback it to mkl(2018.0.3)? I just use ""conda install mkl=2018"" but the test still return errors. —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/qutip/qutip/issues/975?email_source=notifications&email_token=ADBRKX2X6OKO5WY3XBOXMFLQL4CEJA5CNFSM4HFQJOJ2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD72TBSI#issuecomment-536162505>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADBRKXZB66WCUYJDJKW7ZTLQL4CEJANCNFSM4HFQJOJQ>.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/975#issuecomment-536288655:1403,Install,Installed,1403,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-536288655,4,"['Install', 'install', 'rollback']","['Installation', 'Installed', 'install', 'rollback']"
Deployability,"elease\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyre",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:9027,Release,Release,9027,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"elease\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyre",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:14945,Release,Release,14945,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"elease\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyre",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:20863,Release,Release,20863,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,emp.macosx-11.0-arm64-3.9/private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn; creating build/temp.macosx-11.0-arm64-3.9/private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T; creating build/temp.macosx-11.0-arm64-3.9/private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-install-cp5z29tf; creating build/temp.macosx-11.0-arm64-3.9/private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-install-cp5z29tf/numpy_1458b1f38a5449d18aa77b5bb31c63d1; creating build/temp.macosx-11.0-arm64-3.9/private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-install-cp5z29tf/numpy_1458b1f38a5449d18aa77b5bb31c63d1/numpy; creating build/temp.macosx-11.0-arm64-3.9/private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-install-cp5z29tf/numpy_1458b1f38a5449d18aa77b5bb31c63d1/numpy/_build_utils; creating build/temp.macosx-11.0-arm64-3.9/private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-install-cp5z29tf/numpy_1458b1f38a5449d18aa77b5bb31c63d1/numpy/_build_utils/src; compile options: '-DNPY_INTERNAL_BUILD=1 -DHAVE_NPY_CONFIG_H=1 -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE=1 -D_LARGEFILE64_SOURCE=1 -DNO_ATLAS_INFO=3 -DHAVE_CBLAS -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/umath -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/npymath -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/common -Inumpy/core/include -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/include/numpy -Inumpy/core/src/common -Inumpy/core/src -Inumpy/core -Inumpy/core/src/npymath -Inumpy/core/src/multiarray -Inumpy/core/src/umath -Inumpy/core/src/npysort -I/opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/include/python3.9 -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/common -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/npymath -c'; extra options: '-faltivec -I/System/Library/Frameworks/vecLib.framework/Headers'; clang: numpy/core/src/multiarray/array_assign_scalar.c; clang: numpy/core/src/multiarray/alloc.c; clang: numpy/core/src/multiarray/buffer.c; clang: numpy/core/src/multiarray/com,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:63849,install,install-,63849,https://qutip.org,https://github.com/qutip/qutip/issues/1740,1,['install'],['install-']
Deployability,"emp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:1",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:14430,Release,Release,14430,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"emp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:1",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:20348,Release,Release,20348,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"en setting an options. It is only used for `use_cython` which will error when trying to set it to `True` without cython installed. Otherwise, it will fail when trying to use the options. *Solver's options*; Each solver has it's option class (SeOptions, MeOptions, etc.) with only needed keys.This somewhat feel overkill since they are all the some for now, until mcsolve is merged. Each integrator also has an associated options and the solver options contain an integrator options. Conversion between options type will raise an error. When creating a solver options, it read the `method` key and setup a matching integrator options. Thus only the keys used by the solver or integrator are defined in the instance. This allow adding new integrator with their own options without adding complexity to the solver options. It can be used as such:; ```; opt = SolverOptions(method='lsoda'); opt['progress_bar'] = False; opt.ode['max_order_ns'] = 10; ```; To make it work smoothly, each integrator must be associated to only one method thus `zvode` was split between `adams` and `bdf`. There is also a generic `Options` class that accept any keys used by integrator or solver and can be converted to any specific solver options:; ```; Options(futur_cupy_ode_specific_options=True) # Will work; Options(not_an_options=True) # Error; # For most solver:; __solve(..., opt=Options()); ```; Once options are associated to a solver, they are frozen:; ```; opt = SeOptions(); solver = SeSolver(..., opt); opt['...'] = ... # Ok, but solver has a copy and is unaffected.; solver.options['...'] = ... # Error; solver.options = opt; ```; This is because changing options without the solver knowing will not take effect. I removed saving / storing options for now. It was mostly used to store openmp threshold, which is not supported.; I also propose to write the stored options as python code when we restore it. (`options = eval(repr(options))`, we may have some issue with circular import if called from `__init__.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1812:2174,integrat,integrator,2174,https://qutip.org,https://github.com/qutip/qutip/pull/1812,1,['integrat'],['integrator']
Deployability,"en(pulse_set)), ['c_x', 'c_x_bug']):; plt.subplot(len(pulse_set),1,idx+1); plt.plot(time_test,pulse_set[idx](time_test,None),label=name); plt.legend(loc=1); plt.xlabel('time'); plt.show(). for idx, name in zip(range(len(pulse_set)), ['c_x', 'c_x_bug']):; H = [Hsys['Hq'],[Hsys['Hc_x'], pulse_set[idx]]]; result = qu.mesolve(H, psi0, time_test, Hsys['Hlbld'],; [qu.sigmax(), qu.sigmay(), qu.sigmaz()],; progress_bar=None, options=None); b = qu.Bloch(); b.clear(); Pg, Pe = [], []; qu_blochs = result.expect; plt.title('probability of excited state'); for i,j,k in zip(qu_blochs[0],qu_blochs[1],qu_blochs[2]):; points = [i,j,k]; b.add_points(points); P0, P1 = (1+k)/2.0, (1-k)/2.0; Pg.append(P0); Pe.append(P1); plt.subplot(len(pulse_set),1,idx+1); plt.plot(time_test, Pe, label=name); plt.legend(loc=1); bloch_set.append(b); plt.xlabel('time'); plt.show(); if bloch:; bloch_set[0].show(); bloch_set[1].show(); return result. # to run the test:; test_mesolve(time_test=np.arange(0,100,0.5), show_seq=True, bloch=False); ```. The terminal out put is; ```; ![sequence](https://user-images.githubusercontent.com/41005903/82047831-11976380-96e6-11ea-869d-7278ba1cbeaa.png); ![probability](https://user-images.githubusercontent.com/41005903/82047837-12c89080-96e6-11ea-98d6-0ba6528a50ad.png); ```. **Expected behavior**; As discussed above. **Your Environment**. QuTiP: Quantum Toolbox in Python; Copyright (c) 2011 and later.; A. J. Pitchford, P. D. Nation, R. J. Johansson, A. Grimsmo, and C. Granade. QuTiP Version: 4.3.1; Numpy Version: 1.15.2; Scipy Version: 1.1.0; Cython Version: 0.28.4; Matplotlib Version: 3.0.3; Python Version: 3.5.5; Number of CPUs: 8; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Windows (AMD64); Installation path: D:\anaconda\envs\py3.5\lib\site-packages\qutip. **Additional context**; This issue is the same bug mention by @xlelephant at #1038 , but after trying the tweaking option mentioned by @nwlambert , we still get the same error.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1265:3308,Install,Installed,3308,https://qutip.org,https://github.com/qutip/qutip/issues/1265,2,['Install'],"['Installation', 'Installed']"
Deployability,"ensity matrix. ### Code to Reproduce the Bug. ```shell; import qutip as qtip; import numpy as np. dim = 100 # Small dims don't work. I assume python has some buffer after the array; H = qtip.Qobj(np.identity(dim),dims=[[dim],[dim]]); rho0 = np.random.random([dim**2]); rho0 = qtip.Qobj(rho0.flatten(),dims=[[dim],[dim]]) # This fails; # rho0 = qtip.Qobj(rho0.reshape([dim,dim]),dims=[[dim],[dim]]) # This works; qtip.mesolve(rho0=rho0,H=H,tlist=np.linspace(0,10,1),progress_bar=qtip.ui.EnhancedTextProgressBar()); ```. ### Code Output. ```shell; [ 0% ] Elapsed 0.00s / Remaining 00:00:00:00[1] 3281154 segmentation fault (core dumped); ```. ### Expected Behaviour. The code should exit without failure or throw a python error elaborating on the issue. ### Your Environment. ```shell; QuTiP Version: 4.6.2; Numpy Version: 1.21.4; Scipy Version: 1.6.0; Cython Version: 0.29.21; Matplotlib Version: 3.4.3; Python Version: 3.9.7; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /home/lala5th/.local/lib/python3.9/site-packages/qutip; ```. ### Additional Context. I ran the code through `gdb` to somewhat narrow down the cause of the issue. It seems that `dense2D_to_fastcsr_fmode` causes the segmentation fault, but the parameters passed to it seem fine at first glance, since I expect `ncols = 10000`. While I don't know how useful it is I will put the top of the stack trace (after this the only the call to `mesolve` is relevant in the stack trace). ```; #0 __pyx_pf_5qutip_2cy_9spconvert_6dense2D_to_fastcsr_fmode (__pyx_self=<optimised out>, __pyx_v_ncols=10000, __pyx_v_nrows=<optimised out>, __pyx_v_mat=...) at qutip/cy/spconvert.cpp:9472; #1 __pyx_pw_5qutip_2cy_9spconvert_7dense2D_to_fastcsr_fmode (__pyx_self=<optimised out>, __pyx_args=<optimised out>, __pyx_kwds=<optimised out>) at qutip/cy/spconvert.cpp:9237; #2 0x000000000053a8eb in cfunction_call (func=<built-in function dense2D_to_fastcsr_fmode>,",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1782:1556,Install,Installed,1556,https://qutip.org,https://github.com/qutip/qutip/issues/1782,2,['Install'],"['Installation', 'Installed']"
Deployability,"ents/issues/2375"">#2375</a>)</p>; </li>; </ul>; </li>; <li>; <p>Declare support for Python 3.11 and drop support for Python 3.6 (<a href=""https://redirect.github.com/pygments/pygments/issues/2324"">#2324</a>).</p>; </li>; <li>; <p>Update <code>native</code> style to improve contrast (<a href=""https://redirect.github.com/pygments/pygments/issues/2325"">#2325</a>).</p>; </li>; <li>; <p>Update `github-dark`` style to match latest Primer style (<a href=""https://redirect.github.com/pygments/pygments/issues/2401"">#2401</a>)</p>; </li>; <li>; <p>Revert a change that made guessing lexers based on file names slower; on Python 3.10 and older (<a href=""https://redirect.github.com/pygments/pygments/issues/2328"">#2328</a>).</p>; </li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/pygments/pygments/commit/6c187ad83267be9ce142af3fd5c9e670339dc7aa""><code>6c187ad</code></a> Prepare 2.15 release.</li>; <li><a href=""https://github.com/pygments/pygments/commit/00b9cb022cc9c05784c43c11bd7f73e64008b347""><code>00b9cb0</code></a> Prepare for release.</li>; <li><a href=""https://github.com/pygments/pygments/commit/a0824a45f0bd6c45528fa16132f09dd3570a8234""><code>a0824a4</code></a> Update CHANGES</li>; <li><a href=""https://github.com/pygments/pygments/commit/26f9f6c852846fe579c37fe936a872b68fa686ba""><code>26f9f6c</code></a> Merge pull request <a href=""https://redirect.github.com/pygments/pygments/issues/2406"">#2406</a> from rdbende/fix-fromimport-none</li>; <li><a href=""https://github.com/pygments/pygments/commit/62b1bbbe6e329268eaa4c68f0e3eb8867c450acc""><code>62b1bbb</code></a> Change token of None after from keyword</li>; <li><a href=""https://github.com/pygments/pygments/commit/acee60e4e8dde9ea99fc494740e20b06188791ac""><code>acee60e</code></a> Update CHANGES</li>; <li><a href=""https://github.com/pygments/pygments/commit/eaca69091119e0ac5c97e626ba9e3b21b688c5ed""><code>eaca690</cod",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2201:12028,release,release,12028,https://qutip.org,https://github.com/qutip/qutip/pull/2201,1,['release'],['release']
Deployability,"envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Relea",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:3793,Release,Release,3793,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Relea",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:9630,Release,Release,9630,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Relea",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:15634,Release,Release,15634,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Relea",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:21638,Release,Release,21638,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"ependabot.com/ipython/ipython/issues/13412"">#13412</a> from bnavigator/backport-inspect</li>; <li><a href=""https://github.com/ipython/ipython/commit/4f26796cf368d24edadbb3d62e052e6aa4ddc820""><code>4f26796</code></a> fix xxlimited_35 import name</li>; <li><a href=""https://github.com/ipython/ipython/commit/77ca4a6312374f0659fb6973925e5b696d5dc74e""><code>77ca4a6</code></a> don't run nose-based iptest on py310, only pytest</li>; <li><a href=""https://github.com/ipython/ipython/commit/533e5094aa36b51549cf6a316fc439c6404643c9""><code>533e509</code></a> back to decorator skip</li>; <li>Additional commits viewable in <a href=""https://github.com/ipython/ipython/compare/7.22.0...7.31.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=ipython&package-manager=pip&previous-version=7.22.0&new-version=7.31.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1780:2440,update,updates,2440,https://qutip.org,https://github.com/qutip/qutip/pull/1780,1,['update'],['updates']
Deployability,"er.major == 3 and sys_pyver.minor >= 12:; + # cython3 not supported on python 3.12; + # see https://github.com/qutip/qutip/issues/2293; + print(f""qutip does not support Cython on Python 3.{sys_pyver.minor} (Issue#2293)""); else:; - # Setup pyximport; - import qutip.cy.pyxbuilder as _pyxbuilder; - _pyxbuilder.install(); - del _pyxbuilder, _Cython, _version2int; - qutip.settings.has_cython = True; + from qutip.utilities import _version2int; + _cy_require = ""0.29.20""; + _cy_unsupported = ""3.0.0""; + if _version2int(_Cython.__version__) < _version2int(_cy_require):; + warnings.warn(; + ""Old version of Cython detected: needed {}, got {}.""; + .format(_cy_require, _Cython.__version__); + ); + if _version2int(_Cython.__version__) >= _version2int(_cy_unsupported):; + warnings.warn(; + ""The new version of Cython, (>= 3.0.0) is not supported.""; + .format(_Cython.__version__); + ); + else:; + # Setup pyximport; + import qutip.cy.pyxbuilder as _pyxbuilder; + _pyxbuilder.install(); + del _pyxbuilder, _Cython, _version2int; + qutip.settings.has_cython = True; ; ; # -----------------------------------------------------------------------------; Index: qutip/qutip/tests/test_brmesolve_td.py; ===================================================================; --- qutip.orig/qutip/tests/test_brmesolve_td.py	2024-01-16 03:52:59.780085342 +0100; +++ qutip/qutip/tests/test_brmesolve_td.py	2024-01-16 03:52:59.780085342 +0100; @@ -148,7 +148,8 @@; brme = qutip.brmesolve(H, psi0, times, a_ops, e_ops=[a.dag()*a]); assert np.mean(np.abs(brme.expect[0] - exact) / exact) < 1e-5; ; -; +@pytest.mark.skipif(not qutip.settings.has_cython,; + reason=""cython support is not available""); def test_time_dependent_spline_in_c_ops():; N = 10; a = qutip.destroy(N); @@ -232,6 +233,8 @@; [(a, a.dag()), (spectrum, '1', '1')]]); ; ; +@pytest.mark.skipif(not qutip.settings.has_cython,; + reason=""cython support is not available""); @pytest.mark.parametrize(""collapse_operators"", [; _2_tuple_split,; pytest.param(_4_tup",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2293#issuecomment-1893522543:1991,install,install,1991,https://qutip.org,https://github.com/qutip/qutip/issues/2293#issuecomment-1893522543,1,['install'],['install']
Deployability,"es in each respective case. The reason the tests are a little bit slow compared to, e.g., the tests in `TestMESolveTDDecay` is the computation of the fidelity of the states at all the different times. If you think the tests are too slow, i can change them, and for example only check the fidelity of the final state. As a side note: As I wrote this new functionality, I also ran some simple tests comparing a pure python implementation of the right hand side for `_mesolve_const` to the cython implementation (I did this because I was considering how much cython code I had to write, or if a pure python implementation of the new functionality would suffice). I actually found that a pure python implementation was as fast (or maybe slightly _faster_) than the cython implementation. The pure python implementation of the right hand side is simply (see lines 767-769 of mesolve.py). ``` python; def _ode_rho_test(t, rho, data):; # for performance comparison of cython code; return data*(np.transpose(rho)); ```. Here is a plot of the performance compare to the standard cython implementation for a very simple test. The benchmark was a damped-cavity JC-model with Hilbert space dimension 4 for the cavity, integrated up to ""integration time"". ""run time"" is the real run time on my laptop. ![benchmark](https://cloud.githubusercontent.com/assets/2354542/11615553/48fe8604-9c32-11e5-83b9-2de366bd3cef.png). Since there is no big difference between the cython implementation and the pure python implementation (if anything, the pure python implementation is slightly faster), maybe it makes sense to replace the call to `cy_ode_rhs` with a call to `_ode_rhs_test` (see lines 744 to 747 in mesolve.py)? This makes the code a tiny bit easier to read. Of course, this was a single, very simplistic test. Sorry about all the merge commits. I'm still learning good workflow for this type of feature branch. Will use rebasing more in the future. Let me know if you have any questions about the implementation.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/404:1694,integrat,integrated,1694,https://qutip.org,https://github.com/qutip/qutip/pull/404,2,['integrat'],"['integrated', 'integration']"
Deployability,"es/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=10.0.1&new-version=10.2.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/qutip/qutip/network/alerts). </details>",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2302:16818,upgrade,upgrade,16818,https://qutip.org,https://github.com/qutip/qutip/pull/2302,3,['upgrade'],['upgrade']
Deployability,"es/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=10.2.0&new-version=10.3.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/qutip/qutip/network/alerts). </details>",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2381:16794,upgrade,upgrade,16794,https://qutip.org,https://github.com/qutip/qutip/pull/2381,3,['upgrade'],['upgrade']
Deployability,"et yesterday (#2500), which was kindly addressed, recommending that I uninstall cvxpy to remove conflict. I did that and was able to import qutip.; I then ran the duplicate script, but got a different result from 3 years ago. If you compare the output at block 23, you'll see it deviates significantly from the corresponding block in the old script. I have changed nothing in hte duplicated script, other than uninstalling cvxpy to make it run.; I then reinstalled cvxpy with upgrade and then qutip again. This time I can still import qutip, but with a warning. I ran the script with no problem, but still got the same deviated behavior from 3 years ago. [codes.zip](https://github.com/user-attachments/files/16367713/codes.zip). The 3-year-old script is included only to show the previous results. It is not meant to be run. I suspect if you run it with your likely different setup, you might get the same deviation as I did, or even yet another different deviation. I cannot recall the state of installation I had from 3 years ago. I believe I did it through conda. I just realized that I cannot include qutip scripts with this report. I included a zipped folder containing these two files. Please let me know if it didn'tgo through. Thank you! . ### Code to Reproduce the Bug. ```shell; Old code in ""Ikonen First Shot New Unitary Trans States 2 level Full H Gated Test 2 - Copy.ipynb""; New code in ""Test.ipynb""; Both attached.; These two codes are exactly identical. Only difference is in the qutip installation, one from 3 years ago and one just completed.; ```. ### Code Output. ```shell; Output in block 23 in the new code is significantly different from that in block 215 in the old code.; ```. ### Expected Behaviour. Expected qutip to produce same results on identical codes 3 years apart. ### Your Environment. ```shell; QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Sh",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2501:1396,install,installation,1396,https://qutip.org,https://github.com/qutip/qutip/issues/2501,1,['install'],['installation']
Deployability,"ex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs1",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:6350,Release,Release,6350,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"ex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_pw_8rhs14880_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_tp' may ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:6921,Release,Release,6921,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"ex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs1",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:12103,Release,Release,12103,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"ex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_pw_8rhs14881_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_tp' may ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:12674,Release,Release,12674,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"ex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs1",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:18021,Release,Release,18021,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"ex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_pw_8rhs14882_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_tp' may ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:18592,Release,Release,18592,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"ex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs1",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:23939,Release,Release,23939,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"ex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_pw_8rhs14883_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_tp' may ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:24510,Release,Release,24510,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"ex\rhs14880.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: format '%s' expects argument o",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:6228,Release,Release,6228,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"ex\rhs14881.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: format '%s' expects argument o",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:12065,Release,Release,12065,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"ex\rhs14882.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: format '%s' expects argument o",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:18069,Release,Release,18069,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"ex\rhs14883.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: format '%s' expects argument o",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:24073,Release,Release,24073,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"f""><code>d6ebc4a</code></a> v2.32.0</li>; <li><a href=""https://github.com/psf/requests/commit/9a40d1277807f0a4f26c9a37eea8ec90faa8aadc""><code>9a40d12</code></a> Avoid reloading root certificates to improve concurrent performance (<a href=""https://redirect.github.com/psf/requests/issues/6667"">#6667</a>)</li>; <li><a href=""https://github.com/psf/requests/commit/0c030f78d24f29a459dbf39b28b4cc765e2153d7""><code>0c030f7</code></a> Merge pull request <a href=""https://redirect.github.com/psf/requests/issues/6702"">#6702</a> from nateprewitt/no_char_detection</li>; <li><a href=""https://github.com/psf/requests/commit/555b870eb19d497ddb67042645420083ec8efb02""><code>555b870</code></a> Allow character detection dependencies to be optional in post-packaging steps</li>; <li><a href=""https://github.com/psf/requests/commit/d6dded3f00afcf56a7e866cb0732799045301eb0""><code>d6dded3</code></a> Merge pull request <a href=""https://redirect.github.com/psf/requests/issues/6700"">#6700</a> from franekmagiera/update-redirect-to-invalid-uri-test</li>; <li><a href=""https://github.com/psf/requests/commit/bf24b7d8d17da34be720c19e5978b2d3bf94a53b""><code>bf24b7d</code></a> Use an invalid URI that will not cause httpbin to throw 500</li>; <li><a href=""https://github.com/psf/requests/commit/2d5f54779ad174035c5437b3b3c1146b0eaf60fe""><code>2d5f547</code></a> Pin 3.8 and 3.9 runners back to macos-13 (<a href=""https://redirect.github.com/psf/requests/issues/6688"">#6688</a>)</li>; <li><a href=""https://github.com/psf/requests/commit/f1bb07d39b74d6444e333879f8b8a3d9dd4d2311""><code>f1bb07d</code></a> Merge pull request <a href=""https://redirect.github.com/psf/requests/issues/6687"">#6687</a> from psf/dependabot/github_actions/github/codeql-act...</li>; <li><a href=""https://github.com/psf/requests/commit/60047ade64b0b882cbc94e047198818ab580911e""><code>60047ad</code></a> Bump github/codeql-action from 3.24.0 to 3.25.0</li>; <li><a href=""https://github.com/psf/requests/commit/31ebb8102c00f8cf8b396a6356743cca4362e07b",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2434:8605,update,update-redirect-to-invalid-uri-test,8605,https://qutip.org,https://github.com/qutip/qutip/pull/2434,1,['update'],['update-redirect-to-invalid-uri-test']
Deployability,fail earlier when installing without numpy,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1316:18,install,installing,18,https://qutip.org,https://github.com/qutip/qutip/pull/1316,1,['install'],['installing']
Deployability,fix #2001. **Description**; - added `try: ...except:` in import of `Cython`; - fixed `version_table` to work without Cython installed. **Behaviour**; `qutip.ipynbtools.version_table()` can be called without Cython installed,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2110:124,install,installed,124,https://qutip.org,https://github.com/qutip/qutip/pull/2110,2,['install'],['installed']
Deployability,fixed and updated some links to docstrings,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/971:10,update,updated,10,https://qutip.org,https://github.com/qutip/qutip/pull/971,1,['update'],['updated']
Deployability,fixes #833: updated docstring,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/834:12,update,updated,12,https://qutip.org,https://github.com/qutip/qutip/pull/834,1,['update'],['updated']
Deployability,"for oscillator in coherent initial state ... ok; > correlation: comparing me and es for oscillator in coherent initial state ... ok; > correlation: comparing me and mc for driven oscillator in ground state ... ERROR; > correlation: legacy me and es for oscillator in steady-state ... ok; > correlation: comparing me and es for oscillator in steady-state ... ok; > correlation: legacy spectrum from es and pi methods ... ok; > correlation: comparing spectrum from es and fft methods ... ok; > correlation: comparing spectrum from es and pi methods ... ok; > correlation: comparing TLS emission correlations (str-list td format) ... In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:3127,Release,Release,3127,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"for plotting**; In [the code](http://qutip.org/docs/4.0.2/modules/qutip/bloch.html) for the add_points function it is written that. ```; meth : str {'s', 'm', 'l'}; Type of points to plot, use 'm' for multicolored, 'l' for points; connected with a line.; ```. First of all, it is not true that `meth = 'l'` gives points connected by lines (which in pyplot would be done with the `linestyle='-'` and `marker='o'` parameters) but it gives lines without the point markers (`linestyle='-'` and `marker='None'` in pyplot). But this is not important since it is just a comment on a function. The thing that matters is that it would be great if we had a `b.linestyle` and `b.marker` methods for the Bloch sphere instead of a `meth` parameter which can only show either points or lines without them, just like/similar to the [line styles](https://matplotlib.org/3.1.1/gallery/lines_bars_and_markers/linestyles.html) and [marker styles](https://matplotlib.org/3.1.1/api/markers_api.html) of pyplot. Or any other idea that could allow the user to create more complicated graphs on the Bloch sphere. _______________________________________________________________. **3) Adding edge color parameter for plotted points**; The `b.point_color` method changes the color of the points but it doen't change the edge color of those marker points. This is important since right now one can only choose between two restrictive options; either we plot the points with large sizes ([like in this image](https://i.imgur.com/pGhU55e.png)) so the chosen color can be seen, or we have to see the dots as black points if we chose a smaller size for them ([like in thsi image](https://i.imgur.com/5Ql5sKM.png)). What I mean is that if I want to plot small points in red I just can't do it, since the black edge will dominate. Just like in pyplot, it would be good to have an option to toggle the edge or choose the edge color. Or if that is too complicated, maybe you could make the marker edge color the same as `b.point_color`.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1105:3125,toggle,toggle,3125,https://qutip.org,https://github.com/qutip/qutip/issues/1105,1,['toggle'],['toggle']
Deployability,"fo’ to show INTEL MKL, but the ‘INTEL MKL Ext’ flag remains False. It is unclear to me how I should obtain this result, could anyone help me with this issue?. The underlying reason for wanting to have MKL is that it allowed me in the past (on the same machine but with a different conda environment I no longer have access to) to calculate the steady states of much larger Liouvillians than I am now able to. I am unfortunately unable to reproduce this environment. Below you can find the outcomes of various installation processes, each in a new conda environment:. **Attempt 1a:** ; Conda install mkl; conda install numpy; conda install scipy; conda install conda-forge::qutip; **Results:** ; QuTiP Version: 	5.0.3; Numpy Version: 	2.0.0; Scipy Version: 	1.14.0; Cython Version: 	None; Matplotlib Version: 	None; Python Version: 	3.12.4; Number of CPUs: 	12; BLAS Info: 		Generic; INTEL MKL Ext: 	False; Platform Info: 	Windows (AMD64). **Attempt 1b:**; Conda install mkl; conda install scipy ; conda install conda-forge::qutip; **Results:**; QuTiP Version: 	5.0.3; Numpy Version: 	1.26.4; Scipy Version: 	 1.10.1; Cython Version: 	None; Matplotlib Version: 	None; Python Version: 	3.10.14; Number of CPUs: 	12; BLAS Info: 		INTEL MKL; INTEL MKL Ext: 	False; Platform Info: 	Windows (AMD64). **Attempt 1c:**; Conda install mkl; conda install conda-forge::qutip; **Results**; QuTiP Version: 5.0.3; Numpy Version: 2.0.0; Scipy Version: 1.14.0; Cython Version: None; Matplotlib Version: None; Python Version: 3.12.4; Number of CPUs: 12; BLAS Info: Generic; INTEL MKL Ext: False; Platform Info: Windows (AMD64). **Attempt 2:** ; Conda install conda-forge::qutip; **Results**: obtained errors when importing qutip (ImportError: DLL load failed while importing _arpack: The specified module could not be found.). **Attempt 2b:**; Conda install scipy; conda install conda-forge::qutip; **Results:**; QuTiP Version: 5.0.3; Numpy Version: 1.26.4; Scipy Version: 1.10.1; Cython Version: None; Matplotlib Versi",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2496:1304,install,install,1304,https://qutip.org,https://github.com/qutip/qutip/issues/2496,3,['install'],['install']
Deployability,"fsa.py is the file analogous to [grape.py](https://github.com/qutip/qutip/blob/master/qutip/control/grape.py). ; tca.py is the example file (almost entirely based on this [notebook](https://github.com/qutip/qutip-notebooks/blob/master/examples/control-grape-cnot.ipynb) ) where I run it for a closed quantum system (as in the aforementioned [notebook](https://github.com/qutip/qutip-notebooks/blob/master/examples/control-grape-cnot.ipynb)).; otca.py, otca1.py and other otca*.py are files where I run them for various collapse operators.; tej_plotter.py is just a small python script file to save graphical representation of the final unitaries. > The explanation of the main idea is [here](https://www.dropbox.com/s/ris74oedclzm7vx/Qutip_open_grape.pdf?dl=0). An updated version will be found [here](https://www.overleaf.com/read/bdtqzhgtdkdq). file | output folder | collapse operator; ----|----------------|--------------------; tca.py | copA0 | none; otca.py| ocopA0 | $x\otimes y$; otca1.py| o1copA0 | $x\otimes y$, $y\otimes z$; otca2.py| o2copA0 | $y\otimes z$; otca3.py| o3copA0 | $z \otimes x $; otca4.py| o4copA0 | $x \otimes y $, $ z \otimes x$; otca5.py| o5copA0 | $z \otimes x $, $ y \otimes z$; otca6.py| o6copA0 | $ x \otimes y $, $ y \otimes z$, $ z \otimes x$",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1031#issuecomment-506789010:765,update,updated,765,https://qutip.org,https://github.com/qutip/qutip/issues/1031#issuecomment-506789010,1,['update'],['updated']
Deployability,"function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_pw_8rhs14880_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:8964,Release,Release,8964,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"g Description. It seems that the measurement in `dev.major` does not truncate the probabilities correctly. It is probably caused by some changes in the last month and leads to [a test failing in `qutip-qip`](https://github.com/qutip/qutip-qip/actions/runs/3610116105/jobs/6083718885). The last test running was 24 days ago and was successful. I don't see any code in the measurement that manually tidies up the state. In `qutip-4.7` it is also directly compared to `0`.; https://github.com/qutip/qutip/blob/5a47ee3b8dd817d4c6c36cc84a952c41305cdcb5/qutip/measurement.py#L101-L108. So my guess is that, in `dev.major`, the final states fail to be automatically truncated. ### Code to Reproduce the Bug. ```python; from qutip.measurement import measurement_statistics; import qutip; measurement_ops = [qutip.basis(2,0), qutip.basis(2,1)]; state = qutip.Qobj([[1-1.e-12], [1.e-12]]); print(measurement_statistics(state, measurement_ops)); ```. ### Code Output; dev.major; --------; ```shell. ([Quantum object: dims=[[2], [1]], shape=(2, 1), type='ket'; Qobj data =; [[1.]; [0.]], Quantum object: dims=[[2], [1]], shape=(2, 1), type='ket'; Qobj data =; [[0.]; [1.]]], [0.999999999998, 1e-24]); ```. qutip4.7; -------; ```; ([Quantum object: dims = [[2], [1]], shape = (2, 1), type = ket; Qobj data =; [[1.]; [0.]], None], [0.999999999998, 0.0]); ```. ### Expected Behaviour. They are expected to behave the same. ### Your Environment. ```shell; QuTiP Version: 5.0.0.dev0+2ef8847; Numpy Version: 1.23.5; Scipy Version: 1.9.3; Cython Version: 0.29.32; Matplotlib Version: 3.6.2; Python Version: 3.10.0; Number of CPUs: 12; BLAS Info: OPENBLAS; INTEL MKL Ext: False; Platform Info: Windows (AMD64). And. QuTiP Version: 4.7.0; Numpy Version: 1.22.4; Scipy Version: 1.7.3; Cython Version: 0.29.30; Matplotlib Version: 3.5.2; Python Version: 3.9.0; Number of CPUs: 12; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Windows (AMD64); ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2029:1892,Install,Installed,1892,https://qutip.org,https://github.com/qutip/qutip/issues/2029,1,['Install'],['Installed']
Deployability,"g=None, dims=None,; copy=True, superrep=None, isherm=None, isunitary=None):. ```; so the arguments `inpt` and `shape` aren't recognized. ### Code to Reproduce the Bug. ```shell; qt.Qobj(inpt=np.random.randn(4,4),dims=[[2,2],[2,2]]); ```. ### Code Output. ```shell; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); Cell In[10], line 1; ----> 1 qt.Qobj(inpt=np.random.randn(4,4),dims=[[2,2],[2,2]]). TypeError: Qobj.__init__() got an unexpected keyword argument 'inpt'; ```. ### Expected Behaviour. If I hover on `qt.Qobj` in VS Code, the signature actually shows `inpt` and not `arg`. It seems like there is some inconsistency in the name of this keyword? No error is expected. ### Your Environment. ```shell; QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman, Simon Cross and Asier Galicia.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 5.0.2; Numpy Version: 1.26.4; Scipy Version: 1.13.0; Cython Version: None; Matplotlib Version: 3.8.4; Python Version: 3.12.3; Number of CPUs: 10; BLAS Info: Generic; INTEL MKL Ext: False; Platform Info: Darwin (arm64); Installation path: /Users/joey/miniconda3/envs/qutip5/lib/python3.12/site-packages/qutip; ================================================================================; Please cite QuTiP in your publication.; ================================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2480:2514,Install,Installation,2514,https://qutip.org,https://github.com/qutip/qutip/issues/2480,1,['Install'],['Installation']
Deployability,"generic `Options` class that accept any keys used by integrator or solver and can be converted to any specific solver options:; ```; Options(futur_cupy_ode_specific_options=True) # Will work; Options(not_an_options=True) # Error; # For most solver:; __solve(..., opt=Options()); ```; Once options are associated to a solver, they are frozen:; ```; opt = SeOptions(); solver = SeSolver(..., opt); opt['...'] = ... # Ok, but solver has a copy and is unaffected.; solver.options['...'] = ... # Error; solver.options = opt; ```; This is because changing options without the solver knowing will not take effect. I removed saving / storing options for now. It was mostly used to store openmp threshold, which is not supported.; I also propose to write the stored options as python code when we restore it. (`options = eval(repr(options))`, we may have some issue with circular import if called from `__init__.py`, but we can just write the `repr` of the `dict`.). While it's working fine as is, there are few point to discuss:; - Freezing options associated to solver work fine, but I see 2 alternatives:; - Options know they are used by a solver and inform it when modified. More complex but give the image that it just work. ; - All options instance are read-only. To change a key, you create a new options. Simple for us. To modify an existing options we could make it callable: `updated_options = old_options(atol=1e-5)`.; - Passing bad options keys or wrong options types (`mesolve(..., SeOptions)`) raise error, should we be less strict?; - Should we flatten SolverOptions.ode: ; ```; opt = SolverOptions(method='lsoda'); opt['progress_bar'] = False; opt['max_order_ns'] = 10; ```; And associated to it, where do we store default for integrators, per solver or per integrator.; - Do we add more sanity check to options values, or do we move `use_cython` to setting and remove the feature?. **Related PR**; It will cause conflict with #1710 and #1644. **Changelog**; Options classes using inheritance.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1812:4023,integrat,integrators,4023,https://qutip.org,https://github.com/qutip/qutip/pull/1812,2,['integrat'],"['integrator', 'integrators']"
Deployability,"ges in `matplotlib` the current implementation is deprecated and will return errors in a few minor releases. We could quickly fix this by passing `shading='auto'` to the call of `ax.pcolor()` in the [visualization.py](https://github.com/qutip/qutip/blob/82c6704c6fea8a2801492865ad1ef7c1d73c8840/qutip/visualization.py#L1313). However, this raises another UserWarning that the center points are not monotonically sorted. The cleanest way to fix this bug would be to pass the edges of the quadrilaterals to `pcolor()`. But we can not calculate them exactly from the given points in `theta, phi`. Hence, we would need to redesign the interface to this function and to related functions like `plot_spin_distribution_3d` and `spin_q_function`. ### Code to Reproduce the Bug. ```shell; import qutip as qt; import numpy as np; import matplotlib.pyplot as plt. j = 5; psi = qt.spin_coherent(j, np.random.rand() * np.pi, np.random.rand() * 2 * np.pi); rho = qt.ket2dm(psi). theta = np.linspace(0, np.pi, 50); phi = np.linspace(0, 2 * np.pi, 50). Q, THETA, PHI = qt.spin_q_function(psi, theta, phi); fig, ax = qt.plot_spin_distribution_2d(Q, THETA, PHI); plt.show(); ```. ### Code Output. ```shell; MatplotlibDeprecationWarning: shading='flat' when X and Y have the same dimensions as C is deprecated since 3.3. Either specify the corners of the quadrilaterals with X and Y, or pass shading='auto', 'nearest' or 'gouraud', or set rcParams['pcolor.shading']. This will become an error two minor releases later.; ax.pcolor(X, Y, P.real, cmap=cmap); ```. ### Expected Behaviour. I expect the same plot, but without the warning which becomes an error in the future. ### Your Environment. ```shell; QuTiP Version: 5.0.0.dev0+67add84; Numpy Version: 1.21.0; Scipy Version: 1.6.2; Cython Version: 0.29.23; Matplotlib Version: 3.3.4; Python Version: 3.8.10; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1973:1778,release,releases,1778,https://qutip.org,https://github.com/qutip/qutip/issues/1973,2,"['Install', 'release']","['Installed', 'releases']"
Deployability,"ges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=9.4.0&new-version=10.0.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/qutip/qutip/network/alerts). </details>",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2237:14566,upgrade,upgrade,14566,https://qutip.org,https://github.com/qutip/qutip/pull/2237,3,['upgrade'],['upgrade']
Deployability,"h higher, and they perform a fair bit of setup/input handling, which comes at the price of some overhead, but which is negligible compared to the runtime cost for most meaningfully large systems. I'd then like to state that; - *I have never suggested to insert a mechanism to insert implicit conversion in the low-level operations.* ; - In this RFC in no way have I proposed to implement implicit conversion anywhere else then were is already done in qutip itself. All I stated was that `I played around with auto-converting input hamiltonians and jump operators in qutip.sesolve and mesolve to Qobj if they are not Qobj but support the interface. That is even nicer because we would get to use all of qutip solvers out of the box with our objects.`. ; - So implicitly I do have stated that I'd like to see implicit conversion being performed on high-level methods. I do see benefits for the whole ecosystem if we can start integrating more: qutip already has very advanced and feature-complete solvers, there are large benefits for other packages to exploit them without having to wrap them or ask users to write more complicated code. It means that all benefits and bug-fixes to qutip are instantly available to users of other packages too that rely on it. And I think that calling a conversion method at the beginning, which most of the time will do nothing will just be a tiny drop in the bucket of the overhead of those `large` functions. However, I don't want to argue that right now. All my proposal was about was having a way to play well with your `Qobj` constructor.; It seems to me you were eventually favourable to this, so I propose we focus the discussion only on this point, and leave aside implicit or explicit conversion discussions. . I'll gladly open another issue to discuss implicit conversion, if you want, or we could organise a small round table among a bunch of developers to talk about this on skype, but for now, all i'm asking, is to agree on the design of an interface to ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-913661687:2472,integrat,integrating,2472,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-913661687,1,['integrat'],['integrating']
Deployability,"h/loops.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/umath/ufunc_type_resolution.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/common/array_assign.c; clang: numpy/core/src/common/ucsnarrow.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/npymath/ieee754.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: /private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-install-cp5z29tf/numpy_1458b1f38a5449d18aa77b5bb31c63d1/numpy/_build_utils/src/apple_sgemv_fix.c; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/common/npy_cpu_features.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: er",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:67866,install,install-,67866,https://qutip.org,https://github.com/qutip/qutip/issues/1740,1,['install'],['install-']
Deployability,"han,. I can't modify the Wiki page because I'm not a maintainer of QuTiP. And it seems that there is no way to make a PR to Wiki. I can also send you the markdown source code per email like this, but I’m not sure if it works as I expected. The following is the markdown source code:. -----------------------------------; ## 1. Error mitigation in QuTiP; From the QuTiP 4.5 release, the qutip.qip module now contains the noisy quantum circuit simulator (which was a GSoC project) providing enhanced features for a pulse-level description of quantum circuits and noise models. A new class `Processor` and several subclasses are added to represent different platforms for quantum computing. They can transfer a quantum circuit into the corresponding control sequence and simulate the dynamics with QuTiP solvers. Different noise models can be added to `qutip.qip.noise` to simulate noise in a quantum device. This module is still young and many features can be improved, including new device models, new noise models and integration with the existing general framework for quantum circuits (`qutip.qip.circuit`). There are also possible applications such as error mitigation techniques [1-3]. The tutorial notebooks can be found at http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM conference may help you get an overview (https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the Github Project page for a collection of related issues and ongoing Pull Requests. ### Expected outcomes; - More devices defined in the `qutip.qip.device` module. At the moment, we have two models: spin chain and cavity QED. We would like to include some other commonly used planform such as Superconducting system, Ion trap system or silicon system. Each model will need a new set of control hamiltonian and a compiler that find the control pulse of a quantum gate. This part is gonna involve some physics and study of commonly used hardware platforms. The related code can be found in `",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1184#issuecomment-590737940:1024,integrat,integration,1024,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590737940,1,['integrat'],['integration']
Deployability,"handle the multiple dispatch over potentially different data types of the two inputs. I would imagine that a better form of organisation for this sort of routine, which will be able to handle arbitrary tensor-network operations, will end up being made up of two components:; 1. a `Dispatcher` version of something akin to `einsum`, with a couple of limitations; 2. a high-level wrapper function to handle the specific case of local multiplication, which examines the dimensions and target specifiers to produce the input to the `einsum`-like function, then calls the `Dispatcher` with this information. I think this form would likely be preferable for several reasons:; 1. it will allow arbitrary mixing of different data types (`CSR` complete space and `Dense` operator, or both `CSR`, or whatever), with the allowed conversions respecting the global dispatcher rules, not having this function use a different, special configuration; 2. it will mean that the function can also be implemented by plug-in data types (TF/CuPy/etc), installed separately to QuTiP; 3. it will be more general, and easier to maintain; the current `subsystem_apply`, `partial_transpose`, `ptrace`, `tensor_contract` and this can all become special cases of this backing `einsum`-like routine.; 4. after we've implemented new dimensions objects, we'll be able to use a more standardised description of how to refer to individual subspaces of a Hilbert space, which will provide a more consistent UX across the library. This is particularly important if we want this to work well with superoperators. Really, thank you very much for making the PR - I really am excited to see people with an interest in the new data layer! I'm sorry that I took quite so long to respond properly to it, and that when I have, I've ended up being somewhat against the implementaton as it is. I would be really interested in pursuing this, likely after the initial release of 5.0, but right now I think we might need to get our ducks in a row ab",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1405#issuecomment-864073566:3486,install,installed,3486,https://qutip.org,https://github.com/qutip/qutip/pull/1405#issuecomment-864073566,1,['install'],['installed']
Deployability,"he initial floquet modes, computing the propagator over one period, then using these to compute at other time, recomputing the propagator up to that time. When the modes at multiple times were needed, we could compute a list of them over one period using `floquet_modes_table`, but at least 2 computations over a period were needed. With the and the `Propagator` memoize capacities added in v5, only one computation of the propagator is required. Also with the table computation of v4, if a mode was not included in the table, the closest one was used. `fmesolve ` and `fsesolve` computed 100 slices over the period. It did not used the values in `tlist` and caused artifacts in the result. With `FloquetBasis`, the mode are always computed at the exact time. . I left the v4's functions with warnings. The construction of the floquet tensor was done using 2 functions: `floquet_master_equation_rates` which returned 4 tensors and `floquet_master_equation_tensor`. I added `floquet_tensor` which computed the tensor in one call and split `floquet_master_equation_rates` in 4 functions, one for each of the outputs. Floquet, like `brmesolve`, need a function for the noise power spectrum. Unlike `brmesolve`, string are not supported, only functions. We should have them match, but supporting string is quite heavy since coefficient are not a great fit. `fsesolve` have been rewritten without the class interface. As an integrator, the floquet method has no advantage since the propagator much be computed using another method. `fmesolve` work similarly to other solver. The `e_ops` are always in the laboratory basis. The result states are also in the laboratory basis. The option `""store_floquet_states""` is used to store the states in the floquet basis in `result.floquet_states`. In v4, there it an option for the environment temperature, but no tests for it. I kept the feature, but it's still untested.; Also all tests for `fmesolve` are either for constant systems or without collapse operator.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2034:1734,integrat,integrator,1734,https://qutip.org,https://github.com/qutip/qutip/pull/2034,1,['integrat'],['integrator']
Deployability,"heir projects, beginning in priority from the lead developers. . ## Other Funding Schemes; Similarly, I have been writing NumFOCUS [small development grants](https://numfocus.org/blog/fall-2018-open-source-development-grants), which have a different goal but can be set up similarly. Also, in the future we may apply again to [Google Season of Docs](https://developers.google.com/season-of-docs). . ## Future Opportunities; Several senior researchers and team leaders have aired the desire to contribute to the project more actively. Setting up a space where they can propose projects, even on their own funding resources (most probably together with the development of research projects), in coordination with the lead development team, could help foster development in a more sustainable way. . ## Proposal; I propose to help sustain available projects in a more structural way than what is done now. This is an example of a what we could call a **QEP, or ""QuTiP Enhancement Proposal"".**. - One thing that could be done is to simply expand the existing Wiki. The downside of taking only this action is that only organization members can modify the wiki. So this could work, but mainly as a more static and cleaner staple. . - I propose to integrate the Wiki with Issues that contain the projects, adding a `projects` (or similar) label. This is in the spirit also of other large quantum open source projects such as Qiskit, which has even an ad-hoc `qiskit-community` repository, https://github.com/qiskit-community/. In QuTiP case, we could create a new repository similar to the notebooks one, e.g., https://github.com/qutip/qutip-community/. The downside is that in general the division is subfolders is not advised for easiness of maintainability. So one could just open issues with open projects. Of course, for physics questions, sometimes spilling in to PRs and Issues, qutip already has a Google Group forum, where I advise that this new capabilities may be advertised with a proper thread.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1132:2660,integrat,integrate,2660,https://qutip.org,https://github.com/qutip/qutip/issues/1132,1,['integrat'],['integrate']
Deployability,hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/expect.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/matmul.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/mul.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg/cython_blas.pxd.; Compiling qutip/core/data/dia.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/properties.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/tidyup.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/integrator/explicit_rk.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/inner.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/cy/qobjevo.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/kron.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/libcpp/utility.pxd.; Compiling qutip/core/data/base.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/csr.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/permute.pyx because it depends on /tmp/pip-build-e,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2440:5853,integrat,integrator,5853,https://qutip.org,https://github.com/qutip/qutip/issues/2440,1,['integrat'],['integrator']
Deployability,"href=""https://github.com/pallets/jinja/commit/a7863ba9d3521f1450f821119c50d19d7ecea329""><code>a7863ba</code></a> add ghsa links</li>; <li><a href=""https://github.com/pallets/jinja/commit/b5c98e78c2ee7d2bf0aa06d29ed9bf7082de9cf4""><code>b5c98e7</code></a> start version 3.1.4</li>; <li><a href=""https://github.com/pallets/jinja/commit/da3a9f0b804199845fcb76f2e08748bdaeba93ee""><code>da3a9f0</code></a> update project files (<a href=""https://redirect.github.com/pallets/jinja/issues/1968"">#1968</a>)</li>; <li><a href=""https://github.com/pallets/jinja/commit/0ee5eb41d1a2d7d9a05a02dc26dd70e63aaaeeb1""><code>0ee5eb4</code></a> satisfy formatter, linter, and strict mypy</li>; <li><a href=""https://github.com/pallets/jinja/commit/20477c63575175196bfc8103f223cc9f5642595d""><code>20477c6</code></a> update project files (<a href=""https://redirect.github.com/pallets/jinja/issues/5457"">#5457</a>)</li>; <li><a href=""https://github.com/pallets/jinja/commit/e491223739dedbb1f4fc6a71340c1484e149d947""><code>e491223</code></a> update pyyaml dev dependency</li>; <li><a href=""https://github.com/pallets/jinja/commit/36f98854c721f98ba103f97f65a8a098da5af0d7""><code>36f9885</code></a> fix pr link</li>; <li>Additional commits viewable in <a href=""https://github.com/pallets/jinja/compare/3.1.3...3.1.4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=jinja2&package-manager=pip&previous-version=3.1.3&new-version=3.1.4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot a",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2418:3277,update,update,3277,https://qutip.org,https://github.com/qutip/qutip/pull/2418,1,['update'],['update']
Deployability,"href=""https://github.com/python-pillow/Pillow/commit/c827f3b30f50bf04fd65daeeba6bbfd56fc7b50e""><code>c827f3b</code></a> Merge pull request <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7246"">#7246</a> from radarhere/deallocate</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/39a3b1d83edcf826c3864e26bedff5b4e4dd331b""><code>39a3b1d</code></a> Fixed deallocating mask images</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/8c1dc819fd91471825da01976ac0e0bc8789590f""><code>8c1dc81</code></a> Update CHANGES.rst [ci skip]</li>; <li>Additional commits viewable in <a href=""https://github.com/python-pillow/Pillow/compare/9.4.0...10.0.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=9.4.0&new-version=10.0.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2237:13289,update,updates,13289,https://qutip.org,https://github.com/qutip/qutip/pull/2237,1,['update'],['updates']
Deployability,"href=""https://redirect.github.com/python-pillow/Pillow/issues/7555"">#7555</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fixed closing file pointer with olefile 0.47 <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7594"">#7594</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>ruff: Minor optimizations of list comprehensions, x in set, etc. <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7524"">#7524</a> [<a href=""https://github.com/cclauss""><code>@​cclauss</code></a>]</li>; <li>Build Windows wheels using cibuildwheel <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7580"">#7580</a> [<a href=""https://github.com/nulano""><code>@​nulano</code></a>]</li>; <li>Raise ValueError when TrueType font size is zero or less <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7584"">#7584</a> [<a href=""https://github.com/akx""><code>@​akx</code></a>]</li>; <li>Install cibuildwheel from requirements file <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7581"">#7581</a> [<a href=""https://github.com/hugovk""><code>@​hugovk</code></a>]</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst"">pillow's changelog</a>.</em></p>; <blockquote>; <h2>10.2.0 (2024-01-02)</h2>; <ul>; <li>; <p>Add <code>keep_rgb</code> option when saving JPEG to prevent conversion of RGB colorspace <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7553"">#7553</a>; [bgilbert, radarhere]</p>; </li>; <li>; <p>Trim glyph size in ImageFont.getmask() <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7669"">#7669</a>, <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7672"">#7672</a>; [radarhere, nulano]</p>; </li>; <li>; <p>Deprecate IptcImagePlugin helpers <a href=""https:",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2302:9424,Install,Install,9424,https://qutip.org,https://github.com/qutip/qutip/pull/2302,1,['Install'],['Install']
Deployability,"hs this.; > ------------------------------; > You can view, comment on, or merge this pull request online at:; >; > https://github.com/qutip/qutip/pull/629; > Commit Summary; >; > - Merge remote-tracking branch 'qutip/master'; > - Merge remote-tracking branch 'qutip/master'; > - Merge remote-tracking branch 'qutip/master'; > - Merge remote-tracking branch 'qutip/master'; > - Merge remote-tracking branch 'qutip/master'; > - Merge remote-tracking branch 'qutip/master'; > - Merge remote-tracking branch 'qutip/master'; > - Merge remote-tracking branch 'qutip/master'; > - Merge remote-tracking branch 'qutip/master'; > - Merge remote-tracking branch 'qutip/master'; > - Merge remote-tracking branch 'qutip/master'; > - Merge remote-tracking branch 'qutip/master'; > - Merge remote-tracking branch 'qutip/master'; > - Merge remote-tracking branch 'qutip/master'; > - Merge remote-tracking branch 'qutip/master'; > - Merge remote-tracking branch 'qutip/master'; > - Merge remote-tracking branch 'qutip/master'; > - Merge remote-tracking branch 'qutip/master'; > - Merge remote-tracking branch 'qutip/master'; > - Merge remote-tracking branch 'qutip/master'; > - Merge remote-tracking branch 'qutip/master'; > - Merge remote-tracking branch 'qutip/master'; > - ENH: Faster isherm; >; > File Changes; >; > - *M* qutip/cy/spmath.pyx; > <https://github.com/qutip/qutip/pull/629/files#diff-0> (82); > - *M* qutip/fastsparse.py; > <https://github.com/qutip/qutip/pull/629/files#diff-1> (6); > - *M* qutip/qobj.py; > <https://github.com/qutip/qutip/pull/629/files#diff-2> (9); >; > Patch Links:; >; > - https://github.com/qutip/qutip/pull/629.patch; > - https://github.com/qutip/qutip/pull/629.diff; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/pull/629>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AIxX7WOqS7fLrlY9jKnVq_jLYXbcm_rIks5rQyVrgaJpZM4LfEtz>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/629#issuecomment-271928375:2181,Patch,Patch,2181,https://qutip.org,https://github.com/qutip/qutip/pull/629#issuecomment-271928375,2,"['Patch', 'patch']","['Patch', 'patch']"
Deployability,"hs14880.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:9485,Release,Release,9485,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"hs14881.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:15489,Release,Release,15489,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"hs14882.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:21493,Release,Release,21493,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"hsa:<code>h75v-3vvj-5mfj</code></li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/pallets/jinja/commit/dd4a8b5466d8790540c181590b14db4d4d889d57""><code>dd4a8b5</code></a> release version 3.1.4</li>; <li><a href=""https://github.com/pallets/jinja/commit/0668239dc6b44ef38e7a6c9f91f312fd4ca581cb""><code>0668239</code></a> Merge pull request from GHSA-h75v-3vvj-5mfj</li>; <li><a href=""https://github.com/pallets/jinja/commit/d655030770081e2dfe46f90e27620472a502289d""><code>d655030</code></a> disallow invalid characters in keys to xmlattr filter</li>; <li><a href=""https://github.com/pallets/jinja/commit/a7863ba9d3521f1450f821119c50d19d7ecea329""><code>a7863ba</code></a> add ghsa links</li>; <li><a href=""https://github.com/pallets/jinja/commit/b5c98e78c2ee7d2bf0aa06d29ed9bf7082de9cf4""><code>b5c98e7</code></a> start version 3.1.4</li>; <li><a href=""https://github.com/pallets/jinja/commit/da3a9f0b804199845fcb76f2e08748bdaeba93ee""><code>da3a9f0</code></a> update project files (<a href=""https://redirect.github.com/pallets/jinja/issues/1968"">#1968</a>)</li>; <li><a href=""https://github.com/pallets/jinja/commit/0ee5eb41d1a2d7d9a05a02dc26dd70e63aaaeeb1""><code>0ee5eb4</code></a> satisfy formatter, linter, and strict mypy</li>; <li><a href=""https://github.com/pallets/jinja/commit/20477c63575175196bfc8103f223cc9f5642595d""><code>20477c6</code></a> update project files (<a href=""https://redirect.github.com/pallets/jinja/issues/5457"">#5457</a>)</li>; <li><a href=""https://github.com/pallets/jinja/commit/e491223739dedbb1f4fc6a71340c1484e149d947""><code>e491223</code></a> update pyyaml dev dependency</li>; <li><a href=""https://github.com/pallets/jinja/commit/36f98854c721f98ba103f97f65a8a098da5af0d7""><code>36f9885</code></a> fix pr link</li>; <li>Additional commits viewable in <a href=""https://github.com/pallets/jinja/compare/3.1.3...3.1.4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2418:2662,update,update,2662,https://qutip.org,https://github.com/qutip/qutip/pull/2418,1,['update'],['update']
Deployability,https://github.com/Nov05/JSAnimation?tab=readme-ov-file#-changed-by-nov05 . ```; !git clone https://github.com/Nov05/JSAnimation.git; !pip install git+file:///content/JSAnimation ## <- change file path accordingly; !rm -r ./JSAnimation; ```,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/798#issuecomment-1956372439:139,install,install,139,https://qutip.org,https://github.com/qutip/qutip/issues/798#issuecomment-1956372439,1,['install'],['install']
Deployability,https://github.com/berkelbach-group/pyrho/blob/master/integrate/integrate.py,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/887#issuecomment-493303310:54,integrat,integrate,54,https://qutip.org,https://github.com/qutip/qutip/issues/887#issuecomment-493303310,2,['integrat'],['integrate']
Deployability,"https://github.com/certifi/python-certifi/commit/aca828a78e73235a513dff9ebc181a47ef7dbf7b""><code>aca828a</code></a> 2022.06.15.2</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/de0eae12a6d5794a4c1e33052af6717707ce1fcc""><code>de0eae1</code></a> Only use importlib.resources's new files() / Traversable API on Python ≥3.11 ...</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/b8eb5e9af9143b22b7f651942b393e369ed4c52a""><code>b8eb5e9</code></a> 2022.06.15.1</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/47fb7ab715965684e035292d2ad3386aabdc4d25""><code>47fb7ab</code></a> Fix deprecation warning on Python 3.11 (<a href=""https://github-redirect.dependabot.com/certifi/python-certifi/issues/199"">#199</a>)</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/b0b48e059995f455ac1e79b3ad373ad4ef355516""><code>b0b48e0</code></a> fixes <a href=""https://github-redirect.dependabot.com/certifi/python-certifi/issues/198"">#198</a> -- update link in license</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/9d514b4cad79357071c89d7dc4dc1b4df72bb997""><code>9d514b4</code></a> 2022.06.15</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/4151e8849481f396537c34812068e89b32731e52""><code>4151e88</code></a> Add py.typed to MANIFEST.in to package in sdist (<a href=""https://github-redirect.dependabot.com/certifi/python-certifi/issues/196"">#196</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/certifi/python-certifi/compare/2020.12.05...2022.12.07"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=certifi&package-manager=pip&previous-version=2020.12.5&new-version=2022.12.7)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2035:1582,update,update,1582,https://qutip.org,https://github.com/qutip/qutip/pull/2035,1,['update'],['update']
Deployability,"hub.com/pypa/wheel/commit/76275484bc0de72d1f56601dbba3e816fc2f00c6""><code>7627548</code></a> [pre-commit.ci] pre-commit autoupdate (<a href=""https://github-redirect.dependabot.com/pypa/wheel/issues/480"">#480</a>)</li>; <li><a href=""https://github.com/pypa/wheel/commit/7b9e8e1022b9c850756ef34bc1a4a88042988a86""><code>7b9e8e1</code></a> Test on Python 3.11 final</li>; <li><a href=""https://github.com/pypa/wheel/commit/a04dfef41be0ab10eadbb2ed5d02b600682dc487""><code>a04dfef</code></a> Updated the pypi-publish action</li>; <li><a href=""https://github.com/pypa/wheel/commit/94bb62cb182023ac6586c5510ae9031ea56bd682""><code>94bb62c</code></a> Fixed docs not building due to code style changes</li>; <li><a href=""https://github.com/pypa/wheel/commit/d635664abe560d48723cfc3b73c52ad8c906760a""><code>d635664</code></a> Updated the codecov action to the latest version</li>; <li><a href=""https://github.com/pypa/wheel/commit/fcb94cd51f7dfd40d88dff37415750d9e3638d3b""><code>fcb94cd</code></a> Updated <strong>version</strong> to match the release</li>; <li>Additional commits viewable in <a href=""https://github.com/pypa/wheel/compare/0.37.0...0.38.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=wheel&package-manager=pip&previous-version=0.37.0&new-version=0.38.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2052:4687,Update,Updated,4687,https://qutip.org,https://github.com/qutip/qutip/pull/2052,2,"['Update', 'release']","['Updated', 'release']"
Deployability,"idna/compare/v3.6...v3.7</a></p>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/kjd/idna/blob/master/HISTORY.rst"">idna's changelog</a>.</em></p>; <blockquote>; <p>3.7 (2024-04-11); ++++++++++++++++</p>; <ul>; <li>Fix issue where specially crafted inputs to encode() could; take exceptionally long amount of time to process. [CVE-2024-3651]</li>; </ul>; <p>Thanks to Guido Vranken for reporting the issue.</p>; <p>3.6 (2023-11-25); ++++++++++++++++</p>; <ul>; <li>Fix regression to include tests in source distribution.</li>; </ul>; <p>3.5 (2023-11-24); ++++++++++++++++</p>; <ul>; <li>Update to Unicode 15.1.0</li>; <li>String codec name is now &quot;idna2008&quot; as overriding the system codec; &quot;idna&quot; was not working.</li>; <li>Fix typing error for codec encoding</li>; <li>&quot;setup.cfg&quot; has been added for this release due to some downstream; lack of adherence to PEP 517. Should be removed in a future release; so please prepare accordingly.</li>; <li>Removed reliance on a symlink for the &quot;idna-data&quot; tool to comport; with PEP 517 and the Python Packaging User Guide for sdist archives.</li>; <li>Added security reporting protocol for project</li>; </ul>; <p>Thanks Jon Ribbens, Diogo Teles Sant'Anna, Wu Tingfeng for contributions; to this release.</p>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/kjd/idna/commit/1d365e17e10d72d0b7876316fc7b9ca0eebdd38d""><code>1d365e1</code></a> Release v3.7</li>; <li><a href=""https://github.com/kjd/idna/commit/c1b3154939907fab67c5754346afaebe165ce8e6""><code>c1b3154</code></a> Merge pull request <a href=""https://redirect.github.com/kjd/idna/issues/172"">#172</a> from kjd/optimize-contextj</li>; <li><a href=""https://github.com/kjd/idna/commit/0394ec76ff022813e770ba1fd89658790ea35623""><code>0394ec7</code></a> Merge branch 'master' into optimize-contextj</li>; <li><a href=""https://github.com/kj",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2392:1576,release,release,1576,https://qutip.org,https://github.com/qutip/qutip/pull/2392,1,['release'],['release']
Deployability,"ig. N = 4; for i in range(10):; E = qutip.rand_herm(N, 0.35, None, True, None); w,v=eig(E); print('E-value:', w.real); ```; **The terminal output is**; ```; E-value: [6.32043755 6.06791959 5.24578891 4.99327095]; E-value: [5.37493846 5.8003551 6.26253682 5.65685425]; E-value: [5.17596435 5.5020902 5.8116183 6.13774415]; E-value: [6.25884718 5.05486132 5.71761238 5.59609612]; E-value: [5.94609905 5.36760945 6.2943825 5.33641017]; E-value: [6.25296302 5.06074548 5.65685425 5.65685425]; E-value: [4.81999397 5.75787997 6.57166109 5.65685425]; E-value: [5.23867334 6.35633232 5.8283425 5.65685425]; E-value: [5.13755732 5.71669004 6.21844559 5.65685425]; E-value: [6.32817223 5.48538456 5.30187642 6.01183208]; ```; **Expected Behaviour**; The eigenvalues should be random. **Your Environment**; ```; QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman and Simon Cross.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.7.0.dev0+nogit; Numpy Version: 1.21.1; Scipy Version: 1.7.0; Cython Version: None; Matplotlib Version: 3.4.2; Python Version: 3.8.11; Number of CPUs: 8; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Windows (AMD64); Installation path: C:\Users\acer\anaconda3\envs\learning_qutip\lib\site-packages\qutip; ================================================================================; Please cite QuTiP in your publication.; ================================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1642:2074,Install,Installed,2074,https://qutip.org,https://github.com/qutip/qutip/issues/1642,2,['Install'],"['Installation', 'Installed']"
Deployability,"ign(zeta) / 0.25. def H2_coeff(t,args):; zeta = args['zeta']; return np.sqrt(np.abs(0.25 * zeta))**(-3). def H0t(t,args):; global zeta_stored; zeta = args['zeta']; zeta_stored = zeta; print('t =',t); print('zeta =',zeta,'\n'); return H0 + H1_coeff(t,args) * H1 + H2_coeff(t,args) * H2. # Function Based Hamiltonians or Liouvillians. def H_iso(t, args):; return H0t(t, args). def L_iso(t, args):; args['zeta'] = rampFunc(t); H = H_iso(t, args); return qutip.liouvillian(H, []). # Auxiliary Functions and Constants. def zetaLin(t):; global z_f, z_i, tt_f, tt_i; slope = (z_f - z_i) / (tt_f - tt_i); return slope * (t - tt_i) + z_i; # other ramp functions go here; # ... # set ramp function: this function chages zeta in time (linearly, sinusoidaly, ...). def set_rampFunction(rampFunction):; global rampFunc; if rampFunction == 'sin':; rampFunc = zetaSin; elif rampFunction == 'linear':; rampFunc = zetaLin; ; ; ############### Using the solver ##############; z_i = zeta_i; z_f = -8e-5; tt_i = 0; tt_f = 10. div_num = 50; tlist = np.linspace(tt_i, tt_f, div_num); time1 = tt_f - tt_i; zeta_f_1 = z_f. set_rampFunction('linear'); L = L_iso; args = {'dim':dim, 'T':T}; rho_initial = H_DW(zeta_i, dim).eigenstates()[1][0].proj(). nsteps = 1000000; option = solver.Options(nsteps=nsteps); output1 = mesolve(L, rho_initial, tlist, c_ops=[], args=args, options=option, progress_bar=True); ```; The final time that the code prints in not same as the final time ```tt_f``` (which is 10), in this case it yields an error of about 5% in determining the final value of *zeta*:; ```python; zeta_stored; error1 = abs((zeta_stored - zeta_f_1) / zeta_f_1) * 100; print('error ~ %.2f'%error1,'%') #prints error ~ 5.29 %; ```; #### My Environment; ```; QuTiP Version: 4.6.3; Numpy Version: 1.21.2; Scipy Version: 1.7.3; Cython Version: 0.29.25; Matplotlib Version: 3.5.1; Python Version: 3.9.7; Number of CPUs: 16; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Darwin (x86_64); ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1821:3005,Install,Installed,3005,https://qutip.org,https://github.com/qutip/qutip/issues/1821,1,['Install'],['Installed']
Deployability,"igure.py in draw(self, renderer); 1707 self.patch.draw(renderer); 1708 mimage._draw_list_compositing_images(; -> 1709 renderer, self, artists, self.suppressComposite); 1710 ; 1711 renderer.close_group('figure'). /miniconda3/lib/python3.7/site-packages/matplotlib/image.py in _draw_list_compositing_images(renderer, parent, artists, suppress_composite); 133 if not_composite or not has_images:; 134 for a in artists:; --> 135 a.draw(renderer); 136 else:; 137 # Composite any adjacent images together. /miniconda3/lib/python3.7/site-packages/matplotlib/artist.py in draw_wrapper(artist, renderer, *args, **kwargs); 36 renderer.start_filter(); 37 ; ---> 38 return draw(artist, renderer, *args, **kwargs); 39 finally:; 40 if artist.get_agg_filter() is not None:. /miniconda3/lib/python3.7/site-packages/mpl_toolkits/mplot3d/axes3d.py in draw(self, renderer); 290 sorted(self.collections,; 291 key=lambda col: col.do_3d_projection(renderer),; --> 292 reverse=True)):; 293 col.zorder = zorder_offset + i; 294 for i, patch in enumerate(. /miniconda3/lib/python3.7/site-packages/mpl_toolkits/mplot3d/axes3d.py in <lambda>(col); 289 for i, col in enumerate(; 290 sorted(self.collections,; --> 291 key=lambda col: col.do_3d_projection(renderer),; 292 reverse=True)):; 293 col.zorder = zorder_offset + i. /miniconda3/lib/python3.7/site-packages/mpl_toolkits/mplot3d/art3d.py in do_3d_projection(self, renderer); 543 self.set_facecolors(fcs); 544 ; --> 545 ecs = (_zalpha(self._edgecolor3d, vzs) if self._depthshade else; 546 self._edgecolor3d); 547 ecs = mcolors.to_rgba_array(ecs, self._alpha). /miniconda3/lib/python3.7/site-packages/mpl_toolkits/mplot3d/art3d.py in _zalpha(colors, zs); 845 norm = Normalize(min(zs), max(zs)); 846 sats = 1 - norm(zs) * 0.7; --> 847 rgba = np.broadcast_to(mcolors.to_rgba_array(colors), (len(zs), 4)); 848 return np.column_stack([rgba[:, :3], rgba[:, 3] * sats]); 849 . /miniconda3/lib/python3.7/site-packages/numpy/lib/stride_tricks.py in broadcast_to(array, shape, subok); 1",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1027:3528,patch,patch,3528,https://qutip.org,https://github.com/qutip/qutip/issues/1027,1,['patch'],['patch']
Deployability,"ilities that are different from their true prefactor in the initial state. The ratio between the sampling frequencies and true prefactors would be weights on the trajectories. This also fixes some things in merging `McResult`s and `NmmcResult`s, and perhaps fixes the target tolerance computation for the ""improved sampling"" option. **Implementation**. A difficulty in the implementation is that the weights depend on the total number of trajectories in different ways. For example, the no-jump trajectory has a fixed weight that never changes, but all other trajectories come with prefactors $(1-p_0) / (N-1)$ where $p_0$ is the probability of the no-jump trajectory, and $N$ the total number of trajectories (including the one no-jump trajectory). For this reason, I separate weights into *absolute weights* (like $p_0$) and *relative weights* (like the others). The average is performed as follows:. $$ \bar\rho = \sum_{T: \text{abs}} w_a(T) w_r(T) \rho(T) + \frac{1}{N_{\text{rel}}} \sum _{T: \text{rel}} w_r(T) \rho(T) $$. where the first sum is over all trajectories T that have absolute weights, and the second sum over all other trajectories. Here, $w_a(T)$ and $w_r(T)$ are the absolute and relative weights, $\rho(T)$ the state associated with a trajectory, and $N_{\text{rel}}$ the number of trajectories that have not been assigned absolute weights. Intuitively, the idea is that absolute weights are for trajectories where the contribution to the full state is known exactly, and the trajectories without absolute weights are the stochastic part. **Things to do**; - [x] Update tests and create new ones; - [x] Update photocurrent to work with weights; - [x] Update target tolerance calculation to work with weights; - [x] Think about how result objects should be added if both contain trajectories with absolute weights; - [x] Double-check that this creates no problems for stochastic solvers; - [x] Towncrier entry. **Related issues or PRs**; https://github.com/qutip/qutip/issues/2235",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2369:2418,Update,Update,2418,https://qutip.org,https://github.com/qutip/qutip/pull/2369,3,['Update'],['Update']
Deployability,"illow/Pillow/issues/5909"">#5909</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Add Tidelift alignment action and badge <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5763"">#5763</a> [<a href=""https://github.com/aclark4life""><code>@​aclark4life</code></a>]</li>; <li>Replaced further direct invocations of setup.py <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5906"">#5906</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Added ImageShow support for xdg-open <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5897"">#5897</a> [<a href=""https://github.com/m-shinder""><code>@​m-shinder</code></a>]</li>; <li>Fixed typo <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5902"">#5902</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Switched from deprecated &quot;setup.py install&quot; to &quot;pip install .&quot; <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5896"">#5896</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Support 16-bit grayscale ImageQt conversion <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5856"">#5856</a> [<a href=""https://github.com/cmbruns""><code>@​cmbruns</code></a>]</li>; <li>Fixed raising OSError in _safe_read when size is greater than SAFEBLOCK <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5872"">#5872</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Convert subsequent GIF frames to RGB or RGBA <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5857"">#5857</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>WebP: Fix memory leak during decoding on failure <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5798",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:5738,install,install,5738,https://qutip.org,https://github.com/qutip/qutip/pull/1760,2,['install'],['install']
Deployability,"imeline regarding governance talks**:; * April 2018: QuTiP Joins NumFOCUS as an Affiliated Project (and since then participates in Google Summer of Code).; * September 2018: a slide presentation is shared among lead developers with ideas on QuTiP development and governance. ([Link](https://docs.google.com/presentation/d/1lBfS7v4WxduvWy-rf1Vd-hSEeNOK4at91ALuaH58AnQ/edit?usp=sharing)); * February 2019: The first QuTiP developers workshop is held in RIKEN, Wako, Japan, to discuss development and roadmap ([Link](https://docs.google.com/presentation/d/1lBfS7v4WxduvWy-rf1Vd-hSEeNOK4at91ALuaH58AnQ/edit?usp=sharing)); * 2019-2020: Seminars given in USA, Asia, and Europe about QuTiP and how the users community can get more engaged, collecting feedback on the package and project. ; * April-May 2020: Discussions for governance creation are revamped; * May-August 2020: First draft document created and circulated among core developers and project creators.; * Fall 2020: Feedback from NumFOCUS, Unitary Fund, update on the governance document. # QuTiP Governance Document. **<span style=""text-decoration:underline;"">The Project</span>**. QuTiP, the Quantum Toolbox in Python, is an open-source software to study and simulate quantum systems. It provides functionalities to define and simulate the dynamics of quantum systems and thus provides tools to develop an intuitive understanding of quantum mechanics. Apart from the educational aspect where QuTiP can be used to visualize and simulate simple quantum systems, there exists advanced functionalities that enable state-of-the-art research in open quantum systems using QuTiP. It provides the most comprehensive toolbox to characterize noise and dissipation affecting quantum systems as well as quantum information processing features. QuTiP has been developed and maintained by a group of open-source contributors for several years and has been used for research, teaching and in the emerging quantum technology industry. The QuTiP community has ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1373:3377,update,update,3377,https://qutip.org,https://github.com/qutip/qutip/issues/1373,1,['update'],['update']
Deployability,"in-amd64-3.7\Release\pyrex\cqobjevo_compiled_coeff_130828459648281117.cp37-win_amd64.lib and object C:\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\pyrex\cqobjevo_compiled_coeff_130828459648281117.cp37-win_amd64.exp; Generating code; Finished generating code; cl : Command line warning D9025 : overriding '/W3' with '/w'; cl : Command line warning D9025 : overriding '/Ox' with '/O1'; cqobjevo_compiled_coeff_8398411180025011525.cpp; c:\anaconda\lib\site-packages\numpy\core\include\numpy\npy_1_7_deprecated_api.h(14) : Warning Msg: Using deprecated NumPy API, disable it with #define NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; Creating library C:\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\pyrex\cqobjevo_compiled_coeff_8398411180025011525.cp37-win_amd64.lib and object C:\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\pyrex\cqobjevo_compiled_coeff_8398411180025011525.cp37-win_amd64.exp; Generating code; Finished generating code; Process SpawnPoolWorker-671:; Process SpawnPoolWorker-669:; Traceback (most recent call last):; Traceback (most recent call last):; File ""C:\Anaconda\lib\multiprocessing\process.py"", line 297, in _bootstrap; self.run(); File ""C:\Anaconda\lib\multiprocessing\process.py"", line 297, in _bootstrap; self.run(); File ""C:\Anaconda\lib\multiprocessing\process.py"", line 99, in run; self._target(*self._args, **self._kwargs); File ""C:\Anaconda\lib\multiprocessing\process.py"", line 99, in run; self._target(*self._args, **self._kwargs); File ""C:\Anaconda\lib\multiprocessing\pool.py"", line 110, in worker; task = get(); File ""C:\Anaconda\lib\multiprocessing\pool.py"", line 110, in worker; task = get(); File ""C:\Anaconda\lib\multiprocessing\queues.py"", line 354, in get; return _ForkingPickler.loads(res); File ""C:\Anaconda\lib\multiprocessing\queues.py"", line 354, in get; return _ForkingPickler.loads(res); Modul",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1084:1567,Release,Release,1567,https://qutip.org,https://github.com/qutip/qutip/issues/1084,1,['Release'],['Release']
Deployability,"ing clearer in the code - some of the earlier parametrizations I did were too aggressive because I wasn't used to the tools yet. The `test_control_pulseoptim` parts are very complex, in part because the underlying calling convention of that code is complex too. I'll try and add more comments to it to ease that along, especially in the part where I just defined a load of systems to test. That certainly should have been commented. There are general comments about what I was using the `pytest` tooling for in the commit messages, but I didn't necessarily want to leave ""intro to pytest"" comments throughout, because it would mostly crowd out the actual tests, and the `pytest` documentation online is probably going to be a better explanation than what I can do. I'm also learning `pytest` by doing this (I'd not used it before I opened the first PR)!. About the PRs: I'm happy with whatever workflow works best for you guys - I don't have any control over when the PR gets merged. It might be a little difficult for me to maintain two branches at once (i.e. if the first PR with ~10 tests is awaiting merging), because there's likely to be conflicts in `conftest.py` (in particular). Even if I branched the new PR off the previous one on the expectation that it would be merged, I'd have to keep adding merge commits into (or force-rebasing) the other branch to keep it up-to-date, which wouldn't be completely ideal in that it would make a bit of a mess in the git log. If you want to merge this one (after I've gone through and put some more comments in), I'm happy to start a new one. I can also start a new one on a new branch, I think it might just make a bit more of a mess than it solves. I think this one only got big because I had a good amount of free time at the same time as a `qutip` release happened, and most of the maintainers took a break for a few weeks. Right now I'm a bit busier with work so my conversion rate has slowed a little. I'll probably be back on it in a week or so.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1181#issuecomment-591413241:2053,release,release,2053,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-591413241,1,['release'],['release']
Deployability,"ing of <code>{% trans %}</code> blocks; more helpful. :pr:<code>1918</code></li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/pallets/jinja/commit/d9de4bb215fd1cc8092a410fb834c7c4060b1fc1""><code>d9de4bb</code></a> release version 3.1.3</li>; <li><a href=""https://github.com/pallets/jinja/commit/50124e16561f17f6c1ec85a692f6551418971cdc""><code>50124e1</code></a> skip test pypi</li>; <li><a href=""https://github.com/pallets/jinja/commit/9ea7222ef3f184480be0d0884e30ccfb4172b17b""><code>9ea7222</code></a> use trusted publishing</li>; <li><a href=""https://github.com/pallets/jinja/commit/da703f7aae36b1e88baaa20de334d7ff6378fdde""><code>da703f7</code></a> use trusted publishing</li>; <li><a href=""https://github.com/pallets/jinja/commit/bce174692547464512383ec40e0f8338b8811983""><code>bce1746</code></a> use trusted publishing</li>; <li><a href=""https://github.com/pallets/jinja/commit/7277d8068be593deab3555c7c14f974ada373af1""><code>7277d80</code></a> update pre-commit hooks</li>; <li><a href=""https://github.com/pallets/jinja/commit/5c8a10522421270f66376a24ec8e0d6812bc4b14""><code>5c8a105</code></a> Make nested-trans-block exceptions nicer (<a href=""https://redirect.github.com/pallets/jinja/issues/1918"">#1918</a>)</li>; <li><a href=""https://github.com/pallets/jinja/commit/19a55db3b411343309f2faaffaedbb089e841895""><code>19a55db</code></a> Make nested-trans-block exceptions nicer</li>; <li><a href=""https://github.com/pallets/jinja/commit/716795349a41d4983a9a4771f7d883c96ea17be7""><code>7167953</code></a> Merge pull request from GHSA-h5c8-rqwp-cp95</li>; <li><a href=""https://github.com/pallets/jinja/commit/7dd3680e6eea0d77fde024763657aa4d884ddb23""><code>7dd3680</code></a> xmlattr filter disallows keys with spaces</li>; <li>Additional commits viewable in <a href=""https://github.com/pallets/jinja/compare/3.1.2...3.1.3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-b",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2291:2390,update,update,2390,https://qutip.org,https://github.com/qutip/qutip/pull/2291,1,['update'],['update']
Deployability,"ing: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:6509,Release,Release,6509,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"ing: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:12346,Release,Release,12346,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"ing: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:18350,Release,Release,18350,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"ing: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:24354,Release,Release,24354,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"inistic where the current deterministic contributions are calculated. These functions can now be called from a stochastic rhs implementation, like this. ```; dpsi_t = _rhs_psi_deterministic(H, psi_t, t, dt, args); ```. In this way the implementation of a stochastic rhs function is relatively isolated from how the deterministic part is calculated (which right now is trivial, but which could become more complex when time-dependent systems are implemented). However, it also gives all the flexibility needed in the rhs function, and these deterministic rhs functions do not need to be used if it is not suitable in a particular stochastic rhs implementation. . I've added the changes to the rhs behavior to the https://github.com/qutip/qutip/tree/sme-rhs-restructuring and updated the gist with the variant of your notebook. http://nbviewer.ipython.org/6153688. Note that a few other things, like the rhs function signature, had to change in the process. I hope that this updated API will be flexible enough to let you implement implicit solver. Regards rhs implementation and d1,d2 function: Yes, I understand that not all possible rhs schemes might be compatible with the parameterization with d1 and d2 functions, but when it is possible it has the great advantage that the user do not need to worry about how the rhs is implemented, only define the SDE in terms of d1 and d2, and then possibly select a rhs solver using the solver argument to smesolve. This will not work in general for solvers like the milstein scheme, since it requires an analytical derivative (unless it can be evaluated numerically?), and in those cases it would be sufficient to implement problem specific rhs functions (like rhs_rho_milstein_homodyne etc). Regarding the use of expm: OK, I agree that it could be a nice method to have to be used on smallish system. However, since we are stepping with a small timestep dt, shouldn't it be sufficient to use an expansion of of expm as usual? Perhaps a second-order expansio",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/35#issuecomment-22156426:1617,update,updated,1617,https://qutip.org,https://github.com/qutip/qutip/issues/35#issuecomment-22156426,1,['update'],['updated']
Deployability,"initial value (written as a standalone module for illustration purposes). As you will notice in the code, there is a subtle issue with needing to transpose the Lindbladian to get the correct result. I'm not sure why this is the case.. must be something with the superoperator representation. Perhaps @cgranade knows?. ``` python; import scipy. from qutip.mesolve import _generic_ode_solve; from qutip.superoperator import liouvillian, mat2vec; from qutip.settings import debug. if debug:; import inspect. def _mesolve_const_super(H, E0, tlist, c_op_list, e_ops, args, opt,; progress_bar):; """"""; Evolve the super-operator `E0` using an ODE solver, for constant ; Liouvillian; """""". if debug:; print(inspect.stack()[0][3]). """"""; #; # check initial state; #; if isket(rho0):; # if initial state is a ket and no collapse operator where given,; # fall back on the unitary schrodinger equation solver; if len(c_op_list) == 0 and isoper(H):; return _sesolve_const(H, rho0, tlist, e_ops, args, opt,; progress_bar). # Got a wave function as initial state: convert to density matrix.; rho0 = ket2dm(rho0); """""". #; # check initial value; #; if not E0.issuper:; raise TypeError(""Argument 'E0' should be a super-operator""). #; # construct liouvillian; #; if opt.tidy:; H = H.tidyup(opt.atol). L = liouvillian(H, c_op_list). #; # setup integrator; #; initial_vector = mat2vec(E0.full()).ravel(); # r = scipy.integrate.ode(cy_ode_rhs); r = scipy.integrate.ode(_rhs); # r.set_f_params(L.data.data, L.data.indices, L.data.indptr); # not sure why I need to transpose L here:; r.set_f_params(L.trans().data); r.set_integrator('zvode', method=opt.method, order=opt.order,; atol=opt.atol, rtol=opt.rtol, nsteps=opt.nsteps,; first_step=opt.first_step, min_step=opt.min_step,; max_step=opt.max_step); r.set_initial_value(initial_vector, tlist[0]). #; # call generic ODE code; #; return _generic_ode_solve(r, E0, tlist, e_ops, opt, progress_bar). def _rhs(t,y,data):; ym = y.reshape(data.shape); return (ym*data).ravel(); ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/384:3771,integrat,integrator,3771,https://qutip.org,https://github.com/qutip/qutip/issues/384,3,['integrat'],"['integrate', 'integrator']"
Deployability,"initialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:9374,Release,Release,9374,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"initialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:15378,Release,Release,15378,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"initialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:21382,Release,Release,21382,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,install qutip on windows10 with some problems,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1079:0,install,install,0,https://qutip.org,https://github.com/qutip/qutip/issues/1079,1,['install'],['install']
Deployability,installation issue: `src/zspmv_openmp.hpp`,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1205:0,install,installation,0,https://qutip.org,https://github.com/qutip/qutip/issues/1205,1,['install'],['installation']
Deployability,"interactive() -> None:; 264 if matplotlib.is_interactive():; --> 265 draw_all(). File ~/.local/share/virtualenvs/qutip-319cV_iJ/lib/python3.11/site-packages/matplotlib/_pylab_helpers.py:131, in Gcf.draw_all(cls, force); 129 for manager in cls.get_all_fig_managers():; 130 if force or manager.canvas.figure.stale:; --> 131 manager.canvas.draw_idle(). File ~/.local/share/virtualenvs/qutip-319cV_iJ/lib/python3.11/site-packages/matplotlib/backend_bases.py:1919, in FigureCanvasBase.draw_idle(self, *args, **kwargs); 1917 if not self._is_idle_drawing:; 1918 with self._idle_draw_cntx():; -> 1919 self.draw(*args, **kwargs). File ~/.local/share/virtualenvs/qutip-319cV_iJ/lib/python3.11/site-packages/matplotlib/backends/backend_agg.py:387, in FigureCanvasAgg.draw(self); 384 # Acquire a lock on the shared font cache.; 385 with (self.toolbar._wait_cursor_for_draw_cm() if self.toolbar; 386 else nullcontext()):; --> 387 self.figure.draw(self.renderer); 388 # A GUI class may be need to update a window using this draw, so; 389 # don't forget to call the superclass.; 390 super().draw(). File ~/.local/share/virtualenvs/qutip-319cV_iJ/lib/python3.11/site-packages/matplotlib/artist.py:95, in _finalize_rasterization.<locals>.draw_wrapper(artist, renderer, *args, **kwargs); 93 @wraps(draw); 94 def draw_wrapper(artist, renderer, *args, **kwargs):; ---> 95 result = draw(artist, renderer, *args, **kwargs); 96 if renderer._rasterizing:; 97 renderer.stop_rasterizing(). File ~/.local/share/virtualenvs/qutip-319cV_iJ/lib/python3.11/site-packages/matplotlib/artist.py:72, in allow_rasterization.<locals>.draw_wrapper(artist, renderer); 69 if artist.get_agg_filter() is not None:; 70 renderer.start_filter(); ---> 72 return draw(artist, renderer); 73 finally:; 74 if artist.get_agg_filter() is not None:. File ~/.local/share/virtualenvs/qutip-319cV_iJ/lib/python3.11/site-packages/matplotlib/figure.py:3155, in Figure.draw(self, renderer); 3152 # ValueError can occur when resizing a window.; 3154 self.patch.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2400#issuecomment-2142000903:1507,update,update,1507,https://qutip.org,https://github.com/qutip/qutip/issues/2400#issuecomment-2142000903,1,['update'],['update']
Deployability,"inux2014_x86_64.whl.metadata (58 kB); Using cached scipy-1.9.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (58 kB); Using cached scipy-1.9.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (2.2 kB); Using cached scipy-1.9.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (2.2 kB); Using cached scipy-1.8.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (2.2 kB); Using cached setuptools-69.5.1-py3-none-any.whl (894 kB); Using cached packaging-24.0-py3-none-any.whl (53 kB); Using cached wheel-0.43.0-py3-none-any.whl (65 kB); Using cached Cython-3.0.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.6 MB); Using cached oldest_supported_numpy-2023.12.21-py3-none-any.whl (4.9 kB); Using cached numpy-1.17.3-cp38-cp38-manylinux1_x86_64.whl (20.5 MB); Using cached scipy-1.8.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (41.6 MB); Installing collected packages: wheel, setuptools, packaging, numpy, cython, scipy, oldest-supported-numpy; Successfully installed cython-3.0.2 numpy-1.17.3 oldest-supported-numpy-2023.12.21 packaging-24.0 scipy-1.8.1 setuptools-69.5.1 wheel-0.43.0; Installing build dependencies ... done; Running command Getting requirements to build wheel; Compiling qutip/core/data/dia.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/tidyup.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/cy/qobjevo.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/mul.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg/cython_blas.pxd.; Compiling qutip/core/data/csr.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2412:4404,Install,Installing,4404,https://qutip.org,https://github.com/qutip/qutip/issues/2412,2,"['Install', 'install']","['Installing', 'installed']"
Deployability,"ion: legacy me and es for oscillator in coherent initial state ... ok; correlation: comparing me and es for oscillator in coherent initial state ... ok; correlation: comparing me and mc for driven oscillator in ground state ... ERROR; correlation: legacy me and es for oscillator in steady-state ... ok; correlation: comparing me and es for oscillator in steady-state ... ok; correlation: legacy spectrum from es and pi methods ... ok; correlation: comparing spectrum from es and fft methods ... ok; correlation: comparing spectrum from es and pi methods ... ok; correlation: comparing TLS emission correlations (str-list td format) ... In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:1",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:2759,Release,Release,2759,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"ions are used by TwoModeQuadratureCorrelation; 42 # Calculating two-mode quadrature correlation (if this is the function you mean); 43 # This is a placeholder for any specific function you're calling:; ---> 44 corr = qt.TwoModeQuadratureCorrelation(two_mode_squeezed_state); 45 # print(""Two-mode quadrature correlation:"", corr); File ~/Library/CloudStorage/OneDrive-ETHZurich/PythonScripts/Qutip/TMS_Kerr_simulations/.venv/lib/python3.12/site-packages/qutip/distributions.py:283, in TwoModeQuadratureCorrelation.__init__(self, state, theta1, theta2, extent, steps); 280 self.theta1 = theta1; 281 self.theta2 = theta2; --> 283 self.update(state); File ~/Library/CloudStorage/OneDrive-ETHZurich/PythonScripts/Qutip/TMS_Kerr_simulations/.venv/lib/python3.12/site-packages/qutip/distributions.py:291, in TwoModeQuadratureCorrelation.update(self, state); 286 """"""; 287 calculate probability distribution for quadrature measurement; 288 outcomes given a two-mode wavefunction or density matrix; 289 """"""; 290 if isket(state):; --> 291 self.update_psi(state); 292 else:; 293 self.update_rho(state); ...; 315 i = state_number_index([N, N], [n1, n2]); --> 316 p += kn1 * kn2 * psi.data[i, 0]; 318 self.data = abs(p) ** 2; TypeError: 'qutip.core.data.dense.Dense' object is not subscriptable; ```. ### Expected Behaviour. (<Figure size 800x600 with 2 Axes>,; <Axes: xlabel='$X_1(\\theta_1)$', ylabel='$X_2(\\theta_2)$'>); ![image](https://github.com/user-attachments/assets/4087d55e-5f07-40bd-8b09-8869560817d7). ### Your Environment. ```shell; QuTiP Version: 5.0.4; Numpy Version: 2.1.2; Scipy Version: 1.14.1; Cython Version: None; Matplotlib Version: 3.9.2; Python Version: 3.12.5; Number of CPUs: 11; BLAS Info: Generic; OPENMP Installed: False. vs. on PC:. QuTiP Version: 4.7.2; Numpy Version: 1.25.2; Scipy Version: 1.11.1; Cython Version: None; Matplotlib Version: 3.7.1; Python Version: 3.11.4; Number of CPUs: 24; BLAS Info: INTEL MKL; OPENMP Installed: False; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2546:2678,Install,Installed,2678,https://qutip.org,https://github.com/qutip/qutip/issues/2546,2,['Install'],['Installed']
Deployability,"ions,; 245 progress_bar, dims=rho0.dims); 246 res.num_collapse = len(c_ops); 248 if e_ops_dict:. File ~/anaconda3/envs/danjou/lib/python3.10/site-packages/qutip/mesolve.py:519, in _generic_ode_solve(func, ode_args, rho0, tlist, e_ops, opt, progress_bar, dims); 517 for m in range(n_expt_op):; 518 if not isinstance(e_ops[m], Qobj) and callable(e_ops[m]):; --> 519 output.expect[m][t_idx] = e_ops[m](t, rho_t); 520 continue; 521 output.expect[m][t_idx] = expect_rho_vec(e_ops_data[m], r.y,; 522 e_ops[m].isherm; 523 and rho0.isherm). UnboundLocalError: local variable 'rho_t' referenced before assignment; ```. ### Expected Behaviour. I expect that callback functions passed as a list should be computed without issue. ### Your Environment. ```shell; QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman, Simon Cross and Asier Galicia.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.7.1; Numpy Version: 1.24.3; Scipy Version: 1.10.1; Cython Version: 0.29.33; Matplotlib Version: 3.7.1; Python Version: 3.10.6; Number of CPUs: 12; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (arm64); Installation path: /Users/danb2901/anaconda3/envs/danjou/lib/python3.10/site-packages/qutip; ================================================================================; Please cite QuTiP in your publication.; ================================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2189:3830,Install,Installed,3830,https://qutip.org,https://github.com/qutip/qutip/issues/2189,2,['Install'],"['Installation', 'Installed']"
Deployability,"ircuit; from qutip.qip.device import LinearSpinChain. num_qubits = 3; init_state = tensor([basis(2,1) for x in range(num_qubits)]); qc = QubitCircuit(num_qubits); qc.add_gate(""RX"", targets=1,arg_value = np.pi/2); qc.add_gate(""CNOT"", targets=1, controls=[0]). # Uses a LinearSpinChain processor to obtain the final state; processor = LinearSpinChain(num_qubits); processor.load_circuit(qc); processor_state = processor.run_state(init_state).states[-1].tidyup(1.0e-6). # Obtains state by running the circuit directly; circuit_state = qc.run(init_state). print(processor_state); print(); print(circuit_state); print(). # Calculates the fidelity between both states to show that states are not just differing by a phase; fidelity = np.abs((circuit_state.dag() * processor_state)[0]). print(""Fidelity:"", np.abs(fidelity[0])). ```. ### Your Environment. ```shell; QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman and Simon Cross.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.7.0; Numpy Version: 1.21.5; Scipy Version: 1.7.3; Cython Version: 0.29.30; Matplotlib Version: 3.5.2; Python Version: 3.7.13; Number of CPUs: 8; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Windows (AMD64); ================================================================================; Please cite QuTiP in your publication.; ================================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2003:3457,Install,Installed,3457,https://qutip.org,https://github.com/qutip/qutip/issues/2003,1,['Install'],['Installed']
Deployability,"is thread,. https://solus-project.com/forums/viewtopic.php?t=2938. which tells one to try:. sudo eopkg install -c system.devel. -P. jakeargent wrote:; >; > I'm using solus <https://solus-project.com> 64-bit, and anaconda for; > my python.; >; > anaconda cannot find any qutip package, so I tried to install with; > pip. It gives the following error:; >; > |Command ""/home/jakeargent/anaconda3/bin/python -u -c ""import; > setuptools,; > tokenize;__file__='/tmp/pip-build-n7ekqm4y/qutip/setup.py';f=getattr(tokenize, ; >; > 'open', open)(__file__);code=f.read().replace('\r\n',; > '\n');f.close();exec(compile(code, __file__, 'exec'))"" install; > --record /tmp/pip-lnsaamvm-record/install-record.txt; > --single-version-externally-managed --compile"" failed with error code; > 1 in /tmp/pip-build-n7ekqm4y/qutip/|; >; > Then I tried easy_install, which gave me:; >; > |Processing qutip Writing /home/jakeargent/qutip/setup.cfg Running; > setup.py -q bdist_egg --dist-dir; > /home/jakeargent/qutip/egg-dist-tmp-9_egnp34 Installing without the; > fortran mcsolver. In file included from; > /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/syslimits.h:7:0,; > from; > /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:34,; > from /home/jakeargent/anaconda3/include/python3.5m/Python.h:11, from; > qutip/cy/spmatfuncs.c:27:; > /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:168:61:; > fatal error: limits.h: No such file or directory #include_next; > <limits.h> /* recurse down to the real one */ ^ compilation; > terminated. In file included from; > /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/syslimits.h:7:0,; > from; > /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:34,; > from /home/jakeargent/anaconda3/include/python3.5m/Python.h:11, from; > qutip/cy/spmatfuncs.c:27:; > /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:168:61:; > fatal error: limits.h: No such file or directory #include_next; > <limits.h> /* recurse down to",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/639#issuecomment-275734243:1026,Install,Installing,1026,https://qutip.org,https://github.com/qutip/qutip/issues/639#issuecomment-275734243,1,['Install'],['Installing']
Deployability,"issions to github workflows (<a href=""https://redirect.github.com/certifi/python-certifi/issues/218"">#218</a>)</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/2087de5d0aa1d472145fc1dbdfece3fe652bbac5""><code>2087de5</code></a> Don't let deprecation warning fail CI (<a href=""https://redirect.github.com/certifi/python-certifi/issues/219"">#219</a>)</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/e0b9fc5c8f52ac8c300da502e5760ce3d41429ec""><code>e0b9fc5</code></a> remove paragraphs about 1024-bit roots from README</li>; <li>Additional commits viewable in <a href=""https://github.com/certifi/python-certifi/compare/2022.12.07...2023.07.22"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=certifi&package-manager=pip&previous-version=2022.12.7&new-version=2023.7.22)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2205:2870,update,updates,2870,https://qutip.org,https://github.com/qutip/qutip/pull/2205,1,['update'],['updates']
Deployability,"it/5399c03d4a069fe81a1616be0184c9749d7271ee""><code>5399c03</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/numpy/numpy/issues/20681"">#20681</a> from charris/backport-20954</li>; <li><a href=""https://github.com/numpy/numpy/commit/f9c45f8ebf31340b1a5a0371bfca25afcfc4794e""><code>f9c45f8</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/numpy/numpy/issues/20680"">#20680</a> from charris/backport-20663</li>; <li><a href=""https://github.com/numpy/numpy/commit/794b36f7e1bf2a8c42774ab0db86a74bd32f674b""><code>794b36f</code></a> Update armccompiler.py</li>; <li><a href=""https://github.com/numpy/numpy/commit/d93b14e3d7abaa1d837825e51671f817788e120f""><code>d93b14e</code></a> Update test_public_api.py</li>; <li><a href=""https://github.com/numpy/numpy/commit/7662c0789cc6a70d5ad4d950ee2e95f3afef7df6""><code>7662c07</code></a> Update <strong>init</strong>.py</li>; <li><a href=""https://github.com/numpy/numpy/commit/311ab52488a7d096ac3bc4c2de0fdae17ecd13ef""><code>311ab52</code></a> Update armccompiler.py</li>; <li>Additional commits viewable in <a href=""https://github.com/numpy/numpy/compare/v1.21.0...v1.22.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=numpy&package-manager=pip&previous-version=1.21.0&new-version=1.22.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate thi",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1940:4879,Update,Update,4879,https://qutip.org,https://github.com/qutip/qutip/pull/1940,1,['Update'],['Update']
Deployability,"ite out a proper design document and get approval of it before we get deep into the implementation. > The latter would make it harder to support multiple versions of qutip in the implementers, but I would not worry too much about it. You can throw an error saying that this other package is not supported and you should either nag it's developers or downgrade qutip.; >; > I'm not particularly worried about the blame: even if the error is thrown from qutip, if the message is clear enough it will be clear that the fault is in the downstream implementors of the API. I'm concerned from a user's perspective. QuTiP has a wide user base, and we're beyond the stage where ""iterate fast and break things"" is ok for us (though of course it's fine and even good for pre-stable libraries, to avoid getting weighed down). We've got to be concerned with backwards and forwards compatibility; what if a user wants to install and use QuTiP and a different library in the same environment _without_ using them together, but can't even have them coexist because of version incompatibilities in optional conversion features? That's frustrating for users, even though it's not really anybody's fault. Bugging developers is fine when people want to use packages that are still maintained, but I'm sure we've all come up against times in research when you get to trying out a package to do one specific thing that's been abandoned for a while. Again, this certainly isn't an unsolvable problem: having versioning in the interface API is one solution to some of these problems. ---. For greater discussion, here's an alternate approach: instead of objects defining `__qutip_qobj__`, instead we expose an entry-point `qutip.Qobj.register_conversion_function(converter, type, priority, version=None)`, and downstream libraries register functions rather than defining methods on their classes. The logic inside the `Qobj` constructor remains approximately the same as what you suggest. I think TensorFlow does something ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-830003691:4363,install,install,4363,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-830003691,1,['install'],['install']
Deployability,"items at the class:. ```; SolverOptions['method`] = 'bdf' # Set default method ; with SolverOptions(atol=1e-5):; opt = SolverOptions(store_state=True); opt['progress_bar'] = False; print(opt). progress_bar : False; store_state : True; method : 'bdf'; atol : 1e-5; ...; ```; The option can also be initialized from a dict or another options instance, it will make a copy. I added the capacity to add a safety check when setting an options. It is only used for `use_cython` which will error when trying to set it to `True` without cython installed. Otherwise, it will fail when trying to use the options. *Solver's options*; Each solver has it's option class (SeOptions, MeOptions, etc.) with only needed keys.This somewhat feel overkill since they are all the some for now, until mcsolve is merged. Each integrator also has an associated options and the solver options contain an integrator options. Conversion between options type will raise an error. When creating a solver options, it read the `method` key and setup a matching integrator options. Thus only the keys used by the solver or integrator are defined in the instance. This allow adding new integrator with their own options without adding complexity to the solver options. It can be used as such:; ```; opt = SolverOptions(method='lsoda'); opt['progress_bar'] = False; opt.ode['max_order_ns'] = 10; ```; To make it work smoothly, each integrator must be associated to only one method thus `zvode` was split between `adams` and `bdf`. There is also a generic `Options` class that accept any keys used by integrator or solver and can be converted to any specific solver options:; ```; Options(futur_cupy_ode_specific_options=True) # Will work; Options(not_an_options=True) # Error; # For most solver:; __solve(..., opt=Options()); ```; Once options are associated to a solver, they are frozen:; ```; opt = SeOptions(); solver = SeSolver(..., opt); opt['...'] = ... # Ok, but solver has a copy and is unaffected.; solver.options['...'] = ..",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1812:1806,integrat,integrator,1806,https://qutip.org,https://github.com/qutip/qutip/pull/1812,1,['integrat'],['integrator']
Deployability,"ithms and so on. I wouldn't want to add that immediately, though - no need to complicate things. #### Point 2. Basis safety wouldn't have any performance cost here - `Space(2, basis='x')` and `Space(2, basis='y')` would referentially be unequal, so the test would be free. It's basically the same thing as checking superoperator representations. I would worry about user ergonomics for creating these though. I'd propose that all QuTiP functions maintain their current behaviour of creating everything in the number basis (`sigmaz()`, `num()` and so on all imply a particular basis). Beyond that, the ENR functions would attach some basis information onto their outputs to make them safe, and functions like `Qobj.transform` could take a required argument to name the new basis. . I'm certainly not considering this a priority, just a possible solution to the ENR problem and a couple of people had expressed interest in basis safety in the google group. We can always tack it on in a later release if it ever seems like a good idea in the future. #### Point 3. Yeah, this is absolutely all intended to be internal only. We wouldn't even print out this form in `Qobj.__repr__`, to my mind. You'd still type `dims=[[2], [1]]` to get a qubit ket and `dims=[[1], [2]]` for a qubit bra, so I don't think there's any confusion there. The reason there's not a special ""bra"" structure internally is because it's not necessary; a bra really is just a linear mapping from a particular vector space to the field, so having a special case for that makes more complex - the matmul compatibility test with `Map(Space, Field)` and `Map(Space, Space)` is the exact same test as for two operators, which simplifies the logic. ---. After sleeping on it, I still generally like the singleton pattern for this, but I think _completely_ relying on referential equality is probably a bit short-sighted. We can define, for example, `Space.__eq__` as; ```python; class Space:; def __eq__(self, other):; return (; self is oth",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1421#issuecomment-764870661:2329,release,release,2329,https://qutip.org,https://github.com/qutip/qutip/issues/1421#issuecomment-764870661,1,['release'],['release']
Deployability,"ithub-redirect.dependabot.com/python-pillow/Pillow/issues/6674"">#6674</a>; [npjg, radarhere]</p>; </li>; <li>; <p>Decode JPEG compressed BLP1 data in original mode <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6678"">#6678</a>; [radarhere]</p>; </li>; <li>; <p>Added GPS TIFF tag info <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6661"">#6661</a>; [radarhere]</p>; </li>; <li>; <p>Added conversion between RGB/RGBA/RGBX and LAB <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6647"">#6647</a>; [radarhere]</p>; </li>; <li>; <p>Do not attempt normalization if mode is already normal <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6644"">#6644</a>; [radarhere]</p>; </li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/python-pillow/Pillow/commit/d594f4cb8dc47fb0c69ae58d9fff86faae4515bd""><code>d594f4c</code></a> Update CHANGES.rst [ci skip]</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/909dc64ed5f676169aa3d9b0c26f132a06321b83""><code>909dc64</code></a> 9.3.0 version bump</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/1a51ce7b955c65c8f2c6bc7772735b197b8a6aa3""><code>1a51ce7</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6699"">#6699</a> from hugovk/security-libtiff_buffer</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/2444cddab2f83f28687c7c20871574acbb6dbcf3""><code>2444cdd</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6700"">#6700</a> from hugovk/security-samples_per_pixel-sec</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/744f455830871d61a8de0a5e629d4c2e33817cbb""><code>744f455</code></a> Added release notes</li>; <li><a href=""https://github.com/python-pillow/Pillo",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:13305,Update,Update,13305,https://qutip.org,https://github.com/qutip/qutip/pull/2023,1,['Update'],['Update']
Deployability,"ithub.com/kjd/idna/commit/1d365e17e10d72d0b7876316fc7b9ca0eebdd38d""><code>1d365e1</code></a> Release v3.7</li>; <li><a href=""https://github.com/kjd/idna/commit/c1b3154939907fab67c5754346afaebe165ce8e6""><code>c1b3154</code></a> Merge pull request <a href=""https://redirect.github.com/kjd/idna/issues/172"">#172</a> from kjd/optimize-contextj</li>; <li><a href=""https://github.com/kjd/idna/commit/0394ec76ff022813e770ba1fd89658790ea35623""><code>0394ec7</code></a> Merge branch 'master' into optimize-contextj</li>; <li><a href=""https://github.com/kjd/idna/commit/cd58a23173d2b0a40b95ee680baf3e59e8d33966""><code>cd58a23</code></a> Merge pull request <a href=""https://redirect.github.com/kjd/idna/issues/152"">#152</a> from elliotwutingfeng/dev</li>; <li><a href=""https://github.com/kjd/idna/commit/5beb28b9dd77912c0dd656d8b0fdba3eb80222e7""><code>5beb28b</code></a> More efficient resolution of joiner contexts</li>; <li><a href=""https://github.com/kjd/idna/commit/1b121483ed04d9576a1291758f537e1318cddc8b""><code>1b12148</code></a> Update ossf/scorecard-action to v2.3.1</li>; <li><a href=""https://github.com/kjd/idna/commit/d516b874c3388047934938a500c7488d52c4e067""><code>d516b87</code></a> Update Github actions/checkout to v4</li>; <li><a href=""https://github.com/kjd/idna/commit/c095c75943413c75ebf8ac74179757031b7f80b7""><code>c095c75</code></a> Merge branch 'master' into dev</li>; <li><a href=""https://github.com/kjd/idna/commit/60a0a4cb61ec6834d74306bd8a1fa46daac94c98""><code>60a0a4c</code></a> Fix typo in GitHub Actions workflow key</li>; <li><a href=""https://github.com/kjd/idna/commit/5918a0ef8034379c2e409ae93ee11d24295bb201""><code>5918a0e</code></a> Merge branch 'master' into dev</li>; <li>Additional commits viewable in <a href=""https://github.com/kjd/idna/compare/v3.4...v3.7"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=idna&package-manager=pip&previous-version=3.4",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2392:3060,Update,Update,3060,https://qutip.org,https://github.com/qutip/qutip/pull/2392,1,['Update'],['Update']
Deployability,"ithub.com/python-pillow/Pillow/issues/7548"">#7548</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Corrected duration when combining multiple GIF frames into single frame <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7521"">#7521</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Handle disposing GIF background from outside palette <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7515"">#7515</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Seek past the data when skipping a PSD layer <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7483"">#7483</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>ImageMath: Inline <code>isinstance</code> check <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7623"">#7623</a> [<a href=""https://github.com/hugovk""><code>@​hugovk</code></a>]</li>; <li>Update actions/upload-artifact action to v4 <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7619"">#7619</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Import plugins relative to the module <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7576"">#7576</a> [<a href=""https://github.com/deliangyang""><code>@​deliangyang</code></a>]</li>; <li>Translate encoder error codes to strings; deprecate <code>ImageFile.raise_oserror()</code> <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7609"">#7609</a> [<a href=""https://github.com/bgilbert""><code>@​bgilbert</code></a>]</li>; <li>Updated readthedocs to latest version of Python <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7611"">#7611</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Support reading BC4U and DX10 BC1 images <a href=""https://redirect.github.com/python-pillow/Pillow/issues/6486"">#6486</a> [<a href=""https://gith",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2302:6143,Update,Update,6143,https://qutip.org,https://github.com/qutip/qutip/pull/2302,1,['Update'],['Update']
Deployability,"ithub.com/urllib3/urllib3/releases"">urllib3's releases</a>.</em></p>; <blockquote>; <h2>1.26.5</h2>; <p>:warning: <strong>IMPORTANT: urllib3 v2.0 will drop support for Python 2</strong>: <a href=""https://urllib3.readthedocs.io/en/latest/v2-roadmap.html"">Read more in the v2.0 Roadmap</a></p>; <ul>; <li>Fixed deprecation warnings emitted in Python 3.10.</li>; <li>Updated vendored <code>six</code> library to 1.16.0.</li>; <li>Improved performance of URL parser when splitting the authority component.</li>; </ul>; <p><strong>If you or your organization rely on urllib3 consider supporting us via <a href=""https://github.com/sponsors/urllib3"">GitHub Sponsors</a></strong></p>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/urllib3/urllib3/blob/main/CHANGES.rst"">urllib3's changelog</a>.</em></p>; <blockquote>; <h2>1.26.5 (2021-05-26)</h2>; <ul>; <li>Fixed deprecation warnings emitted in Python 3.10.</li>; <li>Updated vendored <code>six</code> library to 1.16.0.</li>; <li>Improved performance of URL parser when splitting; the authority component.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/urllib3/urllib3/commit/d1616473df94b94f0f5ad19d2a6608cfe93b7cdf""><code>d161647</code></a> Release 1.26.5</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/2d4a3fee6de2fa45eb82169361918f759269b4ec""><code>2d4a3fe</code></a> Improve performance of sub-authority splitting in URL</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/2698537d52f8ff1f0bbb1d45cf018b118e91f637""><code>2698537</code></a> Update vendored six to 1.16.0</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/07bed791e9c391d8bf12950f76537dc3c6f90550""><code>07bed79</code></a> Fix deprecation warnings for Python 3.10 ssl module</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/d725a9b56bb8baf87c9e6eee0e9edf010034b63b""><code>d725a9b</code></a> Add Pytho",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1563:1141,Update,Updated,1141,https://qutip.org,https://github.com/qutip/qutip/pull/1563,1,['Update'],['Updated']
Deployability,"itten it, this loop is thread-safe already. As it stands in the 4.x series, `mesolve` is re-entrant (I'm fairly sure), but note that it does generally mutate its arguments, especially if you pass a `QobjEvo` Liouvillian as the first argument. As long as you make sure you give each thread a distinct copy of the input Liouvillian, `mesolve` itself doesn't access global state as far as I recall. Just to be clear: there's two interconnected issues here: One is just being ""reentrant"" in the sense that I can safely have multiple `mesolve`'s run in parallel. This doesn't seem to be a problem for `mesolve` as a whole (propagating over the entire time grid). The other issue, at a lower level is whether I can keep the internal state of the integrator (`scipy.integrate.ode` or whatever else `mesolve` might be using) when propagating a single time step (and whether I can have multiple integrators to run in parallel that each safely keep track of their own state). That comes down to the integrator itself being ""reentrant"", of course. Certainly, calling `mesolve` in a loop (`In [19]`) doesn't keep the internal state of the integrator, hence the overhead between `In [21]` compared to `In [18]`. I wouldn't expect it to, of course, but the question is whether a refactoring of `mesolves` internals into an object that keeps state in a thread-safe way and allows doing time steps would alleviate this overhead (like the `mesolve_prepare_ode(H, state, c_ops) -> OdeState` that you propose in https://github.com/qutip/qutip/issues/1571#issuecomment-859917462). On the other hand, looping over the full `mesolve` as in `In [19]` obviously has no problems with parallelization. I wasn't sure if that's what you meant by ""`mesolve` is re-entrant"" or whether recent changes in QuTiP now use a re-entrant internal integrator, i.e. not `scipy.integrate.ode`. At the time I implemented the [`DensityMatrixODEPropagator`](https://github.com/qucontrol/krotov/blob/cfe6b108708cdfd29ab7eee24f2112977b951ed2/src/k",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243:6221,integrat,integrator,6221,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243,1,['integrat'],['integrator']
Deployability,"jor`), there will be an option on QuTiP's GitHub Actions tab for people who have write permission on qutip/qutip to build all wheels and optionally release the build to PyPI, making it available on `pip` as a binary release. The major changes are in the files `pyproject.toml`, `setup.py`, `setup.cfg` and `.github/workflows/build.yml`, while `MANIFEST.in` and a new file `VERSION` were also touched. The patch also contains two commits that remove unused OpenMP code and remove a particularly problematic C struct from some inner Python code; the struct and the presence of the dead code caused portability problems, and they in no way change the behaviour of the package. ### Distribution changes:; - there is a GitHub Action which will build all the wheels for CPython 3.6+ on Linux (`manylinux1` x86 and x86_64), macOS and Windows (32- and 64-bit). This action is triggered manually, and the wheels will be available for download afterwards. Optionally, the action will push to PyPI, making the version immediately available on `pip` by binary release.; - `.cpp` files are now distributed with the wheels but not added to source control. This is a step towards a full Cython-free delivery of the QuTiP source (binary releases never require Cython), but right now I think our `setuptools` machinery doesn't quite handle that. ### Changes to `setup.py`; - all package metadata is moved out into `setup.cfg`, which is easier to read and change, and modern `setuptools`' preferred way of doing things; - build requirements are moved into `pyproject.toml` including listing `setuptools` as the build method, in accordance with PEP 517. Any PEP 517-complaint installation and build process will now _enforce_ the presence of `numpy`, `scipy` and `cython` (and `setuptools`) before attempting the build, so no more need for attempted import guards.; - packages are now discovered rather than explicitly stated, using standard `setuptools` machinery; - Cython extension modules are now discovered rather t",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1429:1163,release,release,1163,https://qutip.org,https://github.com/qutip/qutip/pull/1429,1,['release'],['release']
Deployability,"just refactor what is going on in the backend to enable single-time-step propagation with as little overhead as possible. > * I think the function `qutip.mesolve` shouldn't change interface at all for 5.0 - we can change its backend, but I think it'll be a huge hindrance to adoption of 5.0 if we make major breaking changes to effectively our premier function, and I don't see a need to do that. We can add, rather than change, and keep `mesolve` as the ""quick-and-dirty"" method that just works.; > * I'm in favour of exposing the different parts of the `mesolve` process as user-accessible, composable chunks. So something like exposing a `mesolve_prepare_ode(H, state, c_ops) -> OdeState` function, where `OdeState` has properties `rhs: QobjEvo`, `state: Qobj`, `time: float` (`sesolve_prepare_ode` and `mcsolve_prepare_ode` would presumably return the same object, or a derived object). Then we'd have an `Integrator` class, which encapsulates an integration step using whatever integrator of choice, so there's one that encapsulates the scipy integrator, one which is a Cython-ised RK4 implementation, etc. Then the low-level user would simply write the `for time in times` loop themselves; at this level, there's nothing fancy that QuTiP adds, so we may as well just expose it directly. That sounds like the exact right solution! ;-). > I think this architecture is approximately what Eric had in mind too, though I presumably haven't used the same names. Yeah, I think we're actually all on the same page, irrespective of minor implementation/naming details: Have an object that keeps internal state of `mesolve` and allows to advance step-by-step. Personally, I like the naming of `MeSolver` that @Ericgig wrote out in https://github.com/qutip/qutip/issues/1571#issuecomment-858740451, but `mesolve_prepare_ode`/`OdeState` works too. @Ericgig in https://github.com/qutip/qutip/issues/1571#issuecomment-859791561:. > Most of scipy's solver are not ""thread-safe"", but we will be able to use othe",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243:11819,Integrat,Integrator,11819,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243,4,"['Integrat', 'integrat']","['Integrator', 'integration', 'integrator']"
Deployability,"k` package is required for cython-compiling coefficient functions. However, QuTiP currently does not warn if `filelock` is missing, and the dependency does not seem to be documented anywhere. Instead, QuTiP silently defaults to a `StrFunctionCoefficient`, i.e., to using `eval`. This behavior comes from here:. https://github.com/qutip/qutip/blob/7892453dd3ae03ce8ac17caffc0457df200a69ec/qutip/core/coefficient.py#L256-L264. The default value of `use_cython` is therefore set to `False` if `filelock` is missing. The result is the following:. ```python; $ git clone git@github.com:qutip/qutip.git .; $ conda create -n qutip-tmp python cython numpy scipy setuptools packaging wheel pytest ipython matplotlib; $ conda activate qutip-tmp; $ python setup.py install; $ cd ~; $ ipython; 	import qutip; 	coeff = qutip.coefficient(""sin(t)""); 	type(coeff); 	> qutip.core.cy.coefficient.StrFunctionCoefficient; 	exit(); ```. Since cython is installed and there was no warning or error, I think it would be reasonable for the user to assume that the coefficient would be compiled, but it is not. Only when `use_cython` is explicitly enabled, we get an error:. ```shell; In [5]: coeff = qutip.coefficient(""sin(t)"", compile_opt=qutip.CompilationOptions(use_cython=True)); ---------------------------------------------------------------------------; NameError Traceback (most recent call last); Cell In[5], line 1; ----> 1 coeff = qutip.coefficient(""sin(t)"", compile_opt=qutip.CompilationOptions(use_cython=True)). File ~/miniconda3/envs/qutip-tmp/lib/python3.11/site-packages/qutip-5.0.0.dev0+7892453-py3.11-linux-x86_64.egg/qutip/core/coefficient.py:170, in coefficient(base, tlist, args, args_ctypes, order, compile_opt, function_style, boundary_conditions, **kwargs); 168 for type_ in coefficient_builders:; 169 if isinstance(base, type_):; --> 170 return coefficient_builders[type_](base, **kwargs); 172 if callable(base):; 173 op = FunctionCoefficient(base, args.copy(), style=function_style). File ~/minico",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2162:969,install,installed,969,https://qutip.org,https://github.com/qutip/qutip/issues/2162,1,['install'],['installed']
Deployability,"kg_resources 0.0.0; setuptools 44.0.0. $ pip install qutip; Collecting qutip; Using cached qutip-5.0.1.tar.gz (6.4 MB); Installing build dependencies ... done; Getting requirements to build wheel ... done; ERROR: Some build dependencies for qutip from https://files.pythonhosted.org/packages/43/41/cae32aa94bfe0b22d2aec9392b2676210e5473ce097b10c689297b254a80/qutip-5.0.1.tar.gz conflict with the backend dependencies: numpy==1.17.3 is incompatible with numpy>=1.19.; ```. ### Code Output. _No response_. ### Expected Behaviour. Qutip should install normally. ### Your Environment. ```shell; QuTiP Version: 5.0.1; Numpy Version: (1.17.3) (apparently this is the version it's trying to install); Scipy Version: (1.10.1); Cython Version: (3.0.2); Matplotlib Version: -; Python Version: 3.8.10; Number of CPUs: 16; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64) (Ubuntu 20.04.6 LTS); ```. ### Additional Context. Here's the output of `pip install --verbose qutip`, not sure if it's of any help. <details><summary>Output</summary>. ```; pip install --verbose qutip; Using pip 24.0 from /tmp/test-venv/lib/python3.8/site-packages/pip (python 3.8); Collecting qutip; Using cached qutip-5.0.1.tar.gz (6.4 MB); Running command pip subprocess to install build dependencies; Ignoring cython: markers 'python_version >= ""3.10""' don't match your environment; Collecting setuptools; Using cached setuptools-69.5.1-py3-none-any.whl.metadata (6.2 kB); Collecting packaging; Using cached packaging-24.0-py3-none-any.whl.metadata (3.2 kB); Collecting wheel; Using cached wheel-0.43.0-py3-none-any.whl.metadata (2.2 kB); Collecting cython<3.0.3,>=0.29.20; Using cached Cython-3.0.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (3.1 kB); Collecting oldest-supported-numpy; Using cached oldest_supported_numpy-2023.12.21-py3-none-any.whl.metadata (9.8 kB); Collecting scipy>=1.8; Using cached scipy-1.10.1-cp38-cp38-manylinux_2_17_x86_64.manylinux20",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2412:1962,install,install,1962,https://qutip.org,https://github.com/qutip/qutip/issues/2412,1,['install'],['install']
Deployability,kroom/miniforge/base/envs/qutip_test/include -arch arm64 -fPIC -O2 -isystem /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/include -arch arm64; ; creating build/temp.macosx-11.0-arm64-3.9/numpy/core/src/multiarray; creating build/temp.macosx-11.0-arm64-3.9/numpy/core/src/umath; creating build/temp.macosx-11.0-arm64-3.9/build/src.macosx-11.0-arm64-3.9/numpy/core/src/umath; creating build/temp.macosx-11.0-arm64-3.9/build/src.macosx-11.0-arm64-3.9/numpy/core/src/common; creating build/temp.macosx-11.0-arm64-3.9/private; creating build/temp.macosx-11.0-arm64-3.9/private/var; creating build/temp.macosx-11.0-arm64-3.9/private/var/folders; creating build/temp.macosx-11.0-arm64-3.9/private/var/folders/kj; creating build/temp.macosx-11.0-arm64-3.9/private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn; creating build/temp.macosx-11.0-arm64-3.9/private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T; creating build/temp.macosx-11.0-arm64-3.9/private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-install-cp5z29tf; creating build/temp.macosx-11.0-arm64-3.9/private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-install-cp5z29tf/numpy_1458b1f38a5449d18aa77b5bb31c63d1; creating build/temp.macosx-11.0-arm64-3.9/private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-install-cp5z29tf/numpy_1458b1f38a5449d18aa77b5bb31c63d1/numpy; creating build/temp.macosx-11.0-arm64-3.9/private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-install-cp5z29tf/numpy_1458b1f38a5449d18aa77b5bb31c63d1/numpy/_build_utils; creating build/temp.macosx-11.0-arm64-3.9/private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-install-cp5z29tf/numpy_1458b1f38a5449d18aa77b5bb31c63d1/numpy/_build_utils/src; compile options: '-DNPY_INTERNAL_BUILD=1 -DHAVE_NPY_CONFIG_H=1 -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE=1 -D_LARGEFILE64_SOURCE=1 -DNO_ATLAS_INFO=3 -DHAVE_CBLAS -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/umath -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/npymath -Ibuild/src,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:63227,install,install-,63227,https://qutip.org,https://github.com/qutip/qutip/issues/1740,1,['install'],['install-']
Deployability,"ld not result in breaking changes.</p>; <p>PyPI: <a href=""https://pypi.org/project/Jinja2/3.1.4/"">https://pypi.org/project/Jinja2/3.1.4/</a>; Changes: <a href=""https://jinja.palletsprojects.com/en/3.1.x/changes/#version-3-1-4"">https://jinja.palletsprojects.com/en/3.1.x/changes/#version-3-1-4</a></p>; <ul>; <li>The <code>xmlattr</code> filter does not allow keys with <code>/</code> solidus, <code>&gt;</code> greater-than sign, or <code>=</code> equals sign, in addition to disallowing spaces. Regardless of any validation done by Jinja, user input should never be used as keys to this filter, or must be separately validated first. GHSA-h75v-3vvj-5mfj</li>; </ul>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/pallets/jinja/blob/main/CHANGES.rst"">jinja2's changelog</a>.</em></p>; <blockquote>; <h2>Version 3.1.4</h2>; <p>Released 2024-05-05</p>; <ul>; <li>The <code>xmlattr</code> filter does not allow keys with <code>/</code> solidus, <code>&gt;</code>; greater-than sign, or <code>=</code> equals sign, in addition to disallowing spaces.; Regardless of any validation done by Jinja, user input should never be used; as keys to this filter, or must be separately validated first.; :ghsa:<code>h75v-3vvj-5mfj</code></li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/pallets/jinja/commit/dd4a8b5466d8790540c181590b14db4d4d889d57""><code>dd4a8b5</code></a> release version 3.1.4</li>; <li><a href=""https://github.com/pallets/jinja/commit/0668239dc6b44ef38e7a6c9f91f312fd4ca581cb""><code>0668239</code></a> Merge pull request from GHSA-h75v-3vvj-5mfj</li>; <li><a href=""https://github.com/pallets/jinja/commit/d655030770081e2dfe46f90e27620472a502289d""><code>d655030</code></a> disallow invalid characters in keys to xmlattr filter</li>; <li><a href=""https://github.com/pallets/jinja/commit/a7863ba9d3521f1450f821119c50d19d7ecea329""><code>a7863ba</code></a> add g",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2418:1276,Release,Released,1276,https://qutip.org,https://github.com/qutip/qutip/pull/2418,1,['Release'],['Released']
Deployability,"ld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/n",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:6623,Release,Release,6623,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"ld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/n",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:12460,Release,Release,12460,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"ld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/n",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:18464,Release,Release,18464,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"ld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/n",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:24468,Release,Release,24468,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"le for all known types automatically; when it's asked to do say `kron` on two types it doesn't have a specialisation for, it'll cast the inputs through a path of least weight into a specialisation it _does_ know, and then use that. The desired casting rules and preferred output types can be altered dynamically at run-time as well. While I put a lot of effort into making this as fast as possible (and naturally a constant-time operation with respect to the number of known types and specialisations), of course the penalty we pay is a small run-time cost of type look-ups and dispatch (<1µs, but that's dwarfed by the cost of the operations themselves). We will have a hook for creating ""data-layer types"" out of arbitrary inputs, but we weren't heavily focussing on this at all; it seems rather too special a case to have _another_ magic interface for, and we can basically just reuse `__array__` for it - ""data-layer types"" are essentially just ""matrix-like"" objects. It also isn't appropriate for the situation you're describing here, because your own objects have additional ""quantum-specific"" attributes associated with them, similar to the extra stuff that `Qobj` contains. If you want to see more of this, it's in the `dev.major` branch. ---. Defining an interoperable new public interface I think is quite a big task, since it's inherently got to be future-proof. I'm definitely +1 on us having one, and having some discussion about it before a 5.0 release. I'm most concerned with how we can do it in a manner that's useful without stymieing our own ability to iterate and improve. It's harder for downstream packages to support multiple versions of a magic interface than it is for them to changing call QuTiP library functions; with deprecation warnings we can have multiple valid methods for doing the same thing alive in the library at once, but we can't detect what version of an interface a downstream package requires (not keen on the idea of a `__qutip_qobj_api_version__` flag!!).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-825608507:7554,release,release,7554,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-825608507,1,['release'],['release']
Deployability,"le_); 1561 self.coeff_files.append(file_). ~/opt/anaconda3/lib/python3.7/site-packages/qutip/qobjevo_codegen.py in _compiled_coeffs(ops, args, dyn_args, tlist); 128 code = _make_code_4_cimport(ops, args, dyn_args, tlist); 129 coeff_obj, filename = _import_str(code, ""cqobjevo_compiled_coeff_"",; --> 130 ""CompiledStrCoeff"", True); 131 return coeff_obj(ops, args, tlist, dyn_args), code, filename; 132 . ~/opt/anaconda3/lib/python3.7/site-packages/qutip/qobjevo_codegen.py in _import_str(code, basefilename, obj_name, cythonfile); 86 if not import_list:; 87 raise Exception(""Could not convert string to importable function, ""; ---> 88 ""tmpfile:"" + try_file + ext) from err; 89 coeff_obj = import_list[0]; 90 return coeff_obj, try_file + ext. Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_1212362029172.pyx; ```. ```ruby; about(); ```; output: ; ```; QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Current admin team: Alexander Pitchford, Paul D. Nation, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, and Boxi Li; Project Manager: Franco Nori.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.5.2; Numpy Version: 1.18.1; Scipy Version: 1.4.1; Cython Version: 0.29.15; Matplotlib Version: 3.1.3; Python Version: 3.7.6; Number of CPUs: 8; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Darwin (x86_64); Installation path: /Users/tripathi/opt/anaconda3/lib/python3.7/site-packages/qutip; ==============================================================================; Please cite QuTiP in your publication.; ==============================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1326#issuecomment-664714290:11477,Install,Installed,11477,https://qutip.org,https://github.com/qutip/qutip/issues/1326#issuecomment-664714290,2,['Install'],"['Installation', 'Installed']"
Deployability,"lease\pyrex\rhs14880.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:4119,Release,Release,4119,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"lease\pyrex\rhs14880.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In fu",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:4409,Release,Release,4409,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"lease\pyrex\rhs14881.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:9956,Release,Release,9956,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"lease\pyrex\rhs14881.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In fu",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:10162,Release,Release,10162,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"lease\pyrex\rhs14882.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:15960,Release,Release,15960,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"lease\pyrex\rhs14882.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In fu",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:16080,Release,Release,16080,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"lease\pyrex\rhs14883.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:21964,Release,Release,21964,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"lease\pyrex\rhs14883.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In fu",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:21998,Release,Release,21998,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"lex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\p",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:5904,Release,Release,5904,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"lex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\p",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:11741,Release,Release,11741,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"lex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\p",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:17745,Release,Release,17745,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"lex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\p",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:23749,Release,Release,23749,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"lib3/urllib3/issues/2645&gt;</code>__)</li>; <li>Remove &quot;!&quot; character from the unreserved characters in IPv6 Zone ID parsing; (<code>[#2899](https://github.com/urllib3/urllib3/issues/2899) &lt;https://github.com/urllib3/urllib3/issues/2899&gt;</code>__)</li>; <li>Fix IDNA handling of '\x80' byte (<code>[#2901](https://github.com/urllib3/urllib3/issues/2901) &lt;https://github.com/urllib3/urllib3/issues/2901&gt;</code>__)</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/urllib3/urllib3/commit/c9016bf464751a02b7e46f8b86504f47d4238784""><code>c9016bf</code></a> Release 1.26.17</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/01220354d389cd05474713f8c982d05c9b17aafb""><code>0122035</code></a> Backport GHSA-v845-jxx5-vc9f (<a href=""https://redirect.github.com/urllib3/urllib3/issues/3139"">#3139</a>)</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/e63989f97d206e839ab9170c8a76e3e097cc60e8""><code>e63989f</code></a> Fix installing <code>brotli</code> extra on Python 2.7</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/2e7a24d08713a0131f0b3c7197889466d645cc49""><code>2e7a24d</code></a> [1.26] Configure OS for RTD to fix building docs</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/57181d6ea910ac7cb2ff83345d9e5e0eb816a0d0""><code>57181d6</code></a> [1.26] Improve error message when calling urllib3.request() (<a href=""https://redirect.github.com/urllib3/urllib3/issues/3058"">#3058</a>)</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/3c0148048a523325819377b23fc67f8d46afc3aa""><code>3c01480</code></a> [1.26] Run coverage even with failed jobs</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/d94029b7e2193ff47b627906a70e06377a09aae8""><code>d94029b</code></a> Release 1.26.16</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/18e92145e9cddbabdf51c98f54202aa37fd5d4c8""><code>18e9214</code></a> Use trusted publishing for PyPI</li>; <l",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2236:3488,install,installing,3488,https://qutip.org,https://github.com/qutip/qutip/pull/2236,1,['install'],['installing']
Deployability,"line 412, in get_fid_err; return np.abs(1 - self.get_fidelity()); File ""/Users/msoley/opt/anaconda3/lib/python3.7/site-packages/qutip/control/fidcomp.py"", line 422, in get_fidelity; self.fid_norm_func(self.get_fidelity_prenorm()); File ""/Users/msoley/opt/anaconda3/lib/python3.7/site-packages/qutip/control/fidcomp.py"", line 438, in get_fidelity_prenorm; dyn.compute_evolution(); File ""/Users/msoley/opt/anaconda3/lib/python3.7/site-packages/qutip/control/dynamics.py"", line 1394, in compute_evolution; self.tslot_computer.recompute_evolution(); File ""/Users/msoley/opt/anaconda3/lib/python3.7/site-packages/qutip/control/tslotcomp.py"", line 265, in recompute_evolution; prop_comp._compute_prop_grad(k, j); File ""/Users/msoley/opt/anaconda3/lib/python3.7/site-packages/qutip/control/propcomp.py"", line 239, in _compute_prop_grad; dyn._ensure_decomp_curr(k); File ""/Users/msoley/opt/anaconda3/lib/python3.7/site-packages/qutip/control/dynamics.py"", line 1410, in _ensure_decomp_curr; self._spectral_decomp(k); File ""/Users/msoley/opt/anaconda3/lib/python3.7/site-packages/qutip/control/dynamics.py"", line 1627, in _spectral_decomp; dims=self.dyn_dims); File ""/Users/msoley/opt/anaconda3/lib/python3.7/site-packages/qutip/qobj.py"", line 273, in __init__; _tmp = sp.csr_matrix(inpt, dtype=complex, copy=do_copy); File ""/Users/msoley/opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/compressed.py"", line 88, in __init__; self._set_self(self.__class__(coo_matrix(arg1, dtype=dtype))); File ""/Users/msoley/opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/coo.py"", line 191, in __init__; self.row, self.col = M.nonzero(); File ""/Users/msoley/opt/anaconda3/lib/python3.7/site-packages/scipy/sparse/base.py"", line 287, in __bool__; raise ValueError(""The truth value of an array with more than one ""; ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all().; ```. Is there something I am missing in my installation? Thanks again for all of your help.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1617#issuecomment-886098212:3237,install,installation,3237,https://qutip.org,https://github.com/qutip/qutip/issues/1617#issuecomment-886098212,1,['install'],['installation']
Deployability,"list and state ... ok; > > > expect: operator list and state list ... ok; > > > expect: operator and state list ... ok; > > > Read and write complex valued decimal formatted data ... ok; > > > Read and write complex valued default formatted data ... ok; > > > Read and write complex valued exp formatted data ... ok; > > > Read and write real valued decimal formatted data ... ok; > > > Read and write real valued default formatted data ... ok; > > > Read and write real valued exp formatted data ... ok; > > > Read and write with automatic separator detection ... ok; > > > Floquet: test unitary evolution of time-dependent two-level system ... ok; > > > gates: expand 1 to N ... ok; > > > gates: expand 2 to N (using cnot, iswap, sqrtswap) ... ok; > > > gates: expand 2 to N (using swap) ... ok; > > > gates: expand 3 to N (using toffoli, fredkin, and random 3 qubit gate) ... ok; > > > gates: swap gate ... ok; > > > Graph: Breadth-First Search ... ok; > > > Graph: Graph Degree ... SKIP: Networkx not installed.; > > > Graph: Reverse Cuthill-McKee Ordering (simple) ... ok; > > > Graph: Reverse Cuthill-McKee Ordering (Bucky) ... ok; > > > Graph: Reverse Cuthill-McKee Ordering (boost) ... ok; > > > Monte-carlo: Constant H with no collapse ops (expect) ... ok; > > > Monte-carlo: Constant H with no collapse ops (states) ... ok; > > > Monte-carlo: Constant H (str format) with no collapse ops (expect) ... ok; > > > Monte-carlo: Constant H (func format) with no collapse ops (expect) ... ok; > > > Monte-carlo: Constant H (str format) with no collapse ops (states) ... ok; > > > Monte-carlo: Constant H (func format) with no collapse ops (states) ... ok; > > > Monte-carlo: Constant H with constant collapse ... ok; > > > Monte-carlo: Constant H with single collapse operator ... ok; > > > Monte-carlo: Constant H with single expect operator ... ok; > > > Monte-carlo: Collapse terms constant (func format) ... ok; > > > Monte-carlo: Collapse terms constant (str format) ... ok; > > > Monte-carl",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/126#issuecomment-42855884:3397,install,installed,3397,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884,1,['install'],['installed']
Deployability,"little fragile; doing this means we have to guarantee that at _no point_ is the `ctrl_array` object copied. If you wanted to branch off execution part-way through the iterator, you'd have to copy the whole state, and then you'd lose your reference to the control array unless you kept manually walking the structure of the time-dependent object (internally it gets converted into a `QobjEvo` Liouvillian) to retrieve it. The other problem is that `state0` and the `Qobj` parts of the Hamiltonian aren't mutable; the preprocessing of `mesolve` means that none of those objects will exist inside the integrator loop. That's fine for this use-case, but it's not very general. These problems of mutability would apply to callback functions as well. A different way of using `yield` or callback function would be to really lean into a co-routine sort of pattern. So `mesolve` internally would look like; ```python; def mesolve(H, state, times, c_ops, e_ops, options):; # [... set up problem ...]; integrator = scipy.integrate.ode(...); for time in times[1:]:; state = integrator.step_to(time); instructions = yield _mesolve_output_state(state, time, e_ops); integrator = _mesolve_process_instructions(instructions, integrator); ```; and a call to `mesolve` would be like; ```python; solver = mesolve(H, rho0, times, c_ops); try:; result = next(solver); while True:; next_control = krotov.get_next_control(result.time, result.state); result = solver.send([; ('update-arguments', {'control': next_control}),; ('update-hamiltonian', ...),; ('add-c_op', ...),; # possible examples of API commands; ]); except StopIteration:; pass; ```; That's not super user friendly, but it _is_ nicely re-entrant. You'd have a single object you can copy and branch off, and QuTiP would be able to update the relevant objects for you at any given time. Still, I don't think it's a good strategy in general - we'd have to _very_ rigorously define the ""instructions"" API, and it would be pretty awkward to use. It would also be",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-859907481:1830,integrat,integrator,1830,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-859907481,1,['integrat'],['integrator']
Deployability,"llow/Pillow/blob/main/CHANGES.rst"">pillow's changelog</a>.</em></p>; <blockquote>; <h2>9.0.1 (2022-02-03)</h2>; <ul>; <li>; <p>In show_file, use os.remove to remove temporary images. CVE-2022-24303 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6010"">#6010</a>; [radarhere, hugovk]</p>; </li>; <li>; <p>Restrict builtins within lambdas for ImageMath.eval. CVE-2022-22817 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6009"">#6009</a>; [radarhere]</p>; </li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/python-pillow/Pillow/commit/6deac9e3a23caffbfdd75c00d3f0a1cd36cdbd5d""><code>6deac9e</code></a> 9.0.1 version bump</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/c04d812b902356b8c20ee2ab881e1d96f7d66b4b""><code>c04d812</code></a> Update CHANGES.rst [ci skip]</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/4fabec36197735438c80c174d018498be606c46c""><code>4fabec3</code></a> Added release notes for 9.0.1</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/02affaa491df37117a7562e6ba6ac52c4c871195""><code>02affaa</code></a> Added delay after opening image with xdg-open</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/ca0b58521881b95e47ea49d960d13d1c3dac823d""><code>ca0b585</code></a> Updated formatting</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/427221ef5f19157001bf8b1ad7cfe0b905ca8c26""><code>427221e</code></a> In show_file, use os.remove to remove temporary images</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/c930be0758ac02cf15a2b8d5409d50d443550581""><code>c930be0</code></a> Restrict builtins within lambdas for ImageMath.eval</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/75b69dd239a4647032f67a80d9b444228af2b736""><code>75b69dd</code></a> Dont need to pin for GHA</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/cd938a",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1835:2102,release,release,2102,https://qutip.org,https://github.com/qutip/qutip/pull/1835,1,['release'],['release']
Deployability,"lly by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); - `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language; - `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language; - `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language; - `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language. You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/qutip/qutip/network/alerts). </details>",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1563:4272,upgrade,upgrade,4272,https://qutip.org,https://github.com/qutip/qutip/pull/1563,30,['upgrade'],['upgrade']
Deployability,"look, I'm not sure it was detected for the right reason.; The blas configuration is identified by the `_blas_info()` function in qutip/utilities.py. It uses the local numpy configuration (`np.__config`), testing the availability of various attributes in the numpy config, in the form of ; ```; if hasattr(config,'mkl_info') ...; elif hasattr(config,'openblas_info'); ```. MKL was not used to build debian's numpy package, and I don't have it installed. So mkl_info is not detected. OpenBLAS was not used to to build numpy either, but it is installed, so I want look closer at the logic. config (i.e. `np.__config__`) does indeed have an openblas_info. But it is empty (`{}`). Nevertheless `hasattr(config,'openblas_info')`returns True, since the empty dict is there. As far as MKL goes, mkl_info is indeed not there, so qutip does not detect MKL BLAS. But there is a `blas_mkl_info` attribute, and `hasattr(config,'blas_mkl_info')` returns True, same as with openblas_info. numpy provides a summary of its configuration in `np.show_config()`:; ```; numpy.show_config(); blas_armpl_info:; NOT AVAILABLE; blas_mkl_info:; NOT AVAILABLE; blis_info:; NOT AVAILABLE; openblas_info:; NOT AVAILABLE; accelerate_info:; NOT AVAILABLE; atlas_3_10_blas_threads_info:; NOT AVAILABLE; atlas_3_10_blas_info:; NOT AVAILABLE; atlas_blas_threads_info:; NOT AVAILABLE; atlas_blas_info:; NOT AVAILABLE; blas_info:; libraries = ['blas', 'blas']; library_dirs = ['/usr/lib/x86_64-linux-gnu']; include_dirs = ['/usr/local/include', '/usr/include']; language = c; define_macros = [('HAVE_CBLAS', None)]; blas_opt_info:; define_macros = [('NO_ATLAS_INFO', 1), ('HAVE_CBLAS', None)]; libraries = ['blas', 'blas']; library_dirs = ['/usr/lib/x86_64-linux-gnu']; include_dirs = ['/usr/local/include', '/usr/include']; language = c; lapack_armpl_info:; NOT AVAILABLE; lapack_mkl_info:; NOT AVAILABLE; openblas_lapack_info:; NOT AVAILABLE; openblas_clapack_info:; NOT AVAILABLE; flame_info:; NOT AVAILABLE; atlas_3_10_threads_info:",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2053:1685,configurat,configuration,1685,https://qutip.org,https://github.com/qutip/qutip/issues/2053,1,['configurat'],['configuration']
Deployability,looks good. but i think these scripts should install the latest release rather than master.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/279#issuecomment-65957219:45,install,install,45,https://qutip.org,https://github.com/qutip/qutip/pull/279#issuecomment-65957219,2,"['install', 'release']","['install', 'release']"
Deployability,"lopment and manages directly QuTiP-related activities.** It’s thanks to their work and the broader community that the QuTiP project keeps lively, the software is maintained and the features keep expanding and improving. . **<span style=""text-decoration:underline;"">Tasks</span>**. The admin team is listed on the qutip website and specific areas of competence are shown. Members of the admin team pledge to volunteer to:. - Maintain the project through software release updates and bug fixes (core code development, documentation, notebooks, website, other Github-related things). . **- Make decisions about specific technical issues, features, bugs and pull requests. They are the primary mechanism of guiding the code review process and merging pull requests. This includes closing pull requests or issues that are inactive for long or deemed not relevant. **. - Develop new features in qutip/qutip and qutip/other-libraries. ; - Help keep a steady pace of qutip library releases (e.g., ~2 minor releases/year). ; - Actively participate / respond to the qutip-dev internal forum.; - Help in the Q&A support group, qutip public forum. ; - Volunteer time for remote mentorship.; - Discuss code developments.; - Once a year, on a rotation basis, one admin team member is responsible for drafting a report for the QuTiP board.; - **For each subproject that is not qutip/qutip, at least one admin should actively be watching the repository.**. - If there are new projects that wish to come under the umbrella of qutip/, either one of the existing admins should get involved with the project, or the maintainer/developer of the new project joins the admin team upon a consensus reached by the existing admins. **<span style=""text-decoration:underline;"">Composition</span>**; Admin Team members are Team members with [Owner rights](https://github.com/orgs/qutip/people?query=role%3Aowner#) in QuTiP’s main Github Repository (qutip/qutip) that have been active in the past one year. . Additional Admin Team",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1373:8169,release,releases,8169,https://qutip.org,https://github.com/qutip/qutip/issues/1373,1,['release'],['releases']
Deployability,"lose your reference to the control array unless you kept manually walking the structure of the time-dependent object (internally it gets converted into a `QobjEvo` Liouvillian) to retrieve it. The other problem is that `state0` and the `Qobj` parts of the Hamiltonian aren't mutable; the preprocessing of `mesolve` means that none of those objects will exist inside the integrator loop. That's fine for this use-case, but it's not very general. These problems of mutability would apply to callback functions as well. A different way of using `yield` or callback function would be to really lean into a co-routine sort of pattern. So `mesolve` internally would look like; ```python; def mesolve(H, state, times, c_ops, e_ops, options):; # [... set up problem ...]; integrator = scipy.integrate.ode(...); for time in times[1:]:; state = integrator.step_to(time); instructions = yield _mesolve_output_state(state, time, e_ops); integrator = _mesolve_process_instructions(instructions, integrator); ```; and a call to `mesolve` would be like; ```python; solver = mesolve(H, rho0, times, c_ops); try:; result = next(solver); while True:; next_control = krotov.get_next_control(result.time, result.state); result = solver.send([; ('update-arguments', {'control': next_control}),; ('update-hamiltonian', ...),; ('add-c_op', ...),; # possible examples of API commands; ]); except StopIteration:; pass; ```; That's not super user friendly, but it _is_ nicely re-entrant. You'd have a single object you can copy and branch off, and QuTiP would be able to update the relevant objects for you at any given time. Still, I don't think it's a good strategy in general - we'd have to _very_ rigorously define the ""instructions"" API, and it would be pretty awkward to use. It would also be a nuisance for extensibility, probably; the intermediate state and instructions of `mesolve` would just more APIs we have to maintain and keep constant. Note that you can achieve the exact same thing with a callback function pat",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-859907481:1991,integrat,integrator,1991,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-859907481,2,['integrat'],['integrator']
Deployability,"lready. We'd have to modify our procedures a little bit (we're mostly concerned with constructing the underlying matrices at the moment), but it's a smaller change in behaviour. Disadvantages that I can think of:; - It's got linear scaling with the number of conversions registered, so it's in theory possible to register ""too many"" and cause a slow down. In reality, this will be a very small effect (`Qobj` construction time will be dominated by copying data into new formats), and I think the benefits of a priority queue of allowed converters outweighs it in convenience for users.; - It involves some global state of the `qutip` library, which _may_ cause problems for multiprocessing if somebody tries to register a `lambda` converter (can't pass through `pickle`, though I'm not 100% on whether module-level stuff needs to), and of course there's the query of what happens when converters are registered in separate processes. We already have this ""problem"" in 5.0 though, because that's how the entire underlying dispatch mechanism is handled; we can just require that converters must be pickle-able.; - If a downstream package wants to lazily `import qutip` (we're a pretty heavy import right now), it's harder in this method; you'd basically have to ask a user to call `otherlibrary.register_qutip()`. For one, I'm going to put some effort into making `import qutip` take much less time for 5.0 (the main problem right now is we essentially eagerly import all of scipy and IPython if it's around), so that'll make it a bit easier. For two, a single initialisation statement isn't _necessarily_ a terrible thing; users can decide for themselves if they want to install the implicit integrations, but this is definitely an inconvenience relative to the magic method. ---. Apologies that I'm not responding super quickly to everything - I'm not the only main QuTiP dev (and I can only work on QuTiP occasionally anyway), so I'm giving others time to read and think about the proposals as well.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-830003691:8455,install,install,8455,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-830003691,2,"['install', 'integrat']","['install', 'integrations']"
Deployability,"ls>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/psf/requests/blob/main/HISTORY.md"">requests's changelog</a>.</em></p>; <blockquote>; <h2>2.31.0 (2023-05-22)</h2>; <p><strong>Security</strong></p>; <ul>; <li>; <p>Versions of Requests between v2.3.0 and v2.30.0 are vulnerable to potential; forwarding of <code>Proxy-Authorization</code> headers to destination servers when; following HTTPS redirects.</p>; <p>When proxies are defined with user info (<a href=""https://user:pass@proxy:8080"">https://user:pass@proxy:8080</a>), Requests; will construct a <code>Proxy-Authorization</code> header that is attached to the request to; authenticate with the proxy.</p>; <p>In cases where Requests receives a redirect response, it previously reattached; the <code>Proxy-Authorization</code> header incorrectly, resulting in the value being; sent through the tunneled connection to the destination server. Users who rely on; defining their proxy credentials in the URL are <em>strongly</em> encouraged to upgrade; to Requests 2.31.0+ to prevent unintentional leakage and rotate their proxy; credentials once the change has been fully deployed.</p>; <p>Users who do not use a proxy or do not supply their proxy credentials through; the user information portion of their proxy URL are not subject to this; vulnerability.</p>; <p>Full details can be read in our <a href=""https://github.com/psf/requests/security/advisories/GHSA-j8r2-6x86-q33q"">Github Security Advisory</a>; and <a href=""https://nvd.nist.gov/vuln/detail/CVE-2023-32681"">CVE-2023-32681</a>.</p>; </li>; </ul>; <h2>2.30.0 (2023-05-03)</h2>; <p><strong>Dependencies</strong></p>; <ul>; <li>; <p>⚠️ Added support for urllib3 2.0. ⚠️</p>; <p>This may contain minor breaking changes so we advise careful testing and; reviewing <a href=""https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html"">https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html</a>; prior to upgrading.</p>; <p>Users who ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2164:3688,upgrade,upgrade,3688,https://qutip.org,https://github.com/qutip/qutip/pull/2164,1,['upgrade'],['upgrade']
Deployability,"ly note) this information in the QuTiP Docs? I; feel like the fix may take long and having something written up under some; official section on the website may help for future reference. On Wed, 13 May 2020 at 23:38, Eric Giguère <notifications@github.com> wrote:. > I did some tests and; > 1 - Cause by fortran zheer (lapack eigenvalue solver for complex hermitian; > matrices) (c's version Ok); > 2 - It happen when installing the scipy stack with pip but not when; > installing it with conda.; > 3 - It depend on the problem size, 64 seems particularly bad, usually it; > fails on the second call.; > 4 - I only got it in zheevr which is only used in brmesolve. But Nathan; > got it in other tests which use scipy's eigh.; > 4 - It happen in scipy in the fortan version of lapack:; >; > import numpy as np; > from scipy.linalg import eigh; > H = random_hermitian(64); > eigh(H) # Work fine; > eigh(np.asfortranarray(H)) # segfault after a few try, may need to change H; >; > Possible solutions (for zheevr):; >; > - Installing scipy with conda, the easiest solution, but not in our; > control.; > - Finding a way to link clapack from cython. Linking scipy's one would; > require good knowledge of scipy internals since only one cython interface; > is provided. Linking to another installation of lapack, but it would; > require the user to install lapack or install it with qutip. Both seems; > wrong to me.; > - For mac user, call scipy's eigh from cython i zheevr, slower but; > better than risking segfault.; > - Have the code directly in qutip. We can adapt it from OpenBlas:; > https://github.com/xianyi/OpenBLAS/blob/master/lapack-netlib/LAPACKE/src/lapacke_zheevr.c; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/1197#issuecomment-628259492>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADPF67AJF3WTZBCU4YWFY23RRMHMHANCNFSM4LCKXE6A>; > .; ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1197#issuecomment-628441264:1122,Install,Installing,1122,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-628441264,1,['Install'],['Installing']
Deployability,"ly useful and will simplify the code inside the propagator a bit. I removed `.evolve_dm`. > **For `.sys_dims`**:; > ; > The meaning of what `.sys_dims` returns is already unclear in this PR. The docstring says its the dimension of the system. Practically I assume that to mean ""the dimension of the initial state or dm passed to .run()"". However, in the PR its used as the size of the propagator. These are the same if there is no environment, but will be different otherwise.; > ; > I suggest we keep `.sys_dims` but document that it is the dimensions of the system excluding any environment. Changed in HEOMSolver. Since environment only means something for HEOM, so it took some time to understand what it referred to. Adding the change elsewhere would be confusing. ; > **Specifying which solvers support propagators**:; > ; > Currently we have a list of explicit checks at the top of the propagator constructor, but we could instead have a ""propagator_class"" attribute on solvers the same way we have a ""result_class"" and then that could be set to some suitable default for ordinary solvers and None or ""PropagatorNotSupported"" for solvers that don't support them. There is only one class for propagator and I don't see us needing any other, so there is no use for a `propagator_class` . We could have a `support_propagator` flag, but I prefer it this way as we can set a special error message for `HEOMSolver`. ; `HEOMSolver` is the only exceptions where we could support it but choose not to take the time to implement it. ; All deterministic solver we have can be used for propagator, trajectories solver don't have a properly defined propagator for single trajectory and I don't see any use to create a propagator for the averaged states. It would take a lot of trajectories to obtain what is effectively mesolve's propagator. . We could add the flag to the integrator instead, some krylov integrator cannot evolve 2D states, but it's the only one we have plan for and it's not merged yet...",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1999#issuecomment-1335766120:2274,integrat,integrator,2274,https://qutip.org,https://github.com/qutip/qutip/pull/1999#issuecomment-1335766120,2,['integrat'],['integrator']
Deployability,"m/python-pillow/Pillow/issues/7928"">#7928</a>; [radarhere, hugovk]</p>; </li>; <li>; <p>Deprecate <code>eval()</code>, replacing it with <code>lambda_eval()</code> and <code>unsafe_eval()</code> <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7927"">#7927</a>; [radarhere, hugovk]</p>; </li>; <li>; <p>Raise <code>ValueError</code> if seeking to greater than offset-sized integer in TIFF <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7883"">#7883</a>; [radarhere]</p>; </li>; <li>; <p>Add <code>--report</code> argument to <code>__main__.py</code> to omit supported formats <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7818"">#7818</a>; [nulano, radarhere, hugovk]</p>; </li>; <li>; <p>Added RGB to I;16, I;16L, I;16B and I;16N conversion <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7918"">#7918</a>, <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7920"">#7920</a>; [radarhere]</p>; </li>; <li>; <p>Fix editable installation with custom build backend and configuration options <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7658"">#7658</a>; [nulano, radarhere]</p>; </li>; <li>; <p>Fix putdata() for I;16N on big-endian <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7209"">#7209</a>; [Yay295, hugovk, radarhere]</p>; </li>; <li>; <p>Determine MPO size from markers, not EXIF data <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7884"">#7884</a>; [radarhere]</p>; </li>; <li>; <p>Improved conversion from RGB to RGBa, LA and La <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7888"">#7888</a>; [radarhere]</p>; </li>; <li>; <p>Support FITS images with GZIP_1 compression <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7894"">#7894</a>; [radarhere]</p>; </li>; <li>; <p>Use I;16 mode for 9-bit JPEG 2000 images <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7900"">#7900</a>; [scaramallion, radarhere]</p>; </l",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2381:11260,install,installation,11260,https://qutip.org,https://github.com/qutip/qutip/pull/2381,2,"['configurat', 'install']","['configuration', 'installation']"
Deployability,"mand:; > python setup.py install; >; > I get the following error message:; >; > gcc -pthread -B /home/pz/anaconda3/compiler_compat -Wl,--sysroot=/; > -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -fPIC -Iqutip/cy; > -I/home/pz/anaconda3/lib/python3.7/site-packages/numpy/core/include; > -I/home/pz/anaconda3/lib/python3.7/site-packages/numpy/core/include; > -I/home/pz/anaconda3/include/python3.7m -c qutip/cy/spmatfuncs.cpp -o; > build/temp.linux-x86_64-3.7/qutip/cy/spmatfuncs.o -w -O3 -march=native; > -funroll-loops; > gcc: error trying to exec 'cc1plus': execvp: No such file or directory; > error: command 'gcc' failed with exit status 1; >; > It seems the gcc compiler isn't correctly located? Or what else problem.; >; > I checked the gcc version on the workstation:; > gcc --version; > gcc (Ubuntu 8.3.0-6ubuntu1~18.10) 8.3.0; > Copyright (C) 2018 Free Software Foundation, Inc.; > This is free software; see the source for copying conditions. There is NO; > warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.; >; > whereis gcc; > gcc: /usr/bin/gcc /usr/lib/gcc /usr/share/man/man1/gcc.1.gz; >; > How can I direct the installer to find the gcc compiler?; >; > Thanks!; > Best regards, Pu Zhang; > --; > Faculty at School of Physics, Huazhong University of Science and Technology; > Room 819 (N.), Yifu Science and Technology Building; > 1037 Luoyu Road, Wuhan, China; > E-mail: puzhang0702@hust.edu.cn <puzha@fotonik.dtu.dk>; > Homepage: www.researchgate.net/profile/Pu_Zhang4; > Phone: +86 18871860394; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/946?email_source=notifications&email_token=ACGFP3L4OWY2RVW425QSG6DP2IAZPA5CNFSM4GUAHDH2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGODXS6K7I#issuecomment-501605757>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/ACGFP3PIENU3RR46AB6YVKDP2IAZPANCNFSM4GUAHDHQ>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/946#issuecomment-501609220:1949,install,installer,1949,https://qutip.org,https://github.com/qutip/qutip/issues/946#issuecomment-501609220,1,['install'],['installer']
Deployability,"match is quite good. Even with enough trajectories, the numerical error from `smesolve` will be visible.; > ; > The equation solved are those written in the notebook. Various stochastic integration method are provided, the default is the taylor expansion of order 1.5. Thank you very much for your reply, but I still don't quite understand `smesolve`'s `expect` are just the expectation value of the state of each trajectories”. In my understanding, solving for 'smesolve' gives the corresponding 'ρ(t)' and then 'expect'. But 'smesolve' provides **[ntraj [int] number of trajectors]**, which means that there are _ntraj_ 'ρ(t)' (`expect`). If I want to show all _ntraj_ ‘s 'expect', how can I do it?. Can I understand `result.measurement` as measuring(POVM) the `smesolve.result` (where ρ(t) was given by solving the stochastic master equation) .$\hat{\rho}_{f}=\frac{\hat{\Omega}_{m}\hat{\rho}\hat{\Omega}_{m}^{\dagger}}{\mathrm{Tr}[\hat{\Omega}_{m}\hat{\rho}\hat{\Omega}_{m}^{\dagger}]}$。If this is the case, I don't understand the point of doing the measurement again here, because the stochastic master equation itself has a continuous measurement. What I want to do is simply solve the stochastic master equation to get enough trajectories **ρ(t)** and solve the relevant expected value **Tr[ρ(t)A]**. On the one hand, I want to see the expectations of all N quantum trajectories ρ(t)'s expect (**Tr[ρ(t)A] maybe with different dW**), and on the other hand I want to compare the expected average of N quantum trajectories with the result of the master equation(`mesolve.expect`). This is similar to this code in Note (but the result in [Note](https://nbviewer.org/urls/qutip.org/qutip-tutorials/tutorials-v4/time-evolution/016_smesolve-inefficient-detection.ipynb) is `result.measurement`). `fig, ax = plt.subplots(figsize=(8, 4)). for m in result.measurement:; ax.plot(times, m[:, 0].real, ""b"", alpha=0.025). ax.plot(times, result_ref.expect[1], ""k"", lw=2). ax.set_ylim(-25, 25); ax.set_xlim(0",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2194#issuecomment-1635364206:1771,continuous,continuous,1771,https://qutip.org,https://github.com/qutip/qutip/issues/2194#issuecomment-1635364206,1,['continuous'],['continuous']
Deployability,"matplotlib 3.4 has begun issuing some new deprecation warnings against some of the stuff we do in `bloch.py`. Simple reproducer from within `ipython --matplotlib`:; ```python; In [1]: import qutip; ...: b = qutip.Bloch(); ...: b.add_vectors([0, 1, 0]); ...: b.render(); ```; produces; ```; /Users/jake/.anaconda3/envs/qutip/lib/python3.9/site-packages/qutip/bloch.py:451: MatplotlibDeprecationWarning: Axes3D(fig) adding itself to the figure is deprecated since 3.4. Pass the keyword argument auto_add_to_figure=False and use fig.add_axes(ax) to suppress this warning. The default value of auto_add_to_figure will change to False in mpl3.5 and True values will no longer work in 3.6. This is consistent with other Axes classes.; self.axes = Axes3D(self.fig, azim=self.view[0], elev=self.view[1]). /Users/jake/.anaconda3/envs/qutip/lib/python3.9/site-packages/qutip/bloch.py:59: MatplotlibDeprecationWarning:; The M attribute was deprecated in Matplotlib 3.4 and will be removed two minor releases later. Use self.axes.M instead.; xs, ys, zs = proj3d.proj_transform(xs3d, ys3d, zs3d, renderer.M); ```. This particular environment had `matplotlib==3.4.1`. The warnings themselves suggest fixes, however some care needs to be taken; I suspect that the additional keyword `auto_add_to_figure` might be new in matplotlib 3.4 (not sure about the `.M` attribute). We want to keep compatibility with at least `matplotlib>=3` (we don't want to picky so it's easy to use QuTiP with other packages), so it might be necessary to include a version test using `packaging.version.parse`. If someone could test whether that's necessary, that'd be great.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1503:988,release,releases,988,https://qutip.org,https://github.com/qutip/qutip/issues/1503,1,['release'],['releases']
Deployability,matrix_histogram updated - imporved the styling options,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1573:17,update,updated,17,https://qutip.org,https://github.com/qutip/qutip/pull/1573,1,['update'],['updated']
Deployability,"may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unk",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:8918,Release,Release,8918,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unk",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:14836,Release,Release,14836,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unk",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:20754,Release,Release,20754,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"me detail information for the GSoC 2020 project ""Error mitigation in QuTiP"". Unfortunately, I don't have writing access to the QuTiP GitHub Wiki page. I post it here so if anyone finding it nice could copy it to the Wiki page. I add some details based on the original description:. -----------------------------------; ## 1. Error mitigation in QuTiP; From the QuTiP 4.5 release, the qutip.qip module now contains the noisy quantum circuit simulator (which was a GSoC project) providing enhanced features for a pulse-level description of quantum circuits and noise models. A new class `Processor` and several subclasses are added to represent different platforms for quantum computing. They can transfer a quantum circuit into the corresponding control sequence and simulate the dynamics with QuTiP solvers. Different noise models can be added to `qutip.qip.noise` to simulate noise in a quantum device. . This module is still young and many features can be improved, including new device models, new noise models and integration with the existing general framework for quantum circuits (`qutip.qip.circuit`). There are also possible applications such as error mitigation techniques [1-3]. The tutorial notebooks can be found at http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM conference may help you get an overview (https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the Github Project page for a collection of related issues and ongoing Pull Requests. ### Expected outcomes; - More devices defined in the `qutip.qip.device` module. At the moment, we have two models: spin chain and cavity QED. We would like to include some other commonly used planform such as Superconducting system, Ion trap system or silicon system. Each model will need a new set of control hamiltonian and a compiler that find the control pulse of a quantum gate. This part is gonna involve some physics and study of commonly used hardware platforms. The related code can be found in `",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1184:1027,integrat,integration,1027,https://qutip.org,https://github.com/qutip/qutip/issues/1184,1,['integrat'],['integration']
Deployability,"ments/pygments/issues/2401"">#2401</a>)</p>; </li>; <li>; <p>Revert a change that made guessing lexers based on file names slower; on Python 3.10 and older (<a href=""https://redirect.github.com/pygments/pygments/issues/2328"">#2328</a>).</p>; </li>; <li>; <p>Fix some places where a locale-dependent encoding could unintentionally; be used instead of UTF-8 (<a href=""https://redirect.github.com/pygments/pygments/issues/2326"">#2326</a>).</p>; </li>; <li>; <p>Fix Python traceback handling (<a href=""https://redirect.github.com/pygments/pygments/issues/2226"">#2226</a>, <a href=""https://redirect.github.com/pygments/pygments/issues/2329"">#2329</a>).</p>; </li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/pygments/pygments/blob/master/CHANGES"">pygments's changelog</a>.</em></p>; <blockquote>; <h2>Version 2.15.0</h2>; <p>(released April 10th, 2023)</p>; <ul>; <li>; <p>Added lexers:</p>; <ul>; <li>Carbon (<a href=""https://redirect.github.com/pygments/pygments/issues/2362"">#2362</a>, <a href=""https://redirect.github.com/pygments/pygments/issues/2365"">#2365</a>, <a href=""https://redirect.github.com/pygments/pygments/issues/2366"">#2366</a>, <a href=""https://redirect.github.com/pygments/pygments/issues/2367"">#2367</a>, <a href=""https://redirect.github.com/pygments/pygments/issues/2368"">#2368</a>, <a href=""https://redirect.github.com/pygments/pygments/issues/2369"">#2369</a>, <a href=""https://redirect.github.com/pygments/pygments/issues/2370"">#2370</a>)</li>; <li>Dax (<a href=""https://redirect.github.com/pygments/pygments/issues/2335"">#2335</a>, <a href=""https://redirect.github.com/pygments/pygments/issues/2345"">#2345</a>)</li>; <li>MediaWiki Wikitext (<a href=""https://redirect.github.com/pygments/pygments/issues/2373"">#2373</a>, <a href=""https://redirect.github.com/pygments/pygments/issues/827"">#827</a>)</li>; <li>PostgreSQL Explain (<a href=""https://redire",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2201:6349,release,released,6349,https://qutip.org,https://github.com/qutip/qutip/pull/2201,1,['release'],['released']
Deployability,"mesolve returns num_collapse =0, even when I pass collapse operators to it like this ; ``` python; from qutip import *; import numpy as np; import matplotlib.pyplot as plt; from math import *. times = np.linspace(0.0, 10.0, 200); psi0 = tensor(fock(2,0), fock(10, 5)); a = tensor(qeye(2), destroy(10)); sm = tensor(destroy(2), qeye(10)); H = 2 * np.pi * a.dag() * a + 2 * np.pi * sm.dag() * sm + 2 * np.pi * 0.25 * (sm * a.dag() + sm.dag() * a). result = mesolve(H, psi0, times, [np.sqrt(0.1)*a], [a.dag()*a, sm.dag()*sm]); print(""result.num_collapse"",result.num_collapse); # I am getting the no of collapse operators as zero. print(""len(result.expect[0]): {}"".format(len(result.expect[0]))). fig1 = plt.figure(); ax1 = fig1.add_subplot(1, 1, 1). ax1.set_title(""Final evolution""); ax1.set_xlabel(""Time""); ax1.set_ylabel(""P""); ax1.plot(times, result.expect[0], 'b*', linewidth=2); ax1.plot(times, result.expect[1], 'g+', linewidth=2). plt.show(); ``` ; (Some of the code is from @ajgpitch ). PFA the test run of the qutip.testing module as [qutip_testing.pdf](https://github.com/qutip/qutip/files/1865397/qutip_testing.pdf) so that anyone interested could see if there is anything wrong with my installation. Also please let me know if there is any other piece of information that needs to be known. >Computer OS: MacOS 10.13.3 High Sierra. -- ; Thanking You,. Kind regards,. Tejas Shetty. Email ID: tejasshetty.1808@gmail.com",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/846:1194,install,installation,1194,https://qutip.org,https://github.com/qutip/qutip/issues/846,1,['install'],['installation']
Deployability,"method` options, as it is in other solver.; - The method that was referring the homodyne or heterodyne detection is now the `heterodyne` keyword. ie before `method=""heterodyne""` now `heterodyne=True`.; - The default integration method is now `rouchon`, instead of `taylor1.5`. ie the method coming from a physic paper and not a mathematics textbook. . - The stochastic integration methods have been spitted in smaller chunk instead of the huge classes in _stochastic.pyx. I kept most methods, only skipping the taylor order 2.0 method. The python interface is kept very similar to the `Integrator` as `SIntegrator`, the main difference being that `set_state` and `get_state` use an extra random number generator with the time and state. The integration methods are usually 5%~10% slower than they where for medium size problems (shape ~100). Most method are computed the same way as before, but the rouchon method no longer use super operator, but keep the density matrix as a matrix and not an oper-ket. - The derivative computation for used by the integration method has also been split into multiple functions and made only available for `smesolve`. For there methods to be valid, the each diffusion contribution must commute. For `smesolve`, this means that each `sc_ops` must commute, as documented. For `ssesolve`, each `sc_ops` must not only commute, but also commute with other `sc_ops`'s adjoint, this last part being missing from v4's documentation. It also meant that the sc_ops needed to commute with it's own adjoint when using heterodyne detection... - `ssepdpsolve`, `smepdpsolve`, `photocurrent_mesolve`, `photocurrent_sesolve` removed. They are all less efficient variants of `mcsolve`. `mcsolve` already include the photocurrent in the output. - `general_stochastic`, removed. It is a mostly generic stochastic equation solver. The user to define their equations to integrate, but the results are forced into `Results` with expectation values and dims checks, making it hard to use.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2131:1592,integrat,integration,1592,https://qutip.org,https://github.com/qutip/qutip/pull/2131,2,['integrat'],"['integrate', 'integration']"
Deployability,minor pre-3.0 release updates,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/186:14,release,release,14,https://qutip.org,https://github.com/qutip/qutip/pull/186,2,"['release', 'update']","['release', 'updates']"
Deployability,"mits</summary>; <ul>; <li><a href=""https://github.com/pygments/pygments/commit/6c187ad83267be9ce142af3fd5c9e670339dc7aa""><code>6c187ad</code></a> Prepare 2.15 release.</li>; <li><a href=""https://github.com/pygments/pygments/commit/00b9cb022cc9c05784c43c11bd7f73e64008b347""><code>00b9cb0</code></a> Prepare for release.</li>; <li><a href=""https://github.com/pygments/pygments/commit/a0824a45f0bd6c45528fa16132f09dd3570a8234""><code>a0824a4</code></a> Update CHANGES</li>; <li><a href=""https://github.com/pygments/pygments/commit/26f9f6c852846fe579c37fe936a872b68fa686ba""><code>26f9f6c</code></a> Merge pull request <a href=""https://redirect.github.com/pygments/pygments/issues/2406"">#2406</a> from rdbende/fix-fromimport-none</li>; <li><a href=""https://github.com/pygments/pygments/commit/62b1bbbe6e329268eaa4c68f0e3eb8867c450acc""><code>62b1bbb</code></a> Change token of None after from keyword</li>; <li><a href=""https://github.com/pygments/pygments/commit/acee60e4e8dde9ea99fc494740e20b06188791ac""><code>acee60e</code></a> Update CHANGES</li>; <li><a href=""https://github.com/pygments/pygments/commit/eaca69091119e0ac5c97e626ba9e3b21b688c5ed""><code>eaca690</code></a> Add lexer for MediaWiki Wikitext (<a href=""https://redirect.github.com/pygments/pygments/issues/2373"">#2373</a>)</li>; <li><a href=""https://github.com/pygments/pygments/commit/0e9c87bcf096908956e031f15a4e589e83be1691""><code>0e9c87b</code></a> Update CHANGES</li>; <li><a href=""https://github.com/pygments/pygments/commit/ef0abbaece522732031d61391567c017d48d87b7""><code>ef0abba</code></a> Add PostgreSQL Explain lexer (<a href=""https://redirect.github.com/pygments/pygments/issues/2398"">#2398</a>)</li>; <li><a href=""https://github.com/pygments/pygments/commit/3c6e2af8fbc44bb1ef77389d09118c37faea8746""><code>3c6e2af</code></a> Update CHANGES</li>; <li>Additional commits viewable in <a href=""https://github.com/pygments/pygments/compare/2.14.0...2.15.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2201:12893,Update,Update,12893,https://qutip.org,https://github.com/qutip/qutip/pull/2201,1,['Update'],['Update']
Deployability,mmon; creating build/temp.macosx-11.0-arm64-3.9/private; creating build/temp.macosx-11.0-arm64-3.9/private/var; creating build/temp.macosx-11.0-arm64-3.9/private/var/folders; creating build/temp.macosx-11.0-arm64-3.9/private/var/folders/kj; creating build/temp.macosx-11.0-arm64-3.9/private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn; creating build/temp.macosx-11.0-arm64-3.9/private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T; creating build/temp.macosx-11.0-arm64-3.9/private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-install-cp5z29tf; creating build/temp.macosx-11.0-arm64-3.9/private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-install-cp5z29tf/numpy_1458b1f38a5449d18aa77b5bb31c63d1; creating build/temp.macosx-11.0-arm64-3.9/private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-install-cp5z29tf/numpy_1458b1f38a5449d18aa77b5bb31c63d1/numpy; creating build/temp.macosx-11.0-arm64-3.9/private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-install-cp5z29tf/numpy_1458b1f38a5449d18aa77b5bb31c63d1/numpy/_build_utils; creating build/temp.macosx-11.0-arm64-3.9/private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-install-cp5z29tf/numpy_1458b1f38a5449d18aa77b5bb31c63d1/numpy/_build_utils/src; compile options: '-DNPY_INTERNAL_BUILD=1 -DHAVE_NPY_CONFIG_H=1 -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE=1 -D_LARGEFILE64_SOURCE=1 -DNO_ATLAS_INFO=3 -DHAVE_CBLAS -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/umath -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/npymath -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/common -Inumpy/core/include -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/include/numpy -Inumpy/core/src/common -Inumpy/core/src -Inumpy/core -Inumpy/core/src/npymath -Inumpy/core/src/multiarray -Inumpy/core/src/umath -Inumpy/core/src/npysort -I/opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/include/python3.9 -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/common -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/npymath -c'; e,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:63671,install,install-,63671,https://qutip.org,https://github.com/qutip/qutip/issues/1740,1,['install'],['install-']
Deployability,"mode frames to GIF <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7181"">#7181</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Replaced absolute PIL import with relative import <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7173"">#7173</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Removed files and types override <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7194"">#7194</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst"">pillow's changelog</a>.</em></p>; <blockquote>; <h2>10.0.1 (2023-09-15)</h2>; <ul>; <li>; <p>Updated libwebp to 1.3.2 <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7395"">#7395</a>; [radarhere]</p>; </li>; <li>; <p>Updated zlib to 1.3 <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7344"">#7344</a>; [radarhere]</p>; </li>; </ul>; <h2>10.0.0 (2023-07-01)</h2>; <ul>; <li>; <p>Fixed deallocating mask images <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7246"">#7246</a>; [radarhere]</p>; </li>; <li>; <p>Added ImageFont.MAX_STRING_LENGTH <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7244"">#7244</a>; [radarhere, hugovk]</p>; </li>; <li>; <p>Fix Windows build with pyproject.toml <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7230"">#7230</a>; [hugovk, nulano, radarhere]</p>; </li>; <li>; <p>Do not close provided file handles with libtiff <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7199"">#7199</a>; [radarhere]</p>; </li>; <li>; <p>Convert to HSV if mode is HSV in getcolor() <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7226"">#7226</a>; [radarhere]</p>; </li>; <li>;",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2237:8754,Update,Updated,8754,https://qutip.org,https://github.com/qutip/qutip/pull/2237,1,['Update'],['Updated']
Deployability,"mp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Relea",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:7021,Release,Release,7021,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"mp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Relea",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:12858,Release,Release,12858,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"mp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Relea",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:18862,Release,Release,18862,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"mp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Relea",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:24866,Release,Release,24866,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"mparing spectrum from es and pi methods ... ok; correlation: comparing TLS emission correlations (str-list td format) ... In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyre",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:3274,Release,Release,3274,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"mported, etc...; >; > Please add tests covering most case and have them passing.; >; > Also the separation of task is not well used. We split the data container,; > ODE integration and the physics, but here they are mixed together...; >; > The quicksolve is the ""diag"" integrator, you don't have to re implement it; > here. You could just set it as the default method since the rhs is always; > constant (but it seems like this is not desired when time_sense != 0).; > ------------------------------; >; > In doc/guide/scripts/floquet_ex3.py; > <https://github.com/qutip/qutip/pull/2186#discussion_r1245104940>:; >; > > @@ -35,7 +35,6 @@ def noise_spectrum(omega):; > # Alternatively; > psi_t = output.states[idx]; > p_ex[idx] = qutip.expect(qutip.num(2), psi_t); > -; >; > Why did you erase this line?; > ------------------------------; >; > In VERSION; > <https://github.com/qutip/qutip/pull/2186#discussion_r1245585117>:; >; > > @@ -1 +1 @@; > -5.0.0.dev; > +5.0.0a1; >; > The version change when we do a release, not with each PR.; > ------------------------------; >; > In qutip/solver/correlation.py; > <https://github.com/qutip/qutip/pull/2186#discussion_r1245591365>:; >; > > + G1 = correlation_3op(; > + solver, state0, [0], taulist, None, a_op.dag(), a_op)[0]; >; > ⬇️ Suggested change; >; > - G1 = correlation_3op(; > - solver, state0, [0], taulist, None, a_op.dag(), a_op)[0]; > + G1 = correlation_3op(; > + solver, state0, [0], taulist, None, a_op.dag(), a_op; > + )[0]; >; > ------------------------------; >; > In qutip/solver/correlation.py; > <https://github.com/qutip/qutip/pull/2186#discussion_r1245592358>:; >; > > + solver_instance = FLiMESolver(; > + floquet_basis,; > + c_ops,; > + args,; > + time_sense=time_sense; > + ); >; > ⬇️ Suggested change; >; > - solver_instance = FLiMESolver(; > - floquet_basis,; > - c_ops,; > - args,; > - time_sense=time_sense; > - ); > + solver_instance = FLiMESolver(; > + floquet_basis,; > + c_ops,; > + args,; > + time_sense=time_sense,; > + o",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2186#issuecomment-1612045847:1545,release,release,1545,https://qutip.org,https://github.com/qutip/qutip/pull/2186#issuecomment-1612045847,2,['release'],['release']
Deployability,multiprocessing is used in `__init__` to determine how many cpus are available. I guess you are right in that it is unlikely that the number of cpus would change between install and use.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/580#issuecomment-269724696:170,install,install,170,https://qutip.org,https://github.com/qutip/qutip/issues/580#issuecomment-269724696,1,['install'],['install']
Deployability,"n error. I'm a little bit at a loss as to how to fix it. Is this a version related problem?. ### Code to Reproduce the Bug. ```shell; import qutip as qt; a = qt.create(10); a_dag = a.dag(); n = a_dag * a; ```. ### Code Output. ```shell; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); Cell In[2], line 4; 2 a = qt.create(10); 3 a_dag = a.dag(); ----> 4 n = a_dag * a. File ~/anaconda3/envs/danjou/lib/python3.12/site-packages/qutip/qobj.py:497, in Qobj.__mul__(self, other); 495 if self.dims[1] == other.dims[0]:; 496 out = Qobj(); --> 497 out.data = self.data * other.data; 498 dims = [self.dims[0], other.dims[1]]; 499 out.dims = dims. File ~/anaconda3/envs/danjou/lib/python3.12/site-packages/scipy/sparse/_matrix.py:44, in spmatrix.__mul__(self, other); 43 def __mul__(self, other):; ---> 44 return self._matmul_dispatch(other). File ~/anaconda3/envs/danjou/lib/python3.12/site-packages/scipy/sparse/_base.py:606, in _spbase._matmul_dispatch(self, other); 604 if other.ndim == 1:; 605 raise ValueError('Cannot yet multiply a 1d sparse array'); --> 606 return self._matmul_sparse(other); 608 # If it's a list or whatever, treat it like an array; 609 other_a = np.asanyarray(other); ...; ---> 43 raise TypeError('fast_csr_matrix allows only int32 indices.'); 44 if args[2].shape[0] and args[1].dtype != np.int32:; 45 raise TypeError('fast_csr_matrix allows only int32 indptr.'). TypeError: fast_csr_matrix allows only int32 indices.; ```. ### Expected Behaviour. The code should run without error. ### Your Environment. ```shell; QuTiP Version: 4.7.6; Numpy Version: 1.26.4; Scipy Version: 1.13.1; Cython Version: None; Matplotlib Version: 3.8.4; Python Version: 3.12.2; Number of CPUs: 12; BLAS Info: Generic; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (arm64); Installation path: /Users/danb2901/anaconda3/envs/danjou/lib/python3.12/site-packages/qutip; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2468:2166,Install,Installed,2166,https://qutip.org,https://github.com/qutip/qutip/issues/2468,2,['Install'],"['Installation', 'Installed']"
Deployability,"n-pillow/Pillow/issues/5833"">#5833</a> [<a href=""https://github.com/hoodmane""><code>@​hoodmane</code></a>]</li>; <li>Add support for pickling TrueType fonts <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5826"">#5826</a> [<a href=""https://github.com/hugovk""><code>@​hugovk</code></a>]</li>; <li>Only prefer command line tools SDK on macOS over default MacOSX SDK <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5828"">#5828</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fix compilation on 64-bit Termux <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5793"">#5793</a> [<a href=""https://github.com/landfillbaby""><code>@​landfillbaby</code></a>]</li>; <li>Replace 'setup.py sdist' with '-m build --sdist' <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5785"">#5785</a> [<a href=""https://github.com/hugovk""><code>@​hugovk</code></a>]</li>; <li>Use declarative package configuration <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5784"">#5784</a> [<a href=""https://github.com/hugovk""><code>@​hugovk</code></a>]</li>; <li>Use title for display in ImageShow <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5788"">#5788</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fix for PyQt6 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5775"">#5775</a> [<a href=""https://github.com/hugovk""><code>@​hugovk</code></a>]</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst"">pillow's changelog</a>.</em></p>; <blockquote>; <h2>9.0.0 (2022-01-02)</h2>; <ul>; <li>; <p>Restrict builtins for ImageMath.eval(). CVE-2022-22817 <a href=""https://github-redirect.dependabot.com/python-pill",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:9524,configurat,configuration,9524,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['configurat'],['configuration']
Deployability,"n. qutip keeps configuration (e.g. for openmp) in a config file handled in configrc.py. The default location is in the home dir, with; https://github.com/qutip/qutip/blob/d2f1ed57d13bd35055d72f3f6b3418c962491bd9/qutip/configrc.py#L36; setting the dir to `~/.qutip` and; https://github.com/qutip/qutip/blob/d2f1ed57d13bd35055d72f3f6b3418c962491bd9/qutip/configrc.py#L38; setting the config file to `~/.qutip/qutiprc`. This forces Linux distributions to do more work when building in a chroot. For instance Debian build chroots set the ""home"" directory to `/nonexistent`, and then building docs fails with; ```; PermissionError: [Errno 13] Permission denied: '/nonexistent'; ```; since it can't create `/nonexistent/.qutip`. In practice that's not a great problem since when building docs for the package, we can set `HOME=$BUILDDIR` to place the config location in the build dir (which is writable) instead of `/nonexistent`. However there is a standardized location for config files which might be worth considering instead. The freedesktop.org specification at https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html identifies locations for config and data files. Config files can be located under (one of) `$XDG_CONFIG_DIRS` for system configuration, or under `$XDG_CONFIG_HOME` for user configuration. ### Code to Reproduce the Bug. _No response_. ### Code Output. _No response_. ### Expected Behaviour. In python XDG is accessible from the xdg package (in debian, the python3-xdg package). So the XDG equivalent of ; ```; qutip_conf_dir = os.path.join(os.path.expanduser(""~""), '.qutip'); ```; could be done with; ```; from xdg import XDG_CONFIG_HOME; ...; qutip_conf_dir = os.path.join(XDG_CONFIG_HOME, '.qutip'); ```; A more sophisticated method could be set up to also check XDG_CONFIG_DIRS instead (XDG_CONFIG_HOME is the first entry in the list defined in XDG_CONFIG_DIRS). ### Your Environment. ```shell; QuTiP Version: 4.7.0; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1876:1278,configurat,configuration,1278,https://qutip.org,https://github.com/qutip/qutip/issues/1876,2,['configurat'],['configuration']
Deployability,"nd_direct_eigenbases_match[True-10-rand_bra]; - test_basis_transformation.py::test_transformations_from_qobj_and_direct_eigenbases_match[False-2-rand_bra]; - test_basis_transformation.py::test_transformations_from_qobj_and_direct_eigenbases_match[False-10-rand_bra]; - test_brtools.py::test_zheevr; I stopped running the tests after these errors appear, and I don't know if it causes other tests to fail as well.; The test_zheevr shows another error, but it fixes when using a previous version of scipy (e.g. 1.3). . The terminal out put is; ```; > fn = getattr(_sparsetools, self.format + '_matmat_pass1'); E AttributeError: module 'scipy.sparse._sparsetools' has no attribute 'csr_matmat_pass1'. /usr/local/lib/python3.6/dist-packages/qutip-4.5.0-py3.6-linux-x86_64.egg/qutip/fastsparse.py:197: AttributeError; ```. **Your Environment**; QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Current admin team: Alexander Pitchford, Paul D. Nation, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, and Eric Giguère.; Project Manager: Franco Nori.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.5.0; Numpy Version: 1.19.0; Scipy Version: 1.3.0 (error fixed); Scipy Version: 1.5.0 (error present); Cython Version: 0.29.20; Matplotlib Version: 3.2.2; Python Version: 3.6.9; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /usr/local/lib/python3.6/dist-packages/qutip-4.5.0-py3.6-linux-x86_64.egg/qutip; ==============================================================================; Please cite QuTiP in your publication.; ==============================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1304:1987,Install,Installed,1987,https://qutip.org,https://github.com/qutip/qutip/issues/1304,2,['Install'],"['Installation', 'Installed']"
Deployability,"nda2\envs\qtpy3\include ""-IC:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\INCLUDE"" ""-IC:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\ATLMFC\INCLUDE"" ""-IC:\Program Files (x86)\Windows Kits\10\include\10.0.10240.0\ucrt"" ""-IC:\Program Files (x86)\Windows Kits\NETFXSDK\4.6.1\include\um"" ""-IC:\Program Files (x86)\Windows Kits\8.1\include\\shared"" ""-IC:\Program Files (x86)\Windows Kits\8.1\include\\um"" ""-IC:\Program Files (x86)\Windows Kits\8.1\include\\winrt"" ""-IC:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\INCLUDE"" ""-IC:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\ATLMFC\INCLUDE"" ""-IC:\Program Files (x86)\Windows Kits\10\include\10.0.10240.0\ucrt"" ""-IC:\Program Files (x86)\Windows Kits\NETFXSDK\4.6.1\include\um"" ""-IC:\Program Files (x86)\Windows Kits\8.1\include\\shared"" ""-IC:\Program Files (x86)\Windows Kits\8.1\include\\um"" ""-IC:\Program Files (x86)\Windows Kits\8.1\include\\winrt"" /EHsc /Tpqutip/cy/spmatfuncs.cpp /Fobuild\temp.win-amd64-3.5\Release\qutip/cy/spmatfuncs.obj /w /Ox; cl : Command line warning D9025 : overriding '/W3' with '/w'; spmatfuncs.cpp; c:\anaconda2\envs\qtpy3\lib\site-packages\numpy\core\include\numpy\npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; c:\users\alex\documents\github\qutip\qutip\cy\src/zspmv.hpp(3): error C2146: syntax error: missing ')' before identifier 'data'; c:\users\alex\documents\github\qutip\qutip\cy\src/zspmv.hpp(3): error C3646: 'data': unknown override specifier; c:\users\alex\documents\github\qutip\qutip\cy\src/zspmv.hpp(3): error C2062: type 'int' unexpected; c:\users\alex\documents\github\qutip\qutip\cy\src/zspmv.hpp(7): error C2059: syntax error: ')'; qutip/cy/spmatfuncs.cpp(2503): error C2660: 'zspmvpy': function does not take 7 arguments; qutip/cy/spmatfuncs.cpp(2688): error C2660: 'zspmvpy': function does not take 7 arguments; qutip/cy/spmatfuncs.cpp(2923): error C2660: 'zspmvpy': function does ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/648#issuecomment-281199101:1592,Release,Release,1592,https://qutip.org,https://github.com/qutip/qutip/pull/648#issuecomment-281199101,1,['Release'],['Release']
Deployability,"ndabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); - `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language; - `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language; - `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language; - `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language. You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/qutip/qutip/network/alerts). </details>. **Changelog**; Update the version of numpy used for documentation builds to numpy 1.21.0.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1767:5877,upgrade,upgrade,5877,https://qutip.org,https://github.com/qutip/qutip/pull/1767,4,"['Update', 'upgrade']","['Update', 'upgrade']"
Deployability,"ndabot.com/numpy/numpy/pull/19539"">gh-19539</a>)</p>; <h3>Expired deprecations for <code>loads</code>, <code>ndfromtxt</code>, and <code>mafromtxt</code> in npyio</h3>; <p><code>numpy.loads</code> was deprecated in v1.15, with the recommendation that; users use <code>pickle.loads</code> instead. <code>ndfromtxt</code> and <code>mafromtxt</code> were both; deprecated in v1.17 - users should use <code>numpy.genfromtxt</code> instead with; the appropriate value for the <code>usemask</code> parameter.</p>; <p>(<a href=""https://github-redirect.dependabot.com/numpy/numpy/pull/19615"">gh-19615</a>)</p>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/numpy/numpy/commit/4adc87dff15a247e417d50f10cc4def8e1c17a03""><code>4adc87d</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/numpy/numpy/issues/20685"">#20685</a> from charris/prepare-for-1.22.0-release</li>; <li><a href=""https://github.com/numpy/numpy/commit/fd66547557f57c430d41be2fc0764f74a62e8ccf""><code>fd66547</code></a> REL: Prepare for the NumPy 1.22.0 release.</li>; <li><a href=""https://github.com/numpy/numpy/commit/125304b035effcd82e366e601b102e7347eaa9ba""><code>125304b</code></a> wip</li>; <li><a href=""https://github.com/numpy/numpy/commit/c283859128b1a4b57014581570a23ed7950a24ea""><code>c283859</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/numpy/numpy/issues/20682"">#20682</a> from charris/backport-20416</li>; <li><a href=""https://github.com/numpy/numpy/commit/5399c03d4a069fe81a1616be0184c9749d7271ee""><code>5399c03</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/numpy/numpy/issues/20681"">#20681</a> from charris/backport-20954</li>; <li><a href=""https://github.com/numpy/numpy/commit/f9c45f8ebf31340b1a5a0371bfca25afcfc4794e""><code>f9c45f8</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/numpy/numpy/is",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1940:3231,release,release,3231,https://qutip.org,https://github.com/qutip/qutip/pull/1940,1,['release'],['release']
Deployability,"ne 187 in _multicall; File ""/miniconda3/envs/qutipdev45/lib/python3.7/site-packages/pluggy/manager.py"", line 87 in <lambda>; File ""/miniconda3/envs/qutipdev45/lib/python3.7/site-packages/pluggy/manager.py"", line 93 in _hookexec; File ""/miniconda3/envs/qutipdev45/lib/python3.7/site-packages/pluggy/hooks.py"", line 286 in __call__; File ""/miniconda3/envs/qutipdev45/lib/python3.7/site-packages/_pytest/main.py"", line 246 in _main; File ""/miniconda3/envs/qutipdev45/lib/python3.7/site-packages/_pytest/main.py"", line 196 in wrap_session; File ""/miniconda3/envs/qutipdev45/lib/python3.7/site-packages/_pytest/main.py"", line 239 in pytest_cmdline_main; File ""/miniconda3/envs/qutipdev45/lib/python3.7/site-packages/pluggy/callers.py"", line 187 in _multicall; File ""/miniconda3/envs/qutipdev45/lib/python3.7/site-packages/pluggy/manager.py"", line 87 in <lambda>; File ""/miniconda3/envs/qutipdev45/lib/python3.7/site-packages/pluggy/manager.py"", line 93 in _hookexec; File ""/miniconda3/envs/qutipdev45/lib/python3.7/site-packages/pluggy/hooks.py"", line 286 in __call__; File ""/miniconda3/envs/qutipdev45/lib/python3.7/site-packages/_pytest/config/__init__.py"", line 92 in main; File ""/miniconda3/envs/qutipdev45/lib/python3.7/site-packages/qutip-4.5.0.dev0+d13f5435-py3.7-macosx-10.9-x86_64.egg/qutip/testing.py"", line 45 in run; File ""<stdin>"", line 1 in <module>; Abort trap: 6; ```; This is in a conda environment with qutip development version with ; ```; Python 3.7.4 (default, Aug 13 2019, 15:17:50); [Clang 4.0.1 (tags/RELEASE_401/final)] :: Anaconda, Inc. on darwin; ```; and ; ```; QuTiP Version: 4.5.0.dev0+d13f5435; Numpy Version: 1.17.2; Scipy Version: 1.3.1; Cython Version: 0.29.13; Matplotlib Version: 3.1.1; Python Version: 3.7.4; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Darwin (x86_64); Installation path: /miniconda3/envs/qutipdev45/lib/python3.7/site-packages/qutip-4.5.0.dev0+d13f5435-py3.7-macosx-10.9-x86_64.egg/qutip; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1160:4948,Install,Installed,4948,https://qutip.org,https://github.com/qutip/qutip/issues/1160,2,['Install'],"['Installation', 'Installed']"
Deployability,"ne help me with this issue?. The underlying reason for wanting to have MKL is that it allowed me in the past (on the same machine but with a different conda environment I no longer have access to) to calculate the steady states of much larger Liouvillians than I am now able to. I am unfortunately unable to reproduce this environment. Below you can find the outcomes of various installation processes, each in a new conda environment:. **Attempt 1a:** ; Conda install mkl; conda install numpy; conda install scipy; conda install conda-forge::qutip; **Results:** ; QuTiP Version: 	5.0.3; Numpy Version: 	2.0.0; Scipy Version: 	1.14.0; Cython Version: 	None; Matplotlib Version: 	None; Python Version: 	3.12.4; Number of CPUs: 	12; BLAS Info: 		Generic; INTEL MKL Ext: 	False; Platform Info: 	Windows (AMD64). **Attempt 1b:**; Conda install mkl; conda install scipy ; conda install conda-forge::qutip; **Results:**; QuTiP Version: 	5.0.3; Numpy Version: 	1.26.4; Scipy Version: 	 1.10.1; Cython Version: 	None; Matplotlib Version: 	None; Python Version: 	3.10.14; Number of CPUs: 	12; BLAS Info: 		INTEL MKL; INTEL MKL Ext: 	False; Platform Info: 	Windows (AMD64). **Attempt 1c:**; Conda install mkl; conda install conda-forge::qutip; **Results**; QuTiP Version: 5.0.3; Numpy Version: 2.0.0; Scipy Version: 1.14.0; Cython Version: None; Matplotlib Version: None; Python Version: 3.12.4; Number of CPUs: 12; BLAS Info: Generic; INTEL MKL Ext: False; Platform Info: Windows (AMD64). **Attempt 2:** ; Conda install conda-forge::qutip; **Results**: obtained errors when importing qutip (ImportError: DLL load failed while importing _arpack: The specified module could not be found.). **Attempt 2b:**; Conda install scipy; conda install conda-forge::qutip; **Results:**; QuTiP Version: 5.0.3; Numpy Version: 1.26.4; Scipy Version: 1.10.1; Cython Version: None; Matplotlib Version: None; Python Version: 3.10.14; Number of CPUs: 12; BLAS Info: INTEL MKL; INTEL MKL Ext: False; Platform Info: Windows (AMD64)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2496:1659,install,install,1659,https://qutip.org,https://github.com/qutip/qutip/issues/2496,5,['install'],['install']
Deployability,"ng the SolverOptions class is an excellent idea, but I think the PR currently doesn't go far enough and ends up with the solver classes, the integrator classes and the solver option classes required to share too much internal state with each other. As a next step to try untangle things, I suggest the following:. - Let's remove the `known_solvers` and the solver `name` from the SolverOptions and instead have the base solver pass the allowed options with defaults in to the SolverOptions constructor directly. If the allowed options list is `None`, then we can allow all options (for the convenience of users who really want to make their own SolverOptions instances).; - Having the options able to notify a listener of changes seems great -- let's keep that.; - When a solver is created, let's have the base solver create a new SolverOptions instance, either from a dictionary or another SolverOptions instance, but with the allowed options and defaults now specified.; - To deal with the integrator options, let's go back to having a single option named `ode`, but have the value of `ode` have type `SolverOptions`, and be a child of the solver options (if the child has a value modified, it should notify the parent of the change).; - For convenience, when passing options as a dictionary, one should be able to use `{""ode.method"": ""vern9""}` or `{""ode"": {""method"": ""vern9""}`. I think that should be enough to disentangle things from each other. The base solver would need to update the integrator if integrator options change and deal with any changes to the base options. It's not completely clear to me whether the result options should also be sub-options or just be included in the solver options. I'm happy for them to be included in the solver options, as long as the solver options are passed to the result class constructor. That keeps things a bit simpler and if solver needs new result options it can always create its own result sub-class and just process its options there. Thoughts?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1947#issuecomment-1173137945:1027,integrat,integrator,1027,https://qutip.org,https://github.com/qutip/qutip/pull/1947#issuecomment-1173137945,4,"['integrat', 'update']","['integrator', 'update']"
Deployability,"ng_images(; 2811 renderer, self, artists, self.suppressComposite); 2812 . ~/.local/lib/python3.8/site-packages/matplotlib/image.py in _draw_list_compositing_images(renderer, parent, artists, suppress_composite); 130 if not_composite or not has_images:; 131 for a in artists:; --> 132 a.draw(renderer); 133 else:; 134 # Composite any adjacent images together. ~/.local/lib/python3.8/site-packages/matplotlib/artist.py in draw_wrapper(artist, renderer); 48 renderer.start_filter(); 49 ; ---> 50 return draw(artist, renderer); 51 finally:; 52 if artist.get_agg_filter() is not None:. ~/.local/lib/python3.8/site-packages/mpl_toolkits/mplot3d/axes3d.py in draw(self, renderer); 449 for axis in self._get_axis_list()) + 1; 450 collection_zorder = patch_zorder = zorder_offset; --> 451 for artist in sorted(collections_and_patches,; 452 key=do_3d_projection,; 453 reverse=True):. ~/.local/lib/python3.8/site-packages/mpl_toolkits/mplot3d/axes3d.py in do_3d_projection(artist); 424 """"""; 425 try:; --> 426 signature = inspect.signature(artist.do_3d_projection); 427 signature.bind(); 428 # ValueError if `inspect.signature` cannot provide a signature. AttributeError: 'Arrow3D' object has no attribute 'do_3d_projection'; ```. ### Expected Behaviour. The code runs without an error. ### Your Environment. ```shell; QuTiP Version: 4.6.3; Numpy Version: 1.22.2; Scipy Version: 1.8.0; Cython Version: None; Matplotlib Version: 3.5.1; Python Version: 3.8.12; Number of CPUs: 16; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); ```. ### Additional Context. This seems to be caused by [this](https://github.com/matplotlib/matplotlib/issues/21688) update in matplotlib. The solution seems to be to add the following method to `Arrow3D`. ```python; def do_3d_projection(self, renderer=None):; xs3d, ys3d, zs3d = self._verts3d; xs, ys, zs = proj3d.proj_transform(xs3d, ys3d, zs3d, self.axes.M); self.set_positions((xs[0],ys[0]),(xs[1],ys[1])). return np.min(zs); ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1817:3154,Install,Installed,3154,https://qutip.org,https://github.com/qutip/qutip/issues/1817,2,"['Install', 'update']","['Installed', 'update']"
Deployability,"nown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: wa",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:6372,Release,Release,6372,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"nown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: wa",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:12209,Release,Release,12209,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"nown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: wa",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:18213,Release,Release,18213,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"nown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: wa",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:24217,Release,Release,24217,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"numpy seeds must be 32bit usingned int. Thus `np.uint32` is better, `np.int32` will cut half the available seeds. #1219 will fix this but it will take some time before it is officially released.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/968#issuecomment-608570391:185,release,released,185,https://qutip.org,https://github.com/qutip/qutip/issues/968#issuecomment-608570391,1,['release'],['released']
Deployability,"numpy with MKL via conda. The environment is set up with conda on windows. ; ```bash; conda install -c defaults numpy; conda install -c conda-forge qutip; ```. ### Code to Reproduce the Bug. ```shell; >>> qutip.about(); QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman, Simon Cross and Asier Galicia.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.7.1; Numpy Version: 1.23.5; Scipy Version: 1.10.1; Cython Version: None; Matplotlib Version: 3.7.1; Python Version: 3.11.3; Number of CPUs: 8; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Windows (AMD64); Installation path: C:\Users\z62369ry\.conda\envs\ollie2\Lib\site-packages\qutip; ================================================================================; Please cite QuTiP in your publication.; ================================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; ```. ### Code Output. _No response_. ### Expected Behaviour. This installs MKL but qutip doesn't correctly indentify the DLL. ### Your Environment. ```shell; QuTiP Version: 4.7.1; Numpy Version: 1.23.5; Scipy Version: 1.10.1; Cython Version: None; Matplotlib Version: 3.7.1; Python Version: 3.11.3; Number of CPUs: 8; BLAS Info: INTEL MKL; OPENMP Installed: False; ```. ### Additional Context. When looking in the conda `Libraries\bin` directory, qutip searches for `mkl_rt.dll` which doesn't exist leading to the displayed result. However, the dll `mkl_rt.1.dll` does exist and a copy a",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2159:1064,Install,Installed,1064,https://qutip.org,https://github.com/qutip/qutip/issues/2159,2,['Install'],"['Installation', 'Installed']"
Deployability,"nvironment is set up with conda on windows. ; ```bash; conda install -c defaults numpy; conda install -c conda-forge qutip; ```. ### Code to Reproduce the Bug. ```shell; >>> qutip.about(); QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman, Simon Cross and Asier Galicia.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.7.1; Numpy Version: 1.23.5; Scipy Version: 1.10.1; Cython Version: None; Matplotlib Version: 3.7.1; Python Version: 3.11.3; Number of CPUs: 8; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Windows (AMD64); Installation path: C:\Users\z62369ry\.conda\envs\ollie2\Lib\site-packages\qutip; ================================================================================; Please cite QuTiP in your publication.; ================================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; ```. ### Code Output. _No response_. ### Expected Behaviour. This installs MKL but qutip doesn't correctly indentify the DLL. ### Your Environment. ```shell; QuTiP Version: 4.7.1; Numpy Version: 1.23.5; Scipy Version: 1.10.1; Cython Version: None; Matplotlib Version: 3.7.1; Python Version: 3.11.3; Number of CPUs: 8; BLAS Info: INTEL MKL; OPENMP Installed: False; ```. ### Additional Context. When looking in the conda `Libraries\bin` directory, qutip searches for `mkl_rt.dll` which doesn't exist leading to the displayed result. However, the dll `mkl_rt.1.dll` does exist and a copy and paste + rename solves this.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2159:1573,install,installs,1573,https://qutip.org,https://github.com/qutip/qutip/issues/2159,2,"['Install', 'install']","['Installed', 'installs']"
Deployability,"nylinux2014_x86_64.whl.metadata (2.2 kB); Using cached scipy-1.9.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (2.2 kB); Using cached scipy-1.8.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (2.2 kB); Using cached setuptools-69.5.1-py3-none-any.whl (894 kB); Using cached packaging-24.0-py3-none-any.whl (53 kB); Using cached wheel-0.43.0-py3-none-any.whl (65 kB); Using cached Cython-3.0.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.6 MB); Using cached oldest_supported_numpy-2023.12.21-py3-none-any.whl (4.9 kB); Using cached numpy-1.17.3-cp38-cp38-manylinux1_x86_64.whl (20.5 MB); Using cached scipy-1.8.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (41.6 MB); Installing collected packages: wheel, setuptools, packaging, numpy, cython, scipy, oldest-supported-numpy; Successfully installed cython-3.0.2 numpy-1.17.3 oldest-supported-numpy-2023.12.21 packaging-24.0 scipy-1.8.1 setuptools-69.5.1 wheel-0.43.0; Installing build dependencies ... done; Running command Getting requirements to build wheel; Compiling qutip/core/data/dia.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/data/tidyup.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/core/cy/qobjevo.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/data/mul.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg/cython_blas.pxd.; Compiling qutip/core/data/csr.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/scipy/linalg.pxd.; Compiling qutip/solver/sode/ssystem.pyx because it depends on /tmp/pip-build-env-50cuuv9x/overlay/lib/python3.8/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/core/cy/math",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2412:4653,Install,Installing,4653,https://qutip.org,https://github.com/qutip/qutip/issues/2412,1,['Install'],['Installing']
Deployability,"o improve contrast (<a href=""https://redirect.github.com/pygments/pygments/issues/2325"">#2325</a>).</p>; </li>; <li>; <p>Update `github-dark`` style to match latest Primer style (<a href=""https://redirect.github.com/pygments/pygments/issues/2401"">#2401</a>)</p>; </li>; <li>; <p>Revert a change that made guessing lexers based on file names slower; on Python 3.10 and older (<a href=""https://redirect.github.com/pygments/pygments/issues/2328"">#2328</a>).</p>; </li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/pygments/pygments/commit/6c187ad83267be9ce142af3fd5c9e670339dc7aa""><code>6c187ad</code></a> Prepare 2.15 release.</li>; <li><a href=""https://github.com/pygments/pygments/commit/00b9cb022cc9c05784c43c11bd7f73e64008b347""><code>00b9cb0</code></a> Prepare for release.</li>; <li><a href=""https://github.com/pygments/pygments/commit/a0824a45f0bd6c45528fa16132f09dd3570a8234""><code>a0824a4</code></a> Update CHANGES</li>; <li><a href=""https://github.com/pygments/pygments/commit/26f9f6c852846fe579c37fe936a872b68fa686ba""><code>26f9f6c</code></a> Merge pull request <a href=""https://redirect.github.com/pygments/pygments/issues/2406"">#2406</a> from rdbende/fix-fromimport-none</li>; <li><a href=""https://github.com/pygments/pygments/commit/62b1bbbe6e329268eaa4c68f0e3eb8867c450acc""><code>62b1bbb</code></a> Change token of None after from keyword</li>; <li><a href=""https://github.com/pygments/pygments/commit/acee60e4e8dde9ea99fc494740e20b06188791ac""><code>acee60e</code></a> Update CHANGES</li>; <li><a href=""https://github.com/pygments/pygments/commit/eaca69091119e0ac5c97e626ba9e3b21b688c5ed""><code>eaca690</code></a> Add lexer for MediaWiki Wikitext (<a href=""https://redirect.github.com/pygments/pygments/issues/2373"">#2373</a>)</li>; <li><a href=""https://github.com/pygments/pygments/commit/0e9c87bcf096908956e031f15a4e589e83be1691""><code>0e9c87b</code></a> Update CHANGES",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2201:12318,Update,Update,12318,https://qutip.org,https://github.com/qutip/qutip/pull/2201,1,['Update'],['Update']
Deployability,"o install Qutip on my macOS (m1 pro, Ventura 13.0.1). I typed `pip3 install qutip` in the terminal, and get the following error message:. ``` .... copying qutip/cy/openmp/src/zspmv_openmp.hpp -> build/lib.macosx-10.9-universal2-cpython-39/qutip/cy/openmp/src; running build_ext; building 'qutip.cy.cqobjevo' extension; creating build/temp.macosx-10.9-universal2-cpython-39; creating build/temp.macosx-10.9-universal2-cpython-39/qutip; creating build/temp.macosx-10.9-universal2-cpython-39/qutip/cy; clang -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -iwithsysroot/System/Library/Frameworks/System.framework/PrivateHeaders -iwithsysroot/Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/Headers -arch arm64 -arch x86_64 -Werror=implicit-function-declaration -I/private/var/folders/8s/46j41bsj6rq3xkzplbcmjm2h0000gn/T/pip-build-env-do4siooe/overlay/lib/python3.9/site-packages/numpy/core/include -I/Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/Headers -c qutip/cy/cqobjevo.cpp -o build/temp.macosx-10.9-universal2-cpython-39/qutip/cy/cqobjevo.o -w -O3 -funroll-loops -mmacosx-version-min=10.9; qutip/cy/cqobjevo.cpp:38:10: fatal error: 'Python.h' file not found; #include ""Python.h""; ^~~~~~~~~~; 1 error generated.; error: command '/usr/bin/clang' failed with exit code 1; [end of output]; ; note: This error originates from a subprocess, and is likely not a problem with pip.; ERROR: Failed building wheel for qutip; Failed to build qutip; ERROR: Could not build wheels for qutip, which is required to install pyproject.toml-based projects; ```. ### Code to Reproduce the Bug. ```shell; pip3 install qutip; ```. ### Code Output. _No response_. ### Expected Behaviour. It should be installed successfully. ### Your Environment. ```shell; pip version: 22.3.1; ```. ### Additional Context. I tried `pip3 install pyproject` but it doesn't solve the problem.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2027:1677,install,install,1677,https://qutip.org,https://github.com/qutip/qutip/issues/2027,4,['install'],"['install', 'installed']"
Deployability,"o see if the list of observables is valid ; - `Measurement.measurement_comp_basis(self, state)` : This adds measurement statistics for specific qubit measurements in the computational basis and also returns the collapsed states (without changing the dimensions). ; - `QubitCircuit.run(self, state, cbits)`: Given a ket input to the circuit, applies gates and measurements from the circuit and returns the resultant ket. . Right now, the measurement module is very bare-bones and splintered between the previous code ; from @hodgestar and the new code added by me. The eigenstate based measurements are slightly different than the measurements usually used on circuits (or I might be missing something). Ofc, in the case of measurements on all qubits, they amount to the same result. I have not added tests yet but I have added a basic quantum teleportation notebook. It will be nice to get feedback on testing methods as well as what kind of notebooks the community is interested in. Also, any other feature requests on this module would also be appreciated. . PS: I have also added measurement code from Simon's PR here so maybe we can either add him as a contributor to this PR or figure out something else. ; ; Update: . 1. Addressing some concerns about the PR containing multiple diverging pieces of code, I think classical registers, measurement on the circuit and the classically-controlled gates are best grouped together as they all rely on each other in some ways. The valid concern is that of the Measurement class encapsulating all projective style measurements. I also want to point out that it was raised by @BoxiLi that we may want to move the Gate class and Measurement class completely to qutip.qip.operations to which I agree but I believe that should be addressed in a clean-up PR with naming changes suggested by @ajgpitch. . **Related issues or PRs**; Adds to #1090. **Changelog**; Adds partial and complete measurements to state vectors/density matrices and a basic run function",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1274:2626,Update,Update,2626,https://qutip.org,https://github.com/qutip/qutip/pull/1274,1,['Update'],['Update']
Deployability,"obj(data, dims=dims, copy=False, type='oper', isherm=...); ```; providing `data` is actually of a valid (`fast_csr_matrix`) format. Technically the `Qobj.data` attribute will be a new object that wraps the same numpy arrays as was passed, rather than the same `fast_csr_matrix`. In various forms, `expect` already does check the Hermicity, that's why `mc-dm` is careful to set it to avoid recalculating it. The expect functions in `qutip.expect` do this directly, and aren't aware of column-stacked density matrices - they'll just raise a TypeError. `mesolve` and `mcsolve` now bypass the `Qobj` stage and go direct to Cython - in 5.0 it might not be a terrible idea to route everything back through the `Qobj` form, since the performance issues there are solved (a column-stacked dense matrix can be directly wrapped by an f-ordered `Dense` type), and it's the natural central point of the code (and those parts are called from Python-space anyway, so no C concerns). Here though, the problem is actually that the expectation generator in `mesolve` correctly calculates the dtype of the output expectation array using both the state and the expectation operator, but then it does it incorrectly in the loop, and passes the hermicity down to Cython using only the expectation operator, which promptly throws out the complex part. So setting `fast='mc-dm'` in `Qobj` is a symptom of the same root cause as the problem here, rather than the cause itself. At the start of `mesolve` we don't assume that the state is Hermitian, but then inside the integration loop we do. We can still keep the speedup - if the output was created with a complex dtype, we can always safely say that we're passing in non-Hermitian operators, even if coincidentally at one timestep they happen to be anyway. See https://github.com/qutip/qutip/blob/d285e96b3afc61afd1deceef61d9635f9d9aa505/qutip/mcsolve.py#L525-L529 and https://github.com/qutip/qutip/blob/d285e96b3afc61afd1deceef61d9635f9d9aa505/qutip/mesolve.py#L509-L511",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1460#issuecomment-796835048:1976,integrat,integration,1976,https://qutip.org,https://github.com/qutip/qutip/issues/1460#issuecomment-796835048,1,['integrat'],['integration']
Deployability,"object.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conv",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:3596,Release,Release,3596,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"object.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conv",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:9349,Release,Release,9349,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"object.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conv",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:15267,Release,Release,15267,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"object.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conv",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:21185,Release,Release,21185,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"objevo_compiled_coeff_130828459648281117.cp37-win_amd64.exp; Generating code; Finished generating code; cl : Command line warning D9025 : overriding '/W3' with '/w'; cl : Command line warning D9025 : overriding '/Ox' with '/O1'; cqobjevo_compiled_coeff_8398411180025011525.cpp; c:\anaconda\lib\site-packages\numpy\core\include\numpy\npy_1_7_deprecated_api.h(14) : Warning Msg: Using deprecated NumPy API, disable it with #define NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; Creating library C:\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\pyrex\cqobjevo_compiled_coeff_8398411180025011525.cp37-win_amd64.lib and object C:\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\pyrex\cqobjevo_compiled_coeff_8398411180025011525.cp37-win_amd64.exp; Generating code; Finished generating code; Process SpawnPoolWorker-671:; Process SpawnPoolWorker-669:; Traceback (most recent call last):; Traceback (most recent call last):; File ""C:\Anaconda\lib\multiprocessing\process.py"", line 297, in _bootstrap; self.run(); File ""C:\Anaconda\lib\multiprocessing\process.py"", line 297, in _bootstrap; self.run(); File ""C:\Anaconda\lib\multiprocessing\process.py"", line 99, in run; self._target(*self._args, **self._kwargs); File ""C:\Anaconda\lib\multiprocessing\process.py"", line 99, in run; self._target(*self._args, **self._kwargs); File ""C:\Anaconda\lib\multiprocessing\pool.py"", line 110, in worker; task = get(); File ""C:\Anaconda\lib\multiprocessing\pool.py"", line 110, in worker; task = get(); File ""C:\Anaconda\lib\multiprocessing\queues.py"", line 354, in get; return _ForkingPickler.loads(res); File ""C:\Anaconda\lib\multiprocessing\queues.py"", line 354, in get; return _ForkingPickler.loads(res); ModuleNotFoundError: No module named 'cqobjevo_compiled_coeff_130828459648281117'; ModuleNotFoundError: No module named 'cqobjevo_compiled_coeff_130828459648281117'. Note: I have installed qutip using pip installer",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1084:2769,install,installed,2769,https://qutip.org,https://github.com/qutip/qutip/issues/1084,2,['install'],"['installed', 'installer']"
Deployability,"ocumentation of the data-layer isn't readily available yet (we weren't expecting interest this early!). It does individual detection on two different types, rather than creating a `Dispatcher` to handle the multiple dispatch over potentially different data types of the two inputs. I would imagine that a better form of organisation for this sort of routine, which will be able to handle arbitrary tensor-network operations, will end up being made up of two components:; 1. a `Dispatcher` version of something akin to `einsum`, with a couple of limitations; 2. a high-level wrapper function to handle the specific case of local multiplication, which examines the dimensions and target specifiers to produce the input to the `einsum`-like function, then calls the `Dispatcher` with this information. I think this form would likely be preferable for several reasons:; 1. it will allow arbitrary mixing of different data types (`CSR` complete space and `Dense` operator, or both `CSR`, or whatever), with the allowed conversions respecting the global dispatcher rules, not having this function use a different, special configuration; 2. it will mean that the function can also be implemented by plug-in data types (TF/CuPy/etc), installed separately to QuTiP; 3. it will be more general, and easier to maintain; the current `subsystem_apply`, `partial_transpose`, `ptrace`, `tensor_contract` and this can all become special cases of this backing `einsum`-like routine.; 4. after we've implemented new dimensions objects, we'll be able to use a more standardised description of how to refer to individual subspaces of a Hilbert space, which will provide a more consistent UX across the library. This is particularly important if we want this to work well with superoperators. Really, thank you very much for making the PR - I really am excited to see people with an interest in the new data layer! I'm sorry that I took quite so long to respond properly to it, and that when I have, I've ended up being so",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1405#issuecomment-864073566:3376,configurat,configuration,3376,https://qutip.org,https://github.com/qutip/qutip/pull/1405#issuecomment-864073566,1,['configurat'],['configuration']
Deployability,"ode> in npyio</h3>; <p><code>numpy.loads</code> was deprecated in v1.15, with the recommendation that; users use <code>pickle.loads</code> instead. <code>ndfromtxt</code> and <code>mafromtxt</code> were both; deprecated in v1.17 - users should use <code>numpy.genfromtxt</code> instead with; the appropriate value for the <code>usemask</code> parameter.</p>; <p>(<a href=""https://github-redirect.dependabot.com/numpy/numpy/pull/19615"">gh-19615</a>)</p>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/numpy/numpy/commit/4adc87dff15a247e417d50f10cc4def8e1c17a03""><code>4adc87d</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/numpy/numpy/issues/20685"">#20685</a> from charris/prepare-for-1.22.0-release</li>; <li><a href=""https://github.com/numpy/numpy/commit/fd66547557f57c430d41be2fc0764f74a62e8ccf""><code>fd66547</code></a> REL: Prepare for the NumPy 1.22.0 release.</li>; <li><a href=""https://github.com/numpy/numpy/commit/125304b035effcd82e366e601b102e7347eaa9ba""><code>125304b</code></a> wip</li>; <li><a href=""https://github.com/numpy/numpy/commit/c283859128b1a4b57014581570a23ed7950a24ea""><code>c283859</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/numpy/numpy/issues/20682"">#20682</a> from charris/backport-20416</li>; <li><a href=""https://github.com/numpy/numpy/commit/5399c03d4a069fe81a1616be0184c9749d7271ee""><code>5399c03</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/numpy/numpy/issues/20681"">#20681</a> from charris/backport-20954</li>; <li><a href=""https://github.com/numpy/numpy/commit/f9c45f8ebf31340b1a5a0371bfca25afcfc4794e""><code>f9c45f8</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/numpy/numpy/issues/20680"">#20680</a> from charris/backport-20663</li>; <li><a href=""https://github.com/numpy/numpy/commit/794b36f7e1bf2a8c42774ab0db86a74bd32f674b""",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1940:3397,release,release,3397,https://qutip.org,https://github.com/qutip/qutip/pull/1940,1,['release'],['release']
Deployability,"ode></a> Merge pull request <a href=""https://redirect.github.com/psf/requests/issues/6687"">#6687</a> from psf/dependabot/github_actions/github/codeql-act...</li>; <li><a href=""https://github.com/psf/requests/commit/60047ade64b0b882cbc94e047198818ab580911e""><code>60047ad</code></a> Bump github/codeql-action from 3.24.0 to 3.25.0</li>; <li><a href=""https://github.com/psf/requests/commit/31ebb8102c00f8cf8b396a6356743cca4362e07b""><code>31ebb81</code></a> Merge pull request <a href=""https://redirect.github.com/psf/requests/issues/6682"">#6682</a> from frenzymadness/pytest8</li>; <li>Additional commits viewable in <a href=""https://github.com/psf/requests/compare/v2.31.0...v2.32.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=requests&package-manager=pip&previous-version=2.31.0&new-version=2.32.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2434:10202,update,updates,10202,https://qutip.org,https://github.com/qutip/qutip/pull/2434,1,['update'],['updates']
Deployability,"ode></a> Merge pull request <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7674"">#7674</a> from nulano/url-example</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/cb41b0cc78eeefbd9ed2ce8c10f8d6d4c405a706""><code>cb41b0c</code></a> [pre-commit.ci] pre-commit autoupdate</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/de62b25ed318f1604aa4ccd6f942a04c6b2c8b59""><code>de62b25</code></a> fix image url in &quot;Reading from URL&quot; example</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/7c526a6c6bdc7cb947f0aee1d1ee17c266ff6c61""><code>7c526a6</code></a> Update CHANGES.rst [ci skip]</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/d93a5ad70bf94dbb63bdbfb19491a02976574d6d""><code>d93a5ad</code></a> Merge pull request <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7553"">#7553</a> from bgilbert/jpeg-rgb</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/aed764fe8404926472499208a39e5bf90d861b2a""><code>aed764f</code></a> Update CHANGES.rst [ci skip]</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/f8df5303fa9daf40cf8bfe232403cb40389d8f8f""><code>f8df530</code></a> Merge pull request <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7672"">#7672</a> from nulano/imagefont-negative-crop</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/24e9485e6bb733a1a816f228dc75fd0086a93e19""><code>24e9485</code></a> Merge pull request <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7671"">#7671</a> from radarhere/imagetransform</li>; <li>Additional commits viewable in <a href=""https://github.com/python-pillow/Pillow/compare/10.0.1...10.2.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=10.0.1&new-version=10.2.0)](https://docs.github.com/en/github/managing",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2302:14531,Update,Update,14531,https://qutip.org,https://github.com/qutip/qutip/pull/2302,1,['Update'],['Update']
Deployability,"ode></a> Update CHANGES.rst [ci skip]</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/f8df5303fa9daf40cf8bfe232403cb40389d8f8f""><code>f8df530</code></a> Merge pull request <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7672"">#7672</a> from nulano/imagefont-negative-crop</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/24e9485e6bb733a1a816f228dc75fd0086a93e19""><code>24e9485</code></a> Merge pull request <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7671"">#7671</a> from radarhere/imagetransform</li>; <li>Additional commits viewable in <a href=""https://github.com/python-pillow/Pillow/compare/10.0.1...10.2.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=10.0.1&new-version=10.2.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2302:15541,update,updates,15541,https://qutip.org,https://github.com/qutip/qutip/pull/2302,1,['update'],['updates']
Deployability,"oeff_f230db93af3a399e4166e330cf4663.pyx; 	> [...]; 	type(coeff); 	> qtcoeff_f230db93af3a399e4166e330cf4663.StrCoefficient; 	exit(); $ pytest --disable-pytest-warnings --pyargs qutip.tests.core -k test_coefficient; ========================================================================= test session starts =========================================================================; platform linux -- Python 3.11.3, pytest-7.1.2, pluggy-1.0.0; rootdir: /home/paul; collected 5917 items / 5700 deselected / 217 selected. miniconda3/envs/qutip-tmp/lib/python3.11/site-packages/qutip-5.0.0.dev0+7892453-py3.11-linux-x86_64.egg/qutip/tests/core/test_coefficient.py .................. [ 8%]; ............................................................................................................................................................... [ 81%]; .......................................s [100%]. ==================================================== 216 passed, 1 skipped, 5700 deselected, 14 warnings in 59.58s ====================================================; ```. ---. I suggest documenting this dependence in the documentation. Regarding the tests, the concerned tests should probably be skipped if there is a dependency missing? (Just like they already are if cython is missing.) ; In case they are not skipped, the reason for the failure should somehow become more clear. Regarding the actual behavior, qutip could print a warning if `cython` is installed and `filelock` is not, but I am not sure whether that would be a good idea. ---. For completeness, my `qutip.about()` output:. ```; QuTiP Version: 5.0.0.dev0+7892453; Numpy Version: 1.24.3; Scipy Version: 1.10.1; Cython Version: 0.29.33; Matplotlib Version: 3.7.1; Python Version: 3.11.3; Number of CPUs: 16; BLAS Info: INTEL MKL; INTEL MKL Ext: True; Platform Info: Linux (x86_64); Installation path: /home/paul/miniconda3/envs/qutip-tmp/lib/python3.11/site-packages/qutip-5.0.0.dev0+7892453-py3.11-linux-x86_64.egg/qutip; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2162:9294,install,installed,9294,https://qutip.org,https://github.com/qutip/qutip/issues/2162,2,"['Install', 'install']","['Installation', 'installed']"
Deployability,"oid feature creeps. Not to mention all the help provided in Qutip's google group, a forum for bugs, physics questions and research ideas. Over the years, the QuTiP project has enabled a large ecosystem of supported libraries, such as `Krotov` (cc @goerz and others), `pyEPR` (cc @zlatko-minev), `scqubits` (cc @jkochNU), and many others. . With this governance model, we'd like to keep doing what we're doing, with the support, since 2018, of @NumFOCUS, which supports scientific open source projects, and, from now on, the additional support of @unitaryfund, a non-profit that supports open-source projects in quantum technologies. . Below we reproduce a governance document that we will add to a new repository at [github.com/qutip/governance](https://github.com/qutip/governance). We are looking forward to help the growth of the user community, engage it with code contributions and bug reports, and make this awesome scientific open-source project even more sustainable. We will update all related information at [github.com/qutip/governance](https://github.com/qutip/governance), on QuTiP website's news section (http://qutip.org/news.html) and on the QuTiP google group (https://groups.google.com/forum/#!forum/qutip). . Below it is reported how we got there and the text we're adding to the governance. Before making any more official announcements, we thought it nice to ping the community watching this repository. . **Timeline regarding governance talks**:; * April 2018: QuTiP Joins NumFOCUS as an Affiliated Project (and since then participates in Google Summer of Code).; * September 2018: a slide presentation is shared among lead developers with ideas on QuTiP development and governance. ([Link](https://docs.google.com/presentation/d/1lBfS7v4WxduvWy-rf1Vd-hSEeNOK4at91ALuaH58AnQ/edit?usp=sharing)); * February 2019: The first QuTiP developers workshop is held in RIKEN, Wako, Japan, to discuss development and roadmap ([Link](https://docs.google.com/presentation/d/1lBfS7v4WxduvWy-rf",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1373:1921,update,update,1921,https://qutip.org,https://github.com/qutip/qutip/issues/1373,1,['update'],['update']
Deployability,"ol]</p>; </li>; </ul>; <h2>Python 3.10 wheels</h2>; <ul>; <li>Add support for Python 3.10 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5569"">#5569</a>, <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5570"">#5570</a>; [hugovk, radarhere]</li>; </ul>; <h2>Fixed regressions</h2>; <ul>; <li>; <p>Ensure TIFF <code>RowsPerStrip</code> is multiple of 8 for JPEG compression <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5588"">#5588</a>; [kmilos, radarhere]</p>; </li>; <li>; <p>Updates for <code>ImagePalette</code> channel order <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5599"">#5599</a>; [radarhere]</p>; </li>; <li>; <p>Hide FriBiDi shim symbols to avoid conflict with real FriBiDi library <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5651"">#5651</a>; [nulano]</p>; </li>; </ul>; <h2>8.3.1</h2>; <p><a href=""https://pillow.readthedocs.io/en/stable/releasenotes/8.3.1.html"">https://pillow.readthedocs.io/en/stable/releasenotes/8.3.1.html</a></p>; <h2>Changes</h2>; <ul>; <li>Catch OSError when checking if fp is sys.stdout <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5585"">#5585</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Handle removing orientation from alternate types of EXIF data <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5584"">#5584</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Make Image.<strong>array</strong> take optional dtype argument <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5572"">#5572</a> [<a href=""https://github.com/t-vi""><code>@​t-vi</code></a>]</li>; </ul>; <h2>8.3.0</h2>; <p><a href=""https://pillow.readthedocs.io/en/stable/releasenotes/8.3.0.html"">https://pillow.readthedocs.io/en/stable/releasenotes/8.3.0.html</a></p>; <h2>Changes</h2>; <ul>; <li",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1654:1595,release,releasenotes,1595,https://qutip.org,https://github.com/qutip/qutip/pull/1654,1,['release'],['releasenotes']
Deployability,"ollecting pip; Using cached pip-24.0-py3-none-any.whl (2.1 MB); Installing collected packages: pip; Attempting uninstall: pip; Found existing installation: pip 20.0.2; Uninstalling pip-20.0.2:; Successfully uninstalled pip-20.0.2; Successfully installed pip-24.0. $ pip list; Package Version; ------------- -------; pip 24.0; pkg_resources 0.0.0; setuptools 44.0.0. $ pip install qutip; Collecting qutip; Using cached qutip-5.0.1.tar.gz (6.4 MB); Installing build dependencies ... done; Getting requirements to build wheel ... done; ERROR: Some build dependencies for qutip from https://files.pythonhosted.org/packages/43/41/cae32aa94bfe0b22d2aec9392b2676210e5473ce097b10c689297b254a80/qutip-5.0.1.tar.gz conflict with the backend dependencies: numpy==1.17.3 is incompatible with numpy>=1.19.; ```. ### Code Output. _No response_. ### Expected Behaviour. Qutip should install normally. ### Your Environment. ```shell; QuTiP Version: 5.0.1; Numpy Version: (1.17.3) (apparently this is the version it's trying to install); Scipy Version: (1.10.1); Cython Version: (3.0.2); Matplotlib Version: -; Python Version: 3.8.10; Number of CPUs: 16; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64) (Ubuntu 20.04.6 LTS); ```. ### Additional Context. Here's the output of `pip install --verbose qutip`, not sure if it's of any help. <details><summary>Output</summary>. ```; pip install --verbose qutip; Using pip 24.0 from /tmp/test-venv/lib/python3.8/site-packages/pip (python 3.8); Collecting qutip; Using cached qutip-5.0.1.tar.gz (6.4 MB); Running command pip subprocess to install build dependencies; Ignoring cython: markers 'python_version >= ""3.10""' don't match your environment; Collecting setuptools; Using cached setuptools-69.5.1-py3-none-any.whl.metadata (6.2 kB); Collecting packaging; Using cached packaging-24.0-py3-none-any.whl.metadata (3.2 kB); Collecting wheel; Using cached wheel-0.43.0-py3-none-any.whl.metadata (2.2 kB); Collecting cython<3.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2412:1660,install,install,1660,https://qutip.org,https://github.com/qutip/qutip/issues/2412,1,['install'],['install']
Deployability,"olve on this dynamics, shape( 6,69,2,2) . Note that I am only taking the 0th element on the axis with lenght of 69. predictions=[mesolve(H,; Qobj(estados_val[i][0]),; time,list_Jump_op,options=Options(nsteps=10000000000000000)) for i in range(len(estados_val))]. The terminal out put is; /home/andrius/anaconda3/lib/python3.8/site-packages/scipy/integrate/_ode.py:1013: UserWarning: zvode: Excess accuracy requested. (Tolerances too small.); warnings.warn('{:s}: {:s}'.format(self.__class__.__name__,; ---------------------------------------------------------------------------; Exception Traceback (most recent call last); <ipython-input-11-0bc27bfd6f01> in <module>; 40 ; 41 la=10000000000000000; ---> 42 predictions=[mesolve(H,; 43 Qobj(estados_val[i][0]),; 44 time[1:],list_Jump_op,options=Options(nsteps=la)) for i in range(len(estados_val))]. <ipython-input-11-0bc27bfd6f01> in <listcomp>(.0); 40 ; 41 la=10000000000000000; ---> 42 predictions=[mesolve(H,; 43 Qobj(estados_val[i][0]),; 44 time[1:],list_Jump_op,options=Options(nsteps=la)) for i in range(len(estados_val))]. ~/anaconda3/lib/python3.8/site-packages/qutip/mesolve.py in mesolve(H, rho0, tlist, c_ops, e_ops, args, options, progress_bar, _safe_mode); 270 func(0., v, *ode_args) + v; 271 ; --> 272 res = _generic_ode_solve(func, ode_args, rho0, tlist, e_ops, options,; 273 progress_bar, dims=rho0.dims); 274 res.num_collapse = len(c_ops). ~/anaconda3/lib/python3.8/site-packages/qutip/mesolve.py in _generic_ode_solve(func, ode_args, rho0, tlist, e_ops, opt, progress_bar, dims); 515 ; 516 if not r.successful():; --> 517 raise Exception(""ODE integration error: Try to increase ""; 518 ""the allowed number of substeps by increasing ""; 519 ""the nsteps parameter in the Options class.""). Exception: ODE integration error: Try to increase the allowed number of substeps by increasing the nsteps parameter in the Options class. **Expected behavior**; The time evolution of the 0th states. This is it. Am I doing something wrong with it ?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1605:2287,integrat,integration,2287,https://qutip.org,https://github.com/qutip/qutip/issues/1605,2,['integrat'],['integration']
Deployability,"ommand python setup.py egg_info:; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/tmp/pip-build-hg437fn6/qutip/setup.py"", line 159, in <module>; configuration=configuration; File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/core.py"", line 135, in setup; config = configuration(); File ""/tmp/pip-build-hg437fn6/qutip/setup.py"", line 135, in configuration; config.add_subpackage('qutip'); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 1002, in add_subpackage; caller_level = 2); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 971, in get_subpackage; caller_level = caller_level + 1); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 908, in _get_configuration_from_setup_py; config = setup_module.configuration(*args); File ""qutip/setup.py"", line 8, in configuration; config.add_subpackage('cy'); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 1002, in add_subpackage; caller_level = 2); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 971, in get_subpackage; caller_level = caller_level + 1); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 883, in _get_configuration_from_setup_py; ('.py', 'U', 1)); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/imp.py"", line 234, in load_module; return load_source(name, filename, file); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/imp.py"", line 172, in load_source; module = _load(spec); File ""<frozen importlib._bootstrap>"", line 693, in _load; File ""<frozen importlib._bootstrap>"", line 673, in _load_unlocked; File ""<frozen impor",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/426#issuecomment-183253786:1121,configurat,configuration,1121,https://qutip.org,https://github.com/qutip/qutip/issues/426#issuecomment-183253786,1,['configurat'],['configuration']
Deployability,"onda-forge, it is possible to use the `anaconda-package-data` with `dask` and `intake`, ; https://github.com/ContinuumIO/anaconda-package-data. * **pip install qutip**: For PyPI, it is possible to use, `pypinfo` ; https://github.com/ofek/pypinfo; Note that with`pypinfo` Google's Big Data queries are not free, but new accounts come with some budget credited. Some data: . *`pip install qutip` data starts in 2016. In 2018, 8000 downloads are reported. For 2019, well over 10,000 downloads are predicted. *`conda install qutip` data starts in March 2017. For 2018, 30,000 downloads have been performed. This data is useful to gauge the effective popularity of the two package managers and distribution platforms and can help in setting priorities for relative support and bug fixing. . ## Anaconda downloads; <img width=""441"" alt=""qutip-conda-forge-downloads"" src=""https://user-images.githubusercontent.com/14573436/57989417-45d94380-7ad5-11e9-9694-623fec86865b.png"">. ## PyPI downloads; ![pip-install-qutip-png](https://user-images.githubusercontent.com/14573436/57979590-df174400-7a5a-11e9-807e-c2f46bbb830e.png). With `pypinfo` we can also easily extract other information on users' machines details, such as python usage, which can provide guidance on aspects: . ### Python version; #### 2018; | python_version | percent | download_count |; | -------------- | ------: | -------------: |; | 3.6 | 47.33% | 4,079 |; | 2.7 | 24.25% | 2,090 |; | 3.7 | 13.97% | 1,204 |; | 3.5 | 12.43% | 1,071 |; | 3.4 | 1.94% | 167 |; | 2.6 | 0.09% | 8 |; | Total | | 8,619 |. #### 2017; | python_version | percent | download_count |; | -------------- | ------: | -------------: |; | 2.7 | 51.55% | 4,333 |; | 3.6 | 22.13% | 1,860 |; | 3.5 | 19.73% | 1,658 |; | 3.4 | 6.00% | 504 |; | 3.3 | 0.35% | 29 |; | 2.6 | 0.18% | 15 |; | 3.7 | 0.05% | 4 |; | 3.2 | 0.02% | 2 |; | Total | | 8,405 |. This information is relevant also regarding #882. About OS:; ### Operating System; #### 2018; | system_name | percent | downloa",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/997:1303,install,install-qutip-png,1303,https://qutip.org,https://github.com/qutip/qutip/issues/997,1,['install'],['install-qutip-png']
Deployability,"onda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_pw_8rhs14880_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs148",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:8036,Release,Release,8036,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"onda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_pw_8rhs14881_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\U",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:13789,Release,Release,13789,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"onda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_pw_8rhs14882_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\U",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:19707,Release,Release,19707,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"onda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_pw_8rhs14883_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; ok; correlation: comparing TLS emission correlations (fn-list td format) ... ok; correlation: comparing TLS emission correlations (fn td format) ... ok; Counting statistics: current and current noise in a DQD model ... ok; Dispersive cQED Setup: compare unitary matrix for ISWAP and propogator ... ok; Dispersive cQED Setup: compare unitary matrix for ISWAP, SQRTISWAP, ... ok; Diagonalization of random two-level system ... ok; Diagonalization of composite systems ... ok; Excitation-number-restricted state-space: full state space ... ok; Excitation-number-restricted state space: single excitations ... ok; Excitation-number-restricted state space: two excitations ... ok; Excitation-number-restricted state space: fock states ... ok; Excitation-number-restricted state space: identity operator ... ok; Excitation-number-restricted state space: thermal density operator (I) ... ok; Exc",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:25625,Release,Release,25625,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"ong --param ssp-buffer-size=4 -fexceptions -D_FORTIFY_SOURCE=2 -feliminate-unused-debug-types -Wno-error -Wp,-D_REENTRANT -fPIC. compile options: '-I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include -I/home/jakeargent/anaconda3/include/python3.5m -c'; extra options: '-w -ffast-math -O3 -march=native -funroll-loops'; gcc: qutip/cy/src/zspmv.c; qutip/cy/src/zspmv.c:2:21: fatal error: complex.h: No such file or directory; #include <complex.h>; ^; compilation terminated.; qutip/cy/src/zspmv.c:2:21: fatal error: complex.h: No such file or directory; #include <complex.h>; ^; compilation terminated.; error: Command ""gcc -pthread -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -mtune=generic -march=x86-64 -ftree-vectorize -g2 -O2 -pipe -fPIC -Wformat -Wformat-security -fno-omit-frame-pointer -fstack-protector-strong --param ssp-buffer-size=4 -fexceptions -D_FORTIFY_SOURCE=2 -feliminate-unused-debug-types -Wno-error -Wp,-D_REENTRANT -fPIC -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include -I/home/jakeargent/anaconda3/include/python3.5m -c qutip/cy/src/zspmv.c -o build/temp.linux-x86_64-3.5/qutip/cy/src/zspmv.o -w -ffast-math -O3 -march=native -funroll-loops"" failed with exit status 1`. Well, all of them seem to fail with a similar issue. Whatever is exit status 1. ([This](http://stackoverflow.com/questions/35991403/python-pip-install-gives-command-python-setup-py-egg-info-failed-with-error-c) is the SO solution I followed, it claims that error code is related to operation not permitted or setuptools not being installed. I upgraded the setuptools, pip doesn't work with sudo (I'm guessing it shouldn't)). How can I install qutip?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/639:5913,install,install-gives-command-python-setup-py-egg-info-failed-with-error-c,5913,https://qutip.org,https://github.com/qutip/qutip/issues/639,4,"['install', 'upgrade']","['install', 'install-gives-command-python-setup-py-egg-info-failed-with-error-c', 'installed', 'upgraded']"
Deployability,"opying qutip/cy/openmp/br_omp.pxd -> build/lib.macosx-10.9-x86_64-3.7/qutip/cy/openmp; copying qutip/cy/openmp/br_omp.pyx -> build/lib.macosx-10.9-x86_64-3.7/qutip/cy/openmp; copying qutip/cy/openmp/cqobjevo_omp.pyx -> build/lib.macosx-10.9-x86_64-3.7/qutip/cy/openmp; copying qutip/cy/openmp/omp_sparse_utils.pyx -> build/lib.macosx-10.9-x86_64-3.7/qutip/cy/openmp; copying qutip/cy/openmp/parfuncs.pxd -> build/lib.macosx-10.9-x86_64-3.7/qutip/cy/openmp; copying qutip/cy/openmp/parfuncs.pyx -> build/lib.macosx-10.9-x86_64-3.7/qutip/cy/openmp; creating build/lib.macosx-10.9-x86_64-3.7/qutip/cy/openmp/src; copying qutip/cy/openmp/src/zspmv_openmp.hpp -> build/lib.macosx-10.9-x86_64-3.7/qutip/cy/openmp/src; running build_ext; building 'qutip.cy.spmatfuncs' extension; creating build/temp.macosx-10.9-x86_64-3.7; creating build/temp.macosx-10.9-x86_64-3.7/qutip; creating build/temp.macosx-10.9-x86_64-3.7/qutip/cy; creating build/temp.macosx-10.9-x86_64-3.7/qutip/cy/src; gcc -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -arch x86_64 -g -Iqutip/cy -I/private/var/folders/xk/b7_mprf9407c0l8kvdj_f8_80000gs/T/pip-build-env-ob76l82e/overlay/lib/python3.7/site-packages/numpy/core/include -I/private/var/folders/xk/b7_mprf9407c0l8kvdj_f8_80000gs/T/pip-build-env-ob76l82e/overlay/lib/python3.7/site-packages/numpy/core/include -I/Library/Frameworks/Python.framework/Versions/3.7/include/python3.7m -c qutip/cy/spmatfuncs.cpp -o build/temp.macosx-10.9-x86_64-3.7/qutip/cy/spmatfuncs.o -w -O3 -funroll-loops -mmacosx-version-min=10.9; xcrun: error: invalid active developer path (/Library/Developer/CommandLineTools), missing xcrun at: /Library/Developer/CommandLineTools/usr/bin/xcrun; error: command 'gcc' failed with exit status 1; ----------------------------------------; ERROR: Failed building wheel for qutip; Failed to build qutip; ERROR: Could not build wheels for qutip which use PEP 517 and cannot be installed directly. Many thanks",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1404:24456,install,installed,24456,https://qutip.org,https://github.com/qutip/qutip/issues/1404,1,['install'],['installed']
Deployability,"or each stochastic collapse operator, but now it is also possible to do something more sophisticated, like in your milstein solver. I've edited your notebook so that it uses the standard (now modified) smesolve and your rhs functions for the milstein methods. http://nbviewer.ipython.org/6153688. Note that I still only use the rhs function for the contributions due to the stochastic collapse operators (both the deterministic and stochastic part), and it does not include the unitary part or the deterministic collapse operators (if those are given as well), so it is not quite what you suggested when proposing that the rhs should calculate \rho_{n+1}. Do you think this approach is reasonable, or do you see any problems with it?. Regarding your milstein implementation, it seems that it is only valid for homodyne detection, since your have hardcoded the d1 and d2 function into the rhs function. I've tried to separate the definition of the SDE (d1 and d2) from the implementation of the SDE integrator (rhs), and naively it seems like you could use the d1 and d2 functions in rhs_milstein to make it possible to use it with hetrodyne detection as well. Is there any difficulties in generalizing the milstein method and parameterize it in terms of d1 and d2 functions in this way?. I've also tried to use the smesolve_imp and smesolve_milstein with explicit=False in your original notebook, but I do not get resuls that agree with the other methods if I use these. Looking at the code for smesolve_imp, you do an inversion of some variant of the liouvillian to calculate Lsparse, what is the purpose of that calculation? And finally, I see you use expm in _smesolve_single_milstein_implicit: I think this should be avoided because it will be very computationally demanding for larger systems. If you are satisfied with how the new rhs functions work I'll merge the branch sme-rhs-restructuring into qutip master and then feel free to submit a pull request with your milstein rhs implementation.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/35#issuecomment-22088170:1770,integrat,integrator,1770,https://qutip.org,https://github.com/qutip/qutip/issues/35#issuecomment-22088170,1,['integrat'],['integrator']
Deployability,"otations,</li>; <li>new <code>PCG64DXSM</code> bitgenerator for random numbers.</li>; </ul>; <p>In addition there are the usual large number of bug fixes and other; improvements.</p>; <p>The Python versions supported for this release are 3.7-3.9. Official; support for Python 3.10 will be added when it is released.</p>; <p>:warning: Warning: there are unresolved problems compiling NumPy 1.21.0 with gcc-11.1 .</p>; <ul>; <li>Optimization level <code>-O3</code> results in many wrong warnings when running the tests.</li>; <li>On some hardware NumPy will hang in an infinite loop.</li>; </ul>; <h2>New functions</h2>; <h3>Add PCG64DXSM BitGenerator</h3>; <p>Uses of the PCG64 BitGenerator in a massively-parallel context have; been shown to have statistical weaknesses that were not apparent at the; first release in numpy 1.17. Most users will never observe this weakness; and are safe to continue to use PCG64. We have introduced a new; PCG64DXSM BitGenerator that will eventually become the new default; BitGenerator implementation used by <code>default_rng</code> in future releases.; PCG64DXSM solves the statistical weakness while preserving the; performance and the features of PCG64.</p>; <p>See <code>upgrading-pcg64</code> for more details.</p>; <p>(<a href=""https://github-redirect.dependabot.com/numpy/numpy/pull/18906"">gh-18906</a>)</p>; <h2>Expired deprecations</h2>; <ul>; <li>The <code>shape</code> argument <code>numpy.unravel_index</code> cannot be; passed as <code>dims</code> keyword argument anymore. (Was deprecated in NumPy; 1.16.)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/numpy/numpy/commit/b235f9e701e14ed6f6f6dcba885f7986a833743f""><code>b235f9e</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/numpy/numpy/issues/19283"">#19283</a> from charris/prepare-1.21.0-release</li>; <li><a href=""https://github.com/numpy/numpy/c",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1767:1672,release,releases,1672,https://qutip.org,https://github.com/qutip/qutip/pull/1767,1,['release'],['releases']
Deployability,"ouvillians, but dense data for Qobj's that represent Hilbert space states or Density matrices. In fact, it looks like a significant part of the overhead in the [calculation of the Krotov's pulse update](https://github.com/qucontrol/krotov/blob/cfe6b108708cdfd29ab7eee24f2112977b951ed2/src/krotov/optimize.py#L466) is due to the stacking/unstacking, see [`profile.svg`](https://gist.githubusercontent.com/goerz/34af142b78d7e344417d838bbea78aaf/raw/f3f49104083d59b9612f153d2f0ff652ea6a9f01/profile.svg) in the [gist](https://gist.github.com/goerz/34af142b78d7e344417d838bbea78aaf#file-profile-svg). In the benchmarking notebook, for the optimization in `In [34]`, that's the extra 6 seconds per iteration (iterations 1-3 should ideally take exactly twice as long as iteration 0, as iteration 0 is a simple forward propagation and all later iterations are one forward and one backward propagations). That's what we have in our Fortran implementation, too: the runtime of the optimization is basically just the runtime of all the internal propagations; calculating the updates should be completely negligible. There's also [shape conversions](https://github.com/qucontrol/krotov/blob/cfe6b108708cdfd29ab7eee24f2112977b951ed2/src/krotov/propagators.py#L254-L260) happening in [`DensityMatrixODEPropagator`](https://github.com/qucontrol/krotov/blob/cfe6b108708cdfd29ab7eee24f2112977b951ed2/src/krotov/propagators.py#L162) which would be nice to eliminate. Lastly, having dense internal storage for states might actually give the same speedup as we've demonstrated in https://qucontrol.github.io/krotov/v1.2.1/notebooks/09_example_numpy.html for doing Krotov with numpy arrays instead of Qobj's -- potentially even more speedup, in fact, since with numpy now *everything* is dense (including the Hamiltonian), whereas the best thing to do numerically would be to do sparse-matrix-dense-vector operations (which is what we do in Fortran, incidentally). > In the form I've written it, this loop is thread-safe ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243:4331,update,updates,4331,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243,1,['update'],['updates']
Deployability,"ow/issues/5651"">#5651</a>; [nulano]</p>; </li>; </ul>; <h2>8.3.1</h2>; <p><a href=""https://pillow.readthedocs.io/en/stable/releasenotes/8.3.1.html"">https://pillow.readthedocs.io/en/stable/releasenotes/8.3.1.html</a></p>; <h2>Changes</h2>; <ul>; <li>Catch OSError when checking if fp is sys.stdout <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5585"">#5585</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Handle removing orientation from alternate types of EXIF data <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5584"">#5584</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Make Image.<strong>array</strong> take optional dtype argument <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5572"">#5572</a> [<a href=""https://github.com/t-vi""><code>@​t-vi</code></a>]</li>; </ul>; <h2>8.3.0</h2>; <p><a href=""https://pillow.readthedocs.io/en/stable/releasenotes/8.3.0.html"">https://pillow.readthedocs.io/en/stable/releasenotes/8.3.0.html</a></p>; <h2>Changes</h2>; <ul>; <li>Use snprintf instead of sprintf <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5567"">#5567</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Limit TIFF strip size when saving with LibTIFF <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5514"">#5514</a> [<a href=""https://github.com/kmilos""><code>@​kmilos</code></a>]</li>; <li>Allow ICNS save on all operating systems <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/4526"">#4526</a> [<a href=""https://github.com/newpanjing""><code>@​newpanjing</code></a>]</li>; <li>De-zigzag JPEG's DQT when loading; deprecate convert_dict_qtables <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/4989"">#4989</a> [<a href=""https://github.com/gofr""><code>@​gofr</code></a>]</li>; <li>Do not use back",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1654:2471,release,releasenotes,2471,https://qutip.org,https://github.com/qutip/qutip/pull/1654,1,['release'],['releasenotes']
Deployability,"p3 install qutip`. After running. `import qutip.testing; qutip.testing.run()`. I get the following lengthy output. Does anyone have an idea of what is going on?. >>> import qutip.testing; >>> qutip.testing.run(). QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman, Simon Cross and Asier Galicia.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.7.1; Numpy Version: 1.25.0; Scipy Version: 1.10.1; Cython Version: None; Matplotlib Version: 3.7.1; Python Version: 3.9.6; Number of CPUs: 10; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (arm64); Installation path: /Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip; ================================================================================; Please cite QuTiP in your publication.; ================================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; ================================================================== test session starts ===================================================================; platform darwin -- Python 3.9.6, pytest-7.3.2, pluggy-1.2.0 -- /Applications/Xcode.app/Contents/Developer/usr/bin/python3; cachedir: .pytest_cache; rootdir: /Users/guglielmo2; collected 2814 items / 30 errors / 51 deselected / 2763 selected . ========================================================================= ERRORS =========================================================================; _________________________________",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:1105,Install,Installed,1105,https://qutip.org,https://github.com/qutip/qutip/issues/2180,2,['Install'],"['Installation', 'Installed']"
Deployability,"p>; <ul>; <li>Annotations of the main namespace are essentially complete. Upstream; is a moving target, so there will likely be further improvements,; but the major work is done. This is probably the most user visible; enhancement in this release.</li>; <li>A preliminary version of the proposed Array-API is provided. This is; a step in creating a standard collection of functions that can be; used across application such as CuPy and JAX.</li>; <li>NumPy now has a DLPack backend. DLPack provides a common interchange; format for array (tensor) data.</li>; <li>New methods for <code>quantile</code>, <code>percentile</code>, and related functions. The; new methods provide a complete set of the methods commonly found in; the literature.</li>; <li>A new configurable allocator for use by downstream projects.</li>; </ul>; <p>These are in addition to the ongoing work to provide SIMD support for; commonly used functions, improvements to F2PY, and better documentation.</p>; <p>The Python versions supported in this release are 3.8-3.10, Python 3.7; has been dropped. Note that 32 bit wheels are only provided for Python; 3.8 and 3.9 on Windows, all other wheels are 64 bits on account of; Ubuntu, Fedora, and other Linux distributions dropping 32 bit support.; All 64 bit wheels are also linked with 64 bit integer OpenBLAS, which should fix; the occasional problems encountered by folks using truly huge arrays.</p>; <h2>Expired deprecations</h2>; <h3>Deprecated numeric style dtype strings have been removed</h3>; <p>Using the strings <code>&quot;Bytes0&quot;</code>, <code>&quot;Datetime64&quot;</code>, <code>&quot;Str0&quot;</code>, <code>&quot;Uint32&quot;</code>,; and <code>&quot;Uint64&quot;</code> as a dtype will now raise a <code>TypeError</code>.</p>; <p>(<a href=""https://github-redirect.dependabot.com/numpy/numpy/pull/19539"">gh-19539</a>)</p>; <h3>Expired deprecations for <code>loads</code>, <code>ndfromtxt</code>, and <code>mafromtxt</code> in npyio</h3>; <p><code>numpy.loads</co",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1940:1460,release,release,1460,https://qutip.org,https://github.com/qutip/qutip/pull/1940,1,['release'],['release']
Deployability,"patibility_score?dependency-name=certifi&package-manager=pip&previous-version=2023.7.22&new-version=2024.7.4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/qutip/qutip/network/alerts). </details>",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2483:4420,upgrade,upgrade,4420,https://qutip.org,https://github.com/qutip/qutip/pull/2483,3,['upgrade'],['upgrade']
Deployability,"peError Traceback (most recent call last); <ipython-input-45-5b91e5c389a5> in <module>; ----> 1 copy_state.ptrace(0). /nix/store/63j2vgz5klgnr814blqrqhj0mzvb2nyj-qutip-4.5.2/lib/python3.8/site-packages/qutip/qobj.py in ptrace(self, sel, sparse); 1353 return q.tidyup() if settings.auto_tidyup else q; 1354 else:; -> 1355 return _ptrace_dense(self, sel); 1356 ; 1357 def permute(self, order):. /nix/store/63j2vgz5klgnr814blqrqhj0mzvb2nyj-qutip-4.5.2/lib/python3.8/site-packages/qutip/qobj.py in _ptrace_dense(Q, sel); 2197 rd = list(rd); 2198 if isket(Q):; -> 2199 vmat = (Q.full(); 2200 .reshape(rd); 2201 .transpose(sel + qtrace). TypeError: 'numpy.float64' object cannot be interpreted as an integer. ```. **Expected behavior**; I would expect that `Qobj(myobject.full())` is a copy of `myobject`, but it turns out it's not (can't ptrace). Note that if it is not a bug (completely possible), I'd be curious to know what is the proper way to do what I need to do. **Your Environment**. qutip is installed via nix:. ```; QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Current admin team: Alexander Pitchford, Paul D. Nation, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, and Boxi Li; Project Manager: Franco Nori.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.5.2; Numpy Version: 1.18.1; Scipy Version: 1.4.1; Cython Version: None; Matplotlib Version: 3.1.3; Python Version: 3.8.3; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /nix/store/63j2vgz5klgnr814blqrqhj0mzvb2nyj-qutip-4.5.2/lib/python3.8/site-packages/qutip; ==============================================================================; Please cite QuTiP in your publication.; =====================",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1358:2279,install,installed,2279,https://qutip.org,https://github.com/qutip/qutip/issues/1358,1,['install'],['installed']
Deployability,"pendencies on Cygwin <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7175"">#7175</a>; [radarhere]</p>; </li>; <li>; <p>Changed grabclipboard() to use PNG instead of JPG compression on macOS <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7219"">#7219</a>; [abey79, radarhere]</p>; </li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/python-pillow/Pillow/commit/e34d346f10c0b1c814661e662a3e0c1ef084cf1c""><code>e34d346</code></a> Updated order</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/a62f2402a6bcf11a0a1670542216725a3f9190e0""><code>a62f240</code></a> 10.0.1 version bump</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/d50250d9eab741ae3ddd592d8910cfd7973b9d35""><code>d50250d</code></a> Added release notes for 10.0.1</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/b4c7d4b8b2710b7af6cc944a804902eb75fd9056""><code>b4c7d4b</code></a> Update CHANGES.rst [ci skip]</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/730f74600e8215ab510f71bb1fbb49d906c4356b""><code>730f746</code></a> Updated libwebp to 1.3.2</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/b0e28048d692effadfe7a4268a03e1d20e0198bb""><code>b0e2804</code></a> Updated zlib to 1.3</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/6e28ed1f36d0eb74053af54e1eddc9c29db698cd""><code>6e28ed1</code></a> 10.0.0 version bump</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/c827f3b30f50bf04fd65daeeba6bbfd56fc7b50e""><code>c827f3b</code></a> Merge pull request <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7246"">#7246</a> from radarhere/deallocate</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/39a3b1d83edcf826c3864e26bedff5b4e4dd331b""><code>39a3b1d</code></a> Fixed deallocating mask images</li>; <li><a href=""https://github.com/pyth",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2237:11764,Update,Update,11764,https://qutip.org,https://github.com/qutip/qutip/pull/2237,1,['Update'],['Update']
Deployability,perf: force bloch view update on render,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1216:23,update,update,23,https://qutip.org,https://github.com/qutip/qutip/pull/1216,1,['update'],['update']
Deployability,"precate convert_dict_qtables <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/4989"">#4989</a>; [gofr, radarhere]</p>; </li>; <li>; <p>Replaced xml.etree.ElementTree <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5565"">#5565</a>; [radarhere]</p>; </li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/python-pillow/Pillow/commit/8013f130a5077b238a4346b73e149432b180a8ea""><code>8013f13</code></a> 8.3.2 version bump</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/23c7ca82f09df6ba1047d2d96714eb825f0d7948""><code>23c7ca8</code></a> Update CHANGES.rst</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/8450366be331762ae327036e3c6658c517b05638""><code>8450366</code></a> Update release notes</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/a0afe89990f5ba40a019afc2f22e1b656f8cfd03""><code>a0afe89</code></a> Update test case</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/9e08eb8f78fdfd2f476e1b20b7cf38683754866b""><code>9e08eb8</code></a> Raise ValueError if color specifier is too long</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/bd5cf7db87c6abf7c3510a50170851af5538249f""><code>bd5cf7d</code></a> FLI tests for Oss-fuzz crash.</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/94a0cf1b14f09626c7403af83fa9fef0dfc9bb47""><code>94a0cf1</code></a> Fix 6-byte OOB read in FliDecode</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/cece64f4be10ab28b12a83a3555af579dad343a5""><code>cece64f</code></a> Add 8.3.2 (2021-09-02) [CI skip]</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/e42238637651f191c2fc6e3f4024348c126e0ccc""><code>e422386</code></a> Add release notes for Pillow 8.3.2</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/08dcbb873217874eee0830fc5aaa1f231c5af4fa""><code>0",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1654:7635,Update,Update,7635,https://qutip.org,https://github.com/qutip/qutip/pull/1654,1,['Update'],['Update']
Deployability,"probably there are more edge case and functions that need an update (sprepost() etc), but maybe for now this is a sufficient fix?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2341#issuecomment-1978108039:61,update,update,61,https://qutip.org,https://github.com/qutip/qutip/pull/2341#issuecomment-1978108039,1,['update'],['update']
Deployability,"ps://github-redirect.dependabot.com/python-pillow/Pillow/issues/6532"">#6532</a> [<a href=""https://github.com/nulano""><code>@​nulano</code></a>]</li>; <li>Fixed set_variation_by_name offset <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6445"">#6445</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Windows build improvements <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6562"">#6562</a> [<a href=""https://github.com/nulano""><code>@​nulano</code></a>]</li>; <li>Fix malloc in _imagingft.c:font_setvaraxes <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6690"">#6690</a> [<a href=""https://github.com/cgohlke""><code>@​cgohlke</code></a>]</li>; <li>Only use ASCII characters in C source file <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6691"">#6691</a> [<a href=""https://github.com/cgohlke""><code>@​cgohlke</code></a>]</li>; <li>Release Python GIL when converting images using matrix operations <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6418"">#6418</a> [<a href=""https://github.com/hmaarrfk""><code>@​hmaarrfk</code></a>]</li>; <li>Added ExifTags enums <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6630"">#6630</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Do not modify previous frame when calculating delta in PNG <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6683"">#6683</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Added support for reading BMP images with RLE4 compression <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6674"">#6674</a> [<a href=""https://github.com/npjg""><code>@​npjg</code></a>]</li>; <li>Decode JPEG compressed BLP1 data in original mode <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6678"">#6678</a> [",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:2993,Release,Release,2993,https://qutip.org,https://github.com/qutip/qutip/pull/2023,1,['Release'],['Release']
Deployability,"ps://github.com/numpy/numpy/commit/794b36f7e1bf2a8c42774ab0db86a74bd32f674b""><code>794b36f</code></a> Update armccompiler.py</li>; <li><a href=""https://github.com/numpy/numpy/commit/d93b14e3d7abaa1d837825e51671f817788e120f""><code>d93b14e</code></a> Update test_public_api.py</li>; <li><a href=""https://github.com/numpy/numpy/commit/7662c0789cc6a70d5ad4d950ee2e95f3afef7df6""><code>7662c07</code></a> Update <strong>init</strong>.py</li>; <li><a href=""https://github.com/numpy/numpy/commit/311ab52488a7d096ac3bc4c2de0fdae17ecd13ef""><code>311ab52</code></a> Update armccompiler.py</li>; <li>Additional commits viewable in <a href=""https://github.com/numpy/numpy/compare/v1.21.0...v1.22.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=numpy&package-manager=pip&previous-version=1.21.0&new-version=1.22.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1940:5343,update,updates,5343,https://qutip.org,https://github.com/qutip/qutip/pull/1940,1,['update'],['updates']
Deployability,"ps://github.com/python-pillow/Pillow/releases"">pillow's releases</a>.</em></p>; <blockquote>; <h2>8.3.2</h2>; <p><a href=""https://pillow.readthedocs.io/en/stable/releasenotes/8.3.2.html"">https://pillow.readthedocs.io/en/stable/releasenotes/8.3.2.html</a></p>; <h2>Security</h2>; <ul>; <li>; <p>CVE-2021-23437 Raise ValueError if color specifier is too long; [hugovk, radarhere]</p>; </li>; <li>; <p>Fix 6-byte OOB read in FliDecode; [wiredfool]</p>; </li>; </ul>; <h2>Python 3.10 wheels</h2>; <ul>; <li>Add support for Python 3.10 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5569"">#5569</a>, <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5570"">#5570</a>; [hugovk, radarhere]</li>; </ul>; <h2>Fixed regressions</h2>; <ul>; <li>; <p>Ensure TIFF <code>RowsPerStrip</code> is multiple of 8 for JPEG compression <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5588"">#5588</a>; [kmilos, radarhere]</p>; </li>; <li>; <p>Updates for <code>ImagePalette</code> channel order <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5599"">#5599</a>; [radarhere]</p>; </li>; <li>; <p>Hide FriBiDi shim symbols to avoid conflict with real FriBiDi library <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5651"">#5651</a>; [nulano]</p>; </li>; </ul>; <h2>8.3.1</h2>; <p><a href=""https://pillow.readthedocs.io/en/stable/releasenotes/8.3.1.html"">https://pillow.readthedocs.io/en/stable/releasenotes/8.3.1.html</a></p>; <h2>Changes</h2>; <ul>; <li>Catch OSError when checking if fp is sys.stdout <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5585"">#5585</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Handle removing orientation from alternate types of EXIF data <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5584"">#5584</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</co",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1654:1158,Update,Updates,1158,https://qutip.org,https://github.com/qutip/qutip/pull/1654,1,['Update'],['Updates']
Deployability,"ps://qiskit.org/documentation/stubs/qiskit.quantum_info.average_gate_fidelity.html relating the average gate fidelity to the process fidelity, and https://qiskit.org/documentation/stubs/qiskit.quantum_info.process_fidelity.html#qiskit.quantum_info.process_fidelity to compute that from a superoperator. I think it would be better to use that direct formula if the input is not already in Kraus form!. There is also a function `process_fidelity` in Qutip, but I'm having a hard time understanding what it's intended for. It doesn't seem to be the process fidelity explained in the Qiskit docs above. The arguments of Qutip's `process_fidelity` are called `U1` and `U2` suggesting they are expected to be unitary, but this is not checked. It is computed as `(U1 * U2).tr()`, which is not between 0 and 1, and doesn't give 1 as I'd expect if `U1==U2`. Does someone know the intended use of that function? If not, I'd implement the process fidelity as described in the Qiskit docs here, with several version depending on whether the input is Kraus, a superoperator, and maybe a chi matrix. Lastly, there is an issue with the tests - the lines; ```; class Test_dnorm:; # Skip dnorm tests if we don't have cvxpy or cvxopt available, since it; # depends on them.; cvxpy = pytest.importorskip(""cvxpy""); cvxopt = pytest.importorskip(""cvxopt""); ```; actually skip all the tests in the file if cvxpy is not available, not just the ones in the `Test_dnorm` class. The test output, if `cvxpy` is not installed, is; ```; $ pytest qutip/tests/test_metrics.py ; ============================= test session starts ==============================; platform linux -- Python 3.9.7, pytest-6.2.4, py-1.10.0, pluggy-0.13.1; rootdir: /home/florian/code/qutip/qutip/qutip/tests, configfile: pytest.ini; plugins: rerunfailures-10.1; collected 0 items / 1 skipped ; ```; That issue seems to be addressed on the dev.major branch. Would it make sense to take the test file from there and use it in the master branch also?. Thanks!",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1703:1996,install,installed,1996,https://qutip.org,https://github.com/qutip/qutip/issues/1703,1,['install'],['installed']
Deployability,"ps://redirect.github.com/python-pillow/Pillow/issues/7497"">#7497</a>; [ZachNagengast, nulano, radarhere]</p>; </li>; <li>; <p>Attempt memory mapping when tile args is a string <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7565"">#7565</a>; [radarhere]</p>; </li>; <li>; <p>Fill identical pixels with transparency in subsequent frames when saving GIF <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7568"">#7568</a>; [radarhere]</p>; </li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/python-pillow/Pillow/commit/6956d0b2853f5c7ec5f6ec4c60725c5a7ee73aeb""><code>6956d0b</code></a> 10.2.0 version bump</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/31c8dacdc727673e9099f1ac86019714cdccec67""><code>31c8dac</code></a> Merge pull request <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7675"">#7675</a> from python-pillow/pre-commit-ci-update-config</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/40a3f91af2c78870676a13629b5902bab4ab4cf0""><code>40a3f91</code></a> Merge pull request <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7674"">#7674</a> from nulano/url-example</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/cb41b0cc78eeefbd9ed2ce8c10f8d6d4c405a706""><code>cb41b0c</code></a> [pre-commit.ci] pre-commit autoupdate</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/de62b25ed318f1604aa4ccd6f942a04c6b2c8b59""><code>de62b25</code></a> fix image url in &quot;Reading from URL&quot; example</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/7c526a6c6bdc7cb947f0aee1d1ee17c266ff6c61""><code>7c526a6</code></a> Update CHANGES.rst [ci skip]</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/d93a5ad70bf94dbb63bdbfb19491a02976574d6d""><code>d93a5ad</code></a> Merge pull request <a href=""https://redirect.github.com/pyth",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2302:13351,update,update-config,13351,https://qutip.org,https://github.com/qutip/qutip/pull/2302,1,['update'],['update-config']
Deployability,"ptions that `Qobj` with a shape of `(1,1)` with be a `Dimensions(Field, Field)` and not a `Field`. . Some previously valid and used list format are no longer accepted. Playing with of tensor of super operators, `permute` and `reshuffle`, you could make object with dims as `[[[2, 2], [3, 3], [4, 4]], [[2, 2], [3, 3], [4, 4]]]` which can be interpreted as the tensor of 3 super operators. But then `[[[2, 2], [3, 3]], [[2, 2],[3, 3]]]` can both be interpreted as tensor of super operator or super operator of tensor spaces, so : ; - `[[[2, 2], [3, 3], [4, 4]], [[2, 2], [3, 3], [4, 4]]]`: Error; - `[[[2, 2], [4, 4]], [[2, 2], [4, 4]]]`: list representation of dimensions of `to_super(tensor(oper, oper))`; - `[[[2], [2], [3], [3]], [[2], [2], [3], [3]]]`: list representation of dimensions of `tensor(to_super(oper), to_super(oper))`. Dimensions object have a `type` and `shape` set a initialization. There is a check when creating/ modifying a `Qobj` with between the data's shape and dims's shape and an error is raise when they are not matching. . Since operator-ket have a `superrep`, I added the `superrep` parameter to the Superspace instead of the dimensions, for now. But a better look at super operator representation is needed. At the present state, `Qobj.dims` take and return a list, keeping the dimension object internally. From there, minimal adjustment were made so test pass. The eigenstate fix in #1820 is already merged since it would create `Qobj` which dims and shape did not match. ToDo:. - [x] Tensor using dimension directly instead of list.; - [x] QobjEvo.dims use dimension object.; - [x] state and operator accept dimension.; - [ ] Super operator representation.; - [ ] Ptrace, partial_transpose and permute use dimension object (supported with enr states).; - [ ] Flags / new types for rectangular operator?; - [ ] List dimension manipulation function in dimension.py should support the class/ be integrated in it / removed. **Related issues or PRs**; #1476. **Changelog**",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1826:2799,integrat,integrated,2799,https://qutip.org,https://github.com/qutip/qutip/pull/1826,1,['integrat'],['integrated']
Deployability,"pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=241) func(0., v, *ode_args) + v; --> [244](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=243) res = _generic_ode_solve(func, ode_args, rho0, tlist, e_ops, options,; [245](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=244) progress_bar, dims=rho0.dims); [246](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=245) res.num_collapse = len(c_ops); [248](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=247) if e_ops_dict:. File ~/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py:496, in _generic_ode_solve(func, ode_args, rho0, tlist, e_ops, opt, progress_bar, dims); [493](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=492) progress_bar.update(t_idx); [495](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=494) if not r.successful():; --> [496](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=495) raise Exception(""ODE integration error: Try to increase ""; [497](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=496) ""the allowed number of substeps by increasing ""; [498](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=497) ""the nsteps parameter in the Options class.""); [500](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=499) if opt.store_states or expt_callback:; [501](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=500) cdata = get_curr_state_data(r). Exception: ODE integration error: Try to increase the allowed number of substeps by increasing the nsteps parameter in the ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1896:4598,update,update,4598,https://qutip.org,https://github.com/qutip/qutip/issues/1896,1,['update'],['update']
Deployability,"pump = 10'); plt.plot(times, result2.expect[2], label = 'pump = 1'); plt.xlabel('Time (ns)'); plt.ylabel('$\sigma_{11}$'); legend = plt.legend(); plt.savefig(""sigma_11.png""); plt.savefig(""sigma_11.pdf""); output_data = np.vstack((times, result1.expect[2])); file_data_store('sigma_11.dat',output_data.T, numtype = ""real""); output_data = np.vstack((times, result2.expect[2])); file_data_store('sigma_11.dat',output_data.T, numtype = ""real""); plt.title('g=120, nth=$10^{-6}$, T1=$10^{-3}$, T2=1'). plt.figure(); plt.plot(times, result1.expect[3], label = 'pump = 10'); plt.plot(times, result2.expect[3], label = 'pump = 1'); plt.xlabel('Time (ns)'); plt.ylabel('$\sigma_{22}$'); legend = plt.legend(); plt.savefig(""sigma_22.png""); plt.savefig(""sigma_22.pdf""); output_data = np.vstack((times, result1.expect[3])); file_data_store('sigma_22.dat',output_data.T, numtype = ""real""); output_data = np.vstack((times, result2.expect[3])); file_data_store('sigma_22.dat',output_data.T, numtype = ""real""); plt.title('g=120, nth=$10^{-6}$, T1=$10^{-3}$, T2=1'). plt.show(); ```. Being basis elements, the sum of the populations should be 1 and phonon number should not go negative but the plots obtain tell a different story:; [phonon number.pdf](https://github.com/qutip/qutip/files/3360514/phonon.number.pdf); [sigma_00.pdf](https://github.com/qutip/qutip/files/3360515/sigma_00.pdf); [sigma_11.pdf](https://github.com/qutip/qutip/files/3360516/sigma_11.pdf); [sigma_22.pdf](https://github.com/qutip/qutip/files/3360517/sigma_22.pdf). The version I am using is:; ```; QuTiP: Quantum Toolbox in Python; Copyright (c) 2011 and later.; A. J. Pitchford, P. D. Nation, R. J. Johansson, A. Grimsmo, and C. Granade. QuTiP Version: 4.4.0.dev0; Numpy Version: 1.16.4; Scipy Version: 1.2.1; Cython Version: 0.29.11; Matplotlib Version: 3.1.0; Python Version: 3.7.3; Number of CPUs: 8; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Windows (AMD64); ```. Any help would mean a lot to me!",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1038:4731,Install,Installed,4731,https://qutip.org,https://github.com/qutip/qutip/issues/1038,1,['Install'],['Installed']
Deployability,"pygments/issues/2367"">#2367</a>, <a href=""https://redirect.github.com/pygments/pygments/issues/2368"">#2368</a>, <a href=""https://redirect.github.com/pygments/pygments/issues/2369"">#2369</a>, <a href=""https://redirect.github.com/pygments/pygments/issues/2370"">#2370</a>)</li>; <li>Dax (<a href=""https://redirect.github.com/pygments/pygments/issues/2335"">#2335</a>, <a href=""https://redirect.github.com/pygments/pygments/issues/2345"">#2345</a>)</li>; <li>MediaWiki Wikitext (<a href=""https://redirect.github.com/pygments/pygments/issues/2373"">#2373</a>, <a href=""https://redirect.github.com/pygments/pygments/issues/827"">#827</a>)</li>; <li>PostgreSQL Explain (<a href=""https://redirect.github.com/pygments/pygments/issues/2398"">#2398</a>)</li>; <li>WGSL (WebGPU Shading Language) (<a href=""https://redirect.github.com/pygments/pygments/issues/2386"">#2386</a>)</li>; <li>X++ (<a href=""https://redirect.github.com/pygments/pygments/issues/2339"">#2339</a>)</li>; </ul>; </li>; <li>; <p>Updated lexers:</p>; <ul>; <li>; <p>AMDGPU: Add support for <code>scratch_</code> instructions, the <code>attr*.*</code> argument,; as well as the <code>off</code> modifier (<a href=""https://redirect.github.com/pygments/pygments/issues/2327"">#2327</a>).</p>; </li>; <li>; <p>APDL: Miscellaneous improvements (<a href=""https://redirect.github.com/pygments/pygments/issues/2314"">#2314</a>)</p>; </li>; <li>; <p>bash/tcsh:</p>; <ul>; <li>Move <code>break</code> to keywords (<a href=""https://redirect.github.com/pygments/pygments/issues/2377"">#2377</a>)</li>; <li>Improve bash math expansion lexing (<a href=""https://redirect.github.com/pygments/pygments/issues/2255"">#2255</a>, <a href=""https://redirect.github.com/pygments/pygments/issues/2353"">#2353</a>)</li>; </ul>; </li>; <li>; <p>Chapel: Support attributes (<a href=""https://redirect.github.com/pygments/pygments/issues/2376"">#2376</a>)</p>; </li>; <li>; <p>CMake: Implement bracket style comments (<a href=""https://redirect.github.com/pygments/pygments/issues/2338",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2201:1583,Update,Updated,1583,https://qutip.org,https://github.com/qutip/qutip/pull/2201,2,['Update'],['Updated']
Deployability,"pygments/pygments/issues/2373"">#2373</a>)</li>; <li><a href=""https://github.com/pygments/pygments/commit/0e9c87bcf096908956e031f15a4e589e83be1691""><code>0e9c87b</code></a> Update CHANGES</li>; <li><a href=""https://github.com/pygments/pygments/commit/ef0abbaece522732031d61391567c017d48d87b7""><code>ef0abba</code></a> Add PostgreSQL Explain lexer (<a href=""https://redirect.github.com/pygments/pygments/issues/2398"">#2398</a>)</li>; <li><a href=""https://github.com/pygments/pygments/commit/3c6e2af8fbc44bb1ef77389d09118c37faea8746""><code>3c6e2af</code></a> Update CHANGES</li>; <li>Additional commits viewable in <a href=""https://github.com/pygments/pygments/compare/2.14.0...2.15.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pygments&package-manager=pip&previous-version=2.14.0&new-version=2.15.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2201:14128,update,updates,14128,https://qutip.org,https://github.com/qutip/qutip/pull/2201,1,['update'],['updates']
Deployability,"python-pillow/Pillow/commit/032d2dc3658f94718109068ac70799313e440754""><code>032d2dc</code></a> Update CHANGES.rst [ci skip]</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/baae9ec4b67c68e3adaf1208cf54e8de5e38a6fd""><code>baae9ec</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5921"">#5921</a> from radarhere/jpeg_eoi</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/1059eb537639925c96d3245dcd73c106d4266c83""><code>1059eb5</code></a> If appended EOI did not work, do not keep trying</li>; <li>Additional commits viewable in <a href=""https://github.com/python-pillow/Pillow/compare/8.3.2...9.0.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=8.3.2&new-version=9.0.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:16135,update,updates,16135,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['update'],['updates']
Deployability,"python3.5/site-packages/numpy/distutils/misc_util.py"", line 1002, in add_subpackage; caller_level = 2); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 971, in get_subpackage; caller_level = caller_level + 1); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 908, in _get_configuration_from_setup_py; config = setup_module.configuration(*args); File ""qutip/setup.py"", line 8, in configuration; config.add_subpackage('cy'); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 1002, in add_subpackage; caller_level = 2); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 971, in get_subpackage; caller_level = caller_level + 1); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/numpy/distutils/misc_util.py"", line 883, in _get_configuration_from_setup_py; ('.py', 'U', 1)); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/imp.py"", line 234, in load_module; return load_source(name, filename, file); File ""/home/phyks/.local/share/virtualenvs/physique/lib/python3.5/imp.py"", line 172, in load_source; module = _load(spec); File ""<frozen importlib._bootstrap>"", line 693, in _load; File ""<frozen importlib._bootstrap>"", line 673, in _load_unlocked; File ""<frozen importlib._bootstrap_external>"", line 662, in exec_module; File ""<frozen importlib._bootstrap>"", line 222, in _call_with_frames_removed; File ""qutip/cy/setup.py"", line 3, in <module>; from Cython.Distutils import build_ext; ImportError: No module named 'Cython'; Installing without the fortran mcsolver.; ```. EDIT: And `qutip` installs well with `pip` even if `scipy` is not installed (or `matplotlib`). This results in an `ImportError` at first import (or warning). But once installing manually the dependencies, all is fine.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/426#issuecomment-183253786:2399,Install,Installing,2399,https://qutip.org,https://github.com/qutip/qutip/issues/426#issuecomment-183253786,4,"['Install', 'install']","['Installing', 'installed', 'installing', 'installs']"
Deployability,"qhj0mzvb2nyj-qutip-4.5.2/lib/python3.8/site-packages/qutip/qobj.py in ptrace(self, sel, sparse); 1353 return q.tidyup() if settings.auto_tidyup else q; 1354 else:; -> 1355 return _ptrace_dense(self, sel); 1356 ; 1357 def permute(self, order):. /nix/store/63j2vgz5klgnr814blqrqhj0mzvb2nyj-qutip-4.5.2/lib/python3.8/site-packages/qutip/qobj.py in _ptrace_dense(Q, sel); 2197 rd = list(rd); 2198 if isket(Q):; -> 2199 vmat = (Q.full(); 2200 .reshape(rd); 2201 .transpose(sel + qtrace). TypeError: 'numpy.float64' object cannot be interpreted as an integer. ```. **Expected behavior**; I would expect that `Qobj(myobject.full())` is a copy of `myobject`, but it turns out it's not (can't ptrace). Note that if it is not a bug (completely possible), I'd be curious to know what is the proper way to do what I need to do. **Your Environment**. qutip is installed via nix:. ```; QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Current admin team: Alexander Pitchford, Paul D. Nation, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, and Boxi Li; Project Manager: Franco Nori.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.5.2; Numpy Version: 1.18.1; Scipy Version: 1.4.1; Cython Version: None; Matplotlib Version: 3.1.3; Python Version: 3.8.3; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /nix/store/63j2vgz5klgnr814blqrqhj0mzvb2nyj-qutip-4.5.2/lib/python3.8/site-packages/qutip; ==============================================================================; Please cite QuTiP in your publication.; ==============================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1358:2962,Install,Installed,2962,https://qutip.org,https://github.com/qutip/qutip/issues/1358,2,['Install'],"['Installation', 'Installed']"
Deployability,qip.circuit updates,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/212:12,update,updates,12,https://qutip.org,https://github.com/qutip/qutip/pull/212,1,['update'],['updates']
Deployability,"que/lib/python3.5/site-packages/qutip/mesolve.py in mesolve(H, rho0, tlist, c_ops, e_ops, args, options, progress_bar); 319 types.BuiltinFunctionType, partial)):; 320 res = _sesolve_func_td(H, rho0, tlist,; --> 321 e_ops, args, options, progress_bar); 322 else:; 323 res = _sesolve_const(H, rho0, tlist,. /home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/qutip/sesolve.py in _sesolve_func_td(H_func, psi0, tlist, e_ops, args, opt, progress_bar); 565 #; 566 return _generic_ode_solve(r, psi0, tlist, e_ops, opt, progress_bar, norm,; --> 567 dims=psi0.dims); 568 ; 569 . /home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/qutip/sesolve.py in _generic_ode_solve(r, psi0, tlist, e_ops, opt, progress_bar, state_norm_func, dims); 656 ; 657 if t_idx < n_tsteps - 1:; --> 658 r.integrate(r.t + dt[t_idx]); 659 ; 660 progress_bar.finished(). /home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/scipy/integrate/_ode.py in integrate(self, t, step, relax); 406 self._y, self.t = mth(self.f, self.jac or (lambda: None),; 407 self._y, self.t, t,; --> 408 self.f_params, self.jac_params); 409 except SystemError:; 410 # f2py issue with tuple returns, see ticket 1187. /home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/scipy/integrate/_ode.py in run(self, f, jac, y0, t0, t1, f_params, jac_params); 863 args = ((f, jac, y0, t0, t1) + tuple(self.call_args) +; 864 (f_params, jac_params)); --> 865 y1, t, istate = self.runner(*args); 866 if istate < 0:; 867 warnings.warn(self.__class__.__name__ + ': ' +. /home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/qutip/cy/spmatfuncs.pyx in qutip.cy.spmatfuncs.cy_ode_psi_func_td (qutip/cy/spmatfuncs.c:4445)(). /home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/qutip/cy/spmatfuncs.pyx in qutip.cy.spmatfuncs.cy_ode_psi_func_td (qutip/cy/spmatfuncs.c:4289)(). TypeError: Cannot convert csr_matrix to numpy.ndarray; ```. Is it expected",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/505:1822,integrat,integrate,1822,https://qutip.org,https://github.com/qutip/qutip/issues/505,1,['integrat'],['integrate']
Deployability,qutip 4.5.0 tests fail when scipy 1.5.0 (released 8 days ago) is used,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1304:41,release,released,41,https://qutip.org,https://github.com/qutip/qutip/issues/1304,1,['release'],['released']
Deployability,qutip.about() gives a false negative for MKL when installed on windows,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2159:50,install,installed,50,https://qutip.org,https://github.com/qutip/qutip/issues/2159,1,['install'],['installed']
Deployability,qutip.lattice updated,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1698:14,update,updated,14,https://qutip.org,https://github.com/qutip/qutip/pull/1698,1,['update'],['updated']
Deployability,qutip.parallel updates,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/271:15,update,updates,15,https://qutip.org,https://github.com/qutip/qutip/pull/271,1,['update'],['updates']
Deployability,qutip.simdiag: update to python 3.6 and numerical issues,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/756:15,update,update,15,https://qutip.org,https://github.com/qutip/qutip/issues/756,1,['update'],['update']
Deployability,qutip.testing broken after installing with f90 solver,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/46:27,install,installing,27,https://qutip.org,https://github.com/qutip/qutip/issues/46,1,['install'],['installing']
Deployability,"qutip.testing.run() returns ""Ran 0 tests in 0.000s \ OK"" after installing QuTip 2.2.0 with f90 solver on OSX 10.8. This was reproducible on two macs. Before installing with fortran solver the QuTip installation and testing function normally. After installation with fortran solver the testing returns the above message. The installation seems to be fine though: mcsolve_f90 ran successfully in my simulation, and QuTip examples appear to work normally. To get fortran to compile I installed Xcode developer tools, and gfortran for OSX Mountain Lion from HPC following instructions from http://web.mit.edu/mfloyd/www/computing/mac/gfortran/",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/46:63,install,installing,63,https://qutip.org,https://github.com/qutip/qutip/issues/46,6,['install'],"['installation', 'installed', 'installing']"
Deployability,"r 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_pw_8rhs14880_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:7272,Release,Release,7272,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"r 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_pw_8rhs14881_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t' may be used uninitialized i",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:13025,Release,Release,13025,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"r 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_pw_8rhs14882_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t' may be used uninitialized i",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:18943,Release,Release,18943,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"r 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_pw_8rhs14883_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; ok; correlation: comparing TLS emission correlations (fn-list td format) ... ok; correlation: comparing TLS emission correla",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:24861,Release,Release,24861,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"r (`scipy.integrate.ode` or whatever else `mesolve` might be using) when propagating a single time step (and whether I can have multiple integrators to run in parallel that each safely keep track of their own state). That comes down to the integrator itself being ""reentrant"", of course. Certainly, calling `mesolve` in a loop (`In [19]`) doesn't keep the internal state of the integrator, hence the overhead between `In [21]` compared to `In [18]`. I wouldn't expect it to, of course, but the question is whether a refactoring of `mesolves` internals into an object that keeps state in a thread-safe way and allows doing time steps would alleviate this overhead (like the `mesolve_prepare_ode(H, state, c_ops) -> OdeState` that you propose in https://github.com/qutip/qutip/issues/1571#issuecomment-859917462). On the other hand, looping over the full `mesolve` as in `In [19]` obviously has no problems with parallelization. I wasn't sure if that's what you meant by ""`mesolve` is re-entrant"" or whether recent changes in QuTiP now use a re-entrant internal integrator, i.e. not `scipy.integrate.ode`. At the time I implemented the [`DensityMatrixODEPropagator`](https://github.com/qucontrol/krotov/blob/cfe6b108708cdfd29ab7eee24f2112977b951ed2/src/krotov/propagators.py#L162) by looking at what `mesolve` was doing at a low level for the specific case of density matrices, `scipy.integrate.ode` was definitely being used, and that couldn't handle propagating in parallel (and by ""parallel"" I include alternating propagation steps from two different propagations). I'm also not sure what using `QobjEvo` does: In the benchmarking, there didn't seem to be any difference whether I wrap my nested lists into `QobjEvo` or not. Is there something specific that `QobjEvo` should enable that I can't do with nested lists?. > QuTiP 5 is (probably) going to formalise that (^) sort of low-level calling convention of `mesolve`, but it should work already. The new one look a bit different because instead o",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243:7041,integrat,integrator,7041,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243,1,['integrat'],['integrator']
Deployability,"r 1e-6). . ```; QuTiP: Quantum Toolbox in Python; Copyright (c) 2011 and later.; A. J. Pitchford, P. D. Nation, R. J. Johansson, A. Grimsmo, and C. Granade. QuTiP Version: 4.3.0.dev0+4277eae; Numpy Version: 1.14.2; Scipy Version: 1.0.0; Cython Version: 0.28.1; Matplotlib Version: 2.2.2; Python Version: 3.4.3; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: True; INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /usr/local/lib/python3.4/dist-packages/qutip-4.3.0.dev0+4277eae-py3.4-linux-x86_64.egg/qutip. #I would expect this to have largest terms of order 1e-11 say.; [[-4.24096116e-07+1.00022928e-06j -4.16215462e-09-4.54122270e-07j]; [ 4.16215462e-09-4.54122270e-07j -4.24096116e-07-1.00022928e-06j]]; ```; and here is the result of running with the latest version (note, now difference between the two propagators respects the required tolerances):. ```; QuTiP: Quantum Toolbox in Python; Copyright (c) 2011 and later.; A. J. Pitchford, P. D. Nation, R. J. Johansson, A. Grimsmo, and C. Granade. QuTiP Version: 4.3.0.dev0+489fd41; Numpy Version: 1.14.2; Scipy Version: 1.0.0; Cython Version: 0.28.1; Matplotlib Version: 2.2.2; Python Version: 3.4.3; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: True; INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /usr/local/lib/python3.4/dist-packages/qutip-4.3.0.dev0+489fd41-py3.4-linux-x86_64.egg/qutip; ==============================================================================; Please cite QuTiP in your publication.; ==============================================================================; For your convenience a bibtex file can be easily generated using `qutip.cite()`. #working well now:; [[ 3.84509091e-12+2.02926564e-12j -1.25703892e-11+0.00000000e+00j]; [ 1.25703892e-11+0.00000000e+00j 3.84509091e-12-2.02926564e-12j]]; ```. This can be closed. Thanks. EDIT: this seems related to: https://github.com/qutip/qutip/issues/843; ... that can probably be closed as wel.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/829#issuecomment-376601387:1996,Install,Installed,1996,https://qutip.org,https://github.com/qutip/qutip/issues/829#issuecomment-376601387,2,['Install'],"['Installation', 'Installed']"
Deployability,"r']; b.view = [-40,30]; for i in range(len(sx)):; b.clear(); b.add_vectors([np.sin(theta),0,np.cos(theta)]); b.add_points([sx[:i+1],sy[:i+1],sz[:i+1]]); b.save(dirc='temp'); ```. With `b.clear()` we erase the points and vectors in the image, which is nice for updating the data, but What if I want to update also the attributes of the Bloch sphere?. To give an example let's say that I want the viewing angle of the Bloch sphere to smoothly change throughout the animation. I can define a function like so:. ```python; def bloch_camera_path(t, dt, azim_0, azim_f, elev_0, elev_f):; azim = ((azim_f-azim_0)/dt)*t+azim_0; elev = ((elev_f-elev_0)/dt)*t+elev_0; return [azim, elev]; ```. This function changes the viewing angle across time from the initial `[azim_0, elev_0]` configuration to the final `[azim_f, elev_f]` configuration in a linear manner. So I thought that by doing. ```python; b = Bloch(); b.vector_color = ['r']; for i in range(len(t)):; b.clear(); b.view = bloch_camera_path(t[i], t[-1]-t[0], -80, -70, 45, 40); b.add_vectors([np.sin(theta),0,np.cos(theta)]); b.add_points([sx[:i+1],sy[:i+1],sz[:i+1]]); b.save(dirc='temp'); ```; My animation would had that change in position of the ""camera"", but the result is just as if `b.view` wouldn't update. The only way I can make this work is by making a new bloch sphere on each iteration and defining all the attributes again and again (which I find highly inconvenient in terms of speed), like so;. ```python; import os. for i in range(len(t)):; b = Bloch(); b.vector_color = ['r']; b.view = bloch_camera_path(t[i], t[-1]-t[0], -80, -70, 45, 40); b.add_vectors([np.sin(theta),0,np.cos(theta)]); b.add_points([sx[:i+1],sy[:i+1],sz[:i+1]]); b.save(os.getcwd()+'/temp/bloch_'+str(i)+'.png', dirc='temp'); b.clear(); ```. Could Qutip be modified so that attributes (such as viewing angle or the color of vectors) can be updated in the way I showed before? So that we don't have to create a new bloch sphere on each iteration of the animation?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1106:1537,update,update,1537,https://qutip.org,https://github.com/qutip/qutip/issues/1106,2,['update'],"['update', 'updated']"
Deployability,"ray([[0, 1], [1, 0]]); D = np.array([[1, 2], [3, 4]]). # numpy objects; print(C * D) # gives wrong results; print(C.dot(D)) # gives expected results; print(C @ D) # gives expecting results; ```. ### Code Output. ```shell; Quantum object: dims=[[2], [2]], shape=(2, 2), type='oper', dtype=Dense, isherm=False; Qobj data =; [[3. 4.]; [1. 2.]]; Quantum object: dims=[[2], [2]], shape=(2, 2), type='oper', dtype=Dense, isherm=False; Qobj data =; [[3. 4.]; [1. 2.]]; [[0 2]; [3 0]]; [[3 4]; [1 2]]; [[3 4]; [1 2]]; ```. ### Expected Behaviour. Would prefer that qutip A*B yields the same results as numpy, and A @ B becomes the default matrix operator, or another function is suggested. Consistency with numpy would be better. ### Your Environment. ```shell; QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman, Simon Cross, Asier Galicia, Paul Menczel, and Patrick Hopf.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 5.0.4; Numpy Version: 2.0.1; Scipy Version: 1.14.1; Cython Version: None; Matplotlib Version: 3.9.2; Python Version: 3.12.6; Number of CPUs: 12; BLAS Info: Generic; INTEL MKL Ext: False; Platform Info: Darwin (arm64); Installation path: /Users/mkalp/.conda-envs/qutip-env/lib/python3.12/site-packages/qutip; ================================================================================; Please cite QuTiP in your publication.; ================================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2547:2304,Install,Installation,2304,https://qutip.org,https://github.com/qutip/qutip/issues/2547,1,['Install'],['Installation']
Deployability,"rayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_pw_8rhs14881_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs148",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:13954,Release,Release,13954,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"rayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: At top level:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_pw_8rhs14882_1cy_td_ode_rhs':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs148",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:19872,Release,Release,19872,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"re/cy/coefficient.pyx; [ 3/31] Cythonizing qutip/core/cy/math.pyx; [ 4/31] Cythonizing qutip/core/data/add.pyx; [ 5/31] Cythonizing qutip/core/data/base.pyx; [ 6/31] Cythonizing qutip/core/data/csr.pyx; [ 7/31] Cythonizing qutip/core/data/dense.pyx; [ 8/31] Cythonizing qutip/core/data/dia.pyx; [ 9/31] Cythonizing qutip/core/data/dispatch.pyx; [10/31] Cythonizing qutip/core/data/matmul.pyx; [11/31] Cythonizing qutip/core/data/mul.pyx; [12/31] Cythonizing qutip/core/data/norm.pyx; [13/31] Cythonizing qutip/core/data/permute.pyx; [14/31] Cythonizing qutip/core/data/ptrace.pyx; [15/31] Cythonizing qutip/core/data/reshape.pyx; [16/31] Cythonizing qutip/core/data/tidyup.pyx; [17/31] Cythonizing qutip/piqs/_piqs.pyx; [18/31] Cythonizing qutip/core/_brtensor.pyx; [19/31] Cythonizing qutip/core/cy/_element.pyx; [20/31] Cythonizing qutip/core/cy/qobjevo.pyx; [21/31] Cythonizing qutip/core/data/adjoint.pyx; [22/31] Cythonizing qutip/core/data/expect.pyx; [23/31] Cythonizing qutip/core/data/inner.pyx; [24/31] Cythonizing qutip/core/data/kron.pyx; [25/31] Cythonizing qutip/core/data/pow.pyx; [26/31] Cythonizing qutip/core/data/project.pyx; [27/31] Cythonizing qutip/core/data/properties.pyx; [28/31] Cythonizing qutip/core/data/trace.pyx; [29/31] Cythonizing qutip/solver/integrator/explicit_rk.pyx; [30/31] Cythonizing qutip/solver/sode/_sode.pyx; [31/31] Cythonizing qutip/solver/sode/ssystem.pyx; Getting requirements to build wheel ... done; ERROR: Some build dependencies for qutip from https://files.pythonhosted.org/packages/43/41/cae32aa94bfe0b22d2aec9392b2676210e5473ce097b10c689297b254a80/qutip-5.0.1.tar.gz conflict with the backend dependencies: numpy==1.17.3 is incompatible with numpy>=1.19.; ```. </details>. I have also tried to install QuTiP in a virtualenv where I have previously manually installed numpy v 1.24, but it didn't work either. Installing with `pip install ""qutip<5""` succesfully installs qutip 4.7.6. I saw #2322, but I have `g++` installed and available on PATH.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2412:10874,integrat,integrator,10874,https://qutip.org,https://github.com/qutip/qutip/issues/2412,7,"['Install', 'install', 'integrat']","['Installing', 'install', 'installed', 'installs', 'integrator']"
Deployability,"reaking changes to QuTiP:; - `Qobj.data` is no longer an instance of `scipy.sparse.spmatrix`, but the new abstract ""data-layer type"" `core.data.Data`; - `bra * ket` now returns a scalar, not a `Qobj` (no need to do `(bra * ket).data[0, 0]` or `(bra * ket).tr()`) any more; - 1D subspaces in `Qobj.dims` are now never contracted silently (they were, but inconsistently before), but the new function `Qobj.contract()` can be called to do this explicitly; - `Qobj` no longer defines `__array__`, and so cannot be treated as if it is a numpy array. Having this led to inconsistent behaviour when `Qobj` was used in arithmetic with numpy arrays from the left and right, and allowed simple code to become `Qobj.dims`-unsafe _implicitly_. To get the full array view now, you must be explicit and call `Qobj.full()` - it is not enough to do `np.array(qobj)`, and this behaviour is consistent with `scipy.sparse` matrices.; - `eseries` and `essolve` are removed; - OpenMP is temporarily removed (but should be added back in before the release); - most functions marked deprecated as of version 4.5.2 are removed (e.g. in `qutip.correlation`); - `vec2mat` and `mat2vec` are renamed away from the terse MATLAB-compatible syntax to the more QuTiP-consistent `vector_to_operator` and `operator_to_vector`. Non-breaking changes:; - the internal file layout of the code is more organised, with physical ""packages"" `qutip.core` and `qutip.solve` containing the core code and the solvers respectively, but these packages export all their names to the full `qutip` namespace, so there are no user-facing changes; - `Qobj` is a bit more strict about enforcing `Qobj.type`-safety with input types to arithmetic operations, particularly with 1D subspaces; - `Qobj` understands the `@` operator to mean matrix multiplication (it still understands `Qobj * Qobj` to be matrix multiplication as well); - `Qobj` instantiation is massively faster (lower-bounded by ~5µs compared to the previous ~70µs) in internal use and when ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1278:2884,release,release,2884,https://qutip.org,https://github.com/qutip/qutip/issues/1278,1,['release'],['release']
Deployability,"recated.; from scipy.sparse.base import spmatrix, isspmatrix, SparseEfficiencyWarning; /home/simon/repos/github/qutip/qutip/fastsparse.py:7: DeprecationWarning: Please use `isspmatrix` from the `scipy.sparse` namespace, the `scipy.sparse.base` namespace is deprecated.; from scipy.sparse.base import spmatrix, isspmatrix, SparseEfficiencyWarning; /home/simon/repos/github/qutip/qutip/fastsparse.py:7: DeprecationWarning: Please use `SparseEfficiencyWarning` from the `scipy.sparse` namespace, the `scipy.sparse.base` namespace is deprecated.; from scipy.sparse.base import spmatrix, isspmatrix, SparseEfficiencyWarning; <frozen importlib._bootstrap>:914: ImportWarning: PyxImporter.find_spec() not found; falling back to find_module(); <frozen importlib._bootstrap>:914: ImportWarning: PyxImporter.find_spec() not found; falling back to find_module(); /home/simon/miniconda3/envs/qutip/lib/python3.10/site-packages/cvxpy/interface/scipy_wrapper.py:17: DeprecationWarning: Please use `spmatrix` from the `scipy.sparse` namespace, the `scipy.sparse.base` namespace is deprecated.; from scipy.sparse.base import spmatrix; <frozen importlib._bootstrap>:914: ImportWarning: PyxImporter.find_spec() not found; falling back to find_module(); <frozen importlib._bootstrap>:914: ImportWarning: PyxImporter.find_spec() not found; falling back to find_module(); <frozen importlib._bootstrap>:914: ImportWarning: PyxImporter.find_spec() not found; falling back to find_module(); <frozen importlib._bootstrap>:914: ImportWarning: PyxImporter.find_spec() not found; falling back to find_module(); ```. ### Expected Behaviour. DeprecationWarnings should not be raised. ### Your Environment. ```shell; QuTiP Version: 4.7.0.dev0+eaf053d; Numpy Version: 1.22.2; Scipy Version: 1.8.0; Cython Version: 0.29.26; Matplotlib Version: 3.5.1; Python Version: 3.10.2; Number of CPUs: 8; BLAS Info: Generic; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1823:4833,Install,Installed,4833,https://qutip.org,https://github.com/qutip/qutip/issues/1823,1,['Install'],['Installed']
Deployability,"recated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: unknown conversio",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:3987,Release,Release,3987,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"recated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: unknown conversio",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:9740,Release,Release,9740,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"recated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: unknown conversio",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:15658,Release,Release,15658,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"recated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: unknown conversio",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:21576,Release,Release,21576,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"record layer failure&quot; (<a href=""https://redirect.github.com/urllib3/urllib3/issues/3405"">#3405</a>)</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/b60064388302f54a3455259ddab121618650a154""><code>b600643</code></a> [1.26] Bump RECENT_DATE (<a href=""https://redirect.github.com/urllib3/urllib3/issues/3404"">#3404</a>)</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/7e2d3890926d4788e219f63e2e36fbeb8714827f""><code>7e2d389</code></a> [1.26] Fix running CPython 2.7 tests in CI (<a href=""https://redirect.github.com/urllib3/urllib3/issues/3137"">#3137</a>)</li>; <li>See full diff in <a href=""https://github.com/urllib3/urllib3/compare/1.26.18...1.26.19"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=urllib3&package-manager=pip&previous-version=1.26.18&new-version=1.26.19)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2458:4044,update,updates,4044,https://qutip.org,https://github.com/qutip/qutip/pull/2458,1,['update'],['updates']
Deployability,"redirect.github.com/python-pillow/Pillow/issues/7709"">#7709</a> [<a href=""https://github.com/lajiyuan""><code>@​lajiyuan</code></a>]</li>; <li>Match mask size to pasted image size in GifImagePlugin <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7779"">#7779</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Changed SupportsGetMesh protocol to be public <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7841"">#7841</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Release GIL while calling <code>WebPAnimDecoderGetNext</code> <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7782"">#7782</a> [<a href=""https://github.com/evanmiller""><code>@​evanmiller</code></a>]</li>; <li>Fixed reading FLI/FLC images with a prefix chunk <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7804"">#7804</a> [<a href=""https://github.com/twolife""><code>@​twolife</code></a>]</li>; <li>Updated package name for Tidelift <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7810"">#7810</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Removed unused code <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7744"">#7744</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst"">pillow's changelog</a>.</em></p>; <blockquote>; <h2>10.3.0 (2024-04-01)</h2>; <ul>; <li>; <p>CVE-2024-28219: Use <code>strncpy</code> to avoid buffer overflow <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7928"">#7928</a>; [radarhere, hugovk]</p>; </li>; <li>; <p>Deprecate <code>eval()</code>, replacing it with <code>lambda_eval()</code> and <code>unsafe_eval()</code> <a href=""https://redirect.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2381:9474,Update,Updated,9474,https://qutip.org,https://github.com/qutip/qutip/pull/2381,1,['Update'],['Updated']
Deployability,"ref=""https://redirect.github.com/pygments/pygments/issues/2055"">#2055</a>, <a href=""https://redirect.github.com/pygments/pygments/issues/2347"">#2347</a>, <a href=""https://redirect.github.com/pygments/pygments/issues/2360"">#2360</a>), fix anonymous classes without; parameters (<a href=""https://redirect.github.com/pygments/pygments/issues/2359"">#2359</a>), improve lexing of variable variable syntax (<a href=""https://redirect.github.com/pygments/pygments/issues/2358"">#2358</a>)</p>; </li>; <li>; <p>Python:</p>; <ul>; <li>Add missing builtins (<a href=""https://redirect.github.com/pygments/pygments/issues/2334"">#2334</a>)</li>; <li>Fix inconsistent lexing of <code>None</code> (<a href=""https://redirect.github.com/pygments/pygments/issues/2406"">#2406</a>)</li>; </ul>; </li>; <li>; <p>Rebol/Red: Don't require script headers (<a href=""https://redirect.github.com/pygments/pygments/issues/2348"">#2348</a>, <a href=""https://redirect.github.com/pygments/pygments/issues/2349"">#2349</a>)</p>; </li>; <li>; <p>Spice: Update keywords (<a href=""https://redirect.github.com/pygments/pygments/issues/2336"">#2336</a>)</p>; </li>; <li>; <p>SQL+Jinja (<code>analyse_text</code> method): Fix catastrophic backtracking (<a href=""https://redirect.github.com/pygments/pygments/issues/2355"">#2355</a>)</p>; </li>; <li>; <p>Terraform: Add <code>hcl</code> alias (<a href=""https://redirect.github.com/pygments/pygments/issues/2375"">#2375</a>)</p>; </li>; </ul>; </li>; <li>; <p>Declare support for Python 3.11 and drop support for Python 3.6 (<a href=""https://redirect.github.com/pygments/pygments/issues/2324"">#2324</a>).</p>; </li>; <li>; <p>Update <code>native</code> style to improve contrast (<a href=""https://redirect.github.com/pygments/pygments/issues/2325"">#2325</a>).</p>; </li>; <li>; <p>Update `github-dark`` style to match latest Primer style (<a href=""https://redirect.github.com/pygments/pygments/issues/2401"">#2401</a>)</p>; </li>; <li>; <p>Revert a change that made guessing lexers based on file nam",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2201:4532,Update,Update,4532,https://qutip.org,https://github.com/qutip/qutip/pull/2201,2,['Update'],['Update']
Deployability,"ref=""https://redirect.github.com/python-pillow/Pillow/issues/7855"">#7855</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Open 16-bit grayscale PNGs as I;16 <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7849"">#7849</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Handle truncated chunks at the end of PNG images <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7709"">#7709</a> [<a href=""https://github.com/lajiyuan""><code>@​lajiyuan</code></a>]</li>; <li>Match mask size to pasted image size in GifImagePlugin <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7779"">#7779</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Changed SupportsGetMesh protocol to be public <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7841"">#7841</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Release GIL while calling <code>WebPAnimDecoderGetNext</code> <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7782"">#7782</a> [<a href=""https://github.com/evanmiller""><code>@​evanmiller</code></a>]</li>; <li>Fixed reading FLI/FLC images with a prefix chunk <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7804"">#7804</a> [<a href=""https://github.com/twolife""><code>@​twolife</code></a>]</li>; <li>Updated package name for Tidelift <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7810"">#7810</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Removed unused code <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7744"">#7744</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/python-pillow/Pillow/blob/main/CHANGES.r",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2381:9043,Release,Release,9043,https://qutip.org,https://github.com/qutip/qutip/pull/2381,1,['Release'],['Release']
Deployability,"regarding porting it directly into qutip, and we agreed it would be a good addition as a separate solver. There are a couple of we-believe-good reasons to provide <code>krylovsolve</code> as another qutip solver. As you mention, the method is currently limited to constant closed system Hamiltonians. Another possible addition discussed during the meetings was support for open quantum systems, which provides another unitary-fund grant opportunity for some students!. Another important application for many-body systems comes in handy with Krylov. Given the memory limitations from matrix representation of operators and the exponential growth of many-body systems Hilbert spaces, the limit of qubits on which the solvers live is around 15 qubits. This limitation gets expanded (in exchange for some slow down in the computations) to a few more qubits exploiting the binary operational nature of many-body systems. While any solver could use operations instead of matrices, it is a good testing bead to use Krylov's algorithm because of a property when constructing this space. This feature is a must-have within our research group, and everyone could also benefit from it. More importantly, Krylov is gaining increasing interest in the research community, and we believe that providing it as a qutip solver will increase the traffic of the repository. Regarding benchmarks and some documentation, we have a public jupyter notebook with some benchmarks here [krylov use examples](https://colab.research.google.com/drive/1f7ng8q9QNEzaZ97vGop3aIip8GPtl3GR?usp=sharing), and there's also a [medium blog post](https://medium.com/@julian.ruffinelli/krylov-approximation-method-for-quantum-evolution-148b3f023ec4) with some other details. As for maintenance, yes, the way this code-block fits in should not be problematic to update even with qutip changes. We use <code>krylovsolve</code> for research and will keep the solver repo outside qutip up to date and (hopefully!) inside of it for the community.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1668#issuecomment-926236528:1944,update,update,1944,https://qutip.org,https://github.com/qutip/qutip/issues/1668#issuecomment-926236528,1,['update'],['update']
Deployability,release 4.2 MANIFEST added,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/741:0,release,release,0,https://qutip.org,https://github.com/qutip/qutip/pull/741,1,['release'],['release']
Deployability,removed import of setuptools as this breaks fresh installations (i.e; under macports) on some systems by not registering the qutip module; properly. Added it just to try wheels builds so not important,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/376:50,install,installations,50,https://qutip.org,https://github.com/qutip/qutip/pull/376,1,['install'],['installations']
Deployability,"res</code> from <code>setup.cfg</code></li>; </ul>; <p><strong>0.38.2 (2022-11-05)</strong></p>; <ul>; <li>Fixed regression introduced in v0.38.1 which broke parsing of wheel file names with; multiple platform tags</li>; </ul>; <p><strong>0.38.1 (2022-11-04)</strong></p>; <ul>; <li>Removed install dependency on setuptools</li>; <li>The future-proof fix in 0.36.0 for converting PyPy's SOABI into a abi tag was; faulty. Fixed so that future changes in the SOABI will not change the tag.</li>; </ul>; <p><strong>0.38.0 (2022-10-21)</strong></p>; <ul>; <li>Dropped support for Python &lt; 3.7</li>; <li>Updated vendored <code>packaging</code> to 21.3</li>; <li>Replaced all uses of <code>distutils</code> with <code>setuptools</code></li>; <li>The handling of <code>license_files</code> (including glob patterns and default; values) is now delegated to <code>setuptools&gt;=57.0.0</code> (<a href=""https://github-redirect.dependabot.com/pypa/wheel/issues/466"">#466</a>).; The package dependencies were updated to reflect this change.</li>; <li>Fixed potential DoS attack via the <code>WHEEL_INFO_RE</code> regular expression</li>; <li>Fixed <code>ValueError: ZIP does not support timestamps before 1980</code> when using; <code>SOURCE_DATE_EPOCH=0</code> or when on-disk timestamps are earlier than 1980-01-01. Such; timestamps are now changed to the minimum value before packaging.</li>; </ul>; <p><strong>0.37.1 (2021-12-22)</strong></p>; <ul>; <li>Fixed <code>wheel pack</code> duplicating the <code>WHEEL</code> contents when the build number has changed (<a href=""https://github-redirect.dependabot.com/pypa/wheel/issues/415"">#415</a>)</li>; <li>Fixed parsing of file names containing commas in <code>RECORD</code> (PR by Hood Chatham)</li>; </ul>; <p><strong>0.37.0 (2021-08-09)</strong></p>; <ul>; <li>Added official Python 3.10 support</li>; <li>Updated vendored <code>packaging</code> library to v20.9</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2052:1765,update,updated,1765,https://qutip.org,https://github.com/qutip/qutip/pull/2052,1,['update'],['updated']
Deployability,restore distinction between release/non-release in cython file handing,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/196:28,release,release,28,https://qutip.org,https://github.com/qutip/qutip/pull/196,2,['release'],['release']
Deployability,"ring handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_wigner.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; !!!!!!!!!!!!!!!!!!! Interrupted: 60 errors during collection !!!!!!!!!!!!!!!!!!!; =========================== 60 error in 1.85 seconds ===========================; (base) cln-232-18:qutip nathanshammah$; ```; this on the 4.4.0 release version. ; On the dev version, ; ```; (qdev) cln-232-18:qutip nathanshammah$ pytest; ============================= test session starts ==============================; platform darwin -- Python 3.7.3, pytest-5.0.1, py-1.8.0, pluggy-0.12.0; rootdir: /Users/nathanshammah/github/qutip; collected 561 items. qutip/tests/test_basis_transformation.py ........ [ 1%]; qutip/tests/test_brmesolve.py Fatal Python error: Fatal Python error: Segmentation fault: 11; (qdev) cln-232-18:qutip nathanshammah$ pytest; ============================= test session starts ==============================; platform darwin -- Python 3.7.3, pytest-5.0.1, py-1.8.0, pluggy-0.12.0; rootdir: /Users/nathanshammah/github/qutip; collected 561 items. qutip/tests/test_basis_transformation.py ........ [ 1%]; qutip/tests/test_brmesolve.py Fatal Python error: Segmentation fault: 11; ```; and with nosetests; ```; (qdev) cln-232-18:qutip nathanshammah$ nosetests; /miniconda3/envs/qdev/lib/python3.7/importlib/_bootstrap.py:219: Ru",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:29257,release,release,29257,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['release'],['release']
Deployability,"rint(opt). progress_bar : False; store_state : True; method : 'bdf'; atol : 1e-5; ...; ```; The option can also be initialized from a dict or another options instance, it will make a copy. I added the capacity to add a safety check when setting an options. It is only used for `use_cython` which will error when trying to set it to `True` without cython installed. Otherwise, it will fail when trying to use the options. *Solver's options*; Each solver has it's option class (SeOptions, MeOptions, etc.) with only needed keys.This somewhat feel overkill since they are all the some for now, until mcsolve is merged. Each integrator also has an associated options and the solver options contain an integrator options. Conversion between options type will raise an error. When creating a solver options, it read the `method` key and setup a matching integrator options. Thus only the keys used by the solver or integrator are defined in the instance. This allow adding new integrator with their own options without adding complexity to the solver options. It can be used as such:; ```; opt = SolverOptions(method='lsoda'); opt['progress_bar'] = False; opt.ode['max_order_ns'] = 10; ```; To make it work smoothly, each integrator must be associated to only one method thus `zvode` was split between `adams` and `bdf`. There is also a generic `Options` class that accept any keys used by integrator or solver and can be converted to any specific solver options:; ```; Options(futur_cupy_ode_specific_options=True) # Will work; Options(not_an_options=True) # Error; # For most solver:; __solve(..., opt=Options()); ```; Once options are associated to a solver, they are frozen:; ```; opt = SeOptions(); solver = SeSolver(..., opt); opt['...'] = ... # Ok, but solver has a copy and is unaffected.; solver.options['...'] = ... # Error; solver.options = opt; ```; This is because changing options without the solver knowing will not take effect. I removed saving / storing options for now. It was mostly used ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1812:1929,integrat,integrator,1929,https://qutip.org,https://github.com/qutip/qutip/pull/1812,1,['integrat'],['integrator']
Deployability,"rmesolve: harmonic oscillator, finite temperature ... ok; brmesolve: harmonic oscillator, finite temperature, states ... ok; brmesolve: Jaynes-Cummings model, zero temperature ... ok; brmesolve: Check for #572 bug. ... ok; brmesolve: input list of Qobj ... ok; td_brmesolve: passes all brmesolve tests ... ok; td_brmesolve: time-dependent a_ops ... ok; td_brmesolve: time-dependent a_ops tuple of strings ... ok; td_brmesolve: time-dependent a_ops tuple interp ... ok; td_brmesolve: time-dependent a_ops & c_ops interp ... ok; td_brmesolve: non-Hermitian e_ops check ... ok; td_brmesolve: states check ... ok; td_brmesolve: split ops #1 ... ok; td_brmesolve: split ops #2 ... ok; td_brmesolve: split ops, Cubic_Spline td-terms ... ok; td_brmesolve: split ops, multiple ... ok; td_brmesolve: Hamiltonian args ... ok; BR Tools : zheevr ... ok; BR Tools : dense operator to eigenbasis ... ok; BR Tools : vector to eigenbasis ... ok; BR Tools : eigvector to fockbasis ... ok; BR Tools : vector roundtrip transform ... ok; BR Tools : Diagonal liouvillian mult ... ok; BR Tools : cop_super_mult ... ok; BR Tools : br_term_mult ... ok; control.pulseoptim: Hadamard gate with linear initial pulses ... ok; control.pulseoptim: Hadamard gate with linear initial pulses (no stats) ... ok; control.pulseoptim: Hadamard gate with linear initial pulses (tau) ... ok; control.pulseoptim: Hadamard gate with linear initial pulses (Qobj) ... ok; control.pulseoptim: Hadamard gate with linear initial pulses (OO) ... ok; ```. This shows that it is probably not an issue with the source code. I was looking at the output you provided from `qutip.about`, and you seem to be using `QuTiP Version: 4.5.0.dev0+d377c997`. I suspect this could be the issue, since the dev version is probably not stable yet. So I'd recommend you try this with a stable release of QuTiP.; Would you try running the same with QuTiP 4.4.1, by explicitly installing the same in conda as follows, and get back to us? :; `conda install qutip=4.4.1`",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1093#issuecomment-539853576:2707,release,release,2707,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-539853576,3,"['install', 'release']","['install', 'installing', 'release']"
Deployability,"roadcast_to(array, shape, subok); 174 [1, 2, 3]]); 175 """"""; --> 176 return _broadcast_to(array, shape, subok=subok, readonly=True); 177 ; 178 . /miniconda3/lib/python3.7/site-packages/numpy/lib/stride_tricks.py in _broadcast_to(array, shape, subok, readonly); 126 it = np.nditer(; 127 (array,), flags=['multi_index', 'refs_ok', 'zerosize_ok'] + extras,; --> 128 op_flags=[op_flag], itershape=shape, order='C'); 129 with it:; 130 # never really has writebackifcopy semantics. ValueError: operands could not be broadcast together with remapped shapes [original->remapped]: (0,4) and requested shape (2,4). <Figure size 360x360 with 1 Axes>. QuTiP: Quantum Toolbox in Python; Copyright (c) 2011 and later.; A. J. Pitchford, P. D. Nation, R. J. Johansson, A. Grimsmo, and C. Granade. QuTiP Version: 4.3.1; Numpy Version: 1.15.4; Scipy Version: 1.2.1; Cython Version: 0.29.8; Matplotlib Version: 3.1.0; Python Version: 3.7.3; Number of CPUs: 2; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (x86_64); Installation path: /miniconda3/lib/python3.7/site-packages/qutip; ==============================================================================; Please cite QuTiP in your publication.; ==============================================================================; For your convenience a bibtex file can be easily generated using `qutip.cite()`; ```; The error from a python script seems to shed more light into what is happening: ; ```; /miniconda3/lib/python3.7/site-packages/qutip/bloch.py:631: MatplotlibDeprecationWarning: Passing the block parameter of show() positionally is deprecated since Matplotlib 3.1; the parameter will become keyword-only in 3.3.; plt.show(self.fig); Traceback (most recent call last):; File ""/miniconda3/lib/python3.7/site-packages/matplotlib/backends/backend_macosx.py"", line 80, in _draw; self.figure.draw(renderer); File ""/miniconda3/lib/python3.7/site-packages/matplotlib/artist.py"", line 38, in draw_wrapper; return draw(a",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1027:5452,Install,Installed,5452,https://qutip.org,https://github.com/qutip/qutip/issues/1027,2,['Install'],"['Installation', 'Installed']"
Deployability,"rom es and pi methods ... ok; correlation: comparing spectrum from es and fft methods ... ok; correlation: comparing spectrum from es and pi methods ... ok; correlation: comparing TLS emission correlations (str-list td format) ... In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unk",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:3165,Release,Release,3165,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"rom radarhere/imagemath_eval</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/8531b01d6cdf0b70f256f93092caa2a5d91afc11""><code>8531b01</code></a> Restrict builtins for ImageMath.eval</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/1efb1d9fabd1dfdbf7982035eca0dae7306abef1""><code>1efb1d9</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5922"">#5922</a> from radarhere/releasenotes</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/f6c78713a491764dfac576f6c42127755f2c62b3""><code>f6c7871</code></a> Added release notes for <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5919"">#5919</a>, <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5920"">#5920</a> and <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5921"">#5921</a></li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/032d2dc3658f94718109068ac70799313e440754""><code>032d2dc</code></a> Update CHANGES.rst [ci skip]</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/baae9ec4b67c68e3adaf1208cf54e8de5e38a6fd""><code>baae9ec</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5921"">#5921</a> from radarhere/jpeg_eoi</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/1059eb537639925c96d3245dcd73c106d4266c83""><code>1059eb5</code></a> If appended EOI did not work, do not keep trying</li>; <li>Additional commits viewable in <a href=""https://github.com/python-pillow/Pillow/compare/8.3.2...9.0.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=8.3.2&new-version=9.0.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:15211,Update,Update,15211,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['Update'],['Update']
Deployability,"ronment, doing `pip install qutip` will cause the error. ```; ERROR: Some build dependencies for qutip from https://files.pythonhosted.org/packages/43/41/cae32aa94bfe0b22d2aec9392b2676210e5473ce097b10c689297b254a80/qutip-5.0.1.tar.gz conflict with the backend dependencies: numpy==1.17.3 is incompatible with numpy>=1.19.; ```. I know this is quite an old OS and Python version, but that's what I have available. Numpy 1.24 should be supported in Python 3.8.10. ### Code to Reproduce the Bug. ```shell; $ python3 -m venv /tmp/test-venv. $ source /tmp/test-venv/bin/activate. $ pip install --upgrade pip; Collecting pip; Using cached pip-24.0-py3-none-any.whl (2.1 MB); Installing collected packages: pip; Attempting uninstall: pip; Found existing installation: pip 20.0.2; Uninstalling pip-20.0.2:; Successfully uninstalled pip-20.0.2; Successfully installed pip-24.0. $ pip list; Package Version; ------------- -------; pip 24.0; pkg_resources 0.0.0; setuptools 44.0.0. $ pip install qutip; Collecting qutip; Using cached qutip-5.0.1.tar.gz (6.4 MB); Installing build dependencies ... done; Getting requirements to build wheel ... done; ERROR: Some build dependencies for qutip from https://files.pythonhosted.org/packages/43/41/cae32aa94bfe0b22d2aec9392b2676210e5473ce097b10c689297b254a80/qutip-5.0.1.tar.gz conflict with the backend dependencies: numpy==1.17.3 is incompatible with numpy>=1.19.; ```. ### Code Output. _No response_. ### Expected Behaviour. Qutip should install normally. ### Your Environment. ```shell; QuTiP Version: 5.0.1; Numpy Version: (1.17.3) (apparently this is the version it's trying to install); Scipy Version: (1.10.1); Cython Version: (3.0.2); Matplotlib Version: -; Python Version: 3.8.10; Number of CPUs: 16; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64) (Ubuntu 20.04.6 LTS); ```. ### Additional Context. Here's the output of `pip install --verbose qutip`, not sure if it's of any help. <details><summary>Output</s",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2412:1021,install,install,1021,https://qutip.org,https://github.com/qutip/qutip/issues/2412,1,['install'],['install']
Deployability,"rouble with the function mesolve. The situation is the following: I have a collection of Hamiltonians and Jump Operators which includes 69 timesteps each, and I want to evolve a initial state to each of this timesteps. However, Qutip is returning ""Exception: ODE integration error: Try to increase the allowed number of substeps by increasing the nsteps parameter in the Options class."". I tryied to change nsteps parameter but it just doesnt work for any value of it, no matter how big the number is. H= Hamiltonian, shape: 69,2,2; list_Jump-op= Jump operators, shape:69,2,2; time= timesteps, shape (69,); estados_val= the different states that I want to evolve on this dynamics, shape( 6,69,2,2) . Note that I am only taking the 0th element on the axis with lenght of 69. predictions=[mesolve(H,; Qobj(estados_val[i][0]),; time,list_Jump_op,options=Options(nsteps=10000000000000000)) for i in range(len(estados_val))]. The terminal out put is; /home/andrius/anaconda3/lib/python3.8/site-packages/scipy/integrate/_ode.py:1013: UserWarning: zvode: Excess accuracy requested. (Tolerances too small.); warnings.warn('{:s}: {:s}'.format(self.__class__.__name__,; ---------------------------------------------------------------------------; Exception Traceback (most recent call last); <ipython-input-11-0bc27bfd6f01> in <module>; 40 ; 41 la=10000000000000000; ---> 42 predictions=[mesolve(H,; 43 Qobj(estados_val[i][0]),; 44 time[1:],list_Jump_op,options=Options(nsteps=la)) for i in range(len(estados_val))]. <ipython-input-11-0bc27bfd6f01> in <listcomp>(.0); 40 ; 41 la=10000000000000000; ---> 42 predictions=[mesolve(H,; 43 Qobj(estados_val[i][0]),; 44 time[1:],list_Jump_op,options=Options(nsteps=la)) for i in range(len(estados_val))]. ~/anaconda3/lib/python3.8/site-packages/qutip/mesolve.py in mesolve(H, rho0, tlist, c_ops, e_ops, args, options, progress_bar, _safe_mode); 270 func(0., v, *ode_args) + v; 271 ; --> 272 res = _generic_ode_solve(func, ode_args, rho0, tlist, e_ops, options,; 273 pr",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1605:1022,integrat,integrate,1022,https://qutip.org,https://github.com/qutip/qutip/issues/1605,1,['integrat'],['integrate']
Deployability,"rs\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:4831,Release,Release,4831,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"rs\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: format '%s' expects argu",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:4695,Release,Release,4695,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"rs\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:4552,Release,Release,4552,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"rs\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:10584,Release,Release,10584,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"rs\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: format '%s' expects argu",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:10448,Release,Release,10448,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"rs\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:10305,Release,Release,10305,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"rs\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:16502,Release,Release,16502,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"rs\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: format '%s' expects argu",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:16366,Release,Release,16366,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"rs\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:16223,Release,Release,16223,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"rs\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:22420,Release,Release,22420,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"rs\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: format '%s' expects argu",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:22284,Release,Release,22284,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"rs\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:22141,Release,Release,22141,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"rt_allclose(noise, noise_target, atol=1e-4); /nix/store/7v2yn16c9sr8ysdpan9yd2a60a1sizv7-python3.11-qutip-4.7.5/lib/python3.11/site-packages/qutip/tests/test_countstat.py:58: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ; args = (<function assert_allclose.<locals>.compare at 0xfffeb718f880>, array([0.0007729 , 0.00087857, 0.00099616, 0.00112145,...9, 0.00142197, 0.00144314, 0.00142247, 0.00135199,; 0.0012452 , 0.00112145, 0.00099616, 0.00087857, 0.0007729 ])); kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0.0001', 'verbose': True}; @wraps(func); def inner(*args, **kwds):; with self._recreate_cm():; > return func(*args, **kwds); E AssertionError: ; E Not equal to tolerance rtol=1e-07, atol=0.0001; E ; E Mismatched elements: 1 / 20 (5%); E Max absolute difference: 0.00035163; E Max relative difference: 0.26008554; E x: array([0.000773, 0.000879, 0.000996, 0.001121, 0.001245, 0.001352,; E 0.001422, 0.001443, 0.001422, 0.001393, 0.001393, 0.001422,; E 0.001443, 0.001422, 0.001704, 0.001245, 0.001121, 0.000996,; E 0.000879, 0.000773]); E y: array([0.000773, 0.000879, 0.000996, 0.001121, 0.001245, 0.001352,; E 0.001422, 0.001443, 0.001422, 0.001393, 0.001393, 0.001422,; E 0.001443, 0.001422, 0.001352, 0.001245, 0.001121, 0.000996,; E 0.000879, 0.000773]); /nix/store/dz8lm4h0ivibad5kfc0ya3p3zqyd2fyf-python3-3.11.7/lib/python3.11/contextlib.py:81: AssertionError; =========================== short test summary info ============================; FAILED ../tests/test_countstat.py::test_dqd_current - AssertionError:; ```. ### Expected Behaviour. unit test succeeds. ### Your Environment. ```shell; QuTiP Version: 4.7.5; Numpy Version: 1.26.2; Scipy Version: 1.12.0; Cython Version: 0.29.36; Matplotlib Version: 3.8.2; Python Version: 3.11.7; Number of CPUs: 80; BLAS Info: Generic; OPENMP Installed: True; INTEL MKL Ext: False; Platform Info: Linux (aarch64); ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2316:3769,Install,Installed,3769,https://qutip.org,https://github.com/qutip/qutip/issues/2316,1,['Install'],['Installed']
Deployability,"rtionError Traceback (most recent call last); Input In [11], in <cell line: 6>(); 2 return w * np.exp(-w); 4 out = brmesolve(sigmax(), psi0=basis(2,0), tlist=np.arange(0, 1, 0.01), a_ops=[[sigmax(), psd]]); ----> 6 assert len(out.states) == len(out.times), f'{len(out.states)} vs {len(out.times)}'. AssertionError: 10 vs 100; ```. ### Expected Behaviour. As we see, the above code does run and produces an output, but the states list is not the same as the times lists (these should be the same length as they have a 1-1 correspondence). It actually appears it has only given data for the first 10 time-steps in this case.; The same code works fine on Intel chip. ; We can increase the `nsteps` parameter to give the correct number of output states, but they do not agree with Intels output (also see below for related issue), and actually are not always even quantum states, so something in the solver went wrong. Another example, using the cython string formatting:. ```brmesolve([[sigmax(), 'cos(t)']], psi0=basis(2,0), tlist=np.arange(0, 1, 0.01), a_ops=[[sigmax(), '1']])``` works fine on Intel, but gives error ```Exception: ODE integration error: Try to increase the allowed number of substeps by increasing the nsteps parameter in the Options class.``` on M1. . Moreover, if I do increase the `nsteps` sufficiently, this does appear to run correctly, but the output states are not the same as we get on Intel (and so I assume are incorrect). ### Your Environment. ```shell; QuTiP Version: 4.7.0; Numpy Version: 1.21.6; Scipy Version: 1.7.3; Cython Version: 0.29.28; Matplotlib Version: 3.5.1; Python Version: 3.9.13; Number of CPUs: 10; BLAS Info: Generic; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (arm64); ```. ### Additional Context. A few random observations, hopefully not just an issue on my side due to my local configurations. I installed qutip via conda, and it generally seems to work fine on M1. In the meantime, everything runs as expected with Rosetta.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1965:1784,integrat,integration,1784,https://qutip.org,https://github.com/qutip/qutip/issues/1965,4,"['Install', 'configurat', 'install', 'integrat']","['Installed', 'configurations', 'installed', 'integration']"
Deployability,"rval [-pi, pi], so that; # the quasi energy is in the interval [-pi/T, pi/T] where T is the; # period of the driving. eargs += (eargs <= -2*pi) * (2*pi) +; # (eargs > 0) * (-2*pi); eargs += (eargs <= -pi) * (2 * pi) + (eargs > pi) * (-2 * pi); e_quasi = -eargs / T. # sort by the quasi energy; if sort:; order = np.argsort(-e_quasi); else:; order = list(range(len(evals))). # prepare a list of kets for the floquet states; new_dims = [U.dims[0], [1] * len(U.dims[0])]; new_shape = [U.shape[0], 1]; kets_order = [Qobj(np.matrix(evecs[:, o]).T,; dims=new_dims, shape=new_shape) for o in order]. return kets_order, e_quasi[order]. # create periodically-driven Hamiltonian (with degenerate quasienergies); XI = tensor(sigmax(), qeye(2)); ZI = tensor(sigmaz(), qeye(2)); a = 2.404825557695773; H = [ ZI , [0.5 * a * 10 *XI, 'cos(10*t)']]. T = 2*np.pi/10. # compute Floquet modes with different integration accuracy. fq_modes0, fq_energy0 = floquet_modes(H, T); fq_modes1, fq_energy1 = floquet_modes_mod(H, T, options=Options(rtol=1e-12,atol=1e-13, nsteps=1e+8)); fq_modes2, fq_energy2 = floquet_modes_mod(H, T, options=Options(rtol=1e-14,atol=1e-14, nsteps=1e+8)). # print overlap between two modes ; print('\tfloquet_modes:', abs(fq_modes0[0].overlap(fq_modes0[2]))); print('\tfloquet_modes_mod1:', abs(fq_modes1[0].overlap(fq_modes1[2]))); print('\tfloquet_modes_mod2:', abs(fq_modes2[0].overlap(fq_modes2[2]))); ```. ### Code Output. ```shell; floquet_modes: 0.042385964453357024; floquet_modes_mod1: 0.11521649304536484; floquet_modes_mod2: 5.384787239183031e-24; ```. ### Expected Behaviour. I expected the Floquet modes to be orthogonal up to numerical precision. ### Your Environment. ```shell; QuTiP Version: 4.6.3; Numpy Version: 1.20.2; Scipy Version: 1.6.2; Cython Version: 0.29.21; Matplotlib Version: 3.3.2; Python Version: 3.8.5; Number of CPUs: 8; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (x86_64); ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1864:4433,Install,Installed,4433,https://qutip.org,https://github.com/qutip/qutip/issues/1864,1,['Install'],['Installed']
Deployability,"s (WIP)</li>; <li><a href=""https://github.com/python-babel/babel/commit/d1bbc08e845d03d8e1f0dfa0e04983d755f39cb5""><code>d1bbc08</code></a> import_cldr: use logging; add -q option</li>; <li><a href=""https://github.com/python-babel/babel/commit/156b7fb9f377ccf58c71cf01dc69fb10c7b69314""><code>156b7fb</code></a> Quiesce CLDR download progress bar if requested (or not a TTY)</li>; <li><a href=""https://github.com/python-babel/babel/commit/613dc1700f91c3d40b081948c0dd6023d8ece057""><code>613dc17</code></a> Make the import warnings about unsupported number systems less verbose</li>; <li>Additional commits viewable in <a href=""https://github.com/python-babel/babel/compare/v2.9.0...v2.9.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=babel&package-manager=pip&previous-version=2.9.0&new-version=2.9.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1695:3486,update,updates,3486,https://qutip.org,https://github.com/qutip/qutip/pull/1695,1,['update'],['updates']
Deployability,"s (there are some warnings, but unrelated to this pull request). However, the check here failed and I do not see a useful error message. Does someone have an idea what is going on?. The error in the documentation (HTTP Error 403) is unrelated the the actual build. It happen from time to time randomly... you can ignore it.; However the documentation build will fail on warnings. > * We have two example notebooks to add to qutip-notebooks. How to proceed in practice: do we open a separate pull request in qutip-notebooks?; ; qutip-notebook is no longer used, we migrated to qutip-tutorial. Please open a new PR there. > * The _run_one_traj function now exists 3 times, with practically identical code:; > https://github.com/qutip/qutip/blob/master/qutip/solver/multitraj.py#L197; > https://github.com/qutip/qutip/blob/master/qutip/solver/mcsolve.py#L427; > https://github.com/pmenczel/qutip/blob/nonmarkovian-mcsolve/qutip/solver/nm_mcsolve.py#L160; > Maybe it would be a good idea to make the type of `Result` that is used for single trajectories generic in multi-trajectory solvers (just like the `resultclass` is already generic in solvers in general)? I have implemented that [here](https://github.com/pmenczel/qutip/commit/4a25709f90ed7c6dc2153011ee5a8110f3957c95) and could merge that commit into this PR if you think that's a good idea. There is a fourth `_run_one_traj` coming for the stochastic solver with also almost the same code...; Yes, some cleaning is needed and having a swap-able trajectory result class would be nice.; I looked at your implementation and it look fine.; I would just rename `trajectoryclass` to `trajectory_result_class` or something similar, otherwise it make me think it refer to the removed `TrajectorySolver`. > I've noticed a small bug that has gone unnoticed because of this: ""step"" [here](https://github.com/qutip/qutip/blob/master/qutip/solver/multitraj.py#L206) should be ""integrate"", I think. ; `step` was renamed to `integrate` a while ago. Good catch!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2070#issuecomment-1446867702:2086,integrat,integrate,2086,https://qutip.org,https://github.com/qutip/qutip/pull/2070#issuecomment-1446867702,2,['integrat'],['integrate']
Deployability,"s changed (<a href=""https://github-redirect.dependabot.com/pypa/wheel/issues/415"">#415</a>)</li>; <li>Fixed parsing of file names containing commas in <code>RECORD</code> (PR by Hood Chatham)</li>; </ul>; <p><strong>0.37.0 (2021-08-09)</strong></p>; <ul>; <li>Added official Python 3.10 support</li>; <li>Updated vendored <code>packaging</code> library to v20.9</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/pypa/wheel/commit/6f1608dc1a88f00d2390b9044bd655753f39234c""><code>6f1608d</code></a> Created a new release</li>; <li><a href=""https://github.com/pypa/wheel/commit/cf8f5ef50e32b836c4ffb43af68107f78dca8d80""><code>cf8f5ef</code></a> Moved news item from PR <a href=""https://github-redirect.dependabot.com/pypa/wheel/issues/484"">#484</a> to its proper place</li>; <li><a href=""https://github.com/pypa/wheel/commit/9ec201660fa07ee0714edd17c979a7039ea852a4""><code>9ec2016</code></a> Removed install dependency on setuptools (<a href=""https://github-redirect.dependabot.com/pypa/wheel/issues/483"">#483</a>)</li>; <li><a href=""https://github.com/pypa/wheel/commit/747e1f6090547abcf65108c5a229cbe21a64a2ae""><code>747e1f6</code></a> Fixed PyPy SOABI parsing (<a href=""https://github-redirect.dependabot.com/pypa/wheel/issues/484"">#484</a>)</li>; <li><a href=""https://github.com/pypa/wheel/commit/76275484bc0de72d1f56601dbba3e816fc2f00c6""><code>7627548</code></a> [pre-commit.ci] pre-commit autoupdate (<a href=""https://github-redirect.dependabot.com/pypa/wheel/issues/480"">#480</a>)</li>; <li><a href=""https://github.com/pypa/wheel/commit/7b9e8e1022b9c850756ef34bc1a4a88042988a86""><code>7b9e8e1</code></a> Test on Python 3.11 final</li>; <li><a href=""https://github.com/pypa/wheel/commit/a04dfef41be0ab10eadbb2ed5d02b600682dc487""><code>a04dfef</code></a> Updated the pypi-publish action</li>; <li><a href=""https://github.com/pypa/wheel/commit/94bb62cb182023ac6586c5510ae9031ea56bd",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2052:3327,install,install,3327,https://qutip.org,https://github.com/qutip/qutip/pull/2052,1,['install'],['install']
Deployability,"s ea1c129 to b4f75cf as ""new"" (the first three commits of this PR). However, when those commits are taken together, they make the same changes as commit 4102b99 (the one which merged #1242) in `qutip/master`. The Github ""Files changed"" dialog is a pretty-printed version of the `git` command `git diff qutip/master...Canoming/master`, which means ""show all changes on either branch since `qutip/master` and `Canoming/master` diverged"". Because they diverged before #1242 was merged, it includes those changes. The merge completes without conflict, however, because `git` is clever and recognises that the changes introduced in the two branches `qutip/master` and `Canoming/master` are identical, even though the commits are different. As a consequence, however, merging this PR without squashing it would cause commits ea1c129 to b4f75cf to suddenly appear in our commit history, which we don't want. ### If Canoming wanted to fix this (not necessary). First run; ```; git remote add qutip https://github.com/qutip/qutip.git; git fetch qutip; ```; to add the upstream `qutip` remote. Then run; ```; git checkout master; git rebase -i $(git merge-base qutip/master master); ```; and modify the file so that the instruction list looks like (only the first word of each line changes); ```; pick ea1c129a fix function QubitCircuit.remove_gate; fixup 3bd94603 fix function QubitCircui.remove_gate; fixup b4f75cfe fix; pick 4aa90f56 fix bug in QubitCircuit.add_circuit; pick 3a2676de fix function QubitCircuit.add_circuit; pick 58aebc7f fix indent; ```; Should you save and close the file, it would modify your commit history. We'd only do this to avoid a merge conflict which would otherwise occur in the next step. Then, run; ```; git rebase qutip/master; ```; which should complete without error. Finally, your local `master` would now have diverged from Github's copy (and this PR's), so you'd have to force-push the changes by doing; ```; git push --force; ```; which would update this PR accordingly.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1269#issuecomment-629701269:3028,update,update,3028,https://qutip.org,https://github.com/qutip/qutip/pull/1269#issuecomment-629701269,1,['update'],['update']
Deployability,"s raising ~$40,000 USD</a> to release HTTP/2 support and ensure long-term sustainable maintenance of the project after a sharp decline in financial support for 2023. If your company or organization uses Python and would benefit from HTTP/2 support in Requests, pip, cloud SDKs, and thousands of other projects <a href=""https://opencollective.com/urllib3"">please consider contributing financially</a> to ensure HTTP/2 support is developed sustainably and maintained for the long-haul.</p>; <p>Thank you for your support.</p>; <h2>Changes</h2>; <ul>; <li>Added the <code>Proxy-Authorization</code> header to the list of headers to strip from requests when redirecting to a different host. As before, different headers can be set via <code>Retry.remove_headers_on_redirect</code>.</li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/urllib3/urllib3/compare/1.26.18...1.26.19"">https://github.com/urllib3/urllib3/compare/1.26.18...1.26.19</a></p>; <p>Note that due to an issue with our release automation, no <code> multiple.intoto.jsonl</code> file is available for this release.</p>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/urllib3/urllib3/blob/1.26.19/CHANGES.rst"">urllib3's changelog</a>.</em></p>; <blockquote>; <h2>1.26.19 (2024-06-17)</h2>; <ul>; <li>Added the <code>Proxy-Authorization</code> header to the list of headers to strip from requests when redirecting to a different host. As before, different headers can be set via <code>Retry.remove_headers_on_redirect</code>.</li>; <li>Fixed handling of OpenSSL 3.2.0 new error message for misconfiguring an HTTP proxy as HTTPS. (<code>[#3405](https://github.com/urllib3/urllib3/issues/3405) &lt;https://github.com/urllib3/urllib3/issues/3405&gt;</code>__)</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/urllib3/urllib3/commit/d9d85c88aa644af56d5e129634e750ce76e1a765""><code>d9d",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2458:1410,release,release,1410,https://qutip.org,https://github.com/qutip/qutip/pull/2458,1,['release'],['release']
Deployability,"s releases</a>.</em></p>; <blockquote>; <h2>v2.31.0</h2>; <h2>2.31.0 (2023-05-22)</h2>; <p><strong>Security</strong></p>; <ul>; <li>; <p>Versions of Requests between v2.3.0 and v2.30.0 are vulnerable to potential; forwarding of <code>Proxy-Authorization</code> headers to destination servers when; following HTTPS redirects.</p>; <p>When proxies are defined with user info (<a href=""https://user:pass@proxy:8080"">https://user:pass@proxy:8080</a>), Requests; will construct a <code>Proxy-Authorization</code> header that is attached to the request to; authenticate with the proxy.</p>; <p>In cases where Requests receives a redirect response, it previously reattached; the <code>Proxy-Authorization</code> header incorrectly, resulting in the value being; sent through the tunneled connection to the destination server. Users who rely on; defining their proxy credentials in the URL are <em>strongly</em> encouraged to upgrade; to Requests 2.31.0+ to prevent unintentional leakage and rotate their proxy; credentials once the change has been fully deployed.</p>; <p>Users who do not use a proxy or do not supply their proxy credentials through; the user information portion of their proxy URL are not subject to this; vulnerability.</p>; <p>Full details can be read in our <a href=""https://github.com/psf/requests/security/advisories/GHSA-j8r2-6x86-q33q"">Github Security Advisory</a>; and <a href=""https://nvd.nist.gov/vuln/detail/CVE-2023-32681"">CVE-2023-32681</a>.</p>; </li>; </ul>; <h2>v2.30.0</h2>; <h2>2.30.0 (2023-05-03)</h2>; <p><strong>Dependencies</strong></p>; <ul>; <li>; <p>⚠️ Added support for urllib3 2.0. ⚠️</p>; <p>This may contain minor breaking changes so we advise careful testing and; reviewing <a href=""https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html"">https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html</a>; prior to upgrading.</p>; <p>Users who wish to stay on urllib3 1.x can pin to <code>urllib3&lt;2</code>.</p>; </li>; </ul>; <h2>v2.29.0</h2>;",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2164:1246,deploy,deployed,1246,https://qutip.org,https://github.com/qutip/qutip/pull/2164,1,['deploy'],['deployed']
Deployability,"s to suppress the local identifier on the version information, replacing the old `ISRELEASED` boolean flag in the code. ### Notes on the wheels. Currently I build only for CPython. I haven't tried to build pypy wheels, but we _may_ support it - Cython does in theory, but I think complex numbers and raw pointers aren't handled completely smoothly, and we make heavy use of both. We get `manylinux1` builds for Linux, which is the oldest `manylinux` spec. This can be updated in the future, but I'm not sure I see a need; all our heavy mathematical lifting is either done by custom code (which is mostly immune) or BLAS/LAPACK (which we link to dynamically), so I don't think there's much to be gained. I don't know if the macOS images will run on the new M1 chips, but if not, there's not much that can be done there until GitHub Actions adds the necessary cross-compilation headers and libraries to their CI. ### Examples. You can see the result of this upload on the testing PyPI server: https://test.pypi.org/project/qutip-jakelishman (version 5.0.0a1 failed to upload due to previous testing, and 5.0.0a2 has a broken OpenMP configuration so won't run). I ran the CI action from my fork, with a temporary commit that changed the server to the testing archive (and the package name). Here's a screenshot of what the deployment screen will look like:. <img width=""1440"" alt=""GitHub Actions screen when triggering the build and deploy action"" src=""https://user-images.githubusercontent.com/5968590/106396051-8e49a980-63fd-11eb-867d-48a5ff2527f9.png"">. ### Further action needed. The GitHub Action won't become available until this is merged, _and_ `dev.major` is merged into `master`. This is because GitHub only makes workflows on the default branch available. ~We also need to generate a PyPI secret token with write access to the `qutip` package, and add it to the qutip/qutip repository secrets with the name `PYPI_TOKEN` (as defined in `.github/workflows/build.yml`).~ *edit: Done 2021-02-15.*",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1429:3868,configurat,configuration,3868,https://qutip.org,https://github.com/qutip/qutip/pull/1429,3,"['configurat', 'deploy']","['configuration', 'deploy', 'deployment']"
Deployability,"s, state_2 * dag(state_2)), label=r'$\rho_{2,2}$');; plt.ylabel(r""$\rho_{ij}$""); plt.xlabel(""t (ns)""); plt.legend(); plt.show(). # Try [ops, ndarray] case; drive_pulse_y = np.array([cos_waveform(t, None) for t in tlist], dtype=np.complex128); H_d = [H_0, [a_dag + a, drive_pulse_y]]; result = mesolve(H_d, ket2dm(state_0), tlist, options=option). plt.plot(tlist,expect(result.states, state_0 * dag(state_0)), label=r'$\rho_{0,0}$');; plt.plot(tlist,expect(result.states, state_1 * dag(state_1)), label=r'$\rho_{1,1}$');; plt.plot(tlist,expect(result.states, state_2 * dag(state_2)), label=r'$\rho_{2,2}$');; plt.ylabel(r""$\rho_{ij}$""); plt.xlabel(""t (ns)""); plt.legend(); plt.show(). # The simulation results are different, for the same system, same option, same initial state, the same driving pulse, just the input form of the driving pulse to the mesolve is different, but this should not cause differences in the result.; ```. ### Code Output. ```shell; Two plots.; ```. ### Expected Behaviour. The simulation results are different, for the same system, same option, same initial state, the same driving pulse, just the input form of the driving pulse to the mesolve is different, but this should not cause differences in the result. The simulation result using `[ops, func]` should be correct, and the case `[ops, ndarray]` should be wrong. ### Your Environment. ```shell; QuTiP Version: 4.7.2; Numpy Version: 1.25.2; Scipy Version: 1.11.1; Cython Version: None; Matplotlib Version: 3.7.2; Python Version: 3.10.11; Number of CPUs: 8; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Windows (AMD64); ```. ### Additional Context. For `[ops, func]` case, the simulation result is; ![image](https://github.com/qutip/qutip/assets/54537763/1a054b23-7c94-44be-af37-9ef67550e3a1); which is correct. For `[ops, ndarrray]` case, the simulation result is:; ![image](https://github.com/qutip/qutip/assets/54537763/7b58ab46-1604-4768-be89-e8e9bc704935); which is incorrect.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2253:4102,Install,Installed,4102,https://qutip.org,https://github.com/qutip/qutip/issues/2253,1,['Install'],['Installed']
Deployability,"s.draw(); 506 ; 507 def plot_back(self):. ~/.local/lib/python3.8/site-packages/matplotlib/backends/backend_agg.py in draw(self); 434 (self.toolbar._wait_cursor_for_draw_cm() if self.toolbar; 435 else nullcontext()):; --> 436 self.figure.draw(self.renderer); 437 # A GUI class may be need to update a window using this draw, so; 438 # don't forget to call the superclass. ~/.local/lib/python3.8/site-packages/matplotlib/artist.py in draw_wrapper(artist, renderer, *args, **kwargs); 71 @wraps(draw); 72 def draw_wrapper(artist, renderer, *args, **kwargs):; ---> 73 result = draw(artist, renderer, *args, **kwargs); 74 if renderer._rasterizing:; 75 renderer.stop_rasterizing(). ~/.local/lib/python3.8/site-packages/matplotlib/artist.py in draw_wrapper(artist, renderer); 48 renderer.start_filter(); 49 ; ---> 50 return draw(artist, renderer); 51 finally:; 52 if artist.get_agg_filter() is not None:. ~/.local/lib/python3.8/site-packages/matplotlib/figure.py in draw(self, renderer); 2808 ; 2809 self.patch.draw(renderer); -> 2810 mimage._draw_list_compositing_images(; 2811 renderer, self, artists, self.suppressComposite); 2812 . ~/.local/lib/python3.8/site-packages/matplotlib/image.py in _draw_list_compositing_images(renderer, parent, artists, suppress_composite); 130 if not_composite or not has_images:; 131 for a in artists:; --> 132 a.draw(renderer); 133 else:; 134 # Composite any adjacent images together. ~/.local/lib/python3.8/site-packages/matplotlib/artist.py in draw_wrapper(artist, renderer); 48 renderer.start_filter(); 49 ; ---> 50 return draw(artist, renderer); 51 finally:; 52 if artist.get_agg_filter() is not None:. ~/.local/lib/python3.8/site-packages/mpl_toolkits/mplot3d/axes3d.py in draw(self, renderer); 449 for axis in self._get_axis_list()) + 1; 450 collection_zorder = patch_zorder = zorder_offset; --> 451 for artist in sorted(collections_and_patches,; 452 key=do_3d_projection,; 453 reverse=True):. ~/.local/lib/python3.8/site-packages/mpl_toolkits/mplot3d/axes3d.py in d",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1817:1602,patch,patch,1602,https://qutip.org,https://github.com/qutip/qutip/issues/1817,1,['patch'],['patch']
Deployability,"s14880.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:4799,Release,Release,4799,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"s14880.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_pw_8rhs14880_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-pack",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:8027,Release,Release,8027,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"s14881.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:10636,Release,Release,10636,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"s14881.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_pw_8rhs14881_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packag",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:13864,Release,Release,13864,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"s14882.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:16640,Release,Release,16640,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"s14882.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_pw_8rhs14882_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v__t0' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:2153:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packag",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:19868,Release,Release,19868,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"s14883.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:22644,Release,Release,22644,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"s14883.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1: warning: '_import_array' defined but not used [-Wunused-function]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_pw_8rhs14883_1cy_td_ode_rhs':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_t_off' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_tp' may be used uninitialized in this function [-Wmaybe-uninitialized]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:2142:11: warning: '__pyx_v_t' may be used uninitialized in this function [-Wmaybe-uninitialized]; > ok; > correlation: comparing TLS emission correlations (fn-list td format) ... ok; > correlation: comparing TLS emission correlations (fn td format) ... ok; > Counting statistics: current and current noise in a DQD model ... ok; > Dispersive cQED Setup: compare unitary matrix for ISWAP and propogator ... ok; > Dispersive cQED Setup: compare unitary matrix for ISWAP, SQRTISWAP, ... ok; > Diagonalization of random two-level system ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:25872,Release,Release,25872,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"s=q.Odeoptions() #""low"" tolerances; opts=q.Odeoptions(method='adams', nsteps=100000, atol=1e-11, rtol=1e-11); times=np.linspace(0,10,300); epsilon=2*np.pi * 1; H=[epsilon/2*q.sigmaz(), [q.sigmax(), 'sin(2*pi*t)']]; U_prop_batch=q.propagator(H, times, options=opts, unitary_mode='batch', parallel=False); U_prop_single=q.propagator(H, times, options=opts, unitary_mode='single', parallel=False); print((U_prop_batch[-1]-U_prop_single[-1]).full()); ```. and here is the ""bad"" output with the older version of qutip that I was running before (Note, the difference between the 'batch' and 'single' has terms of order 1e-6). . ```; QuTiP: Quantum Toolbox in Python; Copyright (c) 2011 and later.; A. J. Pitchford, P. D. Nation, R. J. Johansson, A. Grimsmo, and C. Granade. QuTiP Version: 4.3.0.dev0+4277eae; Numpy Version: 1.14.2; Scipy Version: 1.0.0; Cython Version: 0.28.1; Matplotlib Version: 2.2.2; Python Version: 3.4.3; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: True; INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /usr/local/lib/python3.4/dist-packages/qutip-4.3.0.dev0+4277eae-py3.4-linux-x86_64.egg/qutip. #I would expect this to have largest terms of order 1e-11 say.; [[-4.24096116e-07+1.00022928e-06j -4.16215462e-09-4.54122270e-07j]; [ 4.16215462e-09-4.54122270e-07j -4.24096116e-07-1.00022928e-06j]]; ```; and here is the result of running with the latest version (note, now difference between the two propagators respects the required tolerances):. ```; QuTiP: Quantum Toolbox in Python; Copyright (c) 2011 and later.; A. J. Pitchford, P. D. Nation, R. J. Johansson, A. Grimsmo, and C. Granade. QuTiP Version: 4.3.0.dev0+489fd41; Numpy Version: 1.14.2; Scipy Version: 1.0.0; Cython Version: 0.28.1; Matplotlib Version: 2.2.2; Python Version: 3.4.3; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: True; INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /usr/local/lib/python3.4/dist-packages/qutip-4.3.0.dev0+489fd41",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/829#issuecomment-376601387:1117,Install,Installed,1117,https://qutip.org,https://github.com/qutip/qutip/issues/829#issuecomment-376601387,2,['Install'],"['Installation', 'Installed']"
Deployability,"s_info:; libraries = ['blas', 'blas']; library_dirs = ['/usr/lib/x86_64-linux-gnu']; include_dirs = ['/usr/local/include', '/usr/include']; language = c; define_macros = [('HAVE_CBLAS', None)]; blas_opt_info:; define_macros = [('NO_ATLAS_INFO', 1), ('HAVE_CBLAS', None)]; libraries = ['blas', 'blas']; library_dirs = ['/usr/lib/x86_64-linux-gnu']; include_dirs = ['/usr/local/include', '/usr/include']; language = c; >>> ; >>> import qutip; >>> qutip.about(); ...; BLAS Info: OPENBLAS; ```. ### Expected Behaviour. The qutip declaration of BLAS support should match the numpy declaration. If numpy says OpenBLAS is not available, then qutip should probably not say that it is available (even if it is installed). ### Your Environment. ```shell; $ python3 -c ""import qutip; qutip.about()"". QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman, Simon Cross and Asier Galicia.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.7.1; Numpy Version: 1.24.1; Scipy Version: 1.8.1; Cython Version: 0.29.32; Matplotlib Version: 3.6.2; Python Version: 3.10.9; Number of CPUs: 8; BLAS Info: OPENBLAS; OPENMP Installed: True; INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /usr/lib/python3/dist-packages/qutip; ================================================================================; Please cite QuTiP in your publication.; ================================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2053:6130,Install,Installed,6130,https://qutip.org,https://github.com/qutip/qutip/issues/2053,2,['Install'],"['Installation', 'Installed']"
Deployability,"se connection pools to be closed while requests are in progress (<code>[#2954](https://github.com/urllib3/urllib3/issues/2954) &lt;https://github.com/urllib3/urllib3/pull/2954&gt;</code>_)</li>; </ul>; <h1>1.26.15 (2023-03-10)</h1>; <ul>; <li>Fix socket timeout value when <code>HTTPConnection</code> is reused (<code>[#2645](https://github.com/urllib3/urllib3/issues/2645) &lt;https://github.com/urllib3/urllib3/issues/2645&gt;</code>__)</li>; <li>Remove &quot;!&quot; character from the unreserved characters in IPv6 Zone ID parsing; (<code>[#2899](https://github.com/urllib3/urllib3/issues/2899) &lt;https://github.com/urllib3/urllib3/issues/2899&gt;</code>__)</li>; <li>Fix IDNA handling of '\x80' byte (<code>[#2901](https://github.com/urllib3/urllib3/issues/2901) &lt;https://github.com/urllib3/urllib3/issues/2901&gt;</code>__)</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/urllib3/urllib3/commit/c9016bf464751a02b7e46f8b86504f47d4238784""><code>c9016bf</code></a> Release 1.26.17</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/01220354d389cd05474713f8c982d05c9b17aafb""><code>0122035</code></a> Backport GHSA-v845-jxx5-vc9f (<a href=""https://redirect.github.com/urllib3/urllib3/issues/3139"">#3139</a>)</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/e63989f97d206e839ab9170c8a76e3e097cc60e8""><code>e63989f</code></a> Fix installing <code>brotli</code> extra on Python 2.7</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/2e7a24d08713a0131f0b3c7197889466d645cc49""><code>2e7a24d</code></a> [1.26] Configure OS for RTD to fix building docs</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/57181d6ea910ac7cb2ff83345d9e5e0eb816a0d0""><code>57181d6</code></a> [1.26] Improve error message when calling urllib3.request() (<a href=""https://redirect.github.com/urllib3/urllib3/issues/3058"">#3058</a>)</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/3c0148048a5233258193",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2236:3105,Release,Release,3105,https://qutip.org,https://github.com/qutip/qutip/pull/2236,1,['Release'],['Release']
Deployability,"se1, atom1_coeffs], [pulse2, atom2_coeffs]]; times = np.arange(duration, dtype=np.double). H = qutip.QobjEvo(op_list, tlist= times); H = H + H.dag(); H.compress(). psi0 = qutip.tensor([e2,e1]); result = qutip.sesolve(H, psi0, tlist=times, options=qutip.Options(nsteps=5000)); phase = [state.overlap(psi0) for state in result.states]; ```. **Expected behavior**; If I choose the 30 time steps pulse sequence, I obtain the expected results:; ```python; plt.plot(np.real(phase)); plt.title(""Results""); plt.show(); ```; <img width=""338"" alt=""image"" src=""https://user-images.githubusercontent.com/13460713/101365919-a6d98f80-38a4-11eb-8c7f-ea948781ec78.png"">. However, choosing the second one (33 time steps) gives:; <img width=""353"" alt=""image"" src=""https://user-images.githubusercontent.com/13460713/101365992-bc4eb980-38a4-11eb-8218-925254549430.png"">. In fact, further analysis shows that the evolution discards the evolution after the first ""blue"" pulse. **Environment**; I've tried this in the following environments with the same results:. ```; QuTiP Version: 4.5.2; Numpy Version: 1.19.3; Scipy Version: 1.5.3; Cython Version: 0.29.21; Matplotlib Version: 3.3.2; Python Version: 3.8.5; Number of CPUs: 2; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (x86_64); ```. ```; QuTiP Version: 4.5.2; Numpy Version: 1.19.4; Scipy Version: 1.5.4; Cython Version: 0.29.21; Matplotlib Version: 3.3.3; Python Version: 3.9.0; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (x86_64); ```. **Additional information**; On the other hand, if I shift the Hamiltonian by a very small amount:. ```python; shift = qutip.tensor([qutip.qeye(3),qutip.qeye(3)]); op_list = [blocking, [pulse1, atom1_coeffs], [pulse2, atom2_coeffs],[shift,np.full(duration,1e-5)]]; ```; Then the results of `sesolve()` for all array durations agree and are correct. Is there some issue with the fact that the Hamiltonian reaches zero?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1403:5907,Install,Installed,5907,https://qutip.org,https://github.com/qutip/qutip/issues/1403,2,['Install'],['Installed']
Deployability,"sed by <code>default_rng</code> in future releases.; PCG64DXSM solves the statistical weakness while preserving the; performance and the features of PCG64.</p>; <p>See <code>upgrading-pcg64</code> for more details.</p>; <p>(<a href=""https://github-redirect.dependabot.com/numpy/numpy/pull/18906"">gh-18906</a>)</p>; <h2>Expired deprecations</h2>; <ul>; <li>The <code>shape</code> argument <code>numpy.unravel_index</code> cannot be; passed as <code>dims</code> keyword argument anymore. (Was deprecated in NumPy; 1.16.)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/numpy/numpy/commit/b235f9e701e14ed6f6f6dcba885f7986a833743f""><code>b235f9e</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/numpy/numpy/issues/19283"">#19283</a> from charris/prepare-1.21.0-release</li>; <li><a href=""https://github.com/numpy/numpy/commit/34aebc2824cf8c2bdbe19040b82f98f18557c8ba""><code>34aebc2</code></a> MAINT: Update 1.21.0-notes.rst</li>; <li><a href=""https://github.com/numpy/numpy/commit/493b64bfe9c5396498325b87e5e80e1917555c41""><code>493b64b</code></a> MAINT: Update 1.21.0-changelog.rst</li>; <li><a href=""https://github.com/numpy/numpy/commit/07d7e72ab6880c05b5fdd98482cf88982e778393""><code>07d7e72</code></a> MAINT: Remove accidentally created directory.</li>; <li><a href=""https://github.com/numpy/numpy/commit/032fca5e2e9749b152ec56153f476e05efdff287""><code>032fca5</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/numpy/numpy/issues/19280"">#19280</a> from charris/backport-19277</li>; <li><a href=""https://github.com/numpy/numpy/commit/7d25b81025a50cc0368f5727c65e875ca769469a""><code>7d25b81</code></a> BUG: Fix refcount leak in ResultType</li>; <li><a href=""https://github.com/numpy/numpy/commit/fa5754e8c159a37fcd9345df261cf82821088ea0""><code>fa5754e</code></a> BUG: Add missing DECREF in new path</li>; <li><a href=""https:/",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1767:2674,Update,Update,2674,https://qutip.org,https://github.com/qutip/qutip/pull/1767,1,['Update'],['Update']
Deployability,"sers\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobje",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:6207,Release,Release,6207,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"sers\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobje",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:11960,Release,Release,11960,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"sers\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobje",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:17878,Release,Release,17878,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"sers\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseNeedMoreValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobje",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:23796,Release,Release,23796,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"setup.cfg is configured with; ```; setup_requires =; numpy>=1.16.6,<1.20; ```; This means that qutip cannot (easily) be built when numpy 1.20 or higher is installed. The current stable release of numpy is 1.21. Can qutip be updated to run with current versions of numpy?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1720:155,install,installed,155,https://qutip.org,https://github.com/qutip/qutip/issues/1720,3,"['install', 'release', 'update']","['installed', 'release', 'updated']"
Deployability,setup.py installs rhs*.pyx test files generated during build-time tests,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/987:9,install,installs,9,https://qutip.org,https://github.com/qutip/qutip/issues/987,1,['install'],['installs']
Deployability,setup.py tries to install on arm architecture with option '-mfpmath=sse',MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/309:18,install,install,18,https://qutip.org,https://github.com/qutip/qutip/issues/309,1,['install'],['install']
Deployability,"seus' ship problem for us if we ever want to re-organise the file that contains this code; after how many modifications is the code no longer NASA's, but QuTiP's? As long as it's not _ours_, we can't separate it out into different files, or mix it with other code (say additional implementations). I'm definitely not a lawyer, but I'm worried that will cause us code organisation problems in the future, and while the licence would give us permission to improve the code, it's the reorganisation I'm worried about. Secondly, about the code itself: this sort of local operation is something I absolutely would like to include, but I'm not certain that the form it's in right now is the best, general way to do it. I think this is part of much larger discussion about how to handle tensor networks - for example, at the moment, `targets` is fine for states and operators, but it won't work for superoperators. I'm not sure that this is solvable in an ergonomic way with QuTiP's current dimensions specifiers, but it's something we're definitely going to look into after the initial release of 5.0. Also, there are already several disparate functions in QuTiP that provide sort-of similar functionality, and I think we need to have a proper go at tidying them all up into one cohesive interface. This includes `subsystem_apply` (most similar to this), but also `ptrace` and `partial_tranpose`, which can be seen as special cases of this exact same type of tensor contraction (not to mention `tensor_contract`!). The other thing from a code perspective is that this doesn't use the data-layer in the intended manner. A lot of this may be because our documentation of the data-layer isn't readily available yet (we weren't expecting interest this early!). It does individual detection on two different types, rather than creating a `Dispatcher` to handle the multiple dispatch over potentially different data types of the two inputs. I would imagine that a better form of organisation for this sort of rou",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1405#issuecomment-864073566:1693,release,release,1693,https://qutip.org,https://github.com/qutip/qutip/pull/1405#issuecomment-864073566,1,['release'],['release']
Deployability,"sion-3-1-3"">https://jinja.palletsprojects.com/en/3.1.x/changes/#version-3-1-3</a></li>; <li>Milestone: <a href=""https://github.com/pallets/jinja/milestone/15?closed=1"">https://github.com/pallets/jinja/milestone/15?closed=1</a></li>; </ul>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/pallets/jinja/blob/main/CHANGES.rst"">jinja2's changelog</a>.</em></p>; <blockquote>; <h2>Version 3.1.3</h2>; <p>Released 2024-01-10</p>; <ul>; <li>Fix compiler error when checking if required blocks in parent templates are; empty. :pr:<code>1858</code></li>; <li><code>xmlattr</code> filter does not allow keys with spaces. GHSA-h5c8-rqwp-cp95</li>; <li>Make error messages stemming from invalid nesting of <code>{% trans %}</code> blocks; more helpful. :pr:<code>1918</code></li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/pallets/jinja/commit/d9de4bb215fd1cc8092a410fb834c7c4060b1fc1""><code>d9de4bb</code></a> release version 3.1.3</li>; <li><a href=""https://github.com/pallets/jinja/commit/50124e16561f17f6c1ec85a692f6551418971cdc""><code>50124e1</code></a> skip test pypi</li>; <li><a href=""https://github.com/pallets/jinja/commit/9ea7222ef3f184480be0d0884e30ccfb4172b17b""><code>9ea7222</code></a> use trusted publishing</li>; <li><a href=""https://github.com/pallets/jinja/commit/da703f7aae36b1e88baaa20de334d7ff6378fdde""><code>da703f7</code></a> use trusted publishing</li>; <li><a href=""https://github.com/pallets/jinja/commit/bce174692547464512383ec40e0f8338b8811983""><code>bce1746</code></a> use trusted publishing</li>; <li><a href=""https://github.com/pallets/jinja/commit/7277d8068be593deab3555c7c14f974ada373af1""><code>7277d80</code></a> update pre-commit hooks</li>; <li><a href=""https://github.com/pallets/jinja/commit/5c8a10522421270f66376a24ec8e0d6812bc4b14""><code>5c8a105</code></a> Make nested-trans-block exceptions nicer (<a href=""https://redirect.github.co",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2291:1654,release,release,1654,https://qutip.org,https://github.com/qutip/qutip/pull/2291,1,['release'],['release']
Deployability,"site may help for future reference. On Wed, 13 May 2020 at 23:38, Eric Giguère <notifications@github.com> wrote:. > I did some tests and; > 1 - Cause by fortran zheer (lapack eigenvalue solver for complex hermitian; > matrices) (c's version Ok); > 2 - It happen when installing the scipy stack with pip but not when; > installing it with conda.; > 3 - It depend on the problem size, 64 seems particularly bad, usually it; > fails on the second call.; > 4 - I only got it in zheevr which is only used in brmesolve. But Nathan; > got it in other tests which use scipy's eigh.; > 4 - It happen in scipy in the fortan version of lapack:; >; > import numpy as np; > from scipy.linalg import eigh; > H = random_hermitian(64); > eigh(H) # Work fine; > eigh(np.asfortranarray(H)) # segfault after a few try, may need to change H; >; > Possible solutions (for zheevr):; >; > - Installing scipy with conda, the easiest solution, but not in our; > control.; > - Finding a way to link clapack from cython. Linking scipy's one would; > require good knowledge of scipy internals since only one cython interface; > is provided. Linking to another installation of lapack, but it would; > require the user to install lapack or install it with qutip. Both seems; > wrong to me.; > - For mac user, call scipy's eigh from cython i zheevr, slower but; > better than risking segfault.; > - Have the code directly in qutip. We can adapt it from OpenBlas:; > https://github.com/xianyi/OpenBLAS/blob/master/lapack-netlib/LAPACKE/src/lapacke_zheevr.c; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/1197#issuecomment-628259492>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADPF67AJF3WTZBCU4YWFY23RRMHMHANCNFSM4LCKXE6A>; > .; >; -- ; Dr. Nathan Shammah; Postdoctoral Research Scientist; Theoretical Quantum Physics Laboratory; RIKEN, Wako, Saitama, Japan; www.nathanshammah.com",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1197#issuecomment-628441264:1386,install,installation,1386,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-628441264,3,['install'],"['install', 'installation']"
Deployability,"so I am completely new to this, so maybe I did not do the right thing, which is common.; qutip.about() shows me the following things:. --------------------. QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Current admin team: Alexander Pitchford, Paul D. Nation, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, and Boxi Li; Project Manager: Franco Nori.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.5.2; Numpy Version: 1.18.5; Scipy Version: 1.5.3; Cython Version: 0.29.21; Matplotlib Version: 3.3.2; Python Version: 3.7.8; Number of CPUs: 6; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Windows (AMD64); Installation path: C:\Users\***\AppData\Local\Continuum\anaconda3\lib\site-packages\qutip; ==============================================================================; Please cite QuTiP in your publication.; ==============================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`. --------------------. What I have done so far:; - installed qutip from source following the instructions; --- the ""zspmv_openmp.cpp"" problem is solved; --- everything is installed without errors. - Updated all packages/spyder/python/anaconda/... - installed Visual Studio Build Tools 2019 (2) Version 16.7.7; --- this includes ""C++ Buildtools"" (maybe not important, but also "".NET Desktop-Buildtools"" and "".NET Core-Buuildtools"". - I checked, whether openmp is installed in anaconda powershell prompt via ""conda install -c conda-forge openmp""; --- it shows ""# All requested packages already installed."" So it seems openmp is already installed. It would be a great help, if you give me a possible solution to this. Thanks in advance!!",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1378:1464,install,installed,1464,https://qutip.org,https://github.com/qutip/qutip/issues/1378,8,"['Update', 'install']","['Updated', 'install', 'installed']"
Deployability,"solve_via_data(. ~/.local/lib/python3.8/site-packages/cvxpy/problems/problem.py in get_problem_data(self, solver, gp, enforce_dpp); 523 inverse_data = self._cache.inverse_data + [solver_inverse_data]; 524 else:; --> 525 data, inverse_data = solving_chain.apply(self); 526 safe_to_cache = (; 527 isinstance(data, dict). ~/.local/lib/python3.8/site-packages/cvxpy/reductions/chain.py in apply(self, problem); 69 inverse_data = []; 70 for r in self.reductions:; ---> 71 problem, inv = r.apply(problem); 72 inverse_data.append(inv); 73 return problem, inverse_data. ~/.local/lib/python3.8/site-packages/cvxpy/reductions/solvers/conic_solvers/cvxopt_conif.py in apply(self, problem); 110 len_eq = problem.cone_dims.zero; 111 ; --> 112 c, d, A, b = problem.apply_parameters(); 113 data[s.C] = c; 114 inv_data[s.OFFSET] = d. ~/.local/lib/python3.8/site-packages/cvxpy/reductions/dcp2cone/cone_matrix_stuffing.py in apply_parameters(self, id_to_param_value, zero_offset, keep_zeros); 167 return (np.array(self.id_to_param[idx].value) if id_to_param_value; 168 is None else id_to_param_value[idx]); --> 169 param_vec = canonInterface.get_parameter_vector(; 170 self.total_param_size,; 171 self.param_id_to_col,. ~/.local/lib/python3.8/site-packages/cvxpy/cvxcore/python/canonInterface.py in get_parameter_vector(param_size, param_id_to_col, param_id_to_size, param_id_to_value_fn, zero_offset); 55 value = param_id_to_value_fn(param_id).flatten(order='F'); 56 size = param_id_to_size[param_id]; ---> 57 param_vec[col:col + size] = value; 58 return param_vec; 59 . ValueError: setting an array element with a sequence.; ```. qutip.about() outputs the following info. ```; QuTiP Version: 4.5.2; Numpy Version: 1.19.1; Scipy Version: 1.5.2; Cython Version: 0.29.21; Matplotlib Version: 3.3.1; Python Version: 3.8.2; Number of CPUs: 6; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /home/charlie/.local/lib/python3.8/site-packages/qutip; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1422:4596,Install,Installed,4596,https://qutip.org,https://github.com/qutip/qutip/issues/1422,2,['Install'],"['Installation', 'Installed']"
Deployability,"son & P. D. Nation.; Current admin team: Alexander Pitchford, Paul D. Nation, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, and Eric Giguère.; Project Manager: Franco Nori.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.5.0.dev0+564c987b; Numpy Version: 1.16.4; Scipy Version: 1.2.1; Cython Version: 0.29.13; Matplotlib Version: 3.1.0; Python Version: 3.7.3; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Linux (x86_64); Installation path: /home/tarun/riken-work/qutip/qutip; ==============================================================================; Please cite QuTiP in your publication.; ==============================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`. ```; @nathanshammah ran this on his Mac, and had the following results. The file runs fine on his Mac with . - (1) conda release 4.4.1; - (2) development version 4.5.0.dev0+f77f7e4a (previous to Eric's PR merge); - (3) updating the current development version 4.5.0.dev0+564c987b (with python setup.py develop). The file throws an error when:; - (4) updating the current development version 4.5.0.dev0+564c987b (with python setup.py install). Error message (then the code runs anyway):; ```; (qutipdev45) nathans-mbp:Downloads nathanshammah$ python fidel.py; /Users/nathanshammah/.pyxbld/temp.macosx-10.9-x86_64-3.7/pyrex/qutip/cy/openmp/parfuncs.cpp:614:10: fatal error:; 'src/zspmv_openmp.hpp' file not found; #include ""src/zspmv_openmp.hpp""; ^~~~~~~~~~~~~~~~~~~~~~; 1 error generated.; ```. His qutip.about(): . ```; QuTiP Version: 4.5.0.dev0+f77f7e4a (or others); Numpy Version: 1.17.2; Scipy Version: 1.3.1; Cython Version: 0.29.13; Matplotlib Version: 3.1.1; Python Version: 3.7.4; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: True; INTEL MKL Ext: True; Platform Info: Darwin (x86_64); ```. Notice th",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1109:1724,release,release,1724,https://qutip.org,https://github.com/qutip/qutip/issues/1109,1,['release'],['release']
Deployability,"specific to some methods. SInce new integrators could be added by project such as qutip-cupy, `Options` can no longer be the place to list all supported options. It become little more that a dict. So I propose deprecating it. The documentation of `sesolve`, `mesolve`, etc. now list the options used by the solver and most common ode options and link the the integrator documentation. The class interface has the options property which document the options used by the solver and the integrators have the same. In the online documentation, the integrator api entries only contain the description of the method and the supported options. Since users don't need to call them directly, other methods are hidden and will be included in the dev documentation only. Usage will look like this, for functions:; ```; sesolve(H, psi, tlist, options={""store_states"": True, ""method"": ""lsoda"", ""atol"": 1e-5}); ```; and for the class interface:; ```; solver = SeSolver(H, options={""store_states"": True, ""method"": ""lsoda"", ""atol"": 1e-5}); solver.run(...); solver.options[""atol""] = 1e-9; solver.run(...) # run with the new tol.; solver.options = {""atol"": 1e-2} # only change the affected items. ; solver.run(...) # Also run with the new tol.; solver.options[""method""] = ""adams"" # reset all ode options, including ""atol"" supported by both.; solver.options = {""method"": ""bdf"", ""atol"": 1e-2} # reset all ode options then apply the new atol ; ```. Inside solvers, options are stored in a `_SolverOptions` which is a dict with frozen keys and feedback (chaging atol will reset the integrator).; ; Some `Intergrator` are slip so one method correspond to one integrator. Otherwise, `method` was an options used by both the solver to know which integrator to use and by some integrators. `Options` and `SolverOptions` still both exist for backward compatibility: they raise a warning but return the dict of the same options so the change should not immediately break any code. **Related issues or PRs**; Alternative to #1947",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1955:1834,integrat,integrator,1834,https://qutip.org,https://github.com/qutip/qutip/pull/1955,4,['integrat'],"['integrator', 'integrators']"
Deployability,"ssues/1268#issue-619006856)), which can get a bit messy, as there's Python's `random`, NumPy's `random` (which also comes in a legacy and a modern flavour, namely `numpy.random.RandomState` and `numpy.random.Generator`). Also, as you've mentioned, there's tight coupling between the implementation logic and the corresponding set of tests, and updates in the former require constant maintenance of the latter.; - As an alternative, I've sometimes resorted to [`mock`](https://docs.python.org/3/library/unittest.mock.html)ing the random-number generation process itself, and - in a way equivalent to using a fixed seed - providing a pre-defined sequence of numbers to the functions which depend on those. It comes with the same disadvantage of relatively tight coupling, but is somehow more flexible and powerful than just setting the seeds.; - I have used Hypothesis in the past (on a relatively small-scale project), and it's indeed a great framework with a lot of interesting and nice functionalities. I like it very much, but one disadvantage I ran into was the increased overall time for completion of a test run. In my case, a viable approach, for instance, was to run my Hypothesis tests (which were a subset of all tests) with a bit larger periodicity (in the CI pipeline) than the regular tests. Another concern that I intuitively have (I may be _wildly_ wrong on this one, though, not having yet properly explored QuTiP's testing landscape) is that - depending on how some Hypothesis tests are set up - there might be a cost incurred in that, eventually, one might have to implement guards against inputs, that would be virtually impossible (or very close to that) to occur in practical scenarios. In any case, I'd strongly recommend performing a time-boxed experiment on a small subset of tests, which are more suited to property-based testing, and examining how that affects the test-run-completion time(s) and whether it introduces more failures than what would be desired/cost-efficient.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1268#issuecomment-1123679707:2590,pipeline,pipeline,2590,https://qutip.org,https://github.com/qutip/qutip/issues/1268#issuecomment-1123679707,1,['pipeline'],['pipeline']
Deployability,"stainable maintenance of the project after a sharp decline in financial support for 2023. If your company or organization uses Python and would benefit from HTTP/2 support in Requests, pip, cloud SDKs, and thousands of other projects <a href=""https://opencollective.com/urllib3"">please consider contributing financially</a> to ensure HTTP/2 support is developed sustainably and maintained for the long-haul.</p>; <p>Thank you for your support.</p>; <h2>Changes</h2>; <ul>; <li>Added the <code>Proxy-Authorization</code> header to the list of headers to strip from requests when redirecting to a different host. As before, different headers can be set via <code>Retry.remove_headers_on_redirect</code>.</li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/urllib3/urllib3/compare/1.26.18...1.26.19"">https://github.com/urllib3/urllib3/compare/1.26.18...1.26.19</a></p>; <p>Note that due to an issue with our release automation, no <code> multiple.intoto.jsonl</code> file is available for this release.</p>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/urllib3/urllib3/blob/1.26.19/CHANGES.rst"">urllib3's changelog</a>.</em></p>; <blockquote>; <h2>1.26.19 (2024-06-17)</h2>; <ul>; <li>Added the <code>Proxy-Authorization</code> header to the list of headers to strip from requests when redirecting to a different host. As before, different headers can be set via <code>Retry.remove_headers_on_redirect</code>.</li>; <li>Fixed handling of OpenSSL 3.2.0 new error message for misconfiguring an HTTP proxy as HTTPS. (<code>[#3405](https://github.com/urllib3/urllib3/issues/3405) &lt;https://github.com/urllib3/urllib3/issues/3405&gt;</code>__)</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/urllib3/urllib3/commit/d9d85c88aa644af56d5e129634e750ce76e1a765""><code>d9d85c8</code></a> Release 1.26.19</li>; <li><a href=""https://github.com/urlli",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2458:1496,release,release,1496,https://qutip.org,https://github.com/qutip/qutip/pull/2458,1,['release'],['release']
Deployability,"stance on my system (debian unstable), `python3 -c ""import qutip; qutip.about()""` reports; ```; BLAS Info: OPENBLAS; ```. However, I think the logic behind BLAS Info is not robust. For context, debian builds packages against generic libblas.so (libblas-dev package). The various optimised BLAS implementations are supposed to be binary compatible, such that the system administrator can install the preferred implementation for use at runtime (the identity of libblas.so is controlled using debian's alternatives mechanism). On my system, OpenBLAS is indeed installed. But taking a closer look, I'm not sure it was detected for the right reason.; The blas configuration is identified by the `_blas_info()` function in qutip/utilities.py. It uses the local numpy configuration (`np.__config`), testing the availability of various attributes in the numpy config, in the form of ; ```; if hasattr(config,'mkl_info') ...; elif hasattr(config,'openblas_info'); ```. MKL was not used to build debian's numpy package, and I don't have it installed. So mkl_info is not detected. OpenBLAS was not used to to build numpy either, but it is installed, so I want look closer at the logic. config (i.e. `np.__config__`) does indeed have an openblas_info. But it is empty (`{}`). Nevertheless `hasattr(config,'openblas_info')`returns True, since the empty dict is there. As far as MKL goes, mkl_info is indeed not there, so qutip does not detect MKL BLAS. But there is a `blas_mkl_info` attribute, and `hasattr(config,'blas_mkl_info')` returns True, same as with openblas_info. numpy provides a summary of its configuration in `np.show_config()`:; ```; numpy.show_config(); blas_armpl_info:; NOT AVAILABLE; blas_mkl_info:; NOT AVAILABLE; blis_info:; NOT AVAILABLE; openblas_info:; NOT AVAILABLE; accelerate_info:; NOT AVAILABLE; atlas_3_10_blas_threads_info:; NOT AVAILABLE; atlas_3_10_blas_info:; NOT AVAILABLE; atlas_blas_threads_info:; NOT AVAILABLE; atlas_blas_info:; NOT AVAILABLE; blas_info:; libraries = ['bla",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2053:1121,install,installed,1121,https://qutip.org,https://github.com/qutip/qutip/issues/2053,1,['install'],['installed']
Deployability,"started looking into QuTiP only very recently, and I'm yet to start familiarising myself with its more intricate details and get to run the full set of tests, and investigate what kind of test failures occur. In the meantime, I'll generally share some (what I _think_ is) relevant experience in the context of handling randomness in tests:; - My understanding is that we're talking about not testing the behaviour of random-number generations per se, but how the numbers they generate affect the non-deterministic functions/algorithms, which depend on the former. In such cases, I've either used a fixed seed (as you've mentioned in your [original post](https://github.com/qutip/qutip/issues/1268#issue-619006856)), which can get a bit messy, as there's Python's `random`, NumPy's `random` (which also comes in a legacy and a modern flavour, namely `numpy.random.RandomState` and `numpy.random.Generator`). Also, as you've mentioned, there's tight coupling between the implementation logic and the corresponding set of tests, and updates in the former require constant maintenance of the latter.; - As an alternative, I've sometimes resorted to [`mock`](https://docs.python.org/3/library/unittest.mock.html)ing the random-number generation process itself, and - in a way equivalent to using a fixed seed - providing a pre-defined sequence of numbers to the functions which depend on those. It comes with the same disadvantage of relatively tight coupling, but is somehow more flexible and powerful than just setting the seeds.; - I have used Hypothesis in the past (on a relatively small-scale project), and it's indeed a great framework with a lot of interesting and nice functionalities. I like it very much, but one disadvantage I ran into was the increased overall time for completion of a test run. In my case, a viable approach, for instance, was to run my Hypothesis tests (which were a subset of all tests) with a bit larger periodicity (in the CI pipeline) than the regular tests. Another con",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1268#issuecomment-1123679707:1664,update,updates,1664,https://qutip.org,https://github.com/qutip/qutip/issues/1268#issuecomment-1123679707,1,['update'],['updates']
Deployability,"state import steadystate; from qutip.correlation import correlation_2op_2t; import numpy as np. H = 2 * np.pi * 0.1 * sigmax(). c1 = correlation_2op_2t(; H,; state0=None,; tlist = [0, 0.1],; taulist = [0],; c_ops=[sigmay()],; a_op=sigmaz(),; b_op=sigmax(),; ). ss = steadystate(H, [sigmay()]); c2 = correlation_2op_2t(; H,; state0=ss,; tlist = [0, 0.1],; taulist = [0],; c_ops=[sigmay()],; a_op=sigmaz(),; b_op=sigmax(),; ); print(c1); print(c2); ```; The terminal out put is; ```; [[0.+0.j]]; [[0.+0.j]; [0.+0.j]]; ```. **Expected behavior**; `c1` and `c2` should be the same. **Your Environment**; ```zsh; QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li and Jake Lishman.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.6.0; Numpy Version: 1.20.2; Scipy Version: 1.6.3; Cython Version: None; Matplotlib Version: 3.4.1; Python Version: 3.8.5; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /home/vladimir/.local/share/virtualenvs/phonon-bundles-5Sbweyp4/lib/python3.8/site-packages/qutip; ================================================================================; Please cite QuTiP in your publication.; ================================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; ```. **Additional context**; This is easy to solve, I can open a PR. I've also noticed that some 1t correlation functions have t and tau defined in the documentation, but t should be 0 instead.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1566:1954,Install,Installed,1954,https://qutip.org,https://github.com/qutip/qutip/issues/1566,2,['Install'],"['Installation', 'Installed']"
Deployability,"t of issue #1023, now the times are back to comparable with qutip 4.3.1 for the choice `Average States = False, Store States = True` and the storing doesn't get stuck two minutes. . With the default options, QuTiP 4.4 (both 4.4.0.dev0+e4b2415a and dev0+da029386) is slower than 4.3.1 of a factor 2 (Case 4 below). ; With `Average States = True, Store States = False`, version 4.3.1 is faster than the old patch that is faster than this one. . Here the full cases:; ### Case 1) Average states = False, Store States = True. #### QuTiP 4.3.1:; Total run time: 29.72s; **Real cell time: 30s** . #### QuTiP 4.4 before this patch:; Total run time: 17.49s; **Real cell time: 127.9s** . #### QuTiP 4.4 with this patch:; Total run time: 19.96s; **Real cell time: 28.90908122062683**. ### Case 2) Average states = False, Store States = False; #### QuTiP 4.3.1:; Total run time: 9.55s; real time 10.40579104423523. #### QuTiP 4.4 before this patch:; Total run time: 20.02s; **Real cell time: 21s**. #### QuTiP 4.4 with this patch:; Total run time: 18.61s; **Real cell time: 18.64s**. ### Case 3) Average states = True, Store States = True. #### QuTiP 4.3.1:; Total run time: 35.35s; **Real cell time: 65s**. #### QuTiP 4.4 before this patch:; Total run time: 18.35s; **Real cell time: 21s**. #### QuTiP 4.4 with this patch:; Total run time: 19.52s; **Real cell time: 23s** . ### Case 4) Default options; #### QuTiP 4.3.1:; Total run time: 8s; **Real cell time: 8s**. #### QuTiP 4.4 before this patch:; Total run time: 18s; **Real cell time: 22s**. #### QuTiP 4.4 with this patch:; Total run time: 19s; **Real cell time: 19s** . ### Case 5) Average states = True, Store States = False; #### QuTiP 4.3.1:; Total run time: 8s; **Real cell time: 8s**. #### QuTiP 4.4 before this patch:; Total run time: 19s; **Real cell time: 18s**. #### QuTiP 4.4 with this patch:; Total run time: 19s; **Real cell time: 28s** . I am merging this in any case as it removes the slowing down when storing the states flagged in #1023.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1024#issuecomment-503664663:1051,patch,patch,1051,https://qutip.org,https://github.com/qutip/qutip/pull/1024#issuecomment-503664663,7,['patch'],['patch']
Deployability,"t some point we do `qeye(L.shape[0])` instead of `qeye(L.dims[0])`. There's sometimes quite a bit of that in older code - it used to slip through because we weren't super strict about dimension handling, so in certain cases (like this one), we'd accept bad dimensions. I might try and have a look tonight (UK time), if I have time - I've wanted to break up the large `propagator` monolith into smaller components for quite a while. ---. About numerical precision: if you want to try increasing the precision of the integrators, try passing `options=qutip.Options(nsteps=1_000_000, atol=1e-12, rtol=1e-10)` to `propagator`. `atol` and `rtol` are absolute and relative tolerances respectively, and `nsteps` is the number of subdivisions the integrator is _allowed_ to take (if it reaches its tolerance goals, it won't take all of them). You'll find that `atol` and `rtol` will have only a loose relation to the tolerance of your fidelity value, because there's a _lot_ of floating-point operations between those points in which the errors compound, and there's a hard limit on the tolerances the integrator can achieve, so you might not be able to get a perfect answer. The fidelity calculation involves finding the square root of a density operator, so that's another large possible source of error. About times: if you only care about the state at the last time, setting `tlist = np.linspace(0, x, 201)` is quite inefficient. Instead, set `tlist = [0, x]`, and then pass `options=qutip.Options(nsteps=<very very big integer>)`. It's more efficient because it doesn't need to achieve tolerance goals and construct/store `Qobj` instances at every intermediate timestep. Temporary workaround: this is _very_ temporary, and generally a bad idea in QuTiP, but you can ""flatten"" all your operators into a single space for now, while we implement a fix. To do that:; ```python; # initial setup; H = qutip.tensor(...); c_ops = [qutip.tensor(...)]. original_dimensions = H.dims.copy(); new_dimensions = list(H.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1585#issuecomment-865903199:1147,integrat,integrator,1147,https://qutip.org,https://github.com/qutip/qutip/issues/1585#issuecomment-865903199,1,['integrat'],['integrator']
Deployability,"t there's a `correlation` test that takes around 2 minutes to run, which is a very sizable chunk of the entire test suite. We can concentrate on rewriting the longest tests to make sure we're still testing all the behaviour, without excessively long runtimes. I've been fairly conservative with the number of tests I set in motion. On the free GitHub plan we can have 20 concurrent VMs running across the whole QuTiP organisation, which I think spreads across all repositories and all test runs. With no Windows tests currently active this is 6 test runs plus the documentation build. If we want more, we could consider spending some money ($4/user/month) to convert into a Teams account which gets us 60 concurrent VMs, but I don't see any need to do this right now. All the test runners now start up almost instantly, which really solves a lot of the slowdown we were getting on Travis. The actual speeds of the Linux VMs seem to be similar to what we had on Travis - the walltimes are slightly longer because I now install _all_ optional dependencies in most runners, so slightly more gets tested than before. Currently there's also a slowdown on several machines because `cvxpy` doesn't build many wheels, and none at all for Linux, on `pip`. I install all our dependencies except BLAS/LAPACK stuff that way, since it's easiest to read out the dependencies like that. We can potentially save some build time (maybe ~3 minutes?) if we install that from conda-forge instead. I also fixed a minor point of how environment variables are read within `setup.py` (in the end I didn't actually use the new behaviour in the action, but I did during testing), and added a warning filter on dnorm tests to account for a deprecated Numpy alias being used within `cvxpy` code. Also of note: this [should allow us to have commits that skip the testing stages](https://github.blog/changelog/2021-02-08-github-actions-skip-pull-request-and-push-workflows-with-skip-ci/) (though possibly not codeclimate). You sho",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1551:2007,install,install,2007,https://qutip.org,https://github.com/qutip/qutip/pull/1551,1,['install'],['install']
Deployability,"t's a single file, rather than attempting `sed s/.../.../ setup.py` or something crazy like that. The validity of the version string is tested by regex.; - local version information is now _always_ appended, even if `git` isn't present - the local version is just then ""nogit"" rather than the git shorthash; - `setup.py` gained a new `--release` flag or environment variable `CI_QUTIP_RELEASE`; the only effect right now is to suppress the local identifier on the version information, replacing the old `ISRELEASED` boolean flag in the code. ### Notes on the wheels. Currently I build only for CPython. I haven't tried to build pypy wheels, but we _may_ support it - Cython does in theory, but I think complex numbers and raw pointers aren't handled completely smoothly, and we make heavy use of both. We get `manylinux1` builds for Linux, which is the oldest `manylinux` spec. This can be updated in the future, but I'm not sure I see a need; all our heavy mathematical lifting is either done by custom code (which is mostly immune) or BLAS/LAPACK (which we link to dynamically), so I don't think there's much to be gained. I don't know if the macOS images will run on the new M1 chips, but if not, there's not much that can be done there until GitHub Actions adds the necessary cross-compilation headers and libraries to their CI. ### Examples. You can see the result of this upload on the testing PyPI server: https://test.pypi.org/project/qutip-jakelishman (version 5.0.0a1 failed to upload due to previous testing, and 5.0.0a2 has a broken OpenMP configuration so won't run). I ran the CI action from my fork, with a temporary commit that changed the server to the testing archive (and the package name). Here's a screenshot of what the deployment screen will look like:. <img width=""1440"" alt=""GitHub Actions screen when triggering the build and deploy action"" src=""https://user-images.githubusercontent.com/5968590/106396051-8e49a980-63fd-11eb-867d-48a5ff2527f9.png"">. ### Further action needed",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1429:3206,update,updated,3206,https://qutip.org,https://github.com/qutip/qutip/pull/1429,1,['update'],['updated']
Deployability,"t(""P quadrature correlation:"", p_corr); 41 # Ensure the correct dimensions are used by TwoModeQuadratureCorrelation; 42 # Calculating two-mode quadrature correlation (if this is the function you mean); 43 # This is a placeholder for any specific function you're calling:; ---> 44 corr = qt.TwoModeQuadratureCorrelation(two_mode_squeezed_state); 45 # print(""Two-mode quadrature correlation:"", corr); File ~/Library/CloudStorage/OneDrive-ETHZurich/PythonScripts/Qutip/TMS_Kerr_simulations/.venv/lib/python3.12/site-packages/qutip/distributions.py:283, in TwoModeQuadratureCorrelation.__init__(self, state, theta1, theta2, extent, steps); 280 self.theta1 = theta1; 281 self.theta2 = theta2; --> 283 self.update(state); File ~/Library/CloudStorage/OneDrive-ETHZurich/PythonScripts/Qutip/TMS_Kerr_simulations/.venv/lib/python3.12/site-packages/qutip/distributions.py:291, in TwoModeQuadratureCorrelation.update(self, state); 286 """"""; 287 calculate probability distribution for quadrature measurement; 288 outcomes given a two-mode wavefunction or density matrix; 289 """"""; 290 if isket(state):; --> 291 self.update_psi(state); 292 else:; 293 self.update_rho(state); ...; 315 i = state_number_index([N, N], [n1, n2]); --> 316 p += kn1 * kn2 * psi.data[i, 0]; 318 self.data = abs(p) ** 2; TypeError: 'qutip.core.data.dense.Dense' object is not subscriptable; ```. ### Expected Behaviour. (<Figure size 800x600 with 2 Axes>,; <Axes: xlabel='$X_1(\\theta_1)$', ylabel='$X_2(\\theta_2)$'>); ![image](https://github.com/user-attachments/assets/4087d55e-5f07-40bd-8b09-8869560817d7). ### Your Environment. ```shell; QuTiP Version: 5.0.4; Numpy Version: 2.1.2; Scipy Version: 1.14.1; Cython Version: None; Matplotlib Version: 3.9.2; Python Version: 3.12.5; Number of CPUs: 11; BLAS Info: Generic; OPENMP Installed: False. vs. on PC:. QuTiP Version: 4.7.2; Numpy Version: 1.25.2; Scipy Version: 1.11.1; Cython Version: None; Matplotlib Version: 3.7.1; Python Version: 3.11.4; Number of CPUs: 24; BLAS Info: INTEL MKL",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2546:1787,update,update,1787,https://qutip.org,https://github.com/qutip/qutip/issues/2546,1,['update'],['update']
Deployability,"t.dependabot.com/python-pillow/Pillow/issues/5514"">#5514</a>; [kmilos]</p>; </li>; <li>; <p>Allow ICNS save on all operating systems <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/4526"">#4526</a>; [baletu, radarhere, newpanjing, hugovk]</p>; </li>; <li>; <p>De-zigzag JPEG's DQT when loading; deprecate convert_dict_qtables <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/4989"">#4989</a>; [gofr, radarhere]</p>; </li>; <li>; <p>Replaced xml.etree.ElementTree <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5565"">#5565</a>; [radarhere]</p>; </li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/python-pillow/Pillow/commit/8013f130a5077b238a4346b73e149432b180a8ea""><code>8013f13</code></a> 8.3.2 version bump</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/23c7ca82f09df6ba1047d2d96714eb825f0d7948""><code>23c7ca8</code></a> Update CHANGES.rst</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/8450366be331762ae327036e3c6658c517b05638""><code>8450366</code></a> Update release notes</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/a0afe89990f5ba40a019afc2f22e1b656f8cfd03""><code>a0afe89</code></a> Update test case</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/9e08eb8f78fdfd2f476e1b20b7cf38683754866b""><code>9e08eb8</code></a> Raise ValueError if color specifier is too long</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/bd5cf7db87c6abf7c3510a50170851af5538249f""><code>bd5cf7d</code></a> FLI tests for Oss-fuzz crash.</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/94a0cf1b14f09626c7403af83fa9fef0dfc9bb47""><code>94a0cf1</code></a> Fix 6-byte OOB read in FliDecode</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/cece64f4be10ab28b12a83a3555af579dad343a5""><code>cece64f</co",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1654:7329,Update,Update,7329,https://qutip.org,https://github.com/qutip/qutip/pull/1654,1,['Update'],['Update']
Deployability,"t/799a6a01052cea3f417a571d7c64cd14acc18c64""><code>799a6a0</code></a> Fix linting</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/00b25fd3ac3648bc28eff5d4c4d816e605e3f05f""><code>00b25fd</code></a> Hide UserWarning in logs</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/05b175ef88c22f5c416bc9b8d5b897dea1abbf2c""><code>05b175e</code></a> Tighter test case</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/13f2c5ae14901c89c38f898496102afd9daeaf6d""><code>13f2c5a</code></a> Prevent DOS with large SAMPLESPERPIXEL in Tiff IFD</li>; <li>Additional commits viewable in <a href=""https://github.com/python-pillow/Pillow/compare/9.0.1...9.3.0"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=9.0.1&new-version=9.3.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:15443,update,updates,15443,https://qutip.org,https://github.com/qutip/qutip/pull/2023,1,['update'],['updates']
Deployability,"t;=57.0.0</code> (<a href=""https://github-redirect.dependabot.com/pypa/wheel/issues/466"">#466</a>).; The package dependencies were updated to reflect this change.</li>; <li>Fixed potential DoS attack via the <code>WHEEL_INFO_RE</code> regular expression</li>; <li>Fixed <code>ValueError: ZIP does not support timestamps before 1980</code> when using; <code>SOURCE_DATE_EPOCH=0</code> or when on-disk timestamps are earlier than 1980-01-01. Such; timestamps are now changed to the minimum value before packaging.</li>; </ul>; <p><strong>0.37.1 (2021-12-22)</strong></p>; <ul>; <li>Fixed <code>wheel pack</code> duplicating the <code>WHEEL</code> contents when the build number has changed (<a href=""https://github-redirect.dependabot.com/pypa/wheel/issues/415"">#415</a>)</li>; <li>Fixed parsing of file names containing commas in <code>RECORD</code> (PR by Hood Chatham)</li>; </ul>; <p><strong>0.37.0 (2021-08-09)</strong></p>; <ul>; <li>Added official Python 3.10 support</li>; <li>Updated vendored <code>packaging</code> library to v20.9</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/pypa/wheel/commit/6f1608dc1a88f00d2390b9044bd655753f39234c""><code>6f1608d</code></a> Created a new release</li>; <li><a href=""https://github.com/pypa/wheel/commit/cf8f5ef50e32b836c4ffb43af68107f78dca8d80""><code>cf8f5ef</code></a> Moved news item from PR <a href=""https://github-redirect.dependabot.com/pypa/wheel/issues/484"">#484</a> to its proper place</li>; <li><a href=""https://github.com/pypa/wheel/commit/9ec201660fa07ee0714edd17c979a7039ea852a4""><code>9ec2016</code></a> Removed install dependency on setuptools (<a href=""https://github-redirect.dependabot.com/pypa/wheel/issues/483"">#483</a>)</li>; <li><a href=""https://github.com/pypa/wheel/commit/747e1f6090547abcf65108c5a229cbe21a64a2ae""><code>747e1f6</code></a> Fixed PyPy SOABI parsing (<a href=""https://github-redirect.dependabot",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2052:2617,Update,Updated,2617,https://qutip.org,https://github.com/qutip/qutip/pull/2052,1,['Update'],['Updated']
Deployability,"t]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:5498,Release,Release,5498,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"t]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:11251,Release,Release,11251,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"t]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:17169,Release,Release,17169,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"t]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_GetBufferAndValidate':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseTooManyValuesError':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:23087,Release,Release,23087,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"tar.gz (3.5 MB); |████████████████████████████████| 3.5 MB 509 kB/s ; ERROR: Command errored out with exit status 1:; command: /usr/bin/python3 -c 'import sys, setuptools, tokenize; sys.argv[0] = '""'""'/tmp/pip-install-69anjthq/qutip/setup.py'""'""'; __file__='""'""'/tmp/pip-install-69anjthq/qutip/setup.py'""'""';f=getattr(tokenize, '""'""'open'""'""', open)(__file__);code=f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' egg_info --egg-base /tmp/pip-install-69anjthq/qutip/pip-egg-info; cwd: /tmp/pip-install-69anjthq/qutip/; Complete output (5 lines):; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/tmp/pip-install-69anjthq/qutip/setup.py"", line 52, in <module>; from Cython.Build import cythonize; ModuleNotFoundError: No module named 'Cython'; ----------------------------------------; ERROR: Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output. ** Installing cython fixes it **. jevon@bb8:~$ pip3 install cython; Collecting cython; Downloading Cython-0.29.17-cp38-cp38-manylinux1_x86_64.whl (2.0 MB); |████████████████████████████████| 2.0 MB 721 kB/s ; Installing collected packages: cython; Successfully installed cython-0.29.17; jevon@bb8:~$ pip3 install qutip; Collecting qutip; Using cached qutip-4.5.0.tar.gz (3.5 MB); Requirement already satisfied: cython>=0.21 in ./.local/lib/python3.8/site-packages (from qutip) (0.29.17); Requirement already satisfied: numpy>=1.12 in ./.local/lib/python3.8/site-packages (from qutip) (1.18.3); Requirement already satisfied: scipy>=1.0 in ./.local/lib/python3.8/site-packages (from qutip) (1.4.1); Building wheels for collected packages: qutip; Building wheel for qutip (setup.py) ... done; Created wheel for qutip: filename=qutip-4.5.0-cp38-cp38-linux_x86_64.whl size=17905114 sha256=3f461cbc07b40c0de96b709ea20bca495c7ffe1b6060a533a1ab733107c161ab; Stored in directory: /home/jevon/.cache/pip/wheels/3a/4d/bf/1c8e9",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1246:1314,Install,Installing,1314,https://qutip.org,https://github.com/qutip/qutip/issues/1246,1,['Install'],['Installing']
Deployability,"tbh, the only real use-case for `git cherry-pick` is to backport single bug-fix commits from `master` onto an already existing release branch without merging in additional feature commits. Since `dev.major` is intended to _include_ all of `master` (and `master` will eventually point to the `dev.major` tip), we shouldn't cherry pick from one to the other, but merge all changes. Having both #1289 and #1337 is effectively the same as having cherry-picked the feature onto both branches already, which is why the merge is now a bit tricky. That's not a problem at all (with how we developed it, it's the correct thing to do), it just means that when I joined them back together, I just merged this bit with the (logical - I did it all in one go) strategy `--ours` to tell `git` to keep the `dev.major` version.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1289#issuecomment-779258918:127,release,release,127,https://qutip.org,https://github.com/qutip/qutip/pull/1289#issuecomment-779258918,1,['release'],['release']
Deployability,"te` has properties `rhs: QobjEvo`, `state: Qobj`, `time: float` (`sesolve_prepare_ode` and `mcsolve_prepare_ode` would presumably return the same object, or a derived object). Then we'd have an `Integrator` class, which encapsulates an integration step using whatever integrator of choice, so there's one that encapsulates the scipy integrator, one which is a Cython-ised RK4 implementation, etc. Then the low-level user would simply write the `for time in times` loop themselves; at this level, there's nothing fancy that QuTiP adds, so we may as well just expose it directly. That sounds like the exact right solution! ;-). > I think this architecture is approximately what Eric had in mind too, though I presumably haven't used the same names. Yeah, I think we're actually all on the same page, irrespective of minor implementation/naming details: Have an object that keeps internal state of `mesolve` and allows to advance step-by-step. Personally, I like the naming of `MeSolver` that @Ericgig wrote out in https://github.com/qutip/qutip/issues/1571#issuecomment-858740451, but `mesolve_prepare_ode`/`OdeState` works too. @Ericgig in https://github.com/qutip/qutip/issues/1571#issuecomment-859791561:. > Most of scipy's solver are not ""thread-safe"", but we will be able to use other solvers in the new version. If you can point me to any thread-safe solver, I'd love to try that out. As already discussed above, if I can replace [`scipy.integrate.ode`](https://github.com/qucontrol/krotov/blob/cfe6b108708cdfd29ab7eee24f2112977b951ed2/src/krotov/propagators.py#L312) in Krotov's [`DensityMatrixODEPropagator`](https://github.com/qucontrol/krotov/blob/cfe6b108708cdfd29ab7eee24f2112977b951ed2/src/krotov/propagators.py#L162) with something that's reentrant so I don't have to [re-initialize the integrator in every time step](https://github.com/qucontrol/krotov/blob/cfe6b108708cdfd29ab7eee24f2112977b951ed2/src/krotov/propagators.py#L244) , that might be a significant performance boost already.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243:13066,integrat,integrate,13066,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243,2,['integrat'],"['integrate', 'integrator']"
Deployability,temp.macosx-11.0-arm64-3.9/build/src.macosx-11.0-arm64-3.9/numpy/core/src/umath; creating build/temp.macosx-11.0-arm64-3.9/build/src.macosx-11.0-arm64-3.9/numpy/core/src/common; creating build/temp.macosx-11.0-arm64-3.9/private; creating build/temp.macosx-11.0-arm64-3.9/private/var; creating build/temp.macosx-11.0-arm64-3.9/private/var/folders; creating build/temp.macosx-11.0-arm64-3.9/private/var/folders/kj; creating build/temp.macosx-11.0-arm64-3.9/private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn; creating build/temp.macosx-11.0-arm64-3.9/private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T; creating build/temp.macosx-11.0-arm64-3.9/private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-install-cp5z29tf; creating build/temp.macosx-11.0-arm64-3.9/private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-install-cp5z29tf/numpy_1458b1f38a5449d18aa77b5bb31c63d1; creating build/temp.macosx-11.0-arm64-3.9/private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-install-cp5z29tf/numpy_1458b1f38a5449d18aa77b5bb31c63d1/numpy; creating build/temp.macosx-11.0-arm64-3.9/private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-install-cp5z29tf/numpy_1458b1f38a5449d18aa77b5bb31c63d1/numpy/_build_utils; creating build/temp.macosx-11.0-arm64-3.9/private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-install-cp5z29tf/numpy_1458b1f38a5449d18aa77b5bb31c63d1/numpy/_build_utils/src; compile options: '-DNPY_INTERNAL_BUILD=1 -DHAVE_NPY_CONFIG_H=1 -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE=1 -D_LARGEFILE64_SOURCE=1 -DNO_ATLAS_INFO=3 -DHAVE_CBLAS -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/umath -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/npymath -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/common -Inumpy/core/include -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/include/numpy -Inumpy/core/src/common -Inumpy/core/src -Inumpy/core -Inumpy/core/src/npymath -Inumpy/core/src/multiarray -Inumpy/core/src/umath -Inumpy/core/src/npysort -I/opt/homebrew/Caskro,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:63506,install,install-,63506,https://qutip.org,https://github.com/qutip/qutip/issues/1740,1,['install'],['install-']
Deployability,"tensor, sigmax, sigmay, sigmaz, sigmam, qeye, propagator, qpt, to_kraus; import numpy as np; from qutip.tomography import _index_permutations. def my_to_chi(U, op_basis_list):; E_ops = []; for inds in _index_permutations([len(ops) for ops in op_basis_list]):; E_op_list = [op_basis_list[k][inds[k]] for k in range(len(; op_basis_list))]; E_ops.append(tensor(E_op_list)); kraus_ops = to_kraus(U); e_ij_coeffs = np.array([[np.trace(kraus_op.dag() * E_op); for E_op in E_ops]; for kraus_op in kraus_ops] ; ); return np.conjugate(e_ij_coeffs).T @ e_ij_coeffs. H = tensor(sigmaz(), qeye(2)) + tensor(qeye(2), sigmaz()) + tensor(sigmax(), sigmax()); c_ops = [tensor(sigmam(), qeye(2))]; twoqcontrol_eval_times = np.linspace(; 0.0, 80.0, 41; ); prop = propagator(H, twoqcontrol_eval_times, c_ops)[-1]. # I define the basis operators with the extra factor of 2; # so that the kraus operators are properly normalized; my_op_basis_list = [[qeye(2) / 2, sigmax() / 2, sigmay() / 2, sigmaz() / 2]] * 2; op_basis_list = [[qeye(2), sigmax(), sigmay(), sigmaz()]] * 2. chi_qpt = qpt(prop, op_basis_list); chi_qpt_phase = qpt(prop * np.exp(1j * 0.025), op_basis_list); my_chi_qpt = my_to_chi(prop, my_op_basis_list); my_chi_qpt_phase = my_to_chi(prop * np.exp(1j * 0.025), my_op_basis_list); print(chi_qpt[0, 0], chi_qpt_phase[0, 0], my_chi_qpt[0, 0], my_chi_qpt_phase[0, 0]); ```. ### Code Output. ```shell; (0.06249998763756867+3.5100175053489703e-10j) (0.06248045739988902+0.0015623372865329985j) (0.06256860979790599+0j) (0.06256860981163634+0j); ```. ### Expected Behaviour. The `qpt` function should return a process matrix that is Hermitean, irrespective of a global phase. ### Your Environment. ```shell; QuTiP Version: 4.7.0; Numpy Version: 1.21.2; Scipy Version: 1.7.1; Cython Version: 0.29.23; Matplotlib Version: 3.4.2; Python Version: 3.7.7; Number of CPUs: 4; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Darwin (x86_64); ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1905:2729,Install,Installed,2729,https://qutip.org,https://github.com/qutip/qutip/issues/1905,1,['Install'],['Installed']
Deployability,"these two files. Please let me know if it didn'tgo through. Thank you! . ### Code to Reproduce the Bug. ```shell; Old code in ""Ikonen First Shot New Unitary Trans States 2 level Full H Gated Test 2 - Copy.ipynb""; New code in ""Test.ipynb""; Both attached.; These two codes are exactly identical. Only difference is in the qutip installation, one from 3 years ago and one just completed.; ```. ### Code Output. ```shell; Output in block 23 in the new code is significantly different from that in block 215 in the old code.; ```. ### Expected Behaviour. Expected qutip to produce same results on identical codes 3 years apart. ### Your Environment. ```shell; QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman, Simon Cross, Asier Galicia, Paul Menczel, and Patrick Hopf.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 5.0.3.post1; Numpy Version: 2.0.1; Scipy Version: 1.13.1; Cython Version: 0.29.24; Matplotlib Version: 3.9.1; Python Version: 3.9.7; Number of CPUs: 8; BLAS Info: Generic; INTEL MKL Ext: False; Platform Info: Windows (AMD64); Installation path: C:\Users\ychao\Anaconda3\lib\site-packages\qutip; ================================================================================; Please cite QuTiP in your publication.; ================================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; ```. ### Additional Context. [codes.zip](https://github.com/user-attachments/files/16367722/codes.zip); Including the zip folder containing the two files)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2501:3062,Install,Installation,3062,https://qutip.org,https://github.com/qutip/qutip/issues/2501,1,['Install'],['Installation']
Deployability,"thods ... ok; > correlation: comparing spectrum from es and fft methods ... ok; > correlation: comparing spectrum from es and pi methods ... ok; > correlation: comparing TLS emission correlations (str-list td format) ... In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:3537,Release,Release,3537,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"thub.com/kjd/idna/commit/d516b874c3388047934938a500c7488d52c4e067""><code>d516b87</code></a> Update Github actions/checkout to v4</li>; <li><a href=""https://github.com/kjd/idna/commit/c095c75943413c75ebf8ac74179757031b7f80b7""><code>c095c75</code></a> Merge branch 'master' into dev</li>; <li><a href=""https://github.com/kjd/idna/commit/60a0a4cb61ec6834d74306bd8a1fa46daac94c98""><code>60a0a4c</code></a> Fix typo in GitHub Actions workflow key</li>; <li><a href=""https://github.com/kjd/idna/commit/5918a0ef8034379c2e409ae93ee11d24295bb201""><code>5918a0e</code></a> Merge branch 'master' into dev</li>; <li>Additional commits viewable in <a href=""https://github.com/kjd/idna/compare/v3.4...v3.7"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=idna&package-manager=pip&previous-version=3.4&new-version=3.7)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2392:4147,update,updates,4147,https://qutip.org,https://github.com/qutip/qutip/pull/2392,1,['update'],['updates']
Deployability,"tialized module 'qutip' has no attribute 'settings' (most likely due to a circular import)``. **To Reproduce**. ```python; import qutip.testing; qutip.testing.run(); ```; The terminal out put is; ```; AttributeError Traceback (most recent call last); <ipython-input-26-02a40f5288b4> in <module>; ----> 1 import qutip.testing; 2 qutip.testing.run(). D:\useful tools\anaconda\lib\site-packages\qutip\__init__.py in <module>; 42 try:; 43 __IPYTHON__; ---> 44 qutip.settings.ipython = True; 45 except NameError:; 46 qutip.settings.ipython = False. AttributeError: partially initialized module 'qutip' has no attribute 'settings' (most likely due to a circular import). ```. **Expected behavior**; Normally test the installation of qutip. **Your Environment**. ```QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman and Simon Cross.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.6.2; Numpy Version: 1.20.1; Scipy Version: 1.7.1; Cython Version: 0.29.23; Matplotlib Version: 3.3.4; Python Version: 3.8.8; Number of CPUs: 4; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Windows (AMD64); Installation path: D:\useful tools\anaconda\lib\site-packages\qutip; ================================================================================; Please cite QuTiP in your publication.; ================================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()` ```. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1650:1690,Install,Installed,1690,https://qutip.org,https://github.com/qutip/qutip/issues/1650,2,['Install'],"['Installation', 'Installed']"
Deployability,"time zero. Instead, it returns a state (presumably some linear combination of the null-space operators) that does not match the long time output from mesolve(), which varies based on initial condition. There are many Liouvillians which do not admit unique steady states, but a simple example can be found in Section 3.3 of [this tutorial](https://doi.org/10.48550/arXiv.2303.16449). ### Code to Reproduce the Bug. ```shell; The bug is apparent from the documentation, as steadystate() does not contain an argument for an initial state.; ```. ### Code Output. _No response_. ### Expected Behaviour. For Liouvillians that admit non-unique steady states, I expected steadystate() to return the long time limit of mesolve() given a particular initial condition. ### Your Environment. ```shell; QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman and Simon Cross.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.6.2; Numpy Version: 1.21.2; Scipy Version: 1.7.1; Cython Version: 0.29.24; Matplotlib Version: 3.5.0; Python Version: 3.7.11; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Darwin (x86_64); Installation path: /opt/anaconda3/lib/python3.7/site-packages/qutip; ================================================================================; Please cite QuTiP in your publication.; ================================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2175:1758,Install,Installed,1758,https://qutip.org,https://github.com/qutip/qutip/issues/2175,2,['Install'],"['Installation', 'Installed']"
Deployability,"tion purposes. The integral type used as the indices in the `CSR` type is now done by simple typedef in the files `qutip/core/data/base.{pyx,pxd}`, so changes it in those two files at compile-time will allow you to switch between 32-bit and 64-bit. The C++ backing source file `zspmv.cpp` and its associated header are renamed to `matmul_csr_vector` to match the new data-layer naming conventions, but more importantly, the functions are now templated over integral types so they will ""magically"" work at either size. In general, `setuptools` likes to link dynamically (on Linux and Mac, but not Windows), and so the templates have to be made explicit, rather than allowing Cython to generate only the necessary one. _Note:_ I'll make a PR to push deprecation warnings onto `eseries`, `essolve` and all other removals or renames that don't already have one in `master`, ready for when we drop QuTiP 4.6.0. -----------. _Original top comment:_. Not a complete switch-over to `CSR` from `fast_csr_matrix`, but this goes a really long way to achieving that. `Qobj` is done completely, but `QobjEvo` is pretty difficult to disentangle, and that really slowed me down a lot, and I'm not at all sure I've got it right there yet. OpenMP is ignored for now as low-priority. We'll need to get it working before a QuTiP 5.0 release, but I'm not working on it at the moment. `CQobjEvo` has been absolutely stripped bare. All its variants are gone, since the data layer types will handle this instead. `QobjEvo` is basically managed by shim at the moment, and needs a huge tidy up to bring it up to speed with the new data layer, and keep it maintainable. The data layer types have been taught to pickle themselves safely and automatically, and so consequently `QobjEvo` is magically pickle-able (aside from the OpenMP types). This PR includes all the commits from #1296 as well, but it's still a pretty giant PR as it stands right now. The tests won't pass yet, because I haven't finished converting everything.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1332:3430,release,release,3430,https://qutip.org,https://github.com/qutip/qutip/pull/1332,1,['release'],['release']
Deployability,"tion_3op(; > + solver, state0, [0], taulist, None, a_op.dag(), a_op; > + )[0]; >; > ------------------------------; >; > In qutip/solver/correlation.py; > <https://github.com/qutip/qutip/pull/2186#discussion_r1245592358>:; >; > > + solver_instance = FLiMESolver(; > + floquet_basis,; > + c_ops,; > + args,; > + time_sense=time_sense; > + ); >; > ⬇️ Suggested change; >; > - solver_instance = FLiMESolver(; > - floquet_basis,; > - c_ops,; > - args,; > - time_sense=time_sense; > - ); > + solver_instance = FLiMESolver(; > + floquet_basis,; > + c_ops,; > + args,; > + time_sense=time_sense,; > + options=options,; > + ); >; > ------------------------------; >; > In qutip/solver/floquet.py; > <https://github.com/qutip/qutip/pull/2186#discussion_r1245594985>:; >; > > @@ -929,4 +930,5 @@ def run(self, state0, tlist, *, floquet=False, args=None, e_ops=None):; > stats[""run time""] = progress_bar.total_time(); > # TODO: It would be nice if integrator could give evolution statistics; > # stats.update(_integrator.stats); > +; >; > Why a new empty line here?; > ------------------------------; >; > In qutip/solver/floquet.py; > <https://github.com/qutip/qutip/pull/2186#discussion_r1245604228>:; >; > > + self.evecs = _data.permute.indices(; > + evecs, col_perm=np.argsort(perm)); >; > This file already has black ran on it and the style is ok as is.; > (But I just learned that black exclude the newline in it's character count; > while pycodestyle include it.); > Since it's not the main part of your PR, please revert it to it's original; > state.; > ------------------------------; >; > In qutip/solver/flimesolve.py; > <https://github.com/qutip/qutip/pull/2186#discussion_r1245610200>:; >; > > + total_R_tensor[key] += np.reshape(flime_FirstTerm - (1 / 2); > + * (flime_SecondTerm +; > + flime_ThirdTerm),; > + (Hdim**2, Hdim**2)); > + except KeyError:; > + total_R_tensor[key] = np.reshape(flime_FirstTerm - (1 / 2); > + * (flime_SecondTerm +; > + flime_ThirdTerm),; > + (Hdim**2, Hdim**2)); > + re",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2186#issuecomment-1612045847:2933,update,update,2933,https://qutip.org,https://github.com/qutip/qutip/pull/2186#issuecomment-1612045847,2,['update'],['update']
Deployability,"tions using normal class inheritance. ; `install` options are put back into `settings`, these are most options that the user cannot change, such as the presence of mkl or running in `ipython`. The exceptions is the location of the .qutip folder which is a setting but can be changed. The base for the options is a dict with fixed keys and default values. As before, options can be set as keywork at initialization or when setting items. The default can be changed using context (mainly for tests) or setting items at the class:. ```; SolverOptions['method`] = 'bdf' # Set default method ; with SolverOptions(atol=1e-5):; opt = SolverOptions(store_state=True); opt['progress_bar'] = False; print(opt). progress_bar : False; store_state : True; method : 'bdf'; atol : 1e-5; ...; ```; The option can also be initialized from a dict or another options instance, it will make a copy. I added the capacity to add a safety check when setting an options. It is only used for `use_cython` which will error when trying to set it to `True` without cython installed. Otherwise, it will fail when trying to use the options. *Solver's options*; Each solver has it's option class (SeOptions, MeOptions, etc.) with only needed keys.This somewhat feel overkill since they are all the some for now, until mcsolve is merged. Each integrator also has an associated options and the solver options contain an integrator options. Conversion between options type will raise an error. When creating a solver options, it read the `method` key and setup a matching integrator options. Thus only the keys used by the solver or integrator are defined in the instance. This allow adding new integrator with their own options without adding complexity to the solver options. It can be used as such:; ```; opt = SolverOptions(method='lsoda'); opt['progress_bar'] = False; opt.ode['max_order_ns'] = 10; ```; To make it work smoothly, each integrator must be associated to only one method thus `zvode` was split between `adams` and `b",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1812:1312,install,installed,1312,https://qutip.org,https://github.com/qutip/qutip/pull/1812,1,['install'],['installed']
Deployability,"tip. However, I did show in the tutorial notebook explicitly as an example how it works on the RIKEN cluster, and I refer to the mpi4py users guide. That being said, we do want to set up an automated test for this, and we do want to understand what went wrong in our initial attempts to set up those tests. The two main problems we encountered were (a) if mpi4py is installed with pip, all mpi_pmap calls hang; (b) if it is installed with conda, test_map_pass_error hangs sometimes.; The difference between pip and conda comes from the fact that mpi4py requires an MPI implementation. If we use mpi4py's GH workflow to install it with pip, it installs MPICH, and with conda, it installs OpenMPI by default. I noticed that in both cases where mpi_pmap hangs, there *are* error messages, but they are captured by pytest and then never printed because the program hangs... Regarding problem (a), in short, it looks like an MPICH bug to me. I thus decided to use OpenMPI instead, and added `conda install ""openmpi<5"" mpi4py` to just one of our test runs (the python 3.12 one). Regarding problem (b), the problem was that we requested more processes than the default number of slots available. With OpenMPI, the default number of slots available is the number of physical cpu cores (which seems to be 2 on the machine running our tests, leaving only one slot for a worker process). In the `parallel` module, if num_cpus is not provided, it defaults to `available_cpu_count()` (which is 4 on this machine, since there are 4 logical cpus). We could try to find a better default value for num_cpus for mpi_pmap, but I feel like writing that well would require deeper MPI knowledge than I have. What I did instead is, I tried to make it clear in the documentation that the default value might be unsuitable for MPI applications, and I emit a warning if the default value is used. At the same time, I set `OMPI_MCA_rmaps_base_oversubscribe=true` in the test run, which allows OpenMPI to create more processes t",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2296#issuecomment-1923102432:1400,install,install,1400,https://qutip.org,https://github.com/qutip/qutip/pull/2296#issuecomment-1923102432,1,['install'],['install']
Deployability,"tip.about(); ```. ### Code Output. ```shell; $ python3; Python 3.10.9 (main, Dec 7 2022, 13:47:07) [GCC 12.2.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import numpy; >>> numpy.show_config(); ...; blas_mkl_info:; NOT AVAILABLE; ...; openblas_info:; NOT AVAILABLE; accelerate_info:; NOT AVAILABLE; ...; blas_info:; libraries = ['blas', 'blas']; library_dirs = ['/usr/lib/x86_64-linux-gnu']; include_dirs = ['/usr/local/include', '/usr/include']; language = c; define_macros = [('HAVE_CBLAS', None)]; blas_opt_info:; define_macros = [('NO_ATLAS_INFO', 1), ('HAVE_CBLAS', None)]; libraries = ['blas', 'blas']; library_dirs = ['/usr/lib/x86_64-linux-gnu']; include_dirs = ['/usr/local/include', '/usr/include']; language = c; >>> ; >>> import qutip; >>> qutip.about(); ...; BLAS Info: OPENBLAS; ```. ### Expected Behaviour. The qutip declaration of BLAS support should match the numpy declaration. If numpy says OpenBLAS is not available, then qutip should probably not say that it is available (even if it is installed). ### Your Environment. ```shell; $ python3 -c ""import qutip; qutip.about()"". QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman, Simon Cross and Asier Galicia.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.7.1; Numpy Version: 1.24.1; Scipy Version: 1.8.1; Cython Version: 0.29.32; Matplotlib Version: 3.6.2; Python Version: 3.10.9; Number of CPUs: 8; BLAS Info: OPENBLAS; OPENMP Installed: True; INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /usr/lib/python3/dis",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2053:5290,install,installed,5290,https://qutip.org,https://github.com/qutip/qutip/issues/2053,1,['install'],['installed']
Deployability,"tists"", None). /miniconda3/lib/python3.7/site-packages/matplotlib/backends/backend_agg.py in print_png(self, filename_or_obj, metadata, pil_kwargs, *args, **kwargs); 525 ; 526 else:; --> 527 FigureCanvasAgg.draw(self); 528 renderer = self.get_renderer(); 529 with cbook._setattr_cm(renderer, dpi=self.figure.dpi), \. /miniconda3/lib/python3.7/site-packages/matplotlib/backends/backend_agg.py in draw(self); 386 self.renderer = self.get_renderer(cleared=True); 387 with RendererAgg.lock:; --> 388 self.figure.draw(self.renderer); 389 # A GUI class may be need to update a window using this draw, so; 390 # don't forget to call the superclass. /miniconda3/lib/python3.7/site-packages/matplotlib/artist.py in draw_wrapper(artist, renderer, *args, **kwargs); 36 renderer.start_filter(); 37 ; ---> 38 return draw(artist, renderer, *args, **kwargs); 39 finally:; 40 if artist.get_agg_filter() is not None:. /miniconda3/lib/python3.7/site-packages/matplotlib/figure.py in draw(self, renderer); 1707 self.patch.draw(renderer); 1708 mimage._draw_list_compositing_images(; -> 1709 renderer, self, artists, self.suppressComposite); 1710 ; 1711 renderer.close_group('figure'). /miniconda3/lib/python3.7/site-packages/matplotlib/image.py in _draw_list_compositing_images(renderer, parent, artists, suppress_composite); 133 if not_composite or not has_images:; 134 for a in artists:; --> 135 a.draw(renderer); 136 else:; 137 # Composite any adjacent images together. /miniconda3/lib/python3.7/site-packages/matplotlib/artist.py in draw_wrapper(artist, renderer, *args, **kwargs); 36 renderer.start_filter(); 37 ; ---> 38 return draw(artist, renderer, *args, **kwargs); 39 finally:; 40 if artist.get_agg_filter() is not None:. /miniconda3/lib/python3.7/site-packages/mpl_toolkits/mplot3d/axes3d.py in draw(self, renderer); 290 sorted(self.collections,; 291 key=lambda col: col.do_3d_projection(renderer),; --> 292 reverse=True)):; 293 col.zorder = zorder_offset + i; 294 for i, patch in enumerate(. /miniconda3/lib/",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1027:2562,patch,patch,2562,https://qutip.org,https://github.com/qutip/qutip/issues/1027,1,['patch'],['patch']
Deployability,"tomatically; - [ ] Please add tests to cover your changes if applicable.; - [ ] If the behavior of the code has changed or new feature has been added, please also update the [documentation](https://github.com/qutip/qutip-doc) and the [notebook](https://github.com/qutip/qutip-notebooks). Feel free to ask if you are not sure. Delete this checklist after you have completed all the tasks. If you have not finished them all, you can also open a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/) to let the others know this on-going work and keep this checklist in the PR description.; -->. **Description**; As proposed by @hodgestar, I am splitting #1409 into smaller PRs. This is part 1/3, but contain some change in core that would come later in the Solver PR:. - Add manual cython dispatched function. Used by vern ODE method. - Add `to` to `QobjEvoFunc` and some check. Used by brmesolve rework. - Add a version to string Coefficient, a 'try_parsing' options, partial arguments update and basic cleaning function.; This comes mostly from talk with @jakelishman.; When updating coefficient with new argument, it no longer require all coefficient to be given, but will simply update those available. ; Since those change must overwrite old version of the coefficient, a version tag is added to the coefficient folder and a function to erase the old version. It use it's own `COEFF_VERSION`, not qutip version since I don't expect most qutip update will not touch `coefficient.pyx` so we need not to force user to recompile. But it raise the risk of forgetting to change it when working on them. ; Lastly, I added an option to disable the string coefficient parsing since there seems to have some reservation in the last meeting.; But there is a weakness when using that form if unused args are passed: the `key = args['key']` code could be generated for those extra `args` but will not affect the hash name. . **Related issues or PRs**; Will replace part of #1409.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1461:1670,update,update,1670,https://qutip.org,https://github.com/qutip/qutip/pull/1461,2,['update'],['update']
Deployability,"tories, # cspell:disable-line; ); ```. ### Code Output. ```shell; File ""..."", line 270, in solve_stochastic_schrodinger_equation; result = qutip.ssesolve(; ^^^^^^^^^^^^^^^; File ""...\.venv\Lib\site-packages\qutip\solver\stochastic.py"", line 461, in ssesolve; return sol.run(; ^^^^^^^^; File ""...\.venv\Lib\site-packages\qutip\solver\multitraj.py"", line 198, in run; map_func(; File ""...\.venv\Lib\site-packages\qutip\solver\parallel.py"", line 122, in serial_map; remaining_ntraj = reduce_func(result); ^^^^^^^^^^^^^^^^^^^; File ""...\.venv\Lib\site-packages\qutip\solver\result.py"", line 645, in add ; op(trajectory); File ""...\.venv\Lib\site-packages\qutip\solver\result.py"", line 519, in _reduce_states; accu + self._to_dm(state); ~~~~~^~~~~~~~~~~~~~~~~~~~; File ""...\.venv\Lib\site-packages\qutip\core\qobj.py"", line 134, in out; return method(self, other); ^^^^^^^^^^^^^^^^^^^; File ""...\.venv\Lib\site-packages\qutip\core\qobj.py"", line 408, in __add__ ; return Qobj(_data.add(self._data, other._data),; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""qutip\\core\\data\\dispatch.pyx"", line 392, in qutip.core.data.dispatch.Dispatcher.__call__; File ""qutip\\core\\data\\add.pyx"", line 118, in qutip.core.data.add.add_csr; File ""qutip\\core\\data\\add.pyx"", line 154, in qutip.core.data.add.add_csr; File ""qutip\\core\\data\\csr.pyx"", line 159, in qutip.core.data.csr.CSR.copy; File ""qutip\\core\\data\\csr.pyx"", line 542, in qutip.core.data.csr.empty_like; File ""qutip\\core\\data\\csr.pyx"", line 533, in qutip.core.data.csr.empty; MemoryError; ```. ### Expected Behaviour. Code should not have to store the full density matrix, and should not lead to a memory error. ### Your Environment. ```shell; QuTiP Version: 5.0.0a2; Numpy Version: 1.26.3; Scipy Version: 1.12.0; Cython Version: None; Matplotlib Version: 3.8.2; Python Version: 3.12.1; Number of CPUs: 4; BLAS Info: Generic; INTEL MKL Ext: False; Platform Info: Windows (AMD64); Installation path: ...; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2299:2786,Install,Installation,2786,https://qutip.org,https://github.com/qutip/qutip/issues/2299,1,['Install'],['Installation']
Deployability,"tps://redirect.github.com/python-pillow/Pillow/issues/7883"">#7883</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Improve speed of loading QOI images <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7925"">#7925</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Added RGB to I;16N conversion <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7920"">#7920</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Add --report argument to <strong>main</strong>.py to omit supported formats <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7818"">#7818</a> [<a href=""https://github.com/nulano""><code>@​nulano</code></a>]</li>; <li>Added RGB to I;16, I;16L and I;16B conversion <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7918"">#7918</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fix editable installation with custom build backend and configuration options <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7658"">#7658</a> [<a href=""https://github.com/nulano""><code>@​nulano</code></a>]</li>; <li>Fix putdata() for I;16N on big-endian <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7209"">#7209</a> [<a href=""https://github.com/Yay295""><code>@​Yay295</code></a>]</li>; <li>Determine MPO size from markers, not EXIF data <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7884"">#7884</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Improved conversion from RGB to RGBa, LA and La <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7888"">#7888</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Support FITS images with GZIP_1 compression <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7894"">#7894</a> [<a href=""https://github.com/radarhere""><code>@​radarhere",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2381:1947,install,installation,1947,https://qutip.org,https://github.com/qutip/qutip/pull/2381,2,"['configurat', 'install']","['configuration', 'installation']"
Deployability,"tput. It now does the snapshot: compute the expectation values, save the state, compute trajectories average, etc. . `Evolver` is qutip's ODE solver interface: the states are `Data` object and the function is `QovjEvo`(or `QobjEvoFunc`). There are multiple type of evolver wrapping different scipy's ode solver and a few of our own. The wrapper around scipy's zvode that was previously used in qutip's is `EvolverScipyZvode`, but we now have our own cython solver based on [Verner's method](http://people.math.sfu.ca/~jverner/) that accept any Data type as state. Different evolver based on different ODE method are interchangeable and have their dispatcher `evolver_collection`, allowing to easily add new methods. . With this, time-dependent system are managed by `QobjEvo`, ODE by `Evolver`, therefore the solvers can concentrate more closely on the physic. **Evolver:**; Method supported with this PR: `adams`, `bdf`, `dop853`, `lsoda`, `vern7`, `vern9`, `diag`. The 4 first are from `scipy.integrate.ode`, the 3 last are ours. `vern7` and `vern9` are runge-kutta methods of 7th and 9th order using [verner's most efficient coefficient](http://people.math.sfu.ca/~jverner/) with dense output. `diag` diagonalize a constant system and solve the ODE in that basis.; The minimum that must be given for a new evolver are the `prepare`, `set_state`, `get_state` and `step` methods. `evolver_collection` work as a dispatcher over evolvers. Solvers obtain their evolver instance using `evolver_collection[method, rhs]` with both `method` and `rhs` taken from the options. `evolver_collection` keep a list of description, used options and capacities for each member. It can list the available method matching desired condition. The `rhs` options is not used yet in this PR, it is for future Adaptative Hilbert Space and other modification to the ODE that affect the matrix-state product. #### Other utilities and code added in this PR:. ##### `SolverQEvo`, `Feedback`:; Wrapper around `QobjEvo` that hand",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1409:1316,integrat,integrate,1316,https://qutip.org,https://github.com/qutip/qutip/pull/1409,1,['integrat'],['integrate']
Deployability,"tro\.pyxbld\temp.win-amd64-3.7\Release\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\pyrex\cqobjevo_compiled_coeff_130828459648281117.cp37-win_amd64.lib and object C:\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\pyrex\cqobjevo_compiled_coeff_130828459648281117.cp37-win_amd64.exp; Generating code; Finished generating code; cl : Command line warning D9025 : overriding '/W3' with '/w'; cl : Command line warning D9025 : overriding '/Ox' with '/O1'; cqobjevo_compiled_coeff_8398411180025011525.cpp; c:\anaconda\lib\site-packages\numpy\core\include\numpy\npy_1_7_deprecated_api.h(14) : Warning Msg: Using deprecated NumPy API, disable it with #define NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; Creating library C:\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\pyrex\cqobjevo_compiled_coeff_8398411180025011525.cp37-win_amd64.lib and object C:\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\pyrex\cqobjevo_compiled_coeff_8398411180025011525.cp37-win_amd64.exp; Generating code; Finished generating code; Process SpawnPoolWorker-671:; Process SpawnPoolWorker-669:; Traceback (most recent call last):; Traceback (most recent call last):; File ""C:\Anaconda\lib\multiprocessing\process.py"", line 297, in _bootstrap; self.run(); File ""C:\Anaconda\lib\multiprocessing\process.py"", line 297, in _bootstrap; self.run(); File ""C:\Anaconda\lib\multiprocessing\process.py"", line 99, in run; self._target(*self._args, **self._kwargs); File ""C:\Anaconda\lib\multiprocessing\process.py"", line 99, in run; self._target(*self._args, **self._kwargs); File ""C:\Anaconda\lib\multiprocessing\pool.py"", line 110, in worker; task = get(); File ""C:\Anaconda\lib\multiprocessing\pool.py"", line 110, in worker; task = get(); File ""C:\Anaconda\lib\multiprocessing\queues.py"", line 354, in get; return _ForkingPickler.loads(res); File ""C:\Anaconda\lib\multiprocessing\queu",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1084:1518,Release,Release,1518,https://qutip.org,https://github.com/qutip/qutip/issues/1084,1,['Release'],['Release']
Deployability,"ts/issues/2376"">#2376</a>)</p>; </li>; <li>; <p>CMake: Implement bracket style comments (<a href=""https://redirect.github.com/pygments/pygments/issues/2338"">#2338</a>, <a href=""https://redirect.github.com/pygments/pygments/issues/2354"">#2354</a>)</p>; </li>; <li>; <p>CSS: Improve lexing of numbers inside function calls (<a href=""https://redirect.github.com/pygments/pygments/issues/2382"">#2382</a>, <a href=""https://redirect.github.com/pygments/pygments/issues/2383"">#2383</a>)</p>; </li>; <li>; <p>diff: Support normal diff syntax, as opposed to unified diff syntax (<a href=""https://redirect.github.com/pygments/pygments/issues/2321"">#2321</a>)</p>; </li>; <li>; <p>GLSL, HLSL:</p>; <ul>; <li>Support line continuations in preprocessor code (<a href=""https://redirect.github.com/pygments/pygments/issues/2350"">#2350</a>)</li>; <li>Improve preprocessor directive handling (<a href=""https://redirect.github.com/pygments/pygments/issues/2357"">#2357</a>)</li>; </ul>; </li>; <li>; <p>LilyPond: minor update of builtins</p>; </li>; <li>; <p>PHP: support attributes (<a href=""https://redirect.github.com/pygments/pygments/issues/2055"">#2055</a>, <a href=""https://redirect.github.com/pygments/pygments/issues/2347"">#2347</a>, <a href=""https://redirect.github.com/pygments/pygments/issues/2360"">#2360</a>), fix anonymous classes without; parameters (<a href=""https://redirect.github.com/pygments/pygments/issues/2359"">#2359</a>), improve lexing of variable variable syntax (<a href=""https://redirect.github.com/pygments/pygments/issues/2358"">#2358</a>)</p>; </li>; <li>; <p>Python:</p>; <ul>; <li>Add missing builtins (<a href=""https://redirect.github.com/pygments/pygments/issues/2334"">#2334</a>)</li>; <li>Fix inconsistent lexing of <code>None</code> (<a href=""https://redirect.github.com/pygments/pygments/issues/2406"">#2406</a>)</li>; </ul>; </li>; <li>; <p>Rebol/Red: Don't require script headers (<a href=""https://redirect.github.com/pygments/pygments/issues/2348"">#2348</a>, <a href=""https://redir",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2201:3447,update,update,3447,https://qutip.org,https://github.com/qutip/qutip/pull/2201,2,['update'],['update']
Deployability,"ture using options. . The best signature I believe is `f(t, **args)` since it allows to use more natural function call using kwargs (`f(t, w=0, a=1)`). However, it is the slowest in the #1123 implementation (up to 10x): some items are added to `args` for internal use and they need to be filtered at each call. It could be brought to 2.5x with some work, but no better. `f(t)` is about 2x slower than `f(t, args)`. But it's less agile: if the Hamiltonian use `f(t, w1=0)`, we cannot add a c_ops using `f(t, w2=0)`, both function must accept `w1` and `w2`. `args` could just hide unused items. Which ever we choose as the main one will be 2~3x faster than the other. We can have automatic detection of the signature if we want to be fancy. Which signature do you think is better?. Second, these function can depend on the state with the option `rhs_with_state`. Thus the coefficients are `f(t, state, args)` with `state` a 1D numpy array.; When making QobjEvo, I added special `args`' keys that indicate that the value should be updated with the state: setting `args = {""val=Qobj"":psi0, ""val"":psi0}` would tell `args[""val""]` to be updated with the state at each use in the solver. The state can be obtained as Qobj, np.array or the args could be updated to be the expectation value of another Qobj.; There are some bug for it in master presently but it will work with PR #1127. Using these special keys for this work well but they need to be removed for the new signature candidate (`f(t, **args)`). Also you cannot remove / fix to a constant them once declared. Since they are not used/working yet, now is the time to change to something better. I could see 2 other options:; - reserved keys: `args = {""state_vec"":psi0}`, this will always be the state (np.array) if available.; -- collapse are less practical this way.; - special values: `args = {""state_vec"":qt.feedback(""vec"")}`. This seems the most natural to me since the value is what change. . I would appreciate feedback and ideas on the issue.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1136:1610,update,updated,1610,https://qutip.org,https://github.com/qutip/qutip/issues/1136,3,['update'],['updated']
Deployability,"ub.com/radarhere""><code>@​radarhere</code></a>]</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/python-pillow/Pillow/blob/master/CHANGES.rst"">pillow's changelog</a>.</em></p>; <blockquote>; <h2>8.3.2 (2021-09-02)</h2>; <ul>; <li>; <p>CVE-2021-23437 Raise ValueError if color specifier is too long; [hugovk, radarhere]</p>; </li>; <li>; <p>Fix 6-byte OOB read in FliDecode; [wiredfool]</p>; </li>; <li>; <p>Add support for Python 3.10 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5569"">#5569</a>, <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5570"">#5570</a>; [hugovk, radarhere]</p>; </li>; <li>; <p>Ensure TIFF <code>RowsPerStrip</code> is multiple of 8 for JPEG compression <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5588"">#5588</a>; [kmilos, radarhere]</p>; </li>; <li>; <p>Updates for <code>ImagePalette</code> channel order <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5599"">#5599</a>; [radarhere]</p>; </li>; <li>; <p>Hide FriBiDi shim symbols to avoid conflict with real FriBiDi library <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5651"">#5651</a>; [nulano]</p>; </li>; </ul>; <h2>8.3.1 (2021-07-06)</h2>; <ul>; <li>; <p>Catch OSError when checking if fp is sys.stdout <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5585"">#5585</a>; [radarhere]</p>; </li>; <li>; <p>Handle removing orientation from alternate types of EXIF data <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5584"">#5584</a>; [radarhere]</p>; </li>; <li>; <p>Make Image.<strong>array</strong> take optional dtype argument <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5572"">#5572</a>; [t-vi, radarhere]</p>; </li>; </ul>; <h2>8.3.0 (2021-07-01)</h2>; <",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1654:5023,Update,Updates,5023,https://qutip.org,https://github.com/qutip/qutip/pull/1654,1,['Update'],['Updates']
Deployability,"ub.com/sponsors/urllib3"">GitHub Sponsors</a></strong></p>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/urllib3/urllib3/blob/main/CHANGES.rst"">urllib3's changelog</a>.</em></p>; <blockquote>; <h2>1.26.5 (2021-05-26)</h2>; <ul>; <li>Fixed deprecation warnings emitted in Python 3.10.</li>; <li>Updated vendored <code>six</code> library to 1.16.0.</li>; <li>Improved performance of URL parser when splitting; the authority component.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/urllib3/urllib3/commit/d1616473df94b94f0f5ad19d2a6608cfe93b7cdf""><code>d161647</code></a> Release 1.26.5</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/2d4a3fee6de2fa45eb82169361918f759269b4ec""><code>2d4a3fe</code></a> Improve performance of sub-authority splitting in URL</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/2698537d52f8ff1f0bbb1d45cf018b118e91f637""><code>2698537</code></a> Update vendored six to 1.16.0</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/07bed791e9c391d8bf12950f76537dc3c6f90550""><code>07bed79</code></a> Fix deprecation warnings for Python 3.10 ssl module</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/d725a9b56bb8baf87c9e6eee0e9edf010034b63b""><code>d725a9b</code></a> Add Python 3.10 to GitHub Actions</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/339ad34c677c98fd9ad008de1d8bbeb9dbf34381""><code>339ad34</code></a> Use pytest==6.2.4 on Python 3.10+</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/f271c9c3149e20d7feffb6429b135bbb6c09ddf4""><code>f271c9c</code></a> Apply latest Black formatting</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/1884878aac87ef0494b282e940c32c24ee917d52""><code>1884878</code></a> [1.26] Properly proxy EOF on the SSLTransport test suite</li>; <li>See full diff in <a href=""https://github.com/urllib3/urllib3/compare/1.26.4...1",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1563:1812,Update,Update,1812,https://qutip.org,https://github.com/qutip/qutip/pull/1563,1,['Update'],['Update']
Deployability,"ude/python3.5m -c'; > extra options: '-w -ffast-math -O3 -march=native -funroll-loops'; > gcc: qutip/cy/src/zspmv.c; > qutip/cy/src/zspmv.c:2:21: fatal error: complex.h: No such file or; > directory; > #include <complex.h>; > ^; > compilation terminated.; > qutip/cy/src/zspmv.c:2:21: fatal error: complex.h: No such file or; > directory; > #include <complex.h>; > ^; > compilation terminated.; > error: Command ""gcc -pthread -DNDEBUG -g -fwrapv -O3 -Wall; > -Wstrict-prototypes -mtune=generic -march=x86-64 -ftree-vectorize -g2; > -O2 -pipe -fPIC -Wformat -Wformat-security -fno-omit-frame-pointer; > -fstack-protector-strong --param ssp-buffer-size=4 -fexceptions; > -D_FORTIFY_SOURCE=2 -feliminate-unused-debug-types -Wno-error; > -Wp,-D_REENTRANT -fPIC; > -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include ; >; > -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include ; >; > -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include ; >; > -I/home/jakeargent/anaconda3/include/python3.5m -c; > qutip/cy/src/zspmv.c -o; > build/temp.linux-x86_64-3.5/qutip/cy/src/zspmv.o -w -ffast-math -O3; > -march=native -funroll-loops"" failed with exit status 1`; >; > Well, all of them seem to fail with a similar issue. Whatever is exit; > status 1. (This; > <http://stackoverflow.com/questions/35991403/python-pip-install-gives-command-python-setup-py-egg-info-failed-with-error-c> ; >; > is the SO solution I followed, it claims that error code is related to; > operation not permitted or setuptools not being installed. I upgraded; > the setuptools, pip doesn't work with sudo (I'm guessing it shouldn't)); >; > How can I install qutip?; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/639>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/ABMPqa8lboGo7XZN87m_drojuUNduRRVks5rWiL9gaJpZM4Lv_Q7>.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/639#issuecomment-275734243:6433,install,install-gives-command-python-setup-py-egg-info-failed-with-error-c,6433,https://qutip.org,https://github.com/qutip/qutip/issues/639#issuecomment-275734243,4,"['install', 'upgrade']","['install', 'install-gives-command-python-setup-py-egg-info-failed-with-error-c', 'installed', 'upgraded']"
Deployability,"udo apt install python3-qutip ; …; Entpacken von python3-qutip (4.4.1-6build1) ...; python3-qutip (4.4.1-6build1) wird eingerichtet ...; /usr/lib/python3/dist-packages/qutip/_mkl/spmv.py:53: SyntaxWarning: ""is"" ; with a literal. Did you mean ""==""?; if x.ndim is 1:; /usr/lib/python3/dist-packages/qutip/qobjevo.py:776: SyntaxWarning: ""is no; t"" with a literal. Did you mean ""!=""?; if self.compiled and self.compiled.split()[2] is not ""cte"":; /usr/lib/python3/dist-packages/qutip/qobjevo.py:1045: SyntaxWarning: ""is"" ; with a literal. Did you mean ""==""?; elif op1.type is ""array"":; /usr/lib/python3/dist-packages/qutip/qobjevo.py:1070: SyntaxWarning: ""is"" ; with a literal. Did you mean ""==""?; elif self.ops[_set[0]].type is ""string"":; /usr/lib/python3/dist-packages/qutip/qobjevo.py:1079: SyntaxWarning: ""is"" ; with a literal. Did you mean ""==""?; elif self.ops[_set[0]].type is ""array"":; /usr/lib/python3/dist-packages/qutip/qobjevo.py:1534: SyntaxWarning: ""is n; ot"" with a literal. Did you mean ""!=""?; for key in self.__dict__ if key is not ""compiled_qobjevo""}; ```. **To Reproduce**; Install qutip on ubuntu 20.04.1 via `sudo apt install python3-qutip`. **Expected behavior**; No warnings during the installation of qutip. **Your Environment**; ```; >>> qutip.about(). QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Original developers: R. J. Johansson & P. D. Nation.; Current admin team: Alexander Pitchford, Paul D. Nation, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, and Eric Giguère.; Project Manager: Franco Nori.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.4.1; Numpy Version: 1.17.4; Scipy Version: 1.4.1; Cython Version: 0.29.14; Matplotlib Version: 3.1.2; Python Version: 3.8.5; Number of CPUs: 2; BLAS Info: OPENBLAS; OPENMP Installed: True; INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /usr/lib/python3/dist-packages/qutip; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1389:1187,Install,Install,1187,https://qutip.org,https://github.com/qutip/qutip/issues/1389,5,"['Install', 'install']","['Install', 'Installation', 'Installed', 'install', 'installation']"
Deployability,"ues/286"">#286</a>)</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/4a9569a3eb58db8548536fc16c5c5c7af946a5b1""><code>4a9569a</code></a> Bump actions/checkout from 4.1.2 to 4.1.4 (<a href=""https://redirect.github.com/certifi/python-certifi/issues/287"">#287</a>)</li>; <li><a href=""https://github.com/certifi/python-certifi/commit/1fc808626a895a916b1e4c2b63abae6c5eafdbe3""><code>1fc8086</code></a> Bump peter-evans/create-pull-request from 6.0.4 to 6.0.5 (<a href=""https://redirect.github.com/certifi/python-certifi/issues/288"">#288</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/certifi/python-certifi/compare/2023.07.22...2024.07.04"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=certifi&package-manager=pip&previous-version=2023.7.22&new-version=2024.7.4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2483:3143,update,updates,3143,https://qutip.org,https://github.com/qutip/qutip/pull/2483,1,['update'],['updates']
Deployability,"ule to dynamically determine the number of available processors and limited the number of worker processes to avoid overwhelming the host system. This approach helps in balancing load and performance. 2. **Error Handling and Robustness**:; - Enhanced the resilience of the parallel computation by encapsulating the worker function’s body in a try-except block, ensuring that failures in one computation do not impact the overall execution.; - Ensured the stability of the test environment by restoring the original function state after the test execution, preventing side effects on subsequent tests. 3. **Testing**:; - **Extended Test Coverage**: Developed new test cases to validate both the parallel and sequential execution paths of the function. Tests ensure that both modes produce equivalent results, thereby confirming that the parallelization did not introduce computational errors.; - **Integration with Existing Tests**: Integrated the new tests into the existing pytest framework used for QuTiP, making use of fixtures and parameterization to test different scenarios and system setups effectively. ### Implementation Details. - **Concurrency**: The parallel execution is managed through a pool of processes, where each process is responsible for a subset of the total computations. This method is particularly effective for operations that can be divided into independent, smaller tasks.; - **Compatibility**: Ensured that the enhancements are backward-compatible with existing code by modifying only the internal execution strategy of the `correlation_2op_1t` function and by maintaining the original API signature.; - **Performance Considerations**: The parallel implementation can significantly reduce computation times, particularly for larger systems or longer `taulist` arrays, by leveraging multiple CPU cores concurrently. ### Conclusion. The enhancements to the `correlation_2op_1t` function in QuTiP are designed to harness the capabilities of modern multi-core processors, ther",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2395:1974,Integrat,Integration,1974,https://qutip.org,https://github.com/qutip/qutip/pull/2395,2,['Integrat'],"['Integrated', 'Integration']"
Deployability,"ull request from GHSA-h75v-3vvj-5mfj</li>; <li><a href=""https://github.com/pallets/jinja/commit/d655030770081e2dfe46f90e27620472a502289d""><code>d655030</code></a> disallow invalid characters in keys to xmlattr filter</li>; <li><a href=""https://github.com/pallets/jinja/commit/a7863ba9d3521f1450f821119c50d19d7ecea329""><code>a7863ba</code></a> add ghsa links</li>; <li><a href=""https://github.com/pallets/jinja/commit/b5c98e78c2ee7d2bf0aa06d29ed9bf7082de9cf4""><code>b5c98e7</code></a> start version 3.1.4</li>; <li><a href=""https://github.com/pallets/jinja/commit/da3a9f0b804199845fcb76f2e08748bdaeba93ee""><code>da3a9f0</code></a> update project files (<a href=""https://redirect.github.com/pallets/jinja/issues/1968"">#1968</a>)</li>; <li><a href=""https://github.com/pallets/jinja/commit/0ee5eb41d1a2d7d9a05a02dc26dd70e63aaaeeb1""><code>0ee5eb4</code></a> satisfy formatter, linter, and strict mypy</li>; <li><a href=""https://github.com/pallets/jinja/commit/20477c63575175196bfc8103f223cc9f5642595d""><code>20477c6</code></a> update project files (<a href=""https://redirect.github.com/pallets/jinja/issues/5457"">#5457</a>)</li>; <li><a href=""https://github.com/pallets/jinja/commit/e491223739dedbb1f4fc6a71340c1484e149d947""><code>e491223</code></a> update pyyaml dev dependency</li>; <li><a href=""https://github.com/pallets/jinja/commit/36f98854c721f98ba103f97f65a8a098da5af0d7""><code>36f9885</code></a> fix pr link</li>; <li>Additional commits viewable in <a href=""https://github.com/pallets/jinja/compare/3.1.3...3.1.4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=jinja2&package-manager=pip&previous-version=3.1.3&new-version=3.1.4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2418:3054,update,update,3054,https://qutip.org,https://github.com/qutip/qutip/pull/2418,1,['update'],['update']
Deployability,"um Control in QuTiP](https://qutip.org/docs/latest/guide/guide-control.html?highlight=grape#optimal-quantum-control-in-qutip), specifically the `TimeslotComputer` (in fact, we looked at whether `TimeslotComputer` could be used for krotov at the time, but couldn't quite figure it out). I elaborated a little bit in https://github.com/qucontrol/krotov/issues/93#issuecomment-859717563 on the requirements: beyond yielding the propagated states, we'll also have to modify the controls, i.e. the time-dependencies for QuTiP's nested-list format. Within the `krotov` package, these would always be numpy arrays. As an explanation, see [the figure for Krotov's update scheme](https://qucontrol.github.io/krotov/v1.2.1/_images/krotovscheme.svg) from [the documentation](https://qucontrol.github.io/krotov/v1.2.1/07_krotovs_method.html#time-discretization). The single-step-`mesolve` would be for the ""(2) forward-propagation with updated control"" in the bottom of the diagram: After each propagation time step, we calculate a new control value based on the current propagated state and other information (the ∂H/∂ϵ and stored backward-propagated states χ). The new control value is then used for the next time step. I'd also add that `mesolve` ideally should be ""thread-safe"" in the sense that we may have multiple `mesolve` run in parallel (index k in the diagram, where all the different k contribute to the update of the control values at the next time step), within whatever parallelization framework Python makes available. I vaguely remember looking at some Runge-Kutta implementations within scipy where this was a problem. I noted this in the docstring of krotov's [`DensityMatrixODEPropagator`](https://github.com/qucontrol/krotov/blob/master/src/krotov/propagators.py#L162), which was an attempt to adapt some of `mesolve`'s inner workings to Krotov's needs. It turned out the overhead was still too large for this work very well, cf. the large runtime of the [corresponding example](https://quco",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-859754215:2364,update,updated,2364,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-859754215,1,['update'],['updated']
Deployability,"um from es and pi methods ... ok; > correlation: comparing TLS emission correlations (str-list td format) ... In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarraytypes.h:1781:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:18,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h:12:9: note: #pragma message: C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseArgtupleInvalid':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:3648,Release,Release,3648,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"umerically would be to do sparse-matrix-dense-vector operations (which is what we do in Fortran, incidentally). > In the form I've written it, this loop is thread-safe already. As it stands in the 4.x series, `mesolve` is re-entrant (I'm fairly sure), but note that it does generally mutate its arguments, especially if you pass a `QobjEvo` Liouvillian as the first argument. As long as you make sure you give each thread a distinct copy of the input Liouvillian, `mesolve` itself doesn't access global state as far as I recall. Just to be clear: there's two interconnected issues here: One is just being ""reentrant"" in the sense that I can safely have multiple `mesolve`'s run in parallel. This doesn't seem to be a problem for `mesolve` as a whole (propagating over the entire time grid). The other issue, at a lower level is whether I can keep the internal state of the integrator (`scipy.integrate.ode` or whatever else `mesolve` might be using) when propagating a single time step (and whether I can have multiple integrators to run in parallel that each safely keep track of their own state). That comes down to the integrator itself being ""reentrant"", of course. Certainly, calling `mesolve` in a loop (`In [19]`) doesn't keep the internal state of the integrator, hence the overhead between `In [21]` compared to `In [18]`. I wouldn't expect it to, of course, but the question is whether a refactoring of `mesolves` internals into an object that keeps state in a thread-safe way and allows doing time steps would alleviate this overhead (like the `mesolve_prepare_ode(H, state, c_ops) -> OdeState` that you propose in https://github.com/qutip/qutip/issues/1571#issuecomment-859917462). On the other hand, looping over the full `mesolve` as in `In [19]` obviously has no problems with parallelization. I wasn't sure if that's what you meant by ""`mesolve` is re-entrant"" or whether recent changes in QuTiP now use a re-entrant internal integrator, i.e. not `scipy.integrate.ode`. At the time I ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243:6118,integrat,integrators,6118,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243,1,['integrat'],['integrators']
Deployability,"ummary>; <ul>; <li><a href=""https://github.com/python-pillow/Pillow/commit/d594f4cb8dc47fb0c69ae58d9fff86faae4515bd""><code>d594f4c</code></a> Update CHANGES.rst [ci skip]</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/909dc64ed5f676169aa3d9b0c26f132a06321b83""><code>909dc64</code></a> 9.3.0 version bump</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/1a51ce7b955c65c8f2c6bc7772735b197b8a6aa3""><code>1a51ce7</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6699"">#6699</a> from hugovk/security-libtiff_buffer</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/2444cddab2f83f28687c7c20871574acbb6dbcf3""><code>2444cdd</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/6700"">#6700</a> from hugovk/security-samples_per_pixel-sec</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/744f455830871d61a8de0a5e629d4c2e33817cbb""><code>744f455</code></a> Added release notes</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/0846bfae48513f2f51ca8547ed3b8954fa501fda""><code>0846bfa</code></a> Add to release notes</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/799a6a01052cea3f417a571d7c64cd14acc18c64""><code>799a6a0</code></a> Fix linting</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/00b25fd3ac3648bc28eff5d4c4d816e605e3f05f""><code>00b25fd</code></a> Hide UserWarning in logs</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/05b175ef88c22f5c416bc9b8d5b897dea1abbf2c""><code>05b175e</code></a> Tighter test case</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/13f2c5ae14901c89c38f898496102afd9daeaf6d""><code>13f2c5a</code></a> Prevent DOS with large SAMPLESPERPIXEL in Tiff IFD</li>; <li>Additional commits viewable in <a href=""https://github.com/python-pillow/Pillow/compare/9.0.1...9.3.0"">compare view</a></li>; </ul>; </details>; <br />. [![",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2023:14192,release,release,14192,https://qutip.org,https://github.com/qutip/qutip/pull/2023,1,['release'],['release']
Deployability,unsuccessful installing qutip on CentOS8,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1391:13,install,installing,13,https://qutip.org,https://github.com/qutip/qutip/issues/1391,1,['install'],['installing']
Deployability,update MANIFEST.in,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1971:0,update,update,0,https://qutip.org,https://github.com/qutip/qutip/pull/1971,1,['update'],['update']
Deployability,update authors and my binder link,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1080:0,update,update,0,https://qutip.org,https://github.com/qutip/qutip/pull/1080,1,['update'],['update']
Deployability,update function signature of d1 and d2 functions,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/231:0,update,update,0,https://qutip.org,https://github.com/qutip/qutip/pull/231,1,['update'],['update']
Deployability,update setup file for 4.5.0 release,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1167:0,update,update,0,https://qutip.org,https://github.com/qutip/qutip/pull/1167,2,"['release', 'update']","['release', 'update']"
Deployability,update version in rtd-environmnent,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2526:0,update,update,0,https://qutip.org,https://github.com/qutip/qutip/pull/2526,1,['update'],['update']
Deployability,update version to4.6.0 development in setup.py,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1171:0,update,update,0,https://qutip.org,https://github.com/qutip/qutip/pull/1171,1,['update'],['update']
Deployability,"updated docstrings in qutip/qobj.py containing instances of qobj with hyperlinks, as per issue 71",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/976:0,update,updated,0,https://qutip.org,https://github.com/qutip/qutip/pull/976,1,['update'],['updated']
Deployability,updated on the Wiki GSoC 2020 page. https://github.com/qutip/qutip/wiki/Google-Summer-of-Code-2020,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1184#issuecomment-591284346:0,update,updated,0,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-591284346,1,['update'],['updated']
Deployability,updated readme installation version to latest,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/953:0,update,updated,0,https://qutip.org,https://github.com/qutip/qutip/pull/953,2,"['install', 'update']","['installation', 'updated']"
Deployability,"urn function(*args, **kwargs); qutip/core/data/matmul.pyx:329: in qutip.core.data.matmul.matmul_dia; cpdef Dia matmul_dia(Dia left, Dia right, double complex scale=1):; qutip/core/data/matmul.pyx:332: in qutip.core.data.matmul.matmul_dia; npoffsets = np.unique(np.add.outer(left.as_scipy().offsets, right.as_scipy().offsets)); qutip/core/data/dia.pyx:202: in qutip.core.data.dia.Dia.as_scipy; self._scipy = _dia_matrix(data, offsets, self.shape); qutip/core/data/dia.pyx:52: in qutip.core.data.dia._dia_matrix; scipy_data_matrix.__init__(out); E TypeError: _data_matrix.__init__() missing 1 required positional argument: 'arg1'; ======================================================== short test summary info =========================================================; ERROR qutip/tests/core/test_gates.py - TypeError: _data_matrix.__init__() missing 1 required positional argument: 'arg1'; ERROR qutip/tests/core/test_qobjevo.py - TypeError: _data_matrix.__init__() missing 1 required positional argument: 'arg1'; ERROR qutip/tests/solver/test_integrator.py - TypeError: _data_matrix.__init__() missing 1 required positional argument: 'arg1'; ERROR qutip/tests/solver/test_mesolve.py - TypeError: _data_matrix.__init__() missing 1 required positional argument: 'arg1'; !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 4 errors during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!; ============================================= 17 deselected, 40 warnings, 4 errors in 5.47s ==============================================; ```. ### Expected Behaviour. No errors. ### Your Environment. ```shell; QuTiP Version: 5.0.2; Numpy Version: 1.26.4; Scipy Version: 1.14.0; Cython Version: 3.0.10; Matplotlib Version: 3.9.0; Python Version: 3.12.4; Number of CPUs: 10; BLAS Info: Generic; INTEL MKL Ext: False; Platform Info: Darwin (arm64); Installation path: /Users/lorenzo/Desktop/virtual-envs/project1/lib/python3.12/site-packages/qutip; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2472:6407,Install,Installation,6407,https://qutip.org,https://github.com/qutip/qutip/issues/2472,1,['Install'],['Installation']
Deployability,"usr/lib/python3/dist-packages/pep517/in_process/_in_process.py"", line 261, in build_wheel; return _build_backend().build_wheel(wheel_directory, config_settings,; File ""/usr/lib/python3/dist-packages/setuptools/build_meta.py"", line 230, in build_wheel; return self._build_with_temp_dir(['bdist_wheel'], '.whl',; File ""/usr/lib/python3/dist-packages/setuptools/build_meta.py"", line 211, in _build_with_temp_dir; sys.argv = (sys.argv[:1] + setup_command +; TypeError: can only concatenate list (not ""str"") to list. ERROR Backend subproccess exited when trying to invoke build_wheel; ```. The other method; ```; --config-setting=""--build-option=--with-openmp""; ```; appears to work in the sense that it builds successfully. But after installing the package it reports that openmp is still missing; ```; $ python3 -c ""import qutip; qutip.about()"". QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman and Simon Cross.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.7.0; Numpy Version: 1.21.5; Scipy Version: 1.8.1; Cython Version: 0.29.30; Matplotlib Version: 3.5.2; Python Version: 3.10.6; Number of CPUs: 8; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /usr/lib/python3/dist-packages/qutip; ================================================================================; Please cite QuTiP in your publication.; ================================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; ``",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1875#issuecomment-1219841152:2147,Install,Installed,2147,https://qutip.org,https://github.com/qutip/qutip/issues/1875#issuecomment-1219841152,2,['Install'],"['Installation', 'Installed']"
Deployability,"v3.7</h2>; <h2>What's Changed</h2>; <ul>; <li>Fix issue where specially crafted inputs to encode() could take exceptionally long amount of time to process. [CVE-2024-3651]</li>; </ul>; <p>Thanks to Guido Vranken for reporting the issue.</p>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/kjd/idna/compare/v3.6...v3.7"">https://github.com/kjd/idna/compare/v3.6...v3.7</a></p>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/kjd/idna/blob/master/HISTORY.rst"">idna's changelog</a>.</em></p>; <blockquote>; <p>3.7 (2024-04-11); ++++++++++++++++</p>; <ul>; <li>Fix issue where specially crafted inputs to encode() could; take exceptionally long amount of time to process. [CVE-2024-3651]</li>; </ul>; <p>Thanks to Guido Vranken for reporting the issue.</p>; <p>3.6 (2023-11-25); ++++++++++++++++</p>; <ul>; <li>Fix regression to include tests in source distribution.</li>; </ul>; <p>3.5 (2023-11-24); ++++++++++++++++</p>; <ul>; <li>Update to Unicode 15.1.0</li>; <li>String codec name is now &quot;idna2008&quot; as overriding the system codec; &quot;idna&quot; was not working.</li>; <li>Fix typing error for codec encoding</li>; <li>&quot;setup.cfg&quot; has been added for this release due to some downstream; lack of adherence to PEP 517. Should be removed in a future release; so please prepare accordingly.</li>; <li>Removed reliance on a symlink for the &quot;idna-data&quot; tool to comport; with PEP 517 and the Python Packaging User Guide for sdist archives.</li>; <li>Added security reporting protocol for project</li>; </ul>; <p>Thanks Jon Ribbens, Diogo Teles Sant'Anna, Wu Tingfeng for contributions; to this release.</p>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/kjd/idna/commit/1d365e17e10d72d0b7876316fc7b9ca0eebdd38d""><code>1d365e1</code></a> Release v3.7</li>; <li><a href=""https://github.com/kjd/idna/commit/c1b3154939907fab67c5754346af",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2392:1235,Update,Update,1235,https://qutip.org,https://github.com/qutip/qutip/pull/2392,1,['Update'],['Update']
Deployability,v4.7.5 was released a few weeks ago.; It's available on both conda and pypi.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2251#issuecomment-1956630959:11,release,released,11,https://qutip.org,https://github.com/qutip/qutip/pull/2251#issuecomment-1956630959,1,['release'],['released']
Deployability,"ve to completely define an interchange API, and specify quite explicitly what ""commands"" you can tell this sort of `mesolve` state machine to execute. The pattern in your original comment (reproduced here); ```python; for (i, state) in enumerate(; mesolve([H0, [H1, ctrl_array]], state0, list); ):; # assuming `state` is at tlist[i]; new_val = calculate_control_value_for_next_step(state); ctrl_array[i] = new_val; ctrl_array[i+1] = new_val # ignoring IndexError; ```; is probably a little fragile; doing this means we have to guarantee that at _no point_ is the `ctrl_array` object copied. If you wanted to branch off execution part-way through the iterator, you'd have to copy the whole state, and then you'd lose your reference to the control array unless you kept manually walking the structure of the time-dependent object (internally it gets converted into a `QobjEvo` Liouvillian) to retrieve it. The other problem is that `state0` and the `Qobj` parts of the Hamiltonian aren't mutable; the preprocessing of `mesolve` means that none of those objects will exist inside the integrator loop. That's fine for this use-case, but it's not very general. These problems of mutability would apply to callback functions as well. A different way of using `yield` or callback function would be to really lean into a co-routine sort of pattern. So `mesolve` internally would look like; ```python; def mesolve(H, state, times, c_ops, e_ops, options):; # [... set up problem ...]; integrator = scipy.integrate.ode(...); for time in times[1:]:; state = integrator.step_to(time); instructions = yield _mesolve_output_state(state, time, e_ops); integrator = _mesolve_process_instructions(instructions, integrator); ```; and a call to `mesolve` would be like; ```python; solver = mesolve(H, rho0, times, c_ops); try:; result = next(solver); while True:; next_control = krotov.get_next_control(result.time, result.state); result = solver.send([; ('update-arguments', {'control': next_control}),; ('update-hamilt",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-859907481:1436,integrat,integrator,1436,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-859907481,1,['integrat'],['integrator']
Deployability,"ve`, but it's certainly less flexible. So even then, an mesolve that can do single steps would still be great. I would also think that being able to do time steps would be exceedingly useful to *any* gradient-based optimal control scheme. Wouldn't it greatly simplify your own GRAPE implementation? I'm referring to the ""Object model"" in [Optimal Quantum Control in QuTiP](https://qutip.org/docs/latest/guide/guide-control.html?highlight=grape#optimal-quantum-control-in-qutip), specifically the `TimeslotComputer` (in fact, we looked at whether `TimeslotComputer` could be used for krotov at the time, but couldn't quite figure it out). I elaborated a little bit in https://github.com/qucontrol/krotov/issues/93#issuecomment-859717563 on the requirements: beyond yielding the propagated states, we'll also have to modify the controls, i.e. the time-dependencies for QuTiP's nested-list format. Within the `krotov` package, these would always be numpy arrays. As an explanation, see [the figure for Krotov's update scheme](https://qucontrol.github.io/krotov/v1.2.1/_images/krotovscheme.svg) from [the documentation](https://qucontrol.github.io/krotov/v1.2.1/07_krotovs_method.html#time-discretization). The single-step-`mesolve` would be for the ""(2) forward-propagation with updated control"" in the bottom of the diagram: After each propagation time step, we calculate a new control value based on the current propagated state and other information (the ∂H/∂ϵ and stored backward-propagated states χ). The new control value is then used for the next time step. I'd also add that `mesolve` ideally should be ""thread-safe"" in the sense that we may have multiple `mesolve` run in parallel (index k in the diagram, where all the different k contribute to the update of the control values at the next time step), within whatever parallelization framework Python makes available. I vaguely remember looking at some Runge-Kutta implementations within scipy where this was a problem. I noted this in the doc",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-859754215:2096,update,update,2096,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-859754215,1,['update'],['update']
Deployability,vector_to_operator() conflicts with updated kron and tensor,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/534:36,update,updated,36,https://qutip.org,https://github.com/qutip/qutip/issues/534,1,['update'],['updated']
Deployability,"verOptions(atol=1e-5):; opt = SolverOptions(store_state=True); opt['progress_bar'] = False; print(opt). progress_bar : False; store_state : True; method : 'bdf'; atol : 1e-5; ...; ```; The option can also be initialized from a dict or another options instance, it will make a copy. I added the capacity to add a safety check when setting an options. It is only used for `use_cython` which will error when trying to set it to `True` without cython installed. Otherwise, it will fail when trying to use the options. *Solver's options*; Each solver has it's option class (SeOptions, MeOptions, etc.) with only needed keys.This somewhat feel overkill since they are all the some for now, until mcsolve is merged. Each integrator also has an associated options and the solver options contain an integrator options. Conversion between options type will raise an error. When creating a solver options, it read the `method` key and setup a matching integrator options. Thus only the keys used by the solver or integrator are defined in the instance. This allow adding new integrator with their own options without adding complexity to the solver options. It can be used as such:; ```; opt = SolverOptions(method='lsoda'); opt['progress_bar'] = False; opt.ode['max_order_ns'] = 10; ```; To make it work smoothly, each integrator must be associated to only one method thus `zvode` was split between `adams` and `bdf`. There is also a generic `Options` class that accept any keys used by integrator or solver and can be converted to any specific solver options:; ```; Options(futur_cupy_ode_specific_options=True) # Will work; Options(not_an_options=True) # Error; # For most solver:; __solve(..., opt=Options()); ```; Once options are associated to a solver, they are frozen:; ```; opt = SeOptions(); solver = SeSolver(..., opt); opt['...'] = ... # Ok, but solver has a copy and is unaffected.; solver.options['...'] = ... # Error; solver.options = opt; ```; This is because changing options without the solver ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1812:1867,integrat,integrator,1867,https://qutip.org,https://github.com/qutip/qutip/pull/1812,1,['integrat'],['integrator']
Deployability,"w/issues/7872"">#7872</a>; [radarhere]</p>; </li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/python-pillow/Pillow/commit/5c89d88eee199ba53f64581ea39b6a1bc52feb1a""><code>5c89d88</code></a> 10.3.0 version bump</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/63cbfcfdea2d163ec93bae8d283fcfe4b73b5dc7""><code>63cbfcf</code></a> Update CHANGES.rst [ci skip]</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/2776126aa9af322b416eaca247f4f8ebefd08128""><code>2776126</code></a> Merge pull request <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7928"">#7928</a> from python-pillow/lcms</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/aeb51cbb169eb3285818ba1390ddf2771d897e6e""><code>aeb51cb</code></a> Merge branch 'main' into lcms</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/5beb0b66648db8b542bb5260eed79b25e33d643b""><code>5beb0b6</code></a> Update CHANGES.rst [ci skip]</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/cac6ffa7b399ea79b6239984d1307056a0b19af2""><code>cac6ffa</code></a> Merge pull request <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7927"">#7927</a> from python-pillow/imagemath</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/f5eeeacf7539eaa0d93a677d7666bc7c142c8d1c""><code>f5eeeac</code></a> Name as 'options' in lambda_eval and unsafe_eval, but '_dict' in deprecated eval</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/facf3af93dabcbdd8cdbda8c3b50eefafa3bb04c""><code>facf3af</code></a> Added release notes</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/2a93aba5cfcf6e241ab4f9392c13e3b74032c061""><code>2a93aba</code></a> Use strncpy to avoid buffer overflow</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/a670597bc30e9d489656fc9d807170b8f3d7ca57""><code>a670597</code></",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2381:14078,Update,Update,14078,https://qutip.org,https://github.com/qutip/qutip/pull/2381,1,['Update'],['Update']
Deployability,"w</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=certifi&package-manager=pip&previous-version=2022.12.7&new-version=2023.7.22)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself); You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/qutip/qutip/network/alerts). </details>",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2205:4022,upgrade,upgrade,4022,https://qutip.org,https://github.com/qutip/qutip/pull/2205,3,['upgrade'],['upgrade']
Deployability,"when saving using libtiff <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7893"">#7893</a>; [radarhere]</p>; </li>; <li>; <p>Raise ValueError for negative values when loading P1-P3 PPM images <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7882"">#7882</a>; [radarhere]</p>; </li>; <li>; <p>Added reading of JPEG2000 palettes <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7870"">#7870</a>; [radarhere]</p>; </li>; <li>; <p>Added alpha_quality argument when saving WebP images <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7872"">#7872</a>; [radarhere]</p>; </li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/python-pillow/Pillow/commit/5c89d88eee199ba53f64581ea39b6a1bc52feb1a""><code>5c89d88</code></a> 10.3.0 version bump</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/63cbfcfdea2d163ec93bae8d283fcfe4b73b5dc7""><code>63cbfcf</code></a> Update CHANGES.rst [ci skip]</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/2776126aa9af322b416eaca247f4f8ebefd08128""><code>2776126</code></a> Merge pull request <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7928"">#7928</a> from python-pillow/lcms</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/aeb51cbb169eb3285818ba1390ddf2771d897e6e""><code>aeb51cb</code></a> Merge branch 'main' into lcms</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/5beb0b66648db8b542bb5260eed79b25e33d643b""><code>5beb0b6</code></a> Update CHANGES.rst [ci skip]</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/cac6ffa7b399ea79b6239984d1307056a0b19af2""><code>cac6ffa</code></a> Merge pull request <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7927"">#7927</a> from python-pillow/imagemath</li>; <li><a href=""https://github.com/python-pillow/Pillow/commit/f5eeeacf7539eaa0d93",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2381:13496,Update,Update,13496,https://qutip.org,https://github.com/qutip/qutip/pull/2381,1,['Update'],['Update']
Deployability,"will push to PyPI, making the version immediately available on `pip` by binary release.; - `.cpp` files are now distributed with the wheels but not added to source control. This is a step towards a full Cython-free delivery of the QuTiP source (binary releases never require Cython), but right now I think our `setuptools` machinery doesn't quite handle that. ### Changes to `setup.py`; - all package metadata is moved out into `setup.cfg`, which is easier to read and change, and modern `setuptools`' preferred way of doing things; - all directory-tree access is done in a completely platform-agnostic manner, rather than just hoping that Unix-style paths will work on Windows; - the file is tidied and structured into a small script, with separated components; - build requirements are moved into `pyproject.toml` including listing `setuptools` as the build method, in accordance with PEP 517. Any PEP 517-complaint installation and build process will now _enforce_ the presence of `numpy`, `scipy` and `cython` (and `setuptools`) before attempting the build, so no more need for attempted import guards.; - packages are now discovered rather than explicitly stated, using standard `setuptools` machinery; - Cython extension modules are now discovered rather than explicitly stated, using globbing; - version information is now stored in a single-line file `VERSION`. This is mostly for CI reasons; it's much easier to parse and override at the CI level when it's a single file, rather than attempting `sed s/.../.../ setup.py` or something crazy like that. The validity of the version string is tested by regex.; - local version information is now _always_ appended, even if `git` isn't present - the local version is just then ""nogit"" rather than the git shorthash; - `setup.py` gained a new `--release` flag or environment variable `CI_QUTIP_RELEASE`; the only effect right now is to suppress the local identifier on the version information, replacing the old `ISRELEASED` boolean flag in the cod",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1465:2183,install,installation,2183,https://qutip.org,https://github.com/qutip/qutip/pull/1465,1,['install'],['installation']
Deployability,"x\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1:",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:6906,Release,Release,6906,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"x\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1:",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:12743,Release,Release,12743,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"x\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5991:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5997:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1:",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:18747,Release,Release,18747,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"x\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseTooManyValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5979:18: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseNeedMoreValuesError':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5985:18: warning: too many arguments for format [-Wformat-extra-args]; > In file included from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/ndarrayobject.h:27:0,; > from C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/arrayobject.h:4,; > from C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:242:; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: At top level:; > C:\Anaconda3\envs\qutip_py2\lib\site-packages\numpy\core\include/numpy/__multiarray_api.h:1634:1:",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:24751,Release,Release,24751,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,xcode10 with python 3.8 is ~21min. ; `python setup.py install` took ~203s with xcode10 but 385s with xcode12... Compilation seems to be the issue.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1348#issuecomment-680007729:54,install,install,54,https://qutip.org,https://github.com/qutip/qutip/pull/1348#issuecomment-680007729,1,['install'],['install']
Deployability,"y two tones, i.e.:; ```math; H = \frac{\omega_0}{2} \begin{pmatrix} -1 & 0 \\ 0&1 \end{pmatrix} + \begin{pmatrix} 0 & 1 \\ 1&0 \end{pmatrix} (\Omega_1\cos\omega_1 t + \Omega_2\cos\omega_2 t); ```; In addition, the TLS has a spontaneous emission rate $\Gamma_{21}$. To implement the above system, I used the following code (fully time-dependent, no rotating-wave approximation):; ```python; from numpy import pi, cos, sqrt, linspace; import matplotlib.pyplot as plt; from qutip import (; sigmax, sigmaz, fock_dm, mesolve, ; basis, Qobj). omega0 = 100*2*pi # TLS atom level spacing; omega1 = omega0 # 1st tone, resonant with the TLS; omega2 = omega0 -1*2*pi # 2nd tone, detuned from TLS; omegaR1 = 1*2*pi # Rabi freq of 1st tone; omegaR2 = 1*2*pi # Rabi freq of 2nd tone; gamma21 = 1 # spontaneous emission rate. H0 = -sigmaz()/2*omega0; H1, H2 = sigmax()*omegaR1, sigmax()*omegaR2; t = linspace(0,10,501); def H1_coeff(t, args):; return cos(omega1*t); def H2_coeff(t, args):; return cos(omega2*t). H = [H0, [H1, H1_coeff], [H2, H2_coeff]]; c_ops = [Qobj([[0,1],[0,0]])*sqrt(gamma21)]; e_ops = [fock_dm(2,0), fock_dm(2,1)]; psi0 = basis(2,0); result = mesolve(H, psi0, t, c_ops, e_ops). plt.plot(t, result.expect[1]); plt.ylim(0,1); ```; One can directly run the above code to produce a perpetual oscillation, which seems unphysical to me. If one suppresses either tone (e.g. by setting `omegaR1` or `omegaR2` to zero), or set the 2nd tone's detuning to zero (i.e. `omega2 = omega0`), one gets the expected damping behavior at large times.; ![Untitled](https://github.com/qutip/qutip/assets/29622362/26578e8e-6665-4852-92a6-d9fe0e888fdb). Did I implement this physics correctly? Or is qutip being weird?. Finally, my system info:; ```; QuTiP Version: 4.7.5; Numpy Version: 1.24.3; Scipy Version: 1.10.1; Cython Version: 0.29.36; Matplotlib Version: 3.7.1; Python Version: 3.11.0; Number of CPUs: 10; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (arm64); ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2356:2125,Install,Installed,2125,https://qutip.org,https://github.com/qutip/qutip/issues/2356,1,['Install'],['Installed']
Deployability,yes! I installed it using --with-mcf90. Am I supposed to install fortran compiler besides the ones I have on anconda?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/391#issuecomment-154660509:7,install,installed,7,https://qutip.org,https://github.com/qutip/qutip/issues/391#issuecomment-154660509,2,['install'],"['install', 'installed']"
Deployability,you can just build the latest master - the update is there.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/829#issuecomment-377752315:43,update,update,43,https://qutip.org,https://github.com/qutip/qutip/issues/829#issuecomment-377752315,1,['update'],['update']
Deployability,"ypeError Traceback (most recent call last); <ipython-input-116-e35e17a7e3ab> in <module>(); 6 [],; 7 [],; ----> 8 progress_bar=True). /home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/qutip/mesolve.py in mesolve(H, rho0, tlist, c_ops, e_ops, args, options, progress_bar); 319 types.BuiltinFunctionType, partial)):; 320 res = _sesolve_func_td(H, rho0, tlist,; --> 321 e_ops, args, options, progress_bar); 322 else:; 323 res = _sesolve_const(H, rho0, tlist,. /home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/qutip/sesolve.py in _sesolve_func_td(H_func, psi0, tlist, e_ops, args, opt, progress_bar); 565 #; 566 return _generic_ode_solve(r, psi0, tlist, e_ops, opt, progress_bar, norm,; --> 567 dims=psi0.dims); 568 ; 569 . /home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/qutip/sesolve.py in _generic_ode_solve(r, psi0, tlist, e_ops, opt, progress_bar, state_norm_func, dims); 656 ; 657 if t_idx < n_tsteps - 1:; --> 658 r.integrate(r.t + dt[t_idx]); 659 ; 660 progress_bar.finished(). /home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/scipy/integrate/_ode.py in integrate(self, t, step, relax); 406 self._y, self.t = mth(self.f, self.jac or (lambda: None),; 407 self._y, self.t, t,; --> 408 self.f_params, self.jac_params); 409 except SystemError:; 410 # f2py issue with tuple returns, see ticket 1187. /home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/scipy/integrate/_ode.py in run(self, f, jac, y0, t0, t1, f_params, jac_params); 863 args = ((f, jac, y0, t0, t1) + tuple(self.call_args) +; 864 (f_params, jac_params)); --> 865 y1, t, istate = self.runner(*args); 866 if istate < 0:; 867 warnings.warn(self.__class__.__name__ + ': ' +. /home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/qutip/cy/spmatfuncs.pyx in qutip.cy.spmatfuncs.cy_ode_psi_func_td (qutip/cy/spmatfuncs.c:4445)(). /home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packa",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/505:1658,integrat,integrate,1658,https://qutip.org,https://github.com/qutip/qutip/issues/505,1,['integrat'],['integrate']
Deployability,"yrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:2",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:4273,Release,Release,4273,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"yrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:2",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:10026,Release,Release,10026,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"yrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:2",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:15944,Release,Release,15944,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"yrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:2",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:21862,Release,Release,21862,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"yxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: format '%d' expec",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:4130,Release,Release,4130,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"yxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\te",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:5481,Release,Release,5481,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"yxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14880.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.p",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:5336,Release,Release,5336,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"yxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: format '%d' expec",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:9883,Release,Release,9883,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"yxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\te",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:11318,Release,Release,11318,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"yxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14881.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.p",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:11173,Release,Release,11173,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"yxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5045:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: format '%d' expec",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:15801,Release,Release,15801,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"yxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\te",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:17322,Release,Release,17322,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"yxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5423:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5475:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5537:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14882.c:5722:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.p",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:17177,Release,Release,17177,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"yxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_RaiseArgtupleInvalid':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: format '%s' expects argument of type 'char *', but argument 5 has type 'Py_ssize_t' [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5033:18: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_BufFmt_ProcessTypeChunk':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_buffmt_parse_array':; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: format '%d' expec",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:21719,Release,Release,21719,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,1,['Release'],['Release']
Deployability,"yxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\te",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:23326,Release,Release,23326,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"yxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5411:26: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5463:20: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__pyx_buffmt_parse_array':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5525:25: warning: too many arguments for format [-Wformat-extra-args]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c: In function '__Pyx_GetBufferAndValidate':; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: format '%s' expects argument of type 'char *', but argument 3 has type 'Py_ssize_t' [-Wformat]; > C:\Users\alex.pyxbld\temp.win-amd64-2.7\Release\pyrex\rhs14883.c:5710:7: warning: unknown conversion type character 'z' in format [-Wformat]; > C:\Users\alex.p",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:23181,Release,Release,23181,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,1,['Release'],['Release']
Deployability,"➜ ~ python mwe.py ; Traceback (most recent call last):; File ""mwe.py"", line 5, in <module>; result = mesolve(qeye(D**2), psi0,[0, 100e-9], []); File ""/Users/colmrya/miniconda3/envs/qutip/lib/python3.8/site-packages/qutip/mesolve.py"", line 266, in mesolve; func(0., v, *ode_args) + v; ValueError: operands could not be broadcast together with shapes (28561,) (2197,) ; ```. **Expected behavior**; A exception for incompatible dimensions raised in all cases. ** Environment**; Please use `qutip.about()` to get the information about your environment and paste it here. ```; (qutip) ➜ ~ ipython; Python 3.8.8 (default, Feb 24 2021, 13:46:16) ; Type 'copyright', 'credits' or 'license' for more information; IPython 7.21.0 -- An enhanced Interactive Python. Type '?' for help. In [1]: import qutip; q; In [2]: qutip.about(). QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li and Jake Lishman.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.5.3; Numpy Version: 1.19.2; Scipy Version: 1.6.1; Cython Version: 0.29.22; Matplotlib Version: 3.3.4; Python Version: 3.8.8; Number of CPUs: 6; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Darwin (x86_64); Installation path: /Users/colmrya/miniconda3/envs/qutip/lib/python3.8/site-packages/qutip; ================================================================================; Please cite QuTiP in your publication.; ================================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`. ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1456:3834,Install,Installed,3834,https://qutip.org,https://github.com/qutip/qutip/issues/1456,2,['Install'],"['Installation', 'Installed']"
Deployability,"👍 . By the way, here's the pip installs for qutip from PyPI for June 2018, showing Python 2.7 is already dropping off:. | python_version | percent | download_count |; | -------------- | ------: | -------------: |; | 3.6 | 51.53% | 118 |; | 2.7 | 33.19% | 76 |; | 3.5 | 13.97% | 32 |; | 3.4 | 0.87% | 2 |; | 3.7 | 0.44% | 1 |; | Total | | 229 |. Source: `pypinfo --start-date 2018-06-01 --end-date 2018-06-30 --percent --markdown qutip pyversion`",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/882#issuecomment-408393466:31,install,installs,31,https://qutip.org,https://github.com/qutip/qutip/issues/882#issuecomment-408393466,1,['install'],['installs']
Energy Efficiency," * all_state[k].dag(); + PsipreX += X * all_state[j] * all_state[k].dag(); ; A = a + a.dag(); L = ((-spre(A * PsipreX)) + (sprepost(A, PsipreX)); diff --git a/qutip/states.py b/qutip/states.py; index 10ac9e32..075eb777 100644; --- a/qutip/states.py; +++ b/qutip/states.py; @@ -405,7 +405,7 @@ shape = [5, 5], type = oper, isHerm = True; if method == 'operator':; beta = np.log(1.0 / n + 1.0); diags = np.exp(-beta * i); - diags = diags / np.sum(diags); + diags /= np.sum(diags); # populates diagonal terms using truncated operator expression; rm = sp.spdiags(diags, 0, N, N, format='csr'); elif method == 'analytic':; diff --git a/qutip/steadystate.py b/qutip/steadystate.py; index 1f60f942..680b04c7 100644; --- a/qutip/steadystate.py; +++ b/qutip/steadystate.py; @@ -873,7 +873,7 @@ def _steadystate_power(L, ss_args):; check)); if check < 0:; raise Exception(""Breakdown in {}"".format(ss_args['method'])); - v = v / la.norm(v, np.inf); + v /= la.norm(v, np.inf); it += 1; if ss_args['method'] == 'power' and ss_args['solver'] == 'mkl':; lu.delete(); @@ -901,7 +901,7 @@ def _steadystate_power(L, ss_args):; trow = v[::rhoss.shape[0]+1]; data = v / np.sum(trow); else:; - data = data / la.norm(v); + data /= la.norm(v); ; data = dense2D_to_fastcsr_fmode(vec2mat(data),; rhoss.shape[0],; diff --git a/qutip/stochastic.py b/qutip/stochastic.py; index 49786aca..b9866527 100644; --- a/qutip/stochastic.py; +++ b/qutip/stochastic.py; @@ -1146,7 +1146,7 @@ def general_stochastic(state0, times, d1, d2, e_ops=[], m_ops=[],; if sso.dW_factors is None:; sso.dW_factors = [1.] * len(sso.m_ops); elif len(sso.dW_factors) == 1:; - sso.dW_factors = sso.dW_factors * len(sso.m_ops); + sso.dW_factors *= len(sso.m_ops); elif len(sso.dW_factors) != len(sso.m_ops):; raise ValueError(""The number of dW_factors must fit"" +; "" the number of m_ops.""); @@ -1318,7 +1318,7 @@ def _sesolve_generic(sso, options, progress_bar):; res.states = res.avg_states = avg_states_list; ; # average; - res.expect = res.expect / nt; +",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1714#issuecomment-974625872:20094,power,power,20094,https://qutip.org,https://github.com/qutip/qutip/issues/1714#issuecomment-974625872,1,['power'],['power']
Energy Efficiency," - `prev pre`: Calls of `qutip.qfunc(..., precompute=pre)`, where the calculation of `pre` was done outside the timing. This times how long it would take to call in a loop many times.; - `cur def`: Direct calls of `qutip.qfunc` with the given state and phase-space coordinates, but everything else at the default for this commit.; - `cur pre`: Calls to a pre-constructed `qutip.QFunc` instance (which was excluded from the timings) for this commit. This times how long it would take to call in a loop many times. ```text; │ original │ prev def │ prev pre │ cur def │ cur pre; ────────────┼───────────┼───────────┼───────────┼───────────┼──────────; 11, ket 5 │ 126.07 µs │ 133.02 µs │ 89.63 µs │ 108.95 µs │ 25.12 µs; 11, ket 32 │ 192.49 µs │ 197.88 µs │ 90.91 µs │ 172.13 µs │ 29.33 µs; 11, dm 5 │ 481.68 µs │ 440.45 µs │ 316.93 µs │ 304.86 µs │ 161.00 µs; 11, dm 32 │ 4.69 ms │ 1.87 ms │ 1.66 ms │ 1.07 ms │ 823.49 µs; │ │ │ │ │; 101, ket 5 │ 570.59 µs │ 566.65 µs │ 501.86 µs │ 463.96 µs │ 329.25 µs; 101, ket 32 │ 1.61 ms │ 1.43 ms │ 751.97 µs │ 1.34 ms │ 507.20 µs; 101, dm 5 │ 2.51 ms │ 3.51 ms │ 2.20 ms │ 2.62 ms │ 1.72 ms; 101, dm 32 │ 42.91 ms │ 26.84 ms │ 19.73 ms │ 23.30 ms │ 16.30 ms; │ │ │ │ │; 401, ket 5 │ 10.56 ms │ 13.50 ms │ 7.91 ms │ 11.95 ms │ 5.28 ms; 401, ket 32 │ 34.44 ms │ 43.73 ms │ 10.37 ms │ 41.17 ms │ 7.70 ms; 401, dm 5 │ 46.85 ms │ 57.51 ms │ 33.19 ms │ 52.30 ms │ 26.71 ms; 401, dm 32 │ 1.05 s │ 411.32 ms │ 273.93 ms │ 428.32 ms │ 246.59 ms; ```. You can see that there are huge benefits to the precomputation, even compared to the previous precomputation implementation. This makes calling in a loop much much more efficient. #### Changelog. Large feature, authored by @dweigand (Daniel Weigand) and me (Jake). Add new Husimi Q algorithms, improving the speed for density matrices, and giving a near order-of-magnitude improvement when calculating the Q function for many different states (using the new `qutip.QFunc` class, instead of the `qutip.qfunc` function).",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1583:5368,efficient,efficient,5368,https://qutip.org,https://github.com/qutip/qutip/pull/1583,1,['efficient'],['efficient']
Energy Efficiency," = (e - e[0]); es[i] = np.abs(e[1:]). return es; ```. And got the correct Transmon transition frequency:; ```python; fluxes = np.linspace(-0.5, 1, 100). fig, ax = plt.subplots(1, 1); ys = spectrum(fluxes, ng=0., dim=21); ax.plot(fluxes, ys[:,0]). ax.set_xlabel('fluxes'); ax.set_ylabel('transitions (GHz)'); ```; ![image](https://github.com/qutip/qutip/assets/13218882/856f91a8-09a3-4aa9-bb5d-10bf2e46e2e2). We have the expected `cos` shape. Then I went for the ""inductively coupled transmon"" circuit with the following hamiltonian. $$ \hat{H} = E_\mathrm{c} \left( \hat{n_x}^2 - \hat{n_y}^2 \right) + E_\mathrm{J}\left( -\cos \left( \hat{x} \right) \cos \left( \hat{y} \right) + b \left( \hat{y} - \pi \frac{\phi_\mathrm{b}}{\phi_0}\right)^2\right)$$. With:; * $E_\mathrm{c} = \left(2 e \right)^2/\left(2 C\right)/2$ the charging energy; * $E_\mathrm{J} = \left( \phi_0 I_\mathrm{c} \right)/\left(2 \pi \right)/2$ the Josephson energy; * $\hat{x} = \left( \hat{\varphi}_1 +\hat{\varphi}_2 \right)/2$ and $\hat{y} = \left( \hat{\varphi}_1 -\hat{\varphi}_2 \right)/2$; * $\hat{n_x} = \left( \hat{n}_1 +\hat{n}_2 \right)/2$ and $\hat{n_y} = \left( \hat{n}_1 -\hat{n}_2 \right)/2$; * $b = \phi_0/\left(2 \pi I_\mathrm{c} L\right)$ the inductance ratio. From that I wrote the following function:; ```python; def spectrumInductive(fluxes: np.ndarray,; dim: int=11,; c: float=10e-13,; ic: float=10e-9,; l: float=1000e-12,; ng: float=0):. n1 = qtp.tensor(qtp.charge(int(dim/2))+ng, qtp.qeye(dim)); n2 = qtp.tensor(qtp.qeye(dim), qtp.charge(int(dim/2))+ng). phi1 = qtp.tensor(qtp.phase(dim), qtp.qeye(dim)); phi2 = qtp.tensor(qtp.qeye(dim), qtp.phase(dim)). nx = (n1+n2)/2; ny = (n1-n2)/2. phix = (phi1+phi2)/2; phiy = (phi1-phi2)/2. # Charging energy in GHz; ec = (2*cst.e)**2/2/c/cst.h/1e9/2. # Josephson energy in GHz; ej = cst.phi_0/2/np.pi*ic/2/cst.h/1e9/2. # The inductance ratio; b = cst.phi_0/2/np.pi/ic/l. h1 = ec*(nx**2 + ny**2); h2 = ej*(-phix.cosm()*phiy.cosm()). es = np.zeros((len(fluxes), dim*d",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2447:1981,energy,energy,1981,https://qutip.org,https://github.com/qutip/qutip/issues/2447,2,['energy'],['energy']
Energy Efficiency," I apologize in case I am missing something stupid. I'm solving a simple problem with t-dependent Hamiltonian. I have simplified up to the point where the solution should actually just be a constant occupation of ground and first excited state. Here is the setup:. ``` python; from qutip import *; from pylab import *. dim = 40 # number of harmonic oscillator states kept in decomposition; # -- always need to check convergence w.r.t. this. E_j = 20.0 # Josephson energy. a = destroy(dim) # definition of the annihilation operator via qutip. exponent = 1j * (a + a.dag()) # argument of the matrix exponential; exp_iphi = exponent.expm(); cos_phi = 0.5*(exp_iphi + exp_iphi.dag()). H_0 = a.dag() * a # Hamiltonian of LC harmonic oscillator; h_j = - cos_phi # Hamiltonian for the Josephson tunneling contribution; prefactor E_j(t) to be provided separately . energies, states = (H_0 + E_j * h_j).eigenstates() . jump_op_list = [] # no jump operators. # monitor projectors onto the ground and first excited eigenstates; projector0 = states[0] * states[0].dag(); projector1 = states[1] * states[1].dag(). monitor_ops = [projector0, projector1]. psi_0 = states[0] # initial state is the ground state . # tlist = np.linspace(0, Delta_t_min + Delta_t_max + 6*dt, 300) # evenly-spaced time values; tlist = np.linspace(0, 0.5, 300) # evenly-spaced time values; ```. The crucial piece comes now:. ``` python; timefunc_string1 = '20.0'; H1 = [H_0, [h_j, timefunc_string1]]; odesolution1 = mcsolve(H1, psi_0, tlist, jump_op_list, monitor_ops). # NOTE: ONLY ""DIFFERENCE"" W.R.T. PREVIOUS EXAMPLE IS ADDING ZERO!; timefunc_string2 = '0.0*20.0 + 20.0'; H2 = [H_0, [h_j, timefunc_string2]]; odesolution2 = mcsolve(H2, psi_0, tlist, jump_op_list, monitor_ops). plot(tlist, odesolution1.expect[0], tlist, odesolution1.expect[1], lw=2); legend(('Ground state','1st exc.')); ylabel('Occupation probability'); xlabel('Time'). show(). plot(tlist, odesolution2.expect[0], tlist, odesolution2.expect[1], lw=2); legend(('Groun",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/215:1002,monitor,monitor,1002,https://qutip.org,https://github.com/qutip/qutip/issues/215,1,['monitor'],['monitor']
Energy Efficiency," Seq(+XX, -ZZ) Seq(-XX, -ZZ); }; >>> (qutip.QInstrument.pauli_measurement(""ZZ"") * qutip.QInstrument.pauli_measurement(""XX"")) ** 2; QInstrument id=2e7d89a44c0 {; dims [[[2, 2], [2, 2]], [[2, 2], [2, 2]]]; outcomes Seq(+XX, +ZZ, +XX, +ZZ) Seq(-XX, +ZZ, -XX, +ZZ) Seq(+XX, -ZZ, +XX, -ZZ) Seq(-XX, -ZZ, -XX, -ZZ); }; >>> (qutip.QInstrument.pauli_measurement(""ZZ"") * qutip.QInstrument.pauli_measurement(""XX"")).with_finite_visibility(0.95) ** 2; QInstrument id=2e7d6654520 {; dims [[[2, 2], [2, 2]], [[2, 2], [2, 2]]]; outcomes Seq(+XX, +ZZ, +XX, +ZZ) Seq(-XX, +ZZ, +XX, +ZZ) Seq(+XX, -ZZ, +XX, +ZZ) Seq(-XX, -ZZ, +XX, +ZZ) Seq(+XX, +ZZ, -XX, +ZZ) Seq(-XX, +ZZ, -XX, +ZZ) Seq(+XX, -ZZ, -XX, +ZZ) Seq(-XX, -ZZ, ; -XX, +ZZ) Seq(+XX, +ZZ, +XX, -ZZ) Seq(-XX, +ZZ, +XX, -ZZ) Seq(+XX, -ZZ, +XX, -ZZ) Seq(-XX, -ZZ, +XX, -ZZ) Seq(+XX, +ZZ, -XX, -ZZ) Seq(-XX, +ZZ, -XX, -ZZ) Seq(+XX, -ZZ, -XX, -ZZ) Seq(-XX, -ZZ, -XX, -ZZ); }; ```. Nonselective channels (that is, the channel resulting from discarding all measurement outcomes) can be efficiently obtained using the `nonselective_process` property:. ```python; >>> ins = (qutip.QInstrument.pauli_measurement(""ZZ"") * qutip.QInstrument.pauli_measurement(""XX"")).with_finite_visibility(0.95) ** 2; >>> ins.nonselective_process; Quantum object: dims = [[[2, 2], [2, 2]], [[2, 2], [2, 2]]], shape = (16, 16), type = super, isherm = True; Qobj data =; [[0.50125 0. 0. 0. 0. 0. 0. 0. 0.; 0. 0. 0. 0. 0. 0. 0.49875]; [0. 0.0025 0. 0. 0. 0. 0. 0. 0.; 0. 0. 0. 0. 0. 0. 0. ]; [0. 0. 0.0025 0. 0. 0. 0. 0. 0.; 0. 0. 0. 0. 0. 0. 0. ]; [0. 0. 0. 0.50125 0. 0. 0. 0. 0.; 0. 0. 0. 0.49875 0. 0. 0. ]; [0. 0. 0. 0. 0.0025 0. 0. 0. 0.; 0. 0. 0. 0. 0. 0. 0. ]; [0. 0. 0. 0. 0. 0.50125 0. 0. 0.; 0. 0.49875 0. 0. 0. 0. 0. ]; [0. 0. 0. 0. 0. 0. 0.50125 0. 0.; 0.49875 0. 0. 0. 0. 0. 0. ]; [0. 0. 0. 0. 0. 0. 0. 0.0025 0.; 0. 0. 0. 0. 0. 0. 0. ]; [0. 0. 0. 0. 0. 0. 0. 0. 0.0025; 0. 0. 0. 0. 0. 0. 0. ]; [0. 0. 0. 0. 0. 0. 0.49875 0. 0.; 0.50125 0. 0. 0. 0. 0. 0. ]; [0. 0. 0. 0. 0. 0.49",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1687:5712,efficient,efficiently,5712,https://qutip.org,https://github.com/qutip/qutip/pull/1687,1,['efficient'],['efficiently']
Energy Efficiency," calculate the difference between two unitary channels, a very efficient implementation exists. This makes use of an unproved theorem on page 29 of [1]. I have proved this theorem and elaborated an efficient algorithm to calculate the diamond distance between two unitaries as part of my masters thesis. . The current qutip implementation makes use of the semi-definite program formulation in [3] and only uses a simplified calculation on 2 qubit unitary differences. The implementation of this novel approach is very simple - the hardest step involves diagonalising a unitary. Although time complexity is still exponential in the number of qubits, this implementation is far more efficient than the more general implementation. The Choi representation of the quantum channel isn't used and there is no need to solve a complicated semi-definite program (meaning I can do away with the `cvxpy` dependency). ## Empirical testing; Results of empirical testing on my machine are reported below. | | 3 qubit | 4 qubit |; |---------|---------|----------|; | current implementation | 5.22 s | 3min 21s |; | hyper-efficient implementation | 924 µs | 1.11 ms |. ## Proposition; Given the popularity of the circuit model and unitary-based quantum computation, I believe a very efficient implementation of the diamond distance for unitaries would be incredibly valuable for the research community. Given how simple the change is (current tests already cover the test case), I think it would be a simple and worthwhile addition to qutip. ## Citations. [1] D. Aharonov, A. Kitaev, and N. Nisan, “Quantum circuits with mixed states,” in Proceedings of the thirtieth annual ACM symposium on Theory of computing, pp. 20–30, 1998.; [2] A. Gilchrist, N. K. Langford, and M. A. Nielsen, “Distance measures to compare real and ideal quantum processes,” Physical Review A, vol. 71, no. 6, p. 062310, 2005; [3] J. Watrous, “Simpler semidefinite programs for completely bounded norms,” arXiv preprint arXiv:1207.5726, 2012.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2416:1686,efficient,efficient,1686,https://qutip.org,https://github.com/qutip/qutip/pull/2416,2,['efficient'],['efficient']
Energy Efficiency," if it is available. pybuild will use PEP517 instead, if the pybuild-plugin-pyproject package is installed and pyproject.toml is available. Without pybuild-plugin-pyproject installed, the Debian build was invoking; ```; /usr/bin/python3.10 setup.py build --with-openmp; ```; using setup.py and specifying `--with-openmp`. A successful build log for this method can be found at https://buildd.debian.org/status/fetch.php?pkg=qutip&arch=amd64&ver=4.6.2-3&stamp=1641397514&raw=0. With pybuild-plugin-pyproject installed, the Debian build invokes a wheel build (command line given below). But `--with-openmp` causes the build to fail. ### Code to Reproduce the Bug. ```shell; python3.10 -m build --skip-dependency-check --no-isolation --wheel --outdir /build/qutip/.pybuild/cpython3_3.10_qutip --with-openmp; ```. ### Code Output. ```shell; usage: python -m build [-h] [--version] [--sdist] [--wheel] [--outdir OUTDIR] [--skip-dependency-check] [--no-isolation] [--config-setting CONFIG_SETTING] [srcdir]; python -m build: error: unrecognized arguments: --with-openmp; ```. ### Expected Behaviour. The PEP517 build should be able to be configured to support openmp. ### Your Environment. ```shell; QuTiP Version: 4.6.2 (trying to build 4.7.0); Numpy Version: 1.21.5; Scipy Version: 1.8.0; Cython Version: 0.29.28; Matplotlib Version: 3.5.1; Python Version: 3.10.4; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: True (from setup.py build, not PEP517 build); INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /usr/lib/python3/dist-packages/qutip; ```. ### Additional Context. PEP517 support is new for Debian. It is possible the pybuild build tool needs to be adapted to handle setup.py options like `--with-openmp` in the context of PEP517. But I've tried to pose the issue here in terms of the underlying python3 build commands without needing to consider pybuild as such. Is there a different way in which `--with-openmp` should be configured when using a PEP517 build?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1875:2244,adapt,adapted,2244,https://qutip.org,https://github.com/qutip/qutip/issues/1875,1,['adapt'],['adapted']
Energy Efficiency," many many things in the same test function.; > ; > The test seems structured ok to me. Certainly the testing algorithm isn't the major cause of speed loss. You could try timing some ""real-world"" examples of using your measurements, and try running them in a profiler to see if there are any obvious ways to speed things up.; > ; > With any luck the new data-layer tools and the possibility of using dense `Qobj` storage will give you a fair amount of speed-up once they're complete, since I imagine in your small circuit you're paying quite a lot of sparse matrix overhead.; > ; > I'll prefix this last part with: _you should always profile your code before optimising it_. That said, let me wildly break that rule and guess at where I think you'll find big speed-ups: caching and pre-computation. If you know you're going to run the same thing loads and loads of times, then you shouldn't have to call `self.propagators` each time, or build `measurement_ops` inside `measure_comp_basis`. Do those once at the start of `run_statistics`, and save them.; > ; > Minor things that _may_ speed up - check the profiling!; > ; > 1. ""compress"" the output of `self.propagators`: consecutive propagators with no measurements or classical controls inbetween can be pre-multiplied together at the start to make one matrix. This will save you ~3 matrix multiplications per run in the test.; > 2. use more efficient ways to construct large tensor spaces: `qutip.basis`, `qutip.projection` and `qutip.qeye` can all directly constructor product spaces (e.g. `qutip.basis([2, 2, 2], [0, 1, 0])`). `tensor` is a comparatively expensive operation, and tensoring a list of elements internally is effectively `tensor(...(tensor(tensor(els[0], els[1]), els[2]), ...), els[-1])`. Excellent Suggestions ! I already added some of the speed-ups you suggested, just haven't pushed them yet ! However, I think it might just be a better idea to go with Boxi's idea of removing the need for way too many runs in the first place !",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1274#issuecomment-640128273:1726,efficient,efficient,1726,https://qutip.org,https://github.com/qutip/qutip/pull/1274#issuecomment-640128273,1,['efficient'],['efficient']
Energy Efficiency," minimal number of CNOT gates) and matches the hardware topology. The scheduler includes two methods, ""ASAP"", as soon as possible, and ""ALAP"", as late as possible. The later is commonly used in quantum computation because of the finite lifetime of qubits. **Methods**. - The scheduler first generates a quantum gates dependency graph, containing information about which gates have to be executed before some other gates because they do not commute. The graph preserves the mobility of the gates, i.e. commuting gates are not dependent on each other, even if they use the same qubits. ; - Next, it computes the longest distance of each node to the start and end nodes. The distance for each dependency arrow is defined by the execution time of the instruction (By default, it is 1 for all gates). This is used as a priority measure in the next step. The gate with a longer distance to the end node and a shorter distance to the start node has higher priority.; - In the last step, it uses a list-schedule algorithm with hardware constraint (e.g. gates using the same qubits) and priority and returns a list of cycles for gates.; - Since it's heuristics, sometimes it does not find the optimal. It offers an option that randomly shuffles the gates (if commuting) and repeats the scheduling a few times to get a better result. For scheduling quantum instructions, of which the runtime of different gates might differ, an additional step is required to compute the scheduled start time of each instruction.; It adds the additional dependency caused by hardware constraint to the graph and recomputes the distance of each node to the start and end node. This distance is then converted to the start time of each instruction. **Example**; ```python; >>> from qutip.qip.circuit import QubitCircuit; >>> from qutip.qip.scheduler import Scheduler; >>> circuit = QubitCircuit(7) ; >>> circuit.add_gate(""SNOT"", 3) # gate0; >>> circuit.add_gate(""CZ"", 5, 3) # gate1; >>> circuit.add_gate(""CZ"", 4, 3) # gate2; >>> ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1273:1454,schedul,schedule,1454,https://qutip.org,https://github.com/qutip/qutip/pull/1273,1,['schedul'],['schedule']
Energy Efficiency," module is small and very focussed. 2. Exactly - it's more of an internal type. Currently `Qobj` converts the underlying data object to dense `ndarray` and prints it for its `repr` method - I don't have any plans to change that, so `Qobj` will still be full and user-facing. My `CSR` repr actually just tells you the same information that `scipy.sparse.csr_matrix` does, just in a slightly more Python-looking form. 3. Yes, in some form or another. Perhaps we could talk about the best way to do that in a future meeting?. 4. `PyDataMem_NEW` isn't actually a Python routine, it's a numpy one, but that's largely irrelevant. The Python equivalent is `cpython.mem.PyMem_Malloc` and family. The reason I don't use the latter in general is because sometimes `PyMem_Malloc` allocates into Python-reserved stack-space, and if we subsequently pass the pointer to numpy, it will try to free it and cause a segfault. The reason for using `malloc` and `free` here is mostly just because there was a comment in the code I copied it from saying that raw `malloc` and `free` were slightly faster for allocating heap space to be released within the same function, so I just did what they did. I can change it - it's not important. When allocating space that _may_ be passed to numpy, I always use `PyDataMem_NEW` (or friends). 5. That's a mistake - I meant to take out that ability in `matmul_csr` because it's just asking for trouble (the user won't know how much space to allocate, and we're basically just asking for a segfault). I did `matmul_csr` first, and I hadn't decided yet exactly what I was doing. 6. Yeah, I'm going to add additional `imul`, `ineg` and `idiv` routines as dispatched operations. 7. LAPACK/BLAS as far as we can. I've no pretense to being able to write faster code than hardware-specific optimised stuff for matrices. I haven't actually written most of the numerical code in this PR either - it's just ported from current `qutip`, with the variable names changed to be more descriptive.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1296#issuecomment-648270004:2309,allocate,allocate,2309,https://qutip.org,https://github.com/qutip/qutip/pull/1296#issuecomment-648270004,1,['allocate'],['allocate']
Energy Efficiency," number. The dimensions types should be available for advanced users (to allow them to access the full parsing speed-ups), but should not be presented as the standard choice. I propose we place the types inside a nested namespace, such as `qutip.dims` (logically - physically it would be `qutip/core/dims.py`), to allow the form `from qutip.dims import *` where appropriate without forcing the user to do the modern bad practice left over from our MATLAB past `from qutip import *`. ## User impact. In principle, nothing will change for the normal QuTiP user compared to the 4.x branch. You will still be able to supply the `dims` argument to the `Qobj` constructor as lists in the exact same format, and they will be parsed in the same way. Users _do not_ need to type out the new computer-friendly dimensions objects, but they will be available for advanced users who frequently make `Qobj` using the raw constructor with funny dimensions. We will publicly provide `qutip.dims.parse` to turn a list into the new form, so even advanced users do not need to type out all the nonsense. `Qobj` factory functions that take a `dims` parameter should now also accept the new form. Since almost all of them just pass this directly to the `dims` argument in the `Qobj` constructor, this likely won't involve any developer effort. `Qobj` construction overhead should be reduced to near-zero when passed a new dimensions object, which we will always do within the library. Compared to the 4.x branch, the overhead of `Qobj` will shrink from ~100µs to ~1µs in library code, even for functions where the `Qobj` type cannot be cleanly inferred from the input types. ## Particular points worth commenting on. 1. Are there currently valid `Qobj` that cannot be represented with this system?; 2. Should we push to implement basis-safety for QuTiP 5.x?; 3. Do you agree we should keep track of ""missing"" tensor product spaces?; 4. Should we change the pretty-printed format of `dims` and `type` in `Qobj.__repr__()`?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1421:10682,reduce,reduced,10682,https://qutip.org,https://github.com/qutip/qutip/issues/1421,1,['reduce'],['reduced']
Energy Efficiency," the qutip.qip module now contains the noisy quantum circuit simulator (which was a GSoC project) providing enhanced features for a pulse-level description of quantum circuits and noise models. A new class `Processor` and several subclasses are added to represent different platforms for quantum computing. They can transfer a quantum circuit into the corresponding control sequence and simulate the dynamics with QuTiP solvers. Different noise models can be added to `qutip.qip.noise` to simulate noise in a quantum device. . This module is still young and many features can be improved, including new device models, new noise models and integration with the existing general framework for quantum circuits (`qutip.qip.circuit`). There are also possible applications such as error mitigation techniques [1-3]. The tutorial notebooks can be found at http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM conference may help you get an overview (https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the Github Project page for a collection of related issues and ongoing Pull Requests. ### Expected outcomes; - More devices defined in the `qutip.qip.device` module. At the moment, we have two models: spin chain and cavity QED. We would like to include some other commonly used planform such as Superconducting system, Ion trap system or silicon system. Each model will need a new set of control hamiltonian and a compiler that find the control pulse of a quantum gate. This part is gonna involve some physics and study of commonly used hardware platforms. The related code can be found in `qutip.qip.device` and `qutip.qip.compiler`; - Refactoring the circuit compiler to allow simple pulse scheduling, e.g. Restriction one pulses that can be turned on at the same time.; - Features to perform error mitigation techniques in QuTiP, such as zero-error extrapolation.; - APIs to allow import quantum circuits from other software packages or commonly used language e.g. th",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1184:1377,schedul,schedule,1377,https://qutip.org,https://github.com/qutip/qutip/issues/1184,1,['schedul'],['schedule']
Energy Efficiency," then setting up the dispatcher will be the last item in the `matmul` file. It also means the files stay a bit smaller and easier to manage within themselves - you're less likely to ""lose"" code when each module is small and very focussed. 2. Exactly - it's more of an internal type. Currently `Qobj` converts the underlying data object to dense `ndarray` and prints it for its `repr` method - I don't have any plans to change that, so `Qobj` will still be full and user-facing. My `CSR` repr actually just tells you the same information that `scipy.sparse.csr_matrix` does, just in a slightly more Python-looking form. 3. Yes, in some form or another. Perhaps we could talk about the best way to do that in a future meeting?. 4. `PyDataMem_NEW` isn't actually a Python routine, it's a numpy one, but that's largely irrelevant. The Python equivalent is `cpython.mem.PyMem_Malloc` and family. The reason I don't use the latter in general is because sometimes `PyMem_Malloc` allocates into Python-reserved stack-space, and if we subsequently pass the pointer to numpy, it will try to free it and cause a segfault. The reason for using `malloc` and `free` here is mostly just because there was a comment in the code I copied it from saying that raw `malloc` and `free` were slightly faster for allocating heap space to be released within the same function, so I just did what they did. I can change it - it's not important. When allocating space that _may_ be passed to numpy, I always use `PyDataMem_NEW` (or friends). 5. That's a mistake - I meant to take out that ability in `matmul_csr` because it's just asking for trouble (the user won't know how much space to allocate, and we're basically just asking for a segfault). I did `matmul_csr` first, and I hadn't decided yet exactly what I was doing. 6. Yeah, I'm going to add additional `imul`, `ineg` and `idiv` routines as dispatched operations. 7. LAPACK/BLAS as far as we can. I've no pretense to being able to write faster code than hardware-spec",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1296#issuecomment-648270004:1618,allocate,allocates,1618,https://qutip.org,https://github.com/qutip/qutip/pull/1296#issuecomment-648270004,1,['allocate'],['allocates']
Energy Efficiency,"## Preliminaries; The diamond norm [1] is a commonly used metric in quantum information theory for calculating the distance between two quantum channels. It has a number of useful properties making it the gold standard [2] in the field for several applications. In general, a complex semidefinite program is required to calculate the diamond norm. Although elegant, this approach is very inefficient. Unfortunately, no alternative method has been discovered for calculating the diamond norm in the general case of CPTP channels. However, in the special case where we are trying to calculate the difference between two unitary channels, a very efficient implementation exists. This makes use of an unproved theorem on page 29 of [1]. I have proved this theorem and elaborated an efficient algorithm to calculate the diamond distance between two unitaries as part of my masters thesis. . The current qutip implementation makes use of the semi-definite program formulation in [3] and only uses a simplified calculation on 2 qubit unitary differences. The implementation of this novel approach is very simple - the hardest step involves diagonalising a unitary. Although time complexity is still exponential in the number of qubits, this implementation is far more efficient than the more general implementation. The Choi representation of the quantum channel isn't used and there is no need to solve a complicated semi-definite program (meaning I can do away with the `cvxpy` dependency). ## Empirical testing; Results of empirical testing on my machine are reported below. | | 3 qubit | 4 qubit |; |---------|---------|----------|; | current implementation | 5.22 s | 3min 21s |; | hyper-efficient implementation | 924 µs | 1.11 ms |. ## Proposition; Given the popularity of the circuit model and unitary-based quantum computation, I believe a very efficient implementation of the diamond distance for unitaries would be incredibly valuable for the research community. Given how simple the change is (cu",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2416:643,efficient,efficient,643,https://qutip.org,https://github.com/qutip/qutip/pull/2416,2,['efficient'],['efficient']
Energy Efficiency,"### Bug Description. Hey! I've noticed there's a significant slowdown in executing the same codes for obtaining `steadystate` solutions in `v4.7` vs `v5.0` with iterative scipy solvers, especially while using `use_rcm=True`. After spending some time, I believe the main key difference between both versions comes from permutation done in the `_permute_rcm`, where indices are permuted with the indices obtained from the `reverse_cuthill_mckee` function, and this prevents us from getting the preconditioner efficiently. In `v5.0`, for permuting, we use `_data.permute.indices` for the Liouvillian matrix `L`. This gives us different results from what we used in `v4.7`, i.e.,`sp_permute` with the same permuting indices. . As per my understanding, `_data.permute.indices` performs somewhat the following - ; ``` py; A = L.copy(); A.indices = perm.take(A.indices); A = A.tocsc(A); A.indices = perm.take(A.indices); ```; where, we previously, the following was being done; ``` py; L[perm[:,None], perm]; ```; with `perm` are obtained from `reverse_cuthill_mckee`. . I am not sure which behavior is the correct one, but the performance degradation is quite a lot (more than 10x) and prevents reaching sufficient enough tolerance. ### Code to Reproduce the Bug. ```shell; import numpy as np; from qutip import (about, destroy, qeye, steadystate, tensor). # Paramaeters; # -----------; Nc, Nm = 4, 30; E, kappa = 0.1, 0.3; gamma, delta = 3e-4, -0.43. # Operators; # ----------; a = tensor(destroy(Nc), qeye(Nm)); b = tensor(qeye(Nc), destroy(Nm)). # Hamiltonian; # ------------; H = -delta * (a.dag() * a) + (b.dag() * b) + 2.4 * kappa * (b.dag() + b) * (a.dag() * a) + E * (a.dag() + a). # Collapse operators; # -------------------; cc = np.sqrt(kappa) * a; cm = np.sqrt(2 * gamma) * b; cp = np.sqrt(gamma) * b.dag(); c_ops = [cc, cm, cp]. precond_options = {'permc_spec': 'NATURAL', 'diag_pivot_thresh': 0.1, 'fill_factor': 100, 'options': {'ILU_MILU': 'smilu_2'}}; solver_options = {""use_precond"": False",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2443:507,efficient,efficiently,507,https://qutip.org,https://github.com/qutip/qutip/issues/2443,1,['efficient'],['efficiently']
Energy Efficiency,"### Bug Description. It appears that the fidelity function is off by a power of 2. It returns the square root of the conventionally accepted definition of fidelity. For example, we expect that the fidelity between the states |0> and |+> is 0.5, but executing the code below returns the square root of this. ### Code to Reproduce the Bug. ```shell; from qutip import basis, fidelity, ket2dm; import numpy as np. a = basis(2,0); b = (basis(2,0)+basis(2,1)) / np.sqrt(2); fidelity(a,b). a, b = ket2dm(a), ket2dm(b); fidelity(a,b); ```. ### Code Output. ```shell; 0.7071067811865475; 0.7071067811865475; ```. ### Expected Behaviour. The expected output for both is 0.5. ### Your Environment. ```shell; QuTiP Version: 4.7.1; Numpy Version: 1.23.4; Scipy Version: 1.9.3; Cython Version: None; Matplotlib Version: 3.6.1; Python Version: 3.11.0; Number of CPUs: 8; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Windows (AMD64); ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2102:71,power,power,71,https://qutip.org,https://github.com/qutip/qutip/issues/2102,1,['power'],['power']
Energy Efficiency,"### Bug Description. Might just be me mis-using the new 5.X branch of Qutip. I get a memory error when upgrading to the new branch. It appears to fail when performing self._to_dm(state) for each state. My states are vectors of length 800 - so it runs out of memory. Is it possible to request the solver only stores the wavefunction at each timestep? I want the wavefunction for each trajectory for each timestep. Alternatively one could introduce a new ""proj"" data storage to make this more efficient. ### Code to Reproduce the Bug. ```shell; result = qutip.ssesolve(; hamiltonian_qobj,; initial_state_qobj,; times.times,; sc_ops=sc_ops,; e_ops=[],; options={; ""method"": ""euler"",; ""progress_bar"": ""enhanced"",; ""store_states"": True,; ""keep_runs_results"": True,; ""improved_sampling"": False,; ""dt"": times.delta_t / times.fundamental_n,; },; ntraj=n_trajectories, # cspell:disable-line; ); ```. ### Code Output. ```shell; File ""..."", line 270, in solve_stochastic_schrodinger_equation; result = qutip.ssesolve(; ^^^^^^^^^^^^^^^; File ""...\.venv\Lib\site-packages\qutip\solver\stochastic.py"", line 461, in ssesolve; return sol.run(; ^^^^^^^^; File ""...\.venv\Lib\site-packages\qutip\solver\multitraj.py"", line 198, in run; map_func(; File ""...\.venv\Lib\site-packages\qutip\solver\parallel.py"", line 122, in serial_map; remaining_ntraj = reduce_func(result); ^^^^^^^^^^^^^^^^^^^; File ""...\.venv\Lib\site-packages\qutip\solver\result.py"", line 645, in add ; op(trajectory); File ""...\.venv\Lib\site-packages\qutip\solver\result.py"", line 519, in _reduce_states; accu + self._to_dm(state); ~~~~~^~~~~~~~~~~~~~~~~~~~; File ""...\.venv\Lib\site-packages\qutip\core\qobj.py"", line 134, in out; return method(self, other); ^^^^^^^^^^^^^^^^^^^; File ""...\.venv\Lib\site-packages\qutip\core\qobj.py"", line 408, in __add__ ; return Qobj(_data.add(self._data, other._data),; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""qutip\\core\\data\\dispatch.pyx"", line 392, in qutip.core.data.dispatch.Dispatcher.__call__; File """,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2299:491,efficient,efficient,491,https://qutip.org,https://github.com/qutip/qutip/issues/2299,1,['efficient'],['efficient']
Energy Efficiency,"### Bug Description. Power spectrum of the resonator-qubit (2-level system) system does not show two peaks based on the state of the qubit. Qubit is prepared either in the ground or excited state before the density matrix equation of the coupled system is solved and then the power spectrum is computed off of steady state solution. ### Code to Reproduce the Bug. ```shell; import numpy as np; from matplotlib import pyplot; import qutip. N = 4 # number of cavity fock states; wc = wa = 1.0 * 2 * np.pi # cavity and atom frequency; g = 0.1 * 2 * np.pi # coupling strength; kappa = 0.75 # cavity dissipation rate; gamma = 0.25 # atom dissipation rate. # Jaynes-Cummings Hamiltonian; a = qutip.tensor(qutip.destroy(N), qutip.qeye(2)); sm = qutip.tensor(qutip.qeye(N), qutip.destroy(2)); H = wc*a.dag()*a + wa*sm.dag()*sm + g*(a.dag()*sm + a*sm.dag()). tlist = np.linspace(0, 100, 5000); corr = qutip.correlation_2op_1t(H, None, tlist, c_ops, a.dag(), a); wlist1, spec1 = qutip.spectrum_correlation_fft(tlist, corr); ```. ### Code Output. _No response_. ### Expected Behaviour. The power spectrum does show vacuum Rabi splitting, which is fine. However, if the qubit is prepared in the ground state or the excited state, the spectrum does not shift based on the state of the qubit. ### Your Environment. ```shell; qutip v 4.6; python v 3.9; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1806:21,Power,Power,21,https://qutip.org,https://github.com/qutip/qutip/issues/1806,3,"['Power', 'power']","['Power', 'power']"
Energy Efficiency,"### Bug Description. The correlation 2op_2t does not give correct results when using time-dependent hamiltonians and collapse operators. It seems that this could be solved by changing one line of the code inside correlatation.py, in def _correlation_me_2t:. from:; H_shifted, c_op * rho * a_op, taulist, c_ops_shifted, . to:; H_shifted, c_op * rho * a_op, taulist + tlist[t_idx], c_ops_shifted,. The accompanying code demonstrating the issue and help finding the issue and solution were provided by M. Pechal. Issue was found in qutip version 4.6.2 and 4.6.3. ### Code to Reproduce the Bug. ```shell; # Qubit evolving only under energy relaxation (with H = 0 and the only collapse operator being qt.destroy(2)).; # The relaxation rate is time-dependent.; #; # A simple calculation shows that <ad(t2).a(t1)> = exp( - ( int_0^t1 Gamma(t) dt + int_0^t2 Gamma(t) dt ) / 2 ). H = 0.0 * qt.identity(2); psi0 = qt.basis(2, 1); tlist = np.linspace(0, 1, 101); def Gamma(t):; return 8.0 * t; cops = [[qt.destroy(2), lambda t, args: np.sqrt(Gamma(t))]]; a = qt.destroy(2); ad = a.dag(). testcorr = qt.correlation_2op_2t(H, psi0, tlist, tlist, cops, ad, a); #testcorrM = qt.correlation_2op_2t_MPAF(H, psi0, tlist, tlist, cops, ad, a). i1 = 20; i2 = 50; print('qt.correlation_2op_2t:'); print('<ad(t2).a(t1)> =',testcorr[i1, i2 - i1]). #print('qt.correlation_2op_2t MPAF:'); #print('<ad(t2).a(t1)> =',testcorrM[i1, i2 - i1]). print('------'); print('""manual"" calculation using mesolve:'); rhom = qt.mesolve(H, psi0, np.linspace(0, tlist[i1], 101), cops).states[-1]; print('<ad(t2).a(t1)> =',(qt.mesolve(H, a*rhom, np.linspace(tlist[i1], tlist[i2], 101), cops).states[-1] * ad).tr()). print('------'); print('theory:'); t1 = tlist[i1]; t2 = tlist[i2]; print('<ad(t2).a(t1)> =', np.exp(-(4.0*t1**2 + 4.0*t2**2)/2)); ```. ### Code Output. ```shell; qt.correlation_2op_2t:; <ad(t2).a(t1)> = (0.7117768902828536+0j); ------; ""manual"" calculation using mesolve:; <ad(t2).a(t1)> = 0.5598976820725802; ------; theory:; <a",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1808:629,energy,energy,629,https://qutip.org,https://github.com/qutip/qutip/issues/1808,1,['energy'],['energy']
Energy Efficiency,"### Bug Description. When using qutip integrators with `mcsolve`, parallelizing fails with both `parallel` and `loky` map methods when one doesn't use improved sampling. Also, a side note - memory consumption seems to have gotten worse in setting up the mcsolve problem in v5.0 as compared to v4.7. I can provide some benchmarks later, but I am unable to go to similar truncation sizes as I could before. ### Code to Reproduce the Bug. ```py; import qutip as qp; import numpy as np; N = 2; a1 = qp.tensor(qp.destroy(N), qp.qeye(N)); a2 = qp.tensor(qp.qeye(N), qp.destroy(N)); H = -1j * 0.4 * ((a1.dag()*a1.dag() - a1 * a1) + (a2.dag()*a2.dag() - a2*a2)); psi01 = qp.tensor(qp.states.basis(N, 0), qp.states.basis(N, 0)); tlist = np.linspace(0.0, 30.0, 501); c_ops = [np.sqrt(5)*a1*a1, np.sqrt(5)*a2*a2]; result = qp.mcsolve(H, psi01, tlist, c_ops, ntraj=500, options=dict(map=""parallel"", method=""vern9"", improved_sampling=False)); ```. ### Code Output. ```shell; ---------------------------------------------------------------------------; _RemoteTraceback Traceback (most recent call last); _RemoteTraceback: ; """"""; Traceback (most recent call last):; File ""/lib/python3.10/multiprocessing/queues.py"", line 245, in _feed; obj = _ForkingPickler.dumps(obj); File ""/lib/python3.10/multiprocessing/reduction.py"", line 51, in dumps; cls(buf, protocol).dump(obj); File ""<stringsource>"", line 2, in View.MemoryView._memoryviewslice.__reduce_cython__; TypeError: no default __reduce__ due to non-trivial __cinit__; ```. ### Expected Behaviour. Parallelizing should work independently of the sampling method. . ### Your Environment. ```shell; QuTiP Version: 5.0.2; Numpy Version: 1.26.4; Scipy Version: 1.12.0; Cython Version: None; Matplotlib Version: 3.9.0; Python Version: 3.10.4; Number of CPUs: 8; BLAS Info: Generic; INTEL MKL Ext: False; Platform Info: Darwin (arm64); ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2450:197,consumption,consumption,197,https://qutip.org,https://github.com/qutip/qutip/issues/2450,1,['consumption'],['consumption']
Energy Efficiency,"### Describe the Issue!. Dear all,. I have trouble using qutip to compute the eigenenergies of an ""inductively coupled transmon"" circuit:; ![image](https://github.com/qutip/qutip/assets/13218882/aa84164f-200b-4d75-a393-71d1fbb8ae8b). First I tried to compute the eigenenergies of a Transmon using from the Koch et al. paper:. $$ \hat{H} = E_\mathrm{c} \left( \hat{n} - n_\mathrm{g} \right)^2 - E_\mathrm{J} \cos \left( \hat{\varphi} \right)$$. With:; * $E_\mathrm{c} = \left(2 e \right)^2/\left(2 C\right)$ the charging energy; * $E_\mathrm{J} = \left( \phi_0 I_\mathrm{c} \right)/\left(2 \pi \right)$ the Josephson energy. From that I wrote the following function:; ```python; def spectrum(fluxes: np.ndarray,; dim: int=11,; c: float=10e-13,; ic: float=10e-9,; ng: float=0):. n = qtp.charge(int(dim/2)); phi = qtp.phase(dim). # Charging energy in GHz; ec = (2*cst.e)**2/2/c/cst.h/1e9. # Josephson energy in GHz; ej = cst.phi_0/2/np.pi*ic/cst.h/1e9. # Where we store the eigenenergies; es = np.zeros((len(fluxes), dim-1)); for i, flux in enumerate(fluxes):. h = ec*(n + ng)**2 - ej*(phi.cosm() + (phi - 2*np.pi*flux).cosm()). e = h.eigenenergies(); e = (e - e[0]); es[i] = np.abs(e[1:]). return es; ```. And got the correct Transmon transition frequency:; ```python; fluxes = np.linspace(-0.5, 1, 100). fig, ax = plt.subplots(1, 1); ys = spectrum(fluxes, ng=0., dim=21); ax.plot(fluxes, ys[:,0]). ax.set_xlabel('fluxes'); ax.set_ylabel('transitions (GHz)'); ```; ![image](https://github.com/qutip/qutip/assets/13218882/856f91a8-09a3-4aa9-bb5d-10bf2e46e2e2). We have the expected `cos` shape. Then I went for the ""inductively coupled transmon"" circuit with the following hamiltonian. $$ \hat{H} = E_\mathrm{c} \left( \hat{n_x}^2 - \hat{n_y}^2 \right) + E_\mathrm{J}\left( -\cos \left( \hat{x} \right) \cos \left( \hat{y} \right) + b \left( \hat{y} - \pi \frac{\phi_\mathrm{b}}{\phi_0}\right)^2\right)$$. With:; * $E_\mathrm{c} = \left(2 e \right)^2/\left(2 C\right)/2$ the charging energy; * $E_\mathrm",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2447:520,energy,energy,520,https://qutip.org,https://github.com/qutip/qutip/issues/2447,5,"['charge', 'energy']","['charge', 'energy']"
Energy Efficiency,"### Describe the Issue!. Hi, ; in QuTiP 5 I don' t have to compile `QobjEvo` manually. That's great! ; Since the `compile()` function is removed in QuTiP 5, all code that was written in version 4 breaks.; Maybe, we could add an empty `compile()` function with a deprecation warning, to allow users to adapt before we completely remove it.; @Ericgig, what do you think?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1949:301,adapt,adapt,301,https://qutip.org,https://github.com/qutip/qutip/issues/1949,1,['adapt'],['adapt']
Energy Efficiency,"### Describe the Issue!. Hi,. I want to use full ED method to diagonalize the Hamiltonian of the S=1 Heisenberg chain and derive the magnetization value of the model versus applied magnetic field in the z direction.; the efficient way to speed up calculations is considering conserved Sz total.; Is there any option to conserve Sz total in qutip?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2290:221,efficient,efficient,221,https://qutip.org,https://github.com/qutip/qutip/issues/2290,1,['efficient'],['efficient']
Energy Efficiency,"### Describe the Issue!. I have a big matrix which is a [QuTiP](https://qutip.org/) object. I am trying to run this line of code:. ops_numpy = [op.full() for op in m_ops] # convert the QuTiP Qobj to numpy arrays. But I am getting the following error:. MemoryError: Unable to allocate 16.0 TiB for an array with shape (1048576, 1048576) and; data type complex128. Here, `m_ops` is a list with `len(m_ops) = 27` and every `m_ops[i]` is a quantum object of shape. In [91]: m_ops[1].shape; Out[91]: (1048576, 1048576). Ok, I can see that I am trying to convert a QuTiP object into a numpy array but this object is so big that I have a memory issue. My question is simple: is there any way to overcome this issue? can I 'cut' the object in smaller pieces to convert it and then put the ""pieces back together""?. I really have no idea. Maybe I am not doing in the optimal way but I was working with really smaller matrix until this one and I didn't foresaw this problem. Any help or reference will be highly appreciated. This is really important for me. ----------------------------------------------------------------. EDIT with the full code:. """""".""""""; import numpy as np; import tensorflow as tf; from qutip import tensor; from qutip import sigmax, sigmaz, sigmay; from qutip import coherent, coherent_dm, expect, Qobj, fidelity, hinton; from tqdm.auto import tqdm. #%load_ext autoreload; tf.keras.backend.set_floatx('float64') # Set float64 as the default. # Local paths:; local_path = ""0_qst_master/cgan_tf_20qb/%s""; data_path = ""0_qst_master/cgan_tf_20qb/data/%s"". # Reading projectors; projs_settings = np.loadtxt(data_path % 'measurement_settings.txt', dtype=str). X = sigmax(); Y = sigmay(); Z = sigmaz(). m_ops = [] # measurement operators. def string_to_operator(basis): ; mat_real = []; ; for j in range(len(basis)):; if basis[j] == 'X':; mat_real.append(X) ; if basis[j] =='Y':; mat_real.append(Y) ; if basis[j] =='-Y':; mat_real.append(-Y) ; if basis[j] == 'Z':; mat_real.append(Z) ; return mat",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2176:275,allocate,allocate,275,https://qutip.org,https://github.com/qutip/qutip/issues/2176,1,['allocate'],['allocate']
Energy Efficiency,"### Describe the Issue!. I noticed some terminology used in the QuTip documentation that I think is not quite accurate. . The description of ""m_ops"" in the [stochastic solver options](https://qutip.org/docs/latest/apidoc/classes.html#qutip.stochastic.StochasticSolverOptions) states:. > List of operators representing the measurement operators. However, it is clear from the example given [here](https://qutip.org/docs/latest/guide/dynamics/dynamics-stochastic.html) that ""m_ops"" represents the observable being measured and not the measurement operator. . The distinction is that the term ""measurement operator"" usually refers to an (efficient) quantum operation that brings a pure state to a pure state. The measurement operators are the operators that generate the stochastic evolution and are akin to ""sc_ops"", not to ""m_ops"". The operators ""m_ops"" used by the stochastic solver define the POVM elements, i.e., they define the probabilities of measurement outcomes. This is not the same as a measurement operator. . For more detail, see the first chapter of the [standard textbook](https://www.cambridge.org/core/books/quantum-measurement-and-control/F78F445CD9AF00B10593405E9BAC6B9F) by Wiseman and Milburn. P.S. Note that Wiseman also calls the POVM elements ""effects"", which I think is dreadfully confusing. But I think there is pretty universal agreement that ""measurement operator"" should refer to the quantum maps.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2212:635,efficient,efficient,635,https://qutip.org,https://github.com/qutip/qutip/issues/2212,1,['efficient'],['efficient']
Energy Efficiency,"### Describe the Issue!. I'm trying to simulate a simple two-level system with a sinusoidally varying external magnetic field. The code is given below:. ```python3; import matplotlib.pyplot as plt; import numpy as np; from qutip import basis, sigmax, sigmay, sigmaz, Options, mesolve, expect; from scipy.constants import physical_constants. g = 2; muB = (physical_constants[""Bohr magneton in eV/T""])[0] ## Bohr-Magneton in eV/Tesla; gamma = 0.5*muB*g #in eV/Tesla. h_inv = (physical_constants[""reduced Planck constant in eV s""][0])**-1. gamma = gamma*h_inv #in sec-1/Tesla; del physical_constants; ## Defining time of evolution; times = np.linspace(0, 6*10**-7, 1000); noe = len(times); B = 1; Bx = -(1*10**-3); ## Create a Quantum 2 state basis; up = basis(2,0) ; down = basis(2,1) ; upd = up * up.dag() ; downd = down * down.dag(); sy = sigmay(); sz = sigmaz(); sx = sigmax(); Hx = gamma*Bx*sx; options = Options(nsteps=10000); H0 = -gamma*B*sz ; resonant_frequency = H0.eigenenergies() ; def Hx_coeff(t, args):; return 1 * np.cos(-2*resonant_frequency[0]*t );. H = [H0,[Hx,Hx_coeff]]; ; result = mesolve(H, downd, times, [], options=options); rh = result.states; upexpect, downexpect = [], []; for r in rh: ; up_e = expect(up*up.dag(), r); down_e = expect(down*down.dag(), r); upexpect.append(up_e); downexpect.append(down_e); plt.plot(times, upexpect, label = ""Upstate"", color='g', linestyle='-.'); plt.plot(times, downexpect, label = ""Downstate"", color='r', linestyle='-.'); plt.title(""Prob v/s Time for B = {}"".format(B)); plt.legend(loc=""best""); plt.xlabel(""Time""); plt.ylabel(""Probability of State""); plt.grid(); plt.show(); ```. The Hamiltonian of the system is hermitian, and theoretically, we don't expect such decay in the amplitude. So, what is happening in the above program that is leading to such a strange evolution? . ![Figure_2](https://user-images.githubusercontent.com/49644300/209442963-3e2a047f-1714-4d5c-b484-fa78e91a8062.png); . As soon as I increase the value of `B` the deca",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2051:494,reduce,reduced,494,https://qutip.org,https://github.com/qutip/qutip/issues/2051,1,['reduce'],['reduced']
Energy Efficiency,"### New changelog. #### <code>test_krylovsolve.py</code>. * [x] We have <code>qutip.rand_herm</code> for a random hamiltonian. --> **Changed**; * [x] Isn't <code>h_sho</code> equivalent to <code>U=qutip.rand_unitary_haar(dim) \ return U* (qutip.num(dim)+0.5)*U.dag()</code> ? --> **We can test it with that one**.; * [x] Clean imports on <code>test_krylovsolve</code>; <code>qeye</code> imported twice, <code>run_module_suite</code> never used, etc.; * [x] Header no longer used. --> **Removed.**; * [x] Why is <code>os.environ['QUTIP_GRAPHICS'] = ""NO""</code> needed? --> **Remained from the original copy from test_sesolve.py**; * [x] Why not simply compare to <code>sesolve</code> ? --> **Is easier, so we swap it.**; * [x] Naming this fidelity feels wrong with the <code>1-...</code>. Also make Qobj and array conversions more efficiently with Naming this fidelity feels wrong with the <code>1-....</code>; You don't need to work go back and forth between <code>Qobj</code> and array. Also make things more efficiently with <code>1 - np.abs(psi_exact.overlap(psi_k))**2</code>. --> **Corrected.**; * [x] More efficiently <code>psi0=qutip.rand_ket(dim)</code>. --> **Corrected.**; * [x] Why compute 3 expectation values if only one is tested?; Also please use the normal <code>assert</code> instead of numpy's <code>assert_</code>. We are slowly removing them since we migrated from unitest to pytest. --> **Now all of them are checked and using <code>asset</code>**. #### <code>krylovsolve.py</code>. * [x] <code>isinstance</code> should be tested first since if it isn't, <code>psi0.isket</code> will raise an error before reaching it. It should raise a <code>TypeError</code>.; * [x] Please raise an error instead of using <code>assert</code>, since it can be suppressed.; * [x] Testing for dims instead of shape would be better. --> **Done.**; * [x] Empty progress bars can be ignored.; * [x] Improve the print at <code>particular_tlist</code> using <code>warnings.warn</code>. Properly describe",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1739#issuecomment-1041914233:830,efficient,efficiently,830,https://qutip.org,https://github.com/qutip/qutip/pull/1739#issuecomment-1041914233,1,['efficient'],['efficiently']
Energy Efficiency,"### Problem Description. The `improved_sampling` option was recently added to `mcsolve`. It might also be useful to have in `nm_mcsolve`, but adaptations to the code are required to make it work. Currently, we have disabled this option for the `NonMarkovianMCSolver`, see [PR 2234](https://github.com/qutip/qutip/pull/2234). Since `NonMarkovianMCSolver` inherits from `MCSolver`, one might expect this option to work ""out of the box"". The technical reason why it does not is that `nm_mcsolve` calculates the value of an influence martingale, which is factored into the calculation of expectation values in the custom result class `NmmcResult`. If `improved_sampling` is enabled, the result class `McResultImprovedSampling` is used instead, which is not aware of the martingale. ### Proposed Solution. Both the improved sampling algorithm and `nm_mcsolve` give trajectories a *weight*. In the former case, the weight is related to the probability of the trajectory without jumps; in the latter case it is the influence martingale. I imagine it might be useful to give `McResult` itself the capability to handle weighted trajectories. ; This capability would be useful for one additional purpose: if we want to allow mixed initial conditions for `mcsolve` in the future. In this case, the trajectories would need to be weighted with a correction factor, because the fraction $f_i$ of trajectories starting in a state $i$ will generally not be equal to the corresponding eigenvalue $p_i$ of the density matrix $\rho = \sum p_i |i \rangle\langle i|$. (Hence, the correction factor would be $p_i / f_i$.). If people think this would be useful (including the mixed initial states), I will try to implement this proposal once I can find some time to do so. ### Alternate Solutions. Alternatively, we could leave things as they are now and not support the improved sampling for `nm_mcsolve`. Another less invasive option would be copying the improved sampling algorithm to `nm_mcsolve` (adding a `NmmcResultIm",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2235:142,adapt,adaptations,142,https://qutip.org,https://github.com/qutip/qutip/issues/2235,1,['adapt'],['adaptations']
Energy Efficiency,"']['weight'] = ss_args['weight']; ; n = int(np.sqrt(L.shape[0])); if ss_args['method'] == 'iterative':; ss_list = _steadystate_LU_liouvillian(L, ss_args); L, perm, perm2, rev_perm, ss_args = ss_list; elif ss_args['method'] == 'power':; ss_list = _steadystate_power_liouvillian(L, ss_args); L, perm, perm2, rev_perm, ss_args = ss_list; else:; > raise ValueError(""Invalid preconditioning method.""); E ValueError: Invalid preconditioning method. /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib/python3.9/site-packages/qutip/steadystate.py:1109: ValueError; ====================================================================================== short test summary info ======================================================================================; FAILED tests/test_countstat.py::test_dqd_current - AssertionError: ; FAILED tests/test_scheduler.py::test_scheduling_gates3[circuit2 ALAP no shuffle] - assert 4 == 5; FAILED tests/test_steadystate.py::test_driven_cavity[power-gmres] - ValueError: Invalid preconditioning method.; FAILED tests/test_steadystate.py::test_driven_cavity[power-bicgstab] - ValueError: Invalid preconditioning method.; ======================================================== 4 failed, 2845 passed, 120 skipped, 67 deselected, 4 warnings in 130.89s (0:02:10) =========================================================; ```. ### Expected Behaviour. Tests should succeed. ### Your Environment. ```shell; QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman and Simon Cross.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1755:16830,power,power-gmres,16830,https://qutip.org,https://github.com/qutip/qutip/issues/1755,1,['power'],['power-gmres']
Energy Efficiency,"(L, ss_args); L, perm, perm2, rev_perm, ss_args = ss_list; elif ss_args['method'] == 'power':; ss_list = _steadystate_power_liouvillian(L, ss_args); L, perm, perm2, rev_perm, ss_args = ss_list; else:; > raise ValueError(""Invalid preconditioning method.""); E ValueError: Invalid preconditioning method. /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib/python3.9/site-packages/qutip/steadystate.py:1109: ValueError; ________________________________________________________________________________ test_driven_cavity[power-bicgstab] _________________________________________________________________________________. method = 'power-bicgstab', kwargs = {'M': <900x900 _CustomLinearOperator with dtype=complex128>, 'use_precond': 1}. @pytest.mark.parametrize(['method', 'kwargs'], [; pytest.param('direct', {}, id=""direct""),; pytest.param('direct', {'sparse':False}, id=""direct_dense""),; pytest.param('eigen', {}, id=""eigen""),; pytest.param('svd', {}, id=""svd""),; pytest.param('power', {'mtol':1e-5}, id=""power""),; pytest.param('power-gmres', {'mtol':1e-1, 'use_precond':1, 'M':'iterative'},; id=""power-gmres""),; pytest.param('power-bicgstab', {'use_precond':1, 'M':'power'},; id=""power-bicgstab""),; pytest.param('iterative-gmres', {}, id=""iterative-gmres""),; pytest.param('iterative-bicgstab', {}, id=""iterative-bicgstab""),; ]); def test_driven_cavity(method, kwargs):; N = 30; Omega = 0.01 * 2 * np.pi; Gamma = 0.05; ; a = qutip.destroy(N); H = Omega * (a.dag() + a); c_ops = [np.sqrt(Gamma) * a]; if 'use_precond' in kwargs:; > kwargs['M'] = qutip.build_preconditioner(H, c_ops, method=kwargs['M']). /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib/python3.9/site-packages/qutip/tests/test_steadystate.py:124: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _. A = Quantum object: dims = [[30], [30]], shape = (30, 30), type = oper, is",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1755:10871,power,power,10871,https://qutip.org,https://github.com/qutip/qutip/issues/1755,2,['power'],['power']
Energy Efficiency,"**Checklist**; Thank you for contributing to QuTiP! Please make sure you have finished the following tasks before opening the PR. - [x] Please read [Contributing to QuTiP Development](http://qutip.org/docs/latest/development/contributing.html); - [x] Contributions to qutip should follow the [pep8 style](https://www.python.org/dev/peps/pep-0008/).; You can use [pycodestyle](http://pycodestyle.pycqa.org/en/latest/index.html) to check your code automatically; - [ ] Please add tests to cover your changes if applicable.; - [ ] If the behavior of the code has changed or new feature has been added, please also update the documentation in the `doc` folder, and the [notebook](https://github.com/qutip/qutip-tutorials). Feel free to ask if you are not sure.; - [ ] Include the changelog in a file named: `doc/changes/<PR number>.<type>` 'type' can be one of the following: feature, bugfix, doc, removal, misc, or deprecation (see [here](http://qutip.org/docs/latest/development/contributing.html#changelog-generation) for more information). Delete this checklist after you have completed all the tasks. If you have not finished them all, you can also open a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/) to let the others know this on-going work and keep this checklist in the PR description. **Description**. I am adding an efficient module for calculating the wave function that uses a recurrence for it in Cython, and I am applying one of its functions in the update method of the HarmonicOscillatorWaveFunction class in the distribution.py module. This module is an adaptation of one of the modules from the package I developed for efficient wave function calculation: Fast Wave. **Related issues or PRs**; Please mention the related issues or PRs here. If the PR fixes an issue, use the keyword fix/fixes/fixed followed by the issue id, e.g. fix #1184",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2553:1364,efficient,efficient,1364,https://qutip.org,https://github.com/qutip/qutip/pull/2553,3,"['adapt', 'efficient']","['adaptation', 'efficient']"
Energy Efficiency,"**Checklist**; Thank you for contributing to QuTiP! Please make sure you have finished the following tasks before opening the PR. - [x] Please read [Contributing to QuTiP Development](https://github.com/qutip/qutip-doc/blob/master/CONTRIBUTING.md); - [x] Contributions to qutip should follow the [pep8 style](https://www.python.org/dev/peps/pep-0008/).; You can use [pycodestyle](http://pycodestyle.pycqa.org/en/latest/index.html) to check your code automatically; - [x] Please add tests to cover your changes if applicable.; - [x] If the behavior of the code has changed or new feature has been added, please also update the [documentation](https://github.com/qutip/qutip-doc) and the [notebook](https://github.com/qutip/qutip-notebooks). Feel free to ask if you are not sure. **Description**; There are three major parts to this PR (more or less interlinked): . - Adds `Simulator` class to abstract away circuit run functionality. This enables future contributors to add to exact simulation (and potentially other ways of simulation) easily. It also has a `step` function which allows to go over the circuit step-by-step which could enable interesting visualisations.; - Adds `Result` class as a wrapper around results obtained from circuit simulations. ; - Adds a more efficient mode to `gate_sequence_product` function which allows for faster pre-computation of unitaries. **Changelog**; Added `Simulator`, `Result` class ; Added new mode to `gate_sequence_product`, `QubitCircuit.propagators`",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1331:1272,efficient,efficient,1272,https://qutip.org,https://github.com/qutip/qutip/pull/1331,1,['efficient'],['efficient']
Energy Efficiency,"**Describe the bug**; When raising a 1 × 1 Qobj instance to a power using `**`, an exception is raised that only square operators can be exponentiated. **To Reproduce**; Please provide a minimal working example. For instance:. ```python; >>> ket0 = qutip.basis(2, 0); >>> (ket0.dag() * ket0) ** 2; ---------------------------------------------------------------------------; Exception Traceback (most recent call last); ~\AppData\Local\Temp/ipykernel_131052/3984076164.py in <module>; ----> 1 (ket0.dag() * ket0) ** 2. ~\Anaconda3\envs\<redacted>\lib\site-packages\qutip\qobj.py in __pow__(self, n, m); 727 """"""; 728 if self.type not in ['oper', 'super']:; --> 729 raise Exception(""Raising a qobj to some power works only for "" +; 730 ""operators and super-operators (square matrices).""); 731 . Exception: Raising a qobj to some power works only for operators and super-operators (square matrices).; ```. **Expected behavior**; A 1 × 1 operator is square, such that exponentiating should act similarly to scalar exponentiation. **Your Environment**; ```. QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman and Simon Cross.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.6.2; Numpy Version: 1.21.2; Scipy Version: 1.7.1; Cython Version: None; Matplotlib Version: None; Python Version: 3.9.7; Number of CPUs: 32; BLAS Info: Generic; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Windows (AMD64); Installation path: C:\Users\cgran\Anaconda3\envs\<redcacted>\lib\site-packages\qutip; ==========================================================",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1691:62,power,power,62,https://qutip.org,https://github.com/qutip/qutip/issues/1691,3,['power'],['power']
Energy Efficiency,"**Description**. I propose to make it possible to have callable functions inside of the `e_ops` list, not only operators. This becomes useful if we want to measure energy or if we want to have time-dependent measurements just like time-dependent Hamiltonian. Changes are pretty straightforwards, mostly making sure types match. Important design choice is, if measurement is not an operator but a function, the data type is complex by default (to handle the general case). Feedback and suggestions for changes are welcome. I will be happy to contribute more!. **Related issues or PRs**. Suggested in https://github.com/qutip/qutip/issues/1238. **Changelog**. 1. Modified `mesolve` and `sesolve` objects to handle callable function inside of the `e_ops` list.; 2. Prepared `solver` to create empty measured data if list of `e_ops` contains a callable function.; 3. Modified one of the high level tests, `test_compatibility_with_solver` by adding an additional measurement which is not an operator but a lambda expression.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1655:164,energy,energy,164,https://qutip.org,https://github.com/qutip/qutip/pull/1655,1,['energy'],['energy']
Energy Efficiency,"**Description**. The aim of this project is to enhance the capabilities of qutip's HEOM implementation by introducing a set of tools that offer the option to simulate arbitrary spectral densities or correlation functions. . To achieve this the main idea is to fit our wanted spectral density by a set of underdamped Drude-Lorentz spectral densities or correlation functions. The idea is that the user will supply his desired spectral density or correlation function and the tools will automatically do the fit and construct the corresponding HEOM bath. Guesses ffor the fit and the number of terms will be decided automatically if the user does not specify them. To decided on the number of terms, we will used the normalized root mean square error as a measure of the goodness of the fit. . I also added functions to bosonic bath to quickly obtain the correlation function, power spectrum and spectral density for the existing bosonic baths . **Note**. Those tests fail because mpmath is not in the requirements, it is needed because the scipy version of the Rienmann zeta function doesn't take complex arguments (https://github.com/scipy/scipy/issues/9182). **Related issues or PRs**. The Qutip tutorial notebooks are updated to show this new functionality in (https://github.com/qutip/qutip-tutorials/pull/72)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2260:875,power,power,875,https://qutip.org,https://github.com/qutip/qutip/pull/2260,1,['power'],['power']
Energy Efficiency,"**Description**; - Integrate scheduler into the compiler. The compiler can now schedule quantum gates to reduce the duration of the compiled pulses.; - Improve the structure and readability of the `Compiler` class. The compiler class was separated for clarity when the `Processor` class was built upon old code in `qutip.qip`. But it has never been opened as a public API. This PR improves the readability and, most importantly, makes it easier for users to customize the compiler class.; - Add a map `pulse_dict` between the pulse label and the indices in `Processor`, so that customizing class becomes much easier. **Files description**; - `scheduler.py` is moved to compiler folder and split to two files : `instruction.py` and `scheduler.py` for clarity.; - Changes in `gatecompiler.py`, `cavityqedcompiler.py` and `spinchaincompiler.py` are for integrating the scheduler.; - Others are adaptations. **Changelog**; Integrate the scheduler into the compiler",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1444:29,schedul,scheduler,29,https://qutip.org,https://github.com/qutip/qutip/pull/1444,8,"['adapt', 'reduce', 'schedul']","['adaptations', 'reduce', 'schedule', 'scheduler']"
Energy Efficiency,"**Description**; A gate (pulse) scheduler for quantum circuits (instructions). It schedules a `QubitCircuit` or a list of instructions to reduce the total execution time by exciting them parallelly. It uses heuristic methods mainly from https://doi.org/10.1117/12.666419. The scheduler aims at pulse schedule and therefore does not consider merging gates to reduce the gates number. It assumes that the input circuit is optimized at the gate level (e.g. has a minimal number of CNOT gates) and matches the hardware topology. The scheduler includes two methods, ""ASAP"", as soon as possible, and ""ALAP"", as late as possible. The later is commonly used in quantum computation because of the finite lifetime of qubits. **Methods**. - The scheduler first generates a quantum gates dependency graph, containing information about which gates have to be executed before some other gates because they do not commute. The graph preserves the mobility of the gates, i.e. commuting gates are not dependent on each other, even if they use the same qubits. ; - Next, it computes the longest distance of each node to the start and end nodes. The distance for each dependency arrow is defined by the execution time of the instruction (By default, it is 1 for all gates). This is used as a priority measure in the next step. The gate with a longer distance to the end node and a shorter distance to the start node has higher priority.; - In the last step, it uses a list-schedule algorithm with hardware constraint (e.g. gates using the same qubits) and priority and returns a list of cycles for gates.; - Since it's heuristics, sometimes it does not find the optimal. It offers an option that randomly shuffles the gates (if commuting) and repeats the scheduling a few times to get a better result. For scheduling quantum instructions, of which the runtime of different gates might differ, an additional step is required to compute the scheduled start time of each instruction.; It adds the additional dependency caus",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1273:32,schedul,scheduler,32,https://qutip.org,https://github.com/qutip/qutip/pull/1273,8,"['reduce', 'schedul']","['reduce', 'schedule', 'scheduler', 'schedules']"
Energy Efficiency,**Description**; Adaptation of PR #2283 to qutip 5: using `np.tensordot` instead of a triple loop. Co-authored with [Rafael Haenel](https://github.com/rafaelha),MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2284:17,Adapt,Adaptation,17,https://qutip.org,https://github.com/qutip/qutip/pull/2284,1,['Adapt'],['Adaptation']
Energy Efficiency,"**Description**; Add a function that list all dispatched functions and their specialization.; It automatically adapt to new data-layer and dispatched functions.; Only show pure specialization: `solve[Dense, Dense]` not `solve[CSR, Dense]`. I also register 2 specializations that were created, but not registered. Example:; ```; >>> from qutip.core.data.dev_utils import specialisation_table; >>> specialisation_table(). Output only specialisation; |Dispatched function | JaxArray | CSR | Dense |; |zeros | True | True | True |; |identity | True | True | True |; |diag | True | True | True |; |one_element | True | True | True |; ...; Binary specialisation; |Dispatched function | JaxArray | CSR | Dense |; |add | True | True | True |; |sub | True | True | True |; |matmul | True | True | True |; |multiply | True | True | True |; |kron | True | True | True |; |solve | False | False | True |; ...; ```. This could also go into a notebook if it fit better there.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2132:111,adapt,adapt,111,https://qutip.org,https://github.com/qutip/qutip/pull/2132,1,['adapt'],['adapt']
Energy Efficiency,"**Description**; Changes pow to allow the exponentiation of arbitrary square matrices regardless of their type as `qobj`. I tried to change it so that `bra*ket` returns a scalar but this breaks backwards compatibility and there are modules such as `control` that do thinks like; ```python; (bra*ket).tr(); ```; or ; ```python; (bra*ket).data[0,0]; ```; that would stop working. **Related issues or PRs**; fix #1691. **Changelog**; It is now possible to compute the power of an scalar-like `qobj`.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1692:465,power,power,465,https://qutip.org,https://github.com/qutip/qutip/pull/1692,1,['power'],['power']
Energy Efficiency,"**Description**; Currently, result objects store a reference to the solver object that created them. I think this is an accident. The options field of a solver is an instance of `_SolverOptions` (see [here](https://github.com/qutip/qutip/blob/454b61529d7bf3c37f74c17925a749fcb046c364/qutip/solver/solver_base.py#L312)), which gets stored in the result [here](https://github.com/qutip/qutip/blob/454b61529d7bf3c37f74c17925a749fcb046c364/qutip/solver/solver_base.py#L147). `_SolverOptions` has a `_feedback` field which is assigned an instance method of the solver and thus keeps a reference to the solver. I noticed this issue when I called `qsave` on a result object and the resulting file was ~100 MB instead of the expected ~100 KB. Setting `result.options._feedback = None` before calling `qsave` reduced the file size by a factor ~2000. But also without pickling, I think that this is a memory leak where solver objects can't be garbage collected. The fix I am submitting here makes results create a copy of the options passed to it, setting `_feedback` to `None` if it exists. I considered converting `_SolverOptions` objects to plain `dict`s in the result class, but that would discard a little bit of information. (Note however that in many places, the `options` passed to the results are plain `dict`s anyway, [for example](https://github.com/qutip/qutip/blob/454b61529d7bf3c37f74c17925a749fcb046c364/qutip/tests/solver/test_results.py#L30).) I also considered making `_feedback` a weak reference, but that would make pickling more complicated. I am not sure what tests to add about this, if any.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2262:800,reduce,reduced,800,https://qutip.org,https://github.com/qutip/qutip/pull/2262,1,['reduce'],['reduced']
Energy Efficiency,"**Description**; Depending on the length of the array of coefficients given to a QobjEvo, `sesolve()` gives erroneous results. **Minimal working example**. I am trying to simulate the behavior of a system of two atoms, each one with three energy levels, using `QobjEvo`. Preamble:; ```python; import qutip; import numpy as np; import matplotlib.pyplot as plt; ```; Consider the following arrays of coefficients:; ```python; atom1_coeffs = np.array([0. , 0.000554 , 0.00232179, 0.00559138, 0.01075109,; 0.0181713 , 0.02807408, 0.04041764, 0.05482037, 0.07054261,; 0.0865334 , 0.10153804, 0.11425045, 0.123486 , 0.12834601,; 0.12834601, 0.123486 , 0.11425045, 0.10153804, 0.0865334 ,; 0.07054261, 0.05482037, 0.04041764, 0.02807408, 0.0181713 ,; 0.01075109, 0.00559138, 0.00232179, 0.000554 , 0. ,; 0. , 0. , 0. , 0. , 0. ,; 0. , 0. , 0. , 0. , 0. ,; 0. , 0. , 0. , 0. , 0. ,; 0. , 0. , 0. , 0. , 0. ,; 0. , 0. , 0. , 0. , 0. ,; 0. , 0. , 0. , 0. , 0. ,; 0. , 0.000554 , 0.00232179, 0.00559138, 0.01075109,; 0.0181713 , 0.02807408, 0.04041764, 0.05482037, 0.07054261,; 0.0865334 , 0.10153804, 0.11425045, 0.123486 , 0.12834601,; 0.12834601, 0.123486 , 0.11425045, 0.10153804, 0.0865334 ,; 0.07054261, 0.05482037, 0.04041764, 0.02807408, 0.0181713 ,; 0.01075109, 0.00559138, 0.00232179, 0.000554 , 0. ]). atom2_coeffs = np.array([0. , 0. , 0. , 0. , 0. ,; 0. , 0. , 0. , 0. , 0. ,; 0. , 0. , 0. , 0. , 0. ,; 0. , 0. , 0. , 0. , 0. ,; 0. , 0. , 0. , 0. , 0. ,; 0. , 0. , 0. , 0. , 0. ,; 0. , 0.00110801, 0.00464357, 0.01118276, 0.02150219,; 0.03634261, 0.05614817, 0.08083527, 0.10964074, 0.14108522,; 0.1730668 , 0.20307607, 0.22850089, 0.24697201, 0.25669201,; 0.25669201, 0.24697201, 0.22850089, 0.20307607, 0.1730668 ,; 0.14108522, 0.10964074, 0.08083527, 0.05614817, 0.03634261,; 0.02150219, 0.01118276, 0.00464357, 0.00110801, 0. ,; 0. , 0. , 0. , 0. , 0. ,; 0. , 0. , 0. , 0. , 0. ,; 0. , 0. , 0. , 0. , 0. ,; 0. , 0. , 0. , 0. , 0. ,; 0. , 0. , 0. , 0. , 0. ,; 0. , 0. , 0. , 0. , 0. ]); ```. ```p",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1403:239,energy,energy,239,https://qutip.org,https://github.com/qutip/qutip/issues/1403,1,['energy'],['energy']
Energy Efficiency,"**Description**; I found the description for unitary, non-dissipative time evolution a bit confusing as the text always referred to `mesolve` while the examples used `sesolve`. I adapted the text to `sesolve` for that section and introduced `mesolve` only in the next section. **Related issues or PRs**; understanding the docs. **Changelog**; Improve documentation on solving for unitary dynamics by making the use of sesolve and mesolve in the code examples more consistent with the text, and by making the text clearer.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1921:179,adapt,adapted,179,https://qutip.org,https://github.com/qutip/qutip/pull/1921,1,['adapt'],['adapted']
Energy Efficiency,**Description**; Integrate the scheduler into Processor. Users can choose to first schedule the circuit/control pulses before running the simulation. **Changelog**; Supports Processor with the scheduler.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1365:31,schedul,scheduler,31,https://qutip.org,https://github.com/qutip/qutip/pull/1365,3,['schedul'],"['schedule', 'scheduler']"
Energy Efficiency,"**Description**; Make `choi_to_kraus` rely on eigenstate solver for Hermitian matrices if the Choi matrix is Hermitian. Basically, this adapts what is done in qutip 5, while waiting for its release. **Related issues or PRs**; #2263",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2276:136,adapt,adapts,136,https://qutip.org,https://github.com/qutip/qutip/pull/2276,1,['adapt'],['adapts']
Energy Efficiency,"**Description**; New sparse type: `Dia`.; Optimal for diagonal operators such as `qeye`, `destroy`. But it's quite bad for vectors ('bra', 'ket'). For a tri-diagonal matrix, it's about 25% faster than `CSR` for `oper @ dense`.; It can do an very efficient `dense @ dia`, while `CSR` is only efficient `csr @ dense`, not the opposite. . This include most specializations, change the default in operators, add tests. The implementation mostly match the one in scipy. ; The matrices are stored in two arrays, the diagonals offsets `shape=num_offsets` and the data `shape=[num_offsets, ncols]`. The diagonals are lined so that for each entry, the column in the data array match the matrix column.; The main differences with scipy's implementation are fixed dtype and the shape of the data array being fixed. (scipy accept longer diagonals and ignore entries outside the matrix.)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2196:246,efficient,efficient,246,https://qutip.org,https://github.com/qutip/qutip/pull/2196,2,['efficient'],['efficient']
Energy Efficiency,"**Description**; On mac, with OpenBlas, `eigh` can cause segmentation fault, see #1197. For 4.5.1, we simply skipped the tests causing problems ( #1257). This replace the calls of `numpy.linalg.eigh` to `numpy.linalg.eig`, and lapack calls of `ZHEEVR` to `ZGEEV` when at risk of segfault. This will result in slower `Qobj.eigenstates` and `brmesolve`. . Tests where adapted, the issues were the phase of the eigenvectors and the lower numerical precision of `eig`. While the flag to use `eig` instead of `eigh` is `qutip.settings.eigh_unsafe`, it must be set before importing `qutip.sparse` to have any effect. Thus it is not a true settings, (like `has_openmp`). **Changelog**; Replace calls of `eigh` to `eig` when at risk of segfault.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1288:366,adapt,adapted,366,https://qutip.org,https://github.com/qutip/qutip/pull/1288,1,['adapt'],['adapted']
Energy Efficiency,"**Description**; Rewrite steadystate to use data layer function. - The number of method have been reduced to 4 and are now distinct algorithm for the steadystate computation.; - The solver used to solve linear equation is distinct from the method. `iterative-gmres` is not `method=""direct"", solver=""gmres""`. (The solver will still work for backward compatibility.); - Optional parameter to pass to the linear equation solver are no longer included in a default dict, but passed through `**kw`. This leave 8 optional parameter purely for steadystate.; - Info have been removed, this was interesting, but bloating the code. `steadystate_floquet` and `pseudo_inverse` are also rewritten using calls to the data layer.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2031:98,reduce,reduced,98,https://qutip.org,https://github.com/qutip/qutip/pull/2031,1,['reduce'],['reduced']
Energy Efficiency,"**Description**; Since merging #2497, mkl tests on windows fails from segfault.; I am not sure of the source of the error:; Since the library was not found before the PR, the bug can have been there for a long time, but the tests passed in #2497.; Just settings mkl to verbose is enough for the tests to passes... I don't think relying on the verbose options is a good idea so I made it unable to find mkl on windows for this PR. We will need to find a more reliable way to use it, `ctypes` does not look at the header file so it guess the types from our call. Maybe some version of mkl are 32 bit and other 64 bit and we are not adapting. [pydiso](https://github.com/simpeg/pydiso) looks promising.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2529:630,adapt,adapting,630,https://qutip.org,https://github.com/qutip/qutip/pull/2529,1,['adapt'],['adapting']
Energy Efficiency,"**Description**; Tests related to krylovsolve take a lot of time, close to 1/3 of the whole test suite.; I kept all the tests, but reduced the size of the systems used.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1861:131,reduce,reduced,131,https://qutip.org,https://github.com/qutip/qutip/pull/1861,1,['reduce'],['reduced']
Energy Efficiency,"**Description**; The PR provides a way to characterize thermal environments for open quantum systems, The user can now construct Thermal environments by specifying The spectral density, or the correlation function , or the power spectrum and the Temperature. Once specified the other two are calculated. We hope once integrated with the solvers, this PR will allow for a more systematic way of comparing different approaches, and easier simulations by quickly obtaining the quantities needed from the bath objects. The PR also provides exponential approximations of the environment via a fit of the correlation function, and a fit of the spectral density in terms of underdamped modes, the PR allows for incorporation of more approximation methods, which will be added in the future. . **Related issues or PRs**; This PR is a generalization of #2260 . Special Thanks to @pmenczel for improving the code significantly and valuable suggestions!. **TODO:**. I think perhaps those are better finished once we have decided that this structure for the environments is the way to go. However, the most important missing bits are . - [x] Finish documentation in the User's guide; - [x] Add relevant tests for the HEOM solver using the enviroment class; - [ ] Finish tests for environment.py",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2534:223,power,power,223,https://qutip.org,https://github.com/qutip/qutip/pull/2534,1,['power'],['power']
Energy Efficiency,"**Description**; The previous code converted both states to density matrices, which is both inefficient and numerically inaccurate. We propose to use the reduced fidelity formula for pure states, given by the modulus of their inner product. **Related issues or PRs**; Related to #361 and #925. Reusing @lucainnocenti example (https://github.com/qutip/qutip/issues/925#issuecomment-542318121):; ```python; import qutip as qt; import numpy as np. A = qt.Qobj(np.array([; 0.867314655330313 - 0.4576338188944636j,; 0.17267952805615244 - 0.09111291375544905j,; 0.013020232894921149 -0.006875138252288391j; ])); B = qt.Qobj(np.array([; 0.9806443568092577, 0.19524328915024022, 0.014720852555238875; ])). fid1 = np.abs(np.vdot(A.full(), B.full())); fid2 = np.abs((A.dag() * B)[0, 0]); fid3 = np.abs(A.overlap(B)); fid_qt = qt.fidelity(A, B); print(f'Correct:\n{fid1}\n{fid2}\n{fid3}'); print(f'Incorrect:\n{fid_qt}'); ```; ```; Correct:; 0.9999999999849929; 0.9999999999849929; 0.9999999999849929; Incorrect:; 1.0000000028441378; ```. Note that this PR does not fix the proposition from @lucainnocenti https://github.com/qutip/qutip/issues/925#issuecomment-542318121 to perform the general computation using `scipy.linalg.svdvals` at the cost of computing the square root of both matrices.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1964:154,reduce,reduced,154,https://qutip.org,https://github.com/qutip/qutip/pull/1964,1,['reduce'],['reduced']
Energy Efficiency,**Description**; The test for the new method `run_from_experiment` has a time step too long for the euler method. This would cause fail once a few hundreds time as in https://github.com/qutip/qutip/actions/runs/8979789558/job/24662362047.; Reducing the system size with smaller steps makes the test more consistent (no failure in 20000 tries.). Also reduced `test_feedback` step size to improve that test consistency.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2419:350,reduce,reduced,350,https://qutip.org,https://github.com/qutip/qutip/pull/2419,1,['reduce'],['reduced']
Energy Efficiency,"**Description**; This PR implements and tests a new version of `process_fidelity`.; The new version follows the definition in Gilchrist et al., Physical Review A 71, 062310 (2005). **Related issues or PRs**; Discussion at https://github.com/qutip/qutip/issues/1703.; I previously submitted a similar PR at https://github.com/qutip/qutip/pull/1708, targeting `master`. ; This PR targets `dev.major` rather than `master` because existing functionality is changed, and contains improvements following @Ericgig 's suggestions. I have also adapted the tests to match the style of the tests in `dev.major`. Addresses part 2 of https://github.com/qutip/qutip/issues/1703. **Changelog**; Implement and test a new version of `process_fidelity` (https://github.com/qutip/qutip/issues/1703)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1712:535,adapt,adapted,535,https://qutip.org,https://github.com/qutip/qutip/pull/1712,1,['adapt'],['adapted']
Energy Efficiency,"**Description**; This issue regards defining how to properly structure the main code of the repository [krylovsolver](https://github.com/emilianomfortes/krylovsolver) to merge it into quip and provide it as a new solver. **Possible solution**; We have created a temporary branch in the original repository labeled [qutip](https://github.com/emilianomfortes/krylovsolver/tree/qutip), on which the algorithm code styling has been adapted to follow a similar one based on qutip (i.e. using [sesolve.py](https://github.com/qutip/qutip/blob/master/qutip/sesolve.py)). The analogous file to sesolve.py can be found at [PyKrylovsolver/krylovsolve.py](https://github.com/emilianomfortes/krylovsolver/blob/qutip/PyKrylovsolver/krylovsolve.py). **Additional context**; [Krylovsolver](https://github.com/emilianomfortes/krylovsolver) has been developed via the Unitary-fund [grants](https://unitary.fund/grants.html) program.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1668:428,adapt,adapted,428,https://qutip.org,https://github.com/qutip/qutip/issues/1668,1,['adapt'],['adapted']
Energy Efficiency,"**Description**; When allocating memory in cython, we did not check if the memory was allocated or not due to lacking RAM.; `kron_dia` was particularly inefficient for `bra & ket` combination., which caused a segfault in the `steadystate` benchmarks.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2224:86,allocate,allocated,86,https://qutip.org,https://github.com/qutip/qutip/pull/2224,1,['allocate'],['allocated']
Energy Efficiency,"**Description**; When the number of excitations in `state_number_enumerate` is limited, instead of iterating over all states and discarding the ones with too many excitations, directly choose the limits to only iterate over allowed states. As a small additional optimization, do not redo the same sum every time, but keep track of the sum within the algorithm. For the tests I've made, this is a factor of ~4-10 faster than the current version. Together with #1593, this reduces the runtime of `enr_destroy` (which uses `state_number_enumerate`) from almost 4s to 15 ms for the case I just treated, and another much bigger case takes 2.5 s now, while it hadn't finished after more than an hour with the previous version. Note that since the two PRs (this one and #1593) are somewhat related, it might make sense to combine them into a single one. I'd be happy to do that. **Changelog**; Made state_number_enumerate somewhat faster.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1594:471,reduce,reduces,471,https://qutip.org,https://github.com/qutip/qutip/pull/1594,1,['reduce'],['reduces']
Energy Efficiency,"**Description**; When we can't allocate enough memory for a matrix, there was no error message.; For sparse array, were the users expect the it not to take that much space, this can be confusing.; I added error message which tell the shape of the matrix and number of elements. It won't help much, but may show that the matrix is not as sparse as expected. **Related issues or PRs**; #2299",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2304:31,allocate,allocate,31,https://qutip.org,https://github.com/qutip/qutip/pull/2304,1,['allocate'],['allocate']
Energy Efficiency,"**Is your feature request related to a problem? Please describe.**; A lot of issues in test fail seem to arise from random objects (as well as low-level math in MKL and/or cython issues). . **Describe the solution you'd like**; There are several options at hand. . ### stick to pytest and be creative; A possible fix in testing may be to add randomly generated data that then is pointed at or fix seeds.; **Pros**: fast (?); **Cons**: technical debt. ### pytest-randomly plugin; [pytest-randomly](https://github.com/pytest-dev/pytest-randomly) is a pytest plugin that addresses this kind of issues. It allows to control `random.seed`, rather than `numpy.random.seed`. ; **Pros**: pytest plugin, supports doctest. ; **Cons**: not super popular, not designed for numpy; ; ### property-based testing with Hypothesis; Hypothesis is a library that aims at changing the way tests are designed, allegedly: it should go from testing an instance to designing a test that applies to a domain of instances ([property-based testing](https://hypothesis.works/)). It is not super clear to me right now. ; It contains various randomness-related features, including a [seed function](https://hypothesis.readthedocs.io/en/latest/reproducing.html#hypothesis.seed). **Pros**: sounds powerful and clever, popular and growing, well documented, more robust even beyond this randomness problems.; **Cons**: radical change of testing framework (?), steep learning curve (?), overkill (?). I also admit I used nose until recently / used with pytest tests thought for nose, without taking advantage of pytest full power.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1268:1264,power,powerful,1264,https://qutip.org,https://github.com/qutip/qutip/issues/1268,2,['power'],"['power', 'powerful']"
Energy Efficiency,"**Is your feature request related to a problem? Please describe.**; In the device simulator of QuTiP (`qutip.qip.device`), a quantum computing device is characterized by the class `Processor` and its subclasses. It contains information about the available control pulses. In addition, a compiler is used to compile a set of universal quantum gates (e.g. RX, RY and ISWAP) into the corresponding control pulses. Together, they can automatically compiler an arbitrary quantum circuit into control pulses, create the time-dependent Hamiltonian representation and run the simulation using QuTiP solvers. However, in the current version, this compilation is done for each gate sequentially. At each time step, there is only one control pulse active. In practice, it is inefficient because usually several gates can be performed parallelly (e.g. X gate on qubit 0 and qubit 1). To make the compilation more practical, it is necessary to introduce a scheduler that schedules the control pulses. A similar example is https://qiskit.org/documentation/apidoc/pulse.html#schedules. **Describe the solution you'd like**; There is existing research (https://arxiv.org/pdf/1708.00023.pdf) on gate-level scheduling. It studies which gates can be performed at the same time. In the most general case, however, gate-level scheduling is not enough, since different gates often have different runtime (.e.g. CNOT usually takes longer time than X gate). Despite the difference, pulse-level scheduling can be done in a similar way as gate-level scheduling by generating a graph (see the reference above). The difference is that each pulse will have its own duration. The possible implementation in `qutip.qip` could be in two steps:; - Modernize the current compiler and create an `Instruction` class representing each compiled control instruction (pulse, qubit index, amplitude, duration).; - Implement the scheduling algorithm similar as in the above reference.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1243:943,schedul,scheduler,943,https://qutip.org,https://github.com/qutip/qutip/issues/1243,8,['schedul'],"['scheduler', 'schedules', 'scheduling']"
Energy Efficiency,"*Methods**. - The scheduler first generates a quantum gates dependency graph, containing information about which gates have to be executed before some other gates because they do not commute. The graph preserves the mobility of the gates, i.e. commuting gates are not dependent on each other, even if they use the same qubits. ; - Next, it computes the longest distance of each node to the start and end nodes. The distance for each dependency arrow is defined by the execution time of the instruction (By default, it is 1 for all gates). This is used as a priority measure in the next step. The gate with a longer distance to the end node and a shorter distance to the start node has higher priority.; - In the last step, it uses a list-schedule algorithm with hardware constraint (e.g. gates using the same qubits) and priority and returns a list of cycles for gates.; - Since it's heuristics, sometimes it does not find the optimal. It offers an option that randomly shuffles the gates (if commuting) and repeats the scheduling a few times to get a better result. For scheduling quantum instructions, of which the runtime of different gates might differ, an additional step is required to compute the scheduled start time of each instruction.; It adds the additional dependency caused by hardware constraint to the graph and recomputes the distance of each node to the start and end node. This distance is then converted to the start time of each instruction. **Example**; ```python; >>> from qutip.qip.circuit import QubitCircuit; >>> from qutip.qip.scheduler import Scheduler; >>> circuit = QubitCircuit(7) ; >>> circuit.add_gate(""SNOT"", 3) # gate0; >>> circuit.add_gate(""CZ"", 5, 3) # gate1; >>> circuit.add_gate(""CZ"", 4, 3) # gate2; >>> circuit.add_gate(""CZ"", 2, 3) # gate3; >>> circuit.add_gate(""CZ"", 6, 5) # gate4; >>> circuit.add_gate(""CZ"", 2, 6) # gate5; >>> circuit.add_gate(""SWAP"", [0, 2]) # gate6; >>>; >>> scheduler = Scheduler(""ASAP""); >>> scheduler.schedule(circuit, gates_schedule=Tru",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1273:1736,schedul,scheduling,1736,https://qutip.org,https://github.com/qutip/qutip/pull/1273,1,['schedul'],['scheduling']
Energy Efficiency,"+1. This looks like a good PR to me. Just a quick note: We have had some side-effect issues when changing how isherm and other cached attributes are handled in the past, in particular with respect to performance. I used to monitor the performance over time with the continous-benchmarking suite in one of the respositories in the project, and that was sometimes useful to find unexpected performance hits. . Hopefully this PR will only improve performance, but it could still be worthwhile to check that for example the unit test suite does not take longer time on this branch than on master.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/359#issuecomment-130549106:223,monitor,monitor,223,https://qutip.org,https://github.com/qutip/qutip/pull/359#issuecomment-130549106,1,['monitor'],['monitor']
Energy Efficiency,- Separate power Liouvillian creation to its own function.; - build_preconditoner now works for power method when using; method=‘power’ kwarg.; - Fixed missing RCM time calculation in power method.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/328:11,power,power,11,https://qutip.org,https://github.com/qutip/qutip/pull/328,4,['power'],['power']
Energy Efficiency,- This is Py3 as to not avoid conflicts with the built in Python.; - Installs master branch of qutip.; - Shamelessly adapted from the SciPy Superpack.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/279:117,adapt,adapted,117,https://qutip.org,https://github.com/qutip/qutip/pull/279,1,['adapt'],['adapted']
Energy Efficiency,"--. Just in the interest of completeness, let me also just bring up some of the sweeping changes we'll bringing in in QuTiP 5.0 as well, which massively overhaul how `Qobj` is constructed, and how its data is stored. These aren't _directly_ applicable to the current discussion, but they're worth keeping in mind since they're a huge overhaul of how things will be handled, and may have some implications for how implementors of this interface might behave. The new `Qobj` will no longer have the same `fast_csr_matrix` type as its `data` attribute, but instead will have an extensible data type. The two that will be distributed with the library will be `Dense` and `CSR` (which simply do what they say on the tin), and all linear algebra operations between multiple `Qobj` are handled by a custom multiple-dispatch system that allows additional specialisations to be added in a similar way to Julia. Say you want to define `matmul` between `Dense` on the left and `CSR` on the right to produce a `CSR` output (a specialisation that we likely won't ship with because it's unlikely to be efficient). You'd write your function; ```python; def matmul_dense_csr_csr(left, right):; ...; return out; ```; and then because unlike Julia it's not built-in, you just manually add it to the dispatch table for `matmul`:; ```python; qutip.data.matmul.add_specialisations(matmul_dense_csr_csr, (Dense, CSR), CSR); ```; QuTiP then knows about it, so it'll get used when appropriate. You can also add entirely new types to the dispatch table by adding them to the ""cast"" table `qutip.data.to`, giving at least one method to convert the new type into an already-known one, and at least one method to convert an already-known type into the new type. QuTiP will then be able to use the entirely new type as `Qobj.data` for every single operation within the library (though it won't be super efficient until you add the linear algebra specialisations you use most). This actually goes a bit beyond what Julia does (at ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-825608507:5103,efficient,efficient,5103,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-825608507,1,['efficient'],['efficient']
Energy Efficiency,". The gate with a longer distance to the end node and a shorter distance to the start node has higher priority.; - In the last step, it uses a list-schedule algorithm with hardware constraint (e.g. gates using the same qubits) and priority and returns a list of cycles for gates.; - Since it's heuristics, sometimes it does not find the optimal. It offers an option that randomly shuffles the gates (if commuting) and repeats the scheduling a few times to get a better result. For scheduling quantum instructions, of which the runtime of different gates might differ, an additional step is required to compute the scheduled start time of each instruction.; It adds the additional dependency caused by hardware constraint to the graph and recomputes the distance of each node to the start and end node. This distance is then converted to the start time of each instruction. **Example**; ```python; >>> from qutip.qip.circuit import QubitCircuit; >>> from qutip.qip.scheduler import Scheduler; >>> circuit = QubitCircuit(7) ; >>> circuit.add_gate(""SNOT"", 3) # gate0; >>> circuit.add_gate(""CZ"", 5, 3) # gate1; >>> circuit.add_gate(""CZ"", 4, 3) # gate2; >>> circuit.add_gate(""CZ"", 2, 3) # gate3; >>> circuit.add_gate(""CZ"", 6, 5) # gate4; >>> circuit.add_gate(""CZ"", 2, 6) # gate5; >>> circuit.add_gate(""SWAP"", [0, 2]) # gate6; >>>; >>> scheduler = Scheduler(""ASAP""); >>> scheduler.schedule(circuit, gates_schedule=True) ; [0, 1, 3, 2, 2, 3, 4]; ```; The result list is the cycle indices for each gate. It means that the circuit can be executed in 5 gate cycles:; ```; gate0; gate1; gate3, gate4; gate2, gate5; gate6; ```; Notice that gate3 and gate4 commute with gate2, therefore, the order is changed to reduce the number of cycles. **Related issues or PRs**; Solve #1243 . **Changelog**; Add a gate(pulse) scheduler for quantum circuit. **Others**; @sarsid Maybe you will be interested in it. It can be used to determine which gates can be executed at the same time. So maybe we can improve the efficienc",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1273:2270,schedul,scheduler,2270,https://qutip.org,https://github.com/qutip/qutip/pull/1273,2,"['Schedul', 'schedul']","['Scheduler', 'scheduler']"
Energy Efficiency,"0.001422, 0.001352, 0.001245, 0.001121, 0.000996,; E 0.000879, 0.000773]). /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib/python3.9/site-packages/qutip/tests/test_countstat.py:58: AssertionError; _________________________________________________________________________ test_scheduling_gates3[circuit2 ALAP no shuffle] __________________________________________________________________________. circuit = <qutip.qip.circuit.QubitCircuit object at 0x12c081640>, method = 'ALAP', expected_length = 5, random_shuffle = False, gates_schedule = False. @pytest.mark.parametrize(; ""circuit, method, expected_length, random_shuffle, gates_schedule"",; [; pytest.param(deepcopy(_circuit2()), ""ALAP"", 5, False, False, id=""circuit2 ALAP no shuffle""); ]); def test_scheduling_gates3(; circuit, method, expected_length, random_shuffle, gates_schedule):; if random_shuffle:; repeat_num = 5; else:; repeat_num = 0; result0 = gate_sequence_product(circuit.propagators()); ; # run the scheduler; scheduler = Scheduler(method); gate_cycle_indices = scheduler.schedule(; circuit, gates_schedule=gates_schedule, repeat_num=repeat_num); ; # check if the scheduled length is expected; > assert(max(gate_cycle_indices) == expected_length); E assert 4 == 5; E +4; E -5. /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib/python3.9/site-packages/qutip/tests/test_scheduler.py:143: AssertionError; __________________________________________________________________________________ test_driven_cavity[power-gmres] __________________________________________________________________________________. method = 'power-gmres', kwargs = {'M': <900x900 _CustomLinearOperator with dtype=complex128>, 'mtol': 0.1, 'use_precond': 1}. @pytest.mark.parametrize(['method', 'kwargs'], [; pytest.param('direct', {}, id=""direct""),; pytest.param('direct', {'sparse':False}, id=""direct_dense""),; pytest.param('eigen', {}, id=""eigen""),; pytest.param('svd', {}, id=""svd""),; pytest.param('power', {'mtol':1e-5}, id=""power""),; pytest",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1755:3792,schedul,scheduler,3792,https://qutip.org,https://github.com/qutip/qutip/issues/1755,4,"['Schedul', 'schedul']","['Scheduler', 'scheduler']"
Energy Efficiency,"0: API 'r'; 61503 bytes originally requested; The 7 pad bytes at p-7 are FORBIDDENBYTE, as expected.; The 8 pad bytes at tail=0x7f98cc476def are not all FORBIDDENBYTE (0xfd):; at tail+0: 0x00 *** OUCH; at tail+1: 0x00 *** OUCH; at tail+2: 0x00 *** OUCH; at tail+3: 0x00 *** OUCH; at tail+4: 0x00 *** OUCH; at tail+5: 0x00 *** OUCH; at tail+6: 0x00 *** OUCH; at tail+7: 0x00 *** OUCH; Data at p: dd dd dd dd dd dd dd dd ... 00 00 00 00 00 00 00 00. Enable tracemalloc to get the memory block allocation traceback. Fatal Python error: bad trailing pad byte; Python runtime state: finalizing (tstate=0x7f98c9d018e0). Current thread 0x0000000109fe85c0 (most recent call first):; <no Python frame>; Abort trap: 6; ```. So these both use `scipy.linalg.eig`, which is suspicious. ## Valgrind checks. To see if I could track it down, I had a go with valgrind. This isn't guaranteed to find everything, because I'm not using a debug build of Python, and Python also typically optimises small allocations by using a custom allocator into some pre-allocated space it manages itself - invalid writes that still fall within this may not get detected by valgrind. Here is the output of `valgrind` running on the `kraus.py` file I wrote in the previous section: [kraus_valgrind.txt](https://github.com/qutip/qutip/files/6370180/kraus_valgrind.txt) (note I filtered out like 30,000 errors that stem from Python's internal memory management - they're nothing to worry about, they're just what happens when you have your own allocator). The important part is. ```; ==54133== Invalid write of size 8; ==54133== at 0x10AFAFA8A: ??? (in /Users/jake/.anaconda3/envs/py38/lib/libmkl_intel_thread.dylib); ==54133== by 0xFFFFFFFF: ???; ==54133== by 0x1162E4DEF: ???; ==54133== by 0x1162E3A5F: ???; ==54133== by 0x10550EB3F: ???; ==54133== by 0x3FEFFFFFFFFFFFFF: ???; ```. Obviously I don't have the debugging symbols for MKL, so it's pretty hard to say where exactly it's coming from, but it is at least clearly inside that l",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:5206,allocate,allocated,5206,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807,1,['allocate'],['allocated']
Energy Efficiency,"241 +1.18017809e+000j 0.00000000e+000 +1.33956231e+000j; 1.33956231e+000 +0.00000000e+000j 1.48170345e+000 +0.00000000e+000j; 1.84311049e+000 +0.00000000e+000j 9.48683298e-001 +0.00000000e+000j]]; Quantum object: dims = [[1], [10]], shape = (1, 10), type = bra; Qobj data =; [[ 0.31622777+0.j 0.76344136+0.j 0.00000000+0.j; 0.00000000+0.j 0.00000000+1.18017809j 0.00000000+1.33956231j; 1.33956231+0.j 1.48170345+0.j 1.84311049+0.j; ```; I did the same test on two machines and on my old laptop it works fine, so it probably is something architecture dependent. The output of lscpu is:; ```; Architecture: x86_64; CPU op-mode(s): 32-bit, 64-bit; Byte Order: Little Endian; CPU(s): 8; On-line CPU(s) list: 0-7; Thread(s) per core: 1; Core(s) per socket: 8; Socket(s): 1; NUMA node(s): 1; Vendor ID: GenuineIntel; CPU family: 6; Model: 63; Model name: Intel(R) Core(TM) i7-5960X CPU @ 3.00GHz; Stepping: 2; CPU MHz: 1199.890; CPU max MHz: 3500,0000; CPU min MHz: 1200,0000; BogoMIPS: 5989.11; Virtualization: VT-x; L1d cache: 32K; L1i cache: 32K; L2 cache: 256K; L3 cache: 20480K; NUMA node0 CPU(s): 0-7; Flags: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm epb intel_ppin tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid cqm xsaveopt cqm_llc cqm_occup_llc dtherm ida arat pln pts; ```; I'll gladly provide any additional information that might be needed. It's definitely a possibility that I did something wrong in the build process of either qutip itself (this is the archlinux build script: https://aur.archlinux.org/cgit/aur.git/tree/PKGBUILD?h=python-qutip) or one of its libraries. Any ideas?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/681:3378,monitor,monitor,3378,https://qutip.org,https://github.com/qutip/qutip/issues/681,1,['monitor'],['monitor']
Energy Efficiency,"2dd4680 and b6dcc28 fix the occasional segfaults I was getting, I believe. The error in `reshape_csr` was probably the randomly appearing one - I assume that for it to cause a segfault, either the output CSR needed to have been allocated on the edge of allocated memory (and then I probably would have seen it in the stack trace with `faulthandler`), or it needed to be called on a sufficiently small matrix that `mem.PyMem_Malloc` allocated into Python stack memory such that the next byte after `out.row_index` pointed into freed Python memory, causing a checksum error on the next `PyMem_Malloc` that hit it, or `PyMem_Free` on a previously created object. I was able to track down where these were coming from by judicious use of `gcc -fsanitize`, although had we been using Cython's `typedmemoryview`, setting `boundscheck=True` would also have caught it. Likewise, the error in `permute.dimensions_csr` would have been caught by setting `cdivision=False`, but I just didn't think to try that. It's probably not worth swapping to memory views just because of this, though - I was able to find it easily enough with `AddressSanitizer`, and memory views have a very non-trivial overhead on initialisation for our use case.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1332#issuecomment-668847474:228,allocate,allocated,228,https://qutip.org,https://github.com/qutip/qutip/pull/1332#issuecomment-668847474,3,['allocate'],['allocated']
Energy Efficiency,"3 #(*[MHz] waste mode cavity frequency*); gdw = 2* np.pi* 16.6 #12 #(*[MHz]external decay rate of waste mode*). ###definitions; def J_cb(omega):; """""" Noise spectral density """"""; #print ""evaluate J_cb for omega ="", omega; return 0.5 * gdw /(2*np.pi) # 2*gdw/(np.pi**2). def cos_drv(t, args):; return np.cos(wd*t); ###=========================================================================================================; ###Set the dimensions of the Hilbert space of each participating quantum system; ###=========================================================================================================; ### resonator; d1 = 3; ### create ""annihilation operator; aw = destroy(d1). #%%=============================================================================; #=========================Lindbald operators==================================; #=============================================================================. ###L operators; Lindblad=[]; Lindblad.append(np.sqrt(gdw)* aw ) #qubit energy relaxation. ###=============================================================================; #========================= Hamiltonian ==================================; #=============================================================================; ### external driving term; ### drive; Pp = -60 # dBm. wd = ww # waste mode frequency; pin = np.sqrt(2*np.pi*10**(-(3) + -6 -8.189 + Pp/10)/(hbar*(wd))) #att = -10.2; #%% bare modes representation; Htot = ww*aw.dag()*aw; LDrv=1j*pin*np.sqrt(gdw)* aw. H = [Htot, [LDrv + LDrv.dag(), cos_drv]]; ### initial state; psi0 = Htot.groundstate()[1]; ###; # --------------------------------------------------------------------------; ### 4) Floquet markov master equation dynamics; args = {} ; ### Time evolution; T = 2*np.pi / wd ; dt=T #[us] ; tb=0.2 #[us] single photon drive pulse length; tlist = np.arange(0, tb, dt). f_modes_0,f_energies = floquet_modes(H, T, args) . ### decompose the initial state vector in terms of the floquet modes (basis; #",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2097:2912,energy,energy,2912,https://qutip.org,https://github.com/qutip/qutip/issues/2097,1,['energy'],['energy']
Energy Efficiency,"3) # Initial point normalized; > r2 = np.array([1, 0, 0]) # Final point; > t = np.linspace(0,1,100) # Parametrization; > ; > # All the points in this line are contained in the plane defined by r1 and r2.; > line = r1[:, np.newaxis]*t + r2[:, np.newaxis]*(1-t) ; > ; > # This will normalize all the points in the line such that they now have length 1 with respect to the center of the sphere. ; > # Since the points are still contained in the plane defined by r1 and r2, this will be the arc you are looking for.; > arc = line/np.linalg.norm(line, axis=0); > ; > b.add_points([arc[0,:], arc[1,:], arc[2,:]], meth='l'); > b.render(); > ```; > ; > I agree that this is not straightforward and hence QuTiP will benefit from having the method `add_arc`. I would however suggest changing the implementation using an algorithm based on the code I propose in this comment, as it requires far less lines of code and hence it is easier to both understand how it is implemented and to maintain it.; > ; > Regarding to `add_line` I would vote to not include it as a method here. Instead, I would provide an explicit example in the documentation showing how to draw lines with `add_points` to make it more discoverable. I believe that not being able to change the line style easily is a problem that this PR should not tackle. I think it would be great if in the future `add_points` and `add_states` could accept a kwarg that is directly passed to `matplotlib`. This would facilitate drawing with arbitrary styles. Thanks, @AGaliciaMartinez. Also, this is a wonderful suggestion, and it reduces the number of lines of codes by a lot. The only issue that arises is when the points are diagonally opposite but that can be fixed. ; So, is it okay if I take your code above, modify it for the general scenario, make changes to the `add_arc`, and push it again? I'm sorry I haven't contributed before and hence, don't know what is right or what counts as plagiarism. Please suggest @AGaliciaMartinez @hodgestar @BoxiLi",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1685#issuecomment-937556421:2218,reduce,reduces,2218,https://qutip.org,https://github.com/qutip/qutip/pull/1685#issuecomment-937556421,1,['reduce'],['reduces']
Energy Efficiency,"3, 8]; matlab: [0, 8, 5, 7, 3, 6, 4, 2, 1, 9]; ```; (where I converted the `matlab` indexing into 0-based), however they both have the same ""bandwidth"" of 5, so I assume they are all equivalent. I don't really know anything about the theory here, and just went with what the `matlab` documentation said: https://uk.mathworks.com/help/matlab/ref/symrcm.html. In commit 0ce36d00 it is clear that the functions in `qutip.graph` were meant to be distinct from `Qobj`, so ideally they would be beyond our purview in this package. This actually has already lead to problems with the documentation, since the docstrings in; https://github.com/qutip/qutip/blob/01132789581821517986fad1a14ab3feec7d2de2/qutip/graph.py#L50-L53; and; https://github.com/qutip/qutip/blob/01132789581821517986fad1a14ab3feec7d2de2/qutip/graph.py#L71-L74; are out-of-date. I find that the only uses of `qutip.graph` are in `qutip.steadystate`, which uses `reverse_cuthill_mckee` and `weighted_bipartite_matching`. The former can be replaced directly with the `scipy` version, at the cost of ~10% speed. The latter is not yet in `scipy`, so we ought to perhaps keep it, since it is used and documented for `qutip.steadystate.steadystate`. All other functions in `qutip.graph` are not used, and not documented (and in `scipy` anyway). While obviously I don't want to trample on anybody's code, I think it might be worth considering how we can reduce the package complexity of `qutip`, especially while significant new complexity is frequently being added in the interests of speed. We only have a finite amount of resources to maintain the codebase, and it's already quite difficult to get a handle on bug reports, documentation, testing (what I'm working on in #1181), and keeping old features up-to-date with the new. In the tracking down of these points, I can also strongly advocate for a stricter policy on `git` commit messages and keeping the commit history tidy and descriptive, but I'll live to fight another day on that one!",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1203:3714,reduce,reduce,3714,https://qutip.org,https://github.com/qutip/qutip/issues/1203,1,['reduce'],['reduce']
Energy Efficiency,"5, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 186, in run; _build_ext.build_ext.run(self); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 194, in build_extensions; self.build_extension(ext); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 533, in build_extension; depends=ext.depends); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 345, in compile; self.initialize(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 238, in initialize; vc_env = _get_vc_env(plat_spec); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 134, in _get_vc_env; raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); ImportError: Building module rhs278052 failed: ['distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat\n']. ======================================================================; ERROR: Steady state: Driven cavity - power-gmres solver; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\tests\test_steadystate.py"", line 490, in test_driven_cavity_power_gmres; use_precond=1); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\steadystate.py"", line 306, in steadystate; return _steadystate_power(A, ss_args); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\steadystate.py"", line 938, in _steadystate_power; check)); Exception: power-gmres failed to find solution in 1000 iterations. ----------------------------------------------------------------------; Ran 564 tests in 898.617s. FAILED (SKIP=9, errors=57)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467317662:29671,power,power-gmres,29671,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467317662,2,['power'],['power-gmres']
Energy Efficiency,"79 errors and spaces around kwarg equals, were not shown as problematic using PyCharm's PEP8 linter with default inspection profile - can you provide steps to reproduce? However, I think that some bits that PEP8 classifies as problematic shouldn't be changed for notational consistency, such as H = hamiltonian, and my usage of T and W in the code and the notebook to denote number of time bins and waveguides. > Moving `__all__` to after import statements. I declared `__all__` in its current location because almost universally, all (heh) top-level qutip modules declare it before imports. (I actually checked about a dozen of these and can't find any instance of it being after imports.) I think this might be worth changing to comply with PEP8, but I think it should be done after the module is added in a separate commit where all occurrences of this are changed across QuTiP. > Shortening argument / function names. I'll respond to each proposed change individually, but in general I disagree with most of these proposed changes since I think they reduce conceptual clarity. (For example, `temporal_basis_vector` returns a specific vector in the temporal basis; I would expect a function named `temporal_basis` to return an enumeration of all basis vectors.) However, I will try to think of shorter names which don't reduce clarity and will make changes if I come up with any. > Moving temporal_scattered_state, scattering_probability, and temporal_basis_vector into a new class. I think this is the only proposed change worth significant amounts of discussion, and it's actually something I had considered before. I'm conflicted about whether this change would be good or not, and I would value input from everyone involved in this review process (@sahmed95 , @kafischer, @nonhermitian, @ajgpitch). I've outlined my thoughts on the pros and cons of this change below. **Pros:**; - Consolidating these functions to class methods would be convenient in terms of reducing verbosity, since you woul",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/848#issuecomment-384821368:1756,reduce,reduce,1756,https://qutip.org,https://github.com/qutip/qutip/pull/848#issuecomment-384821368,1,['reduce'],['reduce']
Energy Efficiency,"; > > > warnings.warn(msg); > > > ok; > > > Superoperator: Converting superoperator to Choi matrix and back. ... ok; > > > Superoperator: Test that to_super(q) returns q if q is already a ... ok; > > > Superoperator: Checks that the trace of matrices returned by to_choi ... ok; > > > Superoperator: Checks that iscp, istp and iscptp work in a few different ... ok; > > > Superoperator: Checks that randomly generated superoperators are ... ok; > > > Superoperator: Randomized comparison of standard and optimized ... ok; > > > Superoperator: Conversion matrix to vector to matrix ... ok; > > > Superoperator: Test unitary transformation with operators and superoperators. ... ok; > > > Superoperator: Test compability between matrix/vector conversion and ... ok; > > > Superoperator: Conversion between matrix and vector indices ... ok; > > > Superoperator: Conversion vector to matrix to vector ... ok; > > > qutip.tests.test_superoperator.TestMatrixVector.test_reshuffle ... ok; > > > utilities: energy unit conversions ... ok; > > > wigner: test wigner function calculation for coherent states ... ok; > > > wigner: test wigner function calculation for Fock states ... ok; > > > wigner: compare wigner methods for random density matrices ... ok; > > > wigner: compare wigner methods for random state vectors ... ok; > > > Wigner: Compare Wigner fft and iterative for rand. ket ... ok; > > > Wigner: Compare Wigner fft and iterative for rand. dm ... ok. # . ## ERROR: Qobj addition. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_Qobj.py"", line 139, in test_QobjAddition; assert_equal(q4.type, ischeck(q4)); NameError: global name 'ischeck' is not defined. # . ## FAIL: Qobj power. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(_self.arg); File ""/usr/local/lib/python2.7/di",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/126#issuecomment-42855884:11578,energy,energy,11578,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884,1,['energy'],['energy']
Energy Efficiency,"; > quantum circuit simulator (which was a GSoC project) providing enhanced; > features for a pulse-level description of quantum circuits and noise; > models. A new class Processor and several subclasses are added to; > represent different platforms for quantum computing. They can transfer a; > quantum circuit into the corresponding control sequence and simulate the; > dynamics with QuTiP solvers. Different noise models can be added to; > qutip.qip.noise to simulate noise in a quantum device.; >; > This module is still young and many features can be improved, including; > new device models, new noise models and integration with the existing; > general framework for quantum circuits (qutip.qip.circuit). There are; > also possible applications such as error mitigation techniques [1-3].; >; > The tutorial notebooks can be found at; > http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM; > conference may help you get an overview (; > https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the; > Github Project page for a collection of related issues and ongoing Pull; > Requests.; > Expected outcomes; >; > - More devices defined in the qutip.qip.device module. At the moment,; > we have two models: spin chain and cavity QED. We would like to include; > some other commonly used planform such as Superconducting system, Ion trap; > system or silicon system. Each model will need a new set of control; > hamiltonian and a compiler that find the control pulse of a quantum gate.; > This part is gonna involve some physics and study of commonly used hardware; > platforms. The related code can be found in qutip.qip.device and; > qutip.qip.compiler; > - Refactoring the circuit compiler to allow simple pulse scheduling,; > e.g. Restriction one pulses that can be turned on at the same time.; > - Features to perform error mitigation techniques in QuTiP, such as; > zero-error extrapolation.; > - APIs to allow import quantum circuits from other software packa",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1184#issuecomment-590726313:1871,schedul,schedule,1871,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590726313,1,['schedul'],['schedule']
Energy Efficiency,"<!-- **Checklist**; Thank you for contributing to QuTiP! Please make sure you have finished the following tasks before opening the PR. - [ ] Please read [Contributing to QuTiP Development](http://qutip.org/docs/latest/development/contributing.html); - [ ] Contributions to qutip should follow the [pep8 style](https://www.python.org/dev/peps/pep-0008/).; You can use [pycodestyle](http://pycodestyle.pycqa.org/en/latest/index.html) to check your code automatically; - [ ] Please add tests to cover your changes if applicable.; - [ ] If the behavior of the code has changed or new feature has been added, please also update the documentation in the `doc` folder, and the [notebook](https://github.com/qutip/qutip-notebooks). Feel free to ask if you are not sure.; - [ ] Include the changelog in a file named: `doc/changes/<PR number>.<type>` 'type' can be one of the following: feature, bugfix, doc, removal, misc, or deprecation (see [here](http://qutip.org/docs/latest/development/contributing.html#Changelog%20Generation) for more information). Delete this checklist after you have completed all the tasks. If you have not finished them all, you can also open a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/) to let the others know this on-going work and keep this checklist in the PR description.; -->; **Description**. This PR reduced the qutip import time by setting the logger names explicitly. . **Related issues or PRs**. See #1980 for more details.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1981:1370,reduce,reduced,1370,https://qutip.org,https://github.com/qutip/qutip/pull/1981,1,['reduce'],['reduced']
Energy Efficiency,"> ; > ; > Different platforms have some subtle differences in how multiprocessing works: On linux, processes ""fork"". My basic understanding is that sub-processes are created as copies of the parent process, thus inheriting their entire state (global variables/functions). Windows, and [macOS with Python >= 3.8](https://twitter.com/raymondh/status/1180209729609420800) uses ""spawn"". There, I believe subprocesses start from blank slate, and relevant global state is injected via IPC. Sadly, limitations of the pickle protocol can cause ""spawn""-based multiprocessing to have problems.; > ; > Jupyter notebooks are affected by this: you cannot use multiprocessing-map using functions defined within the notebook.; > ; > Within qutip, this definitely affects the `parallel_map` function: It currently will cause freezes on Windows (See https://qucontrol.github.io/krotov/v1.0.0/notebooks/08_example_ensemble.html). With Python 3.8, macOS is also affected by this. See [qutip/qutip-notebooks#100](https://github.com/qutip/qutip-notebooks/issues/100); > ; > One possible workaround is to use a third-party replacement for multiprocessing. An work-in-progress implementation of this is in #1092, using [loky](https://loky.readthedocs.io).; > ; > In #1197, we also identified a freeze in `mcsolve` when running tests on macOS/Python 3.8. This is suspected to be an issue with spawn-based multiprocessing, although we haven't been able to determine this with complete confidence.; > ; > If the freeze is indeed caused by spawn-multiprocessing, the problem _should_ also show up on Windows. Is anyone running Windows able to reproduce this?. Windows doesn't have 'fork' at all, if we want to make parallel_map work under windows, we have to find ways to 'spawn' efficiently.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1202#issuecomment-683628416:1753,efficient,efficiently,1753,https://qutip.org,https://github.com/qutip/qutip/issues/1202#issuecomment-683628416,1,['efficient'],['efficiently']
Energy Efficiency,"> > Thanks, @AGaliciaMartinez. Also, this is a wonderful suggestion, and it reduces the number of lines of codes by a lot. The only issue that arises is when the points are diagonally opposite but that can be fixed.; > ; > Good point! I did not consider that initially. For this case, since it is not possible to define a single arc but rather there are infinite possibilities, I would suggest to simply raise an exception. What do you think @gaurav-iiser ?. Yes, I think raising an exception is a good idea. > ; > > So, is it okay if I take your code above, modify it for the general scenario, make changes to the add_arc, and push it again?; > ; > I think there is an option somewhere to make someone a coauthor of the code, but do not worry about that, it is not necessary here. You can either push the changes to this pull request or, since this will require significant changes to the code, you could create a new one. I personally prefer creating a new PR since it leaves a cleaner commit history, but both are fine. Thanks again for your advice. :); I will probably create a new PR in a day or two by making respective changes to `add_arc`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1685#issuecomment-937583899:76,reduce,reduces,76,https://qutip.org,https://github.com/qutip/qutip/pull/1685#issuecomment-937583899,1,['reduce'],['reduces']
Energy Efficiency,"> Assuming Simon's point isn't just a complete answer to your question: in the general case, this is an impossible question to answer - it touches on many parts of numerical integration, such as tolerance limits and adaptive step-size methods. When you're dealing with completely arbitrary time-dependence, there's not really any one-size-fits-all approach that'll work (despite how RK45 is often taught as a magic bullet in physics courses).; > ; > Here, you will likely find that your RK45 results depend strongly on how many intermediate timesteps you use, whereas QuTiP's results will be (marginally) more stable. This is because QuTiP will internally subdivide the timesteps more to achieve internal precision goals, but then only returns the results at the time points you ask for. You can increase the maximum number of allowed subdivisions by increasing the `nsteps` parameter in a `qutip.Options` object, and with the `options` keyword argument. I addressed Simon's question. Also, I tried different solver options in mesolve including solver type, nsteps, relative and absolute tolerence, etc ... Also for RK45 I tried to change the parameters in order to see if the solutions coincide. They didn't. I don't know if there exists an analytically solvable problem in which both Hamiltonian and dissipation operators are time dependent, but if there is such a problem, then I can use it as a benchmark in order to compare QuTiP and RK45.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1733#issuecomment-986665248:216,adapt,adaptive,216,https://qutip.org,https://github.com/qutip/qutip/issues/1733#issuecomment-986665248,1,['adapt'],['adaptive']
Energy Efficiency,"> However if `default_dtype` can be seen as _running in that mode_, it certainly could cause confusion. It's not clear how it is understood in some places. In `eigenstates`, if we run in `CSR` mode, then does that mean that we use the sparse eigen solver? It's a lot worst than the dense one. Or should only the returned ket be in CSR format?; > ; > In my tries, the dense steadystate was faster that the sparse one. Could it be an issue that some matrices where too big to fit in RAM forcing to use swap space? We could have a warning when matrices over a certain size are allocated. I guess this was mostly because I wasn't explicitly calling steadystate with sparse=False so it was getting converted back to CSR anyway, and slowing things down. Largely I see similar performance between CSR and dense (using sparse=False), unless I use very small systems (16x16 Liouvillians), though this seemed a bit scipy/method dependent. I guess as you said this also raises the question about whether stuff like eigenstates and steadystate() should default to using methods based on the data layer of the object, instead of kwargs? My feeling is not, since eigenstates+sparse can be bad and steadystate+largesystem+dense could be bad, so its worth having some default conversion cost in place. But I still like the idea of what gets returned to the user following default_dtype. but maybe we can see if this turns out to be an issue that people have in using data layers, could just be me!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2328#issuecomment-1953388192:574,allocate,allocated,574,https://qutip.org,https://github.com/qutip/qutip/issues/2328#issuecomment-1953388192,1,['allocate'],['allocated']
Energy Efficiency,"> If it's a known issue, let's leave it for when we switch CI to GitHub Actions (assuming that's the choice we end up making). It's very very difficult to tell, because Travis seem to be aggressively winding down the processing power available to us on Macs - I can't tell if there's a problem in this code, if Travis are over-stuffing their Xcode 12 machines with too many VMs, or even if it's some weird emulation (I think Azure _emulates_ PPC architectures if you ask for them!).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1465#issuecomment-801795088:228,power,power,228,https://qutip.org,https://github.com/qutip/qutip/pull/1465#issuecomment-801795088,1,['power'],['power']
Energy Efficiency,"> Looking quickly, the sampling seems too low for the frequency.; > You measure each ~3e-8, but the frequency is ~5e9.; > You will probably get better result with `times=np.linspace(0, 0.00001, 30000)`. This actually was the issue. Turns out scanning over 1GHz range was too much, so I needed to sample more. I reduced to scanning over 1KHz and I could properly plot without increasing the number of sampled points. Thanks so much for your help",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1596#issuecomment-878364619:311,reduce,reduced,311,https://qutip.org,https://github.com/qutip/qutip/issues/1596#issuecomment-878364619,1,['reduce'],['reduced']
Energy Efficiency,"> Mostly I want to know whether I should have been able to do this with `mutually_broadcastable_shapes`. Yes, you should use [`mutually_broadcastable_shapes(signature=)`](https://hypothesis.readthedocs.io/en/latest/numpy.html#hypothesis.extra.numpy.mutually_broadcastable_shapes) for that. The signature syntax is a little different, since Numpy does it with strings, but we already support named dimensions, constant-size dimensions, and optional dims. Should be a bit more efficient too. > I also wouldn't mind a quick check of `qobj_shared_shapes`. Is this a good thing to be doing with shared strategies?. It does technically work? But in such a situation I'd probably just use `st.data()` and draw in the body of the test; see `hypothesis write numpy.matmul` for an example. If you expected to use it in many tests maybe a custom strategy, but for just `test_data_matmul_operator` that doesn't seem worth it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1957#issuecomment-1207464240:475,efficient,efficient,475,https://qutip.org,https://github.com/qutip/qutip/pull/1957#issuecomment-1207464240,1,['efficient'],['efficient']
Energy Efficiency,"> Seems to me that the whole thing should first decide the kind of gate, then loop over only the necessary qubits - that'd be both more efficient and easier to read. I feel the same. Indeed it is just something I encountered when writing the doc. I guess this structure to make use of similarity among those gates. Many have one control and one target. Those gates work well. SWAP just happens to not be one of this... Also, ISWAP doesn't work very well if it acts on qubits not next to each other. The gates need to be classified better. Maybe completely rewrite it at some point.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1447#issuecomment-781976727:136,efficient,efficient,136,https://qutip.org,https://github.com/qutip/qutip/pull/1447#issuecomment-781976727,1,['efficient'],['efficient']
Energy Efficiency,"> Thanks @ajgpitch for the comments. I agree that there should be the specific functions but I think for simplifying user experience there should be a simple overarching function. E.g, when you plot Wigner functions in QuTiP you can send it kets or dms or operators and it just works.; > ; > Internally, it still calls specific functions to compute the Wigner function based on efficient methods specific to the inputs. But it is just a small convenience to the average user to have a simpler clean overarching function to do the same. I have now made it so that the measure and measurement_statistics function precisely do this. Should we keep either mode (one mode is of the ""observable"" type and the other with the ""projective"" type) also as a api-exposed function? If that is not the case, what would be the correct way to write doc_strings ?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1274#issuecomment-643730389:378,efficient,efficient,378,https://qutip.org,https://github.com/qutip/qutip/pull/1274#issuecomment-643730389,1,['efficient'],['efficient']
Energy Efficiency,"> Thanks, @AGaliciaMartinez. Also, this is a wonderful suggestion, and it reduces the number of lines of codes by a lot. The only issue that arises is when the points are diagonally opposite but that can be fixed. Good point! I did not consider that initially. For this case, since it is not possible to define a single arc but rather there are infinite possibilities, I would suggest to simply raise an exception. What do you think @gaurav-iiser ?. > So, is it okay if I take your code above, modify it for the general scenario, make changes to the add_arc, and push it again? . I think there is an option somewhere to make someone a coauthor of the code, but do not worry about that, it is not necessary here. You can either push the changes to this pull request or, since this will require significant changes to the code, you could create a new one. I personally prefer creating a new PR since it leaves a cleaner commit history, but both are fine.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1685#issuecomment-937579234:74,reduce,reduces,74,https://qutip.org,https://github.com/qutip/qutip/pull/1685#issuecomment-937579234,1,['reduce'],['reduces']
Energy Efficiency,"> The `c_ops` argument to `mesolve` expects operators in Lindblad form, but you can also construct your own Liouvillian and pass that as the first argument. To construct the non-Lindblad components you want, you may find `spre` and `spost` useful, which respectively turn an operator into a superoperator which multiplies from the left and from the right. There is also `sprepost`, which is a more efficient way to combine `spre` and `spost`. To construct the operators (if you only work on qubits - if not, you need to do it manually as @quantshah showed), you can use `expand_operator`. So you can do something like; > ; > ```python; > L = qutip.liouvillian(H); > n_qubits = 5; > for n in range(n_qubits - 1):; > c_op_left = qutip.expand_operator(qutip.sigmap(), n_qubits, n); > c_op_right = qutip.expand_operator(qutip.sigmam(), n_qubits, n + 1); > L += qutip.sprepost(c_op_left, c_op_right); > both = -0.5 * c_op_right * c_op_left; > L += qutip.spre(both); > L += qutip.spost(both); > res = qutip.mesolve(L, rho0, times, e_ops=...); > ```; > ; > I've not seen equations in that form myself, but that's how you could go about if that's what you've got. Thank you very very much for your help. As you know, the Liuvillian contains a term like [H,rho]. So if i put my operators in Hamiltonian, as you say, Does not contribute to the commutator?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1435#issuecomment-774022545:398,efficient,efficient,398,https://qutip.org,https://github.com/qutip/qutip/issues/1435#issuecomment-774022545,1,['efficient'],['efficient']
Energy Efficiency,"> This is not a bug in QuTiP _per se_, but an artifact of the Fock space cutoff. In a numerical calculation, we can only use finite matrices, but the ladder operators can not be represented with finite matrices (Stone-von Neumann theorem).; > ; > You can try printing `a * a.dag() - a.dag() * a` for different values of `dim`. You will find that it gives the expected result (identity matrix) except in the very bottom right matrix element. That matrix element however deviates a lot, and the more you increase `dims` the more it will deviate. So if you compute the trace distance of `a * a.dag()` and `a.dag() * a + 1`, you will get a large number instead of zero. In your example, the basic problem is the same.; > ; > Usually this is not a problem because we assume the cutoff is larger than the number of excitations in any state we are looking at. In other words, in vector form, the bottom-most entries of any state are very (exponentially) small, and the deviations in the operators in those entries then don't play a role. However, when calculating a norm (such as the trace distance), entries corresponding to low-energy states or to high-energy states contribute equally, and we can get nonsensical results.; > ; > You could try projecting out high-energy states before calculating the norm:; > ; > ```; > dim = 25; > dim2 = 10; > ; > a = destroy(dim); > D = (a.dag() - a).expm(); > a_displaced = D.dag() * a * D; > ; > proj = sum(projection(dim, i, i) for i in range(dim2)); > diff = a_displaced - (a + 1); > print((proj * diff * proj).norm('tr')); > # 1.3039375636172088e-07; > ```. Hi Paul, thank you very much for your response! It’s really helpful :) From what I tried so far, and if I understand you correctly, as I will eventually calculate their expectation values with respect to some vectors, that abnormal large number at the corner of their matrix would be suppressed and the final results would be the same, or?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2495#issuecomment-2245390570:1123,energy,energy,1123,https://qutip.org,https://github.com/qutip/qutip/issues/2495#issuecomment-2245390570,3,['energy'],['energy']
Energy Efficiency,"> Yes, you should use [`mutually_broadcastable_shapes(signature=)`](https://hypothesis.readthedocs.io/en/latest/numpy.html#hypothesis.extra.numpy.mutually_broadcastable_shapes) for that. The signature syntax is a little different, since Numpy does it with strings, but we already support named dimensions, constant-size dimensions, and optional dims. Should be a bit more efficient too. I tried with `signature=` quite a bit but `(m, k), (k, n)` always produced thing like `(1, 1, 1), (1, 1)` despite setting `max_dims` and `min_dims` to various things.; ; > It does technically work? But in such a situation I'd probably just use `st.data()` and draw in the body of the test; see `hypothesis write numpy.matmul` for an example. If you expected to use it in many tests maybe a custom strategy, but for just `test_data_matmul_operator` that doesn't seem worth it. I expected there to be other use cases. I started with the output of `write numpy.matmul` but ended up playing around with my own strategy (see difficulties with mutually_broadcastable_shapes` above) and liking the idea of not have to unpack `a` and `b` inside the test, and of being able to supply the shapes for `a` and `b` to other strategies (e.g. maybe we will have a strategy for Qobj and QobjEvo objects and want to try various combinations of multiplying things together)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1957#issuecomment-1207475361:372,efficient,efficient,372,https://qutip.org,https://github.com/qutip/qutip/pull/1957#issuecomment-1207475361,1,['efficient'],['efficient']
Energy Efficiency,"> also possible applications such as error mitigation techniques [1-3].; >; > The tutorial notebooks can be found at; > http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM; > conference may help you get an overview (; > https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the; > Github Project page for a collection of related issues and ongoing Pull; > Requests.; > Expected outcomes; >; > - More devices defined in the qutip.qip.device module. At the moment,; > we have two models: spin chain and cavity QED. We would like to include; > some other commonly used planform such as Superconducting system, Ion trap; > system or silicon system. Each model will need a new set of control; > hamiltonian and a compiler that find the control pulse of a quantum gate.; > This part is gonna involve some physics and study of commonly used hardware; > platforms. The related code can be found in qutip.qip.device and; > qutip.qip.compiler; > - Refactoring the circuit compiler to allow simple pulse scheduling,; > e.g. Restriction one pulses that can be turned on at the same time.; > - Features to perform error mitigation techniques in QuTiP, such as; > zero-error extrapolation.; > - APIs to allow import quantum circuits from other software packages; > or commonly used language e.g. through quantum assembly language (qasm); >; > ------------------------------; >; > Also, the last outcomes have some overlap with the last project. Although; > I also find this circuit importation very important, I guess two projects; > should not have overlap if they are both selected.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/1184?email_source=notifications&email_token=ADPF67A5MSYZVSDKCZD73LTREGE2LA5CNFSM4KZUPCQ2YY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4IPQGYLA>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADPF67E",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1184#issuecomment-590726313:2631,schedul,scheduling,2631,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590726313,1,['schedul'],['scheduling']
Energy Efficiency,"> thanks for the comment, I didn't know about `qutip.propagator`; > ; > > Lots of people have successfully used QuTiP already as part of reinforcement learning protocols - I've worked with at least a couple; > ; > cool, can i learn more about this from you?. Sorry, I don't have much experience in it myself - you'll be reading about the methods in papers/lecture note by people smarter than me. We have some tutorial notebooks about optimal control using the QuTiP optimal control package here: http://qutip.org/tutorials.html#optimal-control, which you may be able to adapt to your use case. I believe there are components in there that you can subclass so that the optimiser is RL-based rather than using standard BFGS or something else.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1323#issuecomment-660475258:570,adapt,adapt,570,https://qutip.org,https://github.com/qutip/qutip/issues/1323#issuecomment-660475258,1,['adapt'],['adapt']
Energy Efficiency,"@BitesPotatoBacks . > I doesn't seem like powermetrics returns any maximum frequencies, though. It only returns _current_ frequencies. Maybe the maximum frequency can be parsed from the last entry in lines like this one:. ```; P0-Cluster HW active residency: 2.92% (600 MHz: 94% 828 MHz: .04% 1056 MHz: 1.7% 1296 MHz: .24% 1524 MHz: 1.0% 1752 MHz: .32% 1980 MHz: .24% 2208 MHz: .47% 2448 MHz: .35% 2676 MHz: .35% 2904 MHz: .24% 3036 MHz: .11% 3132 MHz: .07% 3168 MHz: .07% 3228 MHz: .81%); ```. but like I said it is cumbersome, plus there is the `sudo` issue...",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1754#issuecomment-1009287596:42,power,powermetrics,42,https://qutip.org,https://github.com/qutip/qutip/pull/1754#issuecomment-1009287596,1,['power'],['powermetrics']
Energy Efficiency,"@Chengie6 Thank you for the bug report. Could you post a small snippet of code that demonstrates the issue? Then I can attempt to reproduce the issue. The likely cause is that since operators may now be either sparse or dense, it is possible to accidentally use the kind that is much slower for a particular operation. However, we would like to reduce how often this happens so whatever the cause, we are keen to fix things so that they just work.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2115#issuecomment-1463686048:345,reduce,reduce,345,https://qutip.org,https://github.com/qutip/qutip/issues/2115#issuecomment-1463686048,1,['reduce'],['reduce']
Energy Efficiency,"@Ericgig . - docstrings should be fixed. - coveraged increased with . `e_ops = [callable, qobj]; e_ops = [callable, callable]; e_ops = [qobj, qobj]`. - added a more efficient and clear pytest parametrization; - fixed the repeated sparse test",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1739#issuecomment-1082333157:165,efficient,efficient,165,https://qutip.org,https://github.com/qutip/qutip/pull/1739#issuecomment-1082333157,1,['efficient'],['efficient']
Energy Efficiency,"@Ericgig @hodgestar, Eric and Simon: unless there's anything else that springs to mind, I'll pencil in the 4.6 release for later this week/weekend after this is merged to `master`?. Simon in particular: there's a couple of accessible places in `correlation` that make deprecated `ode2es` calls. That particular functionality of the solvers isn't being removed in 5.0 (though maybe it should - `mesolve` is faster and better in almost every way), so they aren't themselves deprecated. Right now they don't trigger `DeprecationWarning` popups if a user calls them (since the stacklevel is 2). Despite that, should I _also_ wrap them in a warning filter to catch it? I don't really know best practices here. I kept postponing doing the 4.6 release because I'd keep thinking of little bits and bobs that I thought should go in, but at this point Boxi's (@BoxiLi) new pulse scheduler stuff is in and ready, the packaging and distribution methods are updated, and we'll have issued deprecation warnings for the things that we know are being removed. Anything beyond this can start to form the basis of a 4.7 release in a few months' time, with the Floquet changes (they might be waiting on me at the moment) and possibly some new stuff out of GSoC. Possibly that'll also include some deprecation warnings and other bits and bobs to do with packages getting moved out of qutip/qutip, and the changes to how the data-layer is going to work.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1480#issuecomment-814937234:869,schedul,scheduler,869,https://qutip.org,https://github.com/qutip/qutip/pull/1480#issuecomment-814937234,1,['schedul'],['scheduler']
Energy Efficiency,"@Ericgig I am now trying to use pytest's parametrize feature which allows us to parametrize input to test functions variable by variable. I was able to successfully rewrite some tests which use `yield`, but this one (`test_trunc_neg`) in particular throws an error. Could you please run the following self sufficient snippet locally and inform me if there is anything wrong with the values in this example?? Thanks for the tip about yield, that might indeed be what is wrong. ```; from qutip import *; import numpy as np; import pytest; from numpy.testing import (assert_equal, assert_, assert_almost_equal,; run_module_suite). @pytest.mark.parametrize(""method"", ['clip', 'sgs']); @pytest.mark.parametrize(""qobj"", [rand_dm(5), Qobj(np.diag([1.1, -0.1])),; rand_unitary(3)*Qobj(np.diag([1.1, 0, -0.1]))*rand_unitary(3).dag()]); @pytest.mark.parametrize(""expected"", [None, Qobj(np.diag([1.0, 0.0])),; rand_unitary(3)*Qobj(np.diag([1.0, 0.0, 0.0]))*rand_unitary(3).dag()]); def test_trunc_neg(method, qobj, expected):; ""Checks trunc_neg in several different cases.""; pos_qobj = qobj.trunc_neg(method=method); assert(all([energy > -1e-8 for energy in pos_qobj.eigenenergies()])); assert_almost_equal(pos_qobj.tr(), 1); if expected is not None:; assert_almost_equal(pos_qobj.data.todense(), expected.data.todense()); ```. Also, I would like to rewrite all the tests which use `yield` in this format, would that be okay?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1131#issuecomment-571008013:1118,energy,energy,1118,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-571008013,2,['energy'],['energy']
Energy Efficiency,"@Ericgig I've kept the WIP label, but this is ready for a first review. I think I'm made the HEOM look as much like the base solver as I can without having to modify the base solver a bit. Perhaps we can meet up tomorrow on Discord to discuss options. I'm also happy to merge this as is and adapt the solver more in another PR (assuming tests still pass and documentation still builds with my latest commits).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1869#issuecomment-1101587887:291,adapt,adapt,291,https://qutip.org,https://github.com/qutip/qutip/pull/1869#issuecomment-1101587887,1,['adapt'],['adapt']
Energy Efficiency,"@IIAOPSW : Thanks for the suggestion. I will try that. Nevertheless, it would be nice to have it in the official version of qutip. You can use the following definition from Maslov, Dmitri, and Yunseong Nam. ""Use of global interactions in efficient quantum circuit constructions."" New Journal of Physics (2017). ![image](https://user-images.githubusercontent.com/4205827/36633263-2beff2a2-1960-11e8-83cd-2df60fb8e4da.png). If I may, I would also suggest to add single qubit arbitrary rotation. ![image](https://user-images.githubusercontent.com/4205827/36633286-9c05c65c-1960-11e8-91f7-32c0990eee81.png). In that case we will be able to write complete physical representation of any quantum circuit for trapped ion quantum computer.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/819#issuecomment-368246095:238,efficient,efficient,238,https://qutip.org,https://github.com/qutip/qutip/issues/819#issuecomment-368246095,1,['efficient'],['efficient']
Energy Efficiency,"@OliverLunt, ; The problem lies in the adaptative step of the ode solver. Since nothing happen at first, the step become so long that it jump over the change in the on_off signal...; You can do:; ```; opt = qt.Options(); opt.max_step = 0.5; output = mesolve(H, psi0, tlist, c_ops=c_ops, e_ops=e_ops, options=opt); ```; To limit the step size and it will work as expected. . I am not sure why sesolve (used when no c_ops are given) have smaller step size. It seems to be something in the scipy solver.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/898#issuecomment-430306233:39,adapt,adaptative,39,https://qutip.org,https://github.com/qutip/qutip/issues/898#issuecomment-430306233,1,['adapt'],['adaptative']
Energy Efficiency,"@alipedram01 It looks like we've understood the cause of the issue -- i.e. your RK45 solver just doesn't converge for this problem. That's probably not unexpected -- I see to remember reading on Wikipedia that the implicit Runga-Kutta methods have small regions of convergence relative to explicit or adaptive methods. Closing this for now, but thank you for taking a look and please feel free to continue the discussion if needed.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1733#issuecomment-1005605164:301,adapt,adaptive,301,https://qutip.org,https://github.com/qutip/qutip/issues/1733#issuecomment-1005605164,1,['adapt'],['adaptive']
Energy Efficiency,@cgranade did you test your PR #362 against dick-t example? If so what were the results?; It would seem that dick-t is comparing a method that works with states in general (mixed or pure) with one that assumes states are pure. Do we have some method in qutip that gives the fidelity when states are assumed pure? It would seem more efficient (and less numerical error risk) to compute the fidelity without the sqrtm (as dick-t did in the comparison) if we knew the states were pure.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/361#issuecomment-134927300:332,efficient,efficient,332,https://qutip.org,https://github.com/qutip/qutip/issues/361#issuecomment-134927300,1,['efficient'],['efficient']
Energy Efficiency,"@goerz I think one of Mølmer's papers (maybe the one I have pointed out) addressed the equivalence of the two methods. Sorry, I don't have a definite paper to point out at this moment. I was actually organizing the Julia community to work on this direction (see [JuliaQuantum](http://juliaquantum.github.io)) from scratch, and hence didn't follow up the efforts in the measurement simulation within QuTiP. . When I was writing my paper on continuous measurement ([PRA, 93.023817](http://journals.aps.org/pra/abstract/10.1103/PhysRevA.93.023817)), I came up the argument that the former method may be more appropriate for measurement models. This is because measurements have to happen in evenly spaced time steps determined by the detector's integrating time, so it is intuitive to use a random number to judge if on each measurement step the quantum jump will happen. There may be a way to use the second method to implement the same measurement simulation model, but I didn't think too much on it. In reality, I developed another more efficient method without actually evolving the density operator in my paper to simulate continuous measurement using a set of stochastic equations for squeezing thousands of atoms' state which has not been included in QuTiP yet. Sorry I don't have more useful reference that explains this point in more details at this moment. Good luck!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/111#issuecomment-220744432:1037,efficient,efficient,1037,https://qutip.org,https://github.com/qutip/qutip/issues/111#issuecomment-220744432,1,['efficient'],['efficient']
Energy Efficiency,"@hodgestar I have implemented most of your suggested changes. I reduced the largest spin used in the spin Wigner tests, but left the spin Q function as-is because it was fast enough. I've removed the normalization from the functions themselves and described the normalization criterion in the docstrings.; The spin Wigner is now real.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1632#issuecomment-917315644:64,reduce,reduced,64,https://qutip.org,https://github.com/qutip/qutip/pull/1632#issuecomment-917315644,1,['reduce'],['reduced']
Energy Efficiency,"@hodgestar, ; I adapted the `MultiTrajResult` to the new `Result` format, and I have some changes to the `Result` class that I want to do:; - I changed the `Result.__init__` to move setting the `e_ops` in `_post_init`: `MultiTrajResult` can't use them and needed to remove the related state processors.; - `add` was overwritten, but we could use it if we add a `_early_finish_check`: a processor that return the estimated quantity of work remaining. Parallel map will stop computing trajectories when it get under 0. I think we could have it in `Result`: it could be interesting to have with `mesolve` with the options to stop when the steady state is reached, etc. Then if times when added in a state processor, I could use `add` without overloading. Are you Ok with me going for it or do you prefer to keep `Result` as is?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1889#issuecomment-1156962173:16,adapt,adapted,16,https://qutip.org,https://github.com/qutip/qutip/pull/1889#issuecomment-1156962173,1,['adapt'],['adapted']
Energy Efficiency,"@hodgestar. yes my script returns the _current_ cpu frequency....I currently am unaware how to get the maximum on Apple silicon. I'll do some research and test some code to see what I can figure out. @matteoacrossi. > A command that somehow gives info on cpu frequencies is sudo /usr/bin/powermetrics -s cpu_power -n 1 ... Powermetrics does seem to be doing some weird trickery. I'm currently trying to reverse engineer it...I've found a bit of interesting things in the assembly but I'm still not fully sure how it's pulling what it does. > But it requires sudo and is a bit messy to parse the max frequencies. I'm pretty sure powermetrics is accessing some private APIs, which is why it requires `sudo`, which is quite unfortunate. I doesn't seem like powermetrics returns any maximum frequencies, though. It only returns _current_ frequencies.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1754#issuecomment-1009099408:288,power,powermetrics,288,https://qutip.org,https://github.com/qutip/qutip/pull/1754#issuecomment-1009099408,4,"['Power', 'power']","['Powermetrics', 'powermetrics']"
Energy Efficiency,"@jakelishman Sorry -- I forgot we added the TODO. I was speaking from a bigger picture perspective -- having CodeClimate fail all the time means that we might not notice if more failures are added accidentally, which would reduce the value of running CodeClimate in CI.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1506#issuecomment-826663656:223,reduce,reduce,223,https://qutip.org,https://github.com/qutip/qutip/pull/1506#issuecomment-826663656,1,['reduce'],['reduce']
Energy Efficiency,"@jakelishman this is great, also thanks @dweigand for this PR. I tried out the function and it is very fast and could be great for specific use cases. My idea was a bit more simple - precomputing the `coherent_dm` operators (using qutip.coherent_dm) and using the `expect` function. But that performs worse that the original `qfunc` as well as this implementation of course. So this is great. I would be happy to merge this but have one thought:. This new implementation is sacrificing the ease-of-understanding of how Q-functions are computed with a very efficient and fast, but complicated class-based implementation. This means that users who want to look under the hood will not fully understand how this is working. I believe the crux of this implementation is a fast computation of the tensors of `coherent_dm` operators for all the alpha values at (x + iy). Personally, on many occasions, I have looked at qutip implementations of quantum operations just to understand what is happening under the hood and I believe several users have often done this to hack around. If someone were to try and understand Q-function computation from this code, it seems simple enough with the call:. ```; np.abs(np.dot(alphas, (self._g*0.5)*vector))**2; ```. for state vectors, or decomposing a density matrix into state vectors and then running the above call. Or . ```; out = np.polyval(; (0.5*g * vector / np.sqrt(scipy.special.factorial(ns)))[::-1],; alpha.conj,; ); ```. But the object `alpha` now constructed with `_qfunc_alpha_matrix` class is a bit difficult to understand. The variable `self.conj = np.empty(x.shape, dtype=np.complex128)` creates a tensor and sets it to a mesh grid (x, -y), but then what does the `__call__()` return? The tensor of `coherent_dm(x+iy)` for each x and y coordinate? But how is it computing it without knowing the Hilbert space dim for the state, which I think is computed on the fly by `ns = np.arange(first, last).reshape(1, 1, -1)`. It seems it caches the `coherent_d",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1583#issuecomment-877241762:556,efficient,efficient,556,https://qutip.org,https://github.com/qutip/qutip/pull/1583#issuecomment-877241762,1,['efficient'],['efficient']
Energy Efficiency,"@maij Thanks! The test code looks like a good start. Could you add it to `qutip/tests/test_wigner.py`?. Other tests we could add:. * We could write a more general test that compares the output of spin_q_function to a simpler implementation based on the definition -- something like:; ```python; state = qutip.spin_coherent(spin, theta_prime, phi_prime); direct_q = (state.dag() * qutip.ket2dm(psi) * state).norm() / np.pi; ```; Note: I named the angles `theta_prime` and `phi_prime` to emphasize that we can apply this test to cases where the angles for the state psi and the ones passed to spin_q_function are different. * We should also add a test for passing in arrays of theta and phi (i.e. were we really get out a mesh grid for Q values) since that was the primary use case for which `spin_q_function` was defined. Ideas for future PRs:. * It would be nice to also add tests for `spin_wigner` (I am suspicious of it now because of the problems with spin_q_function). Thank you for looking at these and taking charge of this bit of QuTiP.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1632#issuecomment-893326408:1015,charge,charge,1015,https://qutip.org,https://github.com/qutip/qutip/pull/1632#issuecomment-893326408,1,['charge'],['charge']
Energy Efficiency,@matteoacrossi Oh! I didn't even notice that last entry. :laughing: Good eye. I'll continue my reverse engineering to see if I can find where powermetrics is pulling those values from.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1754#issuecomment-1009327416:142,power,powermetrics,142,https://qutip.org,https://github.com/qutip/qutip/pull/1754#issuecomment-1009327416,1,['power'],['powermetrics']
Energy Efficiency,"@nathanshammah ; I expect it to be easy to use as an integrator:; ` _evolve_krylov_tlist` is essentially the `run`, `time_evolution` is `integrate`.; The interface just need to be adapted.; It would work well with `sesolve` and `mcsolve`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1644#issuecomment-908484939:180,adapt,adapted,180,https://qutip.org,https://github.com/qutip/qutip/pull/1644#issuecomment-908484939,1,['adapt'],['adapted']
Energy Efficiency,"@nonhermitian Hi Paul, I don't think it's super important to necessarily have the most efficient algorithm for allowing non-linear tlists, but I do think it's good to have to avoid tripping up more advanced users. Could you merge this solution and we can always re-visit later?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/520#issuecomment-245201155:87,efficient,efficient,87,https://qutip.org,https://github.com/qutip/qutip/pull/520#issuecomment-245201155,1,['efficient'],['efficient']
Energy Efficiency,"@nonhermitian could you please have a look at _pseudo_inverse_sparse when you have time, and see if you can think of any better way of doing this, from your experience with optimizing the steadystate solver? Would an iterative method make sense here? I basically run into memory problems quite quickly when using splu (which seems to be the most efficient method by far for this particular problem, according to my tests).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/272#issuecomment-67125235:346,efficient,efficient,346,https://qutip.org,https://github.com/qutip/qutip/pull/272#issuecomment-67125235,1,['efficient'],['efficient']
Energy Efficiency,"A few proposed changes to internals of the MultiTrajSolver and its subclasses. The changes are (a) to increase consistency between the monte carlo solvers and the stochastic solvers, (b) to reduce repeating code from MultiTrajSolver in the subclasses, (c) to fix some documentation. * Renamed `_MTSystem` and `_MCSystem` into `_MultiTrajRHS` and `_MCRHS` to make them analogous to `_StochasticRHS`. Removed distinction between `.system` and `.rhs` which seemed unnecessary and confusing to me (please tell me if I'm wrong).; * Made `_integrate_one_traj` use the integrator's run method (which doesn't do anything special currently, but I imagine that it could potentially be implemented more efficiently than repeated calls to integrate). Made subclasses use `_run_one_traj`, `_integrate_one_traj` etc of the parent class where possible, instead of duplicating logic.; * The docstring of MCSolver.run was not documenting its parameters, instead referring to the docstring of MultiTrajSolver.run, but MultiTrajSolver is not included in the docs.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2359:190,reduce,reduce,190,https://qutip.org,https://github.com/qutip/qutip/pull/2359,2,"['efficient', 'reduce']","['efficiently', 'reduce']"
Energy Efficiency,A quantum gate(pulse) scheduler,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1273:22,schedul,scheduler,22,https://qutip.org,https://github.com/qutip/qutip/pull/1273,1,['schedul'],['scheduler']
Energy Efficiency,A scheduler for the quantum gates compiler,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1243:2,schedul,scheduler,2,https://qutip.org,https://github.com/qutip/qutip/issues/1243,1,['schedul'],['scheduler']
Energy Efficiency,"A simple example of a operator that is traceless and not a dm is the charge operator, e.g. `charge(4)`. How would we know a difference in this case without further info?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/474#issuecomment-219623485:69,charge,charge,69,https://qutip.org,https://github.com/qutip/qutip/issues/474#issuecomment-219623485,2,['charge'],['charge']
Energy Efficiency,"About only storing kets, but not averaging into a dm, we can't do that yet, but it's easy to implement so if useful, we can add the option. The error is not in the `_to_dm`, but in the addition, which is done in the sparse CSR format. No dense conversion are made. But the `proj` operator does not have a tidyup step, so any non-zero are kept, however small they are. This is also an easy fix that could help. The `MemoryError` is also not that helpful, we should improve the error message to tell what size of arrays are allocated. Thank you for reporting these and trying the alpha version. I see you don't have cython, do you have a way to compile the source yourself? ; Once fixed, I would be curious to have you try the development version without waiting for a release.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2299#issuecomment-1904338523:522,allocate,allocated,522,https://qutip.org,https://github.com/qutip/qutip/issues/2299#issuecomment-1904338523,1,['allocate'],['allocated']
Energy Efficiency,Adapt qutip 4.7 for matplotlib 3.8,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2243:0,Adapt,Adapt,0,https://qutip.org,https://github.com/qutip/qutip/pull/2243,1,['Adapt'],['Adapt']
Energy Efficiency,Adapt to download / upload artifacts v4,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2476:0,Adapt,Adapt,0,https://qutip.org,https://github.com/qutip/qutip/pull/2476,2,['Adapt'],['Adapt']
Energy Efficiency,Add entangling power function,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/144:15,power,power,15,https://qutip.org,https://github.com/qutip/qutip/pull/144,1,['power'],['power']
Energy Efficiency,"Added ARPACK eigensolver, updated power method to use RCM, start from; maximally mixed state, and not recalculate LU factors everytime solver; is called.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/166:34,power,power,34,https://qutip.org,https://github.com/qutip/qutip/pull/166,1,['power'],['power']
Energy Efficiency,"Ah, nice catch thanks, and thanks for the super clear repro. We're overhauling the solvers for QuTiP 5.0, which will include a lot more rigorous input checking on entry, but also it uses far safer low-level datatypes that would catch this shape mismatch in the C layer (even though the `dims` _should_ have been checked by `mesolve`). I'll check the other solvers and patch in a sanity test - probably after these lines: https://github.com/qutip/qutip/blob/d5e305513d9186df74beee4fd8da680e89f29d15/qutip/mesolve.py#L259-L261; we can just insert a test; ```python; if rho0.dims[0] != rho0.dims[1]:; raise ValueError(; ""input state must be a pure state or square density matrix""; ); ```. There may also be other segfaults lurking if you use a Python function to generate a time-dependent `Qobj` value in the Liouvillian or the expectation operators, but right now you're unlikely to use that form (because it's slow as anything). The bug slips through because we unsafely pass off a matrix down to C code (where we currently don't have sanity checks) without first verifying that it is a valid shape in Python space - the C code is working as designed, so there shouldn't be problems with correct inputs. Removing `c_ops` causes `mesolve` to delegate to `sesolve` which presumably is better at its type-checking, and I expect that a small dimension size working is likely just `malloc` having slack in the memory it gives us for small sizes or small requests being allocated into the special pre-allocated store.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1456#issuecomment-791925169:1463,allocate,allocated,1463,https://qutip.org,https://github.com/qutip/qutip/issues/1456#issuecomment-791925169,2,['allocate'],['allocated']
Energy Efficiency,"All the same, I'd very much like to further reduce warnings. I've literally had Firefox crash trying to load the entire Travis logs.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/433#issuecomment-185792948:44,reduce,reduce,44,https://qutip.org,https://github.com/qutip/qutip/issues/433#issuecomment-185792948,1,['reduce'],['reduce']
Energy Efficiency,"Also, there are two codeclimate issues. One on a blank space and one about a long line. Could you please take a look and change them to get the green on this. :-)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1045#issuecomment-511490539:144,green,green,144,https://qutip.org,https://github.com/qutip/qutip/pull/1045#issuecomment-511490539,1,['green'],['green']
Energy Efficiency,"An additional algorithm has been added. The existing GRAPE algorithm remains the default; The CRAB algorithm was developed at the University of Ulm; The main difference is that it reduces the number of optimisation variables by defining the control pulses by expansions of basis functions, where the variables are the coefficients. Typically a Fourier series is chosen, i.e. the variables are the Fourier coefficients. Therefore it does not need to compute an explicit gradient. By default it uses the Nelder-Mead method for fidelity error minimisation. Further explanation is given in the comments. Significant changes were required to many of the classes in order to support another alg option in a tidy way.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/338:180,reduce,reduces,180,https://qutip.org,https://github.com/qutip/qutip/pull/338,1,['reduce'],['reduces']
Energy Efficiency,"As a note: `qutip.vector_to_operator` is part of the implementation of superoperators. The ""vector"" in the name refers to the idea that a superoperator in a Hilbert space can be represented as a vector on a different Hilbert space which comprises of two copies of the original space tensor-producted together. It doesn't refer to a ""vector"" in the sense of a ""ket"". The difference was introduced in c62a8e9, which is the amalgamated commit encompassing all the discussion in #1098. `qutip.vector_to_operator` expects to receive an argument whose `dims` parameter is of the form `[operator_dims , [1]]`, where `operator_dims` is the dimensions of a regular operator (for example `[[2], [2]]` for a single qubit Hilbert space, or `[[2, 2], [2, 2]]` for an operator acting on a Hilbert space with two qubits in. The exception occurs because `vector_to_operator` attempts to access the two elements of the `operator_dims` array to discover the output shape. Since there is an insufficient number of lists for it to access, it just ends up reading the dimensions of the first two elements of the tensor product, and `np.prod` (used to calculate the output shape) doesn't complain when passed scalars. Notice that running the code with `nb_qubits = 1` will cause an `IndexError`, as there are insufficient tensor-product elements. The immediate solution for your code is to use `qutip.ket2dm`, which converts a ket into a density matrix. I think this is what you're actually trying to do. For a fix, there are two points:; 1. The fix is simply to test that the input dimensions are of the correct form, rather than assuming; this will allow us to provide a more descriptive error.; 2. Perhaps worth considering is moving the super-operator functionality in a sub-module `qutip.super`, and not importing all the functions into the main namespace. This might help reduce user confusion going forwards, especially since most people aren't using the superoperator formalism.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1204#issuecomment-600792011:1856,reduce,reduce,1856,https://qutip.org,https://github.com/qutip/qutip/issues/1204#issuecomment-600792011,1,['reduce'],['reduce']
Energy Efficiency,"As it is quite a short (but efficient!) change, we can keep it both in qutip and in qutip-qip. Also, I remember this function is also used in the control module (also for testing I think). So we need it in qutip anyway. Eventually, I think it is best to keep these commonly used function in `qutip.operator` and import it to qutip-qip",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1688#issuecomment-942198552:28,efficient,efficient,28,https://qutip.org,https://github.com/qutip/qutip/pull/1688#issuecomment-942198552,1,['efficient'],['efficient']
Energy Efficiency,"Assuming Simon's point isn't just a complete answer to your question: in the general case, this is an impossible question to answer - it touches on many parts of numerical integration, such as tolerance limits and adaptive step-size methods. When you're dealing with completely arbitrary time-dependence, there's not really any one-size-fits-all approach that'll work (despite how RK45 is often taught as a magic bullet in physics courses). Here, you will likely find that your RK45 results depend strongly on how many intermediate timesteps you use, whereas QuTiP's results will be (marginally) more stable. This is because QuTiP will internally subdivide the timesteps more to achieve internal precision goals, but then only returns the results at the time points you ask for. You can increase the maximum number of allowed subdivisions by increasing the `nsteps` parameter in a `qutip.Options` object, and with the `options` keyword argument.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1733#issuecomment-986661136:214,adapt,adaptive,214,https://qutip.org,https://github.com/qutip/qutip/issues/1733#issuecomment-986661136,1,['adapt'],['adaptive']
Energy Efficiency,Build succeeded. Should we merge this? Or should I extend this to perhaps do more builds on 3.8 and reduce 3.7 to just the basic build? Should 3.6 be dropped or kept?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1170#issuecomment-581046004:100,reduce,reduce,100,https://qutip.org,https://github.com/qutip/qutip/pull/1170#issuecomment-581046004,1,['reduce'],['reduce']
Energy Efficiency,"Bumping an old topic with two major new considerations. Number one: Travis is [changing its pricing model for open source software](https://blog.travis-ci.com/2020-11-02-travis-ci-new-billing), and generally it seems like [it's going to become unfeasible for us](https://www.jeffgeerling.com/blog/2020/travis-cis-new-pricing-plan-threw-wrench-my-open-source-works). Over the past month or so, queue times on Linux builds have increased massively (from near-instant to up to 90 minutes), and the number of allowed concurrent builds has already limited the amount of testing we are able to do - we don't even have Windows tests because we couldn't fit them in. In around March 2021 we expect the old travis-ci.org that QuTiP is grandfathered onto to shut down completely, forcing us onto the new model on travis-ci.com. Number two: in November 2019, GitHub released their own CI, GitHub Actions. This is (as best as I can tell) completely free for open source, public repositories like QuTiP, and offers access to a large number of Linux, macOS and Windows containers. This completely free period of GitHub Actions might not last forever (you can imagine maybe they're just trying to drive adoption before increasing the cost), but especially with the new time pressure from Travis, this seems like the right choice for now. Our testing set up is fairly straightforward, so migrating to a new CI shouldn't be too difficult. I just wrote (#1429) a GitHub Actions workflow to build and distribute binary releases of QuTiP on Linux/Mac/Windows, and I'm pretty convinced by the power of their CI. It's got an awful lot of flexibility with a _lot_ of customisation so its initial learning curve is a little steep (or maybe I'm just not used to CI tools), but I'm impressed by what's available. I believe it comes with a degree of reusability as well; I think we can define a test as a single ""action"", and then reuse that in the PR-push workflow and the make-distribution workflow.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/959#issuecomment-770455542:1572,power,power,1572,https://qutip.org,https://github.com/qutip/qutip/issues/959#issuecomment-770455542,1,['power'],['power']
Energy Efficiency,"Bumps [urllib3](https://github.com/urllib3/urllib3) from 1.26.18 to 1.26.19.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/urllib3/urllib3/releases"">urllib3's releases</a>.</em></p>; <blockquote>; <h2>1.26.19</h2>; <h2>🚀 urllib3 is fundraising for HTTP/2 support</h2>; <p><a href=""https://sethmlarson.dev/urllib3-is-fundraising-for-http2-support"">urllib3 is raising ~$40,000 USD</a> to release HTTP/2 support and ensure long-term sustainable maintenance of the project after a sharp decline in financial support for 2023. If your company or organization uses Python and would benefit from HTTP/2 support in Requests, pip, cloud SDKs, and thousands of other projects <a href=""https://opencollective.com/urllib3"">please consider contributing financially</a> to ensure HTTP/2 support is developed sustainably and maintained for the long-haul.</p>; <p>Thank you for your support.</p>; <h2>Changes</h2>; <ul>; <li>Added the <code>Proxy-Authorization</code> header to the list of headers to strip from requests when redirecting to a different host. As before, different headers can be set via <code>Retry.remove_headers_on_redirect</code>.</li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/urllib3/urllib3/compare/1.26.18...1.26.19"">https://github.com/urllib3/urllib3/compare/1.26.18...1.26.19</a></p>; <p>Note that due to an issue with our release automation, no <code> multiple.intoto.jsonl</code> file is available for this release.</p>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/urllib3/urllib3/blob/1.26.19/CHANGES.rst"">urllib3's changelog</a>.</em></p>; <blockquote>; <h2>1.26.19 (2024-06-17)</h2>; <ul>; <li>Added the <code>Proxy-Authorization</code> header to the list of headers to strip from requests when redirecting to a different host. As before, different headers can be set via <code>Retry.remove_headers_on_redirect</code>.</li>; <li>Fixed ha",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2458:478,sustainab,sustainable,478,https://qutip.org,https://github.com/qutip/qutip/pull/2458,2,['sustainab'],"['sustainable', 'sustainably']"
Energy Efficiency,Charge states basis,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/562:0,Charge,Charge,0,https://qutip.org,https://github.com/qutip/qutip/issues/562,1,['Charge'],['Charge']
Energy Efficiency,"Code to reproduce:. ~~~; import qutip; import numpy as np; import scipy. def transmon_ham_and_states(Ec=0.386, EjEc=45, nstates=8, ng=0.0, T=10.0):; """"""Transmon Hamiltonian""""""; Ej = EjEc * Ec; n = np.arange(-nstates, nstates+1); up = np.diag(np.ones(2*nstates),k=-1); do = up.T; H0 = qutip.Qobj(np.diag(4*Ec*(n - ng)**2) - Ej*(up+do)/2.0); H1 = qutip.Qobj(-2*np.diag(n)). eigenvals, eigenvecs = scipy.linalg.eig(H0.full()); ndx = np.argsort(eigenvals.real); E = eigenvals[ndx].real; V = eigenvecs[:,ndx]; w01 = E[1]-E[0] # Transition energy between states. psi0 = qutip.Qobj(V[:, 0]); psi1 = qutip.Qobj(V[:, 1]) . profile = lambda t: np.exp(-40.0*(t/T - 0.5)**2); eps0 = lambda t, args: 0.5 * profile(t) * np.cos(8*np.pi*w01*t); return ([H0, [H1, eps0]], psi0, psi1). H, psi0, psi1 = transmon_ham_and_states(). tlist = np.linspace(0, 10, 1000). # convert function to array; H[1][1] = np.array([H[1][1](t, None) for t in tlist]). result = qutip.mesolve(H, psi0, tlist=tlist); ~~~. This crashes with a `CompileError: command 'gcc' failed with exit status 1` on Python 3.6 or `CompileError: command '/usr/bin/clang' failed with exit status 1` on Python 3.5. It works fine if I don't to the conversion from the function to the array. The Cython program that is being generated and that fails to compile is this:; ~~~; # This file is generated automatically by QuTiP.; # (C) 2011 and later, QuSTaR. import numpy as np; cimport numpy as np; cimport cython; np.import_array(); cdef extern from ""numpy/arrayobject.h"" nogil:; void PyDataMem_NEW_ZEROED(size_t size, size_t elsize); void PyArray_ENABLEFLAGS(np.ndarray arr, int flags). from qutip.cy.spmatfuncs cimport spmvpy; from qutip.cy.interpolate cimport interp, zinterp; from qutip.cy.math cimport erf; cdef double pi = 3.14159265358979323. include '/Users/goerz/Documents/Programming/github/krotov/.venv/py36/lib/python3.6/site-packages/qutip/cy/complex_math.pxi'. @cython.cdivision(True); @cython.boundscheck(False); @cython.wraparound(False); def cy_td",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/932:534,energy,energy,534,https://qutip.org,https://github.com/qutip/qutip/issues/932,1,['energy'],['energy']
Energy Efficiency,CodeClimate reported a bunch of places where line lengths were increased to exceed 79 characters. Could we reduce those down again if possible? Maybe do this at the end so that it's not too hard to review the reformatting.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1925#issuecomment-1152508955:107,reduce,reduce,107,https://qutip.org,https://github.com/qutip/qutip/pull/1925#issuecomment-1152508955,1,['reduce'],['reduce']
Energy Efficiency,"Concerning the failed test: I suspect this is because the test temporarily uses almost 1Gb of memory.; Can you confirm this as a potential issue? In that case, I could change the test to reduce memory usage.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/934#issuecomment-561549347:187,reduce,reduce,187,https://qutip.org,https://github.com/qutip/qutip/pull/934#issuecomment-561549347,1,['reduce'],['reduce']
Energy Efficiency,"Cool, that sounds good - I'm sure its much more efficient than what i had proposed.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/517#issuecomment-242632529:48,efficient,efficient,48,https://qutip.org,https://github.com/qutip/qutip/pull/517#issuecomment-242632529,1,['efficient'],['efficient']
Energy Efficiency,"Currently QuTiP solvers are pure batch jobs. One calls a function, e.g. `mesolve`, which then runs until the state has been propagated to all requested time steps and then the function returns the result. There are a variety of use cases where having access to results as they are calculated can be useful:. * Implementing a progress bar; * Limiting how long a solver runs for; * Stopping a solver early if a steady state or other desired or undesired state is detected.; * Implementing adaptive solvers where parameters are changed depending on the current state. We're currently refactoring the QuTiP solvers for QuTiP v5, so perhaps now is a good time to consider whether this feature will see enough use to be worth the effort. Implementation options:. * The solver could call a `callback function` each time a new result becomes available.; * The solver could `yield` each time a new result becomes available.; * The solver could do something asynchronous (I think this is not worth supporting natively in QuTiP -- either of the others would allow something asynchronous to be implemented by a QuTiP users themselves if they wanted). Probably these are not mutually exclusive. To make porting easier, it should still be possible to call some solve function without a callback or yielding as one can do now. Related issues:. * qucontrol/krotov#93",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571:487,adapt,adaptive,487,https://qutip.org,https://github.com/qutip/qutip/issues/1571,1,['adapt'],['adaptive']
Energy Efficiency,"Despite discovering the awesome reduce() function in python, generalizing this stuff to arbitrary baths is kinda tedious, and not very practical, so we decided not to do it (I tried for 2 baths a while back and it runs out of memory pretty quickly, as you might expect!). In any case, the hierarchy can do the same thing much more efficiently. Anubhav is working hard on some example notebooks for this RC stuff",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/341#issuecomment-103778948:32,reduce,reduce,32,https://qutip.org,https://github.com/qutip/qutip/pull/341#issuecomment-103778948,2,"['efficient', 'reduce']","['efficiently', 'reduce']"
Energy Efficiency,"Doing #1646, I saw that we use operator between data object in code where types are not strictly checked. We may have other test working only because we do test mostly in `CSR`... . This PR add operators support between data-layer. This will help clean the code:; `_data.matmul(_data.matmul(A, B), C)` vs `A @ B @ C`.; and it will reduce the risk of them being used in functions where we expect, but don't check, that all data object are of the same type. . It is added in `base.Data` so any new data-layer will have operators working without having to create them. It use the dispatched function of `add`, `sub`, `matmul`, `mul`, `imul`, and `neg`. But it has the side effect that operators can change the type if the specialization does not exist. @jakelishman, is this something you though of but choose not to do?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1647:331,reduce,reduce,331,https://qutip.org,https://github.com/qutip/qutip/pull/1647,1,['reduce'],['reduce']
Energy Efficiency,Edge case where 1-level operator power is defined,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/981:33,power,power,33,https://qutip.org,https://github.com/qutip/qutip/issues/981,1,['power'],['power']
Energy Efficiency,Efficient Application of CPTP Maps to Subsystems,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/22:0,Efficient,Efficient,0,https://qutip.org,https://github.com/qutip/qutip/pull/22,1,['Efficient'],['Efficient']
Energy Efficiency,Efficient method to estimate time to reach steady state,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/319:0,Efficient,Efficient,0,https://qutip.org,https://github.com/qutip/qutip/issues/319,1,['Efficient'],['Efficient']
Energy Efficiency,Fidelity off by power of 2,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2102:16,power,power,16,https://qutip.org,https://github.com/qutip/qutip/issues/2102,1,['power'],['power']
Energy Efficiency,"Finding the full power spectrum given a time-dependent Hamiltonian usually requires a 2-sided power spectrum. For convenience, it would be useful to be able to access this data in a properly ordered array. Additionally, the majority of literature regarding cavity optomechanics uses a positive e^(i w t) Fourier convention. Passing a simple boolean parameter to this function would allow for the use of scipy's ifft function, scaled by the number of elements.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/821:17,power,power,17,https://qutip.org,https://github.com/qutip/qutip/pull/821,2,['power'],['power']
Energy Efficiency,"Following the closing of #766 and for anyone having issues with the current Floquet codes (which has some bugs, there are open issues about it), here is a gist containing a working version of the Floquet code in qutip, to study Hamiltonian and steady-state behavior of any time-periodic system: https://gist.github.com/Phyks/20bfb5107cbc595f9e54ff92fccd6fb5. Main differences with qutip code is:; * It reworks a bit the code from qutip, to make it more efficient.; * It fixes some known bugs.; * It introduces a function to get the steady-state density matrix without having to do a full time evolution (following a method presented in Grifoni 98). Hope this helps,",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/772#issuecomment-392690645:453,efficient,efficient,453,https://qutip.org,https://github.com/qutip/qutip/issues/772#issuecomment-392690645,1,['efficient'],['efficient']
Energy Efficiency,"Following up, even if an option for drawing matrix elements with a border is added, the thresholded version of Hinton diagrams is much more common, especially in the ML community where it first originated. For example:. - https://matplotlib.org/stable/gallery/specialty_plots/hinton_demo.html; - https://www.mathworks.com/help/deeplearning/ref/plotwb.html (NB: not accessible for red–green color blindness, but thresholded nonetheless); - https://tex.stackexchange.com/questions/155291/generate-a-hinton-diagram-using-pgfplots; - https://mathematica.stackexchange.com/questions/194212/how-to-make-hinton-diagrams. Given those examples, I definitely agree that a border option could be really helpful, but it'd still be nice to be able to generate more traditional Hinton diagrams as well.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1595#issuecomment-922114051:384,green,green,384,https://qutip.org,https://github.com/qutip/qutip/issues/1595#issuecomment-922114051,1,['green'],['green']
Energy Efficiency,"For a constant Liouvillian, it seems very reasonable that an eigenseries-based solution would be faster? In the end, that massively reduces the number of matrix-matrix operations to be done. I'm not at all familiar with Matlab, but I wouldn't be shocked if that's what your toolbox there is doing too. Looking at your code, you seem to have 16 cores available. QuTiP at present can't make too much use of multiple cores in `mesolve` or `essolve` (though it can in `correlation`), whereas Matlab may well have some fancy parallelised methods for solving eigenvector problems (if doing that method) - we rely on Scipy for our eigenvector calculations, and I'm pretty sure there's no parallelisation in there. There could also be large timing disparities if you're not being linked to good BLAS/LAPACK/ARPACK implementations in Python space. I'm sure that any distributed version of Matlab will come stuffed with lovely libraries compiled specifically for your processor's instruction set, but Scipy may only be able to find Netlib BLAS or (even worse) Accelerate - if so, they probably won't be making good use of vectorised instructions in your processor, and may not be well-optimised for memory access.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1591#issuecomment-871031472:132,reduce,reduces,132,https://qutip.org,https://github.com/qutip/qutip/issues/1591#issuecomment-871031472,1,['reduce'],['reduces']
Energy Efficiency,"For map evolution in mesolve and unitary oper evolution is sesolve (in #868) has a python function for the ode rhs, for all td types. For const and list_str we have a Cython for dm / state evolution. Focusing on list_str: The spmv function(s) are called on each column of the vectorised map matrix. This could be done inside the custom rhs function. Or we could reshape the vector into a matrix and call some version of spmm (sparse matrix*dense matrix). Questions:; 1. which of these options do we think would be more efficient?; 2. I see we have a `cy_spmm_tr` function, but it's not apparent to me what it does. Does it compute the transpose of the sparse*dense matrix?; 3. There does not seem to be any `zspmm` or equiv in `cy/src`. Is this because it does not really exist anywhere?; 4. As 3 but using with `cy/openmp/src`. It would seem like the simplest option would be to spmv on each 'column', but inside the Cython RHS function.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/877:519,efficient,efficient,519,https://qutip.org,https://github.com/qutip/qutip/issues/877,1,['efficient'],['efficient']
Energy Efficiency,"For most of the operations, e.g. +, -, *, numpy will be much faster than fast_csr when the matrix is dense. There is probably a good case for having an option to convert to full to make these operators when one knows that the data will be dense. However it would reduce efficiency to check density each time. Will take some thinking about to make it in a tidy way though. A more general discussion of a dense qobj is in #437",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/818#issuecomment-366222605:263,reduce,reduce,263,https://qutip.org,https://github.com/qutip/qutip/issues/818#issuecomment-366222605,1,['reduce'],['reduce']
Energy Efficiency,"From [this page](https://wiki.freepascal.org/Accessing_macOS_System_Information) it seems that it is mostly used for timing services, so perhaps it is not so relevant here:. ```; hw.tbfrequency - This gives the time base frequency used by the OS and is the basis of all timing services.; In general is is better to use mach's or higher level timing services, but this value; is needed to convert the PPC Time Base registers to real time.; ```. @hodgestar can I ask what the `cpu_freq` is used for in qutip? If it is just for reporting purposes, wouldn't it make sense to put a None or ""N/A""? . A command that somehow gives info on cpu frequencies is `sudo /usr/bin/powermetrics -s cpu_power -n 1`, which gives something like this:. ```; Machine model: MacBookPro18,3; OS version: 21C52; Boot arguments: ; Boot time: Sun Jan 9 11:12:24 2022. *** Sampled system activity (Mon Jan 10 16:05:18 2022 +0200) (5003.97ms elapsed) ***. **** Processor usage ****. E-Cluster Power: 39 mW; E-Cluster HW active frequency: 1027 MHz; E-Cluster HW active residency: 20.50% (600 MHz: 0% 972 MHz: 92% 1332 MHz: 3.1% 1704 MHz: 1.5% 2064 MHz: 3.1%); E-Cluster idle residency: 79.50%; E-Cluster instructions retired: 1.39695e+09; E-Cluster instructions per clock: 0.908186; CPU 0 frequency: 1115 MHz; CPU 0 idle residency: 86.38%; CPU 0 active residency: 13.62% (600 MHz: 0% 972 MHz: 11% 1332 MHz: .78% 1704 MHz: .59% 2064 MHz: 1.1%); CPU 1 frequency: 1103 MHz; CPU 1 idle residency: 86.02%; CPU 1 active residency: 13.98% (600 MHz: 0% 972 MHz: 12% 1332 MHz: .81% 1704 MHz: .77% 2064 MHz: .89%). P0-Cluster Power: 68 mW; P0-Cluster HW active frequency: 680 MHz; P0-Cluster HW active residency: 2.92% (600 MHz: 94% 828 MHz: .04% 1056 MHz: 1.7% 1296 MHz: .24% 1524 MHz: 1.0% 1752 MHz: .32% 1980 MHz: .24% 2208 MHz: .47% 2448 MHz: .35% 2676 MHz: .35% 2904 MHz: .24% 3036 MHz: .11% 3132 MHz: .07% 3168 MHz: .07% 3228 MHz: .81%); P0-Cluster idle residency: 97.08%; P0-Cluster instructions retired: 1.06724e+09; P0-Cluster instr",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1754#issuecomment-1008912273:665,power,powermetrics,665,https://qutip.org,https://github.com/qutip/qutip/pull/1754#issuecomment-1008912273,1,['power'],['powermetrics']
Energy Efficiency,"Further notes: in numpy 1.20 defining `__array__` breaks `np.asarray`, except in the case where the user explicitly defines `np.asarray([qutip.qeye(2)], dtype=object)`. This is actually a very very common function in numpy operations; things like `np.shape` or `np.all` implicitly call `np.asarray` _without_ a `dtype`, which will result in a `TypeError`:; ```python; >>> import qutip; >>> import numpy as np; >>> np.all([qutip.qeye(2)]); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""<__array_function__ internals>"", line 5, in all; File ""/Users/jake/.anaconda3/anaconda3/envs/qutip-dev/lib/python3.9/site-packages/numpy/core/fromnumeric.py"", line 2411, in all; return _wrapreduction(a, np.logical_and, 'all', axis, None, out, keepdims=keepdims); File ""/Users/jake/.anaconda3/anaconda3/envs/qutip-dev/lib/python3.9/site-packages/numpy/core/fromnumeric.py"", line 87, in _wrapreduction; return ufunc.reduce(obj, axis, dtype, out, **passkwargs); TypeError: must be real number, not Qobj; ```. I think we may be able to get around this with a suitable definition of `Qobj.__array_function__`, though I am a little worried that we'll keep turning up these knock-on effects of `Qobj.__array__`. One major problem is that I'm not sure how we'll define `__array_function__` to satisfy this case, without having to manually disable every single numpy function. We can't have `np.asarray()` not work on `Qobj` because that would break parity with `np.array(qobj)`, however we also can't implicitly convert ourselves to an array if we're in a nested sequence, because then `np.all([qobj])` will pretty much always be false; it will have implicitly become an element-wise operation, even though the user _probably_ meant to check if every object in the array was not the zero operator. This isn't just `np.all`, it's also `np.shape`, `np.any`, and several more that make up the non-ufunc interface of numpy.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1433#issuecomment-778512258:932,reduce,reduce,932,https://qutip.org,https://github.com/qutip/qutip/issues/1433#issuecomment-778512258,1,['reduce'],['reduce']
Energy Efficiency,"Good catch, this seems to be a problem with how the arguments are structured in the function signature for brme_solve. For the tensor formation, . `def bloch_redfield_tensor(H, a_ops, spectra_cb=None, c_ops=[], use_secular=True, sec_cutoff=0.1):`. In this case, the spectra_cb is given the [ohmic_spectrum] argument, which is the correct argument. However, for the brme_solve, the signature is . ```; def brmesolve(H, psi0, tlist, a_ops=[], e_ops=[], c_ops=[],. args={}, use_secular=True, sec_cutoff = 0.1,; tol=qset.atol,; spectra_cb=None, options=None,; progress_bar=None, _safe_mode=True, verbose=False):; ```. If you run the same code with . `output = brmesolve(H, psi0, tlist, [sigmax()], e_ops, spectra_cb = [ohmic_spectrum]); `. the code will run perfectly. However, this is an issue we should fix since spectra_cb is a depreciated argument and technically the c_ops list should accommodate arbitrary noise power spectrum functions that spectra_cb handled before. The error seems to be originating because ohmic_spectrum is of type function but the safety checker expects either a Qobj or a tuple. Also, once we fix the documentation/code on how to use c_ops, we also need to add depreciate warning to bloch_redfield_tensor to maintain uniformity.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1223#issuecomment-605703993:914,power,power,914,https://qutip.org,https://github.com/qutip/qutip/issues/1223#issuecomment-605703993,1,['power'],['power']
Energy Efficiency,Hadamard transform efficient,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1688:19,efficient,efficient,19,https://qutip.org,https://github.com/qutip/qutip/pull/1688,1,['efficient'],['efficient']
Energy Efficiency,"Having looked at the description of the function, that is it specifically refers to density matrices, then I would say that it does what it promises to do, and that the changes mean that it does it much better. So (now) personally I don't think we need to adapt for a pure vs pure state in this method.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/361#issuecomment-134933420:256,adapt,adapt,256,https://qutip.org,https://github.com/qutip/qutip/issues/361#issuecomment-134933420,1,['adapt'],['adapt']
Energy Efficiency,"Hello Harsh,. Thank for your interest in qutip. The most efficient way for us to interact with code is through Github.; Please attempt a draft PR for this. There are many test functions in our; project that you can use as a template. Assuming that you are interested in GSoC, when assessing candidates, an; ability to work independently is a key criteria. All the best with it, we look forward to reviewing your PR. Alex. On Tue, 21 Mar 2023, 18:06 Harsh Khilawala, ***@***.***>; wrote:. > @Ericgig <https://github.com/Ericgig> Thanks for getting back to me. I; > will refer to pytest tutorials on web but I found some code lines like; > following:; >; > @pytest.mark.parametrize; > @check_pngs_equal; > @pytest.fixture; > @pytest.mark.repeat(10)...; >; > Can you please let me know when and why were these used? Is there a; > resource also for this one?; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/pull/2127#issuecomment-1478364599>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ACGFP3MUPPBWDTOQGGBNOTLW5HU2ZANCNFSM6AAAAAAV7J6OKU>; > .; > You are receiving this because you are subscribed to this thread.Message; > ID: ***@***.***>; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2127#issuecomment-1478682804:57,efficient,efficient,57,https://qutip.org,https://github.com/qutip/qutip/pull/2127#issuecomment-1478682804,1,['efficient'],['efficient']
Energy Efficiency,"Hello Nathan, in a couple of hours we will perform the final minor docstring improvements, since we reduced the Cognitive Complexity. Tomorrow is finally ready!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1739#issuecomment-992488933:100,reduce,reduced,100,https://qutip.org,https://github.com/qutip/qutip/pull/1739#issuecomment-992488933,1,['reduce'],['reduced']
Energy Efficiency,"Hello! As @jakelishman described, you can help debug this issue by trying:. ```python; from qutip.cy.openmp.parfuncs import spmv_csr_openmp; ```. and reading the exception produced. I suspect that the `qutip.cy.openmp.*` packages will simply not have been compiled -- they're only built by QuTiP when ""--with-openmp"" is passed to `setup.py` and I think `conda install ... qutip` will not do that even when OpenMP is already installed. To correct this you will need to install QuTiP from source and pass `--with-openmp` yourself as described in https://qutip.org/docs/latest/installation.html?highlight=openmp#direct-setuptools-source-builds. We probably could make ""openmpi"" and ""no-openmpi"" builds for conda-forge by adapting the pattern in https://conda-forge.org/docs/maintainer/knowledge_base.html#openmp but that would require some work (and be a feature enhancement :).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1378#issuecomment-916822166:718,adapt,adapting,718,https://qutip.org,https://github.com/qutip/qutip/issues/1378#issuecomment-916822166,1,['adapt'],['adapting']
Energy Efficiency,"Hello, I posted this issue on the QuTiP Tutorials GitHub repo, but it doesn't look like anyone is monitoring it. I've tried googling, but I only find stuff about making sure Imagemagick and Ghostscript are installed and they both are. I also made sure texlive was installed. When I try to generate a circuit diagram as follows:. > %matplotlib inline; > from qutip import *; > from qutip.qip.models.circuitprocessor import *; > from qutip.qip.models.spinchain import *; > ; > N = 3; > qc = QubitCircuit(N); > ; > qc.add_gate(""CNOT"", targets=[0], controls=[2]); > ; > qc.png; > . I get a stack trace. > FileNotFoundError Traceback (most recent call last); > <ipython-input-2-4489e338191c> in <module>(); > 4 qc.add_gate(""CNOT"", targets=[0], controls=[2]); > 5 ; > ----> 6 qc.png; > ; > /home/jhellmers/anaconda3/lib/python3.6/site-packages/qutip/qip/circuit.py in png(self); > 1012 def png(self):; > 1013 from IPython.display import Image; > -> 1014 return Image(self._repr_png_(), embed=True); > 1015 ; > 1016 @property; > ; > /home/jhellmers/anaconda3/lib/python3.6/site-packages/qutip/qip/circuit.py in _repr_png_(self); > 1004 ; > 1005 def _repr_png_(self):; > -> 1006 return _latex_compile(self.latex_code(), format=""png""); > 1007 ; > 1008 def _repr_svg_(self):; > ; > /home/jhellmers/anaconda3/lib/python3.6/site-packages/qutip/qip/circuit_latex.py in _latex_compile(code, filename, format); > 60 os.system(""convert -density %s %s.pdf %s.png"" % (100, filename,; > 61 filename)); > ---> 62 with open(""%s.png"" % filename, ""rb"") as f:; > 63 result = f.read(); > 64 else:; > ; > FileNotFoundError: [Errno 2] No such file or directory: 'qcirc.png'; > . I'm using. My configuration information is as follows:. > Software	Version; > QuTiP	4.1.0; > Numpy	1.11.3; > SciPy	0.18.1; > matplotlib	2.0.0; > Cython	0.25.2; > Number of CPUs	4; > BLAS Info	INTEL MKL; > IPython	5.1.0; > Python	3.6.0 |Anaconda 4.3.1 (64-bit)| (default, Dec 23 2016, 12:22:00) [GCC 4.4.7 20120313 (Red Hat 4.4.7-1)]; > OS	posix [lin",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/702:98,monitor,monitoring,98,https://qutip.org,https://github.com/qutip/qutip/issues/702,1,['monitor'],['monitoring']
Energy Efficiency,"Hey Eric,. I've been working on improving the underlying structure of FLiMESolve and; making it more efficient. I haven't done another review request yet because; I want to try to address as many things as I can at once. I've been delayed; heavily by a system I'm trying to solve for my paper about this solver, on; which Simon has offered to help such that I'll hopefully be moving forward; again soon. Additionally, there are some changes I want to make that I'm; not sure how to do which I'm going to try to address with Simon when we are; able to meet next. Most of those are in regards to structural things, e.g.; how to filter input ""args"" arguments to pull out the frequency of the; Hamiltonian in the same manner as other solvers in QuTiP are able to filter; arguments. I've been trying to avoid submitting review requests/questions; in the PR comments too much so as not to be a bother. I have definitely not; abandoned this PR, and plan on seeing it through fully, although I; apologize for my relative lack of communication the last few weeks. Thanks!. On Mon, Aug 21, 2023, 11:29 AM Eric Giguère ***@***.***>; wrote:. > @magnamancer <https://github.com/magnamancer> are you waiting for review,; > still working on the PR or abandoned it?; >; > There are still issues I raised here and in magnamancer#4; > <https://github.com/magnamancer/qutip/pull/4>, that you have not been; > addressed and I am waiting for them before the next round of review.; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/pull/2186#issuecomment-1686550860>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AV5WL5GN3R6GPKYKYNOWSGDXWN5GDANCNFSM6AAAAAAZWI6GRQ>; > .; > You are receiving this because you were mentioned.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2186#issuecomment-1686607935:101,efficient,efficient,101,https://qutip.org,https://github.com/qutip/qutip/pull/2186#issuecomment-1686607935,1,['efficient'],['efficient']
Energy Efficiency,"Hi @DnMGalan totally forgot this was up!. I think the main code has been iterated on a few times, but can still be improved. Maybe (1) was done already (I think... ). However (2) and (3) are still open. On (2) as a complementary thing, I recently tried the method in appendix A of this paper for calculating finite time moments and cumulants and stuff https://arxiv.org/abs/1012.0750 It works very nicely. . Interestingly, we can also do it a different way with autograd in Jax, taking derivatives of the whole generating function equation of motion directly. also seemed to work pretty well (seemed a little more efficient). I have some basic notebooks of both of these things, can share with you, and we can think about making it generic and robust. (3) I am a little rusty on, we can discuss about it next week. (christian flindt is also visiting, so we can grill him about it!)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/442#issuecomment-2005373020:614,efficient,efficient,614,https://qutip.org,https://github.com/qutip/qutip/issues/442#issuecomment-2005373020,1,['efficient'],['efficient']
Energy Efficiency,"Hi @Ericgig, @jakelishman,. Thanks very much for the very helpful replies! I will try these suggestions in my application Eric!. Jake, when you say the following:; > Oh of course, I had `mcsolve` in mind as to why that couldn't be done (and in that case, my interpolation wouldn't work either because of the separation of the decay channels)... Is it that, this:; ```; def L(t, args):; H = H(t, ...); c_op = C(H, t, ...); return qutip.liouvillian(H, [c_op]). mcsolve(L, ..., c_ops=[]); ```. won't work due to `_funcrhs` treating `h_func` as a Hamiltonian always? If this is the only factor (as far as I can see), then I think I can further hack this to make callbacks work for me locally. I'm not yet sure if the numpy arrays method will work here but this is what I will strive for. Some details of my plans: I am doing dynamics simulations of quantum annealing processes. We use a certain number of qubits (between 4 and 8) biased and coupled in certain ways to produce examples of 'difficult' problems for adiabatic quantum computation, where the instantaneous energy gaps can have very small minima during evolution. The resulting ODEs appear to be 'stiff' and long evolution times are required to observe high probabilities of being in the ground state. The combination of these things appears to make solving for long evolution times very time consuming. I observed a massive speedup using `mcsolve` however. What I wish to do is include various decay channels, which in the physical systems we use, we understand to be in the 'weak coupling limit' defined by T. Albash here:; https://arxiv.org/pdf/1503.08767.pdf. Another note: A number of colleagues have found most useful the RK45 method implemented in what I understand to be 'new' ode solver scipy code `scipy.integrate.solve_ivp`. I notice that the 'dopri5' option for `scipy.integrate.ode` is likely the same thing. This is something I will play with also.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1260#issuecomment-630067552:1064,energy,energy,1064,https://qutip.org,https://github.com/qutip/qutip/issues/1260#issuecomment-630067552,1,['energy'],['energy']
Energy Efficiency,"Hi @MrRobot2211,. indeed that project is still open, see https://github.com/qutip/qutip/wiki/Google-Summer-of-Code-2021#1-error-mitigation-in-qutip. However, compared to last year, the workload is reduced because this year GSoC reduces the required working time (now 175h in total). If you are interested in the part that is removed (e.g. concrete physical model), you are still welcome to draft a proposal according to your interest. It does not have to follow exactly the ideas proposed on the wiki page as long as it is a self-contained project and related to QuTiP. @nathanshammah in case he has comments.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1457#issuecomment-792274551:197,reduce,reduced,197,https://qutip.org,https://github.com/qutip/qutip/issues/1457#issuecomment-792274551,2,['reduce'],"['reduced', 'reduces']"
Energy Efficiency,"Hi QuTiP users,. I am not quite sure how I should introduce the issue that I have, but basically it comes down to the fact that my Hamiltonian and a particular function seems to require >500 GB of RAM for some parameters used. For the desired parameters, this can even become Terabytes which is hard to implement. . The main parameters by the way is N, which is the dimension of the Hilbert Space. The maximum is N=111 when running the program on the 500 GB node. The memory usage fits very good to a RAM (MB) = 0.0008804*N^4 dependence. A strange thing is that Slurm's MaxRSS command says that only 133,690 MB was needed to run the program, which is not close to the 500 GB. The memory profiler said that one function required 145,766.2 MiB (152,846.9 MB) at some point, and 327,769.4 MiB (343,691.1 MB) was freed. Together this comes close to the 500 GB, although I don't understand the numbers. I have no profound knowledge of the memory allocation in Python and QuTiP, but I would like to check if this can be improved. I went to two IT consultants who are in charge of the National Supercomputer in the Netherlands, and they also found no errors in my code. One of their suggestions was to ask you for advice on this topic. Of course, I can provide you with more details (the whole code, the outcome of the memory profiler, the meaning of the parameters and the infrastructure), but I don't want to overwhelm you. I look forward to hearing from you. Best regards,. Xavier",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/845:1064,charge,charge,1064,https://qutip.org,https://github.com/qutip/qutip/issues/845,1,['charge'],['charge']
Energy Efficiency,"Hi all, . A little while back, we had [this conversation](https://groups.google.com/forum/?fromgroups#!topic/qutip/AlMMzkRtijo) about adding some code I recently wrote to QuTiP. I've got a fairly primitive version of the code working now, so I'd like to see what you think. I tried to mimic the appearance of partial_transpose as much as possible, for familiarity to QuTiP users. Things yet to be done include:; - Rewriting the 'kernel' of the efficient application code in Fortran 90, f2py-ing and wrapping for increased speed; - Ensuring that no un-needed copies of the various arrays involved are being made; - (Perhaps, if you're so inclined) adding more structure to superoperators objects, so that they can be more easily handled. I think we've got a good start, let me know what I can do to bring the code up to your standards. Cheers,. Ben",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/22:444,efficient,efficient,444,https://qutip.org,https://github.com/qutip/qutip/pull/22,1,['efficient'],['efficient']
Energy Efficiency,"Hi guys, thanks for looking at this! I actually made a fork to implement this: https://github.com/lfry512/qutip. In my fork I added some extra type checks and some extra functions in _LiouvillianFromFunc that support a c_ops callback. The way this was done just requires the user to use qt.lindblad_dissipator where appropriate. The use case that isn't implemented is H in list format and c_ops as a callback. @Ericgig thanks for the neat suggestion! This is very pertinent as I then moved on to try the same functionality with mcsolve, which doesn't support a callback for H and c_ops in the master branch. Yesterday I got callback functionality working for H in mcsolve but haven't committed it yet. However it's about 20 times slower than using the equivalent list format in my tests. @jakelishman it sounds like you worked on mcsolve. If you are interested I would love to discuss with you how to make the H callback method for mcsolve more efficient. I'm also trying to figure out if it is possible to make a cython callback builder class that can be used for building the Lindblad operators from instantaneous eigenstates of the Hamiltonian more efficiently. I am not sure how my changes fit in to the overhaul of the solver system, but in mcsolve I did somewhat make use of the SolverSystem instance that is built in place.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1260#issuecomment-629164724:945,efficient,efficient,945,https://qutip.org,https://github.com/qutip/qutip/issues/1260#issuecomment-629164724,2,['efficient'],"['efficient', 'efficiently']"
Energy Efficiency,"Hi the `steadystate` has some problem with optional keyword and scipy/mkl solver.; To have the notebook work, if you have mkl installed, you can change the cell calling `steadystate` to:; ```; solvers = ['direct','eigen','power','iterative-gmres','iterative-bicgstab']; mech_dms = []. for ss in solvers:; if ss in ['iterative-gmres','iterative-bicgstab']:; rho_ss, info = steadystate(H, c_ops, method=ss, use_precond=True, ; use_rcm=True, tol=1e-15, return_info=True); else:; rho_ss, info = steadystate(H, c_ops, method=ss,; use_rcm=False, return_info=True); print(ss,'solution time =',info['solution_time']); rho_mech = ptrace(rho_ss, 1); mech_dms.append(rho_mech); mech_dms = np.asarray(mech_dms); ```; Without mkl installed, skip the 'direct' method. Help Wanted: Some rework of the keywords_args treatment, testing solver/method mixes ('direct' + 'scipy' should work but don't) updating notebooks and docstring, etc. would be appreciated.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1017#issuecomment-501454602:222,power,power,222,https://qutip.org,https://github.com/qutip/qutip/issues/1017#issuecomment-501454602,1,['power'],['power']
Energy Efficiency,"Hi! I am also having trouble at this step. Any (temporary) solution for me?; ; def dot(ais, bis):; """"""; Dot product; """"""; return sum(ai*bi for ai, bi in zip(ais, bis)); fock_trunc = 20; n_modes = len(fs); a = qutip.destroy(fock_trunc); ad = a.dag(); n = qutip.num(fock_trunc); mode_fields = [tensor_out(a + ad, i) for i in range(n_modes)]; mode_ns = [tensor_out(n, i) for i in range(n_modes)]; linear_part = dot(fs, mode_ns). ---------------------------------------------------------------------------; OverflowError Traceback (most recent call last); Cell In[79], line 11; 9 ad = a.dag(); 10 n = qutip.num(fock_trunc); ---> 11 mode_fields = [tensor_out(a + ad, i) for i in range(n_modes)]; 12 mode_ns = [tensor_out(n, i) for i in range(n_modes)]; 13 linear_part = dot(fs, mode_ns). Cell In[79], line 11, in <listcomp>(.0); 9 ad = a.dag(); 10 n = qutip.num(fock_trunc); ---> 11 mode_fields = [tensor_out(a + ad, i) for i in range(n_modes)]; 12 mode_ns = [tensor_out(n, i) for i in range(n_modes)]; 13 linear_part = dot(fs, mode_ns). Cell In[15], line 5, in tensor_out(op, loc); 3 op_list = [qutip.qeye(fock_trunc) for i in range(n_modes)]; 4 op_list[loc] = op; ----> 5 return reduce(qutip.tensor, op_list). File ~\AppData\Local\anaconda3\envs\epr_analysis\Lib\site-packages\qutip\tensor.py:84, in tensor(*args); 82 out.dims = q.dims; 83 else:; ---> 84 out.data = zcsr_kron(out.data, q.data); 86 out.dims = [out.dims[0] + q.dims[0], out.dims[1] + q.dims[1]]; 88 out.isherm = out.isherm and q.isherm. File ~\AppData\Local\anaconda3\envs\epr_analysis\Lib\site-packages\qutip\cy\spmath.pyx:328, in qutip.cy.spmath.zcsr_kron(). File ~\AppData\Local\anaconda3\envs\epr_analysis\Lib\site-packages\qutip\cy\spmath.pyx:673, in qutip.cy.spmath._safe_multiply(). OverflowError: value too large",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/853#issuecomment-1783933236:1176,reduce,reduce,1176,https://qutip.org,https://github.com/qutip/qutip/issues/853#issuecomment-1783933236,1,['reduce'],['reduce']
Energy Efficiency,Hi!; Assume that the system will reach a steady state.; Is there an efficient method to estimate the time it takes to reach the steady state (or to enter and remain within a specified error band)? ; My wish is that I do not have to calculate the steady state (using the steadystate function or others) to achieve that. Thank you very much.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/319:68,efficient,efficient,68,https://qutip.org,https://github.com/qutip/qutip/issues/319,1,['efficient'],['efficient']
Energy Efficiency,"Hi, @abhisekupadhyaya nice work! . Usually a high cognitive complexity indicates that the function is too long or too deep for understanding and maintenance, but sometimes it exaggerates a bit, so it's fine as long as everything is clear. To reduce the function length, for example, if the checking part and each gate parsing can be resued (e.g for QASM v2), they can be defined in a separate function. Another minor thing, what about leaving a short warning when ignoring the unsupported code?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1139#issuecomment-562831745:242,reduce,reduce,242,https://qutip.org,https://github.com/qutip/qutip/pull/1139#issuecomment-562831745,1,['reduce'],['reduce']
Energy Efficiency,"Hi, I have updated the interface to make it much much easier to use. And, I added the unit test and now the test will succeed. The test is the following: generate random Hamiltonians and run perturbation and see whether the energy levels match with the exact solutions. I have done all I want to do up to now. So, please review these codes again and consider merging them.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/282#issuecomment-109847098:224,energy,energy,224,https://qutip.org,https://github.com/qutip/qutip/pull/282#issuecomment-109847098,1,['energy'],['energy']
Energy Efficiency,"Hi, interesting, thank you for your detailed description!. > When the transformation is made for DrudeLorentzBath, the result generated differs from that for DrudeLorentzPadeBath (and it is not about the number of frequencies used). First of all, are you sure that either of `DrudeLorentzBath` and `DrudeLorentzPadeBath` give the right solution? Because the `ck_real` / `vk_real` are supposed to be the coefficients / exponents of the real part of the correlation function (and the others the imaginary part), and if you plug in imaginary parameters, then terms that previously were only in the real parts could pick up imaginary parts etc. Perhaps this kind of thing cancels out when you add the two unphysical D-L baths to get the shifted D-L bath?. Regarding your proposed solution -- I would say, in the case where `gamma` is not real, the spectral density is unphysical and there is no *a priori* correct way to handle this case. In other words, in a sense, the code before the change is wrong (or right) and the code after the change is just as wrong (or right). I therefore think it wouldn't hurt to implement this change so that your use case can be supported. However, I would want to be very sure that in the case where the parameters are all real, the results are not affected by the change. Is that so? Only asking because that is not clear to me at first glance. A more ""complete"" and probably more efficient solution would be to add a whole new `ShiftedDrudeLorentzBath`, and to put in analytically derived formulas for the Matsubara / Pade expansion coefficients. (As a first step, you could also calculate these coefficients manually and create a `BosonicBath` object from them directly.)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2520#issuecomment-2323132801:1412,efficient,efficient,1412,https://qutip.org,https://github.com/qutip/qutip/issues/2520#issuecomment-2323132801,1,['efficient'],['efficient']
Energy Efficiency,"Hi,. It seems there are some errors in the Floquet `mesolve`-equivalent function, which are not seen when considering a simple qubit. Consider for instance an harmonic oscillator with a drive, which should converge towards a coherent state:. ```python; %matplotlib notebook. import numpy as np; from qutip import (basis, destroy, expect, fsesolve, sigmax, sigmaz, rand_ket, num,; mesolve); from qutip.floquet import (floquet_modes, floquet_modes_table,; floquet_modes_t_lookup, fmmesolve). # Parameters; wc = 1.0 * 2 * np.pi; wp = 1.5 * 2 * np.pi; T = 2 * np.pi / wp; N = 20; epsilon_p = np.sqrt(2) * np.sqrt(8) * (wp - wc). psi0 = basis(N,0); a = destroy(N); H = [; wc * a.dag() * a,; [1.0j * epsilon_p * (a.dag() - a), 'cos(wp * t)']; ]. args = {; 'wp': wp; }. # noise power spectrum; gamma1 = 0.05; def noise_spectrum(omega):; return 0.5 * gamma1 * omega / (2 * np.pi). tlist = np.linspace(0, 5 / gamma1, 100). # find the floquet modes for the time-dependent hamiltonian; f_modes_0, f_energies = floquet_modes(H, T, args). # precalculate mode table; f_modes_table_t = floquet_modes_table(f_modes_0, f_energies,; np.linspace(0, T, 500 + 1),; H, T, args). # solve the floquet-markov master equation; output = fmmesolve(H, psi0, tlist,; [a], [], [noise_spectrum], T, args). # For reference: calculate the same thing with mesolve; output_ref = mesolve(H, psi0, tlist, [np.sqrt(gamma1) * a],; [], args); ```. `output_ref.states[-1]` is a coherent state as expected. ![image png 1200 x 1200 pixels - redimensionnee 79](https://user-images.githubusercontent.com/3856586/31828448-433fd44a-b588-11e7-9305-e44f88ed8c1b.png). But `output.states[-1]` is far from being a coherent state. ![image png 1200 x 1200 pixels](https://user-images.githubusercontent.com/3856586/31828469-56631e42-b588-11e7-8950-0ca04ce3c70c.png). I tried to debug it, without real success for now :/. EDIT: Might be partially related to #624.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/772:771,power,power,771,https://qutip.org,https://github.com/qutip/qutip/issues/772,1,['power'],['power']
Energy Efficiency,"Hi,. Sometimes it is useful to write an hamiltonian in a charge state basis. This requires the basis to be able to run through integers from minus infinity to plus infinity. This is typically the case in [this Qutip example notebook](https://nbviewer.jupyter.org/github/jrjohansson/qutip-lectures/blob/master/Lecture-11-Charge-Qubits.ipynb). In this notebook, the author manually creates a numpy object and cast it to a `Qobj`. What about offering an analog to `qutip.basis` for such states?. Thanks",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/562:57,charge,charge,57,https://qutip.org,https://github.com/qutip/qutip/issues/562,2,"['Charge', 'charge']","['Charge-Qubits', 'charge']"
Energy Efficiency,"Hi,. There is a [manual integration](https://github.com/qutip/qutip/blob/master/qutip/floquet.py#L602-L624) using rectangles method in `qutip.floquet` file which sometimes fail. Problem is that the number of timesteps, `nT`, is hardcoded and not accessible to the user. In my case, `nT = 100` does not seem to be enough and the integral is wrong. A quick and dirty fix is to have an extra `nT=100` keyword argument to `floquet_master_equation_rates`, so that user can overload it. Still, it does not seem to be the most efficient way of doing it. I have a quick fix I can contribute which is using `scipy.integrate.simps` instead. This requires keeping an array of values to integrate in memory (which is less memory-efficient) but I could keep `nT=100` and get the correct integral by using this method. I guess the best option would be to use [`scipy.integrate.quad`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.integrate.quad.html#scipy.integrate.quad), as it uses an adaptive algorithm. I can contribute a fix for this, just looking for feedback on the best available option :). Thanks!",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/767:520,efficient,efficient,520,https://qutip.org,https://github.com/qutip/qutip/issues/767,3,"['adapt', 'efficient']","['adaptive', 'efficient']"
Energy Efficiency,"Hi,; I'm running qutip on the latest Ubuntu LTS version in 64 bit. All required packages (gfortran etc.) are installed from the repository. No matter if I use the qutip package from the repository or compile it from source, the testing results into 3 errors:. > > > import qutip.testing as qt; > > > qt.run(); > > > Qobj data ... ok; > > > Qobj type ... ok; > > > Qobj Hermicity ... ok; > > > Qobj shape ... ok; > > > Qobj addition ... ok; > > > Qobj subtraction ... ok; > > > Qobj multiplication ... ok; > > > Qobj division ... ok; > > > Qobj power ... ok; > > > Qobj negation ... ok; > > > Qobj equals ... ok; > > > Qobj getitem ... ok; > > > Qobj multiplication type ... ok; > > > Qobj conjugate ... ok; > > > Qobj adjoint (dagger) ... ok; > > > Qobj diagonals ... ok; > > > Qobj eigenenergies ... ok; > > > Qobj eigenstates ... ok; > > > Qobj expm ... ok; > > > Qobj full ... ok; > > > Qobj ket type ... ok; > > > Qobj bra type ... ok; > > > Qobj operator type ... ok; > > > Qobj superoperator type ... ok; > > > Transform 2-level to eigenbasis and back ... ok; > > > Transform 10-level real-values to eigenbasis and back ... ok; > > > Transform 10-level to eigenbasis and back ... ok; > > > Transform 10-level imag to eigenbasis and back ... ok; > > > Consistency between transformations of kets and denstity matrices ... ok; > > > correlation: comparing me and es for oscillator in coherent initial state ... ok; > > > correlation: comparing me and es for oscillator in steady state ... /usr/lib/python2.7/dist-packages/scipy/sparse/linalg/dsolve/umfpack/umfpack.py:576: UmfpackWarning: (almost) singular matrix! (estimated cond. number: 2.84e+15); > > > warnings.warn(msg, UmfpackWarning); > > > ok; > > > correlation: compare spectrum obtained for eseries and fft methods ... /usr/lib/python2.7/dist-packages/scipy/sparse/linalg/dsolve/umfpack/umfpack.py:576: UmfpackWarning: (almost) singular matrix! (estimated cond. number: 1.67e+12); > > > warnings.warn(msg, UmfpackWarning); > > > ok; > >",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/126:544,power,power,544,https://qutip.org,https://github.com/qutip/qutip/issues/126,1,['power'],['power']
Energy Efficiency,"Hi,; There are many methods for the steadystate solver, some are faster, some are less stable. I would suggest trying other method until your find a good one for your problem.; Available method are: ; `'direct', 'eigen', 'iterative-gmres', 'iterative-lgmres', 'iterative-bicgstab', 'svd', 'power', 'power-gmres', 'power-lgmres', 'power-bicgstab'`. `'direct'` and `'power'` can use mkl as a solver, all can use scipy. You can also try to change some options such as the tolerance and max iteration number. ; The options for each solver are different depending on the solver and not all are documented. ; I list them here if you want to go deeper:. For scipy:; ```; 'sparse': True, ; 'use_rcm': False,; 'use_wbm': False, ; 'weight': None, ; 'use_precond': False,; 'all_states': False, ; 'M': None, ; 'x0': None, ; 'drop_tol': 1e-4,; 'fill_factor': 100, ; 'diag_pivot_thresh': None, ; 'maxiter': 1000,; 'tol': 1e-12, ; 'matol': 1e-15, ; 'mtol': None,; 'permc_spec': 'COLAMD', ; 'ILU_MILU': 'smilu_2',; 'restart': 20, ; 'return_info': False,; 'info': _empty_info_dict(),; 'verbose': False, ; 'solver': 'scipy'; ```. For mkl:; ```; 'max_iter_refine': 10, ; 'scaling_vectors': True, ; 'weighted_matching': True, ; 'return_info': False, ; 'info': _empty_info_dict(), ; 'verbose': False, ; 'solver': 'mkl', ; 'use_rcm': False, ; 'use_wbm': False, ; 'weight': None, ; 'tol': 1e-12, ; 'matol': 1e-15, ; 'mtol': None, ; 'maxiter': 1000; ```. Lastly, most steadystate's method have a logger if you activate debug in setting:; ```; import qutip.settings as settings; settings.debug = True; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1077#issuecomment-527620834:290,power,power,290,https://qutip.org,https://github.com/qutip/qutip/issues/1077#issuecomment-527620834,5,['power'],"['power', 'power-bicgstab', 'power-gmres', 'power-lgmres']"
Energy Efficiency,"Hi. I can only speak for myself, but personally this is not something that I'd be willing to work on, or recommend anyone to work on for that matter. That said, if you or someone else think it is important, work it out, and are willing to maintain it, we could of course consider including it in the qutip project (probably as an extension package or so). However, I think it would be better to spend time on improving qutip itself by identifying where qotoolbox is more efficient and do something about the corresponding code in qutip. What parts of qotoolbox are you interested in using from qutip and how much slower do you experience qutip to be compared to the qotoolbox in those areas?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/48#issuecomment-27611560:471,efficient,efficient,471,https://qutip.org,https://github.com/qutip/qutip/pull/48#issuecomment-27611560,1,['efficient'],['efficient']
Energy Efficiency,"I agree that is is getting a bit unwieldy with all the options to the steadystate function, many of which only have meaning for specific solvers. We should do something about that. I wouldn't favor getting rid of the steadystate function though.. It might break a lot of old code and I think it is nice to have a high-level API that is decoupled from the specific implementation (direct, interative, or something else). Currently steadystate is only dispatching to other functions, and I think that is how it is supposed to be. To solve the problem with diverging options requirements for different solvers I would suggest changing the function signature to. ```; def steadystate(A, c_ops=[], method='direct', **kwargs):; ...; if method == 'direct'; steadystate_direct(A, c_ops, **kwargs); ```. and defer all the specifics about kwargs to specific solvers (including docstrings). That would bring the default values of those options closer to where they are used and reduce duplication. It would also allow us more flexibility in maintaining a backwards compatible api, and future maintainability. It's fine with me to make _steadystate_direct and _steadystate_iterative publicly accessible.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/108#issuecomment-41362284:967,reduce,reduce,967,https://qutip.org,https://github.com/qutip/qutip/issues/108#issuecomment-41362284,1,['reduce'],['reduce']
Energy Efficiency,I agree with @Ericgig on the possibility of having no template and adding the suggestions for tests in the template. . I understand now that the changelog in qutip/qutip was a bad idea for the reasons you mention.; I still think it would be nice to somehow automate the way the changelog is compiled (right now by whoever is in charge of the release). Is there a simple and smart way to do this? Otherwise we could just look up the changelog section in each PR as per this template.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1198#issuecomment-602676649:328,charge,charge,328,https://qutip.org,https://github.com/qutip/qutip/pull/1198#issuecomment-602676649,1,['charge'],['charge']
Energy Efficiency,"I always forget about `xrange` versus `range`, sorry about that. Anyway, I used generators as opposed to lists as I didn't need the additional structure of lists, and as the Python 3 style has been to express as much as possible in terms of generators. For example, `range`, `zip` and `map` are all generators now. In that spirit, by making `qubit_clifford_group` a generator, I don't assume that the user needs to remember the entire group, nor that the user wants to store the group in a list as opposed to a more specialized structure. This will be especially important, I think, should there be a need later to introduce a function that enumerates over multi-qubit Clifford groups. In that respect, the current choice is in anticipation of consistency with future features. As for the question of `reduce` versus a triply-nested `for` loop, my intent there was twofold: first, to reflect the mathematical notation more closely and second, to allow for possible generalization to generating other groups. In L758, `partial(reduce, mul)` is a used to express products over the tuples generated by taking Cartesian products over powers of _E_, _X_ and _S_. This approach should allow generalization such that similar groups can be written out in terms of this technique.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/358#issuecomment-128375591:802,reduce,reduce,802,https://qutip.org,https://github.com/qutip/qutip/pull/358#issuecomment-128375591,3,"['power', 'reduce']","['powers', 'reduce']"
Energy Efficiency,"I am on the side on having 2 `default_dtype` options for the `Qobj` creation functions. I have some question as to how/where to make `default_dtype` more consistent. Applying the default at Qobj creation feels risky to me. In the solver it will end up converting the states before computing the expectation value. It could create strange interactions with operators and unitary transformations (`Qobj[Dense].dag() -> Qobj[CSR]`). `Qobj(scipy_csr)` could be converted to something else... However if `default_dtype` can be seen as _running in that mode_, it certainly could cause confusion.; It's not clear how it is understood in some places. In `eigenstates`, if we run in `CSR` mode, then does that mean that we use the sparse eigen solver? It's a lot worst than the dense one. Or should only the returned ket be in CSR format? . In my tries, the dense steadystate was faster that the sparse one. Could it be an issue that some matrices where too big to fit in RAM forcing to use swap space? We could have a warning when matrices over a certain size are allocated. ps. Should `eigenstates` return the states in one operator instead of a list of kets? I guess the states were used to create the operators fed to `steadystate`, so operator output would be more practical.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2328#issuecomment-1952655861:1056,allocate,allocated,1056,https://qutip.org,https://github.com/qutip/qutip/issues/2328#issuecomment-1952655861,1,['allocate'],['allocated']
Energy Efficiency,"I am trying to use code from User Guide's [Directly Generating an Animation section](http://qutip.org/docs/4.1/guide/guide-bloch.html?highlight=funcanimation#directly-generating-an-animation):. ```; ani.save('bloch_sphere.mp4', fps=20, clear_temp=True); ```. I get the following error:; ```; Traceback (most recent call last):; File ""bloch_test.py"", line 59, in <module>; ani.save('bloch_sphere.mp4', fps=20, clear_temp=True); TypeError: save() got an unexpected keyword argument 'clear_temp'; ```. It looks like OpenDrift may have had the same or similar issue:; https://github.com/OpenDrift/opendrift/issues/9. My hypothesis is that QuTip needs to be adapted to the newer version of Matplotlib.; According to ; ```; from qutip import *; about(); ```; I use Matplotlib version: 2.1.1.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/798:653,adapt,adapted,653,https://qutip.org,https://github.com/qutip/qutip/issues/798,1,['adapt'],['adapted']
Energy Efficiency,I am unable to open slides that were provided on [FOSDEM 2020 presentation](https://archive.fosdem.org/2020/schedule/event/quantum_qutip/). I am able to download the slides but I don't know what format these slides are in. . This presentation was references[ here](https://github.com/qutip/qutip/wiki/Google-Summer-of-Code-2021#1-error-mitigation-in-qutip).,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1467:108,schedul,schedule,108,https://qutip.org,https://github.com/qutip/qutip/issues/1467,1,['schedul'],['schedule']
Energy Efficiency,"I can't quite figure out if this is simply due to the DeprecationWarnings or something else but all tests are failing due to `atol` not being set for the gmres solver. I will try to set `atol` and check if the tests pass. Error log: https://api.travis-ci.org/v3/job/379109482/log.txt.; ```; scipy/sparse/linalg/isolve/iterative.py:2: DeprecationWarning: scipy.sparse.linalg.bicgstab called without specifying `atol`. The default value will be changed in a future release. For compatibility, specify a value for `atol` explicitly, e.g., ``bicgstab(..., atol=0)``, or to retain the old behavior ``bicgstab(..., atol='legacy')``. ```. ```; ..................................................; ======================================================================; ERROR: Steady state: Thermal qubit - power-gmres solver; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/Users/shahnawaz/miniconda3/lib/python3.6/site-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/Users/shahnawaz/dev/qutip/qutip/tests/test_steadystate.py"", line 145, in test_qubit_power_gmres; rho_ss = steadystate(H, c_op_list, method='power-gmres'); File ""/Users/shahnawaz/dev/qutip/qutip/steadystate.py"", line 298, in steadystate; return _steadystate_power(A, ss_args); File ""/Users/shahnawaz/dev/qutip/qutip/steadystate.py"", line 863, in _steadystate_power; v = v / la.norm(v, np.inf); File ""/Users/shahnawaz/miniconda3/lib/python3.6/site-packages/scipy/linalg/misc.py"", line 137, in norm; a = np.asarray_chkfinite(a); File ""/Users/shahnawaz/miniconda3/lib/python3.6/site-packages/numpy/lib/function_base.py"", line 1233, in asarray_chkfinite; ""array must not contain infs or NaNs""); ValueError: array must not contain infs or NaNs. ----------------------------------------------------------------------; Ran 561 tests in 576.175s. FAILED (SKIP=19, errors=1); ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/862:798,power,power-gmres,798,https://qutip.org,https://github.com/qutip/qutip/issues/862,2,['power'],['power-gmres']
Energy Efficiency,"I did some tests and ; 1 - Cause by fortran zheer (lapack eigenvalue solver for complex hermitian matrices) (c's version Ok); 2 - It happen when installing the scipy stack with pip but not when installing it with conda.; 3 - It depend on the problem size, 64 seems particularly bad, usually it fails on the second call.; 4 - I only got it in zheevr which is only used in `brmesolve`. But Nathan got it in other tests which use scipy's `eigh`.; 4 - It happen in scipy in the fortan version of lapack:. ```; import numpy as np; from scipy.linalg import eigh; H = random_hermitian(64); eigh(H) # Work fine; eigh(np.asfortranarray(H)) # segfault after a few try, may need to change H; ```. Possible solutions (for zheevr):. - Installing scipy with conda, the easiest solution, but not in our control.; - Finding a way to link clapack from cython. Linking scipy's one would require good knowledge of scipy internals since only one cython interface is provided. Linking to another installation of lapack, but it would require the user to install lapack or install it with qutip. Both seems wrong to me.; - For mac user, call scipy's eigh from cython i zheevr, slower but better than risking segfault.; - Have the code directly in qutip. We can adapt it from OpenBlas: https://github.com/xianyi/OpenBLAS/blob/master/lapack-netlib/LAPACKE/src/lapacke_zheevr.c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1197#issuecomment-628259492:1238,adapt,adapt,1238,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-628259492,1,['adapt'],['adapt']
Energy Efficiency,"I do not think that much can be done for the mesolver. The update here ; just addresses the resetting of the ODE solver, which is not done in the ; mesolver. I still think that spawning ntraj processes is not a very ; efficient thing to do. So I am working on cleaning that up. However, ; you are correct, moving the ODE creation outside of the mc_alg routine ; does have little effect. > Robert Johansson mailto:notifications@github.com; > December 1, 2014 at 13:48; > ; > Nice speed up! Is there anything here that we could also benefit from ; > in mesolve? Or is it specific to mcsolve in that it mostly affect the ; > ODE restart?; > ; > I doubt that the initial setup of an ODE instance before spawning ; > processes would have any significant impact on the performance (note ; > that multiprocessing does not use threads, it uses processes, so there ; > is no sharing of ODE instances between processes). Creating the ODE ; > instance once in the parent processor, or N times in N processes in ; > parallel therefore should not make much difference, if any.; > ; > —; > Reply to this email directly or view it on GitHub ; > https://github.com/qutip/qutip/pull/264#issuecomment-65020496.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/264#issuecomment-65020643:218,efficient,efficient,218,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-65020643,1,['efficient'],['efficient']
Energy Efficiency,I guess the purpose is to reduce complexity and increase maintainability. I'm not sure how should I reduce this. Separate the input check and use another private method?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1028#issuecomment-505083482:26,reduce,reduce,26,https://qutip.org,https://github.com/qutip/qutip/pull/1028#issuecomment-505083482,2,['reduce'],['reduce']
Energy Efficiency,"I have a trouble in solving a time dependent Bloch-Redfield master equation with arguments.; Let me use an example discussed in [here](https://github.com/qutip/qutip/issues/966); The schedule functions of the time dependent Hamiltonian are defined by using some parameters which are passed to mesolve as args.; This method works well for sesolve and mesolve.; However, if I try to use the same method in brmesolve, it returns error in compiling Cython. I attached a python code which demonstrates the above observation. . I also noticed that in bloch_redfield.py it says; args : dict ; Placeholder for future implementation, kept for API consistency. Would it be possible to use arguments in brmesolve? If not, how could I use parametrically defined schedule functions while avoiding the issue raised in [here](https://github.com/qutip/qutip/issues/966)?. I need this for my research and I would appreciate your help very much. [Qutip Redfield master issue.py.zip](https://github.com/qutip/qutip/files/4028211/Qutip.Redfield.master.issue.py.zip)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1150:183,schedul,schedule,183,https://qutip.org,https://github.com/qutip/qutip/issues/1150,2,['schedul'],['schedule']
Energy Efficiency,"I have not been using qutip for a long time yet, so I apologize in case I am missing something stupid. I'm solving a simple problem with t-dependent Hamiltonian. I have simplified up to the point where the solution should actually just be a constant occupation of ground and first excited state. Here is the setup:. ``` python; from qutip import *; from pylab import *. dim = 40 # number of harmonic oscillator states kept in decomposition; # -- always need to check convergence w.r.t. this. E_j = 20.0 # Josephson energy. a = destroy(dim) # definition of the annihilation operator via qutip. exponent = 1j * (a + a.dag()) # argument of the matrix exponential; exp_iphi = exponent.expm(); cos_phi = 0.5*(exp_iphi + exp_iphi.dag()). H_0 = a.dag() * a # Hamiltonian of LC harmonic oscillator; h_j = - cos_phi # Hamiltonian for the Josephson tunneling contribution; prefactor E_j(t) to be provided separately . energies, states = (H_0 + E_j * h_j).eigenstates() . jump_op_list = [] # no jump operators. # monitor projectors onto the ground and first excited eigenstates; projector0 = states[0] * states[0].dag(); projector1 = states[1] * states[1].dag(). monitor_ops = [projector0, projector1]. psi_0 = states[0] # initial state is the ground state . # tlist = np.linspace(0, Delta_t_min + Delta_t_max + 6*dt, 300) # evenly-spaced time values; tlist = np.linspace(0, 0.5, 300) # evenly-spaced time values; ```. The crucial piece comes now:. ``` python; timefunc_string1 = '20.0'; H1 = [H_0, [h_j, timefunc_string1]]; odesolution1 = mcsolve(H1, psi_0, tlist, jump_op_list, monitor_ops). # NOTE: ONLY ""DIFFERENCE"" W.R.T. PREVIOUS EXAMPLE IS ADDING ZERO!; timefunc_string2 = '0.0*20.0 + 20.0'; H2 = [H_0, [h_j, timefunc_string2]]; odesolution2 = mcsolve(H2, psi_0, tlist, jump_op_list, monitor_ops). plot(tlist, odesolution1.expect[0], tlist, odesolution1.expect[1], lw=2); legend(('Ground state','1st exc.')); ylabel('Occupation probability'); xlabel('Time'). show(). plot(tlist, odesolution2.expect[0], tl",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/215:515,energy,energy,515,https://qutip.org,https://github.com/qutip/qutip/issues/215,1,['energy'],['energy']
Energy Efficiency,I have read a bit about the reasons for moving reduce. The main one seems to be that code using it can be unclear. And that in most cases a for loop can be used to achieve the same in a clearer way. I think that may be applicable here. I have spent a while looking at the line that uses it and I am still not sure what it is doing. I think sacrificing a little succinctness for clarity here may be beneficial.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/358#issuecomment-128328061:47,reduce,reduce,47,https://qutip.org,https://github.com/qutip/qutip/pull/358#issuecomment-128328061,1,['reduce'],['reduce']
Energy Efficiency,"I made up a quick notebook and posted it as qutip/qutip-notebooks#20. In the meantime, I notice I forgot that Python 3 is missing `reduce()`, having moved it to `functools.reduce()`. Is it permissible to import `functools.reduce` conditioned on checking `sys.version_info` so that I can use `reduce`? Thanks!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/358#issuecomment-128187262:131,reduce,reduce,131,https://qutip.org,https://github.com/qutip/qutip/pull/358#issuecomment-128187262,4,['reduce'],['reduce']
Energy Efficiency,"I managed to successfully install QuTiP in conda, however, installation verification resulted in a FAILED test: test_steadystate.py::test_driven_cavity_power_gmres - Exception: power-gmres failed to find solution in 1000 iterations. Instead of getting a test report I also got an infinite loop returning what you can see on the image below. I installed qutip using:; ```; conda config --append channels conda-forge; conda install qutip. import qutip.testing; qutip.testing.run(). ```; Any ideas why this would happen?; Any tips will be highly appreciated:); ![imagen](https://user-images.githubusercontent.com/85493516/148128436-33f94558-327e-4bed-a921-7bff732bc5d5.png)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1750:177,power,power-gmres,177,https://qutip.org,https://github.com/qutip/qutip/issues/1750,1,['power'],['power-gmres']
Energy Efficiency,"I might try and have a look tonight (UK time), if I have time - I've wanted to break up the large `propagator` monolith into smaller components for quite a while. ---. About numerical precision: if you want to try increasing the precision of the integrators, try passing `options=qutip.Options(nsteps=1_000_000, atol=1e-12, rtol=1e-10)` to `propagator`. `atol` and `rtol` are absolute and relative tolerances respectively, and `nsteps` is the number of subdivisions the integrator is _allowed_ to take (if it reaches its tolerance goals, it won't take all of them). You'll find that `atol` and `rtol` will have only a loose relation to the tolerance of your fidelity value, because there's a _lot_ of floating-point operations between those points in which the errors compound, and there's a hard limit on the tolerances the integrator can achieve, so you might not be able to get a perfect answer. The fidelity calculation involves finding the square root of a density operator, so that's another large possible source of error. About times: if you only care about the state at the last time, setting `tlist = np.linspace(0, x, 201)` is quite inefficient. Instead, set `tlist = [0, x]`, and then pass `options=qutip.Options(nsteps=<very very big integer>)`. It's more efficient because it doesn't need to achieve tolerance goals and construct/store `Qobj` instances at every intermediate timestep. Temporary workaround: this is _very_ temporary, and generally a bad idea in QuTiP, but you can ""flatten"" all your operators into a single space for now, while we implement a fix. To do that:; ```python; # initial setup; H = qutip.tensor(...); c_ops = [qutip.tensor(...)]. original_dimensions = H.dims.copy(); new_dimensions = list(H.shape). H.dims = new_dimensions; for c_op in c_ops:; c_op.dims = new_dimensions. outputs = qutip.propagator(H, times, c_ops=c_ops); for op in outputs:; # the ops are superoperators, so have expanded dimensions; op.dims = [original_dimensions, original_dimensions]; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1585#issuecomment-865903199:1591,efficient,efficient,1591,https://qutip.org,https://github.com/qutip/qutip/issues/1585#issuecomment-865903199,1,['efficient'],['efficient']
Energy Efficiency,"I noticed it because I have a code doing spinor lattice physics; the spinor piece is parameterized by the total angular momentum `F`. All of the operators are written as `tensor(spin_part, lattice_part)`. As part of a Brillouin zone unfolding code, I have reason to accumulate increasing powers of an operator in a loop, like. ```; original_state = tensor(basis(2*F+1, 0), basis(N, 0)); op = tensor(qeye(2*F+1), some_lattice_op); while True:; # ...; if occasionally_do_this:; op = base_op * op; transformed_state = op * original_state; ```. This code works fine, except for `F=0`. Since the `original_state` is a 1xN tensor state with `original_state.dims = [[1, N], [1, 1]]`, the `op * original_state` multiplication fails because `op = base_op * op` has deleted the `1` part of of `op`, leaving `op.dims = [[N],[N]]`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/222#issuecomment-53928646:288,power,powers,288,https://qutip.org,https://github.com/qutip/qutip/issues/222#issuecomment-53928646,1,['power'],['powers']
Energy Efficiency,"I propose opening a discussion on migrating from Travis CI to Github Actions workflow. It is a quite general and powerful framework, that allows to specify many [trigger events](https://help.github.com/en/actions/configuring-and-managing-workflows/configuring-a-workflow) and actions. . I have no intention of taking any action, but I think it may be a good thing to discuss. Happy to hear pros and cons.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1236:113,power,powerful,113,https://qutip.org,https://github.com/qutip/qutip/issues/1236,1,['power'],['powerful']
Energy Efficiency,"I report local tests failing on my MacOS 10.13.6 by running qutip.testing.run(). Tests fail for python 3.7 and 3.6 environments, if QuTiP 4.4. is installed in develop mode (openmp = True). ; Tests fail also for QuTiP 4.3.1 installed with conda. . ### py36; Broken test for python 3.6 with: (1) QuTiP 4.4-dev, with openmp =True and (2) conda install qutip, QuTiP 4.3.1: ; Error Message below: ; ``` ; Metrics: Trace dist. & Fidelity mixed/pure inequality ... ok ; Metrics: Check avg gate fidelities for random ... ; python(35852,0x7fff9757f380) malloc: *** error for object 0x7fe189168a10: incorrect checksum for freed object - object was probably modified after being freed. *** ; set a breakpoint in malloc_error_break to debug ; Abort trap: 6 ---------------------------------------------- ; ``` . Building the dev environment: ; ``` conda create --name qutip-dev-44-py36 ; source activate qutip-dev-44-py36 ; conda install python=3.6 cython numpy scipy nose jupyter matplotlib; python setup.py develop --with-openmp; ``` . ### py37; Broken test for python 3.7 with: (1) QuTiP 4.4-dev, with openmp =True and (2) conda install qutip, QuTiP 4.3.1. Error Message below: ; ``` ; qutip.tests.test_qobj.test_expect_exception ... ok Qobj data ... ok Qobj type ... ok Qobj Hermicity ... ok ; Qobj unitarity ... ok ; Qobj shape ... ok ; Qobj: multiplication w/ non-square qobj.dims ... ok ; Qobj addition ... ok ; Qobj subtraction ... ok ; Qobj multiplication ... ok ; Qobj division ... ok ; Qobj power ... ; python(35379,0x7fff9757f380) malloc: *** error for object 0x7fbf1089fa90: incorrect checksum for freed object - object was probably modified after being freed. *** ; set a breakpoint in malloc_error_break to debug ; Abort trap: 6 ; ``` . Building the dev environment: ; ``` conda create --name qutip-dev-44-py37 ; source activate qutip-dev-44-py37 ; conda install python=3.7 cython numpy scipy nose jupyter matplotlib; python setup.py develop --with-openmp```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-473772867:1490,power,power,1490,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-473772867,1,['power'],['power']
Energy Efficiency,"I see. Okay, for sufficiently large matrices there's no requirement for averages, which will reduce the time execution a lot because of the for loop.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1862#issuecomment-1125927027:93,reduce,reduce,93,https://qutip.org,https://github.com/qutip/qutip/pull/1862#issuecomment-1125927027,1,['reduce'],['reduce']
Energy Efficiency,"I still vote for keeping it as it is, because I think it makes sense to keep Qobj \* Qobj in the space of Qobj. This is now numpy.ndarray, numpy.matrix and scipy,sparse.spmatrix works, and I think that one would expect Qobj to do the same. A simple example: imagine you get a Qobj x as an argument to a function, and you do some computation like x.dag() \* op \* x with some operator op. If x is a ket you will get a Python complex as a result with your suggested behavior. But if x is an operator instead you will get a Qobj. Or if x is a tensor of an operator and a ket (like in the top of this issue) you will get something in between, a reduced dimensionality operator. I think it makes a lot more sense to keep the results of all these cases as Qobj. Then if one for example want to do the trace of the result it should work in all cases, and no special handing of C-numbers would be required since Qobj([1]).tr() would give something reasonable, but (Python complex).tr() would obviously fail. The use-case you are interested in, abs(some_bra \* some_ket), could easily be implemented in Qobj by implementing the **abs** special function. I think that would be a better way.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/28#issuecomment-28302814:641,reduce,reduced,641,https://qutip.org,https://github.com/qutip/qutip/issues/28#issuecomment-28302814,1,['reduce'],['reduced']
Energy Efficiency,"I think you might be able to achieve a lot of what you want already. The pseudo-code looks like it's not using `mesolve` super efficiently, though maybe it's only because of simplifications to make a MWE. For example, if your controls are piecewise constant, then it might be inefficient to represent those terms as ""time dependent""; doing so means you incur the cost of multiplying each term by a scalar at every intermediate step the integrator chooses to take, then you have to perform the matrix-vector product for each one individually and add them up. It might be faster already if you evaluate the piecewise varying parts into one ""constant"" part at each point. This isn't guaranteed, because it involves copying rather more data _before_ the call (to construct the constant matrix once), but if the integrator would need to take many intermediate time steps, I expect it would win out. Would something like this work for you?; ```python; times = [0, ...]; # Liouvillians for parts you have control over; control_liouvillians = [qutip.liouvillian(h) for h in control_hamiltonians]; # The time-dependent Hamiltonian for stuff you're not controlling; base_hamiltonian = qutip.QobjEvo([H0, [H1, time_dependence], ...]); # Turn it into a Liouvillian once, so we don't repeat the cost; base = qutip.liouvillian(base_hamiltonian, collapse_operators); state = ...; options = qutip.Options(store_states=False, store_final_state=True); for prev, time in zip(times[:-1], times[1:]):; controls = krotov.get_next_controls(time, state, ...); current_liouvillian = base.copy(); for control, operator in zip(controls, control_liouvillians):; current_liouvillian += control * operator; # ^^^^^^^^^^^^^^^^^^; # each of these terms is a single time-independent Qobj,; # and the sum is a single QobjEvo with all the uncontrolled; # time dependence already handled.; state = qutip.mesolve(current_liouvillian, state, [prev, time], options=options).final_state; ```. By giving `mesolve` the Liouvillian instead of t",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-859873615:127,efficient,efficiently,127,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-859873615,1,['efficient'],['efficiently']
Energy Efficiency,"I tried some experiments with elementwise exp with numpy to see if mkl did any parallel processing. It did not seem to. scipy.linalg.expm claims to use the Pade approximation. There used to be a expm2 (that used diagonalisation) and an expm3 (method?) but these have been deprecated. The scipy docs claim that the method used in expm is ""numerically more robust"". In the control modules we either use a eigendecomp (diagonalisation) method or scipy.linalg.expm_frechet as we typically need to compute propagators (which either uses the eigendecomp or is provided by the frechet deriv) . Frechet also uses some Pade approximation. I think the Pade method uses something like a LU decomp, but would need more research. It would always be more efficient to use the eigendecomp if it has been computed already. My guess is that if parallel LU decomp provides much (x100) faster eigendecomp, then the diagonalisation method would be much faster than expm. However, some experimentation would be needed to verify. . I am told that there are many methods of computing expm, and is there is much numerical research into it. It seems strange that scipy only offer us one method. The spinach control library (http://spindynamics.org/Spinach.php) reputedly has some interesting methods of computing expm. A quick Google search found https://github.com/scipy/scipy/pull/354, which shows that scipy considered adding a method kwarg, but have parked the idea. We currently have multiple methods in qutip based. I assume there must have been some motivation for writing our own sparse matrix functions for expm. It would seem that a pretty thorough investigation would be required determine to value of the various options. Would make a nice self contained project for someone.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/462#issuecomment-207456658:741,efficient,efficient,741,https://qutip.org,https://github.com/qutip/qutip/issues/462#issuecomment-207456658,1,['efficient'],['efficient']
Energy Efficiency,"I tried to calculate the inverse of an operator as following:; ```; >>> import qutip as qt; >>> from scipy.sparse.linalg import inv; >>> inv(qt.sigmaz().data); C:\Users\username\Miniconda3\lib\site-packages\scipy\sparse\linalg\dsolve\linsolve.py:296: SparseEfficiencyWarning: splu requires CSC matrix format; warn('splu requires CSC matrix format', SparseEfficiencyWarning); C:\Users\username\Miniconda3\lib\site-packages\scipy\sparse\linalg\dsolve\linsolve.py:203: SparseEfficiencyWarning: spsolve is more efficient when sparse b is in the CSC matrix format; 'is in the CSC matrix format', SparseEfficiencyWarning); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""C:\Users\username\Miniconda3\lib\site-packages\scipy\sparse\linalg\matfuncs.py"", line 78, in inv ; Ainv = spsolve(A, I); File ""C:\Users\username\Miniconda3\lib\site-packages\scipy\sparse\linalg\dsolve\linsolve.py"", line 223, in spsolve; shape=b.shape, dtype=A.dtype); File ""C:\Users\username\Miniconda3\lib\site-packages\qutip\fastsparse.py"", line 59, in __init__; if args[1].shape[0] and args[1].dtype != np.int32:; AttributeError: 'tuple' object has no attribute 'shape'; ```; I don't know why this doesn't work.; Although I can convert it to be dense, and use `scipy.linalg.inv` to do the same job,; the super operaters to be inverted in my actual problems are extremely large and sparse, and the inverses are also expected to be sparse.; So I want to find a way without converting them to dense.; But I didn't find any function in QuTiP to do that. Or maybe I missed it?. BTW, the version I use is:; ```; QuTiP Version: 4.4.1; Numpy Version: 1.16.5; Scipy Version: 1.3.1; Cython Version: 0.29.13; Matplotlib Version: 3.1.1; Python Version: 3.7.3; Number of CPUs: 4; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Windows (AMD64); Installation path: C:\Users\username\Miniconda3\lib\site-packages\qutip; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1102:507,efficient,efficient,507,https://qutip.org,https://github.com/qutip/qutip/issues/1102,1,['efficient'],['efficient']
Energy Efficiency,"I understand completely!. I'd probably just go to `int64` with your internal CSR implementation for the moment. Would it be very easy to have the `int32`/`int64` boiled down to a single compile-time flag, for those people that compile QuTiP manually and feel they really need the smaller `int32` matrices? The pre-compiled pip/conda releases could be `int64`. That might be a simple way to provide some support for ""both"". Somehow, I thought that SciPy would put a lot more emphasis on performance, and do things like Kronecker products without conversion. It would seem that SciPy should be the place to really optimize the sparse linear algebra implementation, including all the possible combinations like `CSR * DIA`. Then everyone could build on top of that, making custom sparse-matrix implementation unnecessary. Maybe when someone gets some serious funding for working on QuTiP, encapsulating all of this better would be doable. So, just something to keep in mind before bolting on too many things onto the existing custom implementation (like multiple sparse and full storage formats). Once you open up that can of worms, it just might be better to re-design `Oobj.data` to have a very broad base (e.g. SciPy), and keep the custom CSR as an optional, highly efficient implementation for the special case, maybe in a separate package. Either way, it's going to be a lot of work, and not something for a minor-version release.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/850#issuecomment-384094285:1266,efficient,efficient,1266,https://qutip.org,https://github.com/qutip/qutip/issues/850#issuecomment-384094285,1,['efficient'],['efficient']
Energy Efficiency,"I was claiming that the algorithm from the Molmer paper is different because it relies on small timesteps and it does not use stepping back (or more generally, it does not use any form of root finding). They are probably equivalent, but I did not find the equivalence obvious. Thanks for the reference, I will check it out. Also, for the sake of more efficient root finding (if I understand correctly currently you are just repeating the integration over a smaller interval) you might find this interesting: http://mail.scipy.org/pipermail/scipy-user/2010-March/024890.html",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/344#issuecomment-105091967:351,efficient,efficient,351,https://qutip.org,https://github.com/qutip/qutip/issues/344#issuecomment-105091967,1,['efficient'],['efficient']
Energy Efficiency,"I was just thinking about this again and came up with a good speed up for the truncated Hilbert space. I can't think of any method to get analytic closed-form solutions for the truncated space, though, so this is just a more efficient numerical method. First we take the generator of the displacement operator `G`, such that `exp(G)` is the displacement operator we're looking for. `G` is anti-Hermitian, and so it shares its eigensystem (up to scaling of the eigenvalues) with the Hermitian `i G` and consequently is diagonalised by a unitary formed of its eigenvectors. Now `S = i G / abs(alpha)` is a tridiagonal Hermitian, and with a similarity transformation we can find a _real-symmetric_ tridiagonal `T = P^-1 . S . P` for some diagonal unitary `P` (which is easy to calculate). The reason for scaling out `alpha` here should become clear at the end. The main diagonal of `T` is all zeros, and the first sub- and super-diagonals look like; ```[sqrt(1), -sqrt(2), sqrt(3), -sqrt(4), ...]```; and the diagonal of `P` looks like; ```[i, e^(-1i arg(alpha)), i e^(-2i arg(alpha)), e^(-3i arg(alpha)), ...]```. Now this real-symmetric tridiagonal form is the basis of Hermitian eigenvalue solvers, and has direct entry points in LAPACK (e.g. `?stemr`), which allow us to pass only the main diagonal and the first subdiagonal. Scipy provides convenient wrapped access in Python by `scipy.linalg.eigh_tridiagonal`. This lets us get the full eigensystem of `T`, which is related to that of `G` by dividing the eigenvalues by the scaling factor, and multiplying the eigenvectors by `P` to transform them into the correct basis. We now have a diagonalised matrix `G = Q^-1 . D . Q`, so `exp(G) = Q^-1 . exp(D) . Q`, which is now trivial because `D` is diagonal. Putting all this together allows us to use our knowledge of the problem domain to convert the matrix exponentiation problem into a much simpler real-symmetric tridiagonal eigensystem problem, which gets us a nice big speed up, and it's equival",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1293#issuecomment-645685030:225,efficient,efficient,225,https://qutip.org,https://github.com/qutip/qutip/issues/1293#issuecomment-645685030,1,['efficient'],['efficient']
Energy Efficiency,"I was thinking something on the same lines as in `__mul__`for `Qobj`:; ```python; coeff_real = all(element.coeff(t).imag==0 for element in self.elements) ; data_herm = all(element.part(t).isherm for element in self.elements); return Qobj(..., isherm=(coeff_real and data_herm) or None); ```; Although I imagine it can be made more efficient by not looping twice in self.elements and probably using the loop in `_call`method. This way you always try to guess the hermeticity of QobjEvo even if it is not constant.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2000#issuecomment-1257265957:331,efficient,efficient,331,https://qutip.org,https://github.com/qutip/qutip/pull/2000#issuecomment-1257265957,1,['efficient'],['efficient']
Energy Efficiency,"I will work on ; plot_wigner_sphere, ; matrix_histogram,; inner functions,; deprecated functions (e.g. energy level diagram),; cmap on qubism and schmidt,; documents",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2170#issuecomment-1596919269:103,energy,energy,103,https://qutip.org,https://github.com/qutip/qutip/pull/2170#issuecomment-1596919269,1,['energy'],['energy']
Energy Efficiency,"I would like CI to check that the documentation builds work, but maybe we can reduce what is built somewhat once we're happy with how ReadTheDocs is set up. I suggest that on ReadTheDocs we build docs for all the active release branches (so currently qutip-4.7.X and qutip-5.0.X) and then yes, we'll have to update which is stable when that changes.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2087#issuecomment-1428131345:78,reduce,reduce,78,https://qutip.org,https://github.com/qutip/qutip/pull/2087#issuecomment-1428131345,1,['reduce'],['reduce']
Energy Efficiency,"I would like to have the BEC code be classes that have functions for BEC within QuTiP which can be used for Fluid Dynamics experiments. Specifically for high energy particle physics. ; Could we schedule a time to meet perhaps to discuss further? Maybe a zoom? ; Thank you . Hanah Rahman . > On Apr 19, 2022, at 3:20 PM, Simon Cross ***@***.***> wrote:; > ; > ﻿; > @hrahman12 This sounds very interesting. How much of the idea do you have fleshed out so far?; > ; > If the plan is a very complete package targeting a specific physical system or family of systems, it might be best to have a separate package that used QuTiP. Such a package could however be part of the QuTiP family of packages potentially (e.g. in the same way qutip-qip is a separate package now).; > ; > On the other hand, if you want specific support for a few key classes and functions that might be more widely applicable (e.g. constructors for new quantum states or operators, a new kind of solver, new visualisation) those might well belong in the main QuTiP package (i.e. this repository).; > ; > Keen to facilitate your work if you're keen to do it -- we just need to figure out what is the best plan.; > ; > —; > Reply to this email directly, view it on GitHub, or unsubscribe.; > You are receiving this because you were mentioned.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1872#issuecomment-1103039679:158,energy,energy,158,https://qutip.org,https://github.com/qutip/qutip/issues/1872#issuecomment-1103039679,2,"['energy', 'schedul']","['energy', 'schedule']"
Energy Efficiency,"I'm not entirely sure what's being asked of us here, because the code numba supports is to do with the numba developers, not us? numba is a compiler for Python code accessing NumPy arrays in ways other than internal NumPy compiled C code. The benefit to QuTiP users even if numba _were_ to add support would be minor, because a) we use custom sparse matrices which numba couldn't currently target to a GPU efficiently and b) almost all of our heavy code is compiled C, which is already as the same target as standard numba. We aren't going to convert (e.g.) `Qobj` to a numba `jitclass` because our entire library is written in Cython, and besides, the speed-ups come from the internal `Qobj.data` attributes, which we are already low-level. GPU-based sparse matrix routines are an interesting side-note, but will require very specialised data structures and accesses. This is more possible in the new data-layer added in 5.0, but still would require a huge amount of work. We're not likely to achieve this by using numba, but instead to use specialised GPU-enabled data structures like cupy instead, since that fits into our data model better.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/900#issuecomment-809667000:406,efficient,efficiently,406,https://qutip.org,https://github.com/qutip/qutip/issues/900#issuecomment-809667000,1,['efficient'],['efficiently']
Energy Efficiency,"I'm not sure if this is the most efficient way to do this, but here's what I came up with. The previous version only worked for linear tlists, this one now works for arbitrary tlists",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/520:33,efficient,efficient,33,https://qutip.org,https://github.com/qutip/qutip/pull/520,1,['efficient'],['efficient']
Energy Efficiency,"I've just pushed a couple of commits to fix up a little bit of the formatting (it was the squashed lines I meant, rather than the particular level of indent or location of the keyword `or`) and to slightly fix the tolerance of the eigenvalue test. The individual uncertainty in any eigenvalue is allowed to be ~1e-12, so when you sum them all up to compare them, you have to propagrate the uncertainty through. Don't worry about the random test failure you got in a pickle test one time - that wasn't your fault and we know about it and have fixed it for the next major release of QuTiP already. Also don't worry about the speed of the CI tests. You can't reliably benchmark by comparing CI runs because you never know what else was running on the physical hardware at the same time. Travis are ramping down the amount of processing power available to us while they're transition business model. I'll be moving our testing infrastructure elsewhere when I've got a bit more time to sort it out, and have decided what we actually want/need/can get. In the mean time, we just live with the occasional test failure if a Mac Xcode12 machine is overloaded when we get to it. We can rerun them if we need to; it's not worth compromising on our test coverage.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1498#issuecomment-822688883:833,power,power,833,https://qutip.org,https://github.com/qutip/qutip/pull/1498#issuecomment-822688883,1,['power'],['power']
Energy Efficiency,I've merged #1752 and scheduled this for inclusion in the 4.6.3 release. Thank you again for reporting this @goerz!,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1753#issuecomment-1006012360:22,schedul,scheduled,22,https://qutip.org,https://github.com/qutip/qutip/issues/1753#issuecomment-1006012360,1,['schedul'],['scheduled']
Energy Efficiency,"If I define a 1-level annihilation operator with ``qutip.destroy(1)``, and then I try to take a power to any integer, qutip throws an exception. I think this is because scalars are recognized as bras, and bras are not operators.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/981:96,power,power,96,https://qutip.org,https://github.com/qutip/qutip/issues/981,1,['power'],['power']
Energy Efficiency,"If they call BLAS functions then they should use threads. It looks like scipy is calling the mkl blas where as numpy is not. A bit odd. . > On Apr 8, 2016, at 09:52, Alexander Pitchford notifications@github.com wrote:; > ; > Yes, I did the mkl.set_num_threads. This is my test script; > ; > import numpy as np; > import timeit; > ; > NUM_THREADS = 1; > ; > try:; > import mkl; > use_mkl = True; > except:; > use_mkl = False; > ; > def timing(f):; > def wrap(_args):; > time1 = timeit.default_timer(); > ret = f(_args); > time2 = timeit.default_timer(); > print('{} function took {:0.3f} ms'.format(f.**name**, (time2-time1)*1000.0)); > return ret; > return wrap; > ; > if use_mkl:; > mkl.set_num_threads(NUM_THREADS); > print(""Number of threads is {}"".format(mkl.get_max_threads())); > else:; > print(""mkl unavailable""); > ; > d = 10000; > n_reps = 10; > A = np.random.random([d, d]); > ; > print(""Starting tests""); > ; > @timing; > def calc_exp(A):; > for i in range(n_reps):; > E = np.exp(A); > ; > calc_exp(A); > Whether I set NUM_THREADS to 1 or 4 I only see one processor active in system monitor, and the processing time is the same.; > ; > This is what starting me looking into whether I should expect numpy / scipy to use multiple cores. The articles I read suggested that numpy and scipy do not contain any intrinsic parallelisation. It may have been out-of-date.; > ; > Now I just tried a similar test with scipy.linalg.expm and it did use multiple processors and was approximately twice as fast with 4 than with 1.; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly or view it on GitHub; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/462#issuecomment-207494345:1094,monitor,monitor,1094,https://qutip.org,https://github.com/qutip/qutip/issues/462#issuecomment-207494345,1,['monitor'],['monitor']
Energy Efficiency,"If you're concerned about the solvers, a) they skip tidyup til the end anyway and b) _technically_ the computational complexity of CSR * dense vector is identical to tidyup (though tidyup is a little more cache efficient), but really it's the constant factors that could kill you for small systems. For example, the ""naive"" way of implementing a relative tolerance would take the absolute value of a complex number, but that involves a floating-point square root, which is a very slow operation. That's likely partly why the current version compares real and imaginary components separately, even though the sparsity structure is only improved if _both_ go to zero. In a two-pass operation you'd sqrt twice for every entry (naively - all the square roots are very avoidable), and I'd start to worry that that really _could_ dominate small system operations. Or maybe you should just ignore me when assigning ""good first issues"" - I'm probably too opinionated about performance characteristics without enough experience at managing other people's code!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1349#issuecomment-793991141:211,efficient,efficient,211,https://qutip.org,https://github.com/qutip/qutip/issues/1349#issuecomment-793991141,1,['efficient'],['efficient']
Energy Efficiency,"In #1332 there is a huge drop in reported test coverage by Coveralls. This is because large tracts of the most-tested Python files were either severely reduced in length, or converted to Cython files, and it seems that Coveralls does not correctly handle Cython; it reports the existence of a `x.py` file for every `x.pyx` file that exists, with the `.py` file having 7 lines, all of which are apparently untested. The new data-layer types _are_ tested albeit not as completely as they will be once they're finished, but Coveralls has reported a huge drop in coverage. I don't know if any coverage estimators exist for Cython (I would expect not due to their compiled nature), but it's perhaps something we should consider. Also, Coveralls counts the test files as part of its coverage indicator. By my rough count, there are 42,223 SLOC in `qutip` (i.e. excluding comments and whitespace but unfortunately including docstrings), of which 11,259 are in `qutip/tests`. Aside from a couple of skipped tests, 100% of the lines in `qutip/tests` will be run, so if we produce a modified coverage report, having 61% of the SLOC covered in _all_ of `qutip` is equivalent to; ```python; >>> (0.61*42_223 - 1.00*11_259) / (42_223 - 11_259); 0.4681898; ```; **46.8% true coverage**. We probably could really do with a concerted effort to add more tests of all the little nuances of the code.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1339:152,reduce,reduced,152,https://qutip.org,https://github.com/qutip/qutip/issues/1339,1,['reduce'],['reduced']
Energy Efficiency,"In mcsolve_f90; `ptrace_sel` specifies which dimensions you want to keep after calculation, and it's a useful feature, but suppose you have a system containing 100 electrons, and what you need is to know evolution of density matrix of each electron. You cant keep the state of the whole system in memory as it will take too much memory. ; The problem is that with ptrace_sel you can get only one partially traced density matrix.(if we consider the system with electrons, you can monitor only one electron or several electrons); So it would be nice to have functionality which will allow to get many partially traced matrixes simultaneously.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/213:479,monitor,monitor,479,https://qutip.org,https://github.com/qutip/qutip/issues/213,1,['monitor'],['monitor']
Energy Efficiency,"In the construction of the RHS of the equation for the Hierarchy Equations of Motion (`non_markov/heom`) there is a bug found by @nwlambert . If the 'system' is actually a tensor product of systems it fails as the dimensions are incorrect. This can be fixed by changing the construction of the RHS in `non_markov/heom.py` (line 310) from. ```; sup_dim = H_sys.dims[0][0]**2; unit_sys = qeye(H_sys.dims[0]); ```; to. ```; N_temp = reduce(mul, H_sys.dims[0], 1); sup_dim = N_temp**2; unit_sys = qeye(N_temp); ```. I will open a PR to do the same. Just raising the issue so that it is documented and helps others find the problem in the previous versions.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/794:430,reduce,reduce,430,https://qutip.org,https://github.com/qutip/qutip/issues/794,1,['reduce'],['reduce']
Energy Efficiency,"In the mcsolver function, it seems that (read from tutorial) the **quantum jumps** happen when a random number is generated larger than **(1-dp)**, where **dp** is no jump probability. And this is the only option for jumping in the algorithm. . In theory, there is another strategy to choose **jump**--that is to use the concept of **waiting time** (see Dum and Zoller's PRA **45** (7), 1992 paper, for example). That is to say, we check the no jump time **t** to see if it is longer than the waiting time $\tau$: if **t** is longer, then a quantum jump happens; otherwise, there is no jump. . Could anyone make the mcsolver flexible enough to let users freely to choose which strategy to use in the algorithm? Each of these two strategies have different meanings and their own advantages: the jumping probability strategy is good for simulating measurement models; the waiting time is more efficient if one just wants to know the averaged result. . If currently none can implement this idea, could you provide a direction for me to write another mcsolver to use the counterpart strategy of jumping? Thanks. Regards,; Qi",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/111:891,efficient,efficient,891,https://qutip.org,https://github.com/qutip/qutip/issues/111,1,['efficient'],['efficient']
Energy Efficiency,"Indeed you are right, it turns out to be a matter of convention and everything is correct (`spre`, `spost`, `lindblad_dissipator`). For multiple superoperators, I prefer using numpy because of its powerful broadcasting support. Hopefully, this discussion will help anyone else facing a similar situation. Keep doing great!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1285#issuecomment-643321875:197,power,powerful,197,https://qutip.org,https://github.com/qutip/qutip/issues/1285#issuecomment-643321875,1,['power'],['powerful']
Energy Efficiency,"Indeed, it is [in the code](https://github.com/qutip/qutip/blob/2aa51b92df57f995778940815d20d293f00f8a9d/qutip/operators.py#L888-L948). However, I cannot find any reference to them in [the documentation](http://qutip.org/docs/3.1.0/search.html?q=charge&check_keywords=yes&area=default). EDIT: Ok, my bad, documentation and official pip releases are 3.1.0 and it seems to have been added recently :/",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/562#issuecomment-263879657:246,charge,charge,246,https://qutip.org,https://github.com/qutip/qutip/issues/562#issuecomment-263879657,1,['charge'],['charge']
Energy Efficiency,Integrate scheduler into the compiler,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1444:10,schedul,scheduler,10,https://qutip.org,https://github.com/qutip/qutip/pull/1444,1,['schedul'],['scheduler']
Energy Efficiency,Integrate the pulse scheduler into Processor,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1365:20,schedul,scheduler,20,https://qutip.org,https://github.com/qutip/qutip/pull/1365,1,['schedul'],['scheduler']
Energy Efficiency,"It is likely because finding eigenvalues of non Hermitian systems depends; on the condition number. I think redoing the current code to use the; shifted inverse power method or something similar might be the way to go. On Nov 8, 2016 6:01 AM, ""Gleb Fedorov"" notifications@github.com wrote:. > While simulating the dynamics of a driven non-linear oscillator I; > discovered that with small relaxation and weak driving the steady state; > returned by the propagator_steadystate() function is incorrect compared; > with a state obtained from many successive applications of the propagator; > (see plots below):; > ; > [image: alt text]; > https://cloud.githubusercontent.com/assets/3819012/20099571/a213fb02-a5d2-11e6-92cd-481f0a60667d.png; > Populations of the ground and first excited states for two ways of finding; > the steady state.; > ; > The problem is with numpy.linalg.eig() which fails to find a correct; > eigenvector for U. I don't know if this problem is tractable; instead, I; > suggest adding a function to propagator.py which calculates the steady; > state from U and some initial state using the successive application; > approach. If you think this is useful, I would be happy to implement it.; > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > https://github.com/qutip/qutip/issues/556, or mute the thread; > https://github.com/notifications/unsubscribe-auth/ABMPqeETpQvlQ6B0GUyajpgnHwt12EVPks5q8HKmgaJpZM4KsZfk; > .",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/556#issuecomment-259147457:161,power,power,161,https://qutip.org,https://github.com/qutip/qutip/issues/556#issuecomment-259147457,1,['power'],['power']
Energy Efficiency,"It is possible to pass a list of Qobj to mesolve, where it is compiled into c. This is of course not the most efficient thing to do, but it is allowed. This pull makes the brmesolve function work in this case.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/737:110,efficient,efficient,110,https://qutip.org,https://github.com/qutip/qutip/pull/737,1,['efficient'],['efficient']
Energy Efficiency,"It looks like your parameters are a bit challenging for the ODE solver (the Rabi frequency Omega is much much smaller than the energy splitting omega). If you change the ODE tolerances using options you will find it gives the expected result, e.g., something like: . ```; options = qt.Options(rtol=1e-8, atol=1e-8); result = qt.mesolve(H, rho0, t, options=options,progress_bar=True); ```. If you use a ket instead of a density operator mesolve() will pass the problem to sesolve(), which I guess for some reason is more robust in this case. It is a little annoying it is just failing silently. I am curious if you tried in v5?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2229#issuecomment-1713056542:127,energy,energy,127,https://qutip.org,https://github.com/qutip/qutip/issues/2229#issuecomment-1713056542,1,['energy'],['energy']
Energy Efficiency,"It seems like 4fa892932b1062b31fcaf2640987c8ecfa7d7a19 fixed the problem with the broken demos(). But if demos application is going to continue to be an official part of qutip, I think it would be better to dispatch each demo in a separate process, using ""fork() and exec()"", instead of the current method of ""compile() and eval()"" which seems not very robust (that is, it crashes the application if something goes wrong in the example script). Also, the text-based demos can probably be dropped because I doubt anyone use that function. . But work on new qutip demos should probably be using ipython notebooks, I think, so I'm not sure how much energy we should spend on the demos application.. But on the other hand not everyone uses the ipython notebook, so the qt demos application probably might still has a role to play.. and some effort to make it more robust might be worthwhile?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/19#issuecomment-18893809:646,energy,energy,646,https://qutip.org,https://github.com/qutip/qutip/issues/19#issuecomment-18893809,1,['energy'],['energy']
Energy Efficiency,"It will convert the `CSR` to `Dense` then use `add_dense`. `iadd` for sparse is not easy. When none-zero entry are not lining up, the array need to be expanded.; Also if the values cancel themselves, there is a need to remove an entry and more the others to fill the gap... Also our dispatcher, the code that allocate `add(Data, Data)` to each specialization `add_dense`, `add_sparse`, does not support inplace operation.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2298#issuecomment-1904621660:309,allocate,allocate,309,https://qutip.org,https://github.com/qutip/qutip/issues/2298#issuecomment-1904621660,1,['allocate'],['allocate']
Energy Efficiency,"It's related to #1720 - only Numpy 1.21 has cp310 wheels, but the build system currently requires Numpy <1.20 to build, because when we build QuTiP wheels for general consumption, we need to use Numpy pre-1.20 in order to have runtime support for a range of Numpys (the C ABI changed in 1.20, but they keep it forwards compatible, so things built against older Numpys will work with newer ones). As a quick fix for this issue with 3.10 only, you should be able to changes these lines in `setup.cfg` and `pyproject.toml`:; ```; setup_requires =; numpy>=1.16.6,<1.20; scipy>=1.0; cython>=0.29.20; packaging; ```; to; ```; setup_requires =; numpy>=1.16.6,<1.20 ; python_version<3.10; numpy>=1.21 ; python_version>=3.10; scipy>=1.0; cython>=0.29.20; packaging; ```; (or something like that - I forget the exact syntax). That should let you build on 3.10 (where pre-1.20 Numpy versions aren't an issue), but it doesn't solve the general problem of #1720.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1732#issuecomment-983781212:167,consumption,consumption,167,https://qutip.org,https://github.com/qutip/qutip/issues/1732#issuecomment-983781212,1,['consumption'],['consumption']
Energy Efficiency,"Just a question: If we can use la.sinm and la.cosm in the tests, why not use it in the qobj method? Is the expm based method likely to be more efficient?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/440#issuecomment-187062059:143,efficient,efficient,143,https://qutip.org,https://github.com/qutip/qutip/pull/440#issuecomment-187062059,1,['efficient'],['efficient']
Energy Efficiency,"Just adding my two cents. From my experience, a lot of our users don't know how to efficiently locate the error and find the solution. Simply posting a HOW-TO guide along with the release notes might not be sufficient, because the users may not be aware of its existence. It would help I think if we could; - raise an error or warning message that locates the error as clear as possible and; - if feasible, leave a link in the error/warning message directing the users to the HOW-TO guide.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1949#issuecomment-1179740053:83,efficient,efficiently,83,https://qutip.org,https://github.com/qutip/qutip/issues/1949#issuecomment-1179740053,1,['efficient'],['efficiently']
Energy Efficiency,"Just adding some minor comments here, not really related to the core discussion; > We could have a warning when matrices over a certain size are allocated. I don't think it is good unless we can read the available memory and derive the warning threshold from that. On the cluster, we sometimes have up to hundreds of GB of memory. The threshold should be different from computer to computer. > Should eigenstates return the states in one operator instead of a list of kets?. I do often want eigenstates to return one operator. Many times I have to get the kets to NumPy array and recreate the unitary operator from them. Maybe we can have an additional argument to the function.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2328#issuecomment-1953129675:145,allocate,allocated,145,https://qutip.org,https://github.com/qutip/qutip/issues/2328#issuecomment-1953129675,1,['allocate'],['allocated']
Energy Efficiency,"Just that we also have '_noise_direct()' which does a bit of linear algebra to avoid using the pseudo-inverse. i think it can be a bit more numerically efficient than mucking around with the inverse itself. Maybe doing the pseudo-inverse tends to involve a big large dense matrix, and this avoids it?. iirc, the logic of noise_direct is, since we write the pseudo-inverse like $R=QL^{-1}Q$, the annoying term we have to evaluate in the noise expression is something like:. $$y = I QL^{-1} Q I \rho. $$. so we substitute, for the last few terms. $$x = L^{-1} QI\rho $$. we multiply from the left by L, to get. $$L x = Q I \rho$$. and we can find x using a scipy's solve or something equivalent, and then find y with. $$y = IQ x$$. In the skewness you have this new term,. $$y =I R R I P I \rho$$. which is a bit clunky to manipulate.; maybe we can write something like. $$x = L^{-1}QIPI \rho$$. and again, multiplying by L. $$Lx = QIPI \rho$$. to get x, then the original expression is now. $$y = IQL^{-1}QQx$$. defining a new variable. $$t = L^{-1}QQx$$. we can again, multiply by L. $$Lt = QQx$$,. solve for t, then we get . $$y= IQ t$$. ? i probably made a mistake, so take with a grain of salt!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2435#issuecomment-2138882230:152,efficient,efficient,152,https://qutip.org,https://github.com/qutip/qutip/pull/2435#issuecomment-2138882230,1,['efficient'],['efficient']
Energy Efficiency,"Just to add that we also have operator evolution in the form. $$ \partial_t \begin{pmatrix} U \\\\ U' \end{pmatrix} = -i \begin{pmatrix} H & 0 \\\\ H' & H \end{pmatrix} \begin{pmatrix} U \\\\ U' \end{pmatrix}, $$. and similar with $U$ switched for a map and $H$ for some Lindblad superoperator, in goat, which seems to work fine in terms of the multiplication during the ODE update step. So, as suggested, it would seem that mainly we just want a nice, efficient method for constructing / extracting these objects.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2384#issuecomment-2046601871:453,efficient,efficient,453,https://qutip.org,https://github.com/qutip/qutip/issues/2384#issuecomment-2046601871,1,['efficient'],['efficient']
Energy Efficiency,"Looking through the commit history, @nonhermitian wrote the graph functions back in 2013: see fd4920d. Since then, he contributed a lot of the same code to `scipy` in `scipy.sparse.csgraph`: see https://github.com/scipy/scipy/pull/3751. I suggest we consider dropping most of them, and consequently their surrounding `Cython` code to ease maintainability and reduce code bloat of the repository. First, a couple of arguments against doing so:; - the versions in `scipy` and `qutip` did subsequently diverge in some form, because they no longer universally give the same results, possibly as a result of #654.; - the `qutip` version of `reverse_cuthill_mckee` is about 10% faster than the `scipy` version; - people may be using them. I think the main argument in favour of removal is that they're now also in `scipy` as `scipy.sparse.csgraph`. For the speed argument, for 1000 by 1000 matrices we're talking 780us vs 850us per matrix difference, so it's unlikely to be a limiting factor, and I think the ability to remove a large chunk of Cython code and maintainability cost outweighs this. I began investigating this because I was looking at `qutip.graph.reverse_cuthill_mckee`, since some of its tests are incorrect. The error is here:; https://github.com/qutip/qutip/blob/01132789581821517986fad1a14ab3feec7d2de2/qutip/tests/test_graph.py#L91-L108; Line 105 is broken: it should read; ```python; assert np.all(ans_perm == perm); ```; to test if _all_ the elements match. As it stands, it currently tests that _not all are different_, or in other words, it would only fail if not a single element in the two arrays matched. On fixing this line, we then learn that the test is actually a failing test, because the expected and actual results do not match (though they do however have equal bandwidths). I also note that `qutip` and `matlab` are in disagreement for the test case there: for the matrix; ```python; np.array([[0, 0, 0, 1, 0, 1, 0, 0, 0, 0],; [0, 0, 1, 0, 1, 0, 1, 0, 0, 1],; [0, 1, 0, 1",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1203:359,reduce,reduce,359,https://qutip.org,https://github.com/qutip/qutip/issues/1203,1,['reduce'],['reduce']
Energy Efficiency,Looks good to me. @bastikr could you please explain the difference between the green and orange lines. And what is the red line that seems to trump all?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/683#issuecomment-292923784:79,green,green,79,https://qutip.org,https://github.com/qutip/qutip/pull/683#issuecomment-292923784,1,['green'],['green']
Energy Efficiency,"Made a new fork, applied change to super_to_choi which ought to fix the efficient subsystem channel application tests.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/85:72,efficient,efficient,72,https://qutip.org,https://github.com/qutip/qutip/pull/85,1,['efficient'],['efficient']
Energy Efficiency,Make mcsolve more memory efficient,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1669:25,efficient,efficient,25,https://qutip.org,https://github.com/qutip/qutip/pull/1669,1,['efficient'],['efficient']
Energy Efficiency,"Matrix exponentiation is a costly operation. See [1][Nineteen Dubious Ways to Compute the Exponential of a Matrix, Twenty-Five Years Later∗](https://www.cs.cornell.edu/cv/ResearchPDF/19ways%2B.pdf). In a quantum optics, the displacement operator is one of the most basic. It is used to create coherent states from vacuum and forms one of the two gates for universal control of a cavity (Displacement + SNAP gates) [2] [Efficient cavity control with SNAP gates](https://arxiv.org/abs/2004.14256). When we want to write an optimisation routine that finds best displacement parameters in a routine similar to the paper above [2], it would be nice if we can compute the operator faster without doing matrix exponentiation as qutip does now:; https://github.com/qutip/qutip/blob/master/qutip/operators.py#L732. I have some notes from a colleague who calculated an analytical formula to compute the matrix elements of the displacement operator without having to do matrix exponentiation [3]: ; [Displacement_operator.pdf](https://github.com/qutip/qutip/files/4791455/Displacement_operator.pdf). A PR to implement this in QuTiP would be great. We could first write a `_displace_analytical` function that calculates the displacement matrix using the [Scipy Laguerre polynomial](https://docs.scipy.org/doc/scipy/reference/generated/scipy.special.genlaguerre.html) and have it as an option as `displace(N, alpha, offset, method=`analytical` )`. Could it also come in handy for optimal control? @ajgpitch . In the paper above [2], the authors use gradient descent to fine tune the parameters of a gate sequence containing displacement gates and SNAP gates to target some Bosonic quantum state. We wish to do similar things for @araza6 s GSoC project.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1293:419,Efficient,Efficient,419,https://qutip.org,https://github.com/qutip/qutip/issues/1293,1,['Efficient'],['Efficient']
Energy Efficiency,"Measuring the statistics of electron transport though nanostructures has been found to be a powerful experimental tool to gather information about such structures. The functions in countstat.py return the first two cumulants of a transport process, which are associated with measuring the current and shot noise, respectively. However at the moment they are a little buggy, and the current noise function fails sometimes, depending on the dimensionality of the system. As well as fixing this issue, there a couple of enhancements that can be done:. 1) Making the current noise function frequency dependant. This just requires adding a list of frequencies to return, and calculating the noise power for each given frequency ( at the moment it returns the zero frequency current noise). 2) Adding higher-order current cumulants. This is a straightforward generalization of the current noise function, though for very high orders the expansion of a given cumulant in terms of pseudo-inverse and current operators can be a little complicated. An iterative method for generating these can be found in C. Flindt et al., Phys. Rev. Lett. 100, 150601 (2008). and C. Flindt, T. Novotny, A. Braggio, and A.-P. Jauho, Phys. Rev. B 82, 155407 (2010). 3) Calculate the large-deviation function of the current. Such functions return the probability of observing deviations from the average transport behaviour, and have been found to give insight on a range of physical phenomena, including bistability and criticality (and, more practically, life insurance!).",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/442:92,power,powerful,92,https://qutip.org,https://github.com/qutip/qutip/issues/442,2,['power'],"['power', 'powerful']"
Energy Efficiency,MemoryError when trying to allocate big numpy array,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2176:27,allocate,allocate,27,https://qutip.org,https://github.com/qutip/qutip/issues/2176,1,['allocate'],['allocate']
Energy Efficiency,"Nah, don't disparage yourself - your code is good and you've done well to copy the style of the rest of the files. Typically consistency is better than having ""the one true style""; code's read more than it's written, and having a module which is clearly written by four different people makes the logic very very difficult to follow, which in turns makes it much harder to spot bugs. If it were up to me (which is isn't, really), I would say that your changes are good as they are. I didn't mean for the comments to be changes you _had_ to make. You can't reduce the number of merge conflicts that are going to happen with #1181 anyway, because that PR is a massive refactor of large swathes of the testing suite. You've done a good job to keep your work consistent with the rest of the file, so it will be very easy to merge in your logical changes. Merge conflicts are pretty much just par for the course; just the fact that we're discussing this here shows that logically, there _is_ a conflict between two pieces of work being done at the same time. I'd suggest merging this as-is. We'll handle the problems caused by the refactor elsewhere.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1224#issuecomment-607971891:556,reduce,reduce,556,https://qutip.org,https://github.com/qutip/qutip/pull/1224#issuecomment-607971891,1,['reduce'],['reduce']
Energy Efficiency,"Nonlinear functions on the density matrix need to be evaluated on each block by factoring in its degeneracy, given by `state_degeneracy(N,j)` for each block `j` for an ensemble of `N` two-level systems. Working on efficient functions and a notebook to highlight this feature.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/993#issuecomment-510891449:214,efficient,efficient,214,https://qutip.org,https://github.com/qutip/qutip/issues/993#issuecomment-510891449,1,['efficient'],['efficient']
Energy Efficiency,"Not sure if this is a conda issue now as I can run the test script in the windows powershell terminal with `python .\qutiptest.py` where qutiptest.py is; ```python; import qutip; b=qutip.Bloch(); b.show(); ```; and I get the same behaviour as when I run throught the VS code debugger, where the matplotlib window flashes briefly. I can also recreate the rest of the VS code behaviour like this.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1616#issuecomment-883541243:82,power,powershell,82,https://qutip.org,https://github.com/qutip/qutip/issues/1616#issuecomment-883541243,1,['power'],['powershell']
Energy Efficiency,"Nothing too clever here. As in cached flag cleared whenever unitarity threatened; The check could probably be more efficient, but as not expected to be used intensively, then this would seem acceptable.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/817#issuecomment-364163769:115,efficient,efficient,115,https://qutip.org,https://github.com/qutip/qutip/pull/817#issuecomment-364163769,1,['efficient'],['efficient']
Energy Efficiency,"Now it gives me one other error and a failure (and I have the impression the I can deal with the prior errors better than with the new one):. > > > import qutip.testing as qt; > > > qt.run(); > > > Qobj data ... ok; > > > Qobj type ... ok; > > > Qobj Hermicity ... ok; > > > Qobj shape ... ok; > > > Qobj addition ... ERROR; > > > Qobj subtraction ... ok; > > > Qobj multiplication ... ok; > > > Qobj division ... ok; > > > Qobj power ... FAIL; > > > Qobj negation ... ok; > > > Qobj equals ... ok; > > > Qobj getitem ... ok; > > > Qobj multiplication type ... ok; > > > Qobj conjugate ... ok; > > > Qobj adjoint (dagger) ... ok; > > > Qobj diagonals ... ok; > > > Qobj eigenenergies ... ok; > > > Qobj eigenstates ... ok; > > > Qobj expm ... ok; > > > Qobj full ... ok; > > > Qobj ket type ... ok; > > > Qobj bra type ... ok; > > > Qobj operator type ... ok; > > > Qobj superoperator type ... ok; > > > Sparse: Symmetric Permute ... ok; > > > Sparse: Nonsymmetric Permute ... ok; > > > Sparse: Symmetric Reverse Permute ... ok; > > > Sparse: Nonsymmetric Reverse Permute ... ok; > > > Sparse: Bandwidth ... ok; > > > Transform 2-level to eigenbasis and back ... ok; > > > Transform 10-level real-values to eigenbasis and back ... ok; > > > Transform 10-level to eigenbasis and back ... ok; > > > Transform 10-level imag to eigenbasis and back ... ok; > > > Check diagonalization via eigenbasis transformation ... ok; > > > brmesolve: harmonic oscillator, finite temperature ... ok; > > > brmesolve: harmonic oscillator, finite temperature, states ... ok; > > > brmesolve: harmonic oscillator, zero temperature ... ok; > > > brmesolve: Jaynes-Cummings model, zero temperature ... ok; > > > brmesolve: qubit ... ok; > > > correlation: comparing me and es for oscillator in coherent initial state ... ok; > > > correlation: comparing me and es for oscillator in steady state ... ok; > > > correlation: compare spectrum from eseries and pseudo-inverse methods ... ok; > > > Diagonalization of random two-",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/126#issuecomment-42855884:429,power,power,429,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884,1,['power'],['power']
Energy Efficiency,"OK, I see. `complex_array_to_rgb` could be useful in other contexts as well. I am not aware of any standard way of doing this, but if you are interested in this kind of mapping you might want to have a look at a similar mapping of complex values to color that we have in the function `matrix_histogram_complex`. In that case we map only the phase to the color, and the magnitude is shown by the bar heights, but if you map the magnitude to the alpha channel or the overall intensity you get something the is similar to what you use. For example, with the code from `matrix_histogram_complex` you get something like. ```; x = np.linspace(-5, 5, 100); X, Y = np.meshgrid(x,x); Z = X + 1j * Y; cdict = {'blue': ((0.00, 0.0, 0.0),; (0.25, 0.0, 0.0),; (0.50, 1.0, 1.0),; (0.75, 1.0, 1.0),; (1.00, 0.0, 0.0)),; 'green': ((0.00, 0.0, 0.0),; (0.25, 1.0, 1.0),; (0.50, 0.0, 0.0),; (0.75, 1.0, 1.0),; (1.00, 0.0, 0.0)),; 'red': ((0.00, 1.0, 1.0),; (0.25, 0.5, 0.5),; (0.50, 0.0, 0.0),; (0.75, 0.0, 0.0),; (1.00, 1.0, 1.0))}. cmap = mpl.colors.LinearSegmentedColormap('phase_colormap', cdict, 256); norm = mpl.colors.Normalize(-pi, pi); colors = cmap(norm(np.angle(Z))); colors[:,:,3] = sqrt(abs(Z)) / sqrt(abs(Z)).max(). plt.imshow(colors, interpolation='none');; ```. which produces the following map of the complex plane:. ![complex-plane-2](https://cloud.githubusercontent.com/assets/1198183/2809239/c3f6c3cc-cd61-11e3-83a1-cc4fff3f303c.png). compared to. ```; plt.imshow(complex_array_to_rgb(Z), interpolation='none');; ```. which produces. ![complex-plane-1](https://cloud.githubusercontent.com/assets/1198183/2809256/29caad3e-cd63-11e3-8e7a-3187afc2744f.png). Either mapping is fine of course, but I think a nice property of the first one is that real numbers and imaginary numbers are mapped to simple colors (real positive->blue, negative->red and imaginary positive green, imaginary negative turquoise), and complex number with both real and imaginary part are mapped to colors that are relatively simp",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/105#issuecomment-41473950:806,green,green,806,https://qutip.org,https://github.com/qutip/qutip/pull/105#issuecomment-41473950,1,['green'],['green']
Energy Efficiency,"Oh yeah, I totally agree with that perspective - it's in part why I've gone on my little crusade over the past couple of weeks to remove all the warnings and errors from all the build processes. What do you think a sensible strategy is for handling bug fixes that touches code that issues complaints? CodeClimate will typically restate its complaint if you change a line that contributes to it (e.g. here I changed a ""return"" statement in a function that has too many). I guess there's either ""maintainers state whether any particular PR is acceptable with a failing warning""; ""write a [skip ci] commit message"" (or whatever it's called); or ""any PR that touches complained-about code must fix the error"". Without any experience, to my mind it seems like points 1 and 2 are basically the same, but point 1 gives the power to override to maintainers, and point 2 to contributors - seems like version 2 works well in a business where ""everyone"" is trusted to modify the code, but in the distribued opensource world, maybe not? Point 3 seems ideal in principle, but it seems like it would make it very hard to have first-time contributors do anything with older parts of the library - there'd be a huge onus to completely overhaul functionality, even just to fix small stuff. I really don't know what recommended practices are here - I was roughly working under the assumption that we'd have maintainers be allowed to override complexity failures on occasion, but we've never really discussed it as far as I know, and I do recognise the problems with it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1506#issuecomment-826673175:816,power,power,816,https://qutip.org,https://github.com/qutip/qutip/pull/1506#issuecomment-826673175,1,['power'],['power']
Energy Efficiency,"Ok, I think I may have some more information. I am fairly sure that this is the same bug as #1120, #963 and #944 (which I believe was not actually ever fixed). I'm going to put the information here. My working theory is currently that this is a MKL bug on Mac. For posterity, let me just dump out some information. ## Things you should know if you've not worked with segfaults before. - `Abort trap 6`, `Segmentation fault` and a few other points can all be from the same cause; - Segmentation faults are typically caused by reading or writing to memory that isn't owned by our process. These often occur by reading/writing too much data to an allocated pointer, or trying to read/write a memory location where the location was read from uninitialised memory.; - Segfaults will not always reliably occur. It's _very_ difficult to prove that swapping tools ""fixes"" a segfault; it can often just move around enough allocations to mask the problem, not fix it.; - Python stack traces are likely to be almost entirely unreliable in these cases, because the segfault may often occur while the garbage collector is running, and that will happen at seemingly non-deterministic times.; - Running files in a slightly different interpreter, running within a test runner with differing numbers of files, doing different work before and after will all cause the segfault to change, and may mask it.; - As annoying as they are, segfaults are actually the _good_ case of the bug - the worst is when we have invalid memory writes but _no_ segfault, because then we have memory corruption that's gone undetected. ## Thoughts about #1120. This issue is still present using Andrew's `Malloc.py` file as of the current master branch (commit 624405e7), and is in QuTiP 4.6.0 and most previous versions. I have been able to reproduce the segfaults with Python 3.7, but not Python 3.8, and I can reproduce it with all allowable values of `PYTHONMALLOC`. The most telling is `pymalloc_debug`, where the entire operation comp",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:644,allocate,allocated,644,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807,1,['allocate'],['allocated']
Energy Efficiency,"Ok, so I did some benchmarking at https://nbviewer.ipython.org/gist/goerz/34af142b78d7e344417d838bbea78aaf/06_example_3states_benchmark.ipynb ([gist](https://gist.github.com/goerz/34af142b78d7e344417d838bbea78aaf)), based on [one of the example notebooks from the Krotov package](https://qucontrol.github.io/krotov/v1.2.1/notebooks/06_example_3states.html). I'll be referring to the numbered cells in that notebook in the discussion below. @jakelishman in https://github.com/qutip/qutip/issues/1571#issuecomment-859873615:. > I think you might be able to achieve a lot of what you want already. The pseudo-code looks like it's not using `mesolve` super efficiently, though maybe it's only because of simplifications to make a MWE. For example, if your controls are piecewise constant, then it might be inefficient to represent those terms as ""time dependent""; doing so means you incur the cost of multiplying each term by a scalar at every intermediate step the integrator chooses to take, then you have to perform the matrix-vector product for each one individually and add them up. That's certainly worth trying: when calling `mesolve` in a loop over the time grid, I did indeed see a significant speedup when summing the Lindbladian into a single constant `Qobj`, see `In [21]` vs `In [24]`. On the other hand, it doesn't always give a speedup: in the low-level [`DensityMatrixODEPropagator`](https://github.com/qucontrol/krotov/blob/cfe6b108708cdfd29ab7eee24f2112977b951ed2/src/krotov/propagators.py#L162) it actually makes the propagation slower, see `In [29]` vs `In [32]`. It's a bit surprising, but then, as you say:. > [...] This isn't guaranteed, because it involves copying rather more data _before_ the call. So that's ok. > Would something like this work for you? [...]; >; > By giving `mesolve` the Liouvillian instead of the Hamiltonian and collapse operators separately. To be clear, I personally never use collapse operators (and the Krotov documentation heavily discourages it). Inst",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243:653,efficient,efficiently,653,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-860254243,1,['efficient'],['efficiently']
Energy Efficiency,"Ok. Wouldn't it be possible for qutip to have an efficient `overlap` method when the states are dense as well? Like, fallback to the `numpy` version?. Otherwise, I guess adding a note in the doc about this particular use case, when computing overlaps with dense states might be useful. I did not find anything like this, and it would help make code using qutip more efficient. This could be [here](http://qutip.org/docs/4.0.2/apidoc/classes.html?highlight=overlap#qutip.Qobj.overlap) for instance.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/818#issuecomment-364947296:49,efficient,efficient,49,https://qutip.org,https://github.com/qutip/qutip/issues/818#issuecomment-364947296,2,['efficient'],['efficient']
Energy Efficiency,"One can reduce the number of variables of the DM by N(N+1)/2 when operating on the upper (or lower) triangle of the DM only. This leads to a overdetermined least-squares problem that can be solved in SciPy. Since the scaling of these solution methods depends heavily on N, this should hopefully lead to a good speed up.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/101:8,reduce,reduce,8,https://qutip.org,https://github.com/qutip/qutip/issues/101,1,['reduce'],['reduce']
Energy Efficiency,"Operation `oper @ ket` is a lot faster for `CSR @ Dense` than `CRS @ CSR`. Also for ket, csr matrices still need to have one entry per row, making them not that much more efficient than dense. (A well optimised `COO` would be nice here.). But it is only a good choice when they are used as kets, not when used as building tools for operators... We have functions to create such operators that I thought were more known that are set to use the appropriate sparse default:; `fock_dm(N, n)` is equivalent to `basis(N, n) * basis(N, n).dag()`.; `projection(N, n, m)` is equivalent to `basis(N, n) * basis(N, m).dag()`. For now I added an entry for this case in the migration guide.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2328#issuecomment-2028969439:171,efficient,efficient,171,https://qutip.org,https://github.com/qutip/qutip/issues/2328#issuecomment-2028969439,1,['efficient'],['efficient']
Energy Efficiency,"Our tests could still be shortened, but right now the `pytest.mark.slow` marker does allow for a reasonable run time without sacrificing too much, and we have reduced our Travis load to only 5 concurrent tests by merging MKL and OpenMP tests. With `Coefficient` on `dev.major` we have a lot more scope for re-using compiled coefficients, which are typically the slow parts, but for now I think our testing is much faster than it was when this issue was first opened.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1217#issuecomment-809323357:159,reduce,reduced,159,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-809323357,1,['reduce'],['reduced']
Energy Efficiency,"Perhaps a bit more computationally efficient solution (although, it probably wouldn't make more than a marginal difference, at any reasonable order of number of indices, at which insertion is to be performed): insert at an index `i + k` , where `i` is the original index as per the `index` list, and `k` is the number of insertions performed so far, as part of the insertion loop. I'll raise a PR with the proposed fix. **Update:** The PR in question is https://github.com/qutip/qutip/pull/1892.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1497#issuecomment-1123990033:35,efficient,efficient,35,https://qutip.org,https://github.com/qutip/qutip/issues/1497#issuecomment-1123990033,1,['efficient'],['efficient']
Energy Efficiency,"Perhaps keeping just clang, if we wanted to keep one of the two, would be a good way to go. If we never mess with the compiler flags again there should be no problems. . > On Feb 21, 2015, at 08:03, Dominic Meiser notifications@github.com wrote:; > ; > Sounds good. Would you like me to amend the pull request to get rid of the additional travis builds or at least reduce them? Might be nice to have a least one build with gcc 4.4 and clang.; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/318#issuecomment-75338104:365,reduce,reduce,365,https://qutip.org,https://github.com/qutip/qutip/pull/318#issuecomment-75338104,1,['reduce'],['reduce']
Energy Efficiency,"Perhaps someone else can give a more concrete answer, but I guess the driving frequency is too high for the number of time-steps? Try tweaking the ODE solver with options like the following:. `; options = Options(nsteps=15000, atol=1e-13, rtol=1e-13) ; `. and passing it to mesolve. `result1 = mesolve(Ha, psi0, times, [np.sqrt(T1)*sig01, np.sqrt(T2)*sig02, np.sqrt(gamma*(nth + 1))*a, np.sqrt(gamma*nth)*a.dag()], [a.dag()*a, sig00, sig11, sig22], progress_bar=True, options=options); `. More practically speaking, for the problem you are solving I guess explicitly including the time dependence is unneccessary, since you have already made a RWA on the drive and the coupling? . Moving to an interaction picture in w1, w2 and wph, and removing the explicit time-dependence might simplify the problem and might give you equivalent results, and in the process make your code much simpler and more efficient?. In other words just set w1=w2=wph=0, and put the drive as a time-independent term in the hamiltonian . `; H01 = g*(sig12*a.dag() + sig21*a) + pump1*(sig01 + sig01.dag()); `",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1038#issuecomment-508634514:897,efficient,efficient,897,https://qutip.org,https://github.com/qutip/qutip/issues/1038#issuecomment-508634514,1,['efficient'],['efficient']
Energy Efficiency,"Picking a new random number at each time step would be an expensive way to do the computation since each call to the random number generator is costly. One could pre-generate a large array of random numbers before hand, but there is no way to know if you generated enough since we are using an adaptive step size ODE method. You are correct about the way mcsolve does its calculations. The other array you are talking about [1,10,11] is an array that tells the solver about the time-depdendence of the Hamiltonian and/or collapse terms. These arguments could be clearer, however since it is an internal thing, we have not bothered to mess with it. Regards,. Paul; On May 3, 2014, at 9:24 AM, Qi notifications@github.com wrote:. > Sorry, I made some mistakes in my previous post, and you are right on the paper. I think I can summarize the two MC simulation strategies into two kinds: one is that we generate a random number at each time step, and then compare it with the jumping probability (1-P(no jump)), and decide which jump to make using the jumping operators; the other one is that we generate a random number, and let it to be the no-jumping probability, and let the system evolve until it ends at the so-called waiting time by judging if the probability of no-jumping reaches the generated random number, and then decide which state to jump. My hope is that our mcsolve function can allow users to choose which strategy to employ in the simulation, as both of the strategies are valuable for different purposes, as I have claimed in my earlier thread. This is the feature I am looking for. Is that feasible and reasonable?; > ; > I read over the mcsolve code a little bit. From my understanding, the core algorithm of the MC simulation is in the ODE's single-trajectory definition part (_mc_alg_evolve...). Looks like the code is applying the second strategy I mentioned before. But I am not totally sure, as I am confused and got lost on many variables. Like, what does the RHS of the ODE me",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/111#issuecomment-42092984:294,adapt,adaptive,294,https://qutip.org,https://github.com/qutip/qutip/issues/111#issuecomment-42092984,1,['adapt'],['adaptive']
Energy Efficiency,"Pure numerically speaking, the last `diss_coeff` is a way larger than the others.; ```python; >>>diss_coeff; [0.19836061612310207j,; 0.25470007277190326j,; 0.223606797519535j,; 4925.267477050309j]; ```; With this large frequency, if you want to solve the dynamics using ODE, I don't think there is a way to make it faster. You have to either simplify your model mathematically, or, because there is no time dependency in your system, use the (deprecated) `essolve` that computes the dynamics using eigenvalues. Thinking about the physics, the T2 time is much smaller than your `tlist`, the system has already fully decohered. PS: @jakelishman It seems that the `essolve` does have some use-cases? Like in small systems for verification perpose. I remember there is another PR that also mentions it. As we deprecated it, I'm wondering if there is an efficient alternative in QuTiP?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1623#issuecomment-886175452:849,efficient,efficient,849,https://qutip.org,https://github.com/qutip/qutip/issues/1623#issuecomment-886175452,1,['efficient'],['efficient']
Energy Efficiency,QuTiP installation test - FAILED test power-gmres,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1750:38,power,power-gmres,38,https://qutip.org,https://github.com/qutip/qutip/issues/1750,1,['power'],['power-gmres']
Energy Efficiency,"Quick example is below. To add a bit more, the ''slowness'''of the standard brmesolve() run in this example depends on whether I install mkl or not. without mkl, its >10 mins, with mkl, about one minute. The run with converting the tensor to sparse always takes around 30-40 seconds, and doesn't depend too much on mkl. ```; import qutip as qt; import numpy as np. #spectral density; def Jw(w): ; return lam**2 * gamma * w / ((w0**2 - w**2)**2 + (gamma**2) * (w**2)); ; ; #power spectrum; def J_power_spectrum(w):; """""" The Ohmic bath power spectrum as a function of w; (and the bath parameters).; """"""; return (; Jw(w) * 2 * (w>0); ); def Ising_solve(N, g0, J0, gamma, tlist, options, use_csr=True):; # N : number of spins; # g0 : splitting; # J0 : couplings. #Setup operators for individual qubits; sx_list, sy_list, sz_list = [], [], []; for i in range(N):; op_list = [qt.qeye(2)] * N; op_list[i] = qt.sigmax(); sx_list.append(qt.tensor(op_list)); op_list[i] = qt.sigmay(); sy_list.append(qt.tensor(op_list)); op_list[i] = qt.sigmaz(); sz_list.append(qt.tensor(op_list)). # Hamiltonian - Energy splitting terms; H = 0.; for i in range(N):; H += g0 * sz_list[i]. # Interaction terms; for n in range(N - 1):; H += -J0 * sx_list[n] * sx_list[n + 1]. # Initial state; state_list = [qt.basis(2, 1)] * (N-1); state_list.append(qt.basis(2, 0)); psi0 = qt.tensor(state_list); fx = 1; fy = 1.1; fz = 0.9; coup = (fx * (sx_list[N-1]) ; + fy * (sy_list[N-1]); + fz * (sz_list[N-1])). ; if use_csr:; R = qt.bloch_redfield_tensor(H, [[coup, J_power_spectrum]], fock_basis=True, sparse_eigensolver=True,br_dtype = 'sparse', sec_cutoff=-1); R = R.to('csr').tidyup(); result = qt.mesolve(R,psi0, tlist, options=options); else:; result = qt.brmesolve(H, psi0, tlist, a_ops = [[coup, J_power_spectrum]], e_ops=sz_list, options=options, sec_cutoff=-1); return result. #bath sd params; lam = 5; w0 = 10; gamma = 5; . #system params; N = 5; g0 = 1; J0 = 5. tlist = np.linspace(0, 100, 1000); options ={""nsteps"": 15000, ""s",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2530#issuecomment-2403834583:473,power,power,473,https://qutip.org,https://github.com/qutip/qutip/issues/2530#issuecomment-2403834583,2,['power'],['power']
Energy Efficiency,Raising scalar-like Qobj instances to a power results in exception,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1691:40,power,power,40,https://qutip.org,https://github.com/qutip/qutip/issues/1691,1,['power'],['power']
Energy Efficiency,"Re tidyup dispatcher: I think this should still exist:. * It's useful for implementing efficient explicity tidyup calls on the different data layers.; * It's useful for specializations on data layer implementations if they want to do, e.g., `__matmul__(self, other): other = other.tidyup() ...` at the start of an operation (not 100% sure this is a good example -- probably other.tidyup() and conversion to sparse needs to happen in one step to happen efficiently, but I feel like there are cases like this out there).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1615#issuecomment-883256980:87,efficient,efficient,87,https://qutip.org,https://github.com/qutip/qutip/pull/1615#issuecomment-883256980,2,['efficient'],"['efficient', 'efficiently']"
Energy Efficiency,Reduce average gate fidelity to process fidelity,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1788:0,Reduce,Reduce,0,https://qutip.org,https://github.com/qutip/qutip/pull/1788,1,['Reduce'],['Reduce']
Energy Efficiency,Reduce computation time of `floquet.floquet_master_equation_rates`,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/762:0,Reduce,Reduce,0,https://qutip.org,https://github.com/qutip/qutip/pull/762,1,['Reduce'],['Reduce']
Energy Efficiency,Reduce namespace pollution by adding plot_ prefixes to qubit plot functions. Also restructed the imports a bit.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/102:0,Reduce,Reduce,0,https://qutip.org,https://github.com/qutip/qutip/pull/102,1,['Reduce'],['Reduce']
Energy Efficiency,Reduce qutip import time by setting logger names,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1980:0,Reduce,Reduce,0,https://qutip.org,https://github.com/qutip/qutip/pull/1980,1,['Reduce'],['Reduce']
Energy Efficiency,Reduce qutip import time by setting logger names (v5),MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1981:0,Reduce,Reduce,0,https://qutip.org,https://github.com/qutip/qutip/pull/1981,1,['Reduce'],['Reduce']
Energy Efficiency,"Removing list and forcing dict does not feels making things nicer... Being forced to use dict is mostly a nuisance for me. Presently we support both list ans dict output without much issues, there are very few place that would have issue supporting multiple interfaces. (I can only think of `plot_expectation`.). But how about using `namedtuple`?. It act as a list for loop and numpy, but elements can be called by both the number and name, and I like having result's output somewhat immutable. The biggest issue is that we must provide field names for list inputs... For MC, if e_ops callable return weird things, they will have to choose the option to store all trajectories instead of averaging the result. If they ask for the average or standard derivation of a dict, they will and should get an error, the best we should do is making this error message useful. Custom reduce function could be doable, but probably be a mess, especially if we need one for both `mean` and `std`... So unless someone present a good use case for it, I don't plan going that way.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1907#issuecomment-1141402988:873,reduce,reduce,873,https://qutip.org,https://github.com/qutip/qutip/pull/1907#issuecomment-1141402988,1,['reduce'],['reduce']
Energy Efficiency,"Repeat the test 20 times and accept if at least 19 pass?. I remember adapting the tests when numpy's rng changed. 1~2 where failing. I believe that the tests pass over 99% with a random seed, but with the number of tests, it's not enough. I did not realize the test tolerance was smaller than the test one. But the solver tolerance is for the state itself, not expectation values and other scalars obtained from them. The test is not to check numerical error. When there is an mistake in the code, the error is orders of magnitude greater. Not sure if using the sovler's tol is right, but probably better than using a number that just seems to work.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1249#issuecomment-625307705:69,adapt,adapting,69,https://qutip.org,https://github.com/qutip/qutip/pull/1249#issuecomment-625307705,1,['adapt'],['adapting']
Energy Efficiency,Running it through the profiler suggests that cy_expect_psi_csr is only responsible for a small part of the time (accumulative time 4.2 sec as compared to total run time of 148 sec). ```; Wed Nov 26 15:04:59 2014 profile.out; 5155120 function calls (5143582 primitive calls) in 148.280 seconds; Ordered by: cumulative time; List reduced from 3097 to 100 due to restriction <100>; ncalls tottime percall cumtime percall filename:lineno(function); 441/1 0.014 0.000 148.283 148.283 {built-in method exec}; 1 0.001 0.001 148.283 148.283 mcsolve-performance.py:1(<module>); 2 0.000 0.000 147.463 73.732 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:69(mcsolve); 2 0.000 0.000 147.411 73.706 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:446(run); 2 0.000 0.000 147.411 73.705 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:423(parallel); 2 0.011 0.006 147.411 73.705 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:415(serial); 1000 8.867 0.009 147.340 0.147 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/qutip/mcsolve.py:757(_mc_alg_evolve); 453518 1.543 0.000 130.497 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:376(integrate); 453518 127.846 0.000 128.245 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:859(run); 395940 0.709 0.000 74.413 0.000 /home/rob/py-envs/py3-devel/lib/python3.4/site-packages/scipy/integrate/_ode.py:747(step); 171960 4.219 0.000 4.219 0.000 {built-in method cy_expect_psi_csr}; ```,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/264#issuecomment-64519867:329,reduce,reduced,329,https://qutip.org,https://github.com/qutip/qutip/pull/264#issuecomment-64519867,1,['reduce'],['reduced']
Energy Efficiency,"Say I have the operator `b = tensor(destroy(3), qeye(3))`. When I want to calculate the fourth power of `(b + b.dag())` I have several possibilities to do that, but they give different answers.; Let's define:; `B1 = (b + b.dag())**4`;; `B2 = (b + b.dag()) * (b + b.dag()) * (b + b.dag()) * (b + b.dag())`, and; `B3 = b*b*b*b`; `B3 += b.dag()*b*b*b + b*b.dag()*b*b + b*b*b.dag()*b + b*b*b*b.dag()`; `B3 += b.dag()*b.dag()*b*b + b.dag()*b*b.dag()*b + b.dag()*b*b*b.dag()`; `B3 += b*b.dag()*b.dag()*b + b*b.dag()*b*b.dag() + b*b*b.dag()*b.dag()`; `B3 += b.dag()*b.dag()*b.dag()*b + b.dag()*b.dag()*b*b.dag() + b.dag()*b*b.dag()*b.dag() + b*b.dag()*b.dag()*b.dag()`; `B3 += b.dag()+b.dag()+b.dag()+b.dag()`. B1 and B2 give the same output, but that is different from B3. How can this possibly be? And which one should I trust?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1114:95,power,power,95,https://qutip.org,https://github.com/qutip/qutip/issues/1114,1,['power'],['power']
Energy Efficiency,"Shall we schedule a 4.6.1 patch release for later this week? Perhaps I should email the others and set up a video call so I can demonstrate the release procedures. I can think of a few little patches that can be backported to 4.6.0, and then hopefully we can make 4.6.2 with new patches we get from Unitary Hack. The Floquet changes (currently on my desk - we've swapped to dealing by email a bit more) and the changes in Wigner will likely be part of the 4.7 release, of stuff I know right now.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1541#issuecomment-831237284:9,schedul,schedule,9,https://qutip.org,https://github.com/qutip/qutip/pull/1541#issuecomment-831237284,1,['schedul'],['schedule']
Energy Efficiency,"Since the PR merge of Ben's (@bcriger) code for Efficient Application of CPTP Maps to Subsystems, there has been a number of failing unit tests. I have fixed some of the tests and ported Ben's code to be python3 compatible, but there are still two remaining errors, which I have traced to the fact that `subsystem_apply(..., reference=True)` does not give the expected results (some normalization problem? perhaps with the eigenvectors?). ```; In [1]: from qutip import *; In [2]: rho_3 = rand_dm(3); In [3]: superop = kraus_to_super(rand_kraus_map(3)); In [4]: analytic_result = vector_to_operator(superop * operator_to_vector(rho_3)); In [5]: analytic_result; Out[5]: Quantum object: dims = [[3], [3]], shape = [3, 3], type = oper, isHerm = True; ⎜0.396 (0.069−5.343×10−04j) (−0.003+0.030j) |; |(0.069+5.343×10−04j) 0.407 (−0.029−0.076j) |; |(−0.003−0.030j) (−0.029+0.076j) 0.293 |. In [6]: ref_result = subsystem_apply(rho_3, superop, [True], reference=True); In [7]: ref_result; Out[7]: Quantum object: dims = [[3], [3]], shape = [3, 3], type = oper, isHerm = True; ⎜0.354 (0.067−0.036j) (0.058+0.004j) |; |(0.067+0.036j) 0.407 (0.039−0.041j) |; |(0.058−0.004j) (0.039+0.041j) 0.240 ⎟. In [8]: efficient_result = subsystem_apply(rho_3, superop, [True]); In [9]: efficient_result; Out[9]: Quantum object: dims = [[3], [3]], shape = [3, 3], type = oper, isHerm = True; ⎜0.396 (0.069−5.343×10−04j) (−0.003+0.030j) |; | (0.069+5.343×10−04j) 0.407 (−0.029−0.076j) |; |(−0.003−0.030j) (−0.029+0.076j) 0.293 ⎟; ```. Probably @bcriger would be the best person to fix this issue.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/30:48,Efficient,Efficient,48,https://qutip.org,https://github.com/qutip/qutip/issues/30,1,['Efficient'],['Efficient']
Energy Efficiency,"So I decided to reinstall Python (Anaconda specifically) to get a fresh slate as in my own debugging and trying to update packages other code started to behave weirdly. Here is my current qutip.about():; QuTiP Version: 4.6.2; Numpy Version: 1.20.1; Scipy Version: 1.6.2; Cython Version: 0.29.23; Matplotlib Version: 3.3.4; Python Version: 3.8.8; Number of CPUs: 4; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Windows (AMD64); Installation path: C:\ProgramData\Anaconda3\lib\site-packages\qutip. I am using the Qt5Agg matplotlib backend, and changing to the TkAgg backend gives the same behaviour. However, running the code you pasted in a separate (command line) console I am able to view the sphere with even the b.show() command.; I still have this behaviour in my editor however (Visual Studio Code) so I think the problem is something to so with my debug environment, this code even behaves as it should in the powershell window in VS code. ; I know this isnt the VS code issue page but if you have any suggestions I'd much appreciate it",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1616#issuecomment-883428764:955,power,powershell,955,https://qutip.org,https://github.com/qutip/qutip/issues/1616#issuecomment-883428764,1,['power'],['powershell']
Energy Efficiency,"So, now tests fail for Qobj subtraction, when running `nose.run(defaultTest=""qutip.tests"", argv=['nosetests', '-v'])` but they run just fine when running `nose.run(defaultTest=""qutip.tests.test_qobj"", argv=['nosetests', '-v'])`. Note that before, for the metrics, the error was occuring even if only `nose.run(defaultTest=""qutip.tests.test_metrics"", argv=['nosetests', '-v'])` was run. It might be something ill allocated due to the order of how tests are run. . I also wonder if there is an issue with pycache. Also, in my folder there are both py36.pyc and py37.pyc files. Here there is a discussion that might be related (?); https://github.com/pytest-dev/pytest/issues/200#issuecomment-395816011",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-496376661:412,allocate,allocated,412,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-496376661,1,['allocate'],['allocated']
Energy Efficiency,"Solver object for `sesolve`, `mesolve` and `mcsolve`: `SeSolver`, `MeSolver` and `McSolver`:; - Removed all `rhs_reuse` (except in `brmesolve`). Still work but there is deprecation warning.; - steper for `Sesolver` and `MeSolver` as proposed by Michael.; - Variable output type (`Qobj`, `dense` or `sparse`) input must still be `Qobj`.; - Intermediate object to change the solver used: scipy `zvode`, `solve_ivp`, `dorpri853` are all available for `SeSolver`, `MeSolver`. More could be added in the future, @tehruhn 's GPU solver could probably fit here. I will work on an Adaptative Hilbert Space one eventually. . The objects do not do much more than the original functions if the system is not used more than once. Still to-do:; - Other algorithm for `McSolver`: diagonalized solver (suggested by Fabio?) and one using scipy ivp.; - Inline documentation; - Notebooks; - Cleaning options management. (Unique options object is getting limited for multiple low level solver and both all se,me,mc solve, I would appreciate opinions on how to make this better).; - Add to `__init__.py`; - Add tests. Build on the QobjEvoFunc Pr, with some bug fixed.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1186:573,Adapt,Adaptative,573,https://qutip.org,https://github.com/qutip/qutip/pull/1186,1,['Adapt'],['Adaptative']
Energy Efficiency,"Sorry for such a long delay... @QuantumFall This issue somehow escaped from my email list and I never noticed it. This is actually a situation often encountered when testing just one gate. If Hamiltonian acts trivially on the state for a few time steps, the adaptive solver may decide on a step size so large that all the reaming pulses are skipped. Set the max step size fixes it:; ```python; options = qutip.Options(max_step=0.05); processor_state = processor.run_state(init_state, options=options).states[-1].tidyup(1.0e-6); ```. Usually, this is because the Hamiltonian is 0 at the first few steps. This example is actually slightly different. The first pulse is a non-trivial (sxsx+sysy) (swap-like). Maybe it is because it has no effect on the initial state `(0,0,0,1)`. But `(1,0,0,0)` seems to work well. It seems really necessary to adaptively choose a step size for the simulators. BTW, new updates will most likely only be added to the separate package [`qutip-qip`](https://github.com/qutip/qutip-qip). Please feel free to check there.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2003#issuecomment-1343478054:258,adapt,adaptive,258,https://qutip.org,https://github.com/qutip/qutip/issues/2003#issuecomment-1343478054,2,['adapt'],"['adaptive', 'adaptively']"
Energy Efficiency,"Sorry for the delay on the docstrings and so on, I think all suggestions should be incorporated now. However, thanks to Paul's suggestion of adapting the tutorial 1e. I realized that I made a ""mistake from the very beggining"", namely the function used to fit the correlation function is only good if the imaginary part of the spectral density is 0 at t=0, because I'm using. $C(t)=\sum_{k}a_{k}e^{-b_{k} t}e^{i c_{k} t}$. so . $C_{R}(t)=\sum_{k}a_{k}e^{-b_{k} t}cos(c_{k} t)$. $C_{I}(t)=\sum_{k}a_{k}e^{-b_{k} t}sin(c_{k} t)$. No matter how many terms I take $C_{I}(0)=0$. I should have realized before but this can be bypassed by excluding $t=0$ from the fit, and starting at a small t, you get a decent fit, as long as you don't look at C(0), and I never check for these situations before. The results of doing this are pretty decent, but updating tutorial 1e I realized it required higher calculation times for the HEOMSolver when compared to using another ansatz for the correlation function, since solving is the expensive bit then I changed the code use another function for fitting. $C(t)=\sum_{k}(a_{k}+i d_{k})e^{-b_{k} t}e^{i c_{k} t}$. The downside is that since this function has 4 parameters, it required changing other functions as well, luckily only functions starting with _, hopefully this won't delay the PR too much. I updated the tutorials with this as well, and added a bit so that passing the parameters for the fitting is easier (after this comment), if the change is not desirable we can just go back to the commit before this comment",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2260#issuecomment-1925945764:141,adapt,adapting,141,https://qutip.org,https://github.com/qutip/qutip/pull/2260#issuecomment-1925945764,1,['adapt'],['adapting']
Energy Efficiency,Sounds good. Would you like me to amend the pull request to get rid of the additional travis builds or at least reduce them? Might be nice to have a least one build with gcc 4.4 and clang.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/318#issuecomment-75335776:112,reduce,reduce,112,https://qutip.org,https://github.com/qutip/qutip/pull/318#issuecomment-75335776,1,['reduce'],['reduce']
Energy Efficiency,Tests failing (possibly) due to scipy Deprecation in power-gmres solver,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/862:53,power,power-gmres,53,https://qutip.org,https://github.com/qutip/qutip/issues/862,1,['power'],['power-gmres']
Energy Efficiency,"Thank you for your answer @Ericgig !. So, even though we are not using any quotes in our code, this internally maps to the string approach ?; I am trying to understand how to do what I want using callbacks instead, I could use a bit of help.; This is what the original code I shared here reads:. ```; # list of variational parameters ""a[]""; a=[]; for i in range(numite):; a.append(0.01*i). # define energy function by using variational parameters; def energy(a):; psi = initial_H.eigenstates(sparse=False)[1][0]; t = np.linspace(0, 1, timesteps+1); for i in range(numite):; 	H=[[initial_H,1-a[i]*t],[final_H,a[i]*t]]; 	result= qt.mesolve(H, psi, t, [], []); 	psi=result.states[timesteps]. E = qt.expect(final_H,psi); return E; ```. I tried to understand the documentation here: http://qutip.org/docs/latest/modules/qutip/mesolve.html; What I think I need to do is the following:. - I need to just pass callbacks instead of formulas / strings for the coefficients when defining the operators.; - these callbacks must have a signature with the format `(t, *args)` and should return an np.array; - `t` and `args` values are passed as arguments to mesolve. . I am a bit unclear whether or not ""args"" is a list or a dictionary and how I can access it inside my callbacks. I made an attempt but it returns errors: maybe it would be easy for you to fix some lines of this example and tell me if I am on the right track? Or do you have a link to an example, maybe ?; I am just targeting the innermost portion of the code, here:. ```; mesolve_args = ... # a dictionary ? a list? Something that lets me access the variable ""a""; def h_t1(t, *args):; return np.array(1-a[i]*t) # how do I retrieve a[i] by accessing args?; def h_t2(t, *args):; return np.array(a[i]*t) # same. H=[ [initial_H, h_t1], [final_H, h_t2] ]; result= qt.mesolve(H, psi, t, c_ops=[], e_ops=[], args=mesolve_args) # is this correct ?; psi=result.states[timesteps]; ```. Thank you for your help !",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/966#issuecomment-474154477:399,energy,energy,399,https://qutip.org,https://github.com/qutip/qutip/issues/966#issuecomment-474154477,2,['energy'],['energy']
Energy Efficiency,"Thanks @ajgpitch for the comments. I agree that there should be the specific functions but I think for simplifying user experience there should be a simple overarching function. E.g, when you plot Wigner functions in QuTiP you can send it kets or dms or operators and it just works. . Internally, it still calls specific functions to compute the Wigner function based on efficient methods specific to the inputs. But it is just a small convenience to the average user to have a simpler clean overarching function to do the same.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1274#issuecomment-641961716:371,efficient,efficient,371,https://qutip.org,https://github.com/qutip/qutip/pull/1274#issuecomment-641961716,1,['efficient'],['efficient']
Energy Efficiency,Thanks @sahmed95 for doing this fix. It seems that there is an issue with the Python3 running. You have to import reduce with using Python3,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/795#issuecomment-357753951:114,reduce,reduce,114,https://qutip.org,https://github.com/qutip/qutip/pull/795#issuecomment-357753951,1,['reduce'],['reduce']
Energy Efficiency,"Thanks Nathan. Lets see if the tests pass. Meanwhile, perhaps you could do `black -l 79` to keep the lines only 79 characters long. Also there are some trailing white spaces and spaces in a blank line which seem not to be picked up by black. Could you please quickly check that so that we get the code climate green check? If not then we can still merge this.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1046#issuecomment-529472381:310,green,green,310,https://qutip.org,https://github.com/qutip/qutip/pull/1046#issuecomment-529472381,1,['green'],['green']
Energy Efficiency,"Thanks for the reply on generators. Seems like a good policy going forward. Your implementation seems very neat. Thanks for explaining the thinking behind it. Having looked a bit more into reduce. It seems that from Python2.7 (min req for qutip) reduce exists in functools. Therefore, I think you can import and use it with having to check version.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/358#issuecomment-128384062:189,reduce,reduce,189,https://qutip.org,https://github.com/qutip/qutip/pull/358#issuecomment-128384062,2,['reduce'],['reduce']
Energy Efficiency,"Thanks for the useful feedback, both here and in PR #1611 ! From the discussion in PR #1611 it seems that the second option with the modifications proposed by Jake in this issue seems to be the most sensible approach. Hence, if there are no objections, I will open a PR (which I will probably do tomorrow) where I implement the following changes (adapted from Simon's comment in PR #1611):. - `Qobj.__mul__(self, other) ` ; - dispatch to `data.matmul` if `other` is a `Qobj`; - dispatch to `data.mul` otherwise which will return `NotImplemented` if it does not know how to handle `other`. ; - `Qobj.__rmul__(self, other) `:; - Dispatch to `data.mul` (`other` will never be a Qobj): Notice that in this way both left and right multiplication will behave in the same way. This would also ""solve"" the inconsistency PR #1611 was trying to solve but this time `data.mul` will handle it and will raise NotImplemented whenever required. . - `mul_dense` and `mul_csr`:; - Use a thin wrapper that returns `NotImplemeneted` if input is not a complex python scalar. There are a few things I would like to discuss before opening a PR:; 1) These changes will break backwards compatibility as:; ```python; matrix = np.random.random((2, 2)); qobj = qutip.Qobj(array). qobj * matrix # With the changes this also returns NotImplemented.; matrix * qobj # With the changes this also returns NotImplemented; ```; will now behave consistently (""fixes"" PR #1611). Is this acceptable? I would say yes given that we are doing a major version change. However, it may be a good idea to start raising a deprecation warning in QuTiP 4 if these changes go forward. 2) `data.add` has a similar behaviour to `data.mul` in that it accepts `scale` which is not a `Data` (there are a few more specialisations that also accept an argument that is not a `Data`). Should these specialisations behave in the same way allowing arbitrary python objects as ""scale"" and raise NotImplemented when required or should they just allow a complex py",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1607#issuecomment-883317473:347,adapt,adapted,347,https://qutip.org,https://github.com/qutip/qutip/issues/1607#issuecomment-883317473,1,['adapt'],['adapted']
Energy Efficiency,"Thanks to some pointer from @nonhermitian I think I now understand this better; I will illustrate with some pseudo code. What we want to do is: M_out = (L_1 + L_2 + ... + L_i)*M; where L_i are sparse matrices and M is a dense matrix.; So one option (A) could be; ```; for L in L_list:; M = spmm(L, M); ```; which would seem more efficient than option B:; ```; for col in M:; for L in L_list:; col = spmv(L, col); ```; but as `spmm(L, M)` would effectively be:; ```; for col in M:; col = spmv(L, col); ```; Then options A & B would be the same efficiency wise.; As option B is much easier for us to implement within our existing codes, then this is what I will do. Just one note: M actually starts are sparse, but has to converted to a dense column stacked vector as it is used as the variable in the ODE solver",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/877#issuecomment-395350256:329,efficient,efficient,329,https://qutip.org,https://github.com/qutip/qutip/issues/877#issuecomment-395350256,1,['efficient'],['efficient']
Energy Efficiency,"Thanks!. I haven't thought about python3 (is it about divisions `//` and `reduce`, or did you spot other problems?). `numpy.prod` - I guess I should rather use it, since `numpy` is already there; (a second thought: at least in python2 for lists of few elements `reduce` is significantly faster; I am not sure though, it in this particular case it makes a difference). ```; from numpy import prod; from operator import mul. prod([1,2,3]) # 22.6 µs; reduce(mul, [1,2,3]) # 737 ns; ```. `plot_qubism` for density matrix it is a different plot. In any case, I will think about it when I doing it (and I will adopt to QuTiP guidelines).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/105#issuecomment-43737566:74,reduce,reduce,74,https://qutip.org,https://github.com/qutip/qutip/pull/105#issuecomment-43737566,3,['reduce'],['reduce']
Energy Efficiency,"Thanks, I'm glad to be of service! I missed that about `functools.reduce` in 2.7, will amend the PR to use that, fix the `xrange` thing and try to make the use of `reduce` a bit more clear. Thanks!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/358#issuecomment-128407473:66,reduce,reduce,66,https://qutip.org,https://github.com/qutip/qutip/pull/358#issuecomment-128407473,2,['reduce'],['reduce']
Energy Efficiency,"The Bloch sphere is an amazing tool for visualisations. In a project where I wanted to show the evolution of an initial quantum state to a final target, I wanted to put specific colours to the initial and final bloch vector. Right now, the function `[qutip.bloch.add_states](https://github.com/qutip/qutip/blob/master/qutip/bloch.py#L353)` or `[qutip.bloch.add_vectors](https://github.com/qutip/qutip/blob/master/qutip/bloch.py#L378)` cycles through a fixed list of colours here - https://github.com/qutip/qutip/blob/master/qutip/bloch.py#L563. It would be nice if the user could also add an optional color argument or list of colours when adding a new vector such as `bloch.add_vectors(vec, color=""r"")` or `bloch.add_vectors([vec1, vec2], color=[""red"", ""green""])`. In this case I would have liked to set the two colours in the vector myself. . ![image](https://user-images.githubusercontent.com/6968324/84878607-58340100-b08a-11ea-978a-03085378261f.png)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1292:755,green,green,755,https://qutip.org,https://github.com/qutip/qutip/issues/1292,1,['green'],['green']
Energy Efficiency,"The CI is still running but have you tried to align with other qutip API docs like this?; ```; .. automodule:: qutip.core.operators; :members: charge, commutator, create, destroy, displace, fcreate, fdestroy, jmat, num, qeye, identity, momentum, phase, position, qdiags, qutrit_ops, qzero, sigmam, sigmap, sigmax, sigmay, sigmaz, spin_Jx, spin_Jy, spin_Jz, spin_Jm, spin_Jp, squeeze, squeezing, tunneling, qeye_like, qzero_like; ```; I am not sure if autosummary is fully configured in qutip",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2441#issuecomment-2148389068:143,charge,charge,143,https://qutip.org,https://github.com/qutip/qutip/pull/2441#issuecomment-2148389068,1,['charge'],['charge']
Energy Efficiency,"The RK45 code here has no notion of error associated with it; you have no way of saying whether a particular step size `dt` is actually good. It ideally should converge to something as the step size goes to zero. QuTiP has an adaptive solver that modifies the step size to keep the error below the supplied tolerances. For time-dependent problems one could run into issues with very narrow pulses, but that is not the case here. Writing ones own ODE solver is not really the best thing to do outside of a learning exercise for reasons along these lines.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1733#issuecomment-986722508:226,adapt,adaptive,226,https://qutip.org,https://github.com/qutip/qutip/issues/1733#issuecomment-986722508,1,['adapt'],['adaptive']
Energy Efficiency,"The `c_ops` argument to `mesolve` expects operators in Lindblad form, but you can also construct your own Liouvillian and pass that as the first argument. To construct the non-Lindblad components you want, you may find `spre` and `spost` useful, which respectively turn an operator into a superoperator which multiplies from the left and from the right. There is also `sprepost`, which is a more efficient way to combine `spre` and `spost`. To construct the operators (if you only work on qubits - if not, you need to do it manually as @quantshah showed), you can use `expand_operator`. So you can do something like; ```python; L = qutip.liouvillian(H); n_qubits = 5; for n in range(n_qubits - 1):; c_op_left = qutip.expand_operator(qutip.sigmap(), n_qubits, n); c_op_right = qutip.expand_operator(qutip.sigmam(), n_qubits, n + 1); L += qutip.sprepost(c_op_left, c_op_right); both = -0.5 * c_op_right * c_op_left; L += qutip.spre(both); L += qutip.spost(both); res = qutip.mesolve(L, rho0, times, e_ops=...); ```. I've not seen equations in that form myself, but that's how you could go about if that's what you've got.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1435#issuecomment-773936300:396,efficient,efficient,396,https://qutip.org,https://github.com/qutip/qutip/issues/1435#issuecomment-773936300,1,['efficient'],['efficient']
Energy Efficiency,"The below code is to find eigenenergies of 1D harmonic-like potential. # ============================================================================; from qutip import *; import numpy as np; import scipy as sci; import matplotlib.pyplot as plt. ns=3001; x=np.linspace(-100e-6,100e-6,ns) #in meter; dx=x[2]-x[1]; psi_0=basis(ns,int(ns/2)). #Potential Operator; hbar=sci.constants.hbar # hbar; mK39=sci.constants.m_p*38.963707 # Potassium 39 mass; w0=40e-6 # beam waist in micrometer (1/e^2); T=2e-6 # Trap depth in K. U=sci.constants.Boltzmann * T # trap depth in K * Boltzmann constant; omega=np.sqrt(4*U/mK39/w0**2) # Harmonic approximation Angular Freq. def _VGauss(U,x,w0,x0):; return (U-U * np.exp(-2*(x-x0) ** 2/w0**2)). V_xr=(_VGauss(U,x,w0,20e-6)+_VGauss(U,x,w0,-20e-6)); V_xr=V_xr-min(V_xr). #Momentum^2 Operator; P_x2r=(np.eye(ns,ns,k=-1)+np.eye(ns,ns)*-2+np.eye(ns,ns,k=1))/dx**2 #https://en.wikipedia.org/wiki/Finite_difference_method . #T+V Hamiltonian; #H_x=Qobj(-hbar ** 2 * P_x2r / 2 / mK39+V_xr * np.eye(ns,ns)) ; H_x=Qobj(-hbar ** 2 * P_x2r / 2 / mK39)+Qobj(V_xr * np.eye(ns,ns)) . #Eigenenergies; E_x=H_x.eigenenergies()/hbar/2/np.pi #in freq.; # =====================================================. Focus on this part.; #T+V Hamiltonian; #H_x=Qobj(-hbar ** 2 * P_x2r / 2 / mK39+V_xr * np.eye(ns,ns)); H_x=Qobj(-hbar ** 2 * P_x2r / 2 / mK39)+Qobj(V_xr * np.eye(ns,ns)). H_x=Qobj(-hbar ** 2 * P_x2r / 2 / mK39+V_xr * np.eye(ns,ns)) generates correct result, ; while H_x=Qobj(-hbar ** 2 * P_x2r / 2 / mK39)+Qobj(V_xr * np.eye(ns,ns)) generates all-zero. Is it an intended way or a bug?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1402:292,meter,meter,292,https://qutip.org,https://github.com/qutip/qutip/issues/1402,1,['meter'],['meter']
Energy Efficiency,The bug fix is scheduled to be included in numpy 1.22.0 -- https://github.com/numpy/numpy/milestone/93.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1694#issuecomment-990380859:15,schedul,scheduled,15,https://qutip.org,https://github.com/qutip/qutip/pull/1694#issuecomment-990380859,1,['schedul'],['scheduled']
Energy Efficiency,"The compulsive renaming continues.; I also reduced the number of time steps in the test to speed things up, and set to ignore the IntegrationWarning",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/455#issuecomment-194836741:43,reduce,reduced,43,https://qutip.org,https://github.com/qutip/qutip/pull/455#issuecomment-194836741,1,['reduce'],['reduced']
Energy Efficiency,The dnorm tests are sporadically (quite regularly) failing e.g. ```; ======================================================================; ERROR: Metrics: checks that special cases for dnorm agree with SDP solutions.; ----------------------------------------------------------------------; cvxpy.error.SolverError: Solver 'CVXOPT' failed. Try another solver or solve with verbose=True for more information. Try recentering the problem data around 0 and rescaling to reduce the dynamic range.; ```. I suggest we turn them off by not installing cvxpy for any of the test configurations.; We can turn them on again if someone can make an attempt to make the dnorm tests more reliable @cgranade . I will raise a PR for this now.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/880:468,reduce,reduce,468,https://qutip.org,https://github.com/qutip/qutip/issues/880,1,['reduce'],['reduce']
Energy Efficiency,"The documentation is wrong here. When `e_ops` is a function, `result.expect` is not empty, but a list of all outputs for that function. So the results is the transposed of what you propose here. For the energy, you would need to do `result.expect[t][3]`. ; The alternative could be a good options.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1238#issuecomment-621485756:203,energy,energy,203,https://qutip.org,https://github.com/qutip/qutip/issues/1238#issuecomment-621485756,1,['energy'],['energy']
Energy Efficiency,"The easiest would be to make special integrators for HEOM which take a dict of `QobjEvo`: `system = {(from, to): H0,}` and list of states. Then we loop over the items: `drho[from] = QobjEvo(t) @ rho[to]`. As long as the state can be represented in an array, every ODE from scipy, jax, etc can be used. We have tools to stack, unstack, split columns, etc, so the conversion between array and list of `Dense` is easy and efficient. For scipy integrators, that would only need to change 3 methods. Would that work on the HEOM side?; This mean we would need specialised integrator in JAX etc, but would be a lot easier than the stochastic ones so I don't think it's an issue. Changing the `QobjEvo` would be more work, but doable.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2384#issuecomment-2310307934:419,efficient,efficient,419,https://qutip.org,https://github.com/qutip/qutip/issues/2384#issuecomment-2310307934,1,['efficient'],['efficient']
Energy Efficiency,"The green line is after the first commit of this pull request where I used a for loop. The orange line is after the second commit when I switched to using numpy.cumprod.; The red line is from the quantum optics framework written in julia that I'm currently working on (https://github.com/bastikr/QuantumOptics.jl). While doing some benchmarks I realized that for large N qutips coherent function failed which is why I wrote this patch. I don't know where the constant offset in the benchmark originates from but I think the speed is fine now, creating coherent states is probably never a bottleneck anyway.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/683#issuecomment-292929031:4,green,green,4,https://qutip.org,https://github.com/qutip/qutip/pull/683#issuecomment-292929031,1,['green'],['green']
Energy Efficiency,"The include a new class to represent time dependent Qobj system.; It's take the list of Qobj and coefficient in the format normally accepted by solvers like mesolve and mcsolve and make an object of it.; The td_Qobj is callable and return the Qobj at the desired time, it support math (+,-,*) and unitary transformations: conj, dag, transpose.; The object has a cython compiled version with cython call to spmv and expect in order to be efficient in solvers.; I made it as a tool used by solver (stochatic/mcsolve), therefore may lack some features for users. Also the naming of some methods only make sense in a solver (rhs).; Lastly, this branch include it's own cubic spline code since the version available when I started working on it only accepted uniformly sampled data. This part may have become redundant. This branch only contain the new object, not the solvers using it.; This pull request replace half the ""cythonizing mcsolve"" pull request.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/814:437,efficient,efficient,437,https://qutip.org,https://github.com/qutip/qutip/pull/814,1,['efficient'],['efficient']
Energy Efficiency,"The internal data type for storing dynamics generators (Hamiltonians), propagators, and the time evolution can now be set as Qobj. When using Qobj the propagators are computed using qutip methods for expm. Resolves #370; The default for small systems remains ndarray, as this provides much faster execution (factor of 10 approx). However, it is assumed, but not yet tested, that for larger systems the Qobj propagation will be faster, and certainly less memory consumptive. The internal data type (if not specified) is chosen automatically using the same criteria Qobj.expm() uses to determine whether to use the (cython) sparse method.; The main motivation for implementing this change is for users developing their own custom fidelity and gradient measures which use the partial trace method. Consequently, preserving the dimensions is important. This has been shown (by colleagues testing) to be more efficient than recreating the Qobjs from ndarrays.; The internal operator processing methods and attributes have been renamed with underscores preceding to indicate that these will be of the internal operator data type. Accessors have been added that will always provide Qobj representations of the operators.; Theoretically any operator data type that supports the dot() method could be used, e.g. some other sparse matrix type, however this has not been extensively tested and should be considered an experimental feature.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/397:904,efficient,efficient,904,https://qutip.org,https://github.com/qutip/qutip/pull/397,1,['efficient'],['efficient']
Energy Efficiency,"The original purpose behind the files was to aid debugging, firstly of the library, then of implementations. Now it turns out that some of the 'test out files' are useful in terms of analysis, e.g. the iteration log, and so I generally have this turned on. Often the optimisation can take a long time, and hence having the files written out during the process can be useful to monitor progress. Also, sometimes the processing is terminated early (by the scheduler on the cluster we use), and so having some filesystem output can mean that some kind of result can be extracted. All this being said, I can see your point that some kind of 'run data' container object would be a better method, as the data could be used interactively. Perhaps users could then optionally chose to save this at the end or during the run, whichever suits them. I can add this to my todo list.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/313#issuecomment-73030236:377,monitor,monitor,377,https://qutip.org,https://github.com/qutip/qutip/pull/313#issuecomment-73030236,2,"['monitor', 'schedul']","['monitor', 'scheduler']"
Energy Efficiency,"The particular example that was given as an MKL error, is a tricky problem. Seems that the MKL cannot solve for it in the `power` steady mode. As such, I have implemented a 'solver' kwarg that allows for picking the solver that is used in the direct and power methods. The default is SciPy, which could be the usual SuperLU solver, or UMFPACK, if installed via scikits.umfpack. The 'mkl' option can be passed to do the mkl library. I will see what the Intel people have to say about solving the particular matrix that was given:. https://groups.google.com/d/msg/qutip/axGZ-7vtnhI/2Rlsl7ExAgAJ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/720#issuecomment-315449568:123,power,power,123,https://qutip.org,https://github.com/qutip/qutip/pull/720#issuecomment-315449568,2,['power'],['power']
Energy Efficiency,"The previous implementation of `choi_to_chi` and `chi_to_choi` required that `dims` be specified explicitly as qubits; for example, `[[[2, 2, 2], [2, 2, 2]], [[2, 2, 2], [2, 2, 2]]]` for a three-qubit system. This PR generalizes to allow for `dims` built from powers of 2 instead, as in `[[[8], [8]], [[8], [8]]]`. In addition, this PR adds new test cases to check that `to_choi` and `to_chi` properly roundtrip for multiqubit dimensions.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/390:260,power,powers,260,https://qutip.org,https://github.com/qutip/qutip/pull/390,1,['power'],['powers']
Energy Efficiency,"The reason is the same as for https://github.com/qutip/qutip/issues/1265. The pulse starts with 0 for a long time and the adaptive solver skips the real part of the pulse. You need to set `max_step` in `qutip.Options`. You can see this by setting a very small but none-zero value:; ```python; def func(t, *args):; omega_R = 2e-3; if t <100:; return 0.00001; elif t>600:; return 0.00001; else:; return 2*np.pi*omega_R; ```; The result is correct. I'll close it for now but please feel free to ask further questions if there are any.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1945#issuecomment-1168748566:122,adapt,adaptive,122,https://qutip.org,https://github.com/qutip/qutip/issues/1945#issuecomment-1168748566,1,['adapt'],['adaptive']
Energy Efficiency,"The scalar product (f_modes_t[a].dag() * c_op * f_modes_t[b])[0, 0] is computed at each loop in the for loop on k. But it only depends on a and b and can then be computed outside of the loop. In my case, I was dealing with Hilbert spaces of size 100, which resulted in a significantly reduced run time. Please, let me know about any feedback about this PR :). Follow up of !762.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/766:285,reduce,reduced,285,https://qutip.org,https://github.com/qutip/qutip/pull/766,1,['reduce'],['reduced']
Energy Efficiency,"The scalar product `(f_modes_t[a].dag() * c_op * f_modes_t[b])[0, 0]` is computed at each loop in the `for` loop on `k`. But it only depends on `a` and `b` and can then be computed outside of the loop. In my case, I was dealing with Hilbert spaces of size 100, which resulted in a significantly reduced run time. Please, let me know about any feedback about this PR :)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/762:295,reduce,reduced,295,https://qutip.org,https://github.com/qutip/qutip/pull/762,1,['reduce'],['reduced']
Energy Efficiency,"The state you defined is a pure state, so even if you write it as a density matrix it has zero entropy.; So that output is correct. The entropy being 1 for a Bell state is true when you trace out one of the two systems, so that the reduced state is now mixed,; e.g., ; ```; RR2=ptrace(RR,0); print(entropy_vn(RR2, base=2, sparse=False)). ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1078#issuecomment-526821321:232,reduce,reduced,232,https://qutip.org,https://github.com/qutip/qutip/issues/1078#issuecomment-526821321,1,['reduce'],['reduced']
Energy Efficiency,"There are two return values, as indicated. Ground state energy and ground state itself.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/805#issuecomment-360856097:56,energy,energy,56,https://qutip.org,https://github.com/qutip/qutip/issues/805#issuecomment-360856097,1,['energy'],['energy']
Energy Efficiency,"There are various options for 'test_output' files that can be set to monitor progress of an optimisation or to debug. These are currently output to files during the run. By default none of these files are produced. . It would be better to return an object tree, which could then saved to file if necessary. It should remain possible to output to file during the run, as in some cases this can be useful.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/371:69,monitor,monitor,69,https://qutip.org,https://github.com/qutip/qutip/issues/371,1,['monitor'],['monitor']
Energy Efficiency,"There is nothing in the heom ode solve that is not in the mesolve. mesolve can take superop L, that is solve dp/dt = L(t) p, just so long as L(t) = f1(t)L1 + f2(t)L2 ...; I have given some thought to how we can have a more general L(t), in the context of the heom, where for instance we might want to have time-dependent Matsubara terms. These would then occur many times in elements of the L, and so could potentially be solved efficiently. I'll add it to my list of things to discuss with @Ericgig when we meet in a few weeks. The new `QobjEvo` may perhaps have gone some way in this direction already.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/946#issuecomment-461018021:429,efficient,efficiently,429,https://qutip.org,https://github.com/qutip/qutip/issues/946#issuecomment-461018021,1,['efficient'],['efficiently']
Energy Efficiency,"There's another interesting technique that's sometimes applicable in these sort of repeating cases. Rather than passing a list of the same elements to `tensor`, you can also consider building up the tensor product manually, going up in powers of two. So you go along with something like:; ```python; out, tmp = H, H; for i in n.bit_length():; tmp = tensor(tmp, tmp); if n & (1 << i):; out = tensor(out, tmp); ```; (very very approximately - I've almost certainly got the indexing wrong). The idea is that you only perform `lg(n)` tensor products. Now, this might not actually give you much of a speed up in this case, because the calculation is still going to be dominated by the final tensor product, since the output matrix keeps getting larger. But in things like integer matrix powers, bigint calculations, or binomial expansions, this type of thing can be super useful! QuTiP 5 uses an algorithm like this for matrix powers. (I imagine SciPy does too, but for all the normal reasons, we don't use their implementation.). *edit*: here it is: https://github.com/qutip/qutip/blob/559387e68eb2b07064d2ae6099fbdc81ea96d67c/qutip/core/data/pow.pyx#L17-L39",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1688#issuecomment-942580997:236,power,powers,236,https://qutip.org,https://github.com/qutip/qutip/pull/1688#issuecomment-942580997,3,['power'],['powers']
Energy Efficiency,"These failing tests are different from those random failing we've been seeing before. I also have this in my scheduler PR, but it is completely unrelated to the PR. It starts to appear yesterday, but nothing was merged in the last three weeks. Does anyone have a clue?. The error seems to come from the core data part @jakelishman @Ericgig. Scipy made a release 4 days ago and we are using one of the private attributes.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1274#issuecomment-649280292:109,schedul,scheduler,109,https://qutip.org,https://github.com/qutip/qutip/pull/1274#issuecomment-649280292,1,['schedul'],['scheduler']
Energy Efficiency,"This PR reduces the calculation of average gate fidelity between two quantum channels to the recently merged implementation of process fidelity. Additional minor change: raise an error when the channel passed to `process_fidelity` does not preserve the Hilbert space dimension of the input state. Previously it gave inconsistent results for that case, for different representations of equivalent channels. It's probably possible to define the `process_fidelity` and `average_gate_fidelity` for non-dimension-preserving channels if there is a use case for it? The previous version of `average_gate_fidelity` also was not defined for non-dimension-preserving channel. **Related issues or PRs**; Last part of the changes proposed in https://github.com/qutip/qutip/issues/1703. Builds on the implementation of process_fidelity from https://github.com/qutip/qutip/pull/1712, https://github.com/qutip/qutip/pull/1748. **Changelog**; Re-implement average_gate_fidelity using process_fidelity.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1788:8,reduce,reduces,8,https://qutip.org,https://github.com/qutip/qutip/pull/1788,1,['reduce'],['reduces']
Energy Efficiency,"This is not a bug in QuTiP _per se_, but an artifact of the Fock space cutoff. In a numerical calculation, we can only use finite matrices, but the ladder operators can not be represented with finite matrices (Stone-von Neumann theorem). You can try printing `a * a.dag() - a.dag() * a` for different values of `dim`. You will find that it gives the expected result (identity matrix) except in the very bottom right matrix element. That matrix element however deviates a lot, and the more you increase `dims` the more it will deviate. So if you compute the trace distance of `a * a.dag()` and `a.dag() * a + 1`, you will get a large number instead of zero. In your example, the basic problem is the same. Usually this is not a problem because we assume the cutoff is larger than the number of excitations in any state we are looking at. In other words, in vector form, the bottom-most entries of any state are very (exponentially) small, and the deviations in the operators in those entries then don't play a role. However, when calculating a norm (such as the trace distance), entries corresponding to low-energy states or to high-energy states contribute equally, and we can get nonsensical results. You could try projecting out high-energy states before calculating the norm:; ```; dim = 25; dim2 = 10. a = destroy(dim); D = (a.dag() - a).expm(); a_displaced = D.dag() * a * D. proj = sum(projection(dim, i, i) for i in range(dim2)); diff = a_displaced - (a + 1); print((proj * diff * proj).norm('tr')); # 1.3039375636172088e-07; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2495#issuecomment-2245373244:1107,energy,energy,1107,https://qutip.org,https://github.com/qutip/qutip/issues/2495#issuecomment-2245373244,3,['energy'],['energy']
Energy Efficiency,This is the most naive way perhaps to do this. But since it uses Qobj functions to do it I am guessing it is the most efficient and takes into consideration sparse matrices etc. @ajgpitch,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/749:118,efficient,efficient,118,https://qutip.org,https://github.com/qutip/qutip/pull/749,1,['efficient'],['efficient']
Energy Efficiency,"This pull request is very much a proof of concept for a weekend hack, but I thought it might be of interest at least for discussion. As such, the code is decidedly a mess still (notably, I've not yet tried to get it working under Python 3). At any rate, this PR adds a new subclass of `BaseProgressBar` that uploads status monitoring information to a small web app that I started, [tskmon](https://tskmon.herokuapp.com) (also a mess). A screenshot of this in use by one of the GRAPE notebooks can be found [here](http://imgur.com/6xBt4Ic). The idea for this functionality is to make it easier to remotely monitor long computations from a phone or tablet, without having to worry about SSHing to a server. If you find this interesting, let me know, and I can try to start cleaning some things up as a spare-time project. Thanks!",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/255:323,monitor,monitoring,323,https://qutip.org,https://github.com/qutip/qutip/pull/255,2,['monitor'],"['monitor', 'monitoring']"
Energy Efficiency,"This relaxes the amount of sorting required in the `add_csr` operation. In the current version in `dev.major`, both the left and right matrices are sorted in all cases. This PR makes `add_csr` an `Accumulator` operation, which straight away reduces the number of sorts required to one. Second, I add a track inside `scatter` to know whether the scatters were in sorted order; if so, there's no need to sort within `gather`, which removes the other sort from `add_csr`. Effectively, this means that `add_csr` is O(n) when both input matrices are sorted (the most common) and O(n lg(n)) when either isn't, and we don't actually have to perform a separate test to decide between them. In practice, this is around a 2x speedup for most common sparse matrices, and goes up from there. I have also made `Accumulator` a C struct, and all the operations on it header-file only. This allows them to be operated on without holding the GIL (though threaded access to the same one would be unsafe anyway), and it also allows them to be inlined - if they are defined in the `pyx` file, then they will be compiled into a separate object and so must be called. We had talked about making `CSR` have a ""guarantee"" that it is always sorted, but I haven't implemented that here. Because of the changes to `scatter`, that would no longer give an algorithmic speedup in this case for matrices that are sorted (although we could avoid the use of `Accumulator` which would be more efficient). All of the operations I have written return a sorted matrix, so generally matrices will tend to become sorted over time anyway.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1362:241,reduce,reduces,241,https://qutip.org,https://github.com/qutip/qutip/pull/1362,2,"['efficient', 'reduce']","['efficient', 'reduces']"
Energy Efficiency,"Tingfeng for contributions; to this release.</p>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/kjd/idna/commit/1d365e17e10d72d0b7876316fc7b9ca0eebdd38d""><code>1d365e1</code></a> Release v3.7</li>; <li><a href=""https://github.com/kjd/idna/commit/c1b3154939907fab67c5754346afaebe165ce8e6""><code>c1b3154</code></a> Merge pull request <a href=""https://redirect.github.com/kjd/idna/issues/172"">#172</a> from kjd/optimize-contextj</li>; <li><a href=""https://github.com/kjd/idna/commit/0394ec76ff022813e770ba1fd89658790ea35623""><code>0394ec7</code></a> Merge branch 'master' into optimize-contextj</li>; <li><a href=""https://github.com/kjd/idna/commit/cd58a23173d2b0a40b95ee680baf3e59e8d33966""><code>cd58a23</code></a> Merge pull request <a href=""https://redirect.github.com/kjd/idna/issues/152"">#152</a> from elliotwutingfeng/dev</li>; <li><a href=""https://github.com/kjd/idna/commit/5beb28b9dd77912c0dd656d8b0fdba3eb80222e7""><code>5beb28b</code></a> More efficient resolution of joiner contexts</li>; <li><a href=""https://github.com/kjd/idna/commit/1b121483ed04d9576a1291758f537e1318cddc8b""><code>1b12148</code></a> Update ossf/scorecard-action to v2.3.1</li>; <li><a href=""https://github.com/kjd/idna/commit/d516b874c3388047934938a500c7488d52c4e067""><code>d516b87</code></a> Update Github actions/checkout to v4</li>; <li><a href=""https://github.com/kjd/idna/commit/c095c75943413c75ebf8ac74179757031b7f80b7""><code>c095c75</code></a> Merge branch 'master' into dev</li>; <li><a href=""https://github.com/kjd/idna/commit/60a0a4cb61ec6834d74306bd8a1fa46daac94c98""><code>60a0a4c</code></a> Fix typo in GitHub Actions workflow key</li>; <li><a href=""https://github.com/kjd/idna/commit/5918a0ef8034379c2e409ae93ee11d24295bb201""><code>5918a0e</code></a> Merge branch 'master' into dev</li>; <li>Additional commits viewable in <a href=""https://github.com/kjd/idna/compare/v3.4...v3.7"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compa",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2392:2899,efficient,efficient,2899,https://qutip.org,https://github.com/qutip/qutip/pull/2392,1,['efficient'],['efficient']
Energy Efficiency,"Update: I managed to find the propagator in a somewhat makeshift manner by sending an identity matrix to mesolve (although with reduced dimensions than in the code above):. ```shell; results = mesolve(H, psi_0, t, c_ops = c_ops) ### Dimensions here are [2,2,2] as compared to [3,3,7] above; plt.plot(t, expect(a_u.dag() * a_u, results.states), label=""mesolve""); for i in range(len(t)):; rho_vec = mat2vec(ρ0.full()); rho_T = Qobj(vec2mat(U_me.states[i].data * rho_vec), dims = ρ0.dims); plt.plot(t[i], expect(a_u.dag() * a_u, rho_T), ""x"", color=""orange""); plt.ylabel(""Population""); plt.xlabel(""Time""); plt.legend(); plt.show(); ```. ![image](https://github.com/user-attachments/assets/f65f25df-db91-49d6-a92a-77c3dced0900). If there's a better way of doing it, please let me know!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2532#issuecomment-2357056333:128,reduce,reduced,128,https://qutip.org,https://github.com/qutip/qutip/issues/2532#issuecomment-2357056333,1,['reduce'],['reduced']
Energy Efficiency,Updates to SS power method,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/326:14,power,power,14,https://qutip.org,https://github.com/qutip/qutip/pull/326,2,['power'],['power']
Energy Efficiency,Updating Bloch sphere attributes is not efficient,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1106:40,efficient,efficient,40,https://qutip.org,https://github.com/qutip/qutip/issues/1106,1,['efficient'],['efficient']
Energy Efficiency,"Uses a tuple (f(w), g(t)) to give product of noise power spectrum f(w) and time-dependence g(t). Both can be strings or Cubic_Spline objects.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/707:51,power,power,51,https://qutip.org,https://github.com/qutip/qutip/pull/707,1,['power'],['power']
Energy Efficiency,"Using Time dependent Hamiltonian in mcsolve and mesolve product different result for expectation value for `sigmay()`. It seems to work well for expectation value for `sigmax()` or `sigmaz()`. I wonder if dealing with complex number leads to this or there is another issue. This is a simple code illustrating the problem. ```; from qutip import *; from scipy import *; from pylab import*; #sigmay problem. psi0 = (basis(2,0) + basis(2,1)).unit() ; rho0 = psi0*psi0.dag(). H0 = 0*sigmax(); H1 = sigmax(); print(psi0); print(H0*psi0); H2 = sigmaz(); def H1_coeff(t,args):; return t-1. def H2_coeff(t,args):; return -t. h_t = [H0,[H1, H1_coeff],; [H2, H2_coeff]]. ntraj = 500. tlist = linspace(0, 3, 100); medata = mesolve(h_t, rho0, tlist, [], [sigmay()], args = {}); mcdata = mcsolve(h_t, psi0, tlist, [], [sigmay()], ntraj = ntraj, args = {}). fig,axes = subplots(1,1,figsize=(12,6)); axes.plot(mcdata.expect[0], color=""green"", alpha =0.6, label = ""mcsolve""); axes.plot(medata.expect[0], color=""blue"", alpha =0.6, label = ""mesolve""); axes.set_xlabel(r'$\frac{t}{t_f}$'); axes.set_ylabel('Expectation value'); axes.legend((""mcsolve"", ""mesolve"")). show(); ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/490:920,green,green,920,https://qutip.org,https://github.com/qutip/qutip/issues/490,1,['green'],['green']
Energy Efficiency,We do have the charge operator.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/562#issuecomment-263789028:15,charge,charge,15,https://qutip.org,https://github.com/qutip/qutip/issues/562#issuecomment-263789028,1,['charge'],['charge']
Energy Efficiency,"We don't use the same code for the sparse addition as in `v4`. v5 sparse addition is quite faster. But I expect it to be slower for 100 additions of 50 elements since you need to allocate memory for the 100 intermediate results, while for 1 addition with 5000 elements, there is only one memory allocation. But if you want to have a go at optimizing our basic operations, we will welcome any improvements.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2298#issuecomment-1904497811:179,allocate,allocate,179,https://qutip.org,https://github.com/qutip/qutip/issues/2298#issuecomment-1904497811,1,['allocate'],['allocate']
Energy Efficiency,"We ran into the ""Illegal Instruction"" problem too when using the conda qutip package (4.2.0-np113py36_2). Building qutip from source within the same conda environment produced a working qutip. Details of the processor on which the failure was observed:. model name	: Intel(R) Core(TM)2 Duo CPU E8400 @ 3.00GHz; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx lm constant_tsc arch_perfmon pebs bts rep_good nopl aperfmperf pni dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm sse4_1 xsave lahf_lm dtherm tpr_shadow vnmi flexpriority. $ uname -a; Linux plantain 3.16.0-4-amd64 #1 SMP Debian 3.16.43-2+deb8u2 (2017-06-26) x86_64 GNU/Linux",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/674#issuecomment-318765815:525,monitor,monitor,525,https://qutip.org,https://github.com/qutip/qutip/issues/674#issuecomment-318765815,1,['monitor'],['monitor']
Energy Efficiency,"Well, unitarity just doesn't come into it, and conjugating with non-unitary operators is a very natural thing to do for most qutip users. So I have thought a quite a bit about this, and this is ultimately @jrjohansson and @nonhermitian's decision, but I don't think assuming ""conjugation"" is a good idea, for the following reasons:. 1) It is inconsistent with the behavior of `tensor()`, which interprets `tensor(O,psi)`, where `O` is an operator and `psi` a ket, in dirac notation. This is actually a very powerful functionality, and follows the general idea that coding in qutip should be as similar to writing in dirac notation as possible (within reason). As an example, here is how you can do a partial trace:. ```; In [14]: rho = rand_dm(4,dims=[[2,2],[2,2]]). In [15]: out = Qobj(). In [16]: for i in range(2):; out += tensor(qeye(2),basis(2,i).dag())*rho*tensor(qeye(2),basis(2,i)); ....:. In [17]: out; Out[17]:; Quantum object: dims = [[2], [2]], shape = [2, 2], type = oper, isherm = True; Qobj data =; [[ 0.39666875+0.j 0.13801792+0.01223399j]; [ 0.13801792-0.01223399j 0.60333125+0.j ]]. In [18]: rho.ptrace(0); Out[18]:; Quantum object: dims = [[2], [2]], shape = [2, 2], type = oper, isherm = True; Qobj data =; [[ 0.39666875+0.j 0.13801792+0.01223399j]; [ 0.13801792-0.01223399j 0.60333125+0.j ]]; ```. Of course you can do far more general things than that.. you can pretty much do anything you can write in dirac notation. Similar behavior on the level of super-operators and operator-vectors, as suggested by @jrjohansson, earlier in this thread, would be similarly very powerful. For example, in the language of tensor networks, it would allow you to do arbitrary wire-bending operations using the maximally entangled state, as in the [paper](http://arxiv.org/abs/1111.6950) by Chris Wood et al., that @cgranade mentioned in relation to #238. As of now there is no convenient (i.e., ""index free"") way to do this (correct me if I am wrong), except explicitly performing the correspo",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/241#issuecomment-58035991:507,power,powerful,507,https://qutip.org,https://github.com/qutip/qutip/pull/241#issuecomment-58035991,1,['power'],['powerful']
Energy Efficiency,"What do you think is more efficient than doing; ```python; states = [qutip.basis(2, 0), qutip.basis(2, 1)]; results = [qutip.sesolve(H, state, times) for state in states]; ```; ?. I'm saying that to do each state independently, `mesolve` and `sesolve` have to independently integrate each state, so even if we added this functionality into those functions directly, it would be little more than that loop I just wrote if you have used the tools I described in the first comment. If you want the entire system propagator, `qutip.propagator` can calculate that for you. Lots of people have successfully used QuTiP already as part of reinforcement learning protocols - I've worked with at least a couple, but if you have very specific domain knowledge of your system, you often will be able to write an integrator which is faster for your cases, rather than the full general-purposes ones in QuTiP.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1323#issuecomment-660471465:26,efficient,efficient,26,https://qutip.org,https://github.com/qutip/qutip/issues/1323#issuecomment-660471465,1,['efficient'],['efficient']
Energy Efficiency,"What's wrong with just using a loop? Adding the `combine` statement is already extra work for you, and using the solver in a loop will be much clearer about what's going on. The `Qobj` object container is not meant to a vector of objects itself - use a list for that, or a numpy array if you're only going to do simple mathematical operations that you want broadcasting for (numpy will broadcast `*`, `/`, `+`, `-` and `**` correctly). The calculational complexity of the solver isn't helped by knowing you're going to do it a few times, but there are some setup costs that QuTiP already gives you the tools to alleviate. `mesolve` constructs a Liouvillian out the Hamiltonian and collapse operators; if you want to reuse the result of this, you should use `qutip.liouvillian` and `qutip.QobjEvo`, and use the `compile` method of the latter. You can pass the result of this directly as the `H` parameter of `mesolve` and it'll skip all the setup. There is some work going on about making a class-based interface to the solvers, which allows easier use of the tools to reduce setup time, but those likely won't be released for some time yet. In the meantime, just use a loop here. There will not be a notable slow down (unlike numpy maths operations) because the Python iteration over elements takes a negligible amount of time compared to single numerical intergration. As a side note, in this particular case you're doing unitary dynamics with state vectors, so this call to `mesolve` is actually translated into one to `sesolve`, which does not need to construct the Liouvillian.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1323#issuecomment-660459774:1068,reduce,reduce,1068,https://qutip.org,https://github.com/qutip/qutip/issues/1323#issuecomment-660459774,1,['reduce'],['reduce']
Energy Efficiency,"When I ran against @dick-t's example, it still violated the bound F ≤ 1, but by significantly less than before, as can be confirmed by the [success of `test_fidelity_bounded_purepure`](https://github.com/qutip/qutip/pull/362/files#diff-3e3c19be6d013d22c4823607e07cd240R106), introduced by #362. That PR doesn't fully adapt to the pure vs pure case that @dick-t lists, but it does avoid `sqrtm` in that case. I can fully specialize to that case, if you like, by using the inner product of the two pure states.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/361#issuecomment-134930346:317,adapt,adapt,317,https://qutip.org,https://github.com/qutip/qutip/issues/361#issuecomment-134930346,1,['adapt'],['adapt']
Energy Efficiency,"Yeah, I would think so too. Most of the times the energy gap is quite large compared to calculation errors.; But I'm really a newbie, so I'm not sure what the day-to-day users need. It would be great if a contributor could pitch in if this is a good idea.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1800#issuecomment-1103429187:50,energy,energy,50,https://qutip.org,https://github.com/qutip/qutip/issues/1800#issuecomment-1103429187,1,['energy'],['energy']
Energy Efficiency,"Yeah, `create` isn't fully done - it's basically the last resort for turning user input into a data-layer type, so it's not very important that it's efficient. We'll say in the documentation that it's preferable to create a `Dense` or `CSR` instance and pass that it, but have `data.create` as the backup to allow everything to ""just work"", albeit slowly. It will probably have an `add_creators` method, which will be similar to `add_specialisations` and `add_conversions`, but it'll only take an output type, a function and a priority. Then it'll probably just be a loop of `try: create(input); except: pass` until a creator succeeds. About the `*_csr` still used in `Qobj`: yes, these are deliberately left as-is in this PR, so as not to bulk up the files changed. There'll be a new PR to add those, and others to add more specialisations between `Dense` and `CSR`. Right now I'm writing a completely orthogonal PR updating the `pytest`, `coverage` and Coveralls support for `dev.major`. I'm not yet backporting that to the 4.X branch because the `sparse_routines.pxi` file complicates matters for the coverage, apparently...",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1338#issuecomment-679246318:149,efficient,efficient,149,https://qutip.org,https://github.com/qutip/qutip/pull/1338#issuecomment-679246318,1,['efficient'],['efficient']
Energy Efficiency,"Yeah, auto-tidyup should be a function of CSR matrices only. It doesn't make sense for dense matrices to have it, that's just burning cycles. As Asier mentioned, you already can't rely on floating-point operations being exactly identical between different matrix types, so there's no particular problem there. The point about auto-differentiation is an excellent reason that it must be allowed to vary between types as well. To be honest, I'm not sure how many cases the auto-tidyup operation actually helps in keeping things efficient. It may well be worth us having a proper investigation, and seeing how often it actually helps. I can tweak the addition and matrix-multiplication sparse algorithms to automatically tidy up when generating their output (if they don't already...), in which case we could probably entirely remove all ""automatic"" tidyup, and just have it be a manual operation?. `isherm_csr_full` is actually explicitly meant to handle all cases, _especially_ those involving matrices that have not been tidied up. The logic is actually sound (it's been deployed in `master` for a while now), but looks like there's a typo made when I handled the merge up, and the data-layer is missing a few of its mathematical tests so it didn't get spotted. I'll fix that now.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1610#issuecomment-882040752:526,efficient,efficient,526,https://qutip.org,https://github.com/qutip/qutip/pull/1610#issuecomment-882040752,1,['efficient'],['efficient']
Energy Efficiency,"Yeah, definitely there's no point running tests that aren't really testing the package properly. I would hope that if we're much more aggressive about converting time-dependent lists into QobjEvo objects inside `mesolve`, `mcsolve` and `sesolve` (or the class-based versions of them), we could significantly reduce the amount of testing that needs to be done with them. Most of the tests of time-dependent formats would then occur in the QobjEvo tests. We could still test all the configurations of the solvers without too heavy a time penalty. If we only use a small number of different time-dependent operators, we can compile them all only once, and have `pytest` manage the resources through shared fixtures. That would really cut down the run times, especially for the current ""slow"" tests. Another avenue for cutting down run time is if we could merge say the MKL and OpenMP tests into one Travis job - the setup time for one job is about 2.5 minutes, and that's before any tests have run at all. I would hazard a guess that having MKL but not OpenMP is a pretty rare case (maybe more common on high-performance clusters where people submit single-cpu jobs?).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1217#issuecomment-604348182:308,reduce,reduce,308,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604348182,1,['reduce'],['reduce']
Energy Efficiency,"Yeah, in the context of #850, I was only thinking of a global switch for the storage format. But #437 makes a good point about using full storage. I'd add to that the [Lapack banded storage format](http://www.netlib.org/lapack/lug/node124.html) which is extremely efficient for diagonal or tri-diagonal operators (or scipy's [DIA](https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.dia_matrix.html#scipy.sparse.dia_matrix), which I think is mostly equivalent). I've actually had to solve the equivalent problem of allowing multiple internal formats in the [Fortran QDYN package](https://www.qdyn-library.net), so I'm not sure why I didn't think of that in the first place ;-). I can definitely vouch for the efficiency gained by being able to switch internal sparse representations. So yeah, you'd definitely have the most flexible solution by allowing `Qobj.data` to use varying storage classes from object to object. Maybe the ""protocol"" could be for `Qobj.data` to be any subclass of the [scipy `spmatrix` base class]( https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.spmatrix.html#scipy.sparse.spmatrix)? Then the `Qobj` constructor would probably need an additional parameter `format` for the class that should be used to convert the `inpt` argument to the `data` attribute. The onus would then be on Scipy to provide a full matrix that is a subtype of `scipy.spmatrix` (just to keep the interface contract), and also to have `int64` versions of all their existing sparse classes. From a community standpoint, it would seem like one would get much more bang for the buck to have this problem solved inside SciPy, instead of doing a lot of low-level stuff in QuTiP -- at least if they're amenable to pull requests, but worst case you can still define necessary new `scipy.spmatrix` subclasses externally. Take all of my musings with a little grain of salt... I never really looked too deep into QuTiP's low-level internals, specifically where QuTiP is using Cython.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/850#issuecomment-383937610:264,efficient,efficient,264,https://qutip.org,https://github.com/qutip/qutip/issues/850#issuecomment-383937610,1,['efficient'],['efficient']
Energy Efficiency,Yes I would agree that this is not something that we will add to qutip at least not directly. Of course if someone wants to add such features then more power to them. Like Rob I think that time is better spent optimizing qutip.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/48#issuecomment-27613005:152,power,power,152,https://qutip.org,https://github.com/qutip/qutip/pull/48#issuecomment-27613005,1,['power'],['power']
Energy Efficiency,"Yes, I did the mkl.set_num_threads. This is my test script. ```; import numpy as np; import timeit. NUM_THREADS = 1. try:; import mkl; use_mkl = True; except:; use_mkl = False. def timing(f):; def wrap(*args):; time1 = timeit.default_timer(); ret = f(*args); time2 = timeit.default_timer(); print('{} function took {:0.3f} ms'.format(f.__name__, (time2-time1)*1000.0)); return ret; return wrap. if use_mkl:; mkl.set_num_threads(NUM_THREADS); print(""Number of threads is {}"".format(mkl.get_max_threads())); else:; print(""mkl unavailable""). d = 10000; n_reps = 10; A = np.random.random([d, d]). print(""Starting tests""). @timing; def calc_exp(A):; for i in range(n_reps):; E = np.exp(A). calc_exp(A); ```. Whether I set NUM_THREADS to 1 or 4 I only see one processor active in system monitor, and the processing time is the same. This is what starting me looking into whether I should expect numpy / scipy to use multiple cores. The articles I read suggested that numpy and scipy do not contain any intrinsic parallelisation. It may have been out-of-date. Now I just tried a similar test with scipy.linalg.expm and it did use multiple processors and was approximately twice as fast with 4 than with 1.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/462#issuecomment-207490289:781,monitor,monitor,781,https://qutip.org,https://github.com/qutip/qutip/issues/462#issuecomment-207490289,1,['monitor'],['monitor']
Energy Efficiency,"Yes, perhaps there is room for making this easier and more efficient. I see that in the non-markovian methods like qutip.nonmarkov.heom, this is possible by constructing a superoperator L(t) and then using the standard ODE solver. Do you think we can tweak mesolve somehow to do this?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/946#issuecomment-461000423:59,efficient,efficient,59,https://qutip.org,https://github.com/qutip/qutip/issues/946#issuecomment-461000423,1,['efficient'],['efficient']
Energy Efficiency,"Yes, these are the implementation issues I discussed. Calling the ode solver of course takes small steps, with the step size based on the requested tolerance level. Our root finding is trivial in this case. We linearize the evolution and then find the intercept. It almost always works in a single step, and is quite efficient.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/344#issuecomment-105092235:317,efficient,efficient,317,https://qutip.org,https://github.com/qutip/qutip/issues/344#issuecomment-105092235,1,['efficient'],['efficient']
Energy Efficiency,"Yes. I will change it. It's recommended to use a loop instead of reduce in; python3. On Tue 16 Jan, 2018, 9:21 AM Neill Lambert, <notifications@github.com>; wrote:. > Might need to import mul as well. I think its; >; > from operator import mul; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/pull/795#issuecomment-357818629>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AGpUBEgg2l0XCXLVol-x-Npy16LF3j_iks5tK-uMgaJpZM4Rdnnh>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/795#issuecomment-357826970:65,reduce,reduce,65,https://qutip.org,https://github.com/qutip/qutip/pull/795#issuecomment-357826970,1,['reduce'],['reduce']
Energy Efficiency,[![Coverage Status](https://coveralls.io/builds/36512426/badge)](https://coveralls.io/builds/36512426). Coverage increased (+0.05%) to 63.454% when pulling **9e080a769cf147c31de25cb7e219168cdb631689 on BoxiLi:scheduler** into **c719cbe13c69b18741c67578e720b654984afd7c on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1273#issuecomment-650731854:209,schedul,scheduler,209,https://qutip.org,https://github.com/qutip/qutip/pull/1273#issuecomment-650731854,1,['schedul'],['scheduler']
Energy Efficiency,"_Edited 2020-08-10_. This is now a complete switch-over to the new `CSR` type, from `fast_csr_matrix`. There are huge changes and knock-on effects all across QuTiP. Most notably for user code is that arithmetic on `Qobj` is now massively faster for small `Qobj`. The instantiation cost of `Qobj` is reduced an awful lot, and internal functions which return `Qobj` now supply `dims` and `type` information to the constructor so that instantiation time is down from ~50-100µs to about ~5µs. Notable removals:; - `eseries` and `essolve` are completely gone; - OpenMP is temporarily removed (though this will be added back in to the data layer later); - all functions in `correlation` and `qobj` which were marked ""deprecated"" are now actually removed; - `vec2mat` and `mat2vec` have been renamed to `vector_to_operator` and `operator_to_vector`; - all ""legacy"" files have been completely removed; - all previous scipy-CSR-like Cython code is completely gone (replaced by the data layer); - `Qobj` no longer defines `__array__`, and so will not automatically turn itself into one. Having this produced very inconsistent behaviour when multiplying by numpy arrays, or otherwise dealing with numpy functions. If you _need_ `Qobj` to be array, be explicit and call `Qobj.full()`. Notable changes in `Qobj`:; - matrix multiplication now contracts to a scalar if doing `bra @ ket`; - matrix multiplication no longer contracts 1D subspaces, but the new `Qobj.contract()` will do this; - arithmetic operations are much more strict about enforcing `Qobj.type`-safety; - `Qobj` understands the `@` operator to mean matrix multiplication, but also maintains the same behaviour of treating `Qobj * Qobj` as matrix multiplication. Package organisation:; - the solvers are now physically contained in `qutip.solve`, but are still logically available in the `qutip` namespace. This means that direct imports (like `from qutip.mesolve import mesolve`) will fail (it becomes `from qutip.solve.mesolve import mesolve`), bu",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1332:299,reduce,reduced,299,https://qutip.org,https://github.com/qutip/qutip/pull/1332,1,['reduce'],['reduced']
Energy Efficiency,"`auto-tidyup` exist to remove 0s stored in sparse matrices. `auto-tidyup` is quite messy, rounding all values under 1e-12 to 0 per default after each matrix operation can only cause problems. . As for the benchmark, why ask for dense operations to add an extra step to increase their outputs error to the same level as sparse operations so their benchmark do not look to good in comparisons. I think it is fair that the sparse operation's timing include the time needed to manage it's structure. . For auto-differentiation, if operations included are done with `Qobj`, it would have to differentiate tidy-up steps after each operation. But since the tidy-up operation does not have a clean derivative (`out[out < 1e-12] = 0`) it will make the auto-differentiation very inefficient. I see `auto-tidyup` more as a necessary evil to keep sparse matrix efficient. I would argue that we should not have `auto-tidyup` in `Qobj` and have sparse matrix operation clean themselves instead.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1610#issuecomment-881709826:849,efficient,efficient,849,https://qutip.org,https://github.com/qutip/qutip/pull/1610#issuecomment-881709826,1,['efficient'],['efficient']
Energy Efficiency,"`general_stochastic` is very manual, halfway to scipy's ode solver. It can be used for both open and closed system and does not correspond to any particular physics equation. It the function that you use if you do weird stuff that does not fit already available template and I would discourage it's use. ; If other type of stochastic evolution are commonly used, it would be better to make a new specialized function than use `general_stochastic`. Old example should be adapted to `smesolve` as much as possible. The solver does not know if it is solving an close or open system (or something else). So e_ops are not touched. ; d1, d2 are working in array for performance issue. We could easily have them work in Qobj, but I would expect a significant slowdown. These function, taking no args, and being call many time at each step could benefit from being compiled with numba.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1115#issuecomment-546958283:470,adapt,adapted,470,https://qutip.org,https://github.com/qutip/qutip/pull/1115#issuecomment-546958283,1,['adapt'],['adapted']
Energy Efficiency,"abel(""Detuning (GHz)""); plt.ylabel(""|S21|(dB)""); plt.ylim(-10,0.01); # plt.xlim(-2, 2); plt.grid(); ```. ### Code Output. ```shell; {; 	""name"": ""ValueError"",; 	""message"": ""Provided dimensions do not match the data: (65536, 65536) vs (17, 17)"",; 	""stack"": ""---------------------------------------------------------------------------; ValueError Traceback (most recent call last); Cell In[2], line 39; 35 H = H_r + H_int + H_d; 37 c_ops = [np.sqrt(kappa)*ann_operators[0], np.sqrt(kappa)*ann_operators[-1]]; ---> 39 rho_ss = steadystate(H, c_ops); 41 a_out = np.sqrt(kappa) * expect(ann_operators[-1], rho_ss); 42 t.append(np.sqrt(kappa) * a_out/drive_amp). File /opt/anaconda3/envs/trial_env/lib/python3.11/site-packages/qutip/solver/steadystate.py:177, in steadystate(A, c_ops, method, solver, **kwargs); 175 kwargs.pop(\""power_eps\"", 0); 176 kwargs.pop(\""sparse\"", 0); --> 177 return _steadystate_direct(A, kwargs.pop(\""weight\"", 0),; 178 method=solver, **kwargs); 180 elif method == \""power\"":; 181 # Remove unused kwargs, so only used and pass-through ones are included; 182 kwargs.pop(\""weight\"", 0). File /opt/anaconda3/envs/trial_env/lib/python3.11/site-packages/qutip/solver/steadystate.py:246, in _steadystate_direct(A, weight, **kw); 243 rho_ss = _data.column_unstack(steadystate, n); 244 rho_ss = _data.add(rho_ss, rho_ss.adjoint()) * 0.5; --> 246 return Qobj(rho_ss, dims=A.dims[0], isherm=True). File /opt/anaconda3/envs/trial_env/lib/python3.11/site-packages/qutip/core/qobj.py:307, in Qobj.__init__(self, arg, dims, copy, superrep, isherm, isunitary); 305 self._isherm = isherm; 306 self._isunitary = isunitary; --> 307 self._initialize_data(arg, dims, copy); 309 if superrep is not None:; 310 self.superrep = superrep. File /opt/anaconda3/envs/trial_env/lib/python3.11/site-packages/qutip/core/qobj.py:300, in Qobj._initialize_data(self, arg, dims, copy); 296 self._dims = Dimensions(; 297 dims or [[self._data.shape[0]], [self._data.shape[1]]]; 298 ); 299 if self._dims.shape != self.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2386:2898,power,power,2898,https://qutip.org,https://github.com/qutip/qutip/issues/2386,1,['power'],['power']
Energy Efficiency,"ains either an array result.expect of expectation values for the times specified by tlist, (...), or nothing if a callback function was given in place of operators for which to calculate the expectation values. So to work with callback function, we need to manage the storage by ourselves, for example by defining a global list, as it is done in [this example](https://nbviewer.jupyter.org/github/jrjohansson/qutip-lectures/blob/master/Lecture-8-Adiabatic-quantum-computing.ipynb#Evolve-the-system-in-time). **Describe the solution you'd like**. Currently when we pass a list of operators such as. ```python; e_ops = [sigmax(), sigmay(), sigmaz()]; result = mesolve(H, rho0, e_ops=e_ops); ```. We will be able to access expectation value of `sigmax()` in `result.expect[0]`, of `sigmay()` in `result.expect[1]` and of course `sigmaz()` in `result.expect[2]`. Why not capture the custom measurement in similar way?. ```; def customMeasurement(tau, psi):; exp_x = expect(sigmax(), psi); exp_y = expect(sigmaz(), psi); exp_z = expect(sigmay(), psi); energy = expect(H, psi); fidelity = np.abs(psi_ref.overlap(psi))**2.; return [exp_x, exp_y, exp_z, energy, fidelity]; ```. Now it is possible to still get expectation values as before, but in addition we can take more custom measurements (in this example energy and fidelity of state) and access them in exactly the same way for the convenience. The only thing user needs to keep track of is order of operators returned from the callback function. So now it is as before but in addition `result.expect[3]` contains energy and `result.expect[4]` contains fidelity and no custom managed global external lists required as it was in the [example](https://nbviewer.jupyter.org/github/jrjohansson/qutip-lectures/blob/master/Lecture-8-Adiabatic-quantum-computing.ipynb#Evolve-the-system-in-time). **Describe alternatives you've considered**. Alternatively we could establish that custom measurement callback function must return only single value and user woul",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1238:1682,energy,energy,1682,https://qutip.org,https://github.com/qutip/qutip/issues/1238,1,['energy'],['energy']
Energy Efficiency,"ank you for contributing to QuTiP! Please make sure you have finished the following tasks before opening the PR. - [ ] Please read [Contributing to QuTiP Development](http://qutip.org/docs/latest/development/contributing.html); - [ ] Contributions to qutip should follow the [pep8 style](https://www.python.org/dev/peps/pep-0008/).; You can use [pycodestyle](http://pycodestyle.pycqa.org/en/latest/index.html) to check your code automatically; - [ ] Please add tests to cover your changes if applicable.; - [ ] If the behavior of the code has changed or new feature has been added, please also update the documentation in the `doc` folder, and the [notebook](https://github.com/qutip/qutip-notebooks). Feel free to ask if you are not sure.; - [ ] Include the changelog in a file named: `doc/changes/<PR number>.<type>` 'type' can be one of the following: feature, bugfix, doc, removal, misc, or deprecation (see [here](http://qutip.org/docs/latest/development/contributing.html#Changelog%20Generation) for more information). Delete this checklist after you have completed all the tasks. If you have not finished them all, you can also open a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/) to let the others know this on-going work and keep this checklist in the PR description.; -->. **Description**; Importing qutip takes a long time. On a Windows system import takes almost 4 seconds. The import time can be analyzed with [importtime-waterfall](https://github.com/asottile/importtime-waterfall). A large part of the time is spend in importing external packages (scipy, IPython, matplotilib), but also qutip itself adds to the import time. This PR reduces the import time by setting the logger names in 4 submodules explicitly. ; Benchmark:; ```; python -c ""import time; import matplotlib; import IPython; import scipy; t0=time.time(); import qutip; dt=time.time()-t0; print(f'{dt*1e3:.2f} ms')""; ``` ; Results:; ```; dev.major: 1996.52 ms; PR: 1510.06 ms; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1980:1711,reduce,reduces,1711,https://qutip.org,https://github.com/qutip/qutip/pull/1980,1,['reduce'],['reduces']
Energy Efficiency,"antum circuit simulator (which was a GSoC project) providing enhanced; > features for a pulse-level description of quantum circuits and noise; > models. A new class `Processor` and several subclasses are added to; > represent different platforms for quantum computing. They can transfer a; > quantum circuit into the corresponding control sequence and simulate the; > dynamics with QuTiP solvers. Different noise models can be added to; > `qutip.qip.noise` to simulate noise in a quantum device.; >; > This module is still young and many features can be improved, including; > new device models, new noise models and integration with the existing; > general framework for quantum circuits (`qutip.qip.circuit`). There are; > also possible applications such as error mitigation techniques [1-3].; >; > The tutorial notebooks can be found at; > http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM; > conference may help you get an overview (; > https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the; > Github Project page for a collection of related issues and ongoing Pull; > Requests.; >; > ### Expected outcomes; > - More devices defined in the `qutip.qip.device` module. At the moment, we; > have two models: spin chain and cavity QED. We would like to include some; > other commonly used planform such as Superconducting system, Ion trap; > system or silicon system. Each model will need a new set of control; > hamiltonian and a compiler that find the control pulse of a quantum gate.; > This part is gonna involve some physics and study of commonly used hardware; > platforms. The related code can be found in `qutip.qip.device` and; > `qutip.qip.compiler`; > - Refactoring the circuit compiler to allow simple pulse scheduling, e.g.; > Restriction one pulses that can be turned on at the same time.; > - Features to perform error mitigation techniques in QuTiP, such as; > zero-error extrapolation.; > - APIs to allow import quantum circuits from other soft",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553:2023,schedul,schedule,2023,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553,1,['schedul'],['schedule']
Energy Efficiency,"are not engaged with the project, do not reply to communications or attend board meetings. . **<span style=""text-decoration:underline;"">Decisions</span>**; Each board member has a vote in decisions, which are taken by a majority vote. . **<span style=""text-decoration:underline;"">Communications</span>**; The board agrees to meet **[once a year]** (also via online meeting). The board is informed at least **[once a year]** by the Admin Team on QuTiP development and other activities (via email in the qutip-board channel). . ### 4. Non-profit Support; Since 2018, QuTiP is an affiliated project of [NumFOCUS](https://numfocus.org/), a 501(c)(3) nonprofit organization registered in the USA. The mission of NumFOCUS is to promote open practices in research, data, and scientific computing **[Unitary Fund](http://unitary.fund/)** pledges to support the QuTiP project as a fiscally sponsored project. QuTiP remains an affiliated project of NumFOCUS. [Unitary Fund](http://unitary.fund/) is a 501(c)(3) nonprofit organization registered in the USA working to create a quantum technology ecosystem that benefits the most people. Due to its role in the quantum software community, Unitary Fund pledges to: . * Promote the knowledge of QuTiP in the quantum software and sci-dev community.; * Provide scientific and technical software advice upon request of the Admin team and Board. ; * Provide logistic and financial support for code projects and meetings (subject to request by the QuTiP admins and availability of Unitary Fund funds). ; * Accept financial support on behalf of the QuTiP project. These funds will be allocated to and managed by the QuTiP admins on board’s approval in coordination with Unitary Fund. ; * Provide access to expert legal advice (subject to request by the QuTiP board or admin team and availability of Unitary Fund funds) through its legal counsel, useful for matters related to licensing, copyright, collaborations with industry and to protect the QuTiP brand and project.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1373:13874,allocate,allocated,13874,https://qutip.org,https://github.com/qutip/qutip/issues/1373,1,['allocate'],['allocated']
Energy Efficiency,"are you saying . ```python; states = [qutip.basis(2, 0), qutip.basis(2, 1)]; results = [qutip.sesolve(H, state, times) for state in states]; ```. is **most** efficient?. even more efficient than. ```python; U = qutip.propagator(H, times); states = [qutip.basis(2, 0), qutip.basis(2, 1)]; results = [U*state for state in states]; ```. ?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1323#issuecomment-660472577:158,efficient,efficient,158,https://qutip.org,https://github.com/qutip/qutip/issues/1323#issuecomment-660472577,2,['efficient'],['efficient']
Energy Efficiency,"cal. ; (And in quantum mechanics negative values is not much different from any other complex value.). On 26 Apr 2014, at 18:55, Robert Johansson notifications@github.com wrote:. > OK, I see. complex_array_to_rgb could be useful in other contexts as well. I am not aware of any standard way of doing this, but if you are interested in this kind of mapping you might want to have a look at a similar mapping of complex values to color that we have in the function matrix_histogram_complex. In that case we map only the phase to the color, and the magnitude is shown by the bar heights, but if you map the magnitude to the alpha channel or the overall intensity you get something the is similar to what you use. For example, with the code from matrix_histogram_complex you get something like; > ; > x = np.linspace(-5, 5, 100); > X, Y = np.meshgrid(x,x); > Z = X + 1j \* Y; > cdict = {'blue': ((0.00, 0.0, 0.0),; > (0.25, 0.0, 0.0),; > (0.50, 1.0, 1.0),; > (0.75, 1.0, 1.0),; > (1.00, 0.0, 0.0)),; > 'green': ((0.00, 0.0, 0.0),; > (0.25, 1.0, 1.0),; > (0.50, 0.0, 0.0),; > (0.75, 1.0, 1.0),; > (1.00, 0.0, 0.0)),; > 'red': ((0.00, 1.0, 1.0),; > (0.25, 0.5, 0.5),; > (0.50, 0.0, 0.0),; > (0.75, 0.0, 0.0),; > (1.00, 1.0, 1.0))}; > ; > cmap = mpl.colors.LinearSegmentedColormap('phase_colormap', cdict, 256); > norm = mpl.colors.Normalize(-pi, pi); > colors = cmap(norm(np.angle(Z))); > colors[:,:,3] = sqrt(abs(Z)) / sqrt(abs(Z)).max(); > ; > plt.imshow(colors, interpolation='none');; > which produces the following map of the complex plane:; > ; > compared to; > ; > plt.imshow(complex_array_to_rgb(Z), interpolation='none');; > which produces; > ; > Either mapping is fine of course, but I think a nice property of the first one is that real numbers and imaginary numbers are mapped to simple colors (real positive->blue, negative->red and imaginary positive green, imaginary negative turquoise), and complex number with both real and imaginary part are mapped to colors that are relatively simple to ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/105#issuecomment-41480460:1410,green,green,1410,https://qutip.org,https://github.com/qutip/qutip/pull/105#issuecomment-41480460,1,['green'],['green']
Energy Efficiency,"csr_matrix` type was replaced by the new, custom `CSR` type as the data backing for `Qobj`, and all internal QuTiP data representations. This produced some speed-ups in some places due to improved algorithms and better cache usage in places, but its principle advantage was the massive reduction in overhead for function calls between Python and C space, which largely affected small objects. The full aim, however, is to have QuTiP 5 support many different data representations as the backing of `Qobj`, and use the most suitable representation for the given data. This will not require every single QuTiP function to have an exponential number of versions for every possible combination of inputs, but only to have specialisations for the most common data combinations. This concept is the ""data layer"". All code examples in this PR are prefixed with. ```python; >>> from qutip.core import data; ```. ## Specification. The core to achieving this is fast, fully specified inter-conversion between all known data types, and efficient multiple-dispatch for mathematical operations. There are then four principle components of the data-layer:. 1. a creation routine which returns an appropriate data-layer type given some arbitrary Python object (`data.create`); 2. a routine which can perform the conversion from any data-layer type to any other data-layer type (`data.to`); 3. completely specialised mathematical operations (e.g. `data.add_csr_dense_dense(CSR, Dense) -> Dense`); 4. an object which provides multiple dispatch operations on its input arguments to use an exact specialisation (defined in item 3) if known, or uses the conversion routine (item 2) to convert the inputs into ones matching a specialisation if not: `data.Dispatcher`. The exported mathematical functions will all be instances of this type. The minimum work needed to define a new data-layer type is to provide `data.to` with two conversion functions; one into the new type from a current data-layer type, and one which con",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1338:1176,efficient,efficient,1176,https://qutip.org,https://github.com/qutip/qutip/pull/1338,1,['efficient'],['efficient']
Energy Efficiency,"ctionality, and follows the general idea that coding in qutip should be as similar to writing in dirac notation as possible (within reason). As an example, here is how you can do a partial trace:. ```; In [14]: rho = rand_dm(4,dims=[[2,2],[2,2]]). In [15]: out = Qobj(). In [16]: for i in range(2):; out += tensor(qeye(2),basis(2,i).dag())*rho*tensor(qeye(2),basis(2,i)); ....:. In [17]: out; Out[17]:; Quantum object: dims = [[2], [2]], shape = [2, 2], type = oper, isherm = True; Qobj data =; [[ 0.39666875+0.j 0.13801792+0.01223399j]; [ 0.13801792-0.01223399j 0.60333125+0.j ]]. In [18]: rho.ptrace(0); Out[18]:; Quantum object: dims = [[2], [2]], shape = [2, 2], type = oper, isherm = True; Qobj data =; [[ 0.39666875+0.j 0.13801792+0.01223399j]; [ 0.13801792-0.01223399j 0.60333125+0.j ]]; ```. Of course you can do far more general things than that.. you can pretty much do anything you can write in dirac notation. Similar behavior on the level of super-operators and operator-vectors, as suggested by @jrjohansson, earlier in this thread, would be similarly very powerful. For example, in the language of tensor networks, it would allow you to do arbitrary wire-bending operations using the maximally entangled state, as in the [paper](http://arxiv.org/abs/1111.6950) by Chris Wood et al., that @cgranade mentioned in relation to #238. As of now there is no convenient (i.e., ""index free"") way to do this (correct me if I am wrong), except explicitly performing the corresponding partial transpose directly on the underlying matrix data. 2) In the absence of this functionality it is a bad idea to assume something else. Assuming conjugation is unexpected behavior, and besides it is something the user can easily do him/herself by using `to_super()`. It is way better to ""force"" the user to be explicit about things by throwing an `Exception`, than assuming something that might be unexpected. It enforces good coding style, giving more readable code, and avoids code that will break if the f",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/241#issuecomment-58035991:1590,power,powerful,1590,https://qutip.org,https://github.com/qutip/qutip/pull/241#issuecomment-58035991,1,['power'],['powerful']
Energy Efficiency,"ctories average, etc. . `Evolver` is qutip's ODE solver interface: the states are `Data` object and the function is `QovjEvo`(or `QobjEvoFunc`). There are multiple type of evolver wrapping different scipy's ode solver and a few of our own. The wrapper around scipy's zvode that was previously used in qutip's is `EvolverScipyZvode`, but we now have our own cython solver based on [Verner's method](http://people.math.sfu.ca/~jverner/) that accept any Data type as state. Different evolver based on different ODE method are interchangeable and have their dispatcher `evolver_collection`, allowing to easily add new methods. . With this, time-dependent system are managed by `QobjEvo`, ODE by `Evolver`, therefore the solvers can concentrate more closely on the physic. **Evolver:**; Method supported with this PR: `adams`, `bdf`, `dop853`, `lsoda`, `vern7`, `vern9`, `diag`. The 4 first are from `scipy.integrate.ode`, the 3 last are ours. `vern7` and `vern9` are runge-kutta methods of 7th and 9th order using [verner's most efficient coefficient](http://people.math.sfu.ca/~jverner/) with dense output. `diag` diagonalize a constant system and solve the ODE in that basis.; The minimum that must be given for a new evolver are the `prepare`, `set_state`, `get_state` and `step` methods. `evolver_collection` work as a dispatcher over evolvers. Solvers obtain their evolver instance using `evolver_collection[method, rhs]` with both `method` and `rhs` taken from the options. `evolver_collection` keep a list of description, used options and capacities for each member. It can list the available method matching desired condition. The `rhs` options is not used yet in this PR, it is for future Adaptative Hilbert Space and other modification to the ODE that affect the matrix-state product. #### Other utilities and code added in this PR:. ##### `SolverQEvo`, `Feedback`:; Wrapper around `QobjEvo` that handle feedback arguments and provide `ndarray` interface. ##### qutip/solver/ode/...; Code qutip",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1409:1439,efficient,efficient,1439,https://qutip.org,https://github.com/qutip/qutip/pull/1409,1,['efficient'],['efficient']
Energy Efficiency,"d the optimal. It offers an option that randomly shuffles the gates (if commuting) and repeats the scheduling a few times to get a better result. For scheduling quantum instructions, of which the runtime of different gates might differ, an additional step is required to compute the scheduled start time of each instruction.; It adds the additional dependency caused by hardware constraint to the graph and recomputes the distance of each node to the start and end node. This distance is then converted to the start time of each instruction. **Example**; ```python; >>> from qutip.qip.circuit import QubitCircuit; >>> from qutip.qip.scheduler import Scheduler; >>> circuit = QubitCircuit(7) ; >>> circuit.add_gate(""SNOT"", 3) # gate0; >>> circuit.add_gate(""CZ"", 5, 3) # gate1; >>> circuit.add_gate(""CZ"", 4, 3) # gate2; >>> circuit.add_gate(""CZ"", 2, 3) # gate3; >>> circuit.add_gate(""CZ"", 6, 5) # gate4; >>> circuit.add_gate(""CZ"", 2, 6) # gate5; >>> circuit.add_gate(""SWAP"", [0, 2]) # gate6; >>>; >>> scheduler = Scheduler(""ASAP""); >>> scheduler.schedule(circuit, gates_schedule=True) ; [0, 1, 3, 2, 2, 3, 4]; ```; The result list is the cycle indices for each gate. It means that the circuit can be executed in 5 gate cycles:; ```; gate0; gate1; gate3, gate4; gate2, gate5; gate6; ```; Notice that gate3 and gate4 commute with gate2, therefore, the order is changed to reduce the number of cycles. **Related issues or PRs**; Solve #1243 . **Changelog**; Add a gate(pulse) scheduler for quantum circuit. **Others**; @sarsid Maybe you will be interested in it. It can be used to determine which gates can be executed at the same time. So maybe we can improve the efficiency of the QubitCircuit by combining several gates together and generate the full matrix using `qutip.qip.expand_operation`. However, writing such scheduler in Python is usually not the most efficient choice and there will be some overhead. I'm not sure if it will bring any real improvement in circuit simulation and where is the th",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1273:2636,schedul,scheduler,2636,https://qutip.org,https://github.com/qutip/qutip/pull/1273,3,"['Schedul', 'schedul']","['Scheduler', 'scheduler']"
Energy Efficiency,"ded in a similar way to Julia. Say you want to define `matmul` between `Dense` on the left and `CSR` on the right to produce a `CSR` output (a specialisation that we likely won't ship with because it's unlikely to be efficient). You'd write your function; ```python; def matmul_dense_csr_csr(left, right):; ...; return out; ```; and then because unlike Julia it's not built-in, you just manually add it to the dispatch table for `matmul`:; ```python; qutip.data.matmul.add_specialisations(matmul_dense_csr_csr, (Dense, CSR), CSR); ```; QuTiP then knows about it, so it'll get used when appropriate. You can also add entirely new types to the dispatch table by adding them to the ""cast"" table `qutip.data.to`, giving at least one method to convert the new type into an already-known one, and at least one method to convert an already-known type into the new type. QuTiP will then be able to use the entirely new type as `Qobj.data` for every single operation within the library (though it won't be super efficient until you add the linear algebra specialisations you use most). This actually goes a bit beyond what Julia does (at least as far as I know), because QuTiP's new system ""completes"" the dispatch table for all known types automatically; when it's asked to do say `kron` on two types it doesn't have a specialisation for, it'll cast the inputs through a path of least weight into a specialisation it _does_ know, and then use that. The desired casting rules and preferred output types can be altered dynamically at run-time as well. While I put a lot of effort into making this as fast as possible (and naturally a constant-time operation with respect to the number of known types and specialisations), of course the penalty we pay is a small run-time cost of type look-ups and dispatch (<1µs, but that's dwarfed by the cost of the operations themselves). We will have a hook for creating ""data-layer types"" out of arbitrary inputs, but we weren't heavily focussing on this at all; it seems r",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-825608507:5889,efficient,efficient,5889,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-825608507,1,['efficient'],['efficient']
Energy Efficiency,"ductively coupled transmon"" circuit with the following hamiltonian. $$ \hat{H} = E_\mathrm{c} \left( \hat{n_x}^2 - \hat{n_y}^2 \right) + E_\mathrm{J}\left( -\cos \left( \hat{x} \right) \cos \left( \hat{y} \right) + b \left( \hat{y} - \pi \frac{\phi_\mathrm{b}}{\phi_0}\right)^2\right)$$. With:; * $E_\mathrm{c} = \left(2 e \right)^2/\left(2 C\right)/2$ the charging energy; * $E_\mathrm{J} = \left( \phi_0 I_\mathrm{c} \right)/\left(2 \pi \right)/2$ the Josephson energy; * $\hat{x} = \left( \hat{\varphi}_1 +\hat{\varphi}_2 \right)/2$ and $\hat{y} = \left( \hat{\varphi}_1 -\hat{\varphi}_2 \right)/2$; * $\hat{n_x} = \left( \hat{n}_1 +\hat{n}_2 \right)/2$ and $\hat{n_y} = \left( \hat{n}_1 -\hat{n}_2 \right)/2$; * $b = \phi_0/\left(2 \pi I_\mathrm{c} L\right)$ the inductance ratio. From that I wrote the following function:; ```python; def spectrumInductive(fluxes: np.ndarray,; dim: int=11,; c: float=10e-13,; ic: float=10e-9,; l: float=1000e-12,; ng: float=0):. n1 = qtp.tensor(qtp.charge(int(dim/2))+ng, qtp.qeye(dim)); n2 = qtp.tensor(qtp.qeye(dim), qtp.charge(int(dim/2))+ng). phi1 = qtp.tensor(qtp.phase(dim), qtp.qeye(dim)); phi2 = qtp.tensor(qtp.qeye(dim), qtp.phase(dim)). nx = (n1+n2)/2; ny = (n1-n2)/2. phix = (phi1+phi2)/2; phiy = (phi1-phi2)/2. # Charging energy in GHz; ec = (2*cst.e)**2/2/c/cst.h/1e9/2. # Josephson energy in GHz; ej = cst.phi_0/2/np.pi*ic/2/cst.h/1e9/2. # The inductance ratio; b = cst.phi_0/2/np.pi/ic/l. h1 = ec*(nx**2 + ny**2); h2 = ej*(-phix.cosm()*phiy.cosm()). es = np.zeros((len(fluxes), dim*dim-1)); for i, flux in enumerate(fluxes):. h = h1 + h2 + ej*b*(phiy - np.pi*flux)**2. e = h.eigenenergies(); e = (e - e[0]); es[i] = np.abs(e[1:]). return es; ```. And got the incorrect ""inductively coupled Transmon"" transition frequency:; ```python; fluxes = np.linspace(-0.5, 0.5, 20). fig, ax = plt.subplots(1, 1); ys1 = spectrumInductive(fluxes, c=40e-15, ic=8e-9, l=7.5e-9, dim=21, ng=0.5); ax.plot(fluxes, ys1[:,0]); ax.set_xlabel('fluxes'); ax.set_ylabel('tr",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2447:2602,charge,charge,2602,https://qutip.org,https://github.com/qutip/qutip/issues/2447,1,['charge'],['charge']
Energy Efficiency,"e any and all insight into this problem, thank you. ```python; import scipy as sp; import numpy; from qutip import *; import matplotlib.pyplot as plt. # pre define transport functions (time dependent functions for use in hamiltonian); def q_c(t,t_f,d): #position of ion; return d*(10*(t/t_f)**3 - 15*(t/t_f)**4 + 6*(t/t_f)**5). def grad_q_c(t,t_f,step,d): #velocity; return np.gradient(q_c(t,t_f,d),step). def grad2_q_c(t,t_f,step,d): #acceleration; return np.gradient(grad_q_c(t,t_f,step,d),step). def q_0(t,args): #position of trap (harmonic well); '''; t: time step; t_f: final time (total time); step: step size for gradient function; d: total distance of transport'''; t_f,step,d = args['t_f'],args['step'],args['d']; return grad2_q_c(t,t_f,step,d)/(w_z**2) + q_c(t,t_f,d). def q_02(t,args): #position of trap; t_f,step,d = args['t_f'],args['step'],args['d']; return (grad2_q_c(t,t_f,step,d)/(w_z**2) + q_c(t,t_f,d))**2. # set up initial conditions and parameters for ion; N = 200 # hilbert space dimension ; w = 2 * pi * 200e3 # angulr frequency of oscillator (Hz); m = 171 * 1.66e-27 # mass of ion (kg); hbar = 1 # reduced plancks constant (eVs) . # set up operators; a = destroy(N); n = a.dag()*a; x = np.sqrt(hbar/(2*m*w))*(a + a.dag()) #position operator (m); p = 1j*np.sqrt((hbar*m*w)/2) * (a - a.dag()) #momentum operator (kg(m/s)). # duration of ion transport; T = 1; t_f = (2*pi*T)/w; t_list = linspace(0,t_f,1001). # total distance travelled; dist = 220e-6 # distance in (m). # pre-define arguments; args = {'d' : dist, 't_f' : t_f, 'step' : t_list[1]-t_list[0]}. # hamiltonian ; H_0 = (p**2)/(2*m) + (m/2)*(w**2)*(x**2). H = [H_0,; [-m*(w**2)*x,q_0], ; [(m/2)*(w**2)*qeye(N),q_02]]. # initial state; psi0 = basis(N,0). # solve; result = mesolve(H, # hamiltonian; psi0, # initial state; t_list, # time; [], # expectation operators; args=args, # arguments to time dependent function; options=Options(nsteps=1e9), # number of steps solver can take; progress_bar=True) # progress bar; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1834:1968,reduce,reduced,1968,https://qutip.org,https://github.com/qutip/qutip/issues/1834,1,['reduce'],['reduced']
Energy Efficiency,"e output is to be sorted in increasing quasienergies or not. Parameters; ----------. H : :class:`qutip.qobj`; system Hamiltonian, time-dependent with period `T`. args : dictionary; dictionary with variables required to evaluate H. T : float; The period of the time-dependence of the hamiltonian. The default value; 'None' indicates that the 'tlist' spans a single period of the driving. U : :class:`qutip.qobj`; The propagator for the time-dependent Hamiltonian with period `T`.; If U is `None` (default), it will be calculated from the Hamiltonian; `H` using :func:`qutip.propagator.propagator`. Returns; -------. output : list of kets, list of quasi energies. Two lists: the Floquet modes as kets and the quasi energies. """""". if U is None:; # get the unitary propagator; U = propagator(H, T, [], args, options = options). # find the eigenstates for the propagator; evals, evecs = la.eig(U.full()). eargs = angle(evals). # make sure that the phase is in the interval [-pi, pi], so that; # the quasi energy is in the interval [-pi/T, pi/T] where T is the; # period of the driving. eargs += (eargs <= -2*pi) * (2*pi) +; # (eargs > 0) * (-2*pi); eargs += (eargs <= -pi) * (2 * pi) + (eargs > pi) * (-2 * pi); e_quasi = -eargs / T. # sort by the quasi energy; if sort:; order = np.argsort(-e_quasi); else:; order = list(range(len(evals))). # prepare a list of kets for the floquet states; new_dims = [U.dims[0], [1] * len(U.dims[0])]; new_shape = [U.shape[0], 1]; kets_order = [Qobj(np.matrix(evecs[:, o]).T,; dims=new_dims, shape=new_shape) for o in order]. return kets_order, e_quasi[order]. # create periodically-driven Hamiltonian (with degenerate quasienergies); XI = tensor(sigmax(), qeye(2)); ZI = tensor(sigmaz(), qeye(2)); a = 2.404825557695773; H = [ ZI , [0.5 * a * 10 *XI, 'cos(10*t)']]. T = 2*np.pi/10. # compute Floquet modes with different integration accuracy. fq_modes0, fq_energy0 = floquet_modes(H, T); fq_modes1, fq_energy1 = floquet_modes_mod(H, T, options=Options(rtol=1e-12,atol=1e",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1864:2584,energy,energy,2584,https://qutip.org,https://github.com/qutip/qutip/issues/1864,1,['energy'],['energy']
Energy Efficiency,"e scheduler; scheduler = Scheduler(method); gate_cycle_indices = scheduler.schedule(; circuit, gates_schedule=gates_schedule, repeat_num=repeat_num); ; # check if the scheduled length is expected; > assert(max(gate_cycle_indices) == expected_length); E assert 4 == 5; E +4; E -5. /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib/python3.9/site-packages/qutip/tests/test_scheduler.py:143: AssertionError; __________________________________________________________________________________ test_driven_cavity[power-gmres] __________________________________________________________________________________. method = 'power-gmres', kwargs = {'M': <900x900 _CustomLinearOperator with dtype=complex128>, 'mtol': 0.1, 'use_precond': 1}. @pytest.mark.parametrize(['method', 'kwargs'], [; pytest.param('direct', {}, id=""direct""),; pytest.param('direct', {'sparse':False}, id=""direct_dense""),; pytest.param('eigen', {}, id=""eigen""),; pytest.param('svd', {}, id=""svd""),; pytest.param('power', {'mtol':1e-5}, id=""power""),; pytest.param('power-gmres', {'mtol':1e-1, 'use_precond':1, 'M':'iterative'},; id=""power-gmres""),; pytest.param('power-bicgstab', {'use_precond':1, 'M':'power'},; id=""power-bicgstab""),; pytest.param('iterative-gmres', {}, id=""iterative-gmres""),; pytest.param('iterative-bicgstab', {}, id=""iterative-bicgstab""),; ]); def test_driven_cavity(method, kwargs):; N = 30; Omega = 0.01 * 2 * np.pi; Gamma = 0.05; ; a = qutip.destroy(N); H = Omega * (a.dag() + a); c_ops = [np.sqrt(Gamma) * a]; if 'use_precond' in kwargs:; > kwargs['M'] = qutip.build_preconditioner(H, c_ops, method=kwargs['M']). /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib/python3.9/site-packages/qutip/tests/test_steadystate.py:124: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _. A = Quantum object: dims = [[30], [30]], shape = (30, 30), type = oper, is",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1755:4772,power,power,4772,https://qutip.org,https://github.com/qutip/qutip/issues/1755,2,['power'],['power']
Energy Efficiency,"e the solvers can concentrate more closely on the physic. **Evolver:**; Method supported with this PR: `adams`, `bdf`, `dop853`, `lsoda`, `vern7`, `vern9`, `diag`. The 4 first are from `scipy.integrate.ode`, the 3 last are ours. `vern7` and `vern9` are runge-kutta methods of 7th and 9th order using [verner's most efficient coefficient](http://people.math.sfu.ca/~jverner/) with dense output. `diag` diagonalize a constant system and solve the ODE in that basis.; The minimum that must be given for a new evolver are the `prepare`, `set_state`, `get_state` and `step` methods. `evolver_collection` work as a dispatcher over evolvers. Solvers obtain their evolver instance using `evolver_collection[method, rhs]` with both `method` and `rhs` taken from the options. `evolver_collection` keep a list of description, used options and capacities for each member. It can list the available method matching desired condition. The `rhs` options is not used yet in this PR, it is for future Adaptative Hilbert Space and other modification to the ODE that affect the matrix-state product. #### Other utilities and code added in this PR:. ##### `SolverQEvo`, `Feedback`:; Wrapper around `QobjEvo` that handle feedback arguments and provide `ndarray` interface. ##### qutip/solver/ode/...; Code qutip's evolver, mostly for Verner's method. . ##### progress_bar:; Added a progress bar passed on `tqdm`. `update` no longer need the iteration number. ##### parallel map:; - Added a `loky` based parallel map, hopefully will help windows users.; - Added a `reduce_func` input. Presently the map function is saving all results and the average, std, etc. are only computed at the end. There was no real advantage in saving only average values since all trajectories were in memory at the end of the map. But users expected lower memory usage when asking for only the results average.; - Added `timeout` options to the map, when passed, no error is raised but obtained results are returned. This allow to ask for 30s ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1409:2108,Adapt,Adaptative,2108,https://qutip.org,https://github.com/qutip/qutip/pull/1409,1,['Adapt'],['Adaptative']
Energy Efficiency,"e, scaling, Pade, then squaring. The SciPy dense and sparse expm uses the same Higham algorithm as Matlab, so it should be good.; - Paul. > On Apr 8, 2016, at 08:38, Alexander Pitchford notifications@github.com wrote:; > ; > I tried some experiments with elementwise exp with numpy to see if mkl did any parallel processing. It did not seem to.; > ; > scipy.linalg.expm claims to use the Pade approximation. There used to be a expm2 (that used diagonalisation) and an expm3 (method?) but these have been deprecated. The scipy docs claim that the method used in expm is ""numerically more robust"".; > ; > In the control modules we either use a eigendecomp (diagonalisation) method or scipy.linalg.expm_frechet as we typically need to compute propagators (which either uses the eigendecomp or is provided by the frechet deriv) . Frechet also uses some Pade approximation. I think the Pade method uses something like a LU decomp, but would need more research. It would always be more efficient to use the eigendecomp if it has been computed already.; > ; > My guess is that if parallel LU decomp provides much (x100) faster eigendecomp, then the diagonalisation method would be much faster than expm. However, some experimentation would be needed to verify.; > ; > I am told that there are many methods of computing expm, and is there is much numerical research into it. It seems strange that scipy only offer us one method. The spinach control library (http://spindynamics.org/Spinach.php http://spindynamics.org/Spinach.php) reputedly has some interesting methods of computing expm.; > ; > A quick Google search found scipy/scipy#354 https://github.com/scipy/scipy/pull/354, which shows that scipy considered adding a method kwarg, but have parked the idea.; > ; > We currently have multiple methods in qutip based. I assume there must have been some motivation for writing our own sparse matrix functions for expm. It would seem that a pretty thorough investigation would be required determine to valu",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/462#issuecomment-207466362:1542,efficient,efficient,1542,https://qutip.org,https://github.com/qutip/qutip/issues/462#issuecomment-207466362,1,['efficient'],['efficient']
Energy Efficiency,"e, the qutip.qip module now contains the noisy quantum circuit simulator (which was a GSoC project) providing enhanced features for a pulse-level description of quantum circuits and noise models. A new class `Processor` and several subclasses are added to represent different platforms for quantum computing. They can transfer a quantum circuit into the corresponding control sequence and simulate the dynamics with QuTiP solvers. Different noise models can be added to `qutip.qip.noise` to simulate noise in a quantum device. This module is still young and many features can be improved, including new device models, new noise models and integration with the existing general framework for quantum circuits (`qutip.qip.circuit`). There are also possible applications such as error mitigation techniques [1-3]. The tutorial notebooks can be found at http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM conference may help you get an overview (https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the Github Project page for a collection of related issues and ongoing Pull Requests. ### Expected outcomes; - More devices defined in the `qutip.qip.device` module. At the moment, we have two models: spin chain and cavity QED. We would like to include some other commonly used planform such as Superconducting system, Ion trap system or silicon system. Each model will need a new set of control hamiltonian and a compiler that find the control pulse of a quantum gate. This part is gonna involve some physics and study of commonly used hardware platforms. The related code can be found in `qutip.qip.device` and `qutip.qip.compiler`; - Refactoring the circuit compiler to allow simple pulse scheduling, e.g. Restriction one pulses that can be turned on at the same time.; - Features to perform error mitigation techniques in QuTiP, such as zero-error extrapolation.; - APIs to allow import quantum circuits from other software packages or commonly used language e.g. th",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1184#issuecomment-590737940:1374,schedul,schedule,1374,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590737940,1,['schedul'],['schedule']
Energy Efficiency,"ear and submits it to the Board to inform it of developments on the project. ### 3. Board; **Members of the Board make sure that the Admin Team and project is well supported financially and logistically.** Thanks to them helping enable the financial and logistics support, through scientific advisory and by keeping an eye on the project, they make the life of the admin team easier. . **<span style=""text-decoration:underline;"">Tasks</span>**; Board members are volunteers that pledge to:. - Meet** [once] **a year to review the development of the project (also online).; - Be consulted for scientific advice by the admins. ; - Help settle conflicts or roadblocks that may arise on the project development. ; - Help review student applications of interns that may volunteer or work on the QuTiP project.; - Try to provide funding for QuTiP development and maintenance.; - Become ambassadors for scientific open source in general and QuTiP in particular.; - Take formal decisions to allocate eventual funds, upon recommendation of the Admin Team. . **<span style=""text-decoration:underline;"">Composition</span>**; Initial board members are invited by the admin team, based on their track-record in supporting the project and future helping it grow. The admins elect new board members, in agreement with existing board members or upon the suggestion of the current board. Additional prospective board members should send an email with their proposed candidature and two brief statements: one explaining their past involvement with the QuTiP project and one with their commitment to the QuTiP for the future, e.g., how they would help and support the project in their activity. The minimum number of board members is **[three]** and maximum is **[seven]**. Board seats are held **[indefinitely]**. The board can decide, by majority vote, to remove a board member for good reasons, e.g., if they are not engaged with the project, do not reply to communications or attend board meetings. . **<span style=",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1373:11350,allocate,allocate,11350,https://qutip.org,https://github.com/qutip/qutip/issues/1373,1,['allocate'],['allocate']
Energy Efficiency,"ed features for a pulse-level description of quantum circuits and noise models. A new class `Processor` and several subclasses are added to represent different platforms for quantum computing. They can transfer a quantum circuit into the corresponding control sequence and simulate the dynamics with QuTiP solvers. Different noise models can be added to `qutip.qip.noise` to simulate noise in a quantum device. This module is still young and many features can be improved, including new device models, new noise models and integration with the existing general framework for quantum circuits (`qutip.qip.circuit`). There are also possible applications such as error mitigation techniques [1-3]. The tutorial notebooks can be found at http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM conference may help you get an overview (https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the Github Project page for a collection of related issues and ongoing Pull Requests. ### Expected outcomes; - More devices defined in the `qutip.qip.device` module. At the moment, we have two models: spin chain and cavity QED. We would like to include some other commonly used planform such as Superconducting system, Ion trap system or silicon system. Each model will need a new set of control hamiltonian and a compiler that find the control pulse of a quantum gate. This part is gonna involve some physics and study of commonly used hardware platforms. The related code can be found in `qutip.qip.device` and `qutip.qip.compiler`; - Refactoring the circuit compiler to allow simple pulse scheduling, e.g. Restriction one pulses that can be turned on at the same time.; - Features to perform error mitigation techniques in QuTiP, such as zero-error extrapolation.; - APIs to allow import quantum circuits from other software packages or commonly used language e.g. through quantum assembly language (qasm); ----------------------------------------------------------------. Best; Boxi",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1184#issuecomment-590737940:2107,schedul,scheduling,2107,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590737940,1,['schedul'],['scheduling']
Energy Efficiency,"eld for several applications. In general, a complex semidefinite program is required to calculate the diamond norm. Although elegant, this approach is very inefficient. Unfortunately, no alternative method has been discovered for calculating the diamond norm in the general case of CPTP channels. However, in the special case where we are trying to calculate the difference between two unitary channels, a very efficient implementation exists. This makes use of an unproved theorem on page 29 of [1]. I have proved this theorem and elaborated an efficient algorithm to calculate the diamond distance between two unitaries as part of my masters thesis. . The current qutip implementation makes use of the semi-definite program formulation in [3] and only uses a simplified calculation on 2 qubit unitary differences. The implementation of this novel approach is very simple - the hardest step involves diagonalising a unitary. Although time complexity is still exponential in the number of qubits, this implementation is far more efficient than the more general implementation. The Choi representation of the quantum channel isn't used and there is no need to solve a complicated semi-definite program (meaning I can do away with the `cvxpy` dependency). ## Empirical testing; Results of empirical testing on my machine are reported below. | | 3 qubit | 4 qubit |; |---------|---------|----------|; | current implementation | 5.22 s | 3min 21s |; | hyper-efficient implementation | 924 µs | 1.11 ms |. ## Proposition; Given the popularity of the circuit model and unitary-based quantum computation, I believe a very efficient implementation of the diamond distance for unitaries would be incredibly valuable for the research community. Given how simple the change is (current tests already cover the test case), I think it would be a simple and worthwhile addition to qutip. ## Citations. [1] D. Aharonov, A. Kitaev, and N. Nisan, “Quantum circuits with mixed states,” in Proceedings of the thirtieth a",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2416:1261,efficient,efficient,1261,https://qutip.org,https://github.com/qutip/qutip/pull/2416,1,['efficient'],['efficient']
Energy Efficiency,"elog. #### <code>test_krylovsolve.py</code>. * [x] We have <code>qutip.rand_herm</code> for a random hamiltonian. --> **Changed**; * [x] Isn't <code>h_sho</code> equivalent to <code>U=qutip.rand_unitary_haar(dim) \ return U* (qutip.num(dim)+0.5)*U.dag()</code> ? --> **We can test it with that one**.; * [x] Clean imports on <code>test_krylovsolve</code>; <code>qeye</code> imported twice, <code>run_module_suite</code> never used, etc.; * [x] Header no longer used. --> **Removed.**; * [x] Why is <code>os.environ['QUTIP_GRAPHICS'] = ""NO""</code> needed? --> **Remained from the original copy from test_sesolve.py**; * [x] Why not simply compare to <code>sesolve</code> ? --> **Is easier, so we swap it.**; * [x] Naming this fidelity feels wrong with the <code>1-...</code>. Also make Qobj and array conversions more efficiently with Naming this fidelity feels wrong with the <code>1-....</code>; You don't need to work go back and forth between <code>Qobj</code> and array. Also make things more efficiently with <code>1 - np.abs(psi_exact.overlap(psi_k))**2</code>. --> **Corrected.**; * [x] More efficiently <code>psi0=qutip.rand_ket(dim)</code>. --> **Corrected.**; * [x] Why compute 3 expectation values if only one is tested?; Also please use the normal <code>assert</code> instead of numpy's <code>assert_</code>. We are slowly removing them since we migrated from unitest to pytest. --> **Now all of them are checked and using <code>asset</code>**. #### <code>krylovsolve.py</code>. * [x] <code>isinstance</code> should be tested first since if it isn't, <code>psi0.isket</code> will raise an error before reaching it. It should raise a <code>TypeError</code>.; * [x] Please raise an error instead of using <code>assert</code>, since it can be suppressed.; * [x] Testing for dims instead of shape would be better. --> **Done.**; * [x] Empty progress bars can be ignored.; * [x] Improve the print at <code>particular_tlist</code> using <code>warnings.warn</code>. Properly describe the warning.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1739#issuecomment-1041914233:1010,efficient,efficiently,1010,https://qutip.org,https://github.com/qutip/qutip/pull/1739#issuecomment-1041914233,1,['efficient'],['efficiently']
Energy Efficiency,"emal eigenvalues: that is, eigenvalues with large magnitudes. In particular, using which = 'SM' may lead to slow execution time and/or anomalous results. A better approach is to use shift-invert mode."". See also the example on that page. I tried using the 'shift-invert mode' as suggested, and that gave better results. But, they are still pretty bad for the problem I want to solve: I'm trying to find the low lying spectrum for a very large Liouvillian, as I vary a single external Hamiltonian parameter. The smallest one (in magnitude) is always zero, and all others are negative. Supposedly, the vanishing of the real part of the eigenvalue with the second largest (closest to zero) real part can be useful for characterizing phase transitions, see, for example, this recent paper: http://prl.aps.org/abstract/PRL/v110/i15/e150401. I attach a plot where I have computed the eigenvalue with second largest real part (which is also the one with second smallest magnitude; the two criteria coincide) using 1) scipy.linalg.eigvals (green line) and 2) scipy.sparse.linalg.eigs (blue line): https://dl.dropboxusercontent.com/u/6042643/liouvspec.png. As you can see, the results from the sparse solver are pretty poor (I assume the dense solver results are correct). . As far as the physics goes: Another thing to notice is that the system goes through phase transitions at -2.0, 0.5 and 2.0 for the parameter along the x-axis, and there are no signs of that in the plot. On a side note, I also wasn't able to reproduce Fig 2(a), middle panel, of the PRL paper I linked to, although I got qualitative agreement if I tried with different parameters than what is quoted in the figure caption. Do you by any chance happen to have any experience with this way of characterizing dynamical phase transitions?. I might try to make a simpler example illustrating the problem later. The Liouvillian I am considering now is too big to use as an example, as using the dense solver requires a huge amount of memory.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/16#issuecomment-16416062:1363,green,green,1363,https://qutip.org,https://github.com/qutip/qutip/issues/16#issuecomment-16416062,1,['green'],['green']
Energy Efficiency,"er than a hard limit, but it's a good rule of thumb for testing one piece of functionality. [Here's a (slightly out-dated) list of our current longest tests](https://github.com/qutip/qutip/issues/1217#issuecomment-604116373), bearing in mind that some of those ones actually test many many things in the same test function. The test seems structured ok to me. Certainly the testing algorithm isn't the major cause of speed loss. You could try timing some ""real-world"" examples of using your measurements, and try running them in a profiler to see if there are any obvious ways to speed things up. With any luck the new data-layer tools and the possibility of using dense `Qobj` storage will give you a fair amount of speed-up once they're complete, since I imagine in your small circuit you're paying quite a lot of sparse matrix overhead. I'll prefix this last part with: _you should always profile your code before optimising it_. That said, let me wildly break that rule and guess at where I think you'll find big speed-ups: caching and pre-computation. If you know you're going to run the same thing loads and loads of times, then you shouldn't have to call `self.propagators` each time, or build `measurement_ops` inside `measure_comp_basis`. Do those once at the start of `run_statistics`, and save them. Minor things that _may_ speed up - check the profiling!; 1. ""compress"" the output of `self.propagators`: consecutive propagators with no measurements or classical controls inbetween can be pre-multiplied together at the start to make one matrix. This will save you ~3 matrix multiplications per run in the test.; 2. use more efficient ways to construct large tensor spaces: `qutip.basis`, `qutip.projection` and `qutip.qeye` can all directly constructor product spaces (e.g. `qutip.basis([2, 2, 2], [0, 1, 0])`). `tensor` is a comparatively expensive operation, and tensoring a list of elements internally is effectively `tensor(...(tensor(tensor(els[0], els[1]), els[2]), ...), els[-1])`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1274#issuecomment-640127213:1688,efficient,efficient,1688,https://qutip.org,https://github.com/qutip/qutip/pull/1274#issuecomment-640127213,1,['efficient'],['efficient']
Energy Efficiency,"er the hood will not fully understand how this is working. I believe the crux of this implementation is a fast computation of the tensors of `coherent_dm` operators for all the alpha values at (x + iy). Personally, on many occasions, I have looked at qutip implementations of quantum operations just to understand what is happening under the hood and I believe several users have often done this to hack around. If someone were to try and understand Q-function computation from this code, it seems simple enough with the call:. ```; np.abs(np.dot(alphas, (self._g*0.5)*vector))**2; ```. for state vectors, or decomposing a density matrix into state vectors and then running the above call. Or . ```; out = np.polyval(; (0.5*g * vector / np.sqrt(scipy.special.factorial(ns)))[::-1],; alpha.conj,; ); ```. But the object `alpha` now constructed with `_qfunc_alpha_matrix` class is a bit difficult to understand. The variable `self.conj = np.empty(x.shape, dtype=np.complex128)` creates a tensor and sets it to a mesh grid (x, -y), but then what does the `__call__()` return? The tensor of `coherent_dm(x+iy)` for each x and y coordinate? But how is it computing it without knowing the Hilbert space dim for the state, which I think is computed on the fly by `ns = np.arange(first, last).reshape(1, 1, -1)`. It seems it caches the `coherent_dm` computed upto `current_size` and then extends it to `size` for new Hilbert space dimensions. . I am sorry if I am being a bit thick here because I understand the overall idea of the code but somehow I am not confident it will be easy for others to understand on first read. Do you think we can make it a bit more transparent how the `_qfunc_alpha_matrix` works and that the crux of the method is computing the operators `coherent_dm` in an efficient way and saving them? If I have understood the code correct, I could try to document it a bit more and simplify it. . Let me know your thoughts and correct me if I misunderstood something @jakelishman @Ericgig",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1583#issuecomment-877241762:2444,efficient,efficient,2444,https://qutip.org,https://github.com/qutip/qutip/pull/1583#issuecomment-877241762,1,['efficient'],['efficient']
Energy Efficiency,"ers. This is set to the average abs value of the; Liouvillian elements if not specified by the user.; ; method : str, default = 'iterative'; Tells the preconditioner what type of Liouvillian to build for; iLU factorization. For direct iterative methods use 'iterative'.; For power iterative methods use 'power'.; ; permc_spec : str, optional, default='COLAMD'; Column ordering used internally by superLU for the; 'direct' LU decomposition method. Options include 'COLAMD' and; 'NATURAL'. If using RCM then this is set to 'NATURAL' automatically; unless explicitly specified.; ; fill_factor : float, optional, default = 100; Specifies the fill ratio upper bound (>=1) of the iLU; preconditioner. Lower values save memory at the cost of longer; execution times and a possible singular factorization.; ; drop_tol : float, optional, default = 1e-4; Sets the threshold for the magnitude of preconditioner; elements that should be dropped. Can be reduced for a courser; factorization at the cost of an increased number of iterations, and a; possible singular factorization.; ; diag_pivot_thresh : float, optional, default = None; Sets the threshold between [0,1] for which diagonal; elements are considered acceptable pivot points when using a; preconditioner. A value of zero forces the pivot to be the diagonal; element.; ; ILU_MILU : str, optional, default = 'smilu_2'; Selects the incomplete LU decomposition method algoithm used in; creating the preconditoner. Should only be used by advanced users.; ; Returns; -------; lu : object; Returns a SuperLU object representing iLU preconditioner.; ; info : dict, optional; Dictionary containing solver-specific information.; """"""; ss_args = _default_steadystate_args(); ss_args['method'] = 'iterative'; for key in kwargs.keys():; if key in ss_args.keys():; ss_args[key] = kwargs[key]; else:; raise TypeError(""Invalid keyword argument '"" + key +; ""' passed to steadystate.""); ; # Set column perm to NATURAL if using RCM and not specified by user; if ss_args[",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1755:8391,reduce,reduced,8391,https://qutip.org,https://github.com/qutip/qutip/issues/1755,2,['reduce'],['reduced']
Energy Efficiency,"es_schedule"",; [; pytest.param(deepcopy(_circuit2()), ""ALAP"", 5, False, False, id=""circuit2 ALAP no shuffle""); ]); def test_scheduling_gates3(; circuit, method, expected_length, random_shuffle, gates_schedule):; if random_shuffle:; repeat_num = 5; else:; repeat_num = 0; result0 = gate_sequence_product(circuit.propagators()); ; # run the scheduler; scheduler = Scheduler(method); gate_cycle_indices = scheduler.schedule(; circuit, gates_schedule=gates_schedule, repeat_num=repeat_num); ; # check if the scheduled length is expected; > assert(max(gate_cycle_indices) == expected_length); E assert 4 == 5; E +4; E -5. /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib/python3.9/site-packages/qutip/tests/test_scheduler.py:143: AssertionError; __________________________________________________________________________________ test_driven_cavity[power-gmres] __________________________________________________________________________________. method = 'power-gmres', kwargs = {'M': <900x900 _CustomLinearOperator with dtype=complex128>, 'mtol': 0.1, 'use_precond': 1}. @pytest.mark.parametrize(['method', 'kwargs'], [; pytest.param('direct', {}, id=""direct""),; pytest.param('direct', {'sparse':False}, id=""direct_dense""),; pytest.param('eigen', {}, id=""eigen""),; pytest.param('svd', {}, id=""svd""),; pytest.param('power', {'mtol':1e-5}, id=""power""),; pytest.param('power-gmres', {'mtol':1e-1, 'use_precond':1, 'M':'iterative'},; id=""power-gmres""),; pytest.param('power-bicgstab', {'use_precond':1, 'M':'power'},; id=""power-bicgstab""),; pytest.param('iterative-gmres', {}, id=""iterative-gmres""),; pytest.param('iterative-bicgstab', {}, id=""iterative-bicgstab""),; ]); def test_driven_cavity(method, kwargs):; N = 30; Omega = 0.01 * 2 * np.pi; Gamma = 0.05; ; a = qutip.destroy(N); H = Omega * (a.dag() + a); c_ops = [np.sqrt(Gamma) * a]; if 'use_precond' in kwargs:; > kwargs['M'] = qutip.build_preconditioner(H, c_ops, method=kwargs['M']). /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1755:4412,power,power-gmres,4412,https://qutip.org,https://github.com/qutip/qutip/issues/1755,1,['power'],['power-gmres']
Energy Efficiency,"ever, this also implies that `Qobj` should fulfil the numpy ufunc interface; `Qobj` would be a container for data such that operations like `np.sin` is the elementwise sin, or (most notably) `np.multiply` is the *elementwise* multiplication. Our `Qobj` _does not_ fulfil the ufunc interface:; 1. elementwise operations don't make sense on quantum objects, which are arrays only as an implementation detail - the `Qobj` class is meant to represent an abstract linear algebra object, not specifically a matrix.; 2. we don't honour the `shape` guarantees of numpy as we test compatibility based on `dims`, which are not 1D (superoperators) so cannot follow numpy's broadcasting rules; 3. we treat multiplication as matrix multiplication, violating how `np.multiply` should behave. My main concern is point 1: I don't think that `Qobj` provides a similar object to an `ndarray` at all. Right now we _do_ use matrices underneath, but proposed additions to QuTiP such as symbolic `Qobj` and adaptive Hilbert spaces are compatible with the idea of ""abstract linear algebra objects"", but do not necessarily have a backing array. Point 2 is mostly an extension of that: I'm not sure there is a sensible way for numpy's broadcasting rules to be applied to quantum objects as they exist now, even without extensions. ## More control over dispatch: `__array_ufunc__` and `__array_function__`. See [NEP 13](https://numpy.org/neps/nep-0013-ufunc-overrides.html), [NEP 18](https://numpy.org/neps/nep-0018-array-function-protocol.html) and [NEP 35](https://numpy.org/neps/nep-0035-array-creation-dispatch-with-array-function.html). Later versions of numpy allowed greater control over how ufuncs get implemented, which was most recently extended in 1.16 to cover non-ufuncs like `tensordot`. These functions are intended for classes to define how ufuncs operate on their data, but implementors should still follow the `ufunc` spec for broadcasting rules, and a given ufunc should have the same conceptual behaviour (m",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1433#issuecomment-772608902:4838,adapt,adaptive,4838,https://qutip.org,https://github.com/qutip/qutip/issues/1433#issuecomment-772608902,1,['adapt'],['adaptive']
Energy Efficiency,"ex_array_to_rgb` could be useful in other contexts as well. I am not aware of any standard way of doing this, but if you are interested in this kind of mapping you might want to have a look at a similar mapping of complex values to color that we have in the function `matrix_histogram_complex`. In that case we map only the phase to the color, and the magnitude is shown by the bar heights, but if you map the magnitude to the alpha channel or the overall intensity you get something the is similar to what you use. For example, with the code from `matrix_histogram_complex` you get something like. ```; x = np.linspace(-5, 5, 100); X, Y = np.meshgrid(x,x); Z = X + 1j * Y; cdict = {'blue': ((0.00, 0.0, 0.0),; (0.25, 0.0, 0.0),; (0.50, 1.0, 1.0),; (0.75, 1.0, 1.0),; (1.00, 0.0, 0.0)),; 'green': ((0.00, 0.0, 0.0),; (0.25, 1.0, 1.0),; (0.50, 0.0, 0.0),; (0.75, 1.0, 1.0),; (1.00, 0.0, 0.0)),; 'red': ((0.00, 1.0, 1.0),; (0.25, 0.5, 0.5),; (0.50, 0.0, 0.0),; (0.75, 0.0, 0.0),; (1.00, 1.0, 1.0))}. cmap = mpl.colors.LinearSegmentedColormap('phase_colormap', cdict, 256); norm = mpl.colors.Normalize(-pi, pi); colors = cmap(norm(np.angle(Z))); colors[:,:,3] = sqrt(abs(Z)) / sqrt(abs(Z)).max(). plt.imshow(colors, interpolation='none');; ```. which produces the following map of the complex plane:. ![complex-plane-2](https://cloud.githubusercontent.com/assets/1198183/2809239/c3f6c3cc-cd61-11e3-83a1-cc4fff3f303c.png). compared to. ```; plt.imshow(complex_array_to_rgb(Z), interpolation='none');; ```. which produces. ![complex-plane-1](https://cloud.githubusercontent.com/assets/1198183/2809256/29caad3e-cd63-11e3-8e7a-3187afc2744f.png). Either mapping is fine of course, but I think a nice property of the first one is that real numbers and imaginary numbers are mapped to simple colors (real positive->blue, negative->red and imaginary positive green, imaginary negative turquoise), and complex number with both real and imaginary part are mapped to colors that are relatively simple to interpret.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/105#issuecomment-41473950:1865,green,green,1865,https://qutip.org,https://github.com/qutip/qutip/pull/105#issuecomment-41473950,1,['green'],['green']
Energy Efficiency,"f using RCM and not specified by user; if ss_args['use_rcm'] and ('permc_spec' not in kwargs.keys()):; ss_args['permc_spec'] = 'NATURAL'; ; L = _steadystate_setup(A, c_op_list); # Set weight parameter to avg abs val in L if not set explicitly; if 'weight' not in kwargs.keys():; ss_args['weight'] = np.mean(np.abs(L.data.data.max())); ss_args['info']['weight'] = ss_args['weight']; ; n = int(np.sqrt(L.shape[0])); if ss_args['method'] == 'iterative':; ss_list = _steadystate_LU_liouvillian(L, ss_args); L, perm, perm2, rev_perm, ss_args = ss_list; elif ss_args['method'] == 'power':; ss_list = _steadystate_power_liouvillian(L, ss_args); L, perm, perm2, rev_perm, ss_args = ss_list; else:; > raise ValueError(""Invalid preconditioning method.""); E ValueError: Invalid preconditioning method. /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib/python3.9/site-packages/qutip/steadystate.py:1109: ValueError; ________________________________________________________________________________ test_driven_cavity[power-bicgstab] _________________________________________________________________________________. method = 'power-bicgstab', kwargs = {'M': <900x900 _CustomLinearOperator with dtype=complex128>, 'use_precond': 1}. @pytest.mark.parametrize(['method', 'kwargs'], [; pytest.param('direct', {}, id=""direct""),; pytest.param('direct', {'sparse':False}, id=""direct_dense""),; pytest.param('eigen', {}, id=""eigen""),; pytest.param('svd', {}, id=""svd""),; pytest.param('power', {'mtol':1e-5}, id=""power""),; pytest.param('power-gmres', {'mtol':1e-1, 'use_precond':1, 'M':'iterative'},; id=""power-gmres""),; pytest.param('power-bicgstab', {'use_precond':1, 'M':'power'},; id=""power-bicgstab""),; pytest.param('iterative-gmres', {}, id=""iterative-gmres""),; pytest.param('iterative-bicgstab', {}, id=""iterative-bicgstab""),; ]); def test_driven_cavity(method, kwargs):; N = 30; Omega = 0.01 * 2 * np.pi; Gamma = 0.05; ; a = qutip.destroy(N); H = Omega * (a.dag() + a); c_ops = [np.sqrt(Gamma) * a]; if 'use_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1755:10412,power,power-bicgstab,10412,https://qutip.org,https://github.com/qutip/qutip/issues/1755,1,['power'],['power-bicgstab']
Energy Efficiency,"first look it's looking great! I've been working a lot on the stochastic solvers the last few months, but it is still very much under development. The milstein method has been on my todo list for a long time, but I've not gotten around to work on it yet, so your contribution is very timely and most welcome!. I have tried to design the API in the most general way I could think of while still keeping the complexity from growing too much. Defining an SME with its RHS function, D1 and D2 functions has worked for most problems I considered so far, but I'd be happy to discuss further if this could be changed to something more flexible, like a function for calculating rho_{n+1} like you suggest. We hope to have the stochastic solver API ready and mature enough to include in the next qutip release sometime this fall, so it would be good to have these things tested and thoroughly discussed before then. But until the stochastic module is officially in the QuTiP API we still have a lot of freedom to shake things up if necessary. Also, to keep complexity and code duplication down I wanted to follow the pattern. smesolve (choose solver by argument) -> smesolve_generic -> specific method and SDE by rhs, d1, d2 selection. So it would be good if smesolve_mil and smesolve_impl in your code could be combined with smesolve, and if smesolve_implicit and smesolve_milstein could be combined with smesolve_generic, etc. That would reduce a lot of code duplication I think. Of course, if smesolve_generic needs to be changed to accommodate this that would be totally fine with me. It would be great if you could do a pull request of this to the qutip master, then we could discuss details in the PR. You'd need to rebase your branch to the current master tip though, because things already changed a bit since the version you based your additions on. If you have troubles with this or no not know how to do it I could also try to merge your modifications into the qutip master, it's totally up to you.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/35#issuecomment-22011953:1618,reduce,reduce,1618,https://qutip.org,https://github.com/qutip/qutip/issues/35#issuecomment-22011953,1,['reduce'],['reduce']
Energy Efficiency,"g. They can transfer a quantum circuit into the corresponding control sequence and simulate the dynamics with QuTiP solvers. Different noise models can be added to `qutip.qip.noise` to simulate noise in a quantum device. . This module is still young and many features can be improved, including new device models, new noise models and integration with the existing general framework for quantum circuits (`qutip.qip.circuit`). There are also possible applications such as error mitigation techniques [1-3]. The tutorial notebooks can be found at http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM conference may help you get an overview (https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the Github Project page for a collection of related issues and ongoing Pull Requests. ### Expected outcomes; - More devices defined in the `qutip.qip.device` module. At the moment, we have two models: spin chain and cavity QED. We would like to include some other commonly used planform such as Superconducting system, Ion trap system or silicon system. Each model will need a new set of control hamiltonian and a compiler that find the control pulse of a quantum gate. This part is gonna involve some physics and study of commonly used hardware platforms. The related code can be found in `qutip.qip.device` and `qutip.qip.compiler`; - Refactoring the circuit compiler to allow simple pulse scheduling, e.g. Restriction one pulses that can be turned on at the same time.; - Features to perform error mitigation techniques in QuTiP, such as zero-error extrapolation.; - APIs to allow import quantum circuits from other software packages or commonly used language e.g. through quantum assembly language (qasm); ----------------------------------------------------------------. Also, the last outcomes have some overlap with the last project. Although I also find this circuit importation very important, I guess two projects should not have overlap if they are both selected.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1184:2110,schedul,scheduling,2110,https://qutip.org,https://github.com/qutip/qutip/issues/1184,1,['schedul'],['scheduling']
Energy Efficiency,"ge of T and W in the code and the notebook to denote number of time bins and waveguides. > Moving `__all__` to after import statements. I declared `__all__` in its current location because almost universally, all (heh) top-level qutip modules declare it before imports. (I actually checked about a dozen of these and can't find any instance of it being after imports.) I think this might be worth changing to comply with PEP8, but I think it should be done after the module is added in a separate commit where all occurrences of this are changed across QuTiP. > Shortening argument / function names. I'll respond to each proposed change individually, but in general I disagree with most of these proposed changes since I think they reduce conceptual clarity. (For example, `temporal_basis_vector` returns a specific vector in the temporal basis; I would expect a function named `temporal_basis` to return an enumeration of all basis vectors.) However, I will try to think of shorter names which don't reduce clarity and will make changes if I come up with any. > Moving temporal_scattered_state, scattering_probability, and temporal_basis_vector into a new class. I think this is the only proposed change worth significant amounts of discussion, and it's actually something I had considered before. I'm conflicted about whether this change would be good or not, and I would value input from everyone involved in this review process (@sahmed95 , @kafischer, @nonhermitian, @ajgpitch). I've outlined my thoughts on the pros and cons of this change below. **Pros:**; - Consolidating these functions to class methods would be convenient in terms of reducing verbosity, since you would have to specify fewer arguments when calling these functions; - This would allow for a small performance increase, since maintaining a class-wide Evolver would mean that propagators would be precomputed for later simulations. However, this performance increase would be small and would be nearly un-noticeable for simula",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/848#issuecomment-384821368:2025,reduce,reduce,2025,https://qutip.org,https://github.com/qutip/qutip/pull/848#issuecomment-384821368,1,['reduce'],['reduce']
Energy Efficiency,"ges/qutip/tests/test_countstat.py:58: AssertionError; _________________________________________________________________________ test_scheduling_gates3[circuit2 ALAP no shuffle] __________________________________________________________________________. circuit = <qutip.qip.circuit.QubitCircuit object at 0x12c081640>, method = 'ALAP', expected_length = 5, random_shuffle = False, gates_schedule = False. @pytest.mark.parametrize(; ""circuit, method, expected_length, random_shuffle, gates_schedule"",; [; pytest.param(deepcopy(_circuit2()), ""ALAP"", 5, False, False, id=""circuit2 ALAP no shuffle""); ]); def test_scheduling_gates3(; circuit, method, expected_length, random_shuffle, gates_schedule):; if random_shuffle:; repeat_num = 5; else:; repeat_num = 0; result0 = gate_sequence_product(circuit.propagators()); ; # run the scheduler; scheduler = Scheduler(method); gate_cycle_indices = scheduler.schedule(; circuit, gates_schedule=gates_schedule, repeat_num=repeat_num); ; # check if the scheduled length is expected; > assert(max(gate_cycle_indices) == expected_length); E assert 4 == 5; E +4; E -5. /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib/python3.9/site-packages/qutip/tests/test_scheduler.py:143: AssertionError; __________________________________________________________________________________ test_driven_cavity[power-gmres] __________________________________________________________________________________. method = 'power-gmres', kwargs = {'M': <900x900 _CustomLinearOperator with dtype=complex128>, 'mtol': 0.1, 'use_precond': 1}. @pytest.mark.parametrize(['method', 'kwargs'], [; pytest.param('direct', {}, id=""direct""),; pytest.param('direct', {'sparse':False}, id=""direct_dense""),; pytest.param('eigen', {}, id=""eigen""),; pytest.param('svd', {}, id=""svd""),; pytest.param('power', {'mtol':1e-5}, id=""power""),; pytest.param('power-gmres', {'mtol':1e-1, 'use_precond':1, 'M':'iterative'},; id=""power-gmres""),; pytest.param('power-bicgstab', {'use_precond':1, 'M':'power'",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1755:3865,schedul,schedule,3865,https://qutip.org,https://github.com/qutip/qutip/issues/1755,2,['schedul'],"['schedule', 'scheduled']"
Energy Efficiency,"ght) + b \left( \hat{y} - \pi \frac{\phi_\mathrm{b}}{\phi_0}\right)^2\right)$$. With:; * $E_\mathrm{c} = \left(2 e \right)^2/\left(2 C\right)/2$ the charging energy; * $E_\mathrm{J} = \left( \phi_0 I_\mathrm{c} \right)/\left(2 \pi \right)/2$ the Josephson energy; * $\hat{x} = \left( \hat{\varphi}_1 +\hat{\varphi}_2 \right)/2$ and $\hat{y} = \left( \hat{\varphi}_1 -\hat{\varphi}_2 \right)/2$; * $\hat{n_x} = \left( \hat{n}_1 +\hat{n}_2 \right)/2$ and $\hat{n_y} = \left( \hat{n}_1 -\hat{n}_2 \right)/2$; * $b = \phi_0/\left(2 \pi I_\mathrm{c} L\right)$ the inductance ratio. From that I wrote the following function:; ```python; def spectrumInductive(fluxes: np.ndarray,; dim: int=11,; c: float=10e-13,; ic: float=10e-9,; l: float=1000e-12,; ng: float=0):. n1 = qtp.tensor(qtp.charge(int(dim/2))+ng, qtp.qeye(dim)); n2 = qtp.tensor(qtp.qeye(dim), qtp.charge(int(dim/2))+ng). phi1 = qtp.tensor(qtp.phase(dim), qtp.qeye(dim)); phi2 = qtp.tensor(qtp.qeye(dim), qtp.phase(dim)). nx = (n1+n2)/2; ny = (n1-n2)/2. phix = (phi1+phi2)/2; phiy = (phi1-phi2)/2. # Charging energy in GHz; ec = (2*cst.e)**2/2/c/cst.h/1e9/2. # Josephson energy in GHz; ej = cst.phi_0/2/np.pi*ic/2/cst.h/1e9/2. # The inductance ratio; b = cst.phi_0/2/np.pi/ic/l. h1 = ec*(nx**2 + ny**2); h2 = ej*(-phix.cosm()*phiy.cosm()). es = np.zeros((len(fluxes), dim*dim-1)); for i, flux in enumerate(fluxes):. h = h1 + h2 + ej*b*(phiy - np.pi*flux)**2. e = h.eigenenergies(); e = (e - e[0]); es[i] = np.abs(e[1:]). return es; ```. And got the incorrect ""inductively coupled Transmon"" transition frequency:; ```python; fluxes = np.linspace(-0.5, 0.5, 20). fig, ax = plt.subplots(1, 1); ys1 = spectrumInductive(fluxes, c=40e-15, ic=8e-9, l=7.5e-9, dim=21, ng=0.5); ax.plot(fluxes, ys1[:,0]); ax.set_xlabel('fluxes'); ax.set_ylabel('transitions (GHz)'); ```; ![image](https://github.com/qutip/qutip/assets/13218882/6440b2f2-9e3b-43d9-809f-68f875c8cb7d). We do not have the expected `cos` shape. If anyone as any tips I would be very grateful!",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2447:2887,energy,energy,2887,https://qutip.org,https://github.com/qutip/qutip/issues/2447,2,['energy'],['energy']
Energy Efficiency,"h was a GSoC project) providing enhanced; > > features for a pulse-level description of quantum circuits and noise; > > models. A new class Processor and several subclasses are added to; > > represent different platforms for quantum computing. They can transfer a; > > quantum circuit into the corresponding control sequence and simulate the; > > dynamics with QuTiP solvers. Different noise models can be added to; > > qutip.qip.noise to simulate noise in a quantum device.; > >; > > This module is still young and many features can be improved, including; > > new device models, new noise models and integration with the existing; > > general framework for quantum circuits (qutip.qip.circuit). There are; > > also possible applications such as error mitigation techniques [1-3].; > >; > > The tutorial notebooks can be found at; > > http://qutip.org/tutorials.html#nisq. A recent presentation on the; > FOSDEM; > > conference may help you get an overview (; > > https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the; > > Github Project page for a collection of related issues and ongoing Pull; > > Requests.; > > Expected outcomes; > >; > > - More devices defined in the qutip.qip.device module. At the moment,; > > we have two models: spin chain and cavity QED. We would like to include; > > some other commonly used planform such as Superconducting system, Ion; > trap; > > system or silicon system. Each model will need a new set of control; > > hamiltonian and a compiler that find the control pulse of a quantum gate.; > > This part is gonna involve some physics and study of commonly used; > hardware; > > platforms. The related code can be found in qutip.qip.device and; > > qutip.qip.compiler; > > - Refactoring the circuit compiler to allow simple pulse scheduling,; > > e.g. Restriction one pulses that can be turned on at the same time.; > > - Features to perform error mitigation techniques in QuTiP, such as; > > zero-error extrapolation.; > > - APIs to allow import qu",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553:5529,schedul,schedule,5529,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553,1,['schedul'],['schedule']
Energy Efficiency,"haragpur Winter of Code ([KWoC](https://kwoc.kossiitkgp.org/)) where mainly BSc and also MSc / PhDs can participate over the winter to a project on QuTiP. QuTiP just got selected and there is the opportunity for students projects over the winter. I will begin with proposing mine, but this is an opportunity also for mentors to propose their projects, beginning in priority from the lead developers. . ## Other Funding Schemes; Similarly, I have been writing NumFOCUS [small development grants](https://numfocus.org/blog/fall-2018-open-source-development-grants), which have a different goal but can be set up similarly. Also, in the future we may apply again to [Google Season of Docs](https://developers.google.com/season-of-docs). . ## Future Opportunities; Several senior researchers and team leaders have aired the desire to contribute to the project more actively. Setting up a space where they can propose projects, even on their own funding resources (most probably together with the development of research projects), in coordination with the lead development team, could help foster development in a more sustainable way. . ## Proposal; I propose to help sustain available projects in a more structural way than what is done now. This is an example of a what we could call a **QEP, or ""QuTiP Enhancement Proposal"".**. - One thing that could be done is to simply expand the existing Wiki. The downside of taking only this action is that only organization members can modify the wiki. So this could work, but mainly as a more static and cleaner staple. . - I propose to integrate the Wiki with Issues that contain the projects, adding a `projects` (or similar) label. This is in the spirit also of other large quantum open source projects such as Qiskit, which has even an ad-hoc `qiskit-community` repository, https://github.com/qiskit-community/. In QuTiP case, we could create a new repository similar to the notebooks one, e.g., https://github.com/qutip/qutip-community/. The downside is t",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1132:2197,sustainab,sustainable,2197,https://qutip.org,https://github.com/qutip/qutip/issues/1132,1,['sustainab'],['sustainable']
Energy Efficiency,"hat{H} = E_\mathrm{c} \left( \hat{n_x}^2 - \hat{n_y}^2 \right) + E_\mathrm{J}\left( -\cos \left( \hat{x} \right) \cos \left( \hat{y} \right) + b \left( \hat{y} - \pi \frac{\phi_\mathrm{b}}{\phi_0}\right)^2\right)$$. With:; * $E_\mathrm{c} = \left(2 e \right)^2/\left(2 C\right)/2$ the charging energy; * $E_\mathrm{J} = \left( \phi_0 I_\mathrm{c} \right)/\left(2 \pi \right)/2$ the Josephson energy; * $\hat{x} = \left( \hat{\varphi}_1 +\hat{\varphi}_2 \right)/2$ and $\hat{y} = \left( \hat{\varphi}_1 -\hat{\varphi}_2 \right)/2$; * $\hat{n_x} = \left( \hat{n}_1 +\hat{n}_2 \right)/2$ and $\hat{n_y} = \left( \hat{n}_1 -\hat{n}_2 \right)/2$; * $b = \phi_0/\left(2 \pi I_\mathrm{c} L\right)$ the inductance ratio. From that I wrote the following function:; ```python; def spectrumInductive(fluxes: np.ndarray,; dim: int=11,; c: float=10e-13,; ic: float=10e-9,; l: float=1000e-12,; ng: float=0):. n1 = qtp.tensor(qtp.charge(int(dim/2))+ng, qtp.qeye(dim)); n2 = qtp.tensor(qtp.qeye(dim), qtp.charge(int(dim/2))+ng). phi1 = qtp.tensor(qtp.phase(dim), qtp.qeye(dim)); phi2 = qtp.tensor(qtp.qeye(dim), qtp.phase(dim)). nx = (n1+n2)/2; ny = (n1-n2)/2. phix = (phi1+phi2)/2; phiy = (phi1-phi2)/2. # Charging energy in GHz; ec = (2*cst.e)**2/2/c/cst.h/1e9/2. # Josephson energy in GHz; ej = cst.phi_0/2/np.pi*ic/2/cst.h/1e9/2. # The inductance ratio; b = cst.phi_0/2/np.pi/ic/l. h1 = ec*(nx**2 + ny**2); h2 = ej*(-phix.cosm()*phiy.cosm()). es = np.zeros((len(fluxes), dim*dim-1)); for i, flux in enumerate(fluxes):. h = h1 + h2 + ej*b*(phiy - np.pi*flux)**2. e = h.eigenenergies(); e = (e - e[0]); es[i] = np.abs(e[1:]). return es; ```. And got the incorrect ""inductively coupled Transmon"" transition frequency:; ```python; fluxes = np.linspace(-0.5, 0.5, 20). fig, ax = plt.subplots(1, 1); ys1 = spectrumInductive(fluxes, c=40e-15, ic=8e-9, l=7.5e-9, dim=21, ng=0.5); ax.plot(fluxes, ys1[:,0]); ax.set_xlabel('fluxes'); ax.set_ylabel('transitions (GHz)'); ```; ![image](https://github.com/qutip/qutip/assets/1",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2447:2676,charge,charge,2676,https://qutip.org,https://github.com/qutip/qutip/issues/2447,1,['charge'],['charge']
Energy Efficiency,"he initial floquet modes, computing the propagator over one period, then using these to compute at other time, recomputing the propagator up to that time. When the modes at multiple times were needed, we could compute a list of them over one period using `floquet_modes_table`, but at least 2 computations over a period were needed. With the and the `Propagator` memoize capacities added in v5, only one computation of the propagator is required. Also with the table computation of v4, if a mode was not included in the table, the closest one was used. `fmesolve ` and `fsesolve` computed 100 slices over the period. It did not used the values in `tlist` and caused artifacts in the result. With `FloquetBasis`, the mode are always computed at the exact time. . I left the v4's functions with warnings. The construction of the floquet tensor was done using 2 functions: `floquet_master_equation_rates` which returned 4 tensors and `floquet_master_equation_tensor`. I added `floquet_tensor` which computed the tensor in one call and split `floquet_master_equation_rates` in 4 functions, one for each of the outputs. Floquet, like `brmesolve`, need a function for the noise power spectrum. Unlike `brmesolve`, string are not supported, only functions. We should have them match, but supporting string is quite heavy since coefficient are not a great fit. `fsesolve` have been rewritten without the class interface. As an integrator, the floquet method has no advantage since the propagator much be computed using another method. `fmesolve` work similarly to other solver. The `e_ops` are always in the laboratory basis. The result states are also in the laboratory basis. The option `""store_floquet_states""` is used to store the states in the floquet basis in `result.floquet_states`. In v4, there it an option for the environment temperature, but no tests for it. I kept the feature, but it's still untested.; Also all tests for `fmesolve` are either for constant systems or without collapse operator.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2034:1487,power,power,1487,https://qutip.org,https://github.com/qutip/qutip/pull/2034,1,['power'],['power']
Energy Efficiency,hello world!. a new but no more efficient spectrum calculation,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/32:32,efficient,efficient,32,https://qutip.org,https://github.com/qutip/qutip/pull/32,1,['efficient'],['efficient']
Energy Efficiency,"in place of operators for which to calculate the expectation values. So to work with callback function, we need to manage the storage by ourselves, for example by defining a global list, as it is done in [this example](https://nbviewer.jupyter.org/github/jrjohansson/qutip-lectures/blob/master/Lecture-8-Adiabatic-quantum-computing.ipynb#Evolve-the-system-in-time). **Describe the solution you'd like**. Currently when we pass a list of operators such as. ```python; e_ops = [sigmax(), sigmay(), sigmaz()]; result = mesolve(H, rho0, e_ops=e_ops); ```. We will be able to access expectation value of `sigmax()` in `result.expect[0]`, of `sigmay()` in `result.expect[1]` and of course `sigmaz()` in `result.expect[2]`. Why not capture the custom measurement in similar way?. ```; def customMeasurement(tau, psi):; exp_x = expect(sigmax(), psi); exp_y = expect(sigmaz(), psi); exp_z = expect(sigmay(), psi); energy = expect(H, psi); fidelity = np.abs(psi_ref.overlap(psi))**2.; return [exp_x, exp_y, exp_z, energy, fidelity]; ```. Now it is possible to still get expectation values as before, but in addition we can take more custom measurements (in this example energy and fidelity of state) and access them in exactly the same way for the convenience. The only thing user needs to keep track of is order of operators returned from the callback function. So now it is as before but in addition `result.expect[3]` contains energy and `result.expect[4]` contains fidelity and no custom managed global external lists required as it was in the [example](https://nbviewer.jupyter.org/github/jrjohansson/qutip-lectures/blob/master/Lecture-8-Adiabatic-quantum-computing.ipynb#Evolve-the-system-in-time). **Describe alternatives you've considered**. Alternatively we could establish that custom measurement callback function must return only single value and user would be able to pass mixed list of operators and functions in the `e_ops`. **Additional context**. Correct me if I'm wrong, based on the docs and",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1238:1781,energy,energy,1781,https://qutip.org,https://github.com/qutip/qutip/issues/1238,1,['energy'],['energy']
Energy Efficiency,"ing it. Essentially `pytest` goes through a few stages when you run `pytest` on the command line: discovery, generation, running, reporting, and it has lots of hook functions we can define to modify the state inbetween and during each of them. Default discovery is as you say: files in alphabetic order (I _think_ it's strictly shell globbing order, but generally that's alphabetical), then the contents of each file in order defined by the shared fixtures used. We tend not to need large amounts of state to be held in fixtures, so our files largely just run top-to-bottom. We can add in some logic into the collection-time hooks to re-order the tests. There's a `pytest` plugin called [`pytest-ordering`](https://github.com/ftobia/pytest-ordering), but it looks like it's not really actively maintained any more and the logic is pretty straightforwards, so perhaps not a terrible idea just to do it ourselves. Maybe I'm not javascript enough to enjoy a good micro-dependency?. It would also be quite nice if we could define the whole logical structure of the `qutip` package, to help keep everything in order as the package grows larger. By that I generally just mean the internal structure, though cutting down the amount of global names exported could also be done in a sort of organisation like this: we could get a little more aggressive at not exporting things like `enr_*` or `three_level_*` to the global namespace, but instead put them in submodules. While I think this isn't what you were asking, it's also quite easy to just run specific parts of the testing suite if you're doing it from the command line. You can do `pytest file.py` to run only those in a specific file, or `pytest -m ""mark logic""` (e.g. `pytest -m ""not slow""`) to hit specifically marked tests. Perhaps most powerfully, and one I use a lot when writing these, you can do `pytest -k ""substring logic""` to run every test (potentially in the specified file(s)) that contains the elements specified in `""substring logic""`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1181#issuecomment-601793386:3042,power,powerfully,3042,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-601793386,1,['power'],['powerfully']
Energy Efficiency,"ion to decide which has been specified by the user, as the sig is clearly distinguishable by the number of args. So effectively we can ignore the `rhs_with_state` option, but I think we should give a deprecation warning that the `f(t, state, args)` signature will be removed in the next version. So, I think this means we can keep the new method of passing the state in the args dict. I would suggest we make it a bit more simple though. I notice that the processing of the option is a bit involved. So I suggest that any element of the `args` dict where the key is of the form `name:special_value_kind` be considered some kind of special value. If `special_value_kind` is not recognised then it should throw a `ValueError`. For now we will have the `special_value_kind` of:; - `state`: Qobj of the state at time `t`, with the correct dimensions; - `state_vec`: ndarray of state as a vector; - `expect`: I can't remember exactly what you did here. The `state_vec` will clearly be much more efficient, as this is what the ODE solver maintains. However, for completeness I think we should have the `state` option. The initial value, as in `args = {'psi:state':psi0}`, seems fairly arbitrary, as I guess we can just just set the t=0 value anyway. I think you also implemented `expect` as a special_value_kind. I guess maybe the value of the element is the e_op, or maybe you use the `e_ops` param?. So, when there are special_value_kind args given, these are replaced with an arg `{name:value}` with the `value` being the value of the special_value_kind at time t. We should use internal flags (attribs) to control the special_value_kind processing, This will be more efficient than checking the args dict at every time step for special_value_kind keys, e.g.; - `_state_vec_key`: default `None`, or string key to the arg element. So, unless I have missed something regarding the importance of `**args`, then I think this plan covers what we need and makes everything a bit simpler, which is always good.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1136#issuecomment-562523162:2542,efficient,efficient,2542,https://qutip.org,https://github.com/qutip/qutip/issues/1136#issuecomment-562523162,1,['efficient'],['efficient']
Energy Efficiency,"ip.tests.test_dimensions.test_dims_idxs_to_tensor_idxs ... ok; qutip.tests.test_dimensions.test_dims_to_tensor_shape ... ok; qutip.tests.test_dimensions.test_type_from_dims ... ok; qutip.tests.test_dimensions.test_collapse ... ok; Diagonalization of random two-level system ... ok; Diagonalization of composite systems ... ok; Excitation-number-restricted state-space: full state space ... ok; Excitation-number-restricted state space: single excitations ... ok; Excitation-number-restricted state space: two excitations ... ok; Excitation-number-restricted state space: fock states ... ok; Excitation-number-restricted state space: identity operator ... ok; Excitation-number-restricted state space: thermal density operator (I) ... ok; Excitation-number-restricted state space: thermal density operator (II) ... ok; Entropy: von-Neumann entropy ... ok; Entropy: Linear entropy ... ok; Entropy: Concurrence ... ok; Entropy: Mutual information ... ok; Entropy: Conditional entropy ... ok; Entropy: Entangling power ... ok; expect: operator list and state list ... ok; expect: operator and density matrix ... ok; expect: operator and ket ... ok; expect: operator list and state ... ok; expect: operator list and state list ... ok; expect: operator and state list ... ok; fastsparse: fast_csr_matrix operations ... ok; fastsparse: transpose operations ... ok; fastsparse: adjoint operations ... ok; Read and write complex valued decimal formatted data ... ok; Read and write complex valued default formatted data ... ok; Read and write complex valued exp formatted data ... ok; Read and write real valued decimal formatted data ... ok; Read and write real valued default formatted data ... ok; Read and write real valued exp formatted data ... ok; Read and write with automatic separator detection ... ok; qsave/qload ... ok; Floquet: test unitary evolution of time-dependent two-level system ... ok; gates: expand 1 to N ... ok; gates: expand 2 to N (using cnot, iswap, sqrtswap) ... ok; gates: expand",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-387626958:7677,power,power,7677,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-387626958,1,['power'],['power']
Energy Efficiency,ist ... ok; > > > mesolve: simple constant decay ... ok; > > > mesolve: simple constant decay ... ok; > > > Metrics: Checks that average gate fidelities are sensible for random ... ok; > > > odechecks: monte-carlo ... ok; > > > Spin 1/2 operators ... ok; > > > Spin 3/2 operators ... ok; > > > Spin 2 operators ... ok; > > > Spin 5/2 operators ... ok; > > > Destruction operator ... ok; > > > Creation operator ... ok; > > > Identity operator ... ok; > > > Number operator ... ok; > > > Squeezing operator ... ok; > > > Displacement operator ... ok; > > > parfor ... ok; > > > partial transpose of bipartite systems ... ok; > > > partial transpose: comparing sparse and dense implementations ... ok; > > > partial transpose: randomized tests on tripartite system ... ok; > > > Qobj data ... ok; > > > Qobj type ... ok; > > > Qobj Hermicity ... ok; > > > Qobj shape ... ok; > > > Qobj addition ... ok; > > > Qobj subtraction ... ok; > > > Qobj multiplication ... ok; > > > Qobj division ... ok; > > > Qobj power ... ok; > > > Qobj negation ... ok; > > > Qobj equals ... ok; > > > Qobj getitem ... ok; > > > Qobj multiplication type ... ok; > > > Qobj conjugate ... ok; > > > Qobj adjoint (dagger) ... ok; > > > Qobj diagonals ... ok; > > > Qobj eigenenergies ... ok; > > > Qobj eigenstates ... ok; > > > Qobj expm ... ok; > > > Qobj full ... ok; > > > Qobj norm ... ok; > > > Qobj permute ... ok; > > > Qobj ket type ... ok; > > > Qobj bra type ... ok; > > > Qobj operator type ... ok; > > > Qobj superoperator type ... ok; > > > Superoperator arithmetic: Checks that binary ops preserve 'superrep'. ... ok; > > > Superoperator arithmetic: Checks that binary ops preserve 'superrep'. ... ok; > > > Superoperator arithmetic: Checks that binary ops preserve 'superrep'. ... ok; > > > Superoperator arithmetic: Checks that binary ops preserve 'superrep'. ... ok; > > > Superoperator arithmetic: Checks that binary ops preserve 'superrep'. ... ok; > > > Superoperator arithmetic: Checks that binary ops pre,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/126#issuecomment-42855884:6697,power,power,6697,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884,1,['power'],['power']
Energy Efficiency,"j. def driver(self):; '''; creates drive Hamiltonian, which is the sum of -sigmax_i operators ; ; '''; k = self._n; Hd = np.zeros((2**k, 2**k)); Hd = qt.Qobj(Hd, dims=[[2 for i in range(k)],[2 for i in range(k)]]); for i in range(self._n):; sigmax_i = self.__create_sigma_i(i); Hd -= sigmax_i; return Hd. def problem(self):; '''; creates problem Hamiltonian. '''; # initialise Hp array; p = self._n # to save on writing; Hp = np.zeros((2**p, 2**p)); Hp = qt.Qobj(Hp, dims=[[2 for i in range(p)],[2 for i in range(p)]]). #vertex coefficients; if self._spin_coeff is None:; pass; else:; for i in range(self._n):; sigmaz_i = self.__create_sigma_i(i, sigma = qt.sigmaz()); Hp += self._spin_coeff[i] * sigmaz_i; #coupling coefficients; if self._coupling_coeff is None:; pass; else:; k = -1; for i in range(p):; for j in range(i+1,p):; k += 1; print(str(i), str(j)); sigma_ij = self.__create_sigmaz_ij(i,j); Hp += self._coupling_coeff[k] * sigma_ij; return Hp; ```. The code returns the error `incompatible Liouvillian and state dimensions: [[[2, 2, 2], [2, 2, 2]], [[2, 2, 2], [2, 2, 2]]] and [[8], [8]]`. Adding the commented line `#initial_state = qt.Qobj(initial_state, dims = [[[2, 2, 2], [2, 2, 2]], [[2, 2, 2], [2, 2, 2]]])` returns the error `Shapes don't match: (64, 64) @ (64, 1)`. I am confused as to why there is a 64x64 matrix, even though my inputs were 8x8 matrices for `Hd` and `Hp` and the input density matrix is also 8x8. I am inputting an initial spin state $\ket{\psi} = \dfrac{1}{8} (1,1,1,1,1,1,1,1)$, which is the lowest energy eigenstate in the basis of $H_d$. I believe `mesolve` is combining `Hd` and `Hp` into a 64x64 matrix, perhaps computing their tensor product. Why would this be the case? If not, how can I solve my problem using a density matrix as an input, such that the output states at each time step is an 8x8 density matrix? Essentially, I am looking for the correct initial state input. Please let me know if anything needs to be clarified and thank you in advance.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1989:5005,energy,energy,5005,https://qutip.org,https://github.com/qutip/qutip/issues/1989,1,['energy'],['energy']
Energy Efficiency,"looks green!. **Edit**: wait, adding that comment is making it restart the testing... Here's the one that passed https://travis-ci.org/qutip/qutip/builds/19623192",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/76#issuecomment-36083074:6,green,green,6,https://qutip.org,https://github.com/qutip/qutip/pull/76#issuecomment-36083074,1,['green'],['green']
Energy Efficiency,"m [this page](https://wiki.freepascal.org/Accessing_macOS_System_Information) it seems that it is mostly used for timing services, so perhaps it is not so relevant here:. ```; hw.tbfrequency - This gives the time base frequency used by the OS and is the basis of all timing services.; In general is is better to use mach's or higher level timing services, but this value; is needed to convert the PPC Time Base registers to real time.; ```. @hodgestar can I ask what the `cpu_freq` is used for in qutip? If it is just for reporting purposes, wouldn't it make sense to put a None or ""N/A""? . A command that somehow gives info on cpu frequencies is `sudo /usr/bin/powermetrics -s cpu_power -n 1`, which gives something like this:. ```; Machine model: MacBookPro18,3; OS version: 21C52; Boot arguments: ; Boot time: Sun Jan 9 11:12:24 2022. *** Sampled system activity (Mon Jan 10 16:05:18 2022 +0200) (5003.97ms elapsed) ***. **** Processor usage ****. E-Cluster Power: 39 mW; E-Cluster HW active frequency: 1027 MHz; E-Cluster HW active residency: 20.50% (600 MHz: 0% 972 MHz: 92% 1332 MHz: 3.1% 1704 MHz: 1.5% 2064 MHz: 3.1%); E-Cluster idle residency: 79.50%; E-Cluster instructions retired: 1.39695e+09; E-Cluster instructions per clock: 0.908186; CPU 0 frequency: 1115 MHz; CPU 0 idle residency: 86.38%; CPU 0 active residency: 13.62% (600 MHz: 0% 972 MHz: 11% 1332 MHz: .78% 1704 MHz: .59% 2064 MHz: 1.1%); CPU 1 frequency: 1103 MHz; CPU 1 idle residency: 86.02%; CPU 1 active residency: 13.98% (600 MHz: 0% 972 MHz: 12% 1332 MHz: .81% 1704 MHz: .77% 2064 MHz: .89%). P0-Cluster Power: 68 mW; P0-Cluster HW active frequency: 680 MHz; P0-Cluster HW active residency: 2.92% (600 MHz: 94% 828 MHz: .04% 1056 MHz: 1.7% 1296 MHz: .24% 1524 MHz: 1.0% 1752 MHz: .32% 1980 MHz: .24% 2208 MHz: .47% 2448 MHz: .35% 2676 MHz: .35% 2904 MHz: .24% 3036 MHz: .11% 3132 MHz: .07% 3168 MHz: .07% 3228 MHz: .81%); P0-Cluster idle residency: 97.08%; P0-Cluster instructions retired: 1.06724e+09; P0-Cluster instruc",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1754#issuecomment-1008912273:964,Power,Power,964,https://qutip.org,https://github.com/qutip/qutip/pull/1754#issuecomment-1008912273,1,['Power'],['Power']
Energy Efficiency,"m any other complex value.). On 26 Apr 2014, at 18:55, Robert Johansson notifications@github.com wrote:. > OK, I see. complex_array_to_rgb could be useful in other contexts as well. I am not aware of any standard way of doing this, but if you are interested in this kind of mapping you might want to have a look at a similar mapping of complex values to color that we have in the function matrix_histogram_complex. In that case we map only the phase to the color, and the magnitude is shown by the bar heights, but if you map the magnitude to the alpha channel or the overall intensity you get something the is similar to what you use. For example, with the code from matrix_histogram_complex you get something like; > ; > x = np.linspace(-5, 5, 100); > X, Y = np.meshgrid(x,x); > Z = X + 1j \* Y; > cdict = {'blue': ((0.00, 0.0, 0.0),; > (0.25, 0.0, 0.0),; > (0.50, 1.0, 1.0),; > (0.75, 1.0, 1.0),; > (1.00, 0.0, 0.0)),; > 'green': ((0.00, 0.0, 0.0),; > (0.25, 1.0, 1.0),; > (0.50, 0.0, 0.0),; > (0.75, 1.0, 1.0),; > (1.00, 0.0, 0.0)),; > 'red': ((0.00, 1.0, 1.0),; > (0.25, 0.5, 0.5),; > (0.50, 0.0, 0.0),; > (0.75, 0.0, 0.0),; > (1.00, 1.0, 1.0))}; > ; > cmap = mpl.colors.LinearSegmentedColormap('phase_colormap', cdict, 256); > norm = mpl.colors.Normalize(-pi, pi); > colors = cmap(norm(np.angle(Z))); > colors[:,:,3] = sqrt(abs(Z)) / sqrt(abs(Z)).max(); > ; > plt.imshow(colors, interpolation='none');; > which produces the following map of the complex plane:; > ; > compared to; > ; > plt.imshow(complex_array_to_rgb(Z), interpolation='none');; > which produces; > ; > Either mapping is fine of course, but I think a nice property of the first one is that real numbers and imaginary numbers are mapped to simple colors (real positive->blue, negative->red and imaginary positive green, imaginary negative turquoise), and complex number with both real and imaginary part are mapped to colors that are relatively simple to interpret.; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/105#issuecomment-41480460:2270,green,green,2270,https://qutip.org,https://github.com/qutip/qutip/pull/105#issuecomment-41480460,1,['green'],['green']
Energy Efficiency,"m/qutip/qutip.github.io) as well as the other packages that are now being spin out in the QuTiP Github organization to avoid feature creeps. Not to mention all the help provided in Qutip's google group, a forum for bugs, physics questions and research ideas. Over the years, the QuTiP project has enabled a large ecosystem of supported libraries, such as `Krotov` (cc @goerz and others), `pyEPR` (cc @zlatko-minev), `scqubits` (cc @jkochNU), and many others. . With this governance model, we'd like to keep doing what we're doing, with the support, since 2018, of @NumFOCUS, which supports scientific open source projects, and, from now on, the additional support of @unitaryfund, a non-profit that supports open-source projects in quantum technologies. . Below we reproduce a governance document that we will add to a new repository at [github.com/qutip/governance](https://github.com/qutip/governance). We are looking forward to help the growth of the user community, engage it with code contributions and bug reports, and make this awesome scientific open-source project even more sustainable. We will update all related information at [github.com/qutip/governance](https://github.com/qutip/governance), on QuTiP website's news section (http://qutip.org/news.html) and on the QuTiP google group (https://groups.google.com/forum/#!forum/qutip). . Below it is reported how we got there and the text we're adding to the governance. Before making any more official announcements, we thought it nice to ping the community watching this repository. . **Timeline regarding governance talks**:; * April 2018: QuTiP Joins NumFOCUS as an Affiliated Project (and since then participates in Google Summer of Code).; * September 2018: a slide presentation is shared among lead developers with ideas on QuTiP development and governance. ([Link](https://docs.google.com/presentation/d/1lBfS7v4WxduvWy-rf1Vd-hSEeNOK4at91ALuaH58AnQ/edit?usp=sharing)); * February 2019: The first QuTiP developers workshop is held i",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1373:1900,sustainab,sustainable,1900,https://qutip.org,https://github.com/qutip/qutip/issues/1373,1,['sustainab'],['sustainable']
Energy Efficiency,"method` options, as it is in other solver.; - The method that was referring the homodyne or heterodyne detection is now the `heterodyne` keyword. ie before `method=""heterodyne""` now `heterodyne=True`.; - The default integration method is now `rouchon`, instead of `taylor1.5`. ie the method coming from a physic paper and not a mathematics textbook. . - The stochastic integration methods have been spitted in smaller chunk instead of the huge classes in _stochastic.pyx. I kept most methods, only skipping the taylor order 2.0 method. The python interface is kept very similar to the `Integrator` as `SIntegrator`, the main difference being that `set_state` and `get_state` use an extra random number generator with the time and state. The integration methods are usually 5%~10% slower than they where for medium size problems (shape ~100). Most method are computed the same way as before, but the rouchon method no longer use super operator, but keep the density matrix as a matrix and not an oper-ket. - The derivative computation for used by the integration method has also been split into multiple functions and made only available for `smesolve`. For there methods to be valid, the each diffusion contribution must commute. For `smesolve`, this means that each `sc_ops` must commute, as documented. For `ssesolve`, each `sc_ops` must not only commute, but also commute with other `sc_ops`'s adjoint, this last part being missing from v4's documentation. It also meant that the sc_ops needed to commute with it's own adjoint when using heterodyne detection... - `ssepdpsolve`, `smepdpsolve`, `photocurrent_mesolve`, `photocurrent_sesolve` removed. They are all less efficient variants of `mcsolve`. `mcsolve` already include the photocurrent in the output. - `general_stochastic`, removed. It is a mostly generic stochastic equation solver. The user to define their equations to integrate, but the results are forced into `Results` with expectation values and dims checks, making it hard to use.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2131:2213,efficient,efficient,2213,https://qutip.org,https://github.com/qutip/qutip/pull/2131,1,['efficient'],['efficient']
Energy Efficiency,"ocesses to avoid overwhelming the host system. This approach helps in balancing load and performance. 2. **Error Handling and Robustness**:; - Enhanced the resilience of the parallel computation by encapsulating the worker function’s body in a try-except block, ensuring that failures in one computation do not impact the overall execution.; - Ensured the stability of the test environment by restoring the original function state after the test execution, preventing side effects on subsequent tests. 3. **Testing**:; - **Extended Test Coverage**: Developed new test cases to validate both the parallel and sequential execution paths of the function. Tests ensure that both modes produce equivalent results, thereby confirming that the parallelization did not introduce computational errors.; - **Integration with Existing Tests**: Integrated the new tests into the existing pytest framework used for QuTiP, making use of fixtures and parameterization to test different scenarios and system setups effectively. ### Implementation Details. - **Concurrency**: The parallel execution is managed through a pool of processes, where each process is responsible for a subset of the total computations. This method is particularly effective for operations that can be divided into independent, smaller tasks.; - **Compatibility**: Ensured that the enhancements are backward-compatible with existing code by modifying only the internal execution strategy of the `correlation_2op_1t` function and by maintaining the original API signature.; - **Performance Considerations**: The parallel implementation can significantly reduce computation times, particularly for larger systems or longer `taulist` arrays, by leveraging multiple CPU cores concurrently. ### Conclusion. The enhancements to the `correlation_2op_1t` function in QuTiP are designed to harness the capabilities of modern multi-core processors, thereby improving the efficiency of quantum correlation computations. This is still a WIP enhancement.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2395:2788,reduce,reduce,2788,https://qutip.org,https://github.com/qutip/qutip/pull/2395,1,['reduce'],['reduce']
Energy Efficiency,"od = 'ALAP', expected_length = 5, random_shuffle = False, gates_schedule = False. @pytest.mark.parametrize(; ""circuit, method, expected_length, random_shuffle, gates_schedule"",; [; pytest.param(deepcopy(_circuit2()), ""ALAP"", 5, False, False, id=""circuit2 ALAP no shuffle""); ]); def test_scheduling_gates3(; circuit, method, expected_length, random_shuffle, gates_schedule):; if random_shuffle:; repeat_num = 5; else:; repeat_num = 0; result0 = gate_sequence_product(circuit.propagators()); ; # run the scheduler; scheduler = Scheduler(method); gate_cycle_indices = scheduler.schedule(; circuit, gates_schedule=gates_schedule, repeat_num=repeat_num); ; # check if the scheduled length is expected; > assert(max(gate_cycle_indices) == expected_length); E assert 4 == 5; E +4; E -5. /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib/python3.9/site-packages/qutip/tests/test_scheduler.py:143: AssertionError; __________________________________________________________________________________ test_driven_cavity[power-gmres] __________________________________________________________________________________. method = 'power-gmres', kwargs = {'M': <900x900 _CustomLinearOperator with dtype=complex128>, 'mtol': 0.1, 'use_precond': 1}. @pytest.mark.parametrize(['method', 'kwargs'], [; pytest.param('direct', {}, id=""direct""),; pytest.param('direct', {'sparse':False}, id=""direct_dense""),; pytest.param('eigen', {}, id=""eigen""),; pytest.param('svd', {}, id=""svd""),; pytest.param('power', {'mtol':1e-5}, id=""power""),; pytest.param('power-gmres', {'mtol':1e-1, 'use_precond':1, 'M':'iterative'},; id=""power-gmres""),; pytest.param('power-bicgstab', {'use_precond':1, 'M':'power'},; id=""power-bicgstab""),; pytest.param('iterative-gmres', {}, id=""iterative-gmres""),; pytest.param('iterative-bicgstab', {}, id=""iterative-bicgstab""),; ]); def test_driven_cavity(method, kwargs):; N = 30; Omega = 0.01 * 2 * np.pi; Gamma = 0.05; ; a = qutip.destroy(N); H = Omega * (a.dag() + a); c_ops = [np.sqrt(Gamma) * ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1755:4305,power,power-gmres,4305,https://qutip.org,https://github.com/qutip/qutip/issues/1755,1,['power'],['power-gmres']
Energy Efficiency,"of the time-dependence of the hamiltonian. The default value; 'None' indicates that the 'tlist' spans a single period of the driving. U : :class:`qutip.qobj`; The propagator for the time-dependent Hamiltonian with period `T`.; If U is `None` (default), it will be calculated from the Hamiltonian; `H` using :func:`qutip.propagator.propagator`. Returns; -------. output : list of kets, list of quasi energies. Two lists: the Floquet modes as kets and the quasi energies. """""". if U is None:; # get the unitary propagator; U = propagator(H, T, [], args, options = options). # find the eigenstates for the propagator; evals, evecs = la.eig(U.full()). eargs = angle(evals). # make sure that the phase is in the interval [-pi, pi], so that; # the quasi energy is in the interval [-pi/T, pi/T] where T is the; # period of the driving. eargs += (eargs <= -2*pi) * (2*pi) +; # (eargs > 0) * (-2*pi); eargs += (eargs <= -pi) * (2 * pi) + (eargs > pi) * (-2 * pi); e_quasi = -eargs / T. # sort by the quasi energy; if sort:; order = np.argsort(-e_quasi); else:; order = list(range(len(evals))). # prepare a list of kets for the floquet states; new_dims = [U.dims[0], [1] * len(U.dims[0])]; new_shape = [U.shape[0], 1]; kets_order = [Qobj(np.matrix(evecs[:, o]).T,; dims=new_dims, shape=new_shape) for o in order]. return kets_order, e_quasi[order]. # create periodically-driven Hamiltonian (with degenerate quasienergies); XI = tensor(sigmax(), qeye(2)); ZI = tensor(sigmaz(), qeye(2)); a = 2.404825557695773; H = [ ZI , [0.5 * a * 10 *XI, 'cos(10*t)']]. T = 2*np.pi/10. # compute Floquet modes with different integration accuracy. fq_modes0, fq_energy0 = floquet_modes(H, T); fq_modes1, fq_energy1 = floquet_modes_mod(H, T, options=Options(rtol=1e-12,atol=1e-13, nsteps=1e+8)); fq_modes2, fq_energy2 = floquet_modes_mod(H, T, options=Options(rtol=1e-14,atol=1e-14, nsteps=1e+8)). # print overlap between two modes ; print('\tfloquet_modes:', abs(fq_modes0[0].overlap(fq_modes0[2]))); print('\tfloquet_modes_mod",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1864:2833,energy,energy,2833,https://qutip.org,https://github.com/qutip/qutip/issues/1864,1,['energy'],['energy']
Energy Efficiency,"op_list); # Set weight parameter to avg abs val in L if not set explicitly; if 'weight' not in kwargs.keys():; ss_args['weight'] = np.mean(np.abs(L.data.data.max())); ss_args['info']['weight'] = ss_args['weight']; ; n = int(np.sqrt(L.shape[0])); if ss_args['method'] == 'iterative':; ss_list = _steadystate_LU_liouvillian(L, ss_args); L, perm, perm2, rev_perm, ss_args = ss_list; elif ss_args['method'] == 'power':; ss_list = _steadystate_power_liouvillian(L, ss_args); L, perm, perm2, rev_perm, ss_args = ss_list; else:; > raise ValueError(""Invalid preconditioning method.""); E ValueError: Invalid preconditioning method. /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib/python3.9/site-packages/qutip/steadystate.py:1109: ValueError; ________________________________________________________________________________ test_driven_cavity[power-bicgstab] _________________________________________________________________________________. method = 'power-bicgstab', kwargs = {'M': <900x900 _CustomLinearOperator with dtype=complex128>, 'use_precond': 1}. @pytest.mark.parametrize(['method', 'kwargs'], [; pytest.param('direct', {}, id=""direct""),; pytest.param('direct', {'sparse':False}, id=""direct_dense""),; pytest.param('eigen', {}, id=""eigen""),; pytest.param('svd', {}, id=""svd""),; pytest.param('power', {'mtol':1e-5}, id=""power""),; pytest.param('power-gmres', {'mtol':1e-1, 'use_precond':1, 'M':'iterative'},; id=""power-gmres""),; pytest.param('power-bicgstab', {'use_precond':1, 'M':'power'},; id=""power-bicgstab""),; pytest.param('iterative-gmres', {}, id=""iterative-gmres""),; pytest.param('iterative-bicgstab', {}, id=""iterative-bicgstab""),; ]); def test_driven_cavity(method, kwargs):; N = 30; Omega = 0.01 * 2 * np.pi; Gamma = 0.05; ; a = qutip.destroy(N); H = Omega * (a.dag() + a); c_ops = [np.sqrt(Gamma) * a]; if 'use_precond' in kwargs:; > kwargs['M'] = qutip.build_preconditioner(H, c_ops, method=kwargs['M']). /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib/python3.9/site",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1755:10521,power,power-bicgstab,10521,https://qutip.org,https://github.com/qutip/qutip/issues/1755,1,['power'],['power-bicgstab']
Energy Efficiency,"or: Checks that randomly generated superoperators are ... ok; > > > Superoperator: Randomized comparison of standard and optimized ... ok; > > > Superoperator: Conversion matrix to vector to matrix ... ok; > > > Superoperator: Test unitary transformation with operators and superoperators. ... ok; > > > Superoperator: Test compability between matrix/vector conversion and ... ok; > > > Superoperator: Conversion between matrix and vector indices ... ok; > > > Superoperator: Conversion vector to matrix to vector ... ok; > > > qutip.tests.test_superoperator.TestMatrixVector.test_reshuffle ... ok; > > > utilities: energy unit conversions ... ok; > > > wigner: test wigner function calculation for coherent states ... ok; > > > wigner: test wigner function calculation for Fock states ... ok; > > > wigner: compare wigner methods for random density matrices ... ok; > > > wigner: compare wigner methods for random state vectors ... ok; > > > Wigner: Compare Wigner fft and iterative for rand. ket ... ok; > > > Wigner: Compare Wigner fft and iterative for rand. dm ... ok. # . ## ERROR: Qobj addition. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_Qobj.py"", line 139, in test_QobjAddition; assert_equal(q4.type, ischeck(q4)); NameError: global name 'ischeck' is not defined. # . ## FAIL: Qobj power. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(_self.arg); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_Qobj.py"", line 225, in test_QobjPower; assert_equal(all(q3.data.todense() - matrix(data) *_ 3), 0); File ""/usr/lib/python2.7/dist-packages/numpy/testing/utils.py"", line 317, in assert_equal; raise AssertionError(msg); AssertionError: ; Items are not equal:; ACTUAL: True; DESIRED: 0. ---. Ran 221 tests in 256.712s. FAILED (SKIP=1, errors=1, failures=1)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/126#issuecomment-42855884:12406,power,power,12406,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884,1,['power'],['power']
Energy Efficiency,"ospection to decide which has been specified by the user, as the sig is clearly distinguishable by the number of args. So effectively we can ignore the `rhs_with_state` option, but I think we should give a deprecation warning that the `f(t, state, args)` signature will be removed in the next version. So, I think this means we can keep the new method of passing the state in the args dict. I would suggest we make it a bit more simple though. I notice that the processing of the option is a bit involved. So I suggest that any element of the `args` dict where the key is of the form `name:special_value_kind` be considered some kind of special value. If `special_value_kind` is not recognised then it should throw a `ValueError`. For now we will have the `special_value_kind` of:; - `state`: Qobj of the state at time `t`, with the correct dimensions; - `state_vec`: ndarray of state as a vector; - `expect`: I can't remember exactly what you did here. The `state_vec` will clearly be much more efficient, as this is what the ODE solver maintains. However, for completeness I think we should have the `state` option. The initial value, as in `args = {'psi:state':psi0}`, seems fairly arbitrary, as I guess we can just just set the t=0 value anyway. I think you also implemented `expect` as a special_value_kind. I guess maybe the value of the element is the e_op, or maybe you use the `e_ops` param?. So, when there are special_value_kind args given, these are replaced with an arg `{name:value}` with the `value` being the value of the special_value_kind at time t. We should use internal flags (attribs) to control the special_value_kind processing, This will be more efficient than checking the args dict at every time step for special_value_kind keys, e.g.; - `_state_vec_key`: default `None`, or string key to the arg element. So, unless I have missed something regarding the importance of `**args`, then I think this plan covers what we need and makes everything a bit simpler, which is always ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1136#issuecomment-562523162:1867,efficient,efficient,1867,https://qutip.org,https://github.com/qutip/qutip/issues/1136#issuecomment-562523162,1,['efficient'],['efficient']
Energy Efficiency,"ossible applications such as error mitigation techniques [1-3].; >; > The tutorial notebooks can be found at; > http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM; > conference may help you get an overview (; > https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the; > Github Project page for a collection of related issues and ongoing Pull; > Requests.; >; > ### Expected outcomes; > - More devices defined in the `qutip.qip.device` module. At the moment, we; > have two models: spin chain and cavity QED. We would like to include some; > other commonly used planform such as Superconducting system, Ion trap; > system or silicon system. Each model will need a new set of control; > hamiltonian and a compiler that find the control pulse of a quantum gate.; > This part is gonna involve some physics and study of commonly used hardware; > platforms. The related code can be found in `qutip.qip.device` and; > `qutip.qip.compiler`; > - Refactoring the circuit compiler to allow simple pulse scheduling, e.g.; > Restriction one pulses that can be turned on at the same time.; > - Features to perform error mitigation techniques in QuTiP, such as; > zero-error extrapolation.; > - APIs to allow import quantum circuits from other software packages or; > commonly used language e.g. through quantum assembly language (qasm); > ----------------------------------------------------------------; >; > Best; > Boxi; >; > From: Nathan Shammah<mailto:notifications@github.com>; > Sent: Tuesday, February 25, 2020 8:36 AM; > To: qutip/qutip<mailto:qutip@noreply.github.com>; > Cc: Boxi Li<mailto:etamin1201@gmail.com>; Author<mailto:; > author@noreply.github.com>; > Subject: Re: [qutip/qutip] More detailed information for GSoC 2020 project; > (#1184); >; > Hi Boxi,; >; > Can you please modify the projects of the Wiki page as you deem best?; > All: we can also think of changing the order of them. It may be that; > project #3 is deemed the most important.; >; > Best wi",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553:2793,schedul,scheduling,2793,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553,1,['schedul'],['scheduling']
Energy Efficiency,"p_list : list; A list of collapse operators.; ; return_info : bool, optional, default = False; Return a dictionary of solver-specific infomation about the; solution and how it was obtained.; ; use_rcm : bool, optional, default = False; Use reverse Cuthill-Mckee reordering to minimize fill-in in the; LU factorization of the Liouvillian.; ; use_wbm : bool, optional, default = False; Use Weighted Bipartite Matching reordering to make the Liouvillian; diagonally dominant. This is useful for iterative preconditioners; only, and is set to ``True`` by default when finding a preconditioner.; ; weight : float, optional; Sets the size of the elements used for adding the unity trace condition; to the linear solvers. This is set to the average abs value of the; Liouvillian elements if not specified by the user.; ; method : str, default = 'iterative'; Tells the preconditioner what type of Liouvillian to build for; iLU factorization. For direct iterative methods use 'iterative'.; For power iterative methods use 'power'.; ; permc_spec : str, optional, default='COLAMD'; Column ordering used internally by superLU for the; 'direct' LU decomposition method. Options include 'COLAMD' and; 'NATURAL'. If using RCM then this is set to 'NATURAL' automatically; unless explicitly specified.; ; fill_factor : float, optional, default = 100; Specifies the fill ratio upper bound (>=1) of the iLU; preconditioner. Lower values save memory at the cost of longer; execution times and a possible singular factorization.; ; drop_tol : float, optional, default = 1e-4; Sets the threshold for the magnitude of preconditioner; elements that should be dropped. Can be reduced for a courser; factorization at the cost of an increased number of iterations, and a; possible singular factorization.; ; diag_pivot_thresh : float, optional, default = None; Sets the threshold between [0,1] for which diagonal; elements are considered acceptable pivot points when using a; preconditioner. A value of zero forces the pivot to",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1755:7725,power,power,7725,https://qutip.org,https://github.com/qutip/qutip/issues/1755,4,['power'],['power']
Energy Efficiency,"qutip\stochastic.py"", line 1302, in _sesolve_generic; task_args, task_kwargs, **map_kwargs). File ""c:\program files\python37\lib\site-packages\qutip\parallel.py"", line 189, in serial_map; result = task(value, *task_args, **task_kwargs). File ""c:\program files\python37\lib\site-packages\qutip\stochastic.py"", line 1358, in _single_trajectory; result = ssolver.cy_sesolve_single_trajectory(i)#, sso). File ""qutip\cy\stochastic.pyx"", line 540, in qutip.cy.stochastic.StochasticSolver.cy_sesolve_single_trajectory. File ""c:\program files\python37\lib\site-packages\qutip\qobj.py"", line 303, in __init__; if not np.any(dims):. File ""<__array_function__ internals>"", line 6, in any. File ""c:\program files\python37\lib\site-packages\numpy\core\fromnumeric.py"", line 2330, in any; return _wrapreduction(a, np.logical_or, 'any', axis, None, out, keepdims=keepdims). File ""c:\program files\python37\lib\site-packages\numpy\core\fromnumeric.py"", line 87, in _wrapreduction; return ufunc.reduce(obj, axis, dtype, out, **passkwargs). VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences ; (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. ; If you meant to do this, you must specify 'dtype=object' when creating the ndarray; ```. The second problem is more serious, and I think it was the same in the my original version. The expectation values returned in `res.expect` are not the same as those computed manually from `res.states`. The values in `res.expect` gradually (but quickly) diverge away from the correct manual values that agree with theory. It is not a small error. (Note that I'm using a single trajectory so no problem of averaging over trajectories.). I would expect complete equality between the two. I would suspect that it's something to do with normalization (?) Passing kwarg `normalize=True` doesn't change anything, nor does the solver. This is how I compute the expectations:; ```; rho_list = [[vector_to_opera",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1379#issuecomment-727043128:1426,reduce,reduce,1426,https://qutip.org,https://github.com/qutip/qutip/issues/1379#issuecomment-727043128,1,['reduce'],['reduce']
Energy Efficiency,"r a bit more context. Qutip currently contains in the HEOM module ""BosonicBath / FermionicBath"" classes that describe a bath with a multi-exponential decomposition of the correlation function. This new environment module is supposed to be a more general framework to characterize thermal environments. Environments with multi-exponential decompositions are included as `ExponentialBosonicEnvironment`; this class is supposed to mostly replace the old HEOM `BosonicBath`. We now use the term ""environment"" instead of ""bath"" mostly to avoid having the same name for the new classes as in the HEOM module. There is a little difference between the old and the new class, namely that the system coupling operator is a part of BosonicBath (i.e., an attribute of BosonicBath and required in the constructor), but we have decided for the new module that system operators should not be part of the environment. This means that to create a HEOM solver, one will need to specify environments and coupling operators, somewhat similar to the `brmesolve` solver where one specifies both power spectrum and `a_op`. (Currently, one just specifies a list of ""baths"" in the HEOM solver). This will require some small changes to the HEOM solver interface that we still have to implement before merging this PR. Note that we are also making sure that existing code continues to work without changes. Another thing missing from this PR are fermionic environments. I would have liked to have them, but it was becoming too much work and a too large PR, so fermionic environments will have to be added a bit later. Some more advantage of our changes are:; * The new environment classes could be used directly as inputs for solvers other than the HEOM solver, for example for `mesolve` or `brmesolve`. These solvers could compute their jump operators and rates from the environment power spectrum and system operators. (That is however also left for a future PR, since it would require some thinking about how environments ca",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2534#issuecomment-2359719525:1120,power,power,1120,https://qutip.org,https://github.com/qutip/qutip/pull/2534#issuecomment-2359719525,1,['power'],['power']
Energy Efficiency,"r gates because they do not commute. The graph preserves the mobility of the gates, i.e. commuting gates are not dependent on each other, even if they use the same qubits. ; - Next, it computes the longest distance of each node to the start and end nodes. The distance for each dependency arrow is defined by the execution time of the instruction (By default, it is 1 for all gates). This is used as a priority measure in the next step. The gate with a longer distance to the end node and a shorter distance to the start node has higher priority.; - In the last step, it uses a list-schedule algorithm with hardware constraint (e.g. gates using the same qubits) and priority and returns a list of cycles for gates.; - Since it's heuristics, sometimes it does not find the optimal. It offers an option that randomly shuffles the gates (if commuting) and repeats the scheduling a few times to get a better result. For scheduling quantum instructions, of which the runtime of different gates might differ, an additional step is required to compute the scheduled start time of each instruction.; It adds the additional dependency caused by hardware constraint to the graph and recomputes the distance of each node to the start and end node. This distance is then converted to the start time of each instruction. **Example**; ```python; >>> from qutip.qip.circuit import QubitCircuit; >>> from qutip.qip.scheduler import Scheduler; >>> circuit = QubitCircuit(7) ; >>> circuit.add_gate(""SNOT"", 3) # gate0; >>> circuit.add_gate(""CZ"", 5, 3) # gate1; >>> circuit.add_gate(""CZ"", 4, 3) # gate2; >>> circuit.add_gate(""CZ"", 2, 3) # gate3; >>> circuit.add_gate(""CZ"", 6, 5) # gate4; >>> circuit.add_gate(""CZ"", 2, 6) # gate5; >>> circuit.add_gate(""SWAP"", [0, 2]) # gate6; >>>; >>> scheduler = Scheduler(""ASAP""); >>> scheduler.schedule(circuit, gates_schedule=True) ; [0, 1, 3, 2, 2, 3, 4]; ```; The result list is the cycle indices for each gate. It means that the circuit can be executed in 5 gate cycles:; ```; gate",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1273:1787,schedul,scheduling,1787,https://qutip.org,https://github.com/qutip/qutip/pull/1273,2,['schedul'],"['scheduled', 'scheduling']"
Energy Efficiency,"r.jupyter.org/github/jrjohansson/qutip-lectures/blob/master/Lecture-8-Adiabatic-quantum-computing.ipynb#Evolve-the-system-in-time). **Describe the solution you'd like**. Currently when we pass a list of operators such as. ```python; e_ops = [sigmax(), sigmay(), sigmaz()]; result = mesolve(H, rho0, e_ops=e_ops); ```. We will be able to access expectation value of `sigmax()` in `result.expect[0]`, of `sigmay()` in `result.expect[1]` and of course `sigmaz()` in `result.expect[2]`. Why not capture the custom measurement in similar way?. ```; def customMeasurement(tau, psi):; exp_x = expect(sigmax(), psi); exp_y = expect(sigmaz(), psi); exp_z = expect(sigmay(), psi); energy = expect(H, psi); fidelity = np.abs(psi_ref.overlap(psi))**2.; return [exp_x, exp_y, exp_z, energy, fidelity]; ```. Now it is possible to still get expectation values as before, but in addition we can take more custom measurements (in this example energy and fidelity of state) and access them in exactly the same way for the convenience. The only thing user needs to keep track of is order of operators returned from the callback function. So now it is as before but in addition `result.expect[3]` contains energy and `result.expect[4]` contains fidelity and no custom managed global external lists required as it was in the [example](https://nbviewer.jupyter.org/github/jrjohansson/qutip-lectures/blob/master/Lecture-8-Adiabatic-quantum-computing.ipynb#Evolve-the-system-in-time). **Describe alternatives you've considered**. Alternatively we could establish that custom measurement callback function must return only single value and user would be able to pass mixed list of operators and functions in the `e_ops`. **Additional context**. Correct me if I'm wrong, based on the docs and examples I referenced above I have impression there is no better way to do it, but maybe I just missed it? Please regard this issue as opening a discussion, I'll be happy to participate and of course, implement the changes I suggest.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1238:2197,energy,energy,2197,https://qutip.org,https://github.com/qutip/qutip/issues/1238,1,['energy'],['energy']
Energy Efficiency,"ream libraries to implement qutip's interface you'd want not to increase their loading times. That would easily be achieved by defining the `__qutip_qobj__` as the entry point of this API. A drawback of this implementation is that it requires the conversion method to be defined on the object itself.; The dispatch-like solution, as was proposed by @hodgestar, is easier to play with, can be defined in a separate file, can be added to a separate package like `netket_qutip_interop` or even using setuptools entry points, though that would add complexity. Again, I'm personally not biased. I would go with option 1 because it's simpler, but I do like the organisational beauty of option 2 (that is used throughout the jax ecosystem). 2. About implicit conversion; - Assume we can distinguish two level of APIs exposed by qutip, similar in spirit to the distinction there is between BLAS and LAPACK. ; - There are low level (BLAS-like) operations on Qobjs such as addition, kron, sum, ecc that are performed repeatedly, can be efficiently implemented only among objects whose data structure is well know. Everything is built on top of those, so they need to be fast with a low overhead. ; - There are higher-level (LAPACK-like) operations on Qobjs, such as `.eigenvalues()` or `eigenstates()`, or `sesolve/mesolve` which are built by combining several low level operations. Their runtime is much higher, and they perform a fair bit of setup/input handling, which comes at the price of some overhead, but which is negligible compared to the runtime cost for most meaningfully large systems. I'd then like to state that; - *I have never suggested to insert a mechanism to insert implicit conversion in the low-level operations.* ; - In this RFC in no way have I proposed to implement implicit conversion anywhere else then were is already done in qutip itself. All I stated was that `I played around with auto-converting input hamiltonians and jump operators in qutip.sesolve and mesolve to Qobj if they ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-913661687:1181,efficient,efficiently,1181,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-913661687,1,['efficient'],['efficiently']
Energy Efficiency,"rget_state); print('Correct: {}'.format(numpy_fidelity)); print('Still correct: {}'.format(qutip_good_fidelity)); print('Wrong: {}'.format(qutip_bad_fidelity)). # Correct: 0.9999999999849929; # Still correct: 0.9999999999849929; # Wrong: 1.0000000026189553; ```. The problem is clearly in the fact that you compute the fidelity of ket states by converting them into density matrices and using the general formula:; https://github.com/qutip/qutip/blob/564c987bdca385ae179730d0aad7b0d1e624e14d/qutip/metrics.py#L88-L113. This is fine in general, but can be very inefficient for large states, and is less numerically stable. An easy solution is to just compute the fidelity as the inner product when both states are kets. Moreover, the general formula might also be improvable: consider the following example (which uses the variables defined in the previous snippet):. ```; final_dm = qutip.ket2dm(final_state); target_dm = qutip.ket2dm(target_state); sqrt_final_dm = final_dm.sqrtm(); sqrt_target_dm = target_dm.sqrtm(); eig_vals = (sqrt_final_dm * target_dm * sqrt_final_dm).eigenenergies(); bad_fid = np.sqrt(eig_vals[eig_vals > 0]).sum(). prod_sqrt = (sqrt_final_dm * sqrt_target_dm); better_fid = scipy.linalg.svdvals(prod_sqrt.full()).sum(). print('bad fid: {}'.format(bad_fid)); print('better fid: {}'.format(better_fid)). # bad fid: 1.000000072436338; # better fid: 0.9999999999849937; ```; Here, I'm proceeding similarly to what qutip currently does, by converting to dms and then applying the general formula. However, I compute the general fidelity by summing the singular values of $\sqrt\rho \sqrt\sigma$, instead of summing the square roots of the eigenvalues of $\sqrt\sigma \rho \sqrt\sigma$. Mathematically, this is equivalent, and in this particular case does at least give a physical fidelity. It does however require to compute the square root of both matrices (though it saved one matrix product), so I honestly don't know whether it would work better/be more efficient in general.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/925#issuecomment-542318121:2596,efficient,efficient,2596,https://qutip.org,https://github.com/qutip/qutip/issues/925#issuecomment-542318121,1,['efficient'],['efficient']
Energy Efficiency,"rs to real time.; ```. @hodgestar can I ask what the `cpu_freq` is used for in qutip? If it is just for reporting purposes, wouldn't it make sense to put a None or ""N/A""? . A command that somehow gives info on cpu frequencies is `sudo /usr/bin/powermetrics -s cpu_power -n 1`, which gives something like this:. ```; Machine model: MacBookPro18,3; OS version: 21C52; Boot arguments: ; Boot time: Sun Jan 9 11:12:24 2022. *** Sampled system activity (Mon Jan 10 16:05:18 2022 +0200) (5003.97ms elapsed) ***. **** Processor usage ****. E-Cluster Power: 39 mW; E-Cluster HW active frequency: 1027 MHz; E-Cluster HW active residency: 20.50% (600 MHz: 0% 972 MHz: 92% 1332 MHz: 3.1% 1704 MHz: 1.5% 2064 MHz: 3.1%); E-Cluster idle residency: 79.50%; E-Cluster instructions retired: 1.39695e+09; E-Cluster instructions per clock: 0.908186; CPU 0 frequency: 1115 MHz; CPU 0 idle residency: 86.38%; CPU 0 active residency: 13.62% (600 MHz: 0% 972 MHz: 11% 1332 MHz: .78% 1704 MHz: .59% 2064 MHz: 1.1%); CPU 1 frequency: 1103 MHz; CPU 1 idle residency: 86.02%; CPU 1 active residency: 13.98% (600 MHz: 0% 972 MHz: 12% 1332 MHz: .81% 1704 MHz: .77% 2064 MHz: .89%). P0-Cluster Power: 68 mW; P0-Cluster HW active frequency: 680 MHz; P0-Cluster HW active residency: 2.92% (600 MHz: 94% 828 MHz: .04% 1056 MHz: 1.7% 1296 MHz: .24% 1524 MHz: 1.0% 1752 MHz: .32% 1980 MHz: .24% 2208 MHz: .47% 2448 MHz: .35% 2676 MHz: .35% 2904 MHz: .24% 3036 MHz: .11% 3132 MHz: .07% 3168 MHz: .07% 3228 MHz: .81%); P0-Cluster idle residency: 97.08%; P0-Cluster instructions retired: 1.06724e+09; P0-Cluster instructions per clock: 3.04315; CPU 2 frequency: 2166 MHz; CPU 2 idle residency: 97.99%; CPU 2 active residency: 2.01% (600 MHz: .02% 828 MHz: 0% 1056 MHz: .29% 1296 MHz: .10% 1524 MHz: .33% 1752 MHz: .10% 1980 MHz: .08% 2208 MHz: .12% 2448 MHz: .12% 2676 MHz: .30% 2904 MHz: .18% 3036 MHz: .08% 3132 MHz: .04% 3168 MHz: .07% 3228 MHz: .20%); ...; ```. But it requires `sudo` and is a bit messy to parse the max frequencies.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1754#issuecomment-1008912273:1586,Power,Power,1586,https://qutip.org,https://github.com/qutip/qutip/pull/1754#issuecomment-1008912273,1,['Power'],['Power']
Energy Efficiency,"s tests on all platforms. They pass for all besides Mac OS (similar error as for other PR). With `python setup.py install`, with `install` instead of `develop`, things seem to work. What it is unclear to me is why it reads that the QuTiP Version is `4.4.0.dev0+1a639d7a`, when I could not find this hash in here (or maybe I am confused). Now, after some tries with install and develop, I am on that version of qutip-dev. . To begin with, I am running the contents of the [development notebooks](https://github.com/qutip/qutip-notebooks/tree/master/development). Some comments below are relevant to the PR of the notebooks, https://github.com/qutip/qutip-notebooks/pull/71. * `development-qobjevo.ipynb`: Runs fine. ; * `development-qobjevo-adv.ipynb`: Runs fine. ; * `development-qobjevo-timing.ipynb`: Runs fine. * The notebook [development-qobjevo.ipynb](https://github.com/qutip/qutip-notebooks/blob/master/development/development-qobjevo.ipynb) could be re-adapted to be among other tutorials, with some title like ""Time-dependent `Qobj` with `QobjEvo`"". There could be much more commentary of the basics of `QobjEvo`. Some could be copy-pasted from the introductory comment in `qobjevo.py`. You are the best person to explain, with basic examples, of increasing complexity, what QobjEvo can do. Possibly taking a known physics problem, e.g., the damped harmonic oscillator with `mesolve`, could help the user. . * In [development-qobjevo.ipynb](https://github.com/qutip/qutip-notebooks/blob/master/development/development-qobjevo.ipynb), block 22 has the first check set to False, but this is both in the notebook I run locally and in the one online. So probably that's the expected behaviour. . In [development-qobjevo-adv.ipynb](https://github.com/qutip/qutip-notebooks/blob/master/development/development-qobjevo-adv.ipynb), block 20 has a comment that is an unfinished sentence. In general, I think that examples could be much more descriptive, with comments, about the tests that are being ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/969#issuecomment-489565751:984,adapt,adapted,984,https://qutip.org,https://github.com/qutip/qutip/pull/969#issuecomment-489565751,1,['adapt'],['adapted']
Energy Efficiency,"s_method.html#time-discretization). The single-step-`mesolve` would be for the ""(2) forward-propagation with updated control"" in the bottom of the diagram: After each propagation time step, we calculate a new control value based on the current propagated state and other information (the ∂H/∂ϵ and stored backward-propagated states χ). The new control value is then used for the next time step. I'd also add that `mesolve` ideally should be ""thread-safe"" in the sense that we may have multiple `mesolve` run in parallel (index k in the diagram, where all the different k contribute to the update of the control values at the next time step), within whatever parallelization framework Python makes available. I vaguely remember looking at some Runge-Kutta implementations within scipy where this was a problem. I noted this in the docstring of krotov's [`DensityMatrixODEPropagator`](https://github.com/qucontrol/krotov/blob/master/src/krotov/propagators.py#L162), which was an attempt to adapt some of `mesolve`'s inner workings to Krotov's needs. It turned out the overhead was still too large for this work very well, cf. the large runtime of the [corresponding example](https://qucontrol.github.io/krotov/v1.2.1/notebooks/06_example_3states.html). To get very technical, Krotov's requirements are laid out in the documentation of the [`Propagator`](https://github.com/qucontrol/krotov/blob/master/src/krotov/propagators.py#L125) abstract base class, [`DensityMatrixODEPropagator`](https://github.com/qucontrol/krotov/blob/master/src/krotov/propagators.py#L162) being a particular example. In particular, the interface we define there is strictly for a single time step, makes no reference to `tlist` and we use ``H=[H0, [H1, u]]`` where `u` is a scalar for that particular timestep. However, I can easily write a wrapper around an `mesolve` that would work something along the lines of the pseudo-code from https://github.com/qucontrol/krotov/issues/93#issuecomment-859717563:. ~~~; for (i, state) ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-859754215:3243,adapt,adapt,3243,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-859754215,1,['adapt'],['adapt']
Energy Efficiency,"schedule(; circuit, gates_schedule=gates_schedule, repeat_num=repeat_num); ; # check if the scheduled length is expected; > assert(max(gate_cycle_indices) == expected_length); E assert 4 == 5; E +4; E -5. /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib/python3.9/site-packages/qutip/tests/test_scheduler.py:143: AssertionError; __________________________________________________________________________________ test_driven_cavity[power-gmres] __________________________________________________________________________________. method = 'power-gmres', kwargs = {'M': <900x900 _CustomLinearOperator with dtype=complex128>, 'mtol': 0.1, 'use_precond': 1}. @pytest.mark.parametrize(['method', 'kwargs'], [; pytest.param('direct', {}, id=""direct""),; pytest.param('direct', {'sparse':False}, id=""direct_dense""),; pytest.param('eigen', {}, id=""eigen""),; pytest.param('svd', {}, id=""svd""),; pytest.param('power', {'mtol':1e-5}, id=""power""),; pytest.param('power-gmres', {'mtol':1e-1, 'use_precond':1, 'M':'iterative'},; id=""power-gmres""),; pytest.param('power-bicgstab', {'use_precond':1, 'M':'power'},; id=""power-bicgstab""),; pytest.param('iterative-gmres', {}, id=""iterative-gmres""),; pytest.param('iterative-bicgstab', {}, id=""iterative-bicgstab""),; ]); def test_driven_cavity(method, kwargs):; N = 30; Omega = 0.01 * 2 * np.pi; Gamma = 0.05; ; a = qutip.destroy(N); H = Omega * (a.dag() + a); c_ops = [np.sqrt(Gamma) * a]; if 'use_precond' in kwargs:; > kwargs['M'] = qutip.build_preconditioner(H, c_ops, method=kwargs['M']). /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib/python3.9/site-packages/qutip/tests/test_steadystate.py:124: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _. A = Quantum object: dims = [[30], [30]], shape = (30, 30), type = oper, isherm = True; Qobj data =; [[0. 0.06283185 ... 0. 0. 0. 0. 0.; 0. 0. 0. 0. ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1755:4823,power,power-gmres,4823,https://qutip.org,https://github.com/qutip/qutip/issues/1755,2,['power'],['power-gmres']
Energy Efficiency,"scheduled length is expected; > assert(max(gate_cycle_indices) == expected_length); E assert 4 == 5; E +4; E -5. /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib/python3.9/site-packages/qutip/tests/test_scheduler.py:143: AssertionError; __________________________________________________________________________________ test_driven_cavity[power-gmres] __________________________________________________________________________________. method = 'power-gmres', kwargs = {'M': <900x900 _CustomLinearOperator with dtype=complex128>, 'mtol': 0.1, 'use_precond': 1}. @pytest.mark.parametrize(['method', 'kwargs'], [; pytest.param('direct', {}, id=""direct""),; pytest.param('direct', {'sparse':False}, id=""direct_dense""),; pytest.param('eigen', {}, id=""eigen""),; pytest.param('svd', {}, id=""svd""),; pytest.param('power', {'mtol':1e-5}, id=""power""),; pytest.param('power-gmres', {'mtol':1e-1, 'use_precond':1, 'M':'iterative'},; id=""power-gmres""),; pytest.param('power-bicgstab', {'use_precond':1, 'M':'power'},; id=""power-bicgstab""),; pytest.param('iterative-gmres', {}, id=""iterative-gmres""),; pytest.param('iterative-bicgstab', {}, id=""iterative-bicgstab""),; ]); def test_driven_cavity(method, kwargs):; N = 30; Omega = 0.01 * 2 * np.pi; Gamma = 0.05; ; a = qutip.destroy(N); H = Omega * (a.dag() + a); c_ops = [np.sqrt(Gamma) * a]; if 'use_precond' in kwargs:; > kwargs['M'] = qutip.build_preconditioner(H, c_ops, method=kwargs['M']). /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib/python3.9/site-packages/qutip/tests/test_steadystate.py:124: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _. A = Quantum object: dims = [[30], [30]], shape = (30, 30), type = oper, isherm = True; Qobj data =; [[0. 0.06283185 ... 0. 0. 0. 0. 0.; 0. 0. 0. 0. 0.33835988 0. ]]; c_op_list = [Quantum object: dims = [[30], [30]], shape = (30, 30), type = ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1755:4921,power,power-bicgstab,4921,https://qutip.org,https://github.com/qutip/qutip/issues/1755,3,['power'],"['power', 'power-bicgstab']"
Energy Efficiency,"sig23 = two * three.dag(); sig12 = one * two.dag(). H = E1*sig11+E2*sig22+E3*sig33. # collapse operators; gamma2 = 0.006/hbar; gamma3 = 0.006/hbar. c1 = gamma2*sig22; c2 = gamma3*sig33; c_ops = [c1,c2]. rho0 = sig22. e_ops = [sig11,sig22,sig33]. output = mesolve(H,rho0,tlist,c_ops,e_ops); plt.plot(tlist, output.expect[0],label = r""$\rho_{11}$""); plt.plot(tlist, output.expect[1],label = r""$\rho_{22}$""); plt.plot(tlist, output.expect[2],label = r""$\rho_{33}$""); plt.legend(); ```; The model with pulse:; ```python; from qutip import * # for quantum dynamics; import numpy as np # for numerical manipulations; from matplotlib import pyplot as plt. # Define ultrafast pulse function; def elecfld(t, args):; c0 = 300 # [nm/fs]; E0 = 4.7*1e-2 # maximum amplitude, [V/nm]; lda_ex = 720 # excitation wavelength, [nm]; t_fwhm = 80 # [fs]; ω0 = 2*np.pi*c0/lda_ex; t0 = 2*t_fwhm; return E0*np.exp(-1j*ω0*t-2*np.log(2)*((t-t0)/t_fwhm)**2). #%% Parameters; hbar = 0.658211951 # units: [eV fs]. # Energy level; E1 = 0; E2 = 1.722 # eV; E3 = 3.426 # eV. # dipole strength; mu12 = 0.1 # [e nm]; mu23 = 0.41. # electric field of ultrafast pulse parameters; c0 = 300 # [nm/fs]; E0 = 4.7*1e-2 # maximum amplitude, [V/nm]; lda_ex = 720 # excitation wavelength, [nm]; t_fwhm = 80 # [fs]; ω0 = 2*np.pi*c0/lda_ex; t0 = 2*t_fwhm; tlist= np.linspace(0,5*t0,800) # [fs]; #%% Construct Hamiltonian; # basis; one, two, three = three_level_basis(); sig11 = one * one.dag(); sig22 = two * two.dag(); sig33 = three * three.dag(); sig13 = one * three.dag(); sig23 = two * three.dag(); sig12 = one * two.dag(). # H = H0+(-$\mu$E(t)); H0 = E1*sig11+E2*sig22+E3*sig33; H1 = -mu12*(sig12+sig12.dag())-mu23*(sig23+sig23.dag()). H = [H0, [H1, elecfld]]. #%% collapse operators. # decay of excited states; gamma2 = 0.006/hbar; gamma3 = 0.006/hbar. c1 = gamma2*sig22; c2 = gamma3*sig33; c_ops = [c1,c2]. # initial state; rho0 = sig11 # ground state. # expectation operators; e_ops = [sig11,sig22,sig33]. output = mesolve(H,rho0,tlist,c_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2355:2476,Energy,Energy,2476,https://qutip.org,https://github.com/qutip/qutip/issues/2355,1,['Energy'],['Energy']
Energy Efficiency,"site may help for future reference. On Wed, 13 May 2020 at 23:38, Eric Giguère <notifications@github.com> wrote:. > I did some tests and; > 1 - Cause by fortran zheer (lapack eigenvalue solver for complex hermitian; > matrices) (c's version Ok); > 2 - It happen when installing the scipy stack with pip but not when; > installing it with conda.; > 3 - It depend on the problem size, 64 seems particularly bad, usually it; > fails on the second call.; > 4 - I only got it in zheevr which is only used in brmesolve. But Nathan; > got it in other tests which use scipy's eigh.; > 4 - It happen in scipy in the fortan version of lapack:; >; > import numpy as np; > from scipy.linalg import eigh; > H = random_hermitian(64); > eigh(H) # Work fine; > eigh(np.asfortranarray(H)) # segfault after a few try, may need to change H; >; > Possible solutions (for zheevr):; >; > - Installing scipy with conda, the easiest solution, but not in our; > control.; > - Finding a way to link clapack from cython. Linking scipy's one would; > require good knowledge of scipy internals since only one cython interface; > is provided. Linking to another installation of lapack, but it would; > require the user to install lapack or install it with qutip. Both seems; > wrong to me.; > - For mac user, call scipy's eigh from cython i zheevr, slower but; > better than risking segfault.; > - Have the code directly in qutip. We can adapt it from OpenBlas:; > https://github.com/xianyi/OpenBLAS/blob/master/lapack-netlib/LAPACKE/src/lapacke_zheevr.c; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/1197#issuecomment-628259492>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADPF67AJF3WTZBCU4YWFY23RRMHMHANCNFSM4LCKXE6A>; > .; >; -- ; Dr. Nathan Shammah; Postdoctoral Research Scientist; Theoretical Quantum Physics Laboratory; RIKEN, Wako, Saitama, Japan; www.nathanshammah.com",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1197#issuecomment-628441264:1662,adapt,adapt,1662,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-628441264,1,['adapt'],['adapt']
Energy Efficiency,"so I am completely new to this, so maybe I did not do the right thing, which is common.; qutip.about() shows me the following things:. --------------------. QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Current admin team: Alexander Pitchford, Paul D. Nation, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, and Boxi Li; Project Manager: Franco Nori.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.5.2; Numpy Version: 1.18.5; Scipy Version: 1.5.3; Cython Version: 0.29.21; Matplotlib Version: 3.3.2; Python Version: 3.7.8; Number of CPUs: 6; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Windows (AMD64); Installation path: C:\Users\***\AppData\Local\Continuum\anaconda3\lib\site-packages\qutip; ==============================================================================; Please cite QuTiP in your publication.; ==============================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`. --------------------. What I have done so far:; - installed qutip from source following the instructions; --- the ""zspmv_openmp.cpp"" problem is solved; --- everything is installed without errors. - Updated all packages/spyder/python/anaconda/... - installed Visual Studio Build Tools 2019 (2) Version 16.7.7; --- this includes ""C++ Buildtools"" (maybe not important, but also "".NET Desktop-Buildtools"" and "".NET Core-Buuildtools"". - I checked, whether openmp is installed in anaconda powershell prompt via ""conda install -c conda-forge openmp""; --- it shows ""# All requested packages already installed."" So it seems openmp is already installed. It would be a great help, if you give me a possible solution to this. Thanks in advance!!",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1378:1897,power,powershell,1897,https://qutip.org,https://github.com/qutip/qutip/issues/1378,1,['power'],['powershell']
Energy Efficiency,"speed-efficiency here, since we expect there to be few data-layer types, but for the calls to happen millions of times. The converters returned by single-key access (e.g. `data.to[data.Dense]`) are constructed individually on a call to `__getitem__`, and are instances of the private type `data.convert._partial_converter`, which internally stores a reference to every ""full"" converter, and dispatches to the correct one when called. The entire `data.to` object and all subsidiary `_converter` and `_partial_converter` objects are `pickle`-able. . #### Efficiency notes. From an efficiency perspective, there is very little benefit to using the key-lookup syntax. Internally, `to(to_type, data)` effectively calls `to[to_type, type(data)]`, so storing the object elides the creation of a single tuple and a dict lookup, but the cost of this is generally less than 500ns. Using the one-argument lookup (e.g. `to[Dense]`) is no more efficient than the general call at all, but can be used in cases where a single callable is required and is more efficient, concise and descriptive than `functools.partial`. ### `data.Dispatcher`: arbitrary multiple-dispatch operations. ```python; >>> import scipy.sparse; >>> import numpy as np; >>> a = data.CSR(scipy.sparse.csr_matrix(np.random.rand(5, 5))); >>> b = data.Dense(np.random.rand(5, 5)); >>> data.add(a, b); Dense(shape=(5, 5), fortran=True); >>> data.add(a, b, out=data.CSR); CSR(shape=(5, 5), nnz=25); ```. ```python; >>> data.add[data.CSR, data.Dense]; <indirect specialisation (CSR, Dense, Dense) of add>; >>> data.add[data.CSR, data.CSR, data.CSR]; <direct specialisation (CSR, CSR, CSR) of add>; ```. #### Basic usage. A `Dispatcher` provides a single mathematical function for _all_ combinations of types known by `data.to`, regardless of whether the particular specialisation has been defined for the input data types. In the first example above, the operator `data.add` currently only knows two specialisations; it knows how to add `CSR + CSR ->",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1338:6724,efficient,efficient,6724,https://qutip.org,https://github.com/qutip/qutip/pull/1338,2,['efficient'],['efficient']
Energy Efficiency,"ssues/1268#issue-619006856)), which can get a bit messy, as there's Python's `random`, NumPy's `random` (which also comes in a legacy and a modern flavour, namely `numpy.random.RandomState` and `numpy.random.Generator`). Also, as you've mentioned, there's tight coupling between the implementation logic and the corresponding set of tests, and updates in the former require constant maintenance of the latter.; - As an alternative, I've sometimes resorted to [`mock`](https://docs.python.org/3/library/unittest.mock.html)ing the random-number generation process itself, and - in a way equivalent to using a fixed seed - providing a pre-defined sequence of numbers to the functions which depend on those. It comes with the same disadvantage of relatively tight coupling, but is somehow more flexible and powerful than just setting the seeds.; - I have used Hypothesis in the past (on a relatively small-scale project), and it's indeed a great framework with a lot of interesting and nice functionalities. I like it very much, but one disadvantage I ran into was the increased overall time for completion of a test run. In my case, a viable approach, for instance, was to run my Hypothesis tests (which were a subset of all tests) with a bit larger periodicity (in the CI pipeline) than the regular tests. Another concern that I intuitively have (I may be _wildly_ wrong on this one, though, not having yet properly explored QuTiP's testing landscape) is that - depending on how some Hypothesis tests are set up - there might be a cost incurred in that, eventually, one might have to implement guards against inputs, that would be virtually impossible (or very close to that) to occur in practical scenarios. In any case, I'd strongly recommend performing a time-boxed experiment on a small subset of tests, which are more suited to property-based testing, and examining how that affects the test-run-completion time(s) and whether it introduces more failures than what would be desired/cost-efficient.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1268#issuecomment-1123679707:3310,efficient,efficient,3310,https://qutip.org,https://github.com/qutip/qutip/issues/1268#issuecomment-1123679707,1,['efficient'],['efficient']
Energy Efficiency,"steadystate_LU_liouvillian(L, ss_args); L, perm, perm2, rev_perm, ss_args = ss_list; elif ss_args['method'] == 'power':; ss_list = _steadystate_power_liouvillian(L, ss_args); L, perm, perm2, rev_perm, ss_args = ss_list; else:; > raise ValueError(""Invalid preconditioning method.""); E ValueError: Invalid preconditioning method. /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib/python3.9/site-packages/qutip/steadystate.py:1109: ValueError; ====================================================================================== short test summary info ======================================================================================; FAILED tests/test_countstat.py::test_dqd_current - AssertionError: ; FAILED tests/test_scheduler.py::test_scheduling_gates3[circuit2 ALAP no shuffle] - assert 4 == 5; FAILED tests/test_steadystate.py::test_driven_cavity[power-gmres] - ValueError: Invalid preconditioning method.; FAILED tests/test_steadystate.py::test_driven_cavity[power-bicgstab] - ValueError: Invalid preconditioning method.; ======================================================== 4 failed, 2845 passed, 120 skipped, 67 deselected, 4 warnings in 130.89s (0:02:10) =========================================================; ```. ### Expected Behaviour. Tests should succeed. ### Your Environment. ```shell; QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman and Simon Cross.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.7.0.dev0+3ff3f42; Numpy Version: 1.20.3; Scipy Version: 1.7.3; Cython Version: None; Matplotlib Version: None;",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1755:16943,power,power-bicgstab,16943,https://qutip.org,https://github.com/qutip/qutip/issues/1755,1,['power'],['power-bicgstab']
Energy Efficiency,"t gates might differ, an additional step is required to compute the scheduled start time of each instruction.; It adds the additional dependency caused by hardware constraint to the graph and recomputes the distance of each node to the start and end node. This distance is then converted to the start time of each instruction. **Example**; ```python; >>> from qutip.qip.circuit import QubitCircuit; >>> from qutip.qip.scheduler import Scheduler; >>> circuit = QubitCircuit(7) ; >>> circuit.add_gate(""SNOT"", 3) # gate0; >>> circuit.add_gate(""CZ"", 5, 3) # gate1; >>> circuit.add_gate(""CZ"", 4, 3) # gate2; >>> circuit.add_gate(""CZ"", 2, 3) # gate3; >>> circuit.add_gate(""CZ"", 6, 5) # gate4; >>> circuit.add_gate(""CZ"", 2, 6) # gate5; >>> circuit.add_gate(""SWAP"", [0, 2]) # gate6; >>>; >>> scheduler = Scheduler(""ASAP""); >>> scheduler.schedule(circuit, gates_schedule=True) ; [0, 1, 3, 2, 2, 3, 4]; ```; The result list is the cycle indices for each gate. It means that the circuit can be executed in 5 gate cycles:; ```; gate0; gate1; gate3, gate4; gate2, gate5; gate6; ```; Notice that gate3 and gate4 commute with gate2, therefore, the order is changed to reduce the number of cycles. **Related issues or PRs**; Solve #1243 . **Changelog**; Add a gate(pulse) scheduler for quantum circuit. **Others**; @sarsid Maybe you will be interested in it. It can be used to determine which gates can be executed at the same time. So maybe we can improve the efficiency of the QubitCircuit by combining several gates together and generate the full matrix using `qutip.qip.expand_operation`. However, writing such scheduler in Python is usually not the most efficient choice and there will be some overhead. I'm not sure if it will bring any real improvement in circuit simulation and where is the threshold. I'm also pinging @tehruhn because I remember you mentioned something similar before (apologize if not). More tests are on the way, but you are very welcome to play with it a bit and see if there is any bug!",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1273:3005,reduce,reduce,3005,https://qutip.org,https://github.com/qutip/qutip/pull/1273,4,"['efficient', 'reduce', 'schedul']","['efficient', 'reduce', 'scheduler']"
Energy Efficiency,"t to think that the unphysical part goes away when two baths are added [1], one with $+i\Omega$ and the other with $-i\Omega$. > However, I would want to be very sure that in the case where the parameters are all real, the results are not affected by the change. Is that so? Only asking because that is not clear to me at first glance. You are very much in the right to be absolutely sure before making a change. As far as I understand and have tested, it will not change the real case because the changes are as follows (I have removed all the other lines in between for clarity):. ```python; - ck_real = [np.real(eta) for eta in eta_p]; + ck_real = [eta for eta in eta_p]. - ck_imag = [np.imag(eta_p[0])]; + ck_imag = [-lam*gamma]. - eta_p = [lam * gamma * (self._cot(gamma * beta / 2.0) - 1.0j)]; + eta_p = [lam * gamma * (self._cot(gamma * beta / 2.0))]; ```; if `gamma` is real, `lam * gamma * self._cot(gamma * beta / 2.0)` would be real, and hence `ck_real` would stay the same as before, and the same can be said for `ck_imag`. After all, this is how it is done for `DrudeLorentzBath`, so it should not impact anything. > A more ""complete"" and probably more efficient solution would be to add a whole new ShiftedDrudeLorentzBath, and to put in analytically derived formulas for the Matsubara / Pade expansion coefficients. (As a first step, you could also calculate these coefficients manually and create a BosonicBath object from them directly.). This is what I have been using locally. I have made a `ShiftedDrudeLorentzBath` and have done exactly what you said. I raised this issue to point out a possible extension of use cases with `DrudeLorentzPadeBath`. [2] T. Kramer, M. Noack, A. Reinefeld, M. Rodríguez, and Y. Zelinskyy, “Efficient calculation of open quantum system dynamics and time-resolved spectroscopy with distributed memory HEOM (DM-HEOM),” Journal of Computational Chemistry, vol. 39, no. 22, p. 1779, Jun. 2018, doi: [10.1002/jcc.25354](https://doi.org/10.1002/jcc.25354).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2520#issuecomment-2358685274:2315,efficient,efficient,2315,https://qutip.org,https://github.com/qutip/qutip/issues/2520#issuecomment-2358685274,2,"['Efficient', 'efficient']","['Efficient', 'efficient']"
Energy Efficiency,"this example depends on whether I install mkl or not. without mkl, its >10 mins, with mkl, about one minute. The run with converting the tensor to sparse always takes around 30-40 seconds, and doesn't depend too much on mkl. ```; import qutip as qt; import numpy as np. #spectral density; def Jw(w): ; return lam**2 * gamma * w / ((w0**2 - w**2)**2 + (gamma**2) * (w**2)); ; ; #power spectrum; def J_power_spectrum(w):; """""" The Ohmic bath power spectrum as a function of w; (and the bath parameters).; """"""; return (; Jw(w) * 2 * (w>0); ); def Ising_solve(N, g0, J0, gamma, tlist, options, use_csr=True):; # N : number of spins; # g0 : splitting; # J0 : couplings. #Setup operators for individual qubits; sx_list, sy_list, sz_list = [], [], []; for i in range(N):; op_list = [qt.qeye(2)] * N; op_list[i] = qt.sigmax(); sx_list.append(qt.tensor(op_list)); op_list[i] = qt.sigmay(); sy_list.append(qt.tensor(op_list)); op_list[i] = qt.sigmaz(); sz_list.append(qt.tensor(op_list)). # Hamiltonian - Energy splitting terms; H = 0.; for i in range(N):; H += g0 * sz_list[i]. # Interaction terms; for n in range(N - 1):; H += -J0 * sx_list[n] * sx_list[n + 1]. # Initial state; state_list = [qt.basis(2, 1)] * (N-1); state_list.append(qt.basis(2, 0)); psi0 = qt.tensor(state_list); fx = 1; fy = 1.1; fz = 0.9; coup = (fx * (sx_list[N-1]) ; + fy * (sy_list[N-1]); + fz * (sz_list[N-1])). ; if use_csr:; R = qt.bloch_redfield_tensor(H, [[coup, J_power_spectrum]], fock_basis=True, sparse_eigensolver=True,br_dtype = 'sparse', sec_cutoff=-1); R = R.to('csr').tidyup(); result = qt.mesolve(R,psi0, tlist, options=options); else:; result = qt.brmesolve(H, psi0, tlist, a_ops = [[coup, J_power_spectrum]], e_ops=sz_list, options=options, sec_cutoff=-1); return result. #bath sd params; lam = 5; w0 = 10; gamma = 5; . #system params; N = 5; g0 = 1; J0 = 5. tlist = np.linspace(0, 100, 1000); options ={""nsteps"": 15000, ""store_states"": True, ""progress_bar"": True} . #standard; result_ising = Ising_solve(N, g0, J0, ga",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2530#issuecomment-2403834583:1089,Energy,Energy,1089,https://qutip.org,https://github.com/qutip/qutip/issues/2530#issuecomment-2403834583,1,['Energy'],['Energy']
Energy Efficiency,"thod'] == 'power':; ss_list = _steadystate_power_liouvillian(L, ss_args); L, perm, perm2, rev_perm, ss_args = ss_list; else:; > raise ValueError(""Invalid preconditioning method.""); E ValueError: Invalid preconditioning method. /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib/python3.9/site-packages/qutip/steadystate.py:1109: ValueError; ________________________________________________________________________________ test_driven_cavity[power-bicgstab] _________________________________________________________________________________. method = 'power-bicgstab', kwargs = {'M': <900x900 _CustomLinearOperator with dtype=complex128>, 'use_precond': 1}. @pytest.mark.parametrize(['method', 'kwargs'], [; pytest.param('direct', {}, id=""direct""),; pytest.param('direct', {'sparse':False}, id=""direct_dense""),; pytest.param('eigen', {}, id=""eigen""),; pytest.param('svd', {}, id=""svd""),; pytest.param('power', {'mtol':1e-5}, id=""power""),; pytest.param('power-gmres', {'mtol':1e-1, 'use_precond':1, 'M':'iterative'},; id=""power-gmres""),; pytest.param('power-bicgstab', {'use_precond':1, 'M':'power'},; id=""power-bicgstab""),; pytest.param('iterative-gmres', {}, id=""iterative-gmres""),; pytest.param('iterative-bicgstab', {}, id=""iterative-bicgstab""),; ]); def test_driven_cavity(method, kwargs):; N = 30; Omega = 0.01 * 2 * np.pi; Gamma = 0.05; ; a = qutip.destroy(N); H = Omega * (a.dag() + a); c_ops = [np.sqrt(Gamma) * a]; if 'use_precond' in kwargs:; > kwargs['M'] = qutip.build_preconditioner(H, c_ops, method=kwargs['M']). /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib/python3.9/site-packages/qutip/tests/test_steadystate.py:124: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _. A = Quantum object: dims = [[30], [30]], shape = (30, 30), type = oper, isherm = True; Qobj data =; [[0. 0.06283185 ... 0. 0. 0. 0. 0.; 0. 0. 0. 0. ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1755:10922,power,power-gmres,10922,https://qutip.org,https://github.com/qutip/qutip/issues/1755,2,['power'],['power-gmres']
Energy Efficiency,"tigation techniques [1-3].; > >; > > The tutorial notebooks can be found at; > > http://qutip.org/tutorials.html#nisq. A recent presentation on the; > FOSDEM; > > conference may help you get an overview (; > > https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the; > > Github Project page for a collection of related issues and ongoing Pull; > > Requests.; > > Expected outcomes; > >; > > - More devices defined in the qutip.qip.device module. At the moment,; > > we have two models: spin chain and cavity QED. We would like to include; > > some other commonly used planform such as Superconducting system, Ion; > trap; > > system or silicon system. Each model will need a new set of control; > > hamiltonian and a compiler that find the control pulse of a quantum gate.; > > This part is gonna involve some physics and study of commonly used; > hardware; > > platforms. The related code can be found in qutip.qip.device and; > > qutip.qip.compiler; > > - Refactoring the circuit compiler to allow simple pulse scheduling,; > > e.g. Restriction one pulses that can be turned on at the same time.; > > - Features to perform error mitigation techniques in QuTiP, such as; > > zero-error extrapolation.; > > - APIs to allow import quantum circuits from other software packages; > > or commonly used language e.g. through quantum assembly language (qasm); > >; > > ------------------------------; > >; > > Also, the last outcomes have some overlap with the last project. Although; > > I also find this circuit importation very important, I guess two projects; > > should not have overlap if they are both selected.; > >; > > —; > > You are receiving this because you are subscribed to this thread.; > > Reply to this email directly, view it on GitHub; > > <; > https://github.com/qutip/qutip/issues/1184?email_source=notifications&email_token=ADPF67A5MSYZVSDKCZD73LTREGE2LA5CNFSM4KZUPCQ2YY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4IPQGYLA; > >,; > > or unsubscribe; > > <; > https://g",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553:6321,schedul,scheduling,6321,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553,1,['schedul'],['scheduling']
Energy Efficiency,"tion (where $\Omega$ is the shift, and other symbols have the same meaning as given in [QuTiP's documentation](https://qutip.readthedocs.io/en/qutip-5.0.x/guide/heom/bosonic.html#describing-the-system-and-bath)): . $$; \begin{equation*}; J(\omega)=\left[\frac{\gamma \lambda \omega}{\gamma^2+; \left(\omega+\Omega\right)^2}+\frac{\gamma \lambda \omega}{\gamma^2+; \left(\omega-\Omega\right)^2}\right]; \end{equation*}; $$. This can be achieved by summating two Drude-Lorentz density with $\gamma \rightarrow \gamma \pm i \Omega$ and $\lambda \rightarrow \lambda/2$. As shown using Mathematica:. ![shifted_DL](https://github.com/user-attachments/assets/cece04e7-59c9-44ad-9b33-143942fc4093). When the transformation is made for `DrudeLorentzBath`, the result generated differs from that for `DrudeLorentzPadeBath` (and it is not about the number of frequencies used). [1] T. Kramer and C. Kreisbeck, “Modelling excitonic-energy transfer in light-harvesting complexes,” presented at the LATIN-AMERICAN SCHOOL OF PHYSICS MARCOS MOSHINSKY ELAF: Nonlinear Dynamics in Hamiltonian Systems, Mexico City, Mexico, 2014, pp. 111–135. doi: 10.1063/1.4861701. ### Proposed Solution. Looking at the [source code](https://qutip.readthedocs.io/en/qutip-5.0.x/_modules/qutip/solver/heom/bofin_baths.html#DrudeLorentzPadeBath) of `DrudeLorentzPadeBath` one can see that to generate `ck_real` only the real part of `eta` is considered, which would be correct if `gamma` was real. But for our case of shifted Drude-Lorentz Bath, doing so throws away the shift information from `eta` (which is not the case in `DrudeLorentzBath`). The following `git diff` provides the changes to be made in the class `DrudeLorentzPadeBath`:. ```python; @@ -481,11 +481,12 @@ class DrudeLorentzPadeBath(BosonicBath):; ):; eta_p, gamma_p = self._corr(lam=lam, gamma=gamma, T=T, Nk=Nk). - ck_real = [np.real(eta) for eta in eta_p]; + ck_real = [eta for eta in eta_p]; vk_real = [gam for gam in gamma_p]; # There is only one term in the expa",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2520:1167,energy,energy,1167,https://qutip.org,https://github.com/qutip/qutip/issues/2520,1,['energy'],['energy']
Energy Efficiency,to reduce load on travis system and shorten test times ?,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/289:3,reduce,reduce,3,https://qutip.org,https://github.com/qutip/qutip/pull/289,1,['reduce'],['reduce']
Energy Efficiency,"tonian. --> **Changed**; * [x] Isn't <code>h_sho</code> equivalent to <code>U=qutip.rand_unitary_haar(dim) \ return U* (qutip.num(dim)+0.5)*U.dag()</code> ? --> **We can test it with that one**.; * [x] Clean imports on <code>test_krylovsolve</code>; <code>qeye</code> imported twice, <code>run_module_suite</code> never used, etc.; * [x] Header no longer used. --> **Removed.**; * [x] Why is <code>os.environ['QUTIP_GRAPHICS'] = ""NO""</code> needed? --> **Remained from the original copy from test_sesolve.py**; * [x] Why not simply compare to <code>sesolve</code> ? --> **Is easier, so we swap it.**; * [x] Naming this fidelity feels wrong with the <code>1-...</code>. Also make Qobj and array conversions more efficiently with Naming this fidelity feels wrong with the <code>1-....</code>; You don't need to work go back and forth between <code>Qobj</code> and array. Also make things more efficiently with <code>1 - np.abs(psi_exact.overlap(psi_k))**2</code>. --> **Corrected.**; * [x] More efficiently <code>psi0=qutip.rand_ket(dim)</code>. --> **Corrected.**; * [x] Why compute 3 expectation values if only one is tested?; Also please use the normal <code>assert</code> instead of numpy's <code>assert_</code>. We are slowly removing them since we migrated from unitest to pytest. --> **Now all of them are checked and using <code>asset</code>**. #### <code>krylovsolve.py</code>. * [x] <code>isinstance</code> should be tested first since if it isn't, <code>psi0.isket</code> will raise an error before reaching it. It should raise a <code>TypeError</code>.; * [x] Please raise an error instead of using <code>assert</code>, since it can be suppressed.; * [x] Testing for dims instead of shape would be better. --> **Done.**; * [x] Empty progress bars can be ignored.; * [x] Improve the print at <code>particular_tlist</code> using <code>warnings.warn</code>. Properly describe the warning.; * [x] Swap illinois algorithm with a root finder from scipy. --> **Now using <code>scipy.optimize.root_",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1739#issuecomment-1041914233:1112,efficient,efficiently,1112,https://qutip.org,https://github.com/qutip/qutip/pull/1739#issuecomment-1041914233,1,['efficient'],['efficiently']
Energy Efficiency,"u : object; Returns a SuperLU object representing iLU preconditioner.; ; info : dict, optional; Dictionary containing solver-specific information.; """"""; ss_args = _default_steadystate_args(); ss_args['method'] = 'iterative'; for key in kwargs.keys():; if key in ss_args.keys():; ss_args[key] = kwargs[key]; else:; raise TypeError(""Invalid keyword argument '"" + key +; ""' passed to steadystate.""); ; # Set column perm to NATURAL if using RCM and not specified by user; if ss_args['use_rcm'] and ('permc_spec' not in kwargs.keys()):; ss_args['permc_spec'] = 'NATURAL'; ; L = _steadystate_setup(A, c_op_list); # Set weight parameter to avg abs val in L if not set explicitly; if 'weight' not in kwargs.keys():; ss_args['weight'] = np.mean(np.abs(L.data.data.max())); ss_args['info']['weight'] = ss_args['weight']; ; n = int(np.sqrt(L.shape[0])); if ss_args['method'] == 'iterative':; ss_list = _steadystate_LU_liouvillian(L, ss_args); L, perm, perm2, rev_perm, ss_args = ss_list; elif ss_args['method'] == 'power':; ss_list = _steadystate_power_liouvillian(L, ss_args); L, perm, perm2, rev_perm, ss_args = ss_list; else:; > raise ValueError(""Invalid preconditioning method.""); E ValueError: Invalid preconditioning method. /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib/python3.9/site-packages/qutip/steadystate.py:1109: ValueError; ====================================================================================== short test summary info ======================================================================================; FAILED tests/test_countstat.py::test_dqd_current - AssertionError: ; FAILED tests/test_scheduler.py::test_scheduling_gates3[circuit2 ALAP no shuffle] - assert 4 == 5; FAILED tests/test_steadystate.py::test_driven_cavity[power-gmres] - ValueError: Invalid preconditioning method.; FAILED tests/test_steadystate.py::test_driven_cavity[power-bicgstab] - ValueError: Invalid preconditioning method.; ======================================================== 4 failed",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1755:16074,power,power,16074,https://qutip.org,https://github.com/qutip/qutip/issues/1755,1,['power'],['power']
