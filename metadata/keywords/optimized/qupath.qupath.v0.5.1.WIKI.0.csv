quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,filename,wiki,url,total_similar,target_keywords,target_matched_words
Availability," (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class PixelProcessor.Builder<S,T,U>. java.lang.Object; qupath.lib.experimental.pixels.PixelProcessor.Builder<S,T,U>. Type Parameters:; S - the image type; T - the mask type; U - the output type. Enclosing class:; PixelProcessor<S,T,U>. public static class PixelProcessor.Builder<S,T,U>; extends Object; Builder class for a PixelProcessor. Constructor Summary; Constructors. Constructor; Description; Builder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; PixelProcessor<S,T,U>; build(). Build a PixelProcessor from the current state of the builder. PixelProcessor.Builder<S,T,U>; downsample(double downsample). Set the downsample factor to use with requesting image regions. PixelProcessor.Builder<S,T,U>; imageSupplier(ImageSupplier<S> imageSupplier). Set the image supplier. PixelProcessor.Builder<S,T,U>; maskSupplier(MaskSupplier<S,T> maskSupplier). Set the mask supplier. PixelProcessor.Builder<S,T,U>; merger(ObjectMerger merger). Set a merger to use. PixelProcessor.Builder<S,T,U>; mergeSharedBoundaries(double threshold). Convenience method to set a merger that merges objects based on their shared boundary. PixelProcessor.Builder<S,T,U>; outputHandler(OutputHandler<S,T,U> outputHandler). Set the output handler. PixelProcessor.Builder<S,T,U>; padding(int size). Set the padding to use when extracting regions, using a symmetric padding. PixelProcessor.Builder<S,T,U>; padding(Padding padding). Set the padding to use when extracting regions. PixelProcessor.Builder<S,T,U>; pixelSize(double pixelSize). Set the requested pixel size to use with requesting image regions. PixelPr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html:1017,down,downsample,1017,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,2,['down'],['downsample']
Availability," (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class LogViewerCommand. java.lang.Object; qupath.lib.gui.commands.LogViewerCommand. public class LogViewerCommand; extends Object; A viewer for log messages. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogViewerCommand(Window parent). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression<InfoMessage>; getInfoMessage(). Get a string expression to draw attention to error messages. qupath.ui.logviewer.ui.main.LogMessageCounts; getLogMessageCounts(). Get the counts of all messages logged by the log viewer. ObservableBooleanValue; hasUnseenErrors(). Boolean binding indicating whether there are any unseen errors. void; show();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogViewerCommand; public LogViewerCommand(Window parent); Constructor. Parameters:; parent - . Method Details. show; public void show(). getLogMessageCounts; public qupath.ui.logviewer.ui.main.LogMessageCounts getLogMessageCounts(); Get the counts of all messages logged by the log viewer. Returns:. hasUnseenErrors; public ObservableBooleanValue hasUnseenErrors(); Boolean binding indicating whether there are any unseen errors.; 'Unseen' here means errors that occur since the log viewer was visible. Returns:. getInfoMessage; public ObjectExpression<InfoMessage> getInfoMessage(); Get a string expression to draw attention to error messages. Returns:; a string expression that evaluates to the error message, or null if there are no errors. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html:1089,error,errors,1089,javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html,6,['error'],"['error', 'errors']"
Availability," (based on ImageJ's FloodFiller) suitable for binary images only. static ImageProcessor; closingByReconstruction(ImageProcessor ip,; double radius). Apply a morphological closing by reconstruction. static ImageProcessor; findRegionalMaxima(ImageProcessor ip,; float threshold,; boolean outputBinary). Find regional maxima using morphological reconstruction. static void; imposeMaxima(FloatProcessor fp,; Roi roi). Ensure that a FloatProcessor only has region maxima within a specified Roi, using morphological reconstruction. static void; imposeMaxima(FloatProcessor fp,; ImageProcessor ipMask). Ensure that a FloatProcessor only has region maxima within a specified mask, using morphological reconstruction. static void; imposeMinima(FloatProcessor fp,; Roi roi). Ensure that a FloatProcessor only has region minima within a specified Roi, using morphological reconstruction. static boolean; morphologicalReconstruction(ImageProcessor ipMarker,; ImageProcessor ipMask). Apply morphological operation using marker and mask images. static ImageProcessor; openingByReconstruction(ImageProcessor ip,; double radius). Apply opening by reconstruction, with the specified minimum filter radius. static boolean; validateMarkerMask(ImageProcessor ipMarker,; ImageProcessor ipMask). Check that marker and mask images have the same size, and ensure that marker pixels are <= mask pixels, ; making this if necessary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MorphologicalReconstruction; public MorphologicalReconstruction(). Method Details. binaryReconstruction; public static ByteProcessor binaryReconstruction(ByteProcessor bpMarker,; ByteProcessor bpMask,; boolean permitMaskChanges); Alternative morphological reconstruction (based on ImageJ's FloodFiller) suitable for binary images only. Parameters:; bpMarker - ; bpMask - ; permitMaskChanges - ; Returns:. morphologicalReconstruction; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/MorphologicalReconstruction.html:1995,mask,mask,1995,javadoc/docs/qupath/imagej/processing/MorphologicalReconstruction.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/MorphologicalReconstruction.html,1,['mask'],['mask']
Availability," (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; Throws:; IOException; Since:; v0.4.0; See Also:. readRegion(double, int, int, int, int, int, int); readRegion(double, int, int, int, int); readBufferedImage(RegionRequest). readRegion; default T readRegion(double downsample,; int x,; int y,; int width,; int height,; int z,; int t); throws IOException; Read a 2D(+C) image region for a specified z-plane and timepoint.; Coordinates and bounding box dimensions are in pixel units, at the full image resolution ; (i.e. when downsample = 1).; ; All channels are always returned. Parameters:; downsample - downsample factor for the region; x - x coordinate of the top left of the region bounding box; y - y coordinate of the top left of the region bounding box; width - bounding box width; height - bounding box height; z - index for the z-position; t - index for the timepoint; Returns:; pixels for the region being requested; Throws:; IOException; Since:; v0.4.0; See Also:. readRegion(RegionRequest). readRegion; default T readRegion(double downsample,; int x,; int y,; int width,; int height); throws IOException; Read a 2D(+C) image region from the default ImagePlane (i.e. z and t are 0).; Coordinates and bounding box dimensions are in pixel units, at the full image resolution ; (i.e. when downsample = 1).; ; All ch",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html:9877,down,downsample,9877,javadoc/docs/qupath/lib/images/servers/ImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html,1,['down'],['downsample']
Availability," (unfortunately). default <S,; R extends S>ResourceManager.Manager<R>; getResources(String location,; Class<S> cls,; String ext). Get a manager for objects of a specified class within this project. default ResourceManager.Manager<String>; getScripts(). Get a manager for scripts saved within this project. URI; getURI(). Get a URI that can be used when saving/reloading this project. String; getVersion(). The version string for this project, which can be used to distinguish new and older project ; (which may contain different information). boolean; isEmpty(). Test if the project contains any images. void; removeAllImages(Collection<ProjectImageEntry<T>> entries,; boolean removeAllData). Remove multiple images from the project, optionally including associated data. void; removeImage(ProjectImageEntry<?> entry,; boolean removeAllData). Remove an image from the project, optionally including associated data. void; setMaskImageNames(boolean maskNames). Request that entries return masked image names, rather than the 'true' image names. boolean; setPathClasses(Collection<? extends PathClass> pathClasses). Update the available PathClasses. void; syncChanges(). Save the project. Method Details. getPathClasses; List<PathClass> getPathClasses(); Get an unmodifiable list representing the PathClasses associated with this project. Returns:. getMaskImageNames; boolean getMaskImageNames(); Query whether 'true' or masked image names are being returned. Returns:; See Also:. setMaskImageNames(boolean). setMaskImageNames; void setMaskImageNames(boolean maskNames); Request that entries return masked image names, rather than the 'true' image names.; ; The purpose of this is to support studies where the user ought not to see the image names during analysis, ; reducing the potential for user bias. Parameters:; maskNames - ; See Also:. getMaskImageNames(). setPathClasses; boolean setPathClasses(Collection<? extends PathClass> pathClasses); Update the available PathClasses. Parameters:; pathCla",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/projects/Project.html:3186,mask,masked,3186,javadoc/docs/qupath/lib/projects/Project.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/Project.html,1,['mask'],['masked']
Availability," - ; pathImage - ; Returns:. convertToPolygonROI; public static PolygonROI convertToPolygonROI(PolygonRoi roi,; Calibration cal,; double downsampleFactor,; ImagePlane plane); Convert an ImageJ PolygonRoi to a QuPath PolygonROI. Parameters:; roi - ; cal - ; downsampleFactor - ; plane - ; Returns:. convertToIJRoi; public static <T extends PathImage<ImagePlus>> Roi convertToIJRoi(ROI pathROI,; double xOrigin,; double yOrigin,; double downsampleFactor); Convert a QuPath ROI to an ImageJ Roi. Type Parameters:; T - ; Parameters:; pathROI - ; xOrigin - x-origin indicating relationship of ImagePlus to the original image, as stored in ImageJ Calibration object; yOrigin - y-origin indicating relationship of ImagePlus to the original image, as stored in ImageJ Calibration object; downsampleFactor - downsample factor at which the ImagePlus was extracted from the full-resolution image; Returns:. convertToROI; public static ROI convertToROI(Roi roi,; double xOrigin,; double yOrigin,; double downsampleFactor,; ImagePlane plane); Create a ROI from an ImageJ Roi. Parameters:; roi - ImageJ Roi; xOrigin - x-origin, as stored in an ImageJ Calibration object; yOrigin - y-origin, as stored in an ImageJ Calibration object; downsampleFactor - ; plane - plane defining c, z and t indices; Returns:. convertToOpticalDensitySum; public static FloatProcessor convertToOpticalDensitySum(ColorProcessor cp,; double maxRed,; double maxGreen,; double maxBlue); Calculate optical density values for the red, green and blue channels, then add these all together. Parameters:; cp - ; maxRed - ; maxGreen - ; maxBlue - ; Returns:. colorDeconvolve; public static FloatProcessor[] colorDeconvolve(ColorProcessor cp,; ColorDeconvolutionStains stains); Apply color deconvolution, outputting 3 'stain' images in the same order as the stain vectors. Parameters:; cp - input RGB color image; stains - color deconvolution stain vectors; Returns:; array containing three FloatProcessors, representing the deconvolved stains. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:26232,down,downsampleFactor,26232,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,1,['down'],['downsampleFactor']
Availability," - Static method in class qupath.lib.gui.panes.PreferencePane. Deprecated.; use PropertyItemBuilder instead. createRandomRectangle(ImageRegion, double, double) - Static method in class qupath.lib.roi.RoiTools. Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. createRandomRectangle(ImageRegion, double, double, Random) - Static method in class qupath.lib.roi.RoiTools. Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. createRandomRectangle(ROI, double, double) - Static method in class qupath.lib.roi.RoiTools. Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI. createRandomRectangle(ROI, double, double, int, boolean, Random) - Static method in class qupath.lib.roi.RoiTools. Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI, ; using a specified maximum number of attempts. createRecentCommandsDialog(QuPathGUI) - Static method in class qupath.lib.gui.tools.CommandFinderTools. Create a dialog showing a filtered list of recently-used commands, for fast selection. createRecentItemsMenu(String, ObservableList<URI>, Consumer<URI>) - Static method in class qupath.lib.gui.tools.GuiTools. Create a menu that displays recent items, stored in the form of URIs, using default text to show for the menu item. createRecentItemsMenu(String, ObservableList<URI>, Consumer<URI>, Function<URI, String>) - Static method in class qupath.lib.gui.tools.GuiTools. Create a menu that displays recent items, stored in the form of URIs, customizing the text displayed for the menu items. createRectangle(double, double, double, double) - Static method in class qupath.lib.roi.GeometryTools. Create a rectangular Geometry for the specified bounding box. createRectangleEventHandler() - Static method in cla",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:213807,mask,mask,213807,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['mask'],['mask']
Availability," - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i.e. the amount to scale.; Returns:. createROIMask; public static BufferedImage createROIMask(Shape shape,; double downsample); Create a Shape mask using the minimal bounding box for the Shape. Parameters:; shape - ; downsample - ; Returns:. createShapeMask; public static BufferedImage createShapeMask(int width,; int height,; Shape shape,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; shape - Shape for mask; xOrigin - pixel x coordinate of the top left of the region to include in the mask.; yOrigin - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i.e. the amount to scale.; Returns:. ensureBufferedImageType; public static BufferedImage ensureBufferedImageType(BufferedImage img,; int requestedType); Convert a BufferedImage to have a specified type.; ; This makes use of Graphics2D.drawImage, which imposes limits on supported types ; (i.e. RGB or 8-bit grayscale), and is therefore not suitable for arbitrary type conversion.; ; A possible use is to ensure that a BGR/RGB/ARGB image is converted to the same representation, ; for example to allow packed int arrays to be treated in the same way.; ; Images that already have the same type are returned unchanged. Parameters:; img - the input image; requestedType - the type to which the image should be converted; Returns:; the (possibly-new) output image; See Also:. is8bitColorType(int). ensureBufferedImage; public static BufferedImage ensureBufferedImage(Image image); Convert an Image to a BufferedImage if necessary, or return the original image unchanged ; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:6386,down,downsample,6386,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,3,"['down', 'mask']","['downsample', 'mask']"
Availability," . public interface Project<T>; Data structure to manage images and associated data in QuPath. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; ProjectImageEntry<T>; addDuplicate(ProjectImageEntry<T> entry,; boolean copyData). Add an image by duplicating an existing entry. ProjectImageEntry<T>; addImage(ImageServerBuilder.ServerBuilder<T> server). Add an image for a particular ImageServer. Project<T>; createSubProject(String name,; Collection<ProjectImageEntry<T>> entries). Create a sub-project that provides a view on the specified entries. long; getCreationTimestamp(). Request a timestamp from when the project was created. ProjectImageEntry<T>; getEntry(ImageData<T> imageData). Request a ProjectImageEntry associated with an ImageData. List<ProjectImageEntry<T>>; getImageList(). Get a list of image entries for the project. boolean; getMaskImageNames(). Query whether 'true' or masked image names are being returned. long; getModificationTimestamp(). Request a timestamp from when the project was last synchronized. String; getName(). Get the name of the project. static String; getNameFromURI(URI uri). Extract a usable project name from a URI. default ResourceManager.Manager<ObjectClassifier<T>>; getObjectClassifiers(). Get a manager for object classifiers saved within this project. Path; getPath(). Get a path to this project, or null if this project is not on a local file system. List<PathClass>; getPathClasses(). Get an unmodifiable list representing the PathClasses associated with this project. default ResourceManager.Manager<PixelClassifier>; getPixelClassifiers(). Get a manager for pixel classifiers saved within this project. URI; getPreviousURI(). Sometimes projects move (unfortunately). default <S,; R extends S>ResourceManager.Manager<R>; getResources(String location,; Class<S> cls,; String ext). Get a manager for objects of a specified class within this project",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/projects/Project.html:1388,mask,masked,1388,javadoc/docs/qupath/lib/projects/Project.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/Project.html,1,['mask'],['masked']
Availability," 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for mask; request - region that the mask should correspond to, including the origin (x & y) and downsample factor to use.; Returns:. createROIMask; public static BufferedImage createROIMask(ROI roi,; double downsample); Create a ROI mask using the minimal bounding box for the ROI. Parameters:; roi - ; downsample - ; Returns:. createROIMask; public static BufferedImage createROIMask(int width,; int height,; ROI roi,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for mask; xOrigin - pixel x coordinate of the top left of the region to include in the mask.; yOrigin - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i.e. the amount to scale.; Returns:. createROIMask; public static BufferedImage createROIMask(Shape shape,; double downsample); Create a Shape mask using the minimal bounding box for the Shape. Parameters:; shape - ; downsample - ; Returns:. createShapeMask; public static BufferedImage createShapeMask(int width,; int height,; Shape shape,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; shape - Shape for mask; xOrigin - pixel x coordinate of the top left of the region to include in the mask.; yOrigin - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:5488,mask,mask,5488,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,1,['mask'],['mask']
Availability," ; (i.e. when downsample = 1).; ; All channels are always returned. Parameters:; downsample - downsample factor for the region; x - x coordinate of the top left of the region bounding box; y - y coordinate of the top left of the region bounding box; width - bounding box width; height - bounding box height; z - index for the z-position; t - index for the timepoint; Returns:; pixels for the region being requested; Throws:; IOException; Since:; v0.4.0; See Also:. readRegion(RegionRequest). readRegion; default T readRegion(double downsample,; int x,; int y,; int width,; int height); throws IOException; Read a 2D(+C) image region from the default ImagePlane (i.e. z and t are 0).; Coordinates and bounding box dimensions are in pixel units, at the full image resolution ; (i.e. when downsample = 1).; ; All channels are always returned. Parameters:; downsample - downsample factor for the region; x - x coordinate of the top left of the region bounding box; y - y coordinate of the top left of the region bounding box; width - bounding box width; height - bounding box height; Returns:; pixels for the region being requested; Throws:; IOException; Since:; v0.4.0; See Also:. readRegion(RegionRequest); readRegion(double, int, int, int, int, int, int). getServerType; String getServerType(); A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. getAssociatedImageList; List<String> getAssociatedImageList(); Get a list of 'associated images', e.g. thumbnails or slide overview images.; ; Each associated image is simply a T that does not warrant (or require) a full ImageServer, and most likely would never be analyzed. Returns:; See Also:. getAssociatedImage(String). getAssociatedImage; T getAssociatedImage(String name); Get the image for a given associated image name. Parameters:; name - ; Returns:; See Also:. getAssociatedImageList(). isEmptyRegion; boolean isEmptyRegion(RegionRequest request); Test whether a region is empty",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html:10975,down,downsample,10975,javadoc/docs/qupath/lib/images/servers/ImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html,2,['down'],['downsample']
Availability," ; Returns:. thresholdAboveEquals; public static ByteProcessor thresholdAboveEquals(ImageProcessor ip,; float threshold); Created a binary image by thresholding pixels to find where ip1 >= threshold. Parameters:; ip - ; threshold - ; Returns:. thresholdBetween; public static ByteProcessor thresholdBetween(ImageProcessor ip,; float lowThreshold,; float highThreshold); Created a binary image by thresholding pixels to find where ip >= lowThreshold and ip <= highThreshold. Parameters:; ip - ; lowThreshold - ; highThreshold - ; Returns:. thresholdToROI; public static ROI thresholdToROI(BufferedImage img,; double minThreshold,; double maxThreshold,; int band,; RegionRequest request); Generate a QuPath ROI by thresholding an image channel image. Parameters:; img - the input image (any type); minThreshold - minimum threshold; pixels >= minThreshold will be included; maxThreshold - maximum threshold; pixels <= maxThreshold will be included; band - the image band to threshold (channel); request - a RegionRequest corresponding to this image, used to calibrate the coordinates. If null, ; we assume no downsampling and an origin at (0,0).; Returns:; See Also:. thresholdToROI(ImageProcessor, TileRequest). thresholdToROI; public static ROI thresholdToROI(Raster raster,; double minThreshold,; double maxThreshold,; int band,; TileRequest request); Generate a QuPath ROI by thresholding an image channel image, deriving coordinates from a TileRequest.; ; This can give a more accurate result than depending on a RegionRequest because it is possible to avoid some loss of precision. Parameters:; raster - ; minThreshold - ; maxThreshold - ; band - ; request - ; Returns:; See Also:. thresholdToROI(ImageProcessor, RegionRequest). thresholdToROI; public static ROI thresholdToROI(ImageProcessor ip,; RegionRequest request); Generate a QuPath ROI from an ImageProcessor.; ; It is assumed that the ImageProcessor has had its min and max threshold values set. Parameters:; ip - ; request - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/SimpleThresholding.html:5357,down,downsampling,5357,javadoc/docs/qupath/imagej/processing/SimpleThresholding.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/SimpleThresholding.html,1,['down'],['downsampling']
Availability," ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; Throws:; IOException; Since:; v0.4.0; See Also:. readRegion(double, int, int, int, int, int, int); readRegion(double, int, int, int, int); readBufferedImage(RegionRequest). readRegion; default T readRegion(double downsample,; int x,; int y,; int width,; int height,; int z,; int t); throws IOException; Read a 2D(+C) image region for a specified z-plane and timepoint.; Coordinates and bounding box dimensions are in pixel units, at the full image resolution ; (i.e. when downsample = 1).; ; All channels are always returned. Parameters:; downsample - downsample factor for the region; x - x coordinate of the top left of the region bounding box; y - y coordinate of the top left of the region bounding box; width - bounding box width; height - bounding box height; z - index for the z-position; t - index for the timepoint; Returns:; pixels for the region being requested; Throws:; IOException; Since:; v0.4.0; See Also:. readRegion(RegionRequest). readRegion; default T readRegion(double downsample,; int x,; int y,; int width,; int height); throws IOException; Read a 2D(+C) image region from the default ImagePlane (i.e. z and t are 0).; Coordinates and bounding box dimensions are in pixel units, at the full image resolution ; (i.e. when downsample = 1).; ; All channels are always returned. Parameters:; downsample - downsample factor for the region; x - x coordinate of the top left of the region bounding box; y - y coordinate of the top left of the region bounding box; width - bounding box width; height - bounding box height; Returns:; pixels for the region being requested; Throws:; IOException; Since:; v0.4.0; See Also:. readRegion(RegionRequest); readRegion(double, int, int, int, int, int, int). get",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html:10203,down,downsample,10203,javadoc/docs/qupath/lib/images/servers/ImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html,2,['down'],['downsample']
Availability," Calculate the result of applying the merging strategy to the input objects.; ; The output list will contain the same number of objects or fewer.; Objects that are not merged will be returned unchanged, while objects that are merged will be replaced by a new; objects with a new ROI.; ; New objects will be assigned new IDs.; Classifications will be preserved, but other measurements and properties will not be.; ; No guarantees are made about the mutability or ordering of the returned list. Parameters:; pathObjects - the input objects for which merges should be calculated; Returns:; a list of objects, with the same number or fewer than the input. createSharedTileBoundaryMerger; public static ObjectMerger createSharedTileBoundaryMerger(double sharedBoundaryThreshold); Create an object merger that uses a shared boundary IoU criterion and default overlap tolerance.; ; Objects will be merged if they a common boundary and have the same classification.; A small overlap tolerance is used to compensate for sub-pixel misalignment of tiles.; ; This is intended for post-processing a tile-based segmentation, where the tiling has been strictly enforced; (i.e. any objects have been clipped to non-overlapping tile boundaries). Parameters:; sharedBoundaryThreshold - minimum intersection-over-union (IoU) proportion of the possibly-clipped boundary; for merging; Returns:; an object merger that uses a shared boundary criterion; See Also:. createSharedTileBoundaryMerger(double, double). createSharedTileBoundaryMerger; public static ObjectMerger createSharedTileBoundaryMerger(double sharedBoundaryThreshold,; double overlapTolerance); Create an object merger that uses a shared boundary IoU criterion and overlap tolerance.; ; Objects will be merged if they share a common boundary and have the same classification.; A small overlap tolerance can be used to compensate for slight misalignment of tiles.; ; After identifying a common boundary line between ROIs, the ROI boundaries are intersected w",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/utils/ObjectMerger.html:2783,toler,tolerance,2783,javadoc/docs/qupath/lib/objects/utils/ObjectMerger.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/utils/ObjectMerger.html,1,['toler'],['tolerance']
Availability," Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.syntax; Class ScriptSyntaxProvider. java.lang.Object; qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider. public class ScriptSyntaxProvider; extends Object; Class with static methods to fetch all the available ScriptSyntaxes. Since:; v0.4.0; Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final ScriptSyntax; GROOVY;  ; static final ScriptSyntax; JSON;  ; static final ScriptSyntax; PLAIN;  ; static final ScriptSyntax; PROPERTIES;  ; static final ScriptSyntax; PYTHON;  ; static final ScriptSyntax; XML;  ; static final ScriptSyntax; YAML;  . Constructor Summary; Constructors. Constructor; Description; ScriptSyntaxProvider();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Collection<ScriptSyntax>; getAvailableSyntaxes(). Get the available script syntaxes. static ScriptSyntax; getSyntaxFromName(String name). Get a script syntax from a specified language name. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. GROOVY; public static final ScriptSyntax GROOVY. XML; public static final ScriptSyntax XML. YAML; public static final ScriptSyntax YAML. JSON; public static final ScriptSyntax JSON. PLAIN; public static final ScriptSyntax PLAIN. PROPERTIES; public static final ScriptSyntax PROPERTIES. PYTHON; public static final ScriptSyntax PYTHON. Constructor Details. ScriptSyntaxProvider; public ScriptSyntaxProvider(). Method Details. getAvailableSyntaxes; public static Collection<ScriptSyntax> getAvailableSyntaxes(); Get the available script syntaxes. Returns:. getSyntaxFromName; public static ScriptSyntax getSyntaxFromName(String name); Get a script syntax from a specified language name.; If no specific syntax is found, then ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/syntax/ScriptSyntaxProvider.html:1212,avail,available,1212,javadoc/docs/qupath/lib/gui/scripting/syntax/ScriptSyntaxProvider.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/syntax/ScriptSyntaxProvider.html,1,['avail'],['available']
Availability," Constructor Summary; Constructors. Constructor; Description; HaralickFeatureComputer();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static HaralickFeatures; measureHaralick(SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d). Compute mean Haralick features from a SimpleImage, with optional masking. static CoocurranceMatrices; updateCooccurrenceMatrices(CoocurranceMatrices matrices,; SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d). Update existing CoocurranceMatrices with the values in a SimpleImage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. HaralickFeatureComputer; public HaralickFeatureComputer(). Method Details. measureHaralick; public static HaralickFeatures measureHaralick(SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d); Compute mean Haralick features from a SimpleImage, with optional masking. Parameters:; ip - input image; bpMask - binary mask (may be null); nBins - number of bins in co-occurrence matrix; minValue - minimum value for binning in the co-occurrence matrix; maxValue - maximum value for binning in the co-occurrence matrix; d - separation between pixels considered adjacent, usually 1; Returns:. updateCooccurrenceMatrices; public static CoocurranceMatrices updateCooccurrenceMatrices(CoocurranceMatrices matrices,; SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d); Update existing CoocurranceMatrices with the values in a SimpleImage. Parameters:; matrices - ; ip - input image; bpMask - binary mask (may be null); nBins - number of bins in co-occurrence matrix; minValue - minimum value for binning in the co-occurrence matrix; maxValue - maximum value for binning in the co-occurrence matrix; d - separation betwe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/HaralickFeatureComputer.html:1720,mask,masking,1720,javadoc/docs/qupath/lib/analysis/features/HaralickFeatureComputer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/HaralickFeatureComputer.html,1,['mask'],['masking']
Availability," Constructor; Description; Measurements();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>; multiChannel(String name,; List<ColorTransforms.ColorTransform> transforms,; Function<double[][],Double> function). Create a new object measurement that requires multiple channels as input, using the main ROI of the object; as a mask. static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>; multiChannel(String name,; List<ColorTransforms.ColorTransform> transforms,; Function<double[][],Double> function,; Function<PathObject,ROI> roiFunction). Create a new object measurement that requires multiple channels as input. static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>; singleChannel(String name,; ColorTransforms.ColorTransform transform,; Function<double[],Double> function). Create a new object measurement that requires one channel as input, using the main ROI of the object; as a mask. static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage>; singleChannel(String name,; ColorTransforms.ColorTransform transform,; Function<double[],Double> function,; Function<PathObject,ROI> roiFunction). Create a new object measurement that requires one channel as input. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Measurements; public Measurements(). Method Details. multiChannel; public static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage> multiChannel(String name,; List<ColorTransforms.ColorTransform> transforms,; Function<double[][],Double> function,; Function<PathObject,ROI> roiFunction); Create a new object measurement that requires multiple channels as input. Parameters:; name - name of the measurement; transforms - transforms to extract the channels; function - function ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Measurements.html:1749,mask,mask,1749,javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Measurements.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Measurements.html,1,['mask'],['mask']
Availability," Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class SparseImageServer.SparseImageServerManager. java.lang.Object; qupath.lib.images.servers.SparseImageServer.SparseImageServerManager. All Implemented Interfaces:; AutoCloseable. Enclosing class:; SparseImageServer. public static class SparseImageServer.SparseImageServerManager; extends Object; implements AutoCloseable; Helper class for SparseImageServers, capable of returning the appropriate ImageServer for ; different ImageRegions and different resolutions.; ; This also allows serialization/deserialization with JSON. Constructor Summary; Constructors. Constructor; Description; SparseImageServerManager();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Collection<ImageRegion>; getRegions(). Get an unmodifiable collection for all available regions. ImageServer<BufferedImage>; getServer(ImageRegion region,; double downsample). Request the server for a specific downsample. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SparseImageServerManager; public SparseImageServerManager(). Method Details. getRegions; public Collection<ImageRegion> getRegions(); Get an unmodifiable collection for all available regions.; ; This can be used to iterate through regions to check which overlap a request. Returns:. getServer; public ImageServer<BufferedImage> getServer(ImageRegion region,; double downsample); throws IOException; Request the server for a specific downsample.; ; Note that this does not aim to return a server for any arbitrary region; rather, ; a server must exist for the specified region and downsample, otherwise this will return null. Parameters:; region - specified region to which the server should correspond (must be found within getRegions()); downsample - specified downsample for the server (must be found within getDow",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/SparseImageServer.SparseImageServerManager.html:1341,down,downsample,1341,javadoc/docs/qupath/lib/images/servers/SparseImageServer.SparseImageServerManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/SparseImageServer.SparseImageServerManager.html,1,['down'],['downsample']
Availability," Description; RoiTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; areaContains(ROI pathROI,; double x,; double y). Returns true if pathROI is an area that contains x & y somewhere within it. static ROI; buffer(ROI roi,; double distance). Buffer the specified ROI, dilating (or eroding) by the specified distance. static List<ROI>; clipToROI(ROI parent,; Collection<? extends ROI> rois). Intersect a collection of ROIs with a single parent ROI, returning all results that are valid. static ROI; combineROIs(ROI shape1,; ROI shape2,; RoiTools.CombineOp op). Combine two shape ROIs together. static Collection<? extends ROI>; computeTiledROIs(ROI parentROI,; ImmutableDimension sizePreferred,; ImmutableDimension sizeMax,; boolean fixedSize,; int overlap). Create a collection of tiled ROIs corresponding to a specified parentROI if it is larger than sizeMax, with optional overlaps. static ROI; createRandomRectangle(ImageRegion mask,; double width,; double height). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. static ROI; createRandomRectangle(ImageRegion mask,; double width,; double height,; Random random). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. static ROI; createRandomRectangle(ROI mask,; double width,; double height). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI. static ROI; createRandomRectangle(ROI mask,; double width,; double height,; int maxAttempts,; boolean permitErosion,; Random random). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI, ; using a specified maximum number of attempts. static ROI; difference(ROI roi1,; ROI roi2). Compute the difference between two ROIs.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:1717,mask,mask,1717,javadoc/docs/qupath/lib/roi/RoiTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html,1,['mask'],['mask']
Availability," Details. framework; public OpenCVDnn.Builder framework(String name); Specify the framework (used to identify the appropriate loader for the model). Parameters:; name - ; Returns:. config; public OpenCVDnn.Builder config(String pathConfig); Path to config file (if required). Parameters:; pathConfig - ; Returns:. config; public OpenCVDnn.Builder config(URI pathConfig); Path to config file (if required). Parameters:; pathConfig - ; Returns:. name; public OpenCVDnn.Builder name(String name); User-friendly name to use with this model. Parameters:; name - ; Returns:. opencl; public OpenCVDnn.Builder opencl(); Specify OpenCL target. It probably won't help, but perhaps worth a try. Returns:. opencl16; public OpenCVDnn.Builder opencl16(); Specify OpenCL target with 16-bit floating point. ; It probably won't help, but perhaps worth a try. Returns:. cuda; public OpenCVDnn.Builder cuda(); Request CUDA backend and target, if available. Returns:. cpu; public OpenCVDnn.Builder cpu(); Request CPU backend and target, if available. Returns:. cuda16; public OpenCVDnn.Builder cuda16(); Request CUDA backend and target, if available, with 16-bit floating point. Returns:. target; public OpenCVDnn.Builder target(int target); Specify the target, e.g. opencv_dnn.DNN_TARGET_CUDA. Parameters:; target - ; Returns:; See Also:. cuda(); opencl(). backend; public OpenCVDnn.Builder backend(int backend); Specify the backend, e.g. opencv_dnn.DNN_BACKEND_CUDA. Parameters:; backend - ; Returns:; See Also:. cuda(); opencl(). mean; public OpenCVDnn.Builder mean(Scalar mean); Mean values which should be subtracted from the image channels before input to the Net. Parameters:; mean - ; Returns:. scale; public OpenCVDnn.Builder scale(double scale); Scale values, by which channels should be multiplied (after mean subtraction) before input to the Net. Parameters:; scale - ; Returns:. size; public OpenCVDnn.Builder size(int width,; int height); Input width and height. Parameters:; width - ; height - ; Returns:.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html:3695,avail,available,3695,javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html,1,['avail'],['available']
Availability," Get a manager for objects of a specified class within this project. default ResourceManager.Manager<String>; getScripts(). Get a manager for scripts saved within this project. URI; getURI(). Get a URI that can be used when saving/reloading this project. String; getVersion(). The version string for this project, which can be used to distinguish new and older project ; (which may contain different information). boolean; isEmpty(). Test if the project contains any images. void; removeAllImages(Collection<ProjectImageEntry<T>> entries,; boolean removeAllData). Remove multiple images from the project, optionally including associated data. void; removeImage(ProjectImageEntry<?> entry,; boolean removeAllData). Remove an image from the project, optionally including associated data. void; setMaskImageNames(boolean maskNames). Request that entries return masked image names, rather than the 'true' image names. boolean; setPathClasses(Collection<? extends PathClass> pathClasses). Update the available PathClasses. void; syncChanges(). Save the project. Method Details. getPathClasses; List<PathClass> getPathClasses(); Get an unmodifiable list representing the PathClasses associated with this project. Returns:. getMaskImageNames; boolean getMaskImageNames(); Query whether 'true' or masked image names are being returned. Returns:; See Also:. setMaskImageNames(boolean). setMaskImageNames; void setMaskImageNames(boolean maskNames); Request that entries return masked image names, rather than the 'true' image names.; ; The purpose of this is to support studies where the user ought not to see the image names during analysis, ; reducing the potential for user bias. Parameters:; maskNames - ; See Also:. getMaskImageNames(). setPathClasses; boolean setPathClasses(Collection<? extends PathClass> pathClasses); Update the available PathClasses. Parameters:; pathClasses - ; Returns:; true if the stored values changed, false otherwise. getURI; URI getURI(); Get a URI that can be used when savi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/projects/Project.html:3323,avail,available,3323,javadoc/docs/qupath/lib/projects/Project.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/Project.html,1,['avail'],['available']
Availability," ImageRegion constrainRegion); Update a ROI by translation, optionally constraining its movement within a specified boundary.; ; Returns the same ROI if translation was not possible, or the translation resulted in no movement,; of if isTranslating() returns false.; Otherwise returns a translated version of the ROI;. Parameters:; x - ; y - ; constrainRegion - ; Returns:. finishTranslation; public boolean finishTranslation(); Notify the editor that translation should end. Returns:; true if there is any displacement between the current and starting translation points, false otherwise. isTranslating; public boolean isTranslating(); Query if a ROI is currently being translated through this editor. Returns:. ensureHandlesUpdated; public void ensureHandlesUpdated(); In the event that the current ROI has been modified elsewhere (which generally it shouldn't be); request the handles to be recomputed to avoid inconsistency. getHandles; public List<Point2> getHandles(); Get all the handles for the current ROI being edited, or an empty list if no handles are available. Returns:. hasROI; public boolean hasROI(); Returns true if this editor currently has a ROI. Returns:. getROI; public ROI getROI(); Retrieve the ROI currently being edited (may be null). Returns:. hasActiveHandle; public boolean hasActiveHandle(); Returns true if a handle is currently active, for example being reposition. Returns:; See Also:. getHandles(). resetActiveHandle; public void resetActiveHandle(); Ensure that no handle is active. requestNewHandle; public ROI requestNewHandle(double x,; double y); Request an updated ROI with a new handle inserted - useful e.g. when drawing a polygon. Parameters:; x - ; y - ; Returns:. grabHandle; public boolean grabHandle(double x,; double y,; double maxDist,; boolean shiftDown); Try to grab a ROI handle.; This will fail (return false, with an error logged) if isTranslating() returns true. Parameters:; x - ; y - ; maxDist - define the distance to search for the nearest ha",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiEditor.html:5582,avail,available,5582,javadoc/docs/qupath/lib/roi/RoiEditor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiEditor.html,1,['avail'],['available']
Availability," Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Define the requested tile size (width == height). tileSize(int) - Method in class qupath.lib.images.writers.TileExporter. Define the tile size in pixel units at the export resolution. tileSize(int, int) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Set tile width and height. tileSize(int, int) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Define the requested tile width and height. tileSize(int, int) - Method in class qupath.lib.images.writers.TileExporter. Define the horizontal and vertical tile size in pixel units at the export resolution. tileWidth(int) - Method in class qupath.lib.objects.utils.Tiler.Builder. Change the width of output tiles. Timeit - Class in qupath.lib.common. Helper class to time code execution. Timeit() - Constructor for class qupath.lib.common.Timeit;  ; Timeit.Checkpoint - Class in qupath.lib.common. Class representing a named checkpoint with a timestamp in nanoseconds. timePoint(int) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify a single timepoint to be written from a time series. timepoints(TimeUnit, double...) - Method in class qupath.lib.images.servers.ImageServerMetadata.Builder. Specify the time unit and individual time points. timepoints(TimeUnit, double...) - Method in class qupath.lib.images.servers.PixelCalibration.Builder. Specify timepoints and units. timePoints(int, int) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify a range of timepoints to be written from a time series. timestamp - Variable in class qupath.lib.gui.images.stores.AbstractImageRenderer. Timestamp variable; this should be updated by implementing classes. TINY - Enum constant in enum class qupath.lib.gui.commands.PathObjectGridView.GridDisplaySize;  ; TINY - Enum constant in enum class qupath.lib.gui.prefs.PathPrefs.FontSize;  ; title - Variable in class qupath.lib.gui.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1028356,checkpoint,checkpoint,1028356,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['checkpoint'],['checkpoint']
Availability," Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; getHelpText() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; getHelpText() - Method in interface qupath.lib.plugins.parameters.Parameter. Get a description of the meaning of the Parameter; may be displayed e.g. getHessian() - Method in class qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. Get the MultiscaleFeatures.Hessian associated with these features. getHideIfEmpty() - Method in class qupath.lib.gui.charts.HistogramChart. Query whether the chart is automatically hidden (visibility set to false) when there is no data. getHierarchy() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the object hierarchy for the current image data, or null if no image data is available. getHierarchy() - Method in class qupath.lib.images.ImageData. Get the object hierarchy. getHierarchy() - Method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. The hierarchy to which this event refers. getHistogram() - Method in class qupath.lib.gui.charts.HistogramChart.HistogramData. Get the histogram. getHistogram(ChannelDisplayInfo) - Method in class qupath.lib.display.ImageDisplay. Returns a histogram for a ChannelInfo, or none if no histogram is available (e.g. getHistogramData() - Method in class qupath.lib.gui.charts.HistogramChart. Get all histogram data objects. getHistoryWorkflow() - Method in class qupath.lib.images.ImageData. Get a workflow representing a history of the processing steps applied to the ImageData. getICCProfileBytes() - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Request the bytes for an ICC profile. getIcon() - Method in interface qupath.lib.gui.viewer.tools.PathToo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:402149,avail,available,402149,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability," Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. merge; public List<PathObject> merge(Collection<? extends PathObject> pathObjects); Calculate the result of applying the merging strategy to the input objects.; ; The output list will contain the same number of objects or fewer.; Objects that are not merged will be returned unchanged, while objects that are merged will be replaced by a new; objects with a new ROI.; ; New objects will be assigned new IDs.; Classifications will be preserved, but other measurements and properties will not be.; ; No guarantees are made about the mutability or ordering of the returned list. Parameters:; pathObjects - the input objects for which merges should be calculated; Returns:; a list of objects, with the same number or fewer than the input. createSharedTileBoundaryMerger; public static ObjectMerger createSharedTileBoundaryMerger(double sharedBoundaryThreshold); Create an object merger that uses a shared boundary IoU criterion and default overlap tolerance.; ; Objects will be merged if they a common boundary and have the same classification.; A small overlap tolerance is used to compensate for sub-pixel misalignment of tiles.; ; This is intended for post-processing a tile-based segmentation, where the tiling has been strictly enforced; (i.e. any objects have been clipped to non-overlapping tile boundaries). Parameters:; sharedBoundaryThreshold - minimum intersection-over-union (IoU) proportion of the possibly-clipped boundary; for merging; Returns:; an object merger that uses a shared boundary criterion; See Also:. createSharedTileBoundaryMerger(double, double). createSharedTileBoundaryMerger; public static ObjectMerger createSharedTileBoundaryMerger(double sharedBoundaryThreshold,; double overlapTolerance); Create an object merger that uses a shared boundary IoU criterion and overlap tolerance.; ; Objects will be merged if they ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/utils/ObjectMerger.html:2669,toler,tolerance,2669,javadoc/docs/qupath/lib/objects/utils/ObjectMerger.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/utils/ObjectMerger.html,1,['toler'],['tolerance']
Availability," Methods. Modifier and Type; Method; Description; ImageDataOp; appendOps(ImageOp... ops). Append one or more additional ImageOps sequentially. Mat; apply(ImageData<BufferedImage> imageData,; RegionRequest request). Apply the operation to the requested region of the image. List<ImageChannel>; getChannels(ImageData<BufferedImage> imageData). Get appropriate channels to reflect the output of this transform, given the input. PixelType; getOutputType(PixelType inputType). Get the output pixel type. boolean; supportsImage(ImageData<BufferedImage> imageData). Query whether this transform can be applied to the specified image. Methods inherited from interface qupath.lib.io.UriResource; getUris, getURIs, updateUris, updateURIs. Method Details. apply; Mat apply(ImageData<BufferedImage> imageData,; RegionRequest request); throws IOException; Apply the operation to the requested region of the image.; ; The data and region are provided, rather than specified pixels, because the operation might require ; additional information available within the ImageData, and optionally adjust the request ; (e.g. to incorporate padding to remove boundary artifacts).; ; Note for implementers: Any such padding must be removed from the output before it is returned. Parameters:; imageData - ; request - ; Returns:; Throws:; IOException. supportsImage; boolean supportsImage(ImageData<BufferedImage> imageData); Query whether this transform can be applied to the specified image.; Reasons why it may not be include the type or channel number being incompatible. Parameters:; imageData - ; Returns:. getChannels; List<ImageChannel> getChannels(ImageData<BufferedImage> imageData); Get appropriate channels to reflect the output of this transform, given the input. Parameters:; imageData - ; Returns:. appendOps; ImageDataOp appendOps(ImageOp... ops); Append one or more additional ImageOps sequentially.; This ImageDataOp is unchanged, and a new one is created with the additional op appended. Parameters:; ops - ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageDataOp.html:1637,avail,available,1637,javadoc/docs/qupath/opencv/ops/ImageDataOp.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ops/ImageDataOp.html,1,['avail'],['available']
Availability," MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; containsCentroid(ROI roi,; PathObject child). Check whether a child object's centroid is contained within a ROI. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; int channel,; Function<PathObject,ROI> roiFunction). Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; String channelName,; Function<PathObject,ROI> roiFunction). Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; ColorTransforms.ColorTransform transform,; Function<PathObject,ROI> roiFunction). Extract the pixels from the image using the specified transform, and applying any ROI mask. static List<PathObject>; maskObject(ROI parentROI,; PathObject child). Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. static List<PathObject>; maskObjectAndSplit(ROI parentROI,; PathObject child). Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelProcessorUtils; public PixelProcessorUtils(). Method Details. extractMaskedPixels; public static double[] extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; int channel,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. Parameters:; params - processor parameters; channel - number of th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html:1691,mask,maskObject,1691,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html,1,['mask'],['maskObject']
Availability," Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.tma; Class TMADataIO. java.lang.Object; qupath.lib.gui.tma.TMADataIO. public class TMADataIO; extends Object; Static methods for exporting TMA data, optionally with small images. Author:; Pete Bankhead; See Also:. PathIO. Field Summary; Fields. Modifier and Type; Field; Description; static final String; TMA_DEARRAYING_DATA_EXTENSION;  . Constructor Summary; Constructors. Constructor; Description; TMADataIO();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static TMAGrid; importDearrayedTMAData(File file). Import a TMA grid from an exported TMA analysis file, i.e. static void; writeTMAData(File file,; ImageData<BufferedImage> imageData). Write TMA summary data, without any image export. static void; writeTMAData(File file,; ImageData<BufferedImage> imageData,; OverlayOptions overlayOptions,; double downsampleFactor). Write TMA data in a human-readable (and viewable) way, with JPEGs and TXT/CSV files. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. TMA_DEARRAYING_DATA_EXTENSION; public static final String TMA_DEARRAYING_DATA_EXTENSION. See Also:. Constant Field Values. Constructor Details. TMADataIO; public TMADataIO(). Method Details. writeTMAData; public static void writeTMAData(File file,; ImageData<BufferedImage> imageData); throws IOException; Write TMA summary data, without any image export. Parameters:; file - ; imageData - ; Throws:; IOException. writeTMAData; public static void writeTMAData(File file,; ImageData<BufferedImage> imageData,; OverlayOptions overlayOptions,; double downsampleFactor); throws IOException; Write TMA data in a human-readable (and viewable) way, with JPEGs and TXT/CSV files. Parameters:; file - ; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMADataIO.html:1211,down,downsampleFactor,1211,javadoc/docs/qupath/lib/gui/tma/TMADataIO.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tma/TMADataIO.html,1,['down'],['downsampleFactor']
Availability," OutputHandler<S,T,U>; A functional interface for handling the output of a Processor.; ; This may (for example) add measurements to the parent object, set the classification, or create child objects. Nested Class Summary; Nested Classes. Modifier and Type; Interface; Description; static class ; OutputHandler.ObjectOutputHandler<S,T,U>;  ; static interface ; OutputHandler.OutputToObjectConverter<S,T,U>;  . Method Summary. All MethodsStatic MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default OutputHandler<S,T,U>; andThen(OutputHandler<S,T,U> after). Append a second output handler to this one. static <S,; T,; U> OutputHandler<S,T,U>; consumeOutput(). Create a basic do-nothing output handler that consumes the output with no changes. static <S,; T,; U> OutputHandler<S,T,U>; createMaskAndSplitObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter). Create an output handler that can be used to add objects to the parent object, applying the ROI mask and; splitting objects with discontinuous ROIs. static <S,; T,; U> OutputHandler<S,T,U>; createObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter). Create an output handler that can be used to add objects to the parent object, applying the ROI mask. static <S,; T,; U> OutputHandler<S,T,U>; createUnmaskedObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter). Create an output handler that can be used to add objects to the parent object. boolean; handleOutput(Parameters<S,T> params,; U output). Optional method to handle the output of a Processor. static boolean; handleOutputClassification(Parameters<?,?> params,; String output). Handle the output of a pixel processor by setting a PathClass, given by its name. static boolean; handleOutputClassification(Parameters<?,?> params,; PathClass output). Handle the output of a pixel processor by setting a PathClass. static boolean; handleOutputMeasurements(Parameters<?,?> para",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html:1766,mask,mask,1766,javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html,1,['mask'],['mask']
Availability," Parameters:; a - ; r - ; g - ; b - ; Returns:; packed ARGB value; See Also:. packClippedARGB(int, int, int, int). packClippedARGB; public static int packClippedARGB(int a,; int r,; int g,; int b); Make a packed ARGB value from specified input values, clipping to the range 0-255.; ; Input a, r, g, and b should be in the range 0-255, but if they are not they are clipped to the closest valid value.; ; Warning! Note the order of the input values.; This differs from the (deprecated) method makeRGBA(int, int, int, int). Parameters:; a - ; r - ; g - ; b - ; Returns:; packed ARGB value; See Also:. packARGB(int, int, int, int). do8BitRangeCheck; public static int do8BitRangeCheck(int v); Clip an input value to be an integer in the range 0-255. Parameters:; v - ; Returns:. do8BitRangeCheck; public static int do8BitRangeCheck(float v); Clip an input value to be an integer in the range 0-255 (with rounding down). Parameters:; v - ; Returns:. do8BitRangeCheck; public static int do8BitRangeCheck(double v); Clip an input value to be an integer in the range 0-255 (with rounding down). Parameters:; v - ; Returns:. alpha; public static int alpha(int argb); Extract the 8-bit alpha value from a packed ARGB value. Parameters:; argb - ; Returns:. red; public static int red(int rgb); Extract the 8-bit red value from a packed RGB value. Parameters:; rgb - ; Returns:. green; public static int green(int rgb); Extract the 8-bit green value from a packed RGB value. Parameters:; rgb - ; Returns:. blue; public static int blue(int rgb); Extract the 8-bit blue value from a packed RGB value. Parameters:; rgb - ; Returns:. makeScaledRGB; public static int makeScaledRGB(int rgb,; double scale); Scale the RGB channels for a color by a fixed amount.; ; This is useful for brightening/darkening an input color. Parameters:; rgb - ; scale - ; Returns:. clip255; public static int clip255(double val); Convert a double value to an int, flooring and clipping to the range 0-255. Parameters:; val - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/ColorTools.html:9411,down,down,9411,javadoc/docs/qupath/lib/common/ColorTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/ColorTools.html,1,['down'],['down']
Availability," PathObjectSelectionModel; extends Object; Model for handling selection of single and multiple PathObjects. Author:; Pete Bankhead; See Also:. PathObjectHierarchy. Constructor Summary; Constructors. Constructor; Description; PathObjectSelectionModel();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addPathObjectSelectionListener(PathObjectSelectionListener listener). Add listener for selection changes. void; clearSelection(). Clear selection so that no objects are selected. void; deselectObject(PathObject pathObject). Ensure that the specified object is removed from the selection. void; deselectObjects(Collection<? extends PathObject> pathObjects). Ensure the specified objects are deselected. PathObject; getSelectedObject(). Get the current primary selected object. Set<PathObject>; getSelectedObjects(). Get an unmodifiable set containing all the currently-selected objects. ROI; getSelectedROI(). Get the ROI of the selected object, if available, or null. boolean; isSelected(PathObject pathObject). Query whether a specific object is selected. boolean; noSelection(). Returns true if no objects are selected. void; removePathObjectSelectionListener(PathObjectSelectionListener listener). Remove listener for selection changes. void; selectObjects(Collection<? extends PathObject> pathObjects). Ensure the specified objects are selected. void; setSelectedObject(PathObject pathObject). Set the specified object to be selected, deselecting all others. void; setSelectedObject(PathObject pathObject,; boolean addToSelection). Select the specified object to be the primary selected object, optionally retaining the ; existing selected objects. void; setSelectedObjects(Collection<? extends PathObject> pathObjects,; PathObject primarySelectedObject). Specify a collection of objects to be selected, and which among them should be the primary. boolean; singleSelection(). Returns true if only one object has been selected, accessi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectSelectionModel.html:1519,avail,available,1519,javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectSelectionModel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectSelectionModel.html,1,['avail'],['available']
Availability," Property that specifies whether grayscale lookup tables should be preferred to color lookup tables. useGrayscaleLuts() - Method in class qupath.lib.display.ImageDisplay. Get the value of ImageDisplay.useGrayscaleLutProperty(). useInstanceLabels() - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Request that unique labels are used for all objects, rather than classifications. useInstanceLabels(boolean) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Optionally request that unique labels are used for all objects, rather than classifications. useInvertedBackground() - Method in class qupath.lib.display.ImageDisplay. Get the value of ImageDisplay.useInvertedBackgroundProperty(). useInvertedBackgroundProperty() - Method in class qupath.lib.display.ImageDisplay. Property that specifies whether the background should be inverted (i.e. useLogWriters() - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the output and error writers to append to the default logger. useLogWriters(Logger) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the output and error writers to append to the specified logger. useMicrons() - Method in class qupath.lib.gui.viewer.GridLines. Query whether to use calibrated units when calculating coordinates for any counting grid. useMultipoint - Variable in class qupath.lib.gui.panes.PreferencePane.DrawingPreferences;  ; useOverlays - Variable in class qupath.process.gui.WandToolEventHandler.WandPreferences;  ; useParallelization - Variable in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension.BioFormatsPreferences;  ; usePixelSnappingProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. If true, pixels should be snapped to integer coordinates when using the drawing tools. UserDirectoryManager - Class in qupath.lib.gui. Helper class for managing a user directory, and associated subdirectories. userDirectoryProperty() - Method in class qupath.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1073377,error,error,1073377,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['error'],['error']
Availability," Read ImageJ Rois from a .roi or a RoiSet.zip file. Parameters:; file - ; Returns:. containsImageJRois; public static boolean containsImageJRois(File file); Check whether a file is likely to contain an ImageJ ROI, based upon its extension ; or .zip file contents. Parameters:; file - ; Returns:; true if the file seems to contain ImageJ ROIs, false otherwise. calibrateObject; public static void calibrateObject(PathObject pathObject,; Roi roi); Set the properties of a PathObject based upon an ImageJ Roi.; This attempts to extract as much useful information as is relevant, including name, color and group. Parameters:; pathObject - ; roi - . convertToAnnotation; @Deprecated; public static PathObject convertToAnnotation(ImagePlus imp,; ImageServer<?> server,; Roi roi,; double downsampleFactor,; ImagePlane plane); Deprecated.; use instead convertToAnnotation(Roi, double, double, double, ImagePlane). Create an annotation object for a specific ImageJ Roi. Parameters:; imp - ; server - ; roi - ; downsampleFactor - ; plane - ; Returns:. convertToDetection; @Deprecated; public static PathObject convertToDetection(ImagePlus imp,; ImageServer<?> server,; Roi roi,; double downsampleFactor,; ImagePlane plane); Deprecated.; use instead convertToDetection(Roi, double, double, double, ImagePlane). Create an detection object for a specific ImageJ Roi. Parameters:; imp - ; server - ; roi - ; downsampleFactor - ; plane - ; Returns:. convertLabelsToCells; public static SortedMap<Number,PathObject> convertLabelsToCells(ImageProcessor ipNuclei,; ImageProcessor ipCells,; Calibration cal,; double downsample,; ImagePlane plane); Convert integer labeled images into cell objects. Parameters:; ipNuclei - labels corresponding to cell nuclei; non-zero values here must be identical to the values in ipCells; ipCells - labels corresponding to full cell areas; cal - a Calibration object used to aid conversion between ImageJ and QuPath ROIs; downsample - the downsample value for the ImageProcessors, used",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:17772,down,downsampleFactor,17772,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,1,['down'],['downsampleFactor']
Availability," Read an image patch, optionally with a fixed size and using zero-padding if required. static Mat; readPatch(ImageServer<BufferedImage> server,; ROI roi,; double downsample,; int width,; int height,; int borderPadding). Read an image patch, optionally with a fixed size. static <T extends DnnModel>void; registerDnnModel(Class<T> subtype,; String name). Deprecated.; since v0.4.0; use DnnModels.registerDnnModel(Class, String) instead. static Mat; segment(SegmentationModel model,; Mat input,; Mat output). Apply a segmentation model to an image region. static Mat; segment(SegmentationModel model,; ImageServer<BufferedImage> server,; RegionRequest request). Apply a segmentation model to an image region. static void; setUseCuda(boolean requestUseCuda). Request that CUDA is used. static String; summarize(Net net,; int width,; int height,; int nChannels). Create a (multiline) summary String for a Net, given the specified image input dimensions. static boolean; useCuda(). Returns true if CUDA is available and requested. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DnnTools; public DnnTools(). Method Details. registerDnnModel; @Deprecated; public static <T extends DnnModel> void registerDnnModel(Class<T> subtype,; String name); Deprecated.; since v0.4.0; use DnnModels.registerDnnModel(Class, String) instead. Register a new DnnModel class for JSON serialization/deserialization. Type Parameters:; T - ; Parameters:; subtype - ; name - . builder; public static OpenCVDnn.Builder builder(String modelPath); Initiative building and configuring an OpenCVDnn.; ; Note that DnnModels.buildModel(DnnModelParams) should generally be used instead ; to create an arbitrary DnnModel, since it can potentially use different libraries ; or frameworks. Parameters:; modelPath - ; Returns:; See Also:. DnnModels.buildModel(DnnModelParams). isCudaAvailable; public static boolean isCudaAvaila",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html:4751,avail,available,4751,javadoc/docs/qupath/opencv/dnn/DnnTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html,1,['avail'],['available']
Availability," Return the rotation property of this viewer. void; selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have changed. void; setActiveTool(PathTool tool). Set the active PathTool for input to this viewer. void; setBorderColor(Color color). Set the border color for this viewer. void; setCenterPixelLocation(double x,; double y). Set the image pixel to display in the center of the viewer (using image pixel coordinates at the full-resolution). void; setCursor(Cursor cursor). Set the requested cursor to display in this viewer. void; setCustomPixelLayerOverlay(PathOverlay pathOverlay). Optionally set a custom overlay to use for the pixel layer. void; setDoFasterRepaint(boolean fasterRepaint). Set flag to indicate that repaints should prefer speed over accuracy. void; setDownsampleFactor(double downsampleFactor). Set the downsample factor for this viewer. void; setDownsampleFactor(double downsampleFactor,; double cx,; double cy). Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards. void; setDownsampleFactor(double downsampleFactor,; double cx,; double cy,; boolean clipToMinMax). Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards. void; setGamma(double gamma). Set the gamma value for this viewer. void; setImageData(ImageData<BufferedImage> imageDataNew). Set the current image for this viewer. void; setMagnification(double magnification). Set the downsample factor based upon magnification values. void; setMinimumRepaintSpacingMillis(long repaintSpacingMillis). Prevent frequent repaints (temporarily) by setting a minimum time that must have elapsed; after the previous repaint for a new one to be triggered. void; setRotation(double theta). Set the rotation; angle in radians. void; setSelectedObject(PathObject pathObject). Set selected object in the cur",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:11248,down,downsampleFactor,11248,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,1,['down'],['downsampleFactor']
Availability," Returns true if a BufferedImage type represents an 8-bit color image. static BufferedImage; resize(BufferedImage img,; int finalWidth,; int finalHeight,; boolean smoothInterpolate). Resize the image to have the requested width/height, using area averaging and bilinear interpolation. static void; setValues(DataBuffer buffer,; double val). Set all values in a DataBuffer. static void; swapRGBOrder(BufferedImage img,; String order). Swap the order of pixels in an RGB image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createROIMask; public static BufferedImage createROIMask(int width,; int height,; ROI roi,; RegionRequest request); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for mask; request - region that the mask should correspond to, including the origin (x & y) and downsample factor to use.; Returns:. createROIMask; public static BufferedImage createROIMask(ROI roi,; double downsample); Create a ROI mask using the minimal bounding box for the ROI. Parameters:; roi - ; downsample - ; Returns:. createROIMask; public static BufferedImage createROIMask(int width,; int height,; ROI roi,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for mask; xOrigin - pixel x coordinate of the top left of the region to include in the mask.; yOrigin - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i.e. the amount to scale.; Returns:. cre",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:4527,mask,mask,4527,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,5,"['down', 'mask']","['downsample', 'mask']"
Availability," Returns:. getResolution; public PixelCalibration getResolution(); Get the resolution at which the training should occur. Returns:. setResolution; public void setResolution(PixelCalibration cal); Set the resolution at which the training should occur. Parameters:; cal - . setFeatureOp; public void setFeatureOp(ImageDataOp featureOp); Set the ImageDataOp used to calculate features. Parameters:; featureOp - . setBoundaryStrategy; public void setBoundaryStrategy(BoundaryStrategy strategy); Set the strategy for handling the boundaries of area annotations. Parameters:; strategy - . getBoundaryStrategy; public BoundaryStrategy getBoundaryStrategy(); Get the strategy for handling the boundaries of area annotations. Returns:. createTrainingData; public PixelClassifierTraining.ClassifierTrainingData createTrainingData(ImageData<BufferedImage> imageData); throws IOException; Create training data, using a label map automatically generated from the available classifications. Parameters:; imageData - ; Returns:; Throws:; IOException. createTrainingData; public PixelClassifierTraining.ClassifierTrainingData createTrainingData(Collection<ImageData<BufferedImage>> imageData); throws IOException; Create training data, using a label map automatically generated from the available classifications. Parameters:; imageData - ; Returns:; Throws:; IOException. createTrainingDataForLabelMap; public PixelClassifierTraining.ClassifierTrainingData createTrainingDataForLabelMap(Collection<ImageData<BufferedImage>> imageData,; Map<PathClass,Integer> labels); throws IOException; Get a classifier training map, using a predefined label map (which determines which classifications to use). Parameters:; imageData - collection of ImageData used for training; labels - map linking classifications to labels in the output; may be null, in which case a label map will be generated from the data; Returns:; a PixelClassifierTraining.ClassifierTrainingData object representing training data; Throws:; IOException. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.html:4081,avail,available,4081,javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.html,1,['avail'],['available']
Availability," Roi. Parameters:; roi - ; pathImage - ; Returns:. convertToPolygonROI; public static PolygonROI convertToPolygonROI(PolygonRoi roi,; Calibration cal,; double downsampleFactor,; ImagePlane plane); Convert an ImageJ PolygonRoi to a QuPath PolygonROI. Parameters:; roi - ; cal - ; downsampleFactor - ; plane - ; Returns:. convertToIJRoi; public static <T extends PathImage<ImagePlus>> Roi convertToIJRoi(ROI pathROI,; double xOrigin,; double yOrigin,; double downsampleFactor); Convert a QuPath ROI to an ImageJ Roi. Type Parameters:; T - ; Parameters:; pathROI - ; xOrigin - x-origin indicating relationship of ImagePlus to the original image, as stored in ImageJ Calibration object; yOrigin - y-origin indicating relationship of ImagePlus to the original image, as stored in ImageJ Calibration object; downsampleFactor - downsample factor at which the ImagePlus was extracted from the full-resolution image; Returns:. convertToROI; public static ROI convertToROI(Roi roi,; double xOrigin,; double yOrigin,; double downsampleFactor,; ImagePlane plane); Create a ROI from an ImageJ Roi. Parameters:; roi - ImageJ Roi; xOrigin - x-origin, as stored in an ImageJ Calibration object; yOrigin - y-origin, as stored in an ImageJ Calibration object; downsampleFactor - ; plane - plane defining c, z and t indices; Returns:. convertToOpticalDensitySum; public static FloatProcessor convertToOpticalDensitySum(ColorProcessor cp,; double maxRed,; double maxGreen,; double maxBlue); Calculate optical density values for the red, green and blue channels, then add these all together. Parameters:; cp - ; maxRed - ; maxGreen - ; maxBlue - ; Returns:. colorDeconvolve; public static FloatProcessor[] colorDeconvolve(ColorProcessor cp,; ColorDeconvolutionStains stains); Apply color deconvolution, outputting 3 'stain' images in the same order as the stain vectors. Parameters:; cp - input RGB color image; stains - color deconvolution stain vectors; Returns:; array containing three FloatProcessors, representing the",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:26004,down,downsampleFactor,26004,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,1,['down'],['downsampleFactor']
Availability," ScriptParameters.Builder; useCompiled(boolean useCompiled). Request that the script is compiled before being evaluated, ; or a previously compiled version is used where available. ScriptParameters.Builder; useLogWriters(). Set the output and error writers to append to the default logger. ScriptParameters.Builder; useLogWriters(org.slf4j.Logger logger). Set the output and error writers to append to the specified logger. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. setDefaultImports; public ScriptParameters.Builder setDefaultImports(Collection<Class<?>> imports). setDefaultStaticImports; public ScriptParameters.Builder setDefaultStaticImports(Collection<Class<?>> imports). setFile; public ScriptParameters.Builder setFile(File file). setScript; public ScriptParameters.Builder setScript(String script). setSystemWriters; public ScriptParameters.Builder setSystemWriters(); Set the output and error writers to use System.out and System.err. Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(org.slf4j.Logger logger); Set the output and error writers to append to the specified logger. Parameters:; logger - ; Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(); Set the output and error writers to append to the default logger. Returns:. setWriter; public ScriptParameters.Builder setWriter(Writer writer); Set the main output writer. Parameters:; writer - ; Returns:. setErrorWriter; public ScriptParameters.Builder setErrorWriter(Writer writer); Set the main error writer. Parameters:; writer - ; Returns:. setBatchSize; public ScriptParameters.Builder setBatchSize(int batch); Set the batch size for batch processing (default is 1). Parameters:; batch - ; Returns:. setBatchIndex; public ScriptParameters.Builder setBatchIndex(int ind); Set the current image index for batch processing (default is 0). Parameters:; ind - ; Returns:. setBat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html:3185,error,error,3185,javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,1,['error'],['error']
Availability," ScriptParameters.Builder; useLogWriters(). Set the output and error writers to append to the default logger. ScriptParameters.Builder; useLogWriters(org.slf4j.Logger logger). Set the output and error writers to append to the specified logger. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. setDefaultImports; public ScriptParameters.Builder setDefaultImports(Collection<Class<?>> imports). setDefaultStaticImports; public ScriptParameters.Builder setDefaultStaticImports(Collection<Class<?>> imports). setFile; public ScriptParameters.Builder setFile(File file). setScript; public ScriptParameters.Builder setScript(String script). setSystemWriters; public ScriptParameters.Builder setSystemWriters(); Set the output and error writers to use System.out and System.err. Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(org.slf4j.Logger logger); Set the output and error writers to append to the specified logger. Parameters:; logger - ; Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(); Set the output and error writers to append to the default logger. Returns:. setWriter; public ScriptParameters.Builder setWriter(Writer writer); Set the main output writer. Parameters:; writer - ; Returns:. setErrorWriter; public ScriptParameters.Builder setErrorWriter(Writer writer); Set the main error writer. Parameters:; writer - ; Returns:. setBatchSize; public ScriptParameters.Builder setBatchSize(int batch); Set the batch size for batch processing (default is 1). Parameters:; batch - ; Returns:. setBatchIndex; public ScriptParameters.Builder setBatchIndex(int ind); Set the current image index for batch processing (default is 0). Parameters:; ind - ; Returns:. setBatchSaveResult; public ScriptParameters.Builder setBatchSaveResult(boolean doSave); Specify whether the script that is running should save results or not. Parameters:; doSave - ; Ret",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html:3349,error,error,3349,javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,1,['error'],['error']
Availability," See Also:. createBinaryMask(Mat, DoublePredicate). createBinaryMask; public static Mat createBinaryMask(Mat mat,; DoublePredicate predicate); Create a binary mask (0, 255 values) by applying a predicate to pixel values. Parameters:; mat - the input image; predicate - the predicate to apply to each pixel; Returns:; the mask; See Also:. createMask(Mat, DoublePredicate, double, double). replaceValues; public static void replaceValues(Mat mat,; double originalValue,; double newValue); Replace a specific value in an array.; ; If the value to replace is NaN, use instead replaceNaNs(Mat, double). Parameters:; mat - array; originalValue - value to replace; newValue - value to include in the output; See Also:. replaceNaNs(Mat, double); fill(Mat, Mat, double). replaceNaNs; public static void replaceNaNs(Mat mat,; double newValue); Replace NaNs in a floating point array. Parameters:; mat - array; newValue - replacement value. fill; public static void fill(Mat mat,; Mat mask,; double value); Fill the pixels of an image with a specific value, corresponding to a mask. Parameters:; mat - input image; mask - binary mask; value - replacement value; See Also:. fill(Mat, double). fill; public static void fill(Mat mat,; double value); Fill the pixels of an image with a specific value. Parameters:; mat - input image; value - fill value; See Also:. fill(Mat, Mat, double). splitChannels; public static List<Mat> splitChannels(Mat mat); Split channels from a Mat.; May be more convenient than OpenCV's built-in approach. Parameters:; mat - ; Returns:; a list of Mat, containing each split channel in order. mergeChannels; public static Mat mergeChannels(Collection<? extends Mat> channels,; Mat dest); throws IllegalArgumentException; Merge channels from a multichannel Mat.; May be more convenient than OpenCV's built-in approach. Parameters:; channels - separate channels; dest - optional destination (may be null); Returns:; merged Mat, which will be the same as dest if provided; Throws:; Illegal",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:16337,mask,mask,16337,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html,2,['mask'],['mask']
Availability," Specify the interpretation of channels. If this is ImageServerMetadata.ChannelType.CLASSIFICATION it will also ; set the channels to be the default for this kind of server, i.e. a single channel with ImageServerMetadata.DEFAULT_CLASSIFICATION_LABELS_CHANNEL. Parameters:; type - ; Returns:. classificationLabels; public ImageServerMetadata.Builder classificationLabels(Map<Integer,PathClass> classificationLabels); Specify the interpretation of classification labels. Only relevant for ImageServerMetadata.ChannelType.CLASSIFICATION. Parameters:; classificationLabels - ; Returns:. rgb; public ImageServerMetadata.Builder rgb(boolean isRGB); Specify that the image stores pixels in (A)RGB form. Parameters:; isRGB - ; Returns:. pixelType; public ImageServerMetadata.Builder pixelType(PixelType pixelType); Specify the bit-depth of the image. Parameters:; pixelType - ; Returns:. levelsFromDownsamples; public ImageServerMetadata.Builder levelsFromDownsamples(double... downsamples); Specify downsample values for pyramidal levels.; The appropriate image sizes will be computed based upon these. Parameters:; downsamples - ; Returns:; See Also:. levels(Collection). levels; public ImageServerMetadata.Builder levels(Collection<ImageServerMetadata.ImageResolutionLevel> levels); Specify resolution levels, where the largest image should come first.; ; Normally level[0].width == width && level[0].height == height, but this is not ; strictly required; for example, it is permissible for the server to supply only resolutions lower than ; the full image if these ought to be upsampled elsewhere.; ; In other words, the width and height encode the size of the image as it should be ; interpreted, while the levels refer to the size of the rasters actually available here. Parameters:; levels - ; Returns:. sizeZ; public ImageServerMetadata.Builder sizeZ(int sizeZ); Specify the number of z-slices. Parameters:; sizeZ - ; Returns:. sizeT; public ImageServerMetadata.Builder sizeT(int sizeT); Specify the ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.Builder.html:6239,down,downsamples,6239,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.Builder.html,2,['down'],"['downsample', 'downsamples']"
Availability," Swap the order of pixels in an RGB image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createROIMask; public static BufferedImage createROIMask(int width,; int height,; ROI roi,; RegionRequest request); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for mask; request - region that the mask should correspond to, including the origin (x & y) and downsample factor to use.; Returns:. createROIMask; public static BufferedImage createROIMask(ROI roi,; double downsample); Create a ROI mask using the minimal bounding box for the ROI. Parameters:; roi - ; downsample - ; Returns:. createROIMask; public static BufferedImage createROIMask(int width,; int height,; ROI roi,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for mask; xOrigin - pixel x coordinate of the top left of the region to include in the mask.; yOrigin - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i.e. the amount to scale.; Returns:. createROIMask; public static BufferedImage createROIMask(Shape shape,; double downsample); Create a Shape mask using the minimal bounding box for the Shape. Parameters:; shape - ; downsample - ; Returns:. createShapeMask; public static BufferedImage createShapeMask(int width,; int height,; Shape shape,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:5055,down,downsample,5055,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,2,"['down', 'mask']","['downsample', 'mask']"
Availability," System property controlling whether memoization is allowed or not. allowMemoization() - Static method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Check whether memoization should be allowed or not. allowSmoothInterpolation() - Method in class qupath.lib.images.servers.AbstractTileableImageServer. Returns true if this server is permitted to use smooth interpolation when resizing. allredMinPercentagePositiveProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. The minimum positive percentage of cells for Allred proportion score to be non-zero. allTimePoints() - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Request that all timepoints of a time series will be written. allZSlices() - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Request that all z-slices are exported. almostTheSame(double, double, double) - Static method in class qupath.lib.common.GeneralTools. Test if two doubles are approximately equal, within a specified tolerance. alpha(int) - Static method in class qupath.lib.common.ColorTools. Extract the 8-bit alpha value from a packed ARGB value. ALWAYS - Enum constant in enum class qupath.lib.gui.tools.CommandFinderTools.CommandBarDisplay. Always display. alwaysPaintSelected - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; alwaysPaintSelectedObjectsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Always paint selected objects in the viewer, even if the opacity setting is 0. alwaysPromptForObjects() - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; alwaysPromptForObjects() - Method in class qupath.lib.plugins.AbstractInteractivePlugin;  ; alwaysPromptForObjects() - Method in interface qupath.lib.plugins.PathInteractivePlugin. If this returns true, then a prompt is requested every time the command is run - ; even if there are valid parent objects already selected. AnalyzeMenuActions - Class in qupath.lib.gu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:36289,toler,tolerance,36289,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['toler'],['tolerance']
Availability," TileRequest) - Static method in class qupath.imagej.processing.SimpleThresholding. Generate a QuPath ROI by thresholding an image channel image, deriving coordinates from a TileRequest. thumbnailCache - Variable in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; TiffWriterIJ - Class in qupath.imagej.images.writers. ImageWriter implementation to write TIFF images using ImageJ. TiffWriterIJ() - Constructor for class qupath.imagej.images.writers.TiffWriterIJ;  ; tile(int, int) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set a default tiler to use, with a specified tile size. tile(TileRequest) - Method in class qupath.lib.experimental.pixels.Parameters.Builder. Specify the tile relevant for processing. tileAvailable(String, ImageRegion, BufferedImage) - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; tileAvailable(String, ImageRegion, T) - Method in interface qupath.lib.gui.images.stores.TileListener. Notify a listener that an image tile has been received read & is available. tileBrush - Variable in class qupath.lib.gui.panes.PreferencePane.DrawingPreferences;  ; tileCache - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; tileCachePercentageProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Requested percentage of available memory to use for tile caching. TileClassificationsToAnnotationsPlugin<T> - Class in qupath.lib.plugins.objects. Plugin to merge classified tiles into annotation objects. TileClassificationsToAnnotationsPlugin() - Constructor for class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; TileExporter - Class in qupath.lib.images.writers. Helper class for exporting image tiles, typically for further analysis elsewhere or for training up an AI algorithm. TileExporter(ImageData<BufferedImage>) - Constructor for class qupath.lib.images.writers.TileExporter. Create a builder to export tiles. tileHeight(int) - Method in class qupath.lib.object",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1024848,avail,available,1024848,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability," Type; Interface; Description; static class ; OutputHandler.ObjectOutputHandler<S,T,U>;  ; static interface ; OutputHandler.OutputToObjectConverter<S,T,U>;  . Method Summary. All MethodsStatic MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default OutputHandler<S,T,U>; andThen(OutputHandler<S,T,U> after). Append a second output handler to this one. static <S,; T,; U> OutputHandler<S,T,U>; consumeOutput(). Create a basic do-nothing output handler that consumes the output with no changes. static <S,; T,; U> OutputHandler<S,T,U>; createMaskAndSplitObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter). Create an output handler that can be used to add objects to the parent object, applying the ROI mask and; splitting objects with discontinuous ROIs. static <S,; T,; U> OutputHandler<S,T,U>; createObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter). Create an output handler that can be used to add objects to the parent object, applying the ROI mask. static <S,; T,; U> OutputHandler<S,T,U>; createUnmaskedObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter). Create an output handler that can be used to add objects to the parent object. boolean; handleOutput(Parameters<S,T> params,; U output). Optional method to handle the output of a Processor. static boolean; handleOutputClassification(Parameters<?,?> params,; String output). Handle the output of a pixel processor by setting a PathClass, given by its name. static boolean; handleOutputClassification(Parameters<?,?> params,; PathClass output). Handle the output of a pixel processor by setting a PathClass. static boolean; handleOutputMeasurements(Parameters<?,?> params,; Map<String,? extends Number> output). Handle the output of a pixel processor by adding measurements to the path object. default OutputHandler<S,T,U>; orElse(OutputHandler<S,T,U> after). Append a second output handler to this one, but only call ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html:2039,mask,mask,2039,javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html,1,['mask'],['mask']
Availability," all ImageServerBuilder.UriImageSupport that claim to be able to open the specified URI with optional args. static TypeAdapterFactory; getImageServerTypeAdapterFactory(boolean includeMetadata). Get a TypeAdapterFactory for ImageServers, optionally including metadata in the serialized ; form of the server. static ImageServerBuilder.UriImageSupport<BufferedImage>; getImageSupport(URI uri,; String... args). Get the ImageServerBuilder.UriImageSupport that is best able to open the specified image with optional args. static ImageServerBuilder.UriImageSupport<BufferedImage>; getImageSupport(ImageServerBuilder<BufferedImage> builder,; URI uri,; String... args). Get the ImageServerBuilder.UriImageSupport associated with an ImageServerBuilder, or null if the builder does not support the image. static TypeAdapterFactory; getServerBuilderFactory(). Get a TypeAdapterFactory to handle ServerBuilders. static ImageServer<BufferedImage>; pyramidalize(ImageServer<BufferedImage> server,; double... downsamples). Wrap an ImageServer to dynamically generate a pyramid. static ImageServer<BufferedImage>; pyramidalizeTiled(ImageServer<BufferedImage> server,; int tileWidth,; int tileHeight,; double... downsamples). Wrap an ImageServer to dynamically generate a pyramid, using specified tile sizes. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageServers; public ImageServers(). Method Details. getServerBuilderFactory; public static TypeAdapterFactory getServerBuilderFactory(); Get a TypeAdapterFactory to handle ServerBuilders. Returns:. pyramidalize; public static ImageServer<BufferedImage> pyramidalize(ImageServer<BufferedImage> server,; double... downsamples); Wrap an ImageServer to dynamically generate a pyramid. This does not involve writing any new image, ; and may be rather processor and memory-intensive as high-resolution tiles must be accessed to fulfil ; low-resolution r",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServers.html:2232,down,downsamples,2232,javadoc/docs/qupath/lib/images/servers/ImageServers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServers.html,1,['down'],['downsamples']
Availability," all channels of an image. static Mat; filterSingleZ(List<Mat> mats,; double[] kernel,; int ind3D,; int border). Apply a filter along the 'list' dimension for a list of Mats, computing the value ; for a single entry. static List<Mat>; filterZ(List<Mat> mats,; Mat kernelZ,; int ind3D,; int border). Filter filter along entries in the input list. static Collection<OpenCVTools.IndexedPixel>; findMaxima(Mat mat,; Mat mask). Find maxima within an image. static Mat; findRegionalMaxima(Mat mat). Get the regional maxima within a Mat, providing the output as a labeled image. static void; floor(Mat mat). Floor values in a floating point Mat. static void; gaussianFilter(Mat mat,; double sigma). Apply a 2D Gaussian filter to all channels of an image, with symmetric boundary padding. static void; gaussianFilter(Mat mat,; double sigma,; int borderType). Apply a 2D Gaussian filter to all channels of an image. static Mat; getCircularStructuringElement(int radius). Deprecated.; createDisk(int, boolean) gives more reliable shapes. static double[]; getGaussianDeriv(double sigma,; int order,; int length). Get filter coefficients for a 1D Gaussian (derivative) kernel. static Mat; getGaussianDerivKernel(double sigma,; int order,; boolean doColumn). Get filter coefficients for a 1D Gaussian (derivative) kernel. static List<OpenCVTools.IndexedPixel>; getMaskedPixels(Mat mat,; Mat mask). Extract all the masked pixels within an image. static int; getOpenCVPixelType(PixelType pixelType). Get the OpenCV type code corresponding to a PixelType. static Mat; hConcat(Collection<? extends Mat> mats,; Mat dest). Horizontal concatenation for a Mat. static Mat; imageToMat(BufferedImage img). Convert a BufferedImage to an OpenCV Mat. static Mat; imageToMatBGR(BufferedImage img,; boolean includeAlpha). Extract 8-bit unsigned pixels from a BufferedImage as a multichannel BGR(A) Mat. static Mat; imageToMatRGB(BufferedImage img,; boolean includeAlpha). Extract 8-bit unsigned pixels from a BufferedImage as a ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:6536,reliab,reliable,6536,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html,1,['reliab'],['reliable']
Availability," analyzed. Specified by:; getAssociatedImageList in interface ImageServer<T>; Returns:; See Also:. ImageServer.getAssociatedImage(String). getAssociatedImage; public T getAssociatedImage(String name); Description copied from interface: ImageServer; Get the image for a given associated image name. Specified by:; getAssociatedImage in interface ImageServer<T>; Parameters:; name - ; Returns:; See Also:. ImageServer.getAssociatedImageList(). getChannel; public ImageChannel getChannel(int channel); Description copied from interface: ImageServer; Request information for one channel (0-based index). Specified by:; getChannel in interface ImageServer<T>; Parameters:; channel - ; Returns:; See Also:. ImageServerMetadata.getChannels(). getDefaultThumbnail; public T getDefaultThumbnail(int z,; int t); throws IOException; Description copied from interface: ImageServer; Get the default thumbnail for a specified z-slice and timepoint.; ; This should be the lowest resolution image that is available in the case of the multiresolution ; image, or else the full image. For large datasets, it may be used to determine basic statistics or ; histograms without requiring every pixel to be visited in the full resolution image. Specified by:; getDefaultThumbnail in interface ImageServer<T>; Parameters:; z - ; t - ; Returns:; Throws:; IOException. getTileRequestManager; public TileRequestManager getTileRequestManager(); Description copied from interface: ImageServer; Get a TileRequestManager that can be used to identify image tiles that may be efficiently requested; from this ImageServer.; ; This is useful because managing arbitrary RegionRequests can result in inefficiencies if a request ; straddles multiple tiles unnecessarily. Also, it can be used to help ensure consistency whenever ; requesting regions at different resolutions, where rounding errors might otherwise occur.; ; Note that the TileRequestManager is not guaranteed to remain the same for the lifecycle of the server. ; For exampl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html:11797,avail,available,11797,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,1,['avail'],['available']
Availability," and height of the current image data, on the default plane (z-slice, time point). Parameters:; setSelected - if true, select the object that was created after it is added to the hierarchy. createSelectAllObject; @Deprecated; public static void createSelectAllObject(boolean setSelected,; int z,; int t); Deprecated.; v0.4.0 use createFullImageAnnotation(boolean, int, int) instead. Create an annotation for the entire width and height of the current image data, on the default plane (z-slice, time point). Parameters:; setSelected - if true, select the object that was created after it is added to the hierarchy; z - z-slice index for the annotation; t - timepoint index for the annotation. createAllFullImageAnnotations; public static List<PathObject> createAllFullImageAnnotations(boolean setSelected); Create annotation around the full image for the current image, on all z-slices and timepoints. Parameters:; setSelected - if true, set the annotations to be selected when they are created; Returns:; the annotations that were created, or an empty list if no image data was available; Since:; v0.4.0; See Also:. createAllFullImageAnnotations(ImageData, boolean). createAllFullImageAnnotations; public static List<PathObject> createAllFullImageAnnotations(ImageData<?> imageData,; boolean setSelected); Create annotation around the full image for the specified image, on all z-slices and timepoints. Parameters:; imageData - the image data; setSelected - if true, set the annotations to be selected when they are created; Returns:; the annotations that were created, or an empty list if no image data was available; Since:; v0.4.0. createFullImageAnnotation; public static PathObject createFullImageAnnotation(boolean setSelected); Create an annotation around the full image for the current image, on the default (first) z-slice and timepoint. Parameters:; setSelected - if true, set the annotation to be selected when it is created; Returns:; the annotation that was created, or null if no image ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:70856,avail,available,70856,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['avail'],['available']
Availability," annotations. Parameters:; filter - the filter that determines whether an object will be included or not; Returns:; See Also:. useAnnotations(). grayscale; public LabeledImageServer.Builder grayscale(); Use grayscale LUT, rather than deriving colors from classifications.; This can streamline import in software that automatically converts paletted images to RGB. Returns:; Since:; v0.4.0; See Also:. grayscale(boolean). grayscale; public LabeledImageServer.Builder grayscale(boolean grayscaleLut); Optionally use grayscale LUT, rather than deriving colors from classifications.; This can streamline import in software that automatically converts paletted images to RGB. Parameters:; grayscaleLut - ; Returns:; Since:; v0.4.0; See Also:. grayscale(). downsample; public LabeledImageServer.Builder downsample(double downsample); Specify downsample factor. This is very important because it defines ; the resolution at which shapes will be drawn and the line thickness is determined. Parameters:; downsample - ; Returns:. tileSize; public LabeledImageServer.Builder tileSize(int tileSize); Set tile width and height (square tiles). Parameters:; tileSize - ; Returns:. tileSize; public LabeledImageServer.Builder tileSize(int tileWidth,; int tileHeight); Set tile width and height. Parameters:; tileWidth - ; tileHeight - ; Returns:. lineThickness; public LabeledImageServer.Builder lineThickness(float thickness); Thickness of boundary lines and line annotations, defined in terms of pixels at the ; resolution specified by the downsample value of the server. Parameters:; thickness - ; Returns:. useUniqueLabels; @Deprecated; public LabeledImageServer.Builder useUniqueLabels(); Deprecated.; in favor of useInstanceLabels(). Returns:. useInstanceLabels; public LabeledImageServer.Builder useInstanceLabels(); Request that unique labels are used for all objects, rather than classifications.; If this flag is set, all other label requests are ignored. Returns:; See Also:. useInstanceLabels(boolean); s",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.Builder.html:8070,down,downsample,8070,javadoc/docs/qupath/lib/images/servers/LabeledImageServer.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.Builder.html,1,['down'],['downsample']
Availability," area that contains x & y somewhere within it. static ROI; buffer(ROI roi,; double distance). Buffer the specified ROI, dilating (or eroding) by the specified distance. static List<ROI>; clipToROI(ROI parent,; Collection<? extends ROI> rois). Intersect a collection of ROIs with a single parent ROI, returning all results that are valid. static ROI; combineROIs(ROI shape1,; ROI shape2,; RoiTools.CombineOp op). Combine two shape ROIs together. static Collection<? extends ROI>; computeTiledROIs(ROI parentROI,; ImmutableDimension sizePreferred,; ImmutableDimension sizeMax,; boolean fixedSize,; int overlap). Create a collection of tiled ROIs corresponding to a specified parentROI if it is larger than sizeMax, with optional overlaps. static ROI; createRandomRectangle(ImageRegion mask,; double width,; double height). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. static ROI; createRandomRectangle(ImageRegion mask,; double width,; double height,; Random random). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. static ROI; createRandomRectangle(ROI mask,; double width,; double height). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI. static ROI; createRandomRectangle(ROI mask,; double width,; double height,; int maxAttempts,; boolean permitErosion,; Random random). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI, ; using a specified maximum number of attempts. static ROI; difference(ROI roi1,; ROI roi2). Compute the difference between two ROIs. static ROI; fillHoles(ROI roi). Fill the holes of an Area ROI, or return the ROI unchanged if it contains no holes. static Area; getArea(ROI roi). Get an Area object representing a ROI. static double; getBoundaryDistance(",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:1931,mask,mask,1931,javadoc/docs/qupath/lib/roi/RoiTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html,1,['mask'],['mask']
Availability," argmax criterion, ; with an optional bounding rectangle. static long[]; computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask). Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values. static long[]; computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask,; Rectangle bounds). Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values, optionally restricted to a bounding rectangle. static BufferedImage; createROIMask(int width,; int height,; ROI roi,; double xOrigin,; double yOrigin,; double downsample). Create a grayscale BufferedImage representing a mask for a specified ROI. static BufferedImage; createROIMask(int width,; int height,; ROI roi,; RegionRequest request). Create a grayscale BufferedImage representing a mask for a specified ROI. static BufferedImage; createROIMask(Shape shape,; double downsample). Create a Shape mask using the minimal bounding box for the Shape. static BufferedImage; createROIMask(ROI roi,; double downsample). Create a ROI mask using the minimal bounding box for the ROI. static BufferedImage; createShapeMask(int width,; int height,; Shape shape,; double xOrigin,; double yOrigin,; double downsample). Create a grayscale BufferedImage representing a mask for a specified ROI. static BufferedImage; crop(BufferedImage img,; int x,; int y,; int width,; int height). Create a crop of the image using the specified bounding box. static BufferedImage; duplicate(BufferedImage img). Duplicate a BufferedImage. static BufferedImage; ensureBufferedImage(Image image). Convert an Image to a BufferedImage if necessary, or return the original image unchanged ; if it is already a BufferedImage. static BufferedImage; ensureBufferedImageType(BufferedImage img,; int requestedType). Convert a BufferedImage to have a specified type. static boolean; is8bitColorType(int type). Returns true if a BufferedImage type represen",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:2627,mask,mask,2627,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,1,['mask'],['mask']
Availability," based upon userDirectoryProperty and DIR_COLORMAPS. Returns:. getUserPath; public Path getUserPath(); Get the user path where additional files may be stored. Returns:. getRelativePathOrNull; public Path getRelativePathOrNull(String other). setUserPath; public void setUserPath(Path path); throws IllegalArgumentException; Set the user path where additional files may be stored.; Note that the specified path must exist and must represent a directory. Parameters:; path - ; Throws:; IllegalArgumentException - if the path is not null, but does not represent a valid, existing directory. getExtensionsPath; public Path getExtensionsPath(); Get the path to where extensions should be stored. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getCssStylesPath; public Path getCssStylesPath(); Get the path to where user directory for storing CSS styles. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null; Since:; v0.4.0. getLogDirectoryPath; public Path getLogDirectoryPath(); Get the path to where log files should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getLocalizationDirectoryPath; public Path getLocalizationDirectoryPath(); Get the path to where localization property files should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getColormapsDirectoryPath; public Path getColormapsDirectoryPath(); Get the path to where colormaps should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getScriptsDirectoryPath; public Path getScriptsDirectoryPath(); Get the path to where shared script files should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html:9421,avail,available,9421,javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,1,['avail'],['available']
Availability," be blocked.; This happens when a plugin or script is running. Returns:. openInBrowser; public static boolean openInBrowser(String url); Try to launch a browser window for a specified URL. Parameters:; url - the URL to open in the browser; Returns:; true if this was (as far as we know...) successful, and false otherwise; Since:; v0.5.0 (renamed from launchInBrowserWindow(String}. getToolManager; public ToolManager getToolManager(); Get the ToolManager that handles available and selected tools. Returns:. getThreadPoolManager; public SharedThreadPoolManager getThreadPoolManager(); Get a SharedThreadPoolManager to help with submitting tasks in other threads.; A benefit of using this is that all the thread pools created will be shutdown when ; QuPath is exited. Returns:. getExtensionManager; public ExtensionManager getExtensionManager(); Get an ExtensionManager to facilitating working with extensions. Returns:. getViewerManager; public ViewerManager getViewerManager(); Get the viewer manager, which gives access to all the viewers available within this QuPath instance. Returns:. getAvailablePathClasses; public ObservableList<PathClass> getAvailablePathClasses(); Get an observable list of available PathClasses. Returns:. getDefaultDragDropListener; public DragDropImportListener getDefaultDragDropListener(); Get a reference to the default drag & drop listener, so this may be added to additional windows if needed. Returns:. resetAvailablePathClasses; public boolean resetAvailablePathClasses(); Populate the availablePathClasses with a default list. Returns:; true if changes were mad to the available classes, false otherwise. getAnalysisTabPane; public TabPane getAnalysisTabPane(); Access the main tab pane shown in the QuPath window.; This enables extensions to add or remove tabs - but be cautious!; ; Removing tabs can impact other functionality; If adding a tab, it is usually best to apply FXUtils.makeTabUndockable(Tab). Returns:. isStandalone; public boolean isStandalone();",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:16599,avail,available,16599,javadoc/docs/qupath/lib/gui/QuPathGUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html,1,['avail'],['available']
Availability," be written. getSecondaryObjectFilters() - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapParameters. Get the secondary object filters. getSelectedObject() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the currently-selected object from the hierarchy. getSelectedObject() - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Get the current primary selected object. getSelectedObject() - Static method in class qupath.lib.scripting.QP. Get the primary selected object within the current PathObjectHierarchy. getSelectedObjects() - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Get an unmodifiable set containing all the currently-selected objects. getSelectedObjects() - Static method in class qupath.lib.scripting.QP. Get the selected objects within the current PathObjectHierarchy. getSelectedROI() - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Get the ROI of the selected object, if available, or null. getSelectedROI() - Static method in class qupath.lib.scripting.QP. Get the ROI for the primary selected object within the current PathObjectHierarchy. getSelectedText() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; getSelectedText() - Method in interface qupath.lib.gui.scripting.EditableText. Get the selected text as a string. getSelectedText() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl. Gets the value of the selectedText property. getSelectedText() - Method in class qupath.lib.gui.scripting.TextAreaControl. Gets the value of the selectedText property. getSelectedTool() - Method in class qupath.lib.gui.ToolManager. Get the value of ToolManager.selectedToolProperty(). getSelection() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; getSelection() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Get the range of the currently-selected text. getSelection() - Method in c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:507881,avail,available,507881,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability," boolean; containsCentroid(ROI roi,; PathObject child). Check whether a child object's centroid is contained within a ROI. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; int channel,; Function<PathObject,ROI> roiFunction). Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; String channelName,; Function<PathObject,ROI> roiFunction). Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; ColorTransforms.ColorTransform transform,; Function<PathObject,ROI> roiFunction). Extract the pixels from the image using the specified transform, and applying any ROI mask. static List<PathObject>; maskObject(ROI parentROI,; PathObject child). Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. static List<PathObject>; maskObjectAndSplit(ROI parentROI,; PathObject child). Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelProcessorUtils; public PixelProcessorUtils(). Method Details. extractMaskedPixels; public static double[] extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; int channel,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. Parameters:; params - processor parameters; channel - number of the channel to extract (0-based index); roiFunction - the function used to select a ROI ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html:1749,mask,mask,1749,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html,2,['mask'],['mask']
Availability," boolean; equals(Object obj);  ; double; getDownsample(). Get the requested downsample factor, defining the resolution at which pixels should be returned. String; getPath(). Get the requested ImageServer path, used as an identifier. int; hashCode();  ; RegionRequest; intersect2D(int x,; int y,; int width,; int height). Intersect to the specified 2D region. RegionRequest; intersect2D(ImageRegion region). Intersect to the specified 2D region, ignoring z and t. boolean; overlapsRequest(RegionRequest request). Returns true if the region specified by this request overlaps with that of another request. RegionRequest; pad2D(int xPad,; int yPad). Add symmetric padding to the x and y dimensions of a request. RegionRequest; pad2D(Padding padding). Add symmetric padding to the x and y dimensions of a request. String; toString();  ; RegionRequest; translate(int dx,; int dy). Create a RegionRequest equivalent to this one with the x and y coordinates updated by translation. RegionRequest; updateDownsample(double downsample). Create a RegionRequest equivalent to this one with the updated downsample value. RegionRequest; updatePath(String path). Create a RegionRequest equivalent to this one with the updated path. RegionRequest; updateT(int t). Create a RegionRequest equivalent to this one with the updated t value. RegionRequest; updateZ(int z). Create a RegionRequest equivalent to this one with the updated z value. Methods inherited from class qupath.lib.regions.ImageRegion; contains, createInstance, createInstance, createInstance, getHeight, getImagePlane, getMaxX, getMaxY, getMinX, getMinY, getPlane, getT, getWidth, getX, getY, getZ, intersects, intersects. Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. toString; public String toString(). Overrides:; toString in class ImageRegion. createInstance; public static RegionRequest createInstance(ImageServer<?> server); Create a request for the full width and",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html:3866,down,downsample,3866,javadoc/docs/qupath/lib/regions/RegionRequest.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html,1,['down'],['downsample']
Availability," brief report on memory use, based on JavaCPP's Pointer class. Parameters:; delimiter - delimiter to use between elements of the report, e.g. "", "" or ""\n""; Returns:; See Also:. trackedMemory(); physicalMemory(). findMaxima; public static Collection<OpenCVTools.IndexedPixel> findMaxima(Mat mat,; Mat mask); Find maxima within an image. Parameters:; mat - image containing maxima; must be 2D and single-channel; mask - optional mask; Returns:. getMaskedPixels; public static List<OpenCVTools.IndexedPixel> getMaskedPixels(Mat mat,; Mat mask); Extract all the masked pixels within an image. Parameters:; mat - input image; must be single-channel; mask - mask of the same size as mat; Returns:; list of pixels, including their indices and values. extractMaskedFloats; public static float[] extractMaskedFloats(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pixels should be extracted; mask - the mask to apply to the input; channel - the channel index (zero-based) to consider; Returns:; a float array containing the values of the input filtered by the mask; Throws:; IllegalArgumentException - when the input and the mask don't have the same dimensions. extractMaskedDoubles; public static double[] extractMaskedDoubles(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pixels should be extracted; mask - the mask to apply ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:44338,mask,mask,44338,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html,1,['mask'],['mask']
Availability," care of showing progress (in the appropriate thread) using JavaFX components. TaskRunnerUtils. A utility class to help with the creation of TaskRunner instances. TemporaryObject. Marker interface used to indicate that child objects shouldn't be added to any cache for display. TextAppendable. Interface to indicate anything for which text can be appended. TextAreaControl. Simple text area control (JavaFX) with basic operations and no styling support. Thinning. Implementation of the 3D binary thinning algorithm of; ; Lee et al. ThreadTools. Create a thread factory that supports adding a prefix to the name and setting daemon status. TiffWriterIJ. ImageWriter implementation to write TIFF images using ImageJ. TileClassificationsToAnnotationsPlugin<T>. Plugin to merge classified tiles into annotation objects. TileExporter. Helper class for exporting image tiles, typically for further analysis elsewhere or for training up an AI algorithm. TileListener<T>. Interface for anything that needs to know when image tiles become available. Tiler. A class used to split ROI or Geometry objects into rectangular tiles. Tiler.Builder;  ; Tiler.TileAlignment. Enum representing the possible alignments for tiles. TileRequest. A wrapper for a RegionRequest, useful to precisely specify image tiles at a particular resolution. TileRequestManager. Helper class to manage tile requests from an ImageServer. TilerPlugin<T>. Simple plugin to create square tiles, which may later have measurements added. Timeit. Helper class to time code execution. Timeit.Checkpoint. Class representing a named checkpoint with a timestamp in nanoseconds. TMACommands. Helper class implementing simple 'single-method' commands related to tissue microarrays for easy inclusion in the GUI. TMACoreObject. A special PathObject used exclusively to represent TMA cores. TMADataIO. Static methods for exporting TMA data, optionally with small images. TMADearrayer. Static methods used by the TMA dearrayer plugin. TMADearrayerPluginIJ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:57501,avail,available,57501,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['avail'],['available']
Availability," cell objects where possible; if false, request the outer ROI. ; This has no effect if the object is not a cell, or does not have two ROIs.; Returns:; a collection of annotations with point ROIs; See Also:. convertToPoints(PathObjectHierarchy, Collection, boolean, boolean). hierarchyContainsObject; public static boolean hierarchyContainsObject(PathObjectHierarchy hierarchy,; PathObject pathObject); Check if a hierarchy contains a specified PathObject.; The actual check if carried out by seeing in the PathObject is descended from the root object of the hierarchy. Parameters:; hierarchy - ; pathObject - ; Returns:. getObjectsForLocation; public static Collection<PathObject> getObjectsForLocation(PathObjectHierarchy hierarchy,; double x,; double y,; int zPos,; int tPos,; double vertexDistance); Get a collection of objects that overlap a specified pixel location.; ; For area ROIs, this means the ROI should contain the pixel. For non-area ROIs an ; optional vertex distance can be used to define a distance tolerance to the nearest vertex ; or line segment. Parameters:; hierarchy - object hierarchy within which to find the object; x - x-coordinate of the pixel; y - y-coordinate of the pixel; zPos - z-slice number; tPos - time-point number; vertexDistance - for non-area ROIs, the distance from the closest vertex or line segment (or < 0 to ignore non-area ROIs).; Returns:. getAncestorList; public static List<PathObject> getAncestorList(PathObject pathObject); Return a list of object ancestors, starting from the root object and ending with PathObject; (assuming that the object is part of a hierarchy with a root). Parameters:; pathObject - ; Returns:. swapNameAndClass; public static void swapNameAndClass(PathObject pathObject,; boolean includeColor); Swap the name and PathClass of an object.; This can be used as a simple way to preserve a classification that might be required later. Parameters:; pathObject - the object to adjust; includeColor - optionally set the color of the ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:29616,toler,tolerance,29616,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['toler'],['tolerance']
Availability," class ImageServerProvider; extends Object; Service provider for creating ImageServers from a given path - which may be a file path or URL.; ; This class is responsible for hunting through potential ImageServerBuilders, ranked by support level, to find the first that works. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ImageServerProvider();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> ImageServer<T>; buildServer(String path,; Class<T> cls,; String... args). Attempt to create ImageServer<T> from the specified path and arguments. static <T> Map<RegionRequest,T>; getCache(Class<T> cls). Get the cache in use for image tiles of a specific type. static List<ImageServerBuilder<?>>; getInstalledImageServerBuilders(). Request all available ImageServerBuilders. static <T> List<ImageServerBuilder<T>>; getInstalledImageServerBuilders(Class<T> imageClass). Request all available ImageServerBuilders supporting a given image class. static <T> ImageServerBuilder.UriImageSupport<T>; getPreferredUriImageSupport(Class<T> cls,; String path,; String... args). Get the preferred ImageServerBuilder.UriImageSupport for a specified image path. static URI; legacyPathToURI(String path). Method to help with converting legacy image paths to URIs. static <T> void; setCache(Map<RegionRequest,T> cache,; Class<T> cls). Set the cache to be used for image tiles of a specific type. static void; setServiceLoader(ServiceLoader<ImageServerBuilder> newLoader). Replace the default service loader with another. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageServerProvider; public ImageServerProvider(). Method Details. setCache; public static <T> void setCache(Map<RegionRequest,T> cache,; Class<T> cls); Set the cache to be used for image tiles of a specific type. Type Parameters:; T - ; Pa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerProvider.html:1443,avail,available,1443,javadoc/docs/qupath/lib/images/servers/ImageServerProvider.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerProvider.html,1,['avail'],['available']
Availability," class qupath.lib.gui.actions.menus.ViewMenuActions.ZoomActions;  ; ZOOM_TO_FIT - Variable in class qupath.lib.gui.actions.ViewerActions;  ; zoomActions - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Actions;  ; zoomIn() - Method in class qupath.lib.gui.viewer.QuPathViewer. Zoom in by one step. zoomIn(int) - Method in class qupath.lib.gui.viewer.QuPathViewer. Zoom in by a specified number of steps, where one 'step' indicates a minimal zoom increment. zoomOut() - Method in class qupath.lib.gui.viewer.QuPathViewer. Zoom out by one step. zoomOut(int) - Method in class qupath.lib.gui.viewer.QuPathViewer. Zoom out by a specified number of steps, where one 'step' indicates a minimal zoom increment. zoomToFit() - Method in class qupath.lib.gui.viewer.QuPathViewer. Request that the downsample is set to contain the entire image, and the image is centered in the viewer. zPositionProperty() - Method in class qupath.lib.gui.viewer.QuPathViewer. Current z-position for the z-slice currently visible in the viewer. zRange(int, int) - Method in class qupath.lib.images.writers.TileExporter. Define the range of Z-slices to process. zSlice(int) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify the z-slice to export. zSlices(int, int) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify the start (inclusive) and end (exclusive) z-slices. zSpacingCalibrated() - Method in class qupath.lib.images.servers.ImageServerMetadata. Returns true if z-spacing calibration information is available for the image. zSpacingMicrons(Number) - Method in class qupath.lib.images.servers.ImageServerMetadata.Builder. Specify the spacing between z-slices, in microns. zSpacingMicrons(Number) - Method in class qupath.lib.images.servers.PixelCalibration.Builder. Specify spacing between z-slices, in microns. A B C D E F G H I J K L M N O P Q R S T U V W X Y Z All Classes and Interfaces|All Packages|Constant Field Values|Serialized Form. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1130603,avail,available,1130603,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability," class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageServerProvider; public ImageServerProvider(). Method Details. setCache; public static <T> void setCache(Map<RegionRequest,T> cache,; Class<T> cls); Set the cache to be used for image tiles of a specific type. Type Parameters:; T - ; Parameters:; cache - ; cls - . getCache; public static <T> Map<RegionRequest,T> getCache(Class<T> cls); Get the cache in use for image tiles of a specific type. Type Parameters:; T - ; Parameters:; cls - ; Returns:. setServiceLoader; public static void setServiceLoader(ServiceLoader<ImageServerBuilder> newLoader); Replace the default service loader with another.; ; This can be handy if the ServiceLoader should be using an alternative ClassLoader,; e.g. to auto-discover ImageServerBuilders in alternative directories. Parameters:; newLoader - . getInstalledImageServerBuilders; public static List<ImageServerBuilder<?>> getInstalledImageServerBuilders(); Request all available ImageServerBuilders. Returns:. getInstalledImageServerBuilders; public static <T> List<ImageServerBuilder<T>> getInstalledImageServerBuilders(Class<T> imageClass); Request all available ImageServerBuilders supporting a given image class. Type Parameters:; T - ; Parameters:; imageClass - ; Returns:. legacyPathToURI; public static URI legacyPathToURI(String path); throws IOException; Method to help with converting legacy image paths to URIs.; This is intended for compatibility with data files used in QuPath v0.1.2, where servers ; were represented using paths only (rather than JSON). Parameters:; path - ; Returns:; a URI parsed from a path, if possible; Throws:; IOException. getPreferredUriImageSupport; public static <T>; ImageServerBuilder.UriImageSupport<T> getPreferredUriImageSupport(Class<T> cls,; String path,; String... args); throws IOException; Get the preferred ImageServerBuilder.UriImageSupport for a specified image path. T",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerProvider.html:3136,avail,available,3136,javadoc/docs/qupath/lib/images/servers/ImageServerProvider.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerProvider.html,1,['avail'],['available']
Availability," command in the history workflow. makeInverseAnnotation(ImageData<?>) - Static method in class qupath.lib.scripting.QP. Make an inverse annotation using the specified ImageData and current selected objects. makeInverseAnnotation(ImageData<?>, Collection<PathObject>) - Static method in class qupath.lib.scripting.QP. Make an annotation, for which the ROI is obtained by subtracting the ROIs of the specified objects from the closest ; common ancestor ROI (or entire image if the closest ancestor is the root). makeInverseAnnotation(ImageData<?>, PathObject) - Static method in class qupath.lib.scripting.QP. Make an annotation for the specified ImageData, for which the ROI is obtained by subtracting ; the existing ROI from the ROI of its parent object (or entire image if no suitable parent object is available). makeInverseAnnotation(PathObject) - Static method in class qupath.lib.scripting.QP. Make an annotation for the current ImageData, for which the ROI is obtained by subtracting ; the existing ROI from the ROI of its parent object (or entire image if no suitable parent object is available). makeMeasurementHistogram(Collection<PathObject>, String, int) - Static method in class qupath.lib.analysis.stats.Histogram. Create a histogram depicting values of a specific measurement extracted from a collection of PathObjects. makeOD(double, double) - Static method in class qupath.lib.color.ColorDeconvolutionHelper. Convert a single pixel value to an optical density as max(0, -log10(val/max). makeODByLUT(float, double[]) - Static method in class qupath.lib.color.ColorDeconvolutionHelper. Convert a float pixel to an optical density value using a pre-computed lookup table. makeODByLUT(int, double[]) - Static method in class qupath.lib.color.ColorDeconvolutionHelper. Convert an int pixel to an optical density value using a pre-computed lookup table. makeODLUT(double) - Static method in class qupath.lib.color.ColorDeconvolutionHelper. Create an optical density lookup table with 256 ent",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:665979,avail,available,665979,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability," convertToImagePlus(String title,; ImageServer<BufferedImage> server,; BufferedImage img,; RegionRequest request). Convert a BufferedImage into a PathImage<ImagePlus>. static PathImage<ImagePlus>; convertToImagePlus(ImageServer<BufferedImage> server,; RegionRequest request). Read a region from an ImageServer<BufferedImage as a PathImage<ImagePlus>. static ImageProcessor; convertToImageProcessor(BufferedImage img,; int band). Extract pixels as an an ImageProcessor from a single band of a BufferedImage. static FloatProcessor; convertToOpticalDensitySum(ColorProcessor cp,; double maxRed,; double maxGreen,; double maxBlue). Calculate optical density values for the red, green and blue channels, then add these all together. static PathObject; convertToPathObject(Roi roi,; double xOrigin,; double yOrigin,; double downsampleFactor,; Function<ROI,PathObject> creator,; ImagePlane plane). Create a PathObject for a specific ImageJ Roi. static PathObject; convertToPathObject(Roi roi,; double downsampleFactor,; Function<ROI,PathObject> creator,; ImagePlus imp). Create a PathObject for a specific ImageJ Roi, using an ImagePlus to help set properties. static PathObject; convertToPathObject(ImagePlus imp,; ImageServer<?> server,; Roi roi,; double downsampleFactor,; Function<ROI,PathObject> creator,; ImagePlane plane). Deprecated.; use instead convertToPathObject(Roi, double, double, double, Function, ImagePlane). static PolygonROI; convertToPolygonROI(PolygonRoi roi,; Calibration cal,; double downsampleFactor,; ImagePlane plane). Convert an ImageJ PolygonRoi to a QuPath PolygonROI. static ROI; convertToROI(Roi roi,; double xOrigin,; double yOrigin,; double downsampleFactor,; ImagePlane plane). Create a ROI from an ImageJ Roi. static ROI; convertToROI(Roi roi,; Calibration cal,; double downsampleFactor,; ImagePlane plane). Create a ROI from an ImageJ Roi, using the Calibration object of an ImagePlus. static <T extends PathImage<? extends ImagePlus>>ROI; convertToROI(Roi roi,; T pathI",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:4732,down,downsampleFactor,4732,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,1,['down'],['downsampleFactor']
Availability," coordinates. createShape(MouseEvent, double, double, boolean, Geometry) - Method in class qupath.process.gui.WandToolEventHandler;  ; createShapeMask(int, int, Shape, double, double, double) - Static method in class qupath.lib.awt.common.BufferedImageTools. Create a grayscale BufferedImage representing a mask for a specified ROI. createSharedClassificationMerger() - Static method in class qupath.lib.objects.utils.ObjectMerger. Create an object merger that can merge together any objects with similar ROIs (e.g. createSharedPoolCompletionService(Class<V>) - Method in class qupath.lib.gui.QuPathGUI. Deprecated.; since v0.5.0; use QuPathGUI.getThreadPoolManager(). createSharedPoolCompletionService(Class<V>) - Method in class qupath.lib.gui.SharedThreadPoolManager. Create a completion service that uses a shared threadpool for the application. createSharedTileBoundaryMerger(double) - Static method in class qupath.lib.objects.utils.ObjectMerger. Create an object merger that uses a shared boundary IoU criterion and default overlap tolerance. createSharedTileBoundaryMerger(double, double) - Static method in class qupath.lib.objects.utils.ObjectMerger. Create an object merger that uses a shared boundary IoU criterion and overlap tolerance. createShowSystemInfoDialog(QuPathGUI) - Static method in class qupath.lib.gui.commands.Commands. Create a window summarizing key system information relevant for QuPath. createSingleStageAction(Supplier<Stage>) - Static method in class qupath.lib.gui.commands.Commands. Create a command that generates a persistent single dialog on demand. createSingleStageAction(Supplier<Stage>, String) - Static method in class qupath.lib.gui.commands.Commands. Create a named command that generates a persistent single dialog on demand. createSingleThreadExecutor(Object) - Method in class qupath.lib.gui.QuPathGUI. Deprecated.; since v0.5.0; use QuPathGUI.getThreadPoolManager(). createSpecifyAnnotationDialog(QuPathGUI) - Static method in class qupath.lib.gui.com",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:224902,toler,tolerance,224902,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['toler'],['tolerance']
Availability," corresponds to a z-slice. static void; fill(Mat mat,; double value). Fill the pixels of an image with a specific value. static void; fill(Mat mat,; Mat mask,; double value). Fill the pixels of an image with a specific value, corresponding to a mask. static void; fillSmallHoles(Mat matBinary,; double maxArea). Fill holes in a binary image (1-channel, 8-bit unsigned) with an area <= maxArea. static void; filter2D(Mat mat,; Mat kernel). Apply a 2D filter to all channels of an image, with symmetric boundary padding. static void; filter2D(Mat mat,; Mat kernel,; int borderType). Apply a 2D filter to all channels of an image. static Mat; filterSingleZ(List<Mat> mats,; double[] kernel,; int ind3D,; int border). Apply a filter along the 'list' dimension for a list of Mats, computing the value ; for a single entry. static List<Mat>; filterZ(List<Mat> mats,; Mat kernelZ,; int ind3D,; int border). Filter filter along entries in the input list. static Collection<OpenCVTools.IndexedPixel>; findMaxima(Mat mat,; Mat mask). Find maxima within an image. static Mat; findRegionalMaxima(Mat mat). Get the regional maxima within a Mat, providing the output as a labeled image. static void; floor(Mat mat). Floor values in a floating point Mat. static void; gaussianFilter(Mat mat,; double sigma). Apply a 2D Gaussian filter to all channels of an image, with symmetric boundary padding. static void; gaussianFilter(Mat mat,; double sigma,; int borderType). Apply a 2D Gaussian filter to all channels of an image. static Mat; getCircularStructuringElement(int radius). Deprecated.; createDisk(int, boolean) gives more reliable shapes. static double[]; getGaussianDeriv(double sigma,; int order,; int length). Get filter coefficients for a 1D Gaussian (derivative) kernel. static Mat; getGaussianDerivKernel(double sigma,; int order,; boolean doColumn). Get filter coefficients for a 1D Gaussian (derivative) kernel. static List<OpenCVTools.IndexedPixel>; getMaskedPixels(Mat mat,; Mat mask). Extract all th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:5941,mask,mask,5941,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html,1,['mask'],['mask']
Availability," count - ; Returns:. info; public static InfoMessage info(ObservableNumberValue count); Create a information message to show a count of messages. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text); Create a warning message. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(String text); Create a warning message with static text. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text,; ObservableNumberValue count); Create a warning message with a count. Parameters:; text - ; count - ; Returns:. warning; public static InfoMessage warning(ObservableNumberValue count); Create a warning message to show a count of warnings. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(String text,; int count); Create a warning message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text); Create an error message. Parameters:; text - ; Returns:. error; public static InfoMessage error(String text); Create an error message with static text. Parameters:; text - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text,; ObservableNumberValue count); Create an error message with a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(String text,; int count); Create an error message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableNumberValue count); Create a error message to show a count of errors. Parameters:; count - ; Returns:. textProperty; public ReadOnlyStringProperty textProperty(); Read only property containing the message text. Returns:; See Also:. getText(). getText; public String getText(); Text of the message. Returns:. countProperty; public ReadOnlyObjectProperty<Number> countProperty(); Read only property contai",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:5052,error,error,5052,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,3,['error'],['error']
Availability," disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects.utils; Class ObjectMerger. java.lang.Object; qupath.lib.objects.utils.ObjectMerger. public class ObjectMerger; extends Object; Helper class for merging objects using different criteria.; ; This is designed to be used for post-processing a segmentation, to help resolve tile boundaries. Since:; v0.5.0. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ObjectMerger; createSharedClassificationMerger(). Create an object merger that can merge together any objects with similar ROIs (e.g. static ObjectMerger; createSharedTileBoundaryMerger(double sharedBoundaryThreshold). Create an object merger that uses a shared boundary IoU criterion and default overlap tolerance. static ObjectMerger; createSharedTileBoundaryMerger(double sharedBoundaryThreshold,; double overlapTolerance). Create an object merger that uses a shared boundary IoU criterion and overlap tolerance. static ObjectMerger; createTouchingMerger(). Create an object merger that can merge together any objects with similar ROIs (e.g. List<PathObject>; merge(Collection<? extends PathObject> pathObjects). Calculate the result of applying the merging strategy to the input objects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. merge; public List<PathObject> merge(Collection<? extends PathObject> pathObjects); Calculate the result of applying the merging strategy to the input objects.; ; The output list will contain the same number of objects or fewer.; Objects that are not merged will be returned unchanged, while objects that are merged will",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/utils/ObjectMerger.html:1083,toler,tolerance,1083,javadoc/docs/qupath/lib/objects/utils/ObjectMerger.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/utils/ObjectMerger.html,1,['toler'],['tolerance']
Availability," double vertexDistance). Get a collection of objects that overlap a specified pixel location. static List<PathObject>; getObjectsOfClass(Collection<PathObject> pathObjects,; Class<? extends PathObject> cls). Get the PathObjects in a collection that are instances of a specified class. static <T extends PathObject>List<T>; getPointObjects(Collection<T> pathObjects). Get a list of objects with point ROIs from a collection of objects. static Set<PathClass>; getRepresentedPathClasses(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Get a set of the represented path classes, i.e. static ROI; getROI(PathObject pathObject,; boolean preferNucleus). Get the ROI for a PathObject, with a preference for the nucleus ROI of a cell. static String; getSuitableName(Class<? extends PathObject> cls,; boolean makePlural). Get a user-friendly name for a specific type of PathObject, based on its Java class. static Collection<? extends PathObject>; getSupportedObjects(Collection<? extends PathObject> availableObjects,; Collection<Class<? extends PathObject>> supportedClasses). From a collection of available objects, extract those that are instances of specified supported classes. static TMACoreObject; getTMACoreForPixel(TMAGrid tmaGrid,; double x,; double y). Get the TMA core that contains the specified x & y coordinate, or null if no core is available for the coordinates give. static List<TMACoreObject>; getTMACoreObjects(PathObjectHierarchy hierarchy,; boolean includeMissingCores). Extract a list of TMA cores from an object hierarchy. static boolean; hasPointROI(PathObject pathObject). Returns true if a PathObject has a Point ROI. static boolean; hierarchyContainsObject(PathObjectHierarchy hierarchy,; PathObject pathObject). Check if a hierarchy contains a specified PathObject. static boolean; isAncestor(PathObject pathObject,; PathObject possibleAncestor). Query if one object is the ancestor of another. static void; lockObjects(PathObjectHierarchy hierarchy,; Collection",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:7306,avail,availableObjects,7306,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['avail'],['availableObjects']
Availability," empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Specified by:; readRegion in interface ImageServer<BufferedImage>; Overrides:; readRegion in class TransformingImageServer<BufferedImage>; Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; Throws:; IOException; See Also:. ImageServer.readRegion(double, int, int, int, int, int, int); ImageServer.readRegion(double, int, int, int, int); ImageServer.readBufferedImage(RegionRequest). getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Specified by:; getServerType in interface ImageServer<BufferedImage>; Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Specified by:; getOriginalMetadata in interface ImageServer<BufferedImage>; Overrides:; getOriginalMetadata in class TransformingImageServer<BufferedImage>; Returns:; See Also:. ImageServer.getMetadata(). readPathObjects; public Collection<PathObject> readPathObjects(); throws IOException; Description copied from interface: PathObjectReader; Read a collection of objects from the source. Specified by:; readPathObjects in interface PathObjectReader; Returns:; a collection of objects, or empty list if no objects are available.; Throws:; IOException. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/ChannelDisplayTransformServer.html:6754,avail,available,6754,javadoc/docs/qupath/lib/gui/images/servers/ChannelDisplayTransformServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/ChannelDisplayTransformServer.html,1,['avail'],['available']
Availability," exists for the given path, it will be removed.; file - the Groovy script to run; note that this will be reloaded each time it is required; Returns:; the MenuItem for the command; See Also:. installGroovyCommand(String, String). installGroovyCommand; public MenuItem installGroovyCommand(String menuPath,; String script); Install a Groovy script as a new command in QuPath. Parameters:; menuPath - menu where the command should be installed; see lookupMenuItem(String) for the specification.; If only a name is provided, the command will be added to the ""Extensions"" menu.; If a menu item already exists for the given path, it will be removed.; script - the Groovy script to run; Returns:; the MenuItem for the command; See Also:. installGroovyCommand(String, File). installImageDataCommand; public MenuItem installImageDataCommand(String menuPath,; Consumer<ImageData<BufferedImage>> command); Install a new command in QuPath that takes the current ImageData as input.; The command will only be enabled when an image is available. Parameters:; menuPath - menu where the command should be installed; see lookupMenuItem(String) for the specification.; If only a name is provided, the command will be added to the ""Extensions"" menu.; If a menu item already exists for the given path, it will be removed.; command - the command to run; Returns:; the MenuItem for the command; See Also:. installCommand(String, Runnable). installCommand; public MenuItem installCommand(String menuPath,; Runnable runnable); Install a new command in QuPath. Parameters:; menuPath - menu where the command should be installed; see lookupMenuItem(String) for the specification.; If only a name is provided, the command will be added to the ""Extensions"" menu.; If a menu item already exists for the given path, it will be removed.; runnable - the command to run; Returns:; the MenuItem for the command. This can be further customized if needed. runScript; public Object runScript(File file,; String script); throws ScriptExce",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:22018,avail,available,22018,javadoc/docs/qupath/lib/gui/QuPathGUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html,1,['avail'],['available']
Availability," for this viewer. double; getCenterPixelX(). Get the x-coordinate of the pixel currently centered in the viewer, in the full size image space. double; getCenterPixelY(). Get the y-coordinate of the pixel currently centered in the viewer, in the full size image space. ROI; getCurrentROI(). Get the current ROI, i.e. Cursor; getCursor(). Get the current cursor for this viewer. ObservableList<PathOverlay>; getCustomOverlayLayers(). Get direct access to the custom overlay list. PathOverlay; getCustomPixelLayerOverlay(). Get the custom pixel layer overlay, or null if it has not be set. double; getDefaultZoomFactor(). The amount by which the downsample factor is scaled for one increment of zoomIn() or ; zoomOut(). protected Shape; getDisplayedClipShape(Shape clip). Transform a clip shape into image coordinates for this viewer. Shape; getDisplayedRegionShape(). Get a shape corresponding to the region of the image currently visible in this viewer. double; getDownsampleFactor(). Get the current downsample factor. protected String; getFullLocationString(boolean useCalibratedUnits). Get a string to summarize the pixel found below the most recent known mouse location, ; or """" if the mouse is outside this viewer. double; getFullMagnification(). Get the full magnification for the image. double; getGamma(). Get the gamma value used for this viewer. LookupOp; getGammaOp(). Get a LookupOp that can perform any requested gamma correction in this viewer. PathObjectHierarchy; getHierarchy(). Get the object hierarchy for the current image data, or null if no image data is available. ImageData<BufferedImage>; getImageData(). Get the image data currently being displayed within thie viewer. ImageDisplay; getImageDisplay(). Get the ImageDisplay object used to determine how the image is converted to RGB for display. String; getImageObjectClassificationString(double x,; double y). Get a string representing the object classification x & y location in the viewer component,; or an empty String if n",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:4437,down,downsample,4437,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,1,['down'],['downsample']
Availability," freeze), ; or attempting to create strings that are too long. Returns:. scalebarFontSizeProperty; public static ObjectProperty<PathPrefs.FontSize> scalebarFontSizeProperty(); Preferred font size for the scalebar in the viewer. Returns:. locationFontSizeProperty; public static ObjectProperty<PathPrefs.FontSize> locationFontSizeProperty(); Preferred font size for the location text in the viewer. Returns:. scalebarFontWeightProperty; public static ObjectProperty<FontWeight> scalebarFontWeightProperty(); Preferred font weight in the viewer. Returns:. scalebarLineWidthProperty; public static DoubleProperty scalebarLineWidthProperty(); Preferred line width for the scalebar. Returns:. allredMinPercentagePositiveProperty; public static DoubleProperty allredMinPercentagePositiveProperty(); The minimum positive percentage of cells for Allred proportion score to be non-zero.; ; Using the strict definition, this would be 0... however for image analysis this can be very non-robust,; in that it allows a single false detection to have a very high influence on the score. Returns:. minPyramidDimensionProperty; public static IntegerProperty minPyramidDimensionProperty(); Minimum image width or height before pyramidalizing (if required). Returns:. pointRadiusProperty; public static IntegerProperty pointRadiusProperty(); Radius of the circle used to draw individual points in a point annotation (in pixels). Returns:. createPersistentPreference; public static BooleanProperty createPersistentPreference(String name,; boolean defaultValue); Create a persistent property, which is one that will be saved to/reloaded from the user preferences. Parameters:; name - ; defaultValue - ; Returns:. createPersistentPreference; public static IntegerProperty createPersistentPreference(String name,; int defaultValue); Create a persistent property, which is one that will be saved to/reloaded from the user preferences. Parameters:; name - ; defaultValue - ; Returns:. createPersistentPreference; public stat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:60623,robust,robust,60623,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['robust'],['robust']
Availability," from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Method Details. getColorModel; protected ColorModel getColorModel(). createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Returns null (does not support ServerBuilders). Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. createID; protected String createID(); Returns a UUID. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Specified by:; readRegion in interface ImageServer<BufferedImage>; Overrides:; readRegion in class TransformingImageServer<BufferedImage>; Parameters:; request - the region for which pixels are requ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ChannelTransformFeatureServer.html:3149,down,downsample,3149,javadoc/docs/qupath/lib/images/servers/ChannelTransformFeatureServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ChannelTransformFeatureServer.html,1,['down'],['downsample']
Availability," from expanding to pixels below a specified minimum threshold. doWatershed(Mat, Mat, boolean) - Static method in class qupath.opencv.tools.ProcessingCV. Apply a watershed transform. doWatershed(Mat, Mat, double, boolean) - Static method in class qupath.opencv.tools.ProcessingCV. Apply an intensity-constrained watershed transform, preventing regions from expanding to pixels below a specified minimum threshold. doWatershed(SimpleImage, SimpleModifiableImage, boolean) - Static method in class qupath.lib.analysis.algorithms.Watershed. Apply a 2D watershed transform. doWatershed(SimpleImage, SimpleModifiableImage, double, boolean) - Static method in class qupath.lib.analysis.algorithms.Watershed. Apply a 2D watershed transform, constraining region growing using an intensity threshold. DOWNLOAD - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; downsample(double) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set the downsample factor to use with requesting image regions. downsample(double) - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Specify downsample factor (defined in terms of the full resolution image space). downsample(double) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Specify downsample factor. downsample(double) - Method in class qupath.lib.images.writers.TileExporter. Define resolution as a downsample value. downsamples(double...) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify downsamples; this is especially important for 'thick' objects (annotations, TMA cores); because the downsamples define the resolutions at which these will be rendered. downsamples(double...) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify downsample factors to use in the final pyramid. DragDropImportListener - Class in qupath.lib.gui.viewer. Drag and drop support for main QuPath application, which can support a range of d",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:271150,down,downsample,271150,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['down'],['downsample']
Availability," grow no larger than its preferred width and height. See Also:. getExpandToWindow(); setExpandToWindow(boolean); expandToWindowProperty(). imageName; public ReadOnlyObjectProperty<String> imageNameProperty; Get a read-only property indicating the name of the image. See Also:. imageNameProperty(). image; public ReadOnlyObjectProperty<Image> imageProperty; Get a read-only property representing the JavaFX image. See Also:. getImage(); imageProperty(). bufferedImage; public ReadOnlyObjectProperty<BufferedImage> bufferedImageProperty; Get a read-only property representing the buffered image. See Also:. getBufferedImage(); bufferedImageProperty(). Constructor Details. SimpleImageViewer; public SimpleImageViewer(); Create a new simple image viewer.; The stage will be created, but not shown. Method Details. getPlaceholderText; public String getPlaceholderText(); Get the placeholder text to show if no image is available. Returns:. setPlaceholderText; public void setPlaceholderText(String placeholder); Set the placeholder text to show if no image is available. Parameters:; placeholder - . placeholderTextProperty; public StringProperty placeholderTextProperty(); Get the placeholder text to show if no image is available. Returns:; See Also:. getPlaceholderText(); setPlaceholderText(String). saturationPercentProperty; public DoubleProperty saturationPercentProperty(); Get the percentage of any non-8-bit image that should be saturated when applying auto contrast settings. Returns:; See Also:. getSaturationPercent(); setSaturationPercent(double). getSaturationPercent; public double getSaturationPercent(); Get the percentage of pixels to use when applying auto contrast settings to a non-8-bit image. Returns:. setSaturationPercent; public void setSaturationPercent(double percent); Set the percentage of pixels to use when applying auto contrast settings to a non-8-bit image. Parameters:; percent - . expandToWindowProperty; public BooleanProperty expandToWindowProperty(); Get the prope",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html:5645,avail,available,5645,javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html,1,['avail'],['available']
Availability," have the requested width/height, using area averaging and bilinear interpolation. static void; setValues(DataBuffer buffer,; double val). Set all values in a DataBuffer. static void; swapRGBOrder(BufferedImage img,; String order). Swap the order of pixels in an RGB image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createROIMask; public static BufferedImage createROIMask(int width,; int height,; ROI roi,; RegionRequest request); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for mask; request - region that the mask should correspond to, including the origin (x & y) and downsample factor to use.; Returns:. createROIMask; public static BufferedImage createROIMask(ROI roi,; double downsample); Create a ROI mask using the minimal bounding box for the ROI. Parameters:; roi - ; downsample - ; Returns:. createROIMask; public static BufferedImage createROIMask(int width,; int height,; ROI roi,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for mask; xOrigin - pixel x coordinate of the top left of the region to include in the mask.; yOrigin - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i.e. the amount to scale.; Returns:. createROIMask; public static BufferedImage createROIMask(Shape shape,; double downsample); Create a Shape mask using the minimal bounding box for the Shape. Parameters:; shape - ; downsample - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:4801,down,downsample,4801,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,2,"['down', 'mask']","['downsample', 'mask']"
Availability," hull area. int; getT(). Get time point index. int; getZ(). Get z-stack slice index. boolean; isArea(). Returns true if this ROI encloses an area. boolean; isEmpty(). Returns true if the ROI bounds have zero width and height. boolean; isLine(). Returns true if this ROI consists of line segments and does not enclose an area. boolean; isPoint(). Returns true if this ROI represents distinct (unconnected) points. default ROI; scale(double scaleX,; double scaleY). Create a scaled version of this ROI. ROI; scale(double scaleX,; double scaleY,; double originX,; double originY). Create a scaled version of this ROI. ROI; translate(double dx,; double dy). Create a translated version of this ROI. ROI; updatePlane(ImagePlane plane). Create a new ROI defining the same region on a different ImagePlane. Method Details. getRoiName; String getRoiName(); Get a String representation of the kind of ROI we have, ; e.g. ""Rectangle"", ""Ellipse"", ""Polygon"". Returns:. getC; int getC(); Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Returns:. getT; int getT(); Get time point index.; ; Default is 0 if the image it relates to is not a time series. Returns:. getZ; int getZ(); Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Returns:. getImagePlane; ImagePlane getImagePlane(); Get the ImagePlane, which contains the values for c, z and t in a single object. Returns:. getCentroidX; double getCentroidX(); Returns the x coordinate for the ROI centroid. Returns:. getCentroidY; double getCentroidY(); Returns the y coordinate for the ROI centroid. Returns:. getBoundsX; double getBoundsX(); Returns the x coordinate for the top left of the ROI bounding box. Returns:. getBoundsY; double getBoundsY(); Returns the y coordinate for the top left of the ROI bounding box. Returns:. getBoundsWidth; double getBoundsWidth(); Returns the width of the ROI bounding box. Returns:. getBoundsHeight; doub",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/interfaces/ROI.html:3844,avail,available,3844,javadoc/docs/qupath/lib/roi/interfaces/ROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/interfaces/ROI.html,1,['avail'],['available']
Availability," if it is not present. MenuBar; getMenuBar(). Get the menubar for the main QuPath application. OverlayActions; getOverlayActions(). Get the actions associated with the viewer overlay options. OverlayOptions; getOverlayOptions(). Return the global OverlayOptions instance, used to control display within viewers by default. PreferencePane; getPreferencePane(). Get a reference to the PreferencePane. Project<BufferedImage>; getProject(). Get the value of projectProperty(). ScriptEditor; getScriptEditor(). Get a reference to the current ScriptEditor (which may or may not be open at the moment). Stage; getStage(). Get the main QuPath stage. SharedThreadPoolManager; getThreadPoolManager(). Get a SharedThreadPoolManager to help with submitting tasks in other threads. ToolBar; getToolBar(). Get the main toolbar. ToolManager; getToolManager(). Get the ToolManager that handles available and selected tools. UndoRedoManager; getUndoRedoManager(). Get the UndoRedoManager, which can be useful if needing to clear it in cases where available memory is low. static Version; getVersion(). Get the current QuPath version. QuPathViewer; getViewer(). Get the currently active viewer. ViewerActions; getViewerActions(). Get the associations associated with QuPath image viewers. ViewerManager; getViewerManager(). Get the viewer manager, which gives access to all the viewers available within this QuPath instance. ReadOnlyObjectProperty<ImageData<BufferedImage>>; imageDataProperty(). Read-only property containing the image open within the currently-active viewer. void; installActions(Collection<? extends org.controlsfx.control.action.Action> actions). Install the specified actions. MenuItem; installCommand(String menuPath,; Runnable runnable). Install a new command in QuPath. MenuItem; installGroovyCommand(String menuPath,; File file). Install a Groovy script as a new command in QuPath. MenuItem; installGroovyCommand(String menuPath,; String script). Install a Groovy script as a new command in Qu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:5809,avail,available,5809,javadoc/docs/qupath/lib/gui/QuPathGUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html,1,['avail'],['available']
Availability," image in pixels. Returns:. nChannels; int nChannels(); Number of channels (3 for RGB). Returns:. isRGB; boolean isRGB(); True if the image has 8-bit red, green & blue channels (and nothing else), false otherwise. Returns:. nZSlices; int nZSlices(); Number of slices in a z-stack. Returns:. nTimepoints; int nTimepoints(); Number of time points in a time series. Returns:. getPixelCalibration; default PixelCalibration getPixelCalibration(); Get the PixelCalibration object from the current metadata. Returns:. getCachedTile; T getCachedTile(TileRequest tile); Get a cached tile, or null if the tile has not been cached.; ; This is useful whenever it is important to return quickly rather than wait for a tile to be fetched or generated.; ; Warning! This method should be used very cautiously, as it is permitted to return the tile stored internally ; in the cache for performance. This must not be modified by any code requesting the tile. Parameters:; tile - ; Returns:; the tile if it has been cached, or null if no cached tile is available for the request. readBufferedImage; @Deprecated; default T readBufferedImage(RegionRequest request); throws IOException; Deprecated.; since v0.4.0. Implementations of ImageServer should override readRegion(RegionRequest) instead.; This method will be removed in a future release; it exists now only to maintain compatibility with QuPath ; extensions that have not yet been updated to use the newer method. Legacy method to request pixels for a RegionRequest, now replaced by readRegion(RegionRequest).; This method is deprecated; if the generic parameter <T> represented ; anything other than a BufferedImage then its name became misleading. Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; Throws:; IOException. readRegion; default T readRegion(RegionRequest request); throws IOException; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions f",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html:7698,avail,available,7698,javadoc/docs/qupath/lib/images/servers/ImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html,1,['avail'],['available']
Availability," image is available. void; resetImage(). Remove the image. DoubleProperty; saturationPercentProperty(). Get the percentage of any non-8-bit image that should be saturated when applying auto contrast settings. void; setExpandToWindow(boolean limit). Control whether the image should be allowed to expand beyond its preferred width and height to fill the window. void; setPlaceholderText(String placeholder). Set the placeholder text to show if no image is available. void; setSaturationPercent(double percent). Set the percentage of pixels to use when applying auto contrast settings to a non-8-bit image. void; updateImage(String name,; BufferedImage img). Update the image using a buffered image. void; updateImage(String name,; Image image). Update the image using a JavaFX image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. placeholderText; public StringProperty placeholderTextProperty; Get the placeholder text to show if no image is available. See Also:. getPlaceholderText(); setPlaceholderText(String); placeholderTextProperty(). saturationPercent; public DoubleProperty saturationPercentProperty; Get the percentage of any non-8-bit image that should be saturated when applying auto contrast settings. See Also:. getSaturationPercent(); setSaturationPercent(double); saturationPercentProperty(). expandToWindow; public BooleanProperty expandToWindowProperty; Get the property indicating whether the image should grow to fill the window (while maintaining its; aspect ratio).; If false, the image will grow no larger than its preferred width and height. See Also:. getExpandToWindow(); setExpandToWindow(boolean); expandToWindowProperty(). imageName; public ReadOnlyObjectProperty<String> imageNameProperty; Get a read-only property indicating the name of the image. See Also:. imageNameProperty(). image; public ReadOnlyObjectProperty<Image> imageProperty; Get a read-only proper",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html:4019,avail,available,4019,javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html,1,['avail'],['available']
Availability," image; if not null, this will be used to 'fill the gaps'; observer - an ImageObserver (often ignored); imageDisplay - an ImageRenderer to convert images to RGB. close; public void close(). getTileCacheSize; public long getTileCacheSize(); Get the tile cache size, in bytes.; Image tiles larger than this cannot be cached. Returns:. getCachedThumbnail; public BufferedImage getCachedThumbnail(ImageServer<BufferedImage> server,; int zPosition,; int tPosition). registerRequest; protected void registerRequest(TileListener<BufferedImage> tileListener,; ImageServer<BufferedImage> server,; Shape clipShape,; double downsampleFactor,; int zPosition,; int tPosition); Register a request so that the tile request queue will be populated, including potentially for nearby tiles (i.e. preemptively). Parameters:; tileListener - ; server - ; clipShape - ; downsampleFactor - ; zPosition - ; tPosition - . registerRequest; protected void registerRequest(TileListener<BufferedImage> tileListener,; ImageServer<BufferedImage> server,; RegionRequest region,; double downsampleFactor,; int zPosition,; int tPosition). addTileListener; public void addTileListener(TileListener<BufferedImage> listener). getCache; public Map<RegionRequest,BufferedImage> getCache(). removeTileListener; public void removeTileListener(TileListener<BufferedImage> listener). getCachedTile; public BufferedImage getCachedTile(ImageServer<BufferedImage> server,; RegionRequest request). getCachedTilesForServer; public Map<RegionRequest,BufferedImage> getCachedTilesForServer(ImageServer<BufferedImage> server); Get a map of all cached tiles pertaining to a specific ImageServer. Parameters:; server - ; Returns:. workerComplete; protected void workerComplete(qupath.lib.gui.images.stores.TileWorker<BufferedImage> worker); Every TileWorker should call this when the task is done!. Parameters:; worker - . getCachedRegion; protected BufferedImage getCachedRegion(ImageServer<BufferedImage> server,; RegionRequest request). stopWaiting; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html:6977,down,downsampleFactor,6977,javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,1,['down'],['downsampleFactor']
Availability," imageData - the image data to process; signedDistances - if true, use signed distances. detectionCentroidDistances2D; public static void detectionCentroidDistances2D(ImageData<?> imageData); Compute the distance between the centroids of all detections, for all available classifications. Parameters:; imageData - the image data to process. promptToSetGridLineSpacing; public static void promptToSetGridLineSpacing(OverlayOptions options); Prompt to input the spacing for the grid lines optionally displayed on viewers. Parameters:; options - the OverlayOptions that manage the grid lines. requestUserDirectory; public static File requestUserDirectory(boolean promptIfMissing); Request the current user directory, optionally prompting the user to request a directory if none is available. Parameters:; promptIfMissing - ; Returns:; the user directory, or null if none exists and the user did not create one. reloadImageData; public static void reloadImageData(QuPathGUI qupath,; ImageData<BufferedImage> imageData); Reload the specified image data from a previously saved version,if available. Parameters:; qupath - ; imageData - . promptToAddShapeFeatures; public static void promptToAddShapeFeatures(QuPathGUI qupath); Prompt to add shape features for selected objects. Parameters:; qupath - current QuPath instance. convertDetectionsToPoints; public static void convertDetectionsToPoints(ImageData<?> imageData,; boolean preferNucleus); Convert detection objects to point annotations based upon their ROI centroids. Parameters:; imageData - the image data to process; preferNucleus - if true, use a nucleus ROI for cell objects (if available. promptToSimplifySelectedAnnotations; public static void promptToSimplifySelectedAnnotations(ImageData<?> imageData,; double altitudeThreshold); Show a prompt to selected annotations in a hierarchy. Parameters:; imageData - the current image data; altitudeThreshold - default altitude value for simplification. selectObjectsOnCurrentPlane; public static v",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:23660,avail,available,23660,javadoc/docs/qupath/lib/gui/commands/Commands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html,1,['avail'],['available']
Availability," in DensityMaps.builder(PathObjectPredicate) to ; extract a subset of objects for which densities are determined. Parameters:; name - name of the filter; usually this is the name of a classification that the objects should have; filter - the filter itself (predicate that must be JSON-serializable); Returns:; this builder. colorModel; public DensityMaps.DensityMapBuilder colorModel(ColorModels.ColorModelBuilder colorModelBuilder); Set a ColorModels.ColorModelBuilder that can be used in conjunction with buildServer(ImageData).; If this is not set, the default ColorModel used with buildServer(ImageData) may not ; convert well to RGB. Parameters:; colorModelBuilder - ; Returns:. radius; public DensityMaps.DensityMapBuilder radius(double radius); The radius of the filter used to calculate densities. Parameters:; radius - ; Returns:; this builder. buildParameters; public DensityMaps.DensityMapParameters buildParameters(); Build a DensityMaps.DensityMapParameters object containing the main density map parameters. Returns:. buildClassifier; public PixelClassifier buildClassifier(ImageData<BufferedImage> imageData); Build a PixelClassifier for a density map using the current parameters and the specified ImageData. Parameters:; imageData - ; Returns:; the density map; See Also:. buildServer(ImageData). buildServer; public ImageServer<BufferedImage> buildServer(ImageData<BufferedImage> imageData); Build an ImageServer representing this density map.; ; Note that this involved generating a unique ID and caching all tiles.; The reason is that density maps can change over time as the object hierarchy changes, ; and therefore one should be generated that represents a snapshot in time.; However, this imposes a limit on the size of density map that can be generated to ; avoid memory errors.; ; If greater control is needed over when and how the density map is created, using buildClassifier(ImageData) instead. Parameters:; imageData - ; Returns:; See Also:. buildClassifier(ImageData). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapBuilder.html:4994,error,errors,4994,javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/heatmaps/DensityMaps.DensityMapBuilder.html,1,['error'],['errors']
Availability," in microns. Parameters:; metadata - ; Throws:; IllegalArgumentException - if the metadata is incompatible (e.g. different image path, different bit-depth). getOriginalMetadata; ImageServerMetadata getOriginalMetadata(); Get the original metadata read during creation of the server. This may or may not be correct. Returns:; See Also:. getMetadata(). getDefaultThumbnail; T getDefaultThumbnail(int z,; int t); throws IOException; Get the default thumbnail for a specified z-slice and timepoint.; ; This should be the lowest resolution image that is available in the case of the multiresolution ; image, or else the full image. For large datasets, it may be used to determine basic statistics or ; histograms without requiring every pixel to be visited in the full resolution image. Parameters:; z - ; t - ; Returns:; Throws:; IOException. getTileRequestManager; TileRequestManager getTileRequestManager(); Get a TileRequestManager that can be used to identify image tiles that may be efficiently requested; from this ImageServer.; ; This is useful because managing arbitrary RegionRequests can result in inefficiencies if a request ; straddles multiple tiles unnecessarily. Also, it can be used to help ensure consistency whenever ; requesting regions at different resolutions, where rounding errors might otherwise occur.; ; Note that the TileRequestManager is not guaranteed to remain the same for the lifecycle of the server. ; For example, if the image metadata is changed then a new manager may be constructed. Returns:. getImageClass; Class<T> getImageClass(); Get the class of the image representation returned by this ImageServer. Returns:. getBuilder; default ImageServerBuilder.ServerBuilder<T> getBuilder(); Get a ServerBuilder capable of building a server the same as this one.; ; The purpose of this is to aid serialization of servers by switching to a simpler representation.; ; The default implementation returns null, indicating that rebuilding the server is not supported. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html:14936,error,errors,14936,javadoc/docs/qupath/lib/images/servers/ImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html,1,['error'],['errors']
Availability," int). readPatch; public static Mat readPatch(ImageServer<BufferedImage> server,; ROI roi,; double downsample,; int width,; int height,; int borderPadding); throws IOException; Read an image patch, optionally with a fixed size.; If the patch width and height are specified, these relate to the output (downsampled) image; and are centered on the ROI centroid. Otherwise the ROI bounds are used. Parameters:; server - the image server; roi - the ROI for which the patch should be extracted; downsample - the downsample value; width - the patch width, or -1 if the ROI bounds should be used; height - the patch height, or -1 if the ROI bounds should be used; borderPadding - the border padding for out-of-bounds requests, for use with OpenCV's copyMakeBorder; Returns:; Throws:; IOException; See Also:. readPatch(ImageServer, ROI, double, int, int). classify; public static boolean classify(ClassificationModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier,; String predictionMeasurement); throws IOException; Apply a classification model to an image patch to classify an object. Parameters:; model - the model for prediction; pathObject - the object to classify; server - the image supplying the patch; downsample - the requested downsample at which classification should be applied; classifier - function to convert the classification label into a PathClass; predictionMeasurement - optional measurement name for storing the prediction value (often treated as a probability) ; in the measurement list of the object.; Returns:; true if the classification of the object has changed, false otherwise; Throws:; IOException - if the patch cannot be read. classify; public static boolean classify(ClassificationModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; int width,; int height,; IntFunction<PathClass> classifier,; String predictionMeasurement); throws IOException,; IllegalArgum",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html:9588,down,downsample,9588,javadoc/docs/qupath/opencv/dnn/DnnTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html,1,['down'],['downsample']
Availability," int channel). Extract pixels from an image using a mask, limited to the specified channel index. static float[]; extractMaskedFloats(Mat input,; Mat mask,; int channel). Extract pixels from an image using a mask, limited to the specified channel index. static double[]; extractPixels(Mat mat,; double[] pixels). Extract pixels as a double array. static float[]; extractPixels(Mat mat,; float[] pixels). Extract pixels as a float[] array. static List<Mat>; extractZStack(ImageServer<BufferedImage> server,; RegionRequest request). Extract a list of Mats, where each Mat corresponds to a z-slice, for all available z-slices of a region. static List<Mat>; extractZStack(ImageServer<BufferedImage> server,; RegionRequest request,; int zMin,; int zMax). Extract a list of Mats, where each Mat corresponds to a z-slice. static void; fill(Mat mat,; double value). Fill the pixels of an image with a specific value. static void; fill(Mat mat,; Mat mask,; double value). Fill the pixels of an image with a specific value, corresponding to a mask. static void; fillSmallHoles(Mat matBinary,; double maxArea). Fill holes in a binary image (1-channel, 8-bit unsigned) with an area <= maxArea. static void; filter2D(Mat mat,; Mat kernel). Apply a 2D filter to all channels of an image, with symmetric boundary padding. static void; filter2D(Mat mat,; Mat kernel,; int borderType). Apply a 2D filter to all channels of an image. static Mat; filterSingleZ(List<Mat> mats,; double[] kernel,; int ind3D,; int border). Apply a filter along the 'list' dimension for a list of Mats, computing the value ; for a single entry. static List<Mat>; filterZ(List<Mat> mats,; Mat kernelZ,; int ind3D,; int border). Filter filter along entries in the input list. static Collection<OpenCVTools.IndexedPixel>; findMaxima(Mat mat,; Mat mask). Find maxima within an image. static Mat; findRegionalMaxima(Mat mat). Get the regional maxima within a Mat, providing the output as a labeled image. static void; floor(Mat mat). Floor valu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:5169,mask,mask,5169,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html,1,['mask'],['mask']
Availability," is currently open.; The purpose of this is to make it possible for a project (for example) to open the correct server prior to; opening the data file, enabling it to make use of relative path names and not have to rely on the absolute path; encoded within the ImageData. Parameters:; viewer - ; file - ; keepExistingServer - if true and the viewer already has an ImageServer, then any ImageServer path recorded within the data file will be ignored; promptToSaveChanges - if true, the user will be prompted to ask whether to save changes or not; Returns:; Throws:; IOException. openImageEntry; public boolean openImageEntry(ProjectImageEntry<BufferedImage> entry); Open the image represented by the specified ProjectImageEntry.; ; If an image is currently open, this command will prompt to save any changes. Parameters:; entry - ; Returns:. promptToOpenImageFile; public boolean promptToOpenImageFile(); Show a file chooser to open a new image in the current viewer.; ; If this encounters an exception, an error message will be shown. Returns:; true if the image was opened, false otherwise. promptToOpenImageFileOrUri; public boolean promptToOpenImageFileOrUri(); Show a dialog to open a new image in the current viewer, with support ; for entering a URL (rather than requiring a local file only).; ; If this encounters an exception, an error message will be shown. Returns:; true if the image was opened, false otherwise. openImage; public boolean openImage(QuPathViewer viewer,; String pathNew); throws IOException. Throws:; IOException. openImage; public boolean openImage(QuPathViewer viewer,; String pathNew,; boolean prompt,; boolean includeURLs); throws IOException; Open a new whole slide image server, or ImageData.; If the path is the same as a currently-open server, do nothing. Parameters:; viewer - the viewer into which the image should be opened; pathNew - ; prompt - if true, give the user the opportunity to cancel opening if a whole slide server is already set; includeURLs - if tr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:19481,error,error,19481,javadoc/docs/qupath/lib/gui/QuPathGUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html,1,['error'],['error']
Availability," labelled image. static Map<Number,ROI>; createROIs(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel). Convert integer labels into ROIs. static Mat; crop(Mat mat,; int x,; int y,; int width,; int height). Crop a region from a Mat based on its bounding box, returning a new image (not a subregion). static Mat; crop(Mat mat,; Padding padding). Crop a region from a Mat by stripping off padding, returning a new image (not a subregion). static Mat; ensureContinuous(Mat mat,; boolean inPlace). Ensure a Mat is continuous, creating a copy of the data if necessary. static double[]; extractDoubles(Mat mat). Extract pixels as a double array. static float[]; extractFloats(Mat mat). Extract pixels as a float array. static double[]; extractMaskedDoubles(Mat input,; Mat mask,; int channel). Extract pixels from an image using a mask, limited to the specified channel index. static float[]; extractMaskedFloats(Mat input,; Mat mask,; int channel). Extract pixels from an image using a mask, limited to the specified channel index. static double[]; extractPixels(Mat mat,; double[] pixels). Extract pixels as a double array. static float[]; extractPixels(Mat mat,; float[] pixels). Extract pixels as a float[] array. static List<Mat>; extractZStack(ImageServer<BufferedImage> server,; RegionRequest request). Extract a list of Mats, where each Mat corresponds to a z-slice, for all available z-slices of a region. static List<Mat>; extractZStack(ImageServer<BufferedImage> server,; RegionRequest request,; int zMin,; int zMax). Extract a list of Mats, where each Mat corresponds to a z-slice. static void; fill(Mat mat,; double value). Fill the pixels of an image with a specific value. static void; fill(Mat mat,; Mat mask,; double value). Fill the pixels of an image with a specific value, corresponding to a mask. static void; fillSmallHoles(Mat matBinary,; double maxArea). Fill holes in a binary image (1-channel, 8-bit unsigned) with an area <= maxArea. static void; filter2D(Mat mat,",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:4344,mask,mask,4344,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html,1,['mask'],['mask']
Availability," legendVisible - Variable in class qupath.lib.gui.charts.Charts.BarChartBuilder;  ; legendVisible - Variable in class qupath.lib.gui.charts.Charts.PieChartBuilder;  ; legendVisible - Variable in class qupath.lib.gui.charts.Charts.ScatterChartBuilder;  ; LENGTH - Enum constant in enum class qupath.lib.analysis.features.ObjectMeasurements.ShapeFeatures. Length of the shape; for area geometries, this provides the perimeter. leq(Mat, double) - Static method in class qupath.opencv.tools.GroovyCV. Apply a less than or equal to threshold. leq(Mat, Mat) - Static method in class qupath.opencv.tools.GroovyCV. Apply a less than or equal to threshold between two arrays. levels(Collection<ImageServerMetadata.ImageResolutionLevel>) - Method in class qupath.lib.images.servers.ImageServerMetadata.Builder. Specify resolution levels, where the largest image should come first. levelsFromDownsamples(double...) - Method in class qupath.lib.images.servers.ImageServerMetadata.Builder. Specify downsample values for pyramidal levels. LICENSE - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; limitDatapoints(int) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Choose the maximum number of supported datapoints. LINE - Enum constant in enum class qupath.lib.roi.interfaces.ROI.RoiType. ROI represents a line or polyline. LINE - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Line drawing tool. LINE_OR_ARROW - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Extended PathTool that can switch between drawing lines or arrows. LINE_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; LINE_TOOL - Variable in class qupath.lib.gui.ToolManager;  ; LineROI - Class in qupath.lib.roi. ROI representing a straight line, defined by its end points. lineThickness(float) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Thickness of boundary lines and line annotations, defined in terms ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:651666,down,downsample,651666,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['down'],['downsample']
Availability," means to specify exactly which objects should be classified, avoiding reliance on ObjectClassifier.getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Specified by:; classifyObjects in interface ObjectClassifier<BufferedImage>; Parameters:; imageData - data that may or may not be required for classification depending upon how features are extracted; pathObjects - the objects to classify; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. ObjectClassifier.classifyObjects(ImageData, boolean); ObjectClassifier.getCompatibleObjects(ImageData). tryToClassify; protected boolean tryToClassify(PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier). tryToClassify; protected int tryToClassify(List<? extends PathObject> pathObjects,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier); Try to classify a batch of objects. Parameters:; pathObjects - ; server - ; downsample - ; classifier - ; Returns:; number of classified objects. getMissingFeatures; public Map<String,Integer> getMissingFeatures(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects); Description copied from interface: ObjectClassifier; Check for missing features, returning the names and number of input objects missing the specified features.; This is useful as a warning that the input for the classifier may not be valid.; Default implementation returns an empty map; however, implementations should attempt to provide a meaningful ; output if possible. Features that are not missing should not be included in the output. Specified by:; getMissingFeatures in interface ObjectClassifier<BufferedImage>; Parameters:; imageData - image containing the objects to test; pathObjects - objects to test for missing featur",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html:4871,down,downsample,4871,javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,1,['down'],['downsample']
Availability," merging the result and storing the result in-place. static void; ceil(Mat mat). Ceil values in a floating point Mat. static double[]; channelMaximum(Mat mat). Get the minimum of an image channel, ignoring NaNs. static double[]; channelMean(Mat mat). Get the mean of an image channel, ignoring NaNs. static double[]; channelMinimum(Mat mat). Get the minimum of an image channel, ignoring NaNs. static double[]; channelStdDev(Mat mat). Get the standard deviation of image channels, ignoring NaNs. static double[]; channelSum(Mat mat). Get the sum of image channels, ignoring NaNs. static void; closingFilter(Mat mat,; int radius). Apply a 2D closing filter (dilation followed by erosion) to all channels of an image. static List<PathObject>; createAnnotations(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel). Create annotation objects by tracing contours in a labelled image. static Mat; createBinaryMask(Mat mat,; DoublePredicate predicate). Create a binary mask (0, 255 values) by applying a predicate to pixel values. static List<PathObject>; createCells(Mat matLabelsNuclei,; Mat matLabelsCells,; RegionRequest region,; int minLabel,; int maxLabel). Create cell objects by tracing contours in a labelled image. static List<PathObject>; createDetections(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel). Create detection objects by tracing contours in a labelled image. static Mat; createDisk(int radius,; boolean doMean). Create a disk filter. static Mat; createMask(Mat mat,; DoublePredicate predicate,; double trueValue,; double falseValue). Create a mask by applying a predicate to pixel values. static List<PathObject>; createObjects(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel,; BiFunction<ROI,Number,PathObject> creator). Create objects by tracing contours in a labelled image. static Map<Number,ROI>; createROIs(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel). Convert integer labels into ROIs. static Mat; c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:2493,mask,mask,2493,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html,1,['mask'],['mask']
Availability," method in class qupath.lib.scripting.QP. Make an inverse annotation using the current ImageData and its current selected objects. makeInverseAnnotation(ImageData<?>) - Static method in class qupath.lib.gui.commands.Commands. Make an inverse annotation for the selected objects, storing the command in the history workflow. makeInverseAnnotation(ImageData<?>) - Static method in class qupath.lib.scripting.QP. Make an inverse annotation using the specified ImageData and current selected objects. makeInverseAnnotation(ImageData<?>, Collection<PathObject>) - Static method in class qupath.lib.scripting.QP. Make an annotation, for which the ROI is obtained by subtracting the ROIs of the specified objects from the closest ; common ancestor ROI (or entire image if the closest ancestor is the root). makeInverseAnnotation(ImageData<?>, PathObject) - Static method in class qupath.lib.scripting.QP. Make an annotation for the specified ImageData, for which the ROI is obtained by subtracting ; the existing ROI from the ROI of its parent object (or entire image if no suitable parent object is available). makeInverseAnnotation(PathObject) - Static method in class qupath.lib.scripting.QP. Make an annotation for the current ImageData, for which the ROI is obtained by subtracting ; the existing ROI from the ROI of its parent object (or entire image if no suitable parent object is available). makeMeasurementHistogram(Collection<PathObject>, String, int) - Static method in class qupath.lib.analysis.stats.Histogram. Create a histogram depicting values of a specific measurement extracted from a collection of PathObjects. makeOD(double, double) - Static method in class qupath.lib.color.ColorDeconvolutionHelper. Convert a single pixel value to an optical density as max(0, -log10(val/max). makeODByLUT(float, double[]) - Static method in class qupath.lib.color.ColorDeconvolutionHelper. Convert a float pixel to an optical density value using a pre-computed lookup table. makeODByLUT(int, double[])",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:665690,avail,available,665690,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability," normalization, by adding an offset and then multiplying by a scaling factor. NumericParameter<S>. Abstract parameter to represent a numeric value. NumpyTools. Read .npy and .npz files from NumPy. ObjectClassifier<T>. Interface defining object classifiers, which assign PathClasses to PathObjects. ObjectClassifierCommand. Command used to create and show a suitable dialog box for interactive display of OpenCV classifiers. ObjectClassifierLoadCommand. Command to apply a pre-trained object classifier to an image. ObjectClassifiers. Helper class for creating ObjectClassifiers. ObjectClassifiers.ClassifyByMeasurementBuilder<T>. Builder to create a simple ObjectClassifier that assigns a classification based upon whether the ; measurement of an object is above, equal to or below a specified threshold. ObjectClassifiers.ObjectClassifierTypeAdapterFactory. TypeAdapterFactory to help with serializing ObjectClassifiers to and from JSON. ObjectDescriptionPane<T>. Wraps a pane used to display an object description, if one is available. ObjectDetector<T>. Minimal interface that may be used to plugins that perform detection within a specified ROI ; and using a specified ImageData with set parameters. ObjectMeasurements. Experimental class to generate object measurements. ObjectMeasurements.Compartments. Cell compartments. ObjectMeasurements.Measurements. Requested intensity measurements. ObjectMeasurements.ShapeFeatures. Standard measurements that may be computed from shapes. ObjectMerger. Helper class for merging objects using different criteria. ObjectsMenuActions;  ; ObjectTreeBrowser. Simple browser for exploring fields (including private fields) within an object by reflection. ObservableMeasurementTableData. A table data model to supply observable measurements of PathObjects. OMEPixelParser. This class can parse raw bytes into a BufferedImage. OMEPixelParser.Builder. Builder for instances of OMEPixelParser. OMEPyramidWriter. Write OME-TIFF files based on QuPath ImageServers. OM",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:32192,avail,available,32192,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['avail'],['available']
Availability," of the report, e.g. "", "" or ""\n""; Returns:; See Also:. trackedMemory(); physicalMemory(). findMaxima; public static Collection<OpenCVTools.IndexedPixel> findMaxima(Mat mat,; Mat mask); Find maxima within an image. Parameters:; mat - image containing maxima; must be 2D and single-channel; mask - optional mask; Returns:. getMaskedPixels; public static List<OpenCVTools.IndexedPixel> getMaskedPixels(Mat mat,; Mat mask); Extract all the masked pixels within an image. Parameters:; mat - input image; must be single-channel; mask - mask of the same size as mat; Returns:; list of pixels, including their indices and values. extractMaskedFloats; public static float[] extractMaskedFloats(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pixels should be extracted; mask - the mask to apply to the input; channel - the channel index (zero-based) to consider; Returns:; a float array containing the values of the input filtered by the mask; Throws:; IllegalArgumentException - when the input and the mask don't have the same dimensions. extractMaskedDoubles; public static double[] extractMaskedDoubles(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pixels should be extracted; mask - the mask to apply to the input; channel - the channel index (zero-based) to consider; Returns:; a double array containing the values of the",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:44471,mask,mask,44471,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html,1,['mask'],['mask']
Availability," one with the updated t value. RegionRequest; updateZ(int z). Create a RegionRequest equivalent to this one with the updated z value. Methods inherited from class qupath.lib.regions.ImageRegion; contains, createInstance, createInstance, createInstance, getHeight, getImagePlane, getMaxX, getMaxY, getMinX, getMinY, getPlane, getT, getWidth, getX, getY, getZ, intersects, intersects. Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. toString; public String toString(). Overrides:; toString in class ImageRegion. createInstance; public static RegionRequest createInstance(ImageServer<?> server); Create a request for the full width and height of an ImageServer, for the default plane (first z-slice, time point) ; and first resolution level downsample (usually 1, but not always). Parameters:; server - ; Returns:. createInstance; public static RegionRequest createInstance(ImageServer<?> server,; double downsample); Create a request for the full width and height of an ImageServer, for the default plane (first z-slice, time point). Parameters:; server - ; downsample - ; Returns:. createAllRequests; public static List<RegionRequest> createAllRequests(ImageServer<?> server,; double downsample); Create requests for the full width and height of an ImageServer, for all planes (z-slices and time points). Parameters:; server - ; downsample - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; ROI roi); Create a request that contains the pixels of the specified ROI.; This is calculated using the ROI bounding box. Parameters:; path - ; downsample - ; roi - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; Collection<? extends ROI> rois); Create a request that contains the pixels of the specified ROIs.; This is calculated using the ROI bounding boxes. Parameters:; path - ; downsample - ; rois - ; Returns:; T",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html:5122,down,downsample,5122,javadoc/docs/qupath/lib/regions/RegionRequest.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html,1,['down'],['downsample']
Availability," or null if no object could be created (e.g. the ImageJ roi is null or incompatible); Since:; v0.4.0; See Also:. convertToPathObject(ImagePlus, ImageServer, Roi, double, Function, ImagePlane); convertToDetection(Roi, double, ImagePlus). convertToAnnotation; public static PathObject convertToAnnotation(Roi roi,; double downsampleFactor,; ImagePlus imp); Create an annotation object for a specific ImageJ Roi. Parameters:; roi - the ImageJ ROI; downsampleFactor - the downsample factor used for rescaling (or 1.0 for no rescaling); imp - the ImagePlus associated with this Roi; it is used to determine the xOrigin, yOrigin and image plane; Returns:; a PathObject or null if no object could be created (e.g. the ImageJ roi is null or incompatible); Since:; v0.4.0; See Also:. convertToPathObject(ImagePlus, ImageServer, Roi, double, Function, ImagePlane); convertToAnnotation(Roi, double, double, double, ImagePlane). convertToDetection; public static PathObject convertToDetection(Roi roi,; double downsampleFactor,; ImagePlus imp); Create a detection object for a specific ImageJ Roi. Parameters:; roi - the ImageJ ROI; downsampleFactor - the downsample factor used for rescaling (or 1.0 for no rescaling); imp - the ImagePlus associated with this Roi; it is used to determine the xOrigin, yOrigin and image plane; Returns:; a PathObject or null if no object could be created (e.g. the ImageJ roi is null or incompatible); Since:; v0.4.0; See Also:. convertToPathObject(ImagePlus, ImageServer, Roi, double, Function, ImagePlane); convertToDetection(Roi, double, double, double, ImagePlane). readImageJRois; public static List<Roi> readImageJRois(File file); Read ImageJ Rois from a .roi or a RoiSet.zip file. Parameters:; file - ; Returns:. containsImageJRois; public static boolean containsImageJRois(File file); Check whether a file is likely to contain an ImageJ ROI, based upon its extension ; or .zip file contents. Parameters:; file - ; Returns:; true if the file seems to contain ImageJ ROIs, ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:16111,down,downsampleFactor,16111,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,1,['down'],['downsampleFactor']
Availability," output as a labeled image. Parameters:; mat - image containing maxima; must be 2D and single-channel; Returns:. physicalMemory; public static String physicalMemory(); Get a brief, one-line report on current physical memory use, based on JavaCPP's Pointer class.; This is suitable for logging if required. Returns:; See Also:. trackedMemory(); memoryReport(CharSequence). trackedMemory; public static String trackedMemory(); Get a brief, one-line report on tracked memory use, based on JavaCPP's Pointer class.; This is suitable for logging if required. Returns:; See Also:. physicalMemory(); memoryReport(CharSequence). memoryReport; public static String memoryReport(CharSequence delimiter); Create a brief report on memory use, based on JavaCPP's Pointer class. Parameters:; delimiter - delimiter to use between elements of the report, e.g. "", "" or ""\n""; Returns:; See Also:. trackedMemory(); physicalMemory(). findMaxima; public static Collection<OpenCVTools.IndexedPixel> findMaxima(Mat mat,; Mat mask); Find maxima within an image. Parameters:; mat - image containing maxima; must be 2D and single-channel; mask - optional mask; Returns:. getMaskedPixels; public static List<OpenCVTools.IndexedPixel> getMaskedPixels(Mat mat,; Mat mask); Extract all the masked pixels within an image. Parameters:; mat - input image; must be single-channel; mask - mask of the same size as mat; Returns:; list of pixels, including their indices and values. extractMaskedFloats; public static float[] extractMaskedFloats(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pixels should be extracted; mask - the mask to apply to the input; channel - the channel index (zero-ba",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:43658,mask,mask,43658,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html,1,['mask'],['mask']
Availability," pass to the script. ScriptParameters.Builder; setBatchIndex(int ind). Set the current image index for batch processing (default is 0). ScriptParameters.Builder; setBatchSaveResult(boolean doSave). Specify whether the script that is running should save results or not. ScriptParameters.Builder; setBatchSize(int batch). Set the batch size for batch processing (default is 1). ScriptParameters.Builder; setDefaultImports(Collection<Class<?>> imports);  ; ScriptParameters.Builder; setDefaultStaticImports(Collection<Class<?>> imports);  ; ScriptParameters.Builder; setErrorWriter(Writer writer). Set the main error writer. ScriptParameters.Builder; setFile(File file);  ; ScriptParameters.Builder; setImageData(ImageData<?> imageData). Set the current image data for the script. ScriptParameters.Builder; setProject(Project<?> project). Set the current project for the script. ScriptParameters.Builder; setScript(String script);  ; ScriptParameters.Builder; setSystemWriters(). Set the output and error writers to use System.out and System.err. ScriptParameters.Builder; setWriter(Writer writer). Set the main output writer. ScriptParameters.Builder; useCompiled(boolean useCompiled). Request that the script is compiled before being evaluated, ; or a previously compiled version is used where available. ScriptParameters.Builder; useLogWriters(). Set the output and error writers to append to the default logger. ScriptParameters.Builder; useLogWriters(org.slf4j.Logger logger). Set the output and error writers to append to the specified logger. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. setDefaultImports; public ScriptParameters.Builder setDefaultImports(Collection<Class<?>> imports). setDefaultStaticImports; public ScriptParameters.Builder setDefaultStaticImports(Collection<Class<?>> imports). setFile; public ScriptParameters.Builder setFile(File file). setScript; public ScriptP",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html:2048,error,error,2048,javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,1,['error'],['error']
Availability," public static boolean selectObjectsByClassification(ImageData<?> imageData,; PathClass... pathClasses); Select objects by classification, logging the step (if performed) in the history workflow. Parameters:; imageData - the ImageData containing objects to be selected; pathClasses - classifications that will result in an object being selected; Returns:; true if a selection command was run, false otherwise (e.g. if no pathClasses were specified). promptToDeleteObjects; public static void promptToDeleteObjects(ImageData<?> imageData,; Class<? extends PathObject> cls); Prompt to delete objects of a specified type, or all objects. Parameters:; imageData - ; cls - . promptToResetPreferences; public static boolean promptToResetPreferences(); Reset QuPath's preferences, after confirming with the user.; QuPath needs to be restarted for this to take effect. Returns:; true if the preferences were reset, false otherwise. setViewerDownsample; public static void setViewerDownsample(QuPathViewer viewer,; double downsample); Set the downsample factor for the specified viewer. Parameters:; viewer - ; downsample - . closeProject; public static void closeProject(QuPathGUI qupath); Close the current project open in the QuPathGUI. Parameters:; qupath - . promptToCreateProject; public static boolean promptToCreateProject(QuPathGUI qupath); Prompt the user to select an empty directory, and use this to create a new project and set it as active. Parameters:; qupath - the QuPathGUI instance for which the project should be created.; Returns:; true if a project was created, false otherwise (e.g. the user cancelled). promptToOpenProject; public static boolean promptToOpenProject(QuPathGUI qupath); Prompt the user to open an existing project and set it as active. Parameters:; qupath - the QuPathGUI instance for which the project should be opened.; Returns:; true if a project was opened, false otherwise (e.g. the user cancelled). launchTMADataViewer; public static void launchTMADataViewer(QuPath",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:21232,down,downsample,21232,javadoc/docs/qupath/lib/gui/commands/Commands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html,2,['down'],['downsample']
Availability," public ImageServer<BufferedImage> getPixelClassificationServer(ImageData<BufferedImage> imageData); Get the ImageServer that would be used by this overlay for the specified ImageData.; Note that the servers are cached internally. Parameters:; imageData - ; Returns:. paintOverlay; public void paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely); Description copied from interface: PathOverlay; Paint the overlay to a graphics object. The graphics object will have a transform applied to it, so the painting should; make use of coordinates in the original image space. Specified by:; paintOverlay in interface PathOverlay; Overrides:; paintOverlay in class AbstractImageOverlay; Parameters:; g2d - Graphics2D object to which drawing should be performed. This should have any transform already applied to it.; imageRegion - The maximum image region that should be shown.; downsampleFactor - The downsample factor at which the overlay will be viewed. There is no need for rescaling according to; this value since it has already been applied to the Graphics2D as part of its AffineTransform, however; it may optionally be needed within the method e.g. to correct line thicknesses.; imageData - the ImageData associated with this overlay. If the overlay is being displayed on a viewer, this is the ImageData open ; within the viewer. Not all overlays require this, and it may be null.; paintCompletely - If true, the method is permitted to return without completely painting everything, for performance reasons. clearCache; public void clearCache(); Clear any cached tiles. stop; public void stop(); Stop the overlap, halting any pending tile requests. getLocationString; public String getLocationString(ImageData<BufferedImage> imageData,; double x,; double y,; int z,; int t); Description copied from interface: PathOverlay; Get a location string to display when showing a specified image.; ; The default implem",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html:9567,down,downsampleFactor,9567,javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,2,['down'],"['downsample', 'downsampleFactor']"
Availability," public List<BufferedImage> getAllThumbnails(); Get thumbnails for all z-slices & time points. Returns:. getRGBThumbnail; public BufferedImage getRGBThumbnail(); Get a thumbnail representing the image as displayed by this viewer.; ; Note: This will be a color (aRGB) image, with any color transforms applied -; therefore should not be used to extract 'original' pixel values. Returns:. setDownsampleFactor; public void setDownsampleFactor(double downsampleFactor,; double cx,; double cy); Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards.; The purpose is to make it possible to zoom in/out while keeping the cursor focussed on a particular location.; ; The specified downsample factor will automatically be clipped to the range getMinDownsample to getMaxDownsample. Parameters:; downsampleFactor - ; cx - ; cy - . setDownsampleFactor; public void setDownsampleFactor(double downsampleFactor,; double cx,; double cy,; boolean clipToMinMax); Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards.; The purpose is to make it possible to zoom in/out while keeping the cursor focused on a particular location. Parameters:; downsampleFactor - ; cx - ; cy - ; clipToMinMax - If true, the specified downsample factor will be clipped ; to the range getMinDownsample to getMaxDownsample. getZoomToFitDownsampleFactor; protected double getZoomToFitDownsampleFactor(). getServerWidth; public int getServerWidth(); Get the width in pixels of the full resolution of the current image, or 0 if no image is currently open. Returns:. getServerHeight; public int getServerHeight(); Get the height in pixels of the full resolution of the current image, or 0 if no image is currently open. Returns:. getServerBounds; public ImageRegion getServerBounds(); Get an ImageRegion representing the full width and height of the current image.; The ImagePlane is set according to the z and t position o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:29687,down,downsampleFactor,29687,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,2,['down'],"['downsample', 'downsampleFactor']"
Availability," qupath.opencv.dnn.DnnModelParams.Builder. Specify the URIs as a collection. UriUpdater<T> - Class in qupath.lib.io. Helper class for updating URIs, for example whenever files have moved or projects have been transferred between computers. UriUpdater.SingleUriItem - Class in qupath.lib.io. Wrapper for a URI, providing access to a Path if available. UriUpdater.UriStatus - Enum Class in qupath.lib.io. Enum representing the status of a URI, i.e. Urls - Class in qupath.lib.gui. Class to return core QuPath URLs centrally. Urls() - Constructor for class qupath.lib.gui.Urls;  ; useAnnotations() - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Use annotations for labels. useCalibratedLocationStringProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Show the cursor location on a viewer in calibrated units, rather than pixels. useCellNuclei() - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Use cells rather than annotations for labels, requesting the nucleus ROI where available. useCells() - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Use cells rather than annotations for labels. useColorLUTs() - Method in class qupath.lib.display.ImageDisplay. The opposite of ImageDisplay.useGrayscaleLuts(). useCompiled() - Method in class qupath.lib.scripting.ScriptParameters. Request that any script should be compiled before being evaluated, ; and previously compiled versions reused when possible. useCompiled(boolean) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Request that the script is compiled before being evaluated, ; or a previously compiled version is used where available. useCuda() - Static method in class qupath.opencv.dnn.DnnTools. Returns true if CUDA is available and requested. useDetections() - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Use detections rather than annotations for labels. useExtensions - Variable in class qupath.lib.images.server",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1071122,avail,available,1071122,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability," range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; Throws:; IOException; Since:; v0.4.0; See Also:. readRegion(double, int, int, int, int, int, int); readRegion(double, int, int, int, int); readBufferedImage(RegionRequest). readRegion; default T readRegion(double downsample,; int x,; int y,; int width,; int height,; int z,; int t); throws IOException; Read a 2D(+C) image region for a specified z-plane and timepoint.; Coordinates and bounding box dimensions are in pixel units, at the full image resolution ; (i.e. when downsample = 1).; ; All channels are always returned. Parameters:; downsample - downsample factor for the region; x - x coordinate of the top left of the region bounding box; y - y coordinate of the top left of the region bounding box; width - bounding box width; height - bounding box height; z - index for the z-position; t - index for the timepoint; Returns:; pixels for the region being requested; Throws:; IOException; Since:; v0.4.0; See Also:. readRegion(RegionRequest). readRegion; default T readRegion(double downsample,; int x,; int y,; int width,; int height); throws IOException; Read a 2D(+C) image region from the default ImagePlane (i.e. z and t are 0).; Coordinates and bounding box dimensions are in pixel units, at the full image resolution ; (i.e. when downsample = 1).; ; All channels are always returned. Parameters:; downsample - downsample factor for the region; x - x coordinate of the top left of the region bounding box; y - y coordinate of the top left of the region bounding bo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html:10136,down,downsample,10136,javadoc/docs/qupath/lib/images/servers/ImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html,1,['down'],['downsample']
Availability," repaint itself. setBorderColor; public void setBorderColor(Color color); Set the border color for this viewer.; This can be used to indicate (for example) that a particular viewer is active. Parameters:; color - . getBorderColor; public Color getBorderColor(); Get the border color set for this viewer. Returns:. repaint; public void repaint(); Request that the viewer is repainted.; The repaint is not triggered immediately, but rather enqueued for future processing.; ; Note that this can be used for changes in the field of view or overlay, but not for ; large changes that require any cached thumbnail to also be updated (e.g. changing the ; brightness/contrast or lookup table). In such cases repaintEntireImage() is required. See Also:. repaintEntireImage(). getMinDownsample; public double getMinDownsample(); Get the minimum downsample value supported by this viewer.; This prevents zooming in by an unreasonably large amount. Returns:. getMaxDownsample; public double getMaxDownsample(); Get the maximum downsample value supported by this viewer.; This prevents zooming out by an unreasonably large amount. Returns:. zoomOut; public void zoomOut(int nSteps); Zoom out by a specified number of steps, where one 'step' indicates a minimal zoom increment. Parameters:; nSteps - . zoomIn; public void zoomIn(int nSteps); Zoom in by a specified number of steps, where one 'step' indicates a minimal zoom increment. Parameters:; nSteps - . getDefaultZoomFactor; public double getDefaultZoomFactor(); The amount by which the downsample factor is scaled for one increment of zoomIn() or ; zoomOut(). Controls zoom speed. Returns:. zoomOut; public void zoomOut(); Zoom out by one step. See Also:. zoomOut(int); getDefaultZoomFactor(). zoomIn; public void zoomIn(); Zoom in by one step. See Also:. zoomIn(int); getDefaultZoomFactor(). imageDataProperty; public ReadOnlyObjectProperty<ImageData<BufferedImage>> imageDataProperty(); Property for the image data currently being displayed within this view",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:17192,down,downsample,17192,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,1,['down'],['downsample']
Availability," should automatically be applied to all new annotations. autoSetDisplayRange(ChannelDisplayInfo) - Method in class qupath.lib.display.ImageDisplay. Automatically set the display range for a channel, using the default saturation defined in PathPrefs.autoBrightnessContrastSaturationPercentProperty(). autoSetDisplayRange(ChannelDisplayInfo, double) - Method in class qupath.lib.display.ImageDisplay. Automatically set the display range for a channel. autoUnits() - Method in class qupath.lib.common.Timeit;  ; autoUpdate - Variable in class qupath.lib.gui.panes.PreferencePane.AppearancePreferences;  ; autoUpdate - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; autoUpdateCheckProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Check for updates when launching QuPath, if possible. availableChannels() - Method in class qupath.lib.display.ImageDisplay. ObservableList containing the channels currently available for display. availableFontsProperty() - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Get a list of available fonts. availableStylesProperty() - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Get the current available styles as an observable list. averageChannelProject() - Method in class qupath.lib.images.servers.TransformedServerBuilder. Perform an average (mean) projection of the channels. awaitCompletion() - Method in class qupath.lib.plugins.AbstractTaskRunner. Await the completion of currently-running tasks, notifying any listener if necessary. AwtTools - Class in qupath.lib.awt.common. A collection of static methods useful when working with AWT shapes and ImageRegions. B. backend(int) - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Specify the backend, e.g. backgroundColor - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; backgroundColor(int, boolean) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify a base color. b",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:51201,avail,availableFontsProperty,51201,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['availableFontsProperty']
Availability," showErrorNotification(String title,; Throwable e). Deprecated.; Show an error notification, displaying the localized message of a Throwable. static void; showInfoNotification(String title,; String message). Deprecated.; Show an info notification. static Double; showInputDialog(String title,; String message,; Double initialInput). Deprecated.; Show an input dialog requesting a numeric value. static String; showInputDialog(String title,; String message,; String initialInput). Deprecated.; Show an input dialog requesting a String input. static boolean; showMessageDialog(String title,; String message). Deprecated.; Show a standard message dialog. static boolean; showMessageDialog(String title,; Node node). Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. static void; showNoImageError(String title). Deprecated.; Show an error message that no image is available. static void; showNoProjectError(String title). Deprecated.; Show an error message that no project is available. static boolean; showParameterDialog(String title,; ParameterList params). Deprecated.; Show a (modal) dialog for a specified ParameterList. static void; showPlainMessage(String title,; String message). Deprecated.; Show a plain message. static void; showPlainNotification(String title,; String message). Deprecated.; Show a plain notification. static void; showTextWindow(Window owner,; String title,; String contents,; Modality modality,; boolean isEditable). Deprecated.; Show a window containing plain text, with the specified properties. static void; showWarningNotification(String title,; String message). Deprecated.; Show a warning notification. static Dialogs.DialogButton; showYesNoCancelDialog(String title,; String text). Deprecated.; Show a Yes/No/Cancel dialog. static boolean; showYesNoDialog(String title,; String text). Deprecated.; Show a Yes/No dialog. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, no",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:4543,error,error,4543,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,2,"['avail', 'error']","['available', 'error']"
Availability," some other way (e.g. created dynamically) the path may not lend itself to ; a URI representation, but must still be unique so that it can be used for caching tiles. Returns:. getURIs; Collection<URI> getURIs(); Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see getBuilder(). Returns:. getPreferredDownsamples; double[] getPreferredDownsamples(); Get an array of downsample factors supported by the server. Returns:. nResolutions; int nResolutions(); Number of resolutions for the image.; ; This is equivalent to getPreferredDownsamples().length. Returns:. getDownsampleForResolution; double getDownsampleForResolution(int level); Get the downsample factor for a specified resolution level, where level 0 is the full resolution image ; and nResolutions() - 1 is the lowest resolution available. Parameters:; level - Resolution level, should be 0 <= level < nResolutions().; Returns:. getWidth; int getWidth(); Width of the full-resolution image in pixels. Returns:. getHeight; int getHeight(); Height of the full-resolution image in pixels. Returns:. nChannels; int nChannels(); Number of channels (3 for RGB). Returns:. isRGB; boolean isRGB(); True if the image has 8-bit red, green & blue channels (and nothing else), false otherwise. Returns:. nZSlices; int nZSlices(); Number of slices in a z-stack. Returns:. nTimepoints; int nTimepoints(); Number of time points in a time series. Returns:. getPixelCalibration; default PixelCalibration getPixelCalibration(); Get the PixelCalibration object from the current metadata. Returns:. getCachedTile; T getCachedTile(TileRequest tile); Get a cached tile, or null if the tile has not been cached.; ; This is useful whenever it i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html:6280,down,downsample,6280,javadoc/docs/qupath/lib/images/servers/ImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html,2,"['avail', 'down']","['available', 'downsample']"
Availability," specify image tiles at a particular resolution.; ; Why?; ; Because downsamples can be defined with floating point precision, and are not always unambiguous when ; calculated as the ratios of pyramid level dimensions (i.e. different apparent horizontal and vertical scaling), ; a RegionRequest is too fuzzy a way to refer to a specific rectangle of pixels from a specific pyramid level. ; Rounding errors can easily occur, and different image readers might respond differently to the same request.; ; Consequently, TileRequests provide a means to reproducibly define coordinates at pyramid levels and not only ; the full resolution image space. They wrap a RegionRequest, because this is still used for caching purposes. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static TileRequest; createInstance(String path,; int level,; double downsample,; ImageRegion tileRegion). Create a new tile request for a specified region, downsample and resolution level. static TileRequest; createInstance(ImageServer<?> server,; int level,; ImageRegion tileRegion). Create a new tile request for a specified region and resolution level of an image. boolean; equals(Object obj);  ; double; getDownsample(). Get the downsample value for this tile. int; getImageHeight(). Get the height of the bounding box for this tile in the full resolution image. ImagePlane; getImagePlane(). Get the ImagePlane for this request. int; getImageWidth(). Get the width of the bounding box for this tile in the full resolution image. int; getImageX(). Get the x-coordinate of the bounding box for this tile in the full resolution image. int; getImageY(). Get the y-coordinate of the bounding box for this tile in the full resolution image. int; getLevel(). Get the resolution level. ImagePlane; getPlane(). Deprecated.; v0.4.0 use getImagePlane() instead (changed for better consistency with other classes). RegionRequest; getRegionRequest(). Get t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TileRequest.html:1539,down,downsample,1539,javadoc/docs/qupath/lib/images/servers/TileRequest.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TileRequest.html,1,['down'],['downsample']
Availability," static void; addShapeMeasurements(Collection<? extends PathObject> pathObjects,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features). Add shape measurements for multiple objects. static void; addShapeMeasurements(PathObject pathObject,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features). Add shape measurements for one object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ObjectMeasurements; public ObjectMeasurements(). Method Details. addShapeMeasurements; public static void addShapeMeasurements(PathObject pathObject,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features); Add shape measurements for one object. If this is a cell, measurements will be made for both the ; nucleus and cell boundary where possible. Parameters:; pathObject - the object for which measurements should be added; cal - pixel calibration, used to determine units and scaling; features - specific features to add; if empty, all available shape features will be added. addShapeMeasurements; public static void addShapeMeasurements(Collection<? extends PathObject> pathObjects,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features); Add shape measurements for multiple objects. If any of these objects is a cell, measurements will be made for both the ; nucleus and cell boundary where possible. Parameters:; pathObjects - the objects for which measurements should be added; cal - pixel calibration, used to determine units and scaling; features - specific features to add; if empty, all available shape features will be added. addIntensityMeasurements; public static void addIntensityMeasurements(ImageServer<BufferedImage> server,; PathObject pathObject,; double downsample,; Collection<ObjectMeasurements.Measurements> measurements,; Collection<ObjectMeasurements.Compartments> compartments); throws IOException; Measure all channels o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html:2553,avail,available,2553,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html,1,['avail'],['available']
Availability," static void; setHGrowPriority(Priority priority,; Node... nodes). Deprecated.; Set the GridPane.setHgrow(Node, Priority) property for specified nodes. static void; setMaxHeight(double height,; Region... regions). Deprecated.; Set the max height property for the specified regions. static void; setMaxWidth(double width,; Region... regions). Deprecated.; Set the max width property for the specified regions. static void; setMinHeight(double height,; Region... regions). Deprecated.; Set the min height property for the specified regions. static void; setMinWidth(double width,; Region... regions). Deprecated.; Set the min width property for the specified regions. static void; setToExpandGridPaneHeight(Node... nodes). Deprecated.; Set constraints and max width values (where possible) so that the specified nodes ; fill all available vertical space in a GridPane. static void; setToExpandGridPaneWidth(Node... nodes). Deprecated.; Set constraints and max width values (where possible) so that the specified nodes ; fill all available horizontal space in a GridPane. static void; setVGrowPriority(Priority priority,; Node... nodes). Deprecated.; Set the GridPane.setVgrow(Node, Priority) property for specified nodes. static void; simplifyTitledPane(TitledPane pane,; boolean boldTitle). Deprecated.; Simplify the appearance of a TitledPane using CSS. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PaneTools; public PaneTools(); Deprecated. Method Details. addGridRow; public static void addGridRow(GridPane pane,; int row,; int col,; String tooltipText,; Node... nodes); Deprecated.; Add a row of nodes. The rowspan is always 1. The colspan is 1 by default, ; unless a Node is added multiple times consecutively in which case it is the sum ; of the number of times the node is added. Parameters:; pane - ; row - ; col - ; tooltipText - ; nodes - . setHGrowPriority; public static voi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PaneTools.html:3602,avail,available,3602,javadoc/docs/qupath/lib/gui/tools/PaneTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PaneTools.html,1,['avail'],['available']
Availability," supported by the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). TileRequestManager; getTileRequestManager(). Get a TileRequestManager that can be used to identify image tiles that may be efficiently requested; from this ImageServer. Collection<URI>; getURIs(). Get the URIs for images required for this server. int; getWidth(). Width of the full-resolution image in pixels. boolean; isEmptyRegion(RegionRequest request). Test whether a region is empty, i.e. boolean; isRGB(). True if the image has 8-bit red, green & blue channels (and nothing else), false otherwise. int; nChannels(). Number of channels (3 for RGB). int; nResolutions(). Number of resolutions for the image. int; nTimepoints(). Number of time points in a time series. int; nZSlices(). Number of slices in a z-stack. default T; readBufferedImage(RegionRequest request). Deprecated.; since v0.4.0. default T; readRegion(double downsample,; int x,; int y,; int width,; int height). Read a 2D(+C) image region from the default ImagePlane (i.e. default T; readRegion(double downsample,; int x,; int y,; int width,; int height,; int z,; int t). Read a 2D(+C) image region for a specified z-plane and timepoint. default T; readRegion(RegionRequest request). Read a 2D(+C) image region for a specified RegionRequest. void; setMetadata(ImageServerMetadata metadata). Set the metadata to use, e.g. Methods inherited from interface java.lang.AutoCloseable; close. Method Details. getPath; String getPath(); Get a String path that can uniquely identify this image.; ; For most standard images, this should be a String representation of an absolute URI. ; If multiple images are stored within the same file, then this information should be encoded in the URI.; ; For images that are generated some other way (e.g. created dynamically) the path may not lend itself to ; a URI representation, but must still be unique so that it can be used for caching",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html:4462,down,downsample,4462,javadoc/docs/qupath/lib/images/servers/ImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html,1,['down'],['downsample']
Availability," that the image is written in BigTIFF format. OMEPyramidWriter.Builder; bigTiff(boolean doBigTiff). Specify whether the image should be written in BigTIFF format. OMEPyramidWriter.OMEPyramidSeries; build(). Create an OMEPyramidWriter.OMEPyramidSeries to write the OME-TIFF. OMEPyramidWriter.Builder; channels(int... channels). Override default of writing all channels in their original order to be able to specify which ; channels are output, and in which order. OMEPyramidWriter.Builder; channelsImages(). Request that channels are written as separate images. OMEPyramidWriter.Builder; channelsInterleaved(). Request that channels are written interleaved within a single image plane. OMEPyramidWriter.Builder; channelsPlanar(). Request that channels are written as separate image planes. OMEPyramidWriter.Builder; compression(OMEPyramidWriter.CompressionType compression). Request the output compression type. OMEPyramidWriter.Builder; downsamples(double... downsamples). Specify downsample factors to use in the final pyramid. OMEPyramidWriter.Builder; dyadicDownsampling(). Downsample by factors of 2. OMEPyramidWriter.Builder; losslessCompression(). Request the default lossless compression method. OMEPyramidWriter.Builder; lossyCompression(). Request the default lossy compression method. OMEPyramidWriter.Builder; name(String name). Specify a series name. OMEPyramidWriter.Builder; parallelize(). Parallelize tile export, if possible. OMEPyramidWriter.Builder; parallelize(boolean doParallel). Specify if tile export should be parallelized if possible, with the default number of threads (current 4). OMEPyramidWriter.Builder; parallelize(int nThreads). Specify if tile export should be parallelized if possible, with the requested number of threads. OMEPyramidWriter.Builder; pixelType(String exportPixelType). Specify the output PixelType as a String, e.g. OMEPyramidWriter.Builder; pixelType(PixelType exportPixelType). Specify the output PixelType. OMEPyramidWriter.Builder; region(int x,;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html:2145,down,downsample,2145,javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html,1,['down'],['downsample']
Availability," the dialog. showChoiceDialog; public static <T> T showChoiceDialog(String title,; String message,; Collection<T> choices,; T defaultChoice); Deprecated.; Show a choice dialog with a collection of choices (selection from ComboBox or similar). Type Parameters:; T - ; Parameters:; title - dialog title; message - dialog prompt; choices - list of available options; defaultChoice - initial selected option; Returns:; chosen option, or null if the user cancels the dialog. showErrorMessage; public static void showErrorMessage(String title,; Throwable e); Deprecated.; Show an error message, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; Throwable e); Deprecated.; Show an error notification, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; String message); Deprecated.; Show an error notification. Parameters:; title - ; message - . showWarningNotification; public static void showWarningNotification(String title,; String message); Deprecated.; Show a warning notification. Parameters:; title - ; message - . showInfoNotification; public static void showInfoNotification(String title,; String message); Deprecated.; Show an info notification. Parameters:; title - ; message - . showPlainNotification; public static void showPlainNotification(String title,; String message); Deprecated.; Show a plain notification. Parameters:; title - ; message - . showNoImageError; public static void showNoImageError(String title); Deprecated.; Show an error message that no image is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Deprecated.; Show an error message that no project is available. This is included to help ; standardize the message throughout th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:9227,error,error,9227,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['error'],['error']
Availability," the first channel of a server with a specified channel name. static String; getDefaultShortServerName(URI uri). Get the default shortened server name given the server's path. static String; getDisplayableImageName(ImageServer<?> server). Get an ImageServer name suitable for displaying. static double; getDownsampleFactor(ImageServer<?> server,; double preferredPixelSizeMicrons). Calculate a downsample factor for a server given a preferred pixel size. static BufferedImage; getPaddedRequest(ImageServer<BufferedImage> server,; RegionRequest request,; Padding padding). Get a raster, padded by the specified amount, to the left, right, above and below. static double; getPreferredDownsampleFactor(ImageServer<?> server,; double requestedDownsample). Get the downsample factor supported by the server that is the best match for the requested downsample. static int; getPreferredResolutionLevel(ImageServer<?> server,; double requestedDownsample). Get the preferred resolution level to request regions from an ImageServer at a specified downsample level. static boolean; setImageName(ImageServer<?> server,; String name). Set the name property of the metadata for an ImageServer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ServerTools; public ServerTools(). Method Details. getDefaultShortServerName; public static String getDefaultShortServerName(URI uri); Get the default shortened server name given the server's path. Parameters:; uri - ; Returns:. getChannelIndex; public static int getChannelIndex(ImageServer<?> server,; String channelName); Get the index of the first channel of a server with a specified channel name. Parameters:; server - ; channelName - ; Returns:; index (0-based) of the first channel with a name matching channelName, or -1 if no channel is found. getPreferredResolutionLevel; public static int getPreferredResolutionLevel(ImageServer<?> server,; double r",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ServerTools.html:2049,down,downsample,2049,javadoc/docs/qupath/lib/images/servers/ServerTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ServerTools.html,1,['down'],['downsample']
Availability," the full width and height of an ImageServer, for the default plane (first z-slice, time point). Parameters:; server - ; downsample - ; Returns:. createAllRequests; public static List<RegionRequest> createAllRequests(ImageServer<?> server,; double downsample); Create requests for the full width and height of an ImageServer, for all planes (z-slices and time points). Parameters:; server - ; downsample - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; ROI roi); Create a request that contains the pixels of the specified ROI.; This is calculated using the ROI bounding box. Parameters:; path - ; downsample - ; roi - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; Collection<? extends ROI> rois); Create a request that contains the pixels of the specified ROIs.; This is calculated using the ROI bounding boxes. Parameters:; path - ; downsample - ; rois - ; Returns:; Throws:; IllegalArgumentException - if the ROIs do not all fall on the same ImagePlane. createInstance; public static RegionRequest createInstance(String path,; RegionRequest request); Create a request that matches another request but with a different path. Parameters:; path - ; request - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; ImageRegion region); Create a request corresponding to a specified ImageRegion.; This may also be used to construct a request based on an existing request, but changing either the path or downsample. Parameters:; path - ; downsample - ; region - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; int x,; int y,; int width,; int height,; int z,; int t); Create a request for a region specified in terms of its bounding box, z-slice and time point. Parameters:; path - ; downsample - ; x - ; y - ; width - ; height - ; z - ; t - ; Returns:. createInstance; public sta",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html:6106,down,downsample,6106,javadoc/docs/qupath/lib/regions/RegionRequest.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html,1,['down'],['downsample']
Availability," the image, if present. Parameters:; show - . setShowAnnotations; public void setShowAnnotations(boolean show); Show the annotations on the image. Parameters:; show - . setShowNames; public void setShowNames(boolean show); Show the object names on the image. Parameters:; show - . setFontSize; public void setFontSize(float size); Set the requested font size for the 'Show names' option. Parameters:; size - . setShowDetections; public void setShowDetections(boolean show); Show the objects as an overlay on the image. Parameters:; show - . setShowPixelClassification; public void setShowPixelClassification(boolean show); Show pixel classification overlays. Parameters:; show - . setFillDetections; public void setFillDetections(boolean fill); Show detection objects 'filled' in viewers. Parameters:; fill - . setFillAnnotations; public void setFillAnnotations(boolean fill); Show annotation objects 'filled' in viewers. Parameters:; fill - . setShowConnections; public void setShowConnections(boolean show); Show connections between objects, if available. Parameters:; show - . setShowTMACoreLabels; public void setShowTMACoreLabels(boolean showTMALabels); Show TMA core names on top of the image. Parameters:; showTMALabels - . getShowTMACoreLabels; public boolean getShowTMACoreLabels(). Returns:; true if TMA core labels should be shown in viewers, false otherwise. showTMACoreLabelsProperty; public BooleanProperty showTMACoreLabelsProperty(). Returns:; boolean property indicating whether TMA core labels should be shown in the viewer; See Also:. getShowTMACoreLabels(); setShowTMACoreLabels(boolean). showConnectionsProperty; public BooleanProperty showConnectionsProperty(). Returns:; boolean property indicating whether collections between objects should be shown (e.g. after Delaunay triangulation); See Also:. getShowConnections(); setShowConnections(boolean). getShowPixelClassification; public boolean getShowPixelClassification(). Returns:; true if the current active pixel classificat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html:12769,avail,available,12769,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,1,['avail'],['available']
Availability," the requested level of parallelism. setParameterEnabled(String, boolean) - Method in class qupath.lib.gui.dialogs.ParameterPanelFX. Set the enabled status of a parameter by key, to determine if it can be edited. setParameterEnabled(Parameter<?>, boolean) - Method in class qupath.lib.gui.dialogs.ParameterPanelFX. Set the enabled status of a parameter, to determine if it can be edited. setPathClass(PathClass) - Method in class qupath.lib.objects.PathObject. Set the classification of the object, without specifying any classification probability. setPathClass(PathClass, double) - Method in class qupath.lib.objects.PathObject. Set the classification of the object, specifying a classification probability. setPathClass(PathClass, double) - Method in class qupath.lib.objects.PathROIObject;  ; setPathClass(PathClass, double) - Method in class qupath.lib.objects.PathRootObject;  ; setPathClasses(Collection<? extends PathClass>) - Method in interface qupath.lib.projects.Project. Update the available PathClasses. setPathClassHidden(PathClass, boolean) - Method in class qupath.lib.gui.viewer.OverlayOptions. Request that objects with a particular PathClass not be displayed. setPathMemoization(String) - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Set the directory where memoization files should be written. setPathObject(PathObject) - Method in class qupath.lib.gui.tools.PathObjectLabels.PathObjectMiniPane. Set the PathObject to display (may be null). setPenManager(QuPathPenManager.PenInputManager) - Static method in class qupath.lib.gui.viewer.tools.QuPathPenManager. Set the PenInputManager. setPieChartData(PieChart, Map<T, ? extends Number>, Function<T, String>, Function<T, Color>, boolean, boolean) - Static method in class qupath.lib.gui.charts.ChartTools. Set pie chart data from a count map. setPixelClassificationRegionFilter(RegionFilter) - Method in class qupath.lib.gui.viewer.OverlayOptions. Control where pixel classifications should be cal",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:940025,avail,available,940025,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability," the root object and ending with PathObject; (assuming that the object is part of a hierarchy with a root). Parameters:; pathObject - ; Returns:. swapNameAndClass; public static void swapNameAndClass(PathObject pathObject,; boolean includeColor); Swap the name and PathClass of an object.; This can be used as a simple way to preserve a classification that might be required later. Parameters:; pathObject - the object to adjust; includeColor - optionally set the color of the object to the color of the classification. parseTMALabelString; public static String[] parseTMALabelString(String labelString); Parse a string input representing potential TMA core labels.; This can be a space-separated list, or an ascending or descending numeric or alphabetic range.; ; Examples:; ; ""A-H""; ""1-9""; ""H-A""; ""A B D E"". Parameters:; labelString - ; Returns:. getSupportedObjects; public static Collection<? extends PathObject> getSupportedObjects(Collection<? extends PathObject> availableObjects,; Collection<Class<? extends PathObject>> supportedClasses); From a collection of available objects, extract those that are instances of specified supported classes. Parameters:; availableObjects - ; supportedClasses - ; Returns:. getROI; public static ROI getROI(PathObject pathObject,; boolean preferNucleus); Get the ROI for a PathObject, with a preference for the nucleus ROI of a cell. Parameters:; pathObject - ; preferNucleus - ; Returns:. getNucleusOrMainROI; public static ROI getNucleusOrMainROI(PathObject pathObject); Get the nucleus ROI for a cell, or the main ROI if no nucleus is found.; This is equivalent to getROI(pathObject, true), but avoids the mysterious boolean flag to make; code more readable. Parameters:; pathObject - ; Returns:; Since:; v0.5.0; See Also:. getNucleusROI(PathObject). getNucleusROI; public static ROI getNucleusROI(PathObject pathObject); Get the nucleus ROI for a cell, or null if the input is not a cell or no nucleus is found. Parameters:; pathObject - ; Returns:; Si",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:31093,avail,availableObjects,31093,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,2,['avail'],"['available', 'availableObjects']"
Availability," the user. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<Number>; count. Read only property containing any count associated with the text (may be null). ReadOnlyStringProperty; text. Read only property containing the message text. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; InfoMessage.MessageType. The type of message, which can be used for styling. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<Number>; countProperty(). Read only property containing any count associated with the text (may be null). static InfoMessage; error(String text). Create an error message with static text. static InfoMessage; error(String text,; int count). Create an error message with static text and a count. static InfoMessage; error(ObservableNumberValue count). Create a error message to show a count of errors. static InfoMessage; error(ObservableValue<String> text). Create an error message. static InfoMessage; error(ObservableValue<String> text,; ObservableNumberValue count). Create an error message with a count. int; getCount(). Counts associated with the message, or -1 if the count is null. InfoMessage.MessageType; getMessageType(). Type of the message. String; getText(). Text of the message. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(String text,; int count). Create an information message with static text and a count. static InfoMessage; info(ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; info(ObservableValue<String> text). Create an information message. static InfoMessage; info(ObservableValue<String> text,; ObservableNumberValue count). Create an information message with a count. ReadOnlyStringProperty; textProperty(). Read only property containing the message text. static InfoMessage; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:1512,error,error,1512,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,1,['error'],['error']
Availability," the user. static void; promptToResolveHierarchy(ImageData<?> imageData). Resolve parent-child relationships within the object hierarchy. static boolean; promptToSaveImageData(QuPathGUI qupath,; ImageData<BufferedImage> imageData,; boolean overwriteExisting). Prompt to save the specified ImageData. static void; promptToSelectObjectsByClassification(QuPathGUI qupath,; ImageData<?> imageData). Prompt to select objects according to their classifications. static void; promptToSetGridLineSpacing(OverlayOptions options). Prompt to input the spacing for the grid lines optionally displayed on viewers. static void; promptToSimplifySelectedAnnotations(ImageData<?> imageData,; double altitudeThreshold). Show a prompt to selected annotations in a hierarchy. static void; refreshObjectIDs(ImageData<?> imageData,; boolean duplicatesOnly). Refresh object IDs to ensure uniqueness. static void; reloadImageData(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Reload the specified image data from a previously saved version,if available. static File; requestUserDirectory(boolean promptIfMissing). Request the current user directory, optionally prompting the user to request a directory if none is available. static void; resetClassifications(ImageData<?> imageData,; Class<? extends PathObject> cls). Select objects that are instances of a specified class, logging an appropriate method in the workflow. static void; resetSelection(ImageData<?> imageData). Reset the selection for an image. static boolean; resetTMAMetadata(ImageData<?> imageData). Reset TMA metadata, if available. static void; runGeoJsonObjectExport(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a dialog to export object(s) to a GeoJSON file. static void; runObjectImport(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a dialog to import object(s) from a file. static boolean; saveSnapshot(QuPathGUI qupath,; GuiTools.SnapshotType type). Save an image snapshot, prompting the user to select the out",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:6840,avail,available,6840,javadoc/docs/qupath/lib/gui/commands/Commands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html,1,['avail'],['available']
Availability," to interpret the channels. Map<Integer,PathClass>; getClassificationLabels(). Get map between labels and classification names. double; getDownsampleForLevel(int level). Get the downsample factor for a specific resolution level. int; getHeight(). Get the full-resolution image height. ImageServerMetadata.ImageResolutionLevel; getLevel(int level). Get resolution information for a specified pyramidal level. List<ImageServerMetadata.ImageResolutionLevel>; getLevels(). Get an unmodifiable list containing the resolution levels. double; getMagnification(). Get the magnification value, or Double.NaN if this is unavailable. Number; getMaxValue(). Get the minimum value supported by this image. Number; getMinValue(). Get the minimum value supported by this image. String; getName(). Get the image name. PixelCalibration; getPixelCalibration(). Get a PixelCalibration object representing the pixel size information for this metadata object. double; getPixelHeightMicrons(). Get the pixel height in microns, if available - or Double.NaN otherwise. PixelType; getPixelType(). Returns the bit-depth for individual pixels in the image. double; getPixelWidthMicrons(). Get the pixel width in microns, if available - or Double.NaN otherwise. double[]; getPreferredDownsamplesArray(). Request the preferred downsamples from the image metadata. int; getPreferredTileHeight(). Get the preferred tile height, which can be used to optimize pixel requests for large images. int; getPreferredTileWidth(). Get the preferred tile width, which can be used to optimize pixel requests for large images. int; getSizeC(). Get the number of image channels. int; getSizeT(). Get the number of time points. int; getSizeZ(). Get the number of z-slices. double; getTimepoint(int ind). Get the time point, defined in getTimeUnit(), or Double.NaN if this is unknown. TimeUnit; getTimeUnit(). Get the time unit for a time series. int; getWidth(). Get the full-resolution image width. double; getZSpacingMicrons(). Get the z-spacing",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html:2870,avail,available,2870,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html,1,['avail'],['available']
Availability," try to ease the transition, but this may change in the future and ; readBufferedImage(RegionRequest) is likely to be removed. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault MethodsDeprecated Methods. Modifier and Type; Method; Description; T; getAssociatedImage(String name). Get the image for a given associated image name. List<String>; getAssociatedImageList(). Get a list of 'associated images', e.g. default ImageServerBuilder.ServerBuilder<T>; getBuilder(). Get a ServerBuilder capable of building a server the same as this one. T; getCachedTile(TileRequest tile). Get a cached tile, or null if the tile has not been cached. ImageChannel; getChannel(int channel). Request information for one channel (0-based index). T; getDefaultThumbnail(int z,; int t). Get the default thumbnail for a specified z-slice and timepoint. double; getDownsampleForResolution(int level). Get the downsample factor for a specified resolution level, where level 0 is the full resolution image ; and nResolutions() - 1 is the lowest resolution available. int; getHeight(). Height of the full-resolution image in pixels. Class<T>; getImageClass(). Get the class of the image representation returned by this ImageServer. ImageServerMetadata; getMetadata(). Get essential metadata associated with the ImageServer as a distinct object. ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; getPath(). Get a String path that can uniquely identify this image. default PixelCalibration; getPixelCalibration(). Get the PixelCalibration object from the current metadata. PixelType; getPixelType(). The bit-depth and type of the image. double[]; getPreferredDownsamples(). Get an array of downsample factors supported by the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). TileRequestManager; getTileRequestManager(). Get a Tile",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html:2615,down,downsample,2615,javadoc/docs/qupath/lib/images/servers/ImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html,2,"['avail', 'down']","['available', 'downsample']"
Availability," uri - ; Returns:. getChannelIndex; public static int getChannelIndex(ImageServer<?> server,; String channelName); Get the index of the first channel of a server with a specified channel name. Parameters:; server - ; channelName - ; Returns:; index (0-based) of the first channel with a name matching channelName, or -1 if no channel is found. getPreferredResolutionLevel; public static int getPreferredResolutionLevel(ImageServer<?> server,; double requestedDownsample); Get the preferred resolution level to request regions from an ImageServer at a specified downsample level. Parameters:; server - ; requestedDownsample - ; Returns:; See Also:. getPreferredDownsampleFactor(ImageServer, double). getPreferredDownsampleFactor; public static double getPreferredDownsampleFactor(ImageServer<?> server,; double requestedDownsample); Get the downsample factor supported by the server that is the best match for the requested downsample.; ; Generally, this will be <= the requested downsample (but it may be slightly more if the error introduced; would be very small, i.e. if 4 is requested and 4.0001 is available, 4.0001 would be returned). Parameters:; server - ; requestedDownsample - ; Returns:; See Also:. getPreferredResolutionLevel(ImageServer, double). getDisplayableImageName; public static String getDisplayableImageName(ImageServer<?> server); Get an ImageServer name suitable for displaying.; If the server is null, ""No image"" is returned. Otherwise, the name ; stored in the metadata is returned if not null, otherwise server.getShortServerName() is used. Parameters:; server - ; Returns:. setImageName; public static boolean setImageName(ImageServer<?> server,; String name); Set the name property of the metadata for an ImageServer. Parameters:; server - the server to update; name - the new name to use; Returns:; true if the metadata was updated, false otherwise (i.e. if the name is unchanged). getDownsampleFactor; public static double getDownsampleFactor(ImageServer<?> server,; doub",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ServerTools.html:3541,down,downsample,3541,javadoc/docs/qupath/lib/images/servers/ServerTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ServerTools.html,2,"['down', 'error']","['downsample', 'error']"
Availability," use instead convertToAnnotation(Roi, double, double, double, ImagePlane). static PathObject; convertToDetection(Roi roi,; double xOrigin,; double yOrigin,; double downsampleFactor,; ImagePlane plane). Create a detection object for a specific ImageJ Roi, using an ImagePlus to help set properties. static PathObject; convertToDetection(Roi roi,; double downsampleFactor,; ImagePlus imp). Create a detection object for a specific ImageJ Roi. static PathObject; convertToDetection(ImagePlus imp,; ImageServer<?> server,; Roi roi,; double downsampleFactor,; ImagePlane plane). Deprecated.; use instead convertToDetection(Roi, double, double, double, ImagePlane). static ImageProcessor; convertToFloatProcessor(SimpleImage image). Convert a SimpleImage to an ImageProcessor. static <T extends PathImage<ImagePlus>>Roi; convertToIJRoi(ROI pathROI,; double xOrigin,; double yOrigin,; double downsampleFactor). Convert a QuPath ROI to an ImageJ Roi. static <T extends PathImage<ImagePlus>>Roi; convertToIJRoi(ROI pathROI,; Calibration cal,; double downsampleFactor). Convert a QuPath ROI to an ImageJ Roi for an image with the specified calibration. static <T extends PathImage<ImagePlus>>Roi; convertToIJRoi(ROI pathROI,; T pathImage). Create an ImageJ Roi from a ROI, suitable for displaying on the ImagePlus of an PathImage<ImagePlus>. static PathImage<ImagePlus>; convertToImagePlus(String title,; ImageServer<BufferedImage> server,; BufferedImage img,; RegionRequest request). Convert a BufferedImage into a PathImage<ImagePlus>. static PathImage<ImagePlus>; convertToImagePlus(ImageServer<BufferedImage> server,; RegionRequest request). Read a region from an ImageServer<BufferedImage as a PathImage<ImagePlus>. static ImageProcessor; convertToImageProcessor(BufferedImage img,; int band). Extract pixels as an an ImageProcessor from a single band of a BufferedImage. static FloatProcessor; convertToOpticalDensitySum(ColorProcessor cp,; double maxRed,; double maxGreen,; double maxBlue). Calculate opt",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:3419,down,downsampleFactor,3419,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,1,['down'],['downsampleFactor']
Availability," viewer. Parameters:; qupath - current QuPathGUI instance (may be null). distanceToAnnotations2D; public static void distanceToAnnotations2D(ImageData<?> imageData,; boolean signedDistances); Compute the distance between all detections and the closest annotation, for all annotation classifications. Parameters:; imageData - the image data to process; signedDistances - if true, use signed distances. detectionCentroidDistances2D; public static void detectionCentroidDistances2D(ImageData<?> imageData); Compute the distance between the centroids of all detections, for all available classifications. Parameters:; imageData - the image data to process. promptToSetGridLineSpacing; public static void promptToSetGridLineSpacing(OverlayOptions options); Prompt to input the spacing for the grid lines optionally displayed on viewers. Parameters:; options - the OverlayOptions that manage the grid lines. requestUserDirectory; public static File requestUserDirectory(boolean promptIfMissing); Request the current user directory, optionally prompting the user to request a directory if none is available. Parameters:; promptIfMissing - ; Returns:; the user directory, or null if none exists and the user did not create one. reloadImageData; public static void reloadImageData(QuPathGUI qupath,; ImageData<BufferedImage> imageData); Reload the specified image data from a previously saved version,if available. Parameters:; qupath - ; imageData - . promptToAddShapeFeatures; public static void promptToAddShapeFeatures(QuPathGUI qupath); Prompt to add shape features for selected objects. Parameters:; qupath - current QuPath instance. convertDetectionsToPoints; public static void convertDetectionsToPoints(ImageData<?> imageData,; boolean preferNucleus); Convert detection objects to point annotations based upon their ROI centroids. Parameters:; imageData - the image data to process; preferNucleus - if true, use a nucleus ROI for cell objects (if available. promptToSimplifySelectedAnnotations; public",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:23355,avail,available,23355,javadoc/docs/qupath/lib/gui/commands/Commands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html,1,['avail'],['available']
Availability," void; runObjectImport(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a dialog to import object(s) from a file. static boolean; saveSnapshot(QuPathGUI qupath,; GuiTools.SnapshotType type). Save an image snapshot, prompting the user to select the output file. static void; selectAllObjects(ImageData<?> imageData). Select all objects (excluding the root object) in the imageData. static void; selectObjectsByClass(ImageData<?> imageData,; Class<? extends PathObject> cls). Select objects that are instances of a specified class, logging an appropriate method in the workflow. static boolean; selectObjectsByClassification(ImageData<?> imageData,; PathClass... pathClasses). Select objects by classification, logging the step (if performed) in the history workflow. static void; selectObjectsOnCurrentPlane(QuPathViewer viewer). Select all the objects on the current plane of the viewer. static void; setViewerDownsample(QuPathViewer viewer,; double downsample). Set the downsample factor for the specified viewer. static void; showAnnotationGridView(QuPathGUI qupath). Show a grid view for annotation objects. static void; showAnnotationMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all annotation objects. static void; showCellMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all cell objects. static void; showChannelViewer(QuPathViewer viewer). Show a channel viewer window associated with a specific viewer. static void; showDetectionMeasurementManager(QuPathGUI qupath,; ImageData<?> imageData). Show a simple dialog for viewing (and optionally removing) detection measurements. static void; showDetectionMeasurementTable(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a measurement table for all detection objects. static void; showInstalledExtensions(QuPathGUI qupath). Show a dialog displaying the extensions installed for a specified QuPath instance. stat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:8531,down,downsample,8531,javadoc/docs/qupath/lib/gui/commands/Commands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html,1,['down'],['downsample']
Availability," will be removed from the hierarchy if possible, therefore should be duplicated first ; if this is not desired.; The new object will be set to be the selected object in the hierarchy (which can be used to retrieve it if needed). Parameters:; hierarchy - ; annotations - ; Returns:; true if changes are made to the hierarchy, false otherwise. mergeSelectedAnnotations; public static boolean mergeSelectedAnnotations(PathObjectHierarchy hierarchy); Merge the currently-selected annotations to create a new annotation containing the union of their ROIs.; ; Note:; ; The existing annotations will be removed from the hierarchy if possible, therefore should be duplicated first ; if this is not desired.; The new object will be set to be the selected object in the hierarchy (which can be used to retrieve it if needed). Parameters:; hierarchy - ; Returns:. makeInverseAnnotation; public static boolean makeInverseAnnotation(PathObject pathObject); Make an annotation for the current ImageData, for which the ROI is obtained by subtracting ; the existing ROI from the ROI of its parent object (or entire image if no suitable parent object is available). Parameters:; pathObject - the existing object defining the ROI to invert; Returns:; true if an inverted annotation is added to the hierarchy, false otherwise. makeInverseAnnotation; public static boolean makeInverseAnnotation(ImageData<?> imageData,; PathObject pathObject); Make an annotation for the specified ImageData, for which the ROI is obtained by subtracting ; the existing ROI from the ROI of its parent object (or entire image if no suitable parent object is available). Parameters:; imageData - the imageData for which an inverted annotation should be created; pathObject - the existing object defining the ROI to invert; Returns:; true if an inverted annotation is added to the hierarchy, false otherwise. makeInverseAnnotation; public static boolean makeInverseAnnotation(); Make an inverse annotation using the current ImageData and its",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:128409,avail,available,128409,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['avail'],['available']
Availability," with this hierarchy. getToken(String, int) - Method in interface qupath.lib.scripting.languages.AutoCompletions.CompletionTokenizer. Get the token needed for the completion. getTokenizer() - Method in interface qupath.lib.scripting.languages.AutoCompletions.Completion. Get the tokenizer needed to extract the relevant bit of the text to determine the validity and/or ; insertion for the completion. getTool(String) - Static method in class qupath.lib.gui.viewer.tools.PathTools. Return the PathTool corresponding to the specified String. getToolAction(PathTool) - Method in class qupath.lib.gui.ToolManager. Get the action that corresponds to a specific PathTool, creating a new action if one does not already exist. getToolBar() - Method in class qupath.lib.gui.QuPathGUI. Get the main toolbar. getToolManager() - Method in class qupath.lib.gui.QuPathGUI. Get the ToolManager that handles available and selected tools. getTools() - Method in class qupath.lib.gui.ToolManager. Get a read-only list of all available tools. getTPosition() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the currently-visible time point. getTrainData() - Method in class qupath.process.gui.commands.ml.PixelClassifierTraining.ClassifierTrainingData. Get training data. getTrainFlags() - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier;  ; getTrainFlags() - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier;  ; getTrainFlags() - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer;  ; getTrainFlags() - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier;  ; getTrainFlags() - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV;  ; getTrainFlags() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier;  ; getTrainFlags() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV;  ; getTrainFlags() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV;  ; getTr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:539501,avail,available,539501,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability," x coordinate of the top left of the region to include in the mask.; yOrigin - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i.e. the amount to scale.; Returns:. createROIMask; public static BufferedImage createROIMask(Shape shape,; double downsample); Create a Shape mask using the minimal bounding box for the Shape. Parameters:; shape - ; downsample - ; Returns:. createShapeMask; public static BufferedImage createShapeMask(int width,; int height,; Shape shape,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; shape - Shape for mask; xOrigin - pixel x coordinate of the top left of the region to include in the mask.; yOrigin - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i.e. the amount to scale.; Returns:. ensureBufferedImageType; public static BufferedImage ensureBufferedImageType(BufferedImage img,; int requestedType); Convert a BufferedImage to have a specified type.; ; This makes use of Graphics2D.drawImage, which imposes limits on supported types ; (i.e. RGB or 8-bit grayscale), and is therefore not suitable for arbitrary type conversion.; ; A possible use is to ensure that a BGR/RGB/ARGB image is converted to the same representation, ; for example to allow packed int arrays to be treated in the same way.; ; Images that already have the same type are returned unchanged. Parameters:; img - the input image; requestedType - the type to which the image should be converted; Returns:; the (possibly-new) output image; See Also:. is8bitColorType(int). ensureBufferedImage; public static BufferedImage ensureBufferedImage(Image image); Convert an Imag",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:6379,mask,mask,6379,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,1,['mask'],['mask']
Availability,"    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Class OpenCVDnn.Builder. java.lang.Object; qupath.opencv.dnn.OpenCVDnn.Builder. Enclosing class:; OpenCVDnn. public static class OpenCVDnn.Builder; extends Object; Helper class to build an OpenCVDnn. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; OpenCVDnn.Builder; backend(int backend). Specify the backend, e.g. OpenCVDnn; build(). Build a new OpenCVDnn. OpenCVDnn.Builder; classification(). Set the model type to be OpenCVDnn.ModelType.CLASSIFICATION. OpenCVDnn.Builder; config(String pathConfig). Path to config file (if required). OpenCVDnn.Builder; config(URI pathConfig). Path to config file (if required). OpenCVDnn.Builder; cpu(). Request CPU backend and target, if available. OpenCVDnn.Builder; cuda(). Request CUDA backend and target, if available. OpenCVDnn.Builder; cuda16(). Request CUDA backend and target, if available, with 16-bit floating point. OpenCVDnn.Builder; detection(). Set the model type to be OpenCVDnn.ModelType.DETECTION. OpenCVDnn.Builder; framework(String name). Specify the framework (used to identify the appropriate loader for the model). OpenCVDnn.Builder; mean(Scalar mean). Mean values which should be subtracted from the image channels before input to the Net. OpenCVDnn.Builder; modelType(OpenCVDnn.ModelType type). Set the model type, used by OpenCVDnn.buildModel(). OpenCVDnn.Builder; name(String name). User-friendly name to use with this model. OpenCVDnn.Builder; opencl(). Specify OpenCL target. OpenCVDnn.Builder; opencl16(). Specify OpenCL target with 16-bit floating point. OpenCVDnn.Builder; outputs(String... layers). Set the layer outputs. OpenCVDnn.Builder; outputs(Map<String,DnnShape> outputs). Set the layer",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html:1088,avail,available,1088,javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html,1,['avail'],['available']
Availability,"'s JSON serialization with Gson's.; ; Sample use:; ; Gson gson = new GsonBuilder(); .registerTypeAdapterFactory(OpenCVTypeAdapters.getOpenCVTypeAdaptorFactory()); .setPrettyPrinting(); .create();; ; Mat mat1 = Mat.eye(3, 3, CV_32F1).asMat();; String json = gson.toJson(mat1);; Mat mat2 = gson.fromJson(json, Mat.class);; . Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; OpenCVTypeAdapters.OpenCVTypeAdapter<T>. TypeAdapter that helps include OpenCV-based objects within a Java object being serialized to JSON. static class ; OpenCVTypeAdapters.OpenCVTypeAdaptorFactory. TypeAdapterFactory that helps make OpenCV's serialization methods more compatible with custom JSON/Gson serialization. Constructor Summary; Constructors. Constructor; Description; OpenCVTypeAdapters();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static TypeAdapterFactory; getOpenCVTypeAdaptorFactory(). Get a TypeAdapterFactory to pass to a GsonBuilder to aid with serializing OpenCV objects ; (e.g. static <T> TypeAdapter<T>; getTypeAdaptor(Class<T> cls). Get a TypeAdapter to pass to a GsonBuilder for a specific supported OpenCV class, ; i.e. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenCVTypeAdapters; public OpenCVTypeAdapters(). Method Details. getOpenCVTypeAdaptorFactory; public static TypeAdapterFactory getOpenCVTypeAdaptorFactory(); Get a TypeAdapterFactory to pass to a GsonBuilder to aid with serializing OpenCV objects ; (e.g. Mat, StatModel). Returns:. getTypeAdaptor; public static <T> TypeAdapter<T> getTypeAdaptor(Class<T> cls); Get a TypeAdapter to pass to a GsonBuilder for a specific supported OpenCV class, ; i.e. Mat, SparseMat or StatModel. Parameters:; cls - ; Returns:; the required TypeAdaptor, or null if no supported adapter is available for the class. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/io/OpenCVTypeAdapters.html:2499,avail,available,2499,javadoc/docs/qupath/opencv/io/OpenCVTypeAdapters.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/io/OpenCVTypeAdapters.html,1,['avail'],['available']
Availability,"(""Second checkpoint"");; // Do something else; timeit.stop();; System.out.println(timeit);; ; . Finally, a Timeit can be used to repeatedly run the same code multiple times, and print the timings at the end.; ; ; var timeit = new Timeit(); .microseconds(); .checkpointAndRun(""Greeting"", () -> System.out.println(""Hello!""), 10); .summarizeCheckpoints(); .stop();; System.out.println(timeit);; ; . Since:; v0.4.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Timeit.Checkpoint. Class representing a named checkpoint with a timestamp in nanoseconds. Constructor Summary; Constructors. Constructor; Description; Timeit();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Timeit; autoUnits();  ; Timeit; checkpoint(). Create a new checkpoint with a default name. Timeit; checkpoint(String name). Create a new checkpoint with the specified name. Timeit; checkpointAndRun(Runnable runnable). Create a checkpoint with the default name and immediately run the provided runnable. Timeit; checkpointAndRun(String name,; Runnable runnable). Create a checkpoint and immediately run the provided Runnable. Timeit; checkpointAndRun(String name,; Runnable runnable,; int nIterations). Create a checkpoint and immediately run the provided Runnable nIterations times. List<Timeit.Checkpoint>; getCheckpoints(). Get an list of all the checkpoints. int; getMaxDecimalPlaces(). Get the maximum number of decimal places when reporting timings. static void; main(String[] args);  ; Timeit; maxDecimalPlaces(int maxDP). Set the maximum number of decimal places when reporting timings ; using seconds or minutes. Timeit; microseconds(). Report timings in microseconds. Timeit; milliseconds(). Report timings in milliseconds. Timeit; minutes(). Report timings in minutes. Timeit; nanoseconds(). Report timings in nanoseconds. Timeit; seconds(). Report timings in seconds. Timeit; start().",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:2025,checkpoint,checkpointAndRun,2025,javadoc/docs/qupath/lib/common/Timeit.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html,1,['checkpoint'],['checkpointAndRun']
Availability,"() + "": "" + URI + parameters; ; This will be called on demand whenever AbstractImageServer.getPath() is first required. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Specified by:; readRegion in interface ImageServer<BufferedImage>; Overrides:; readRegion in class TransformingImageServer<BufferedImage>; Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; Throws:; IOException; See Also:. ImageServer.readRegion(double, int, int, int, int, int, int); ImageServer.readRegion(double, int, int, int, int); ImageServer.readBufferedImage(RegionRequest). getCropRegion; public ImageRegion getCropRegion(); Get the region being cropped, in terms of the bounding box within the base ImageServer. Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/CroppedImageServer.html:4505,down,downsampling,4505,javadoc/docs/qupath/lib/images/servers/CroppedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/CroppedImageServer.html,1,['down'],['downsampling']
Availability,"() + "": "" + URI + parameters; ; This will be called on demand whenever AbstractImageServer.getPath() is first required. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Specified by:; readRegion in interface ImageServer<BufferedImage>; Overrides:; readRegion in class TransformingImageServer<BufferedImage>; Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; Throws:; IOException; See Also:. ImageServer.readRegion(double, int, int, int, int, int, int); ImageServer.readRegion(double, int, int, int, int); ImageServer.readBufferedImage(RegionRequest). getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Specified by:; getServerType i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/ChannelDisplayTransformServer.html:4999,down,downsampling,4999,javadoc/docs/qupath/lib/gui/images/servers/ChannelDisplayTransformServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/ChannelDisplayTransformServer.html,1,['down'],['downsampling']
Availability,"() + "": "" + URI + parameters; ; This will be called on demand whenever AbstractImageServer.getPath() is first required. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Specified by:; readRegion in interface ImageServer<BufferedImage>; Overrides:; readRegion in class TransformingImageServer<BufferedImage>; Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; Throws:; IOException; See Also:. ImageServer.readRegion(double, int, int, int, int, int, int); ImageServer.readRegion(double, int, int, int, int); ImageServer.readBufferedImage(RegionRequest). getTransform; public AffineTransform getTransform(); Get the affine transform for this server. Returns:. getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AffineTransformImageServer.html:4329,down,downsampling,4329,javadoc/docs/qupath/lib/images/servers/AffineTransformImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AffineTransformImageServer.html,1,['down'],['downsampling']
Availability,"() - Static method in class qupath.lib.gui.scripting.languages.ScriptLanguageProvider. Get the available script languages. getAvailablePathClasses() - Method in class qupath.lib.gui.QuPathGUI. Get an observable list of available PathClasses. getAvailableSyntaxes() - Static method in class qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider. Get the available script syntaxes. getAvailableTools() - Method in class qupath.lib.gui.viewer.tools.ExtendedPathTool;  ; getAveragedPixelSize() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the averaged pixel size in microns, if available - or Double.NaN otherwise. getAveragedPixelSize() - Method in class qupath.lib.images.servers.PixelCalibration. Get an average of PixelCalibration.getPixelWidth() and PixelCalibration.getPixelHeight(). getAveragedPixelSizeMicrons() - Method in class qupath.lib.images.servers.PixelCalibration. Get the average of the pixel width and height in microns if possible, or Double.NaN if the pixel size is not available. getBackingListEntries() - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Access the underlying entries, for which getEntries provides a filtered view. getBaseClass() - Method in class qupath.lib.objects.classes.PathClass. Get the 'base' class, i.e. getBaseDirectory(Project<?>) - Static method in class qupath.lib.projects.Projects. Get the base directory of a project stored on the local file system. getBasePathClass(PathObject) - Static method in class qupath.lib.scripting.QP. Get a base class - which is either a valid PathClass which is *not* an intensity class, or else null. getBaseStyle() - Method in class qupath.lib.gui.scripting.richtextfx.stylers.MarkdownStyler. Returns ""-fx-font-family: sans-serif"" to indicate the text should not be formatted as code by default. getBaseStyle() - Method in interface qupath.lib.gui.scripting.richtextfx.stylers.ScriptStyler. Optionally return a base style for the code area. getBatchIndex() - Method in clas",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:334019,avail,available,334019,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"(). scalebarFontSize; public static ObjectProperty<PathPrefs.FontSize> scalebarFontSizeProperty; Preferred font size for the scalebar in the viewer. See Also:. scalebarFontSizeProperty(). locationFontSize; public static ObjectProperty<PathPrefs.FontSize> locationFontSizeProperty; Preferred font size for the location text in the viewer. See Also:. locationFontSizeProperty(). scalebarFontWeight; public static ObjectProperty<FontWeight> scalebarFontWeightProperty; Preferred font weight in the viewer. See Also:. scalebarFontWeightProperty(). scalebarLineWidth; public static DoubleProperty scalebarLineWidthProperty; Preferred line width for the scalebar. See Also:. scalebarLineWidthProperty(). allredMinPercentagePositive; public static DoubleProperty allredMinPercentagePositiveProperty; The minimum positive percentage of cells for Allred proportion score to be non-zero.; ; Using the strict definition, this would be 0... however for image analysis this can be very non-robust,; in that it allows a single false detection to have a very high influence on the score. See Also:. allredMinPercentagePositiveProperty(). minPyramidDimension; public static IntegerProperty minPyramidDimensionProperty; Minimum image width or height before pyramidalizing (if required). See Also:. minPyramidDimensionProperty(). pointRadius; public static IntegerProperty pointRadiusProperty; Radius of the circle used to draw individual points in a point annotation (in pixels). See Also:. pointRadiusProperty(). detectionStrokeThickness; public static DoubleProperty detectionStrokeThicknessProperty; Preferred stroke thickness to use when drawing detections ROIs.; This is defined in pixels at the full image resolution, and does not adapt to viewer magnification. See Also:. detectionStrokeThicknessProperty(). annotationStrokeThickness; public static DoubleProperty annotationStrokeThicknessProperty; Preferred stroke thickness to use when drawing annotation ROIs.; This is defined in pixels, scaled according to",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:40246,robust,robust,40246,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['robust'],['robust']
Availability,"(ImageDisplaySettings) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify the ImageDisplaySettings that control conversion to RGB. settingsCompatibleWithDisplay(ImageDisplay, ImageDisplaySettings) - Static method in class qupath.lib.display.settings.DisplaySettingUtils. Check if the settings are compatible with the display. setTitleFromObject(PathImage<ImagePlus>, PathObject) - Static method in class qupath.imagej.tools.IJTools. Set the name of an image based on a PathObject. setTMAEntriesFromImageData(ImageData<BufferedImage>) - Method in class qupath.lib.gui.tma.TMASummaryViewer. Deprecated.; Set the TMA entries from the TMACoreObjects of a specific ImageData. setTMAGrid(TMAGrid) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Set the tma grid for this hierarchy. setToExpandGridPaneHeight(Node...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Set constraints and max width values (where possible) so that the specified nodes ; fill all available vertical space in a GridPane. setToExpandGridPaneWidth(Node...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Set constraints and max width values (where possible) so that the specified nodes ; fill all available horizontal space in a GridPane. setToolSwitchingEnabled(boolean) - Method in class qupath.lib.gui.ToolManager. Toggle whether the user is permitted to switch to a new active PathTool. setTooltipFunction(Function<Double, String>) - Method in class qupath.lib.gui.ColorMapCanvas. Set the function that will take a value between 0 and 255 (from the color map) and output a displayable string. setTPosition(int) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the requested time point to be visible. setTrace() - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level to LogLevel.TRACE. setupTarget(Node) - Method in class qupath.lib.gui.viewer.DragDropImportListener. Prepare a target node to",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:952309,avail,available,952309,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"(ImageServer<BufferedImage>, ImageRenderer) - Static method in class qupath.lib.gui.images.servers.RenderedImageServer. Create an ImageServer that converts the image to RGB using the specified ImageRenderer. createROIIcon(ROI, int, int, Color) - Static method in class qupath.lib.gui.tools.IconFactory. Create an icon depicting a ROI. createROIMask(int, int, ROI, double, double, double) - Static method in class qupath.lib.awt.common.BufferedImageTools. Create a grayscale BufferedImage representing a mask for a specified ROI. createROIMask(int, int, ROI, RegionRequest) - Static method in class qupath.lib.awt.common.BufferedImageTools. Create a grayscale BufferedImage representing a mask for a specified ROI. createROIMask(Shape, double) - Static method in class qupath.lib.awt.common.BufferedImageTools. Create a Shape mask using the minimal bounding box for the Shape. createROIMask(ROI, double) - Static method in class qupath.lib.awt.common.BufferedImageTools. Create a ROI mask using the minimal bounding box for the ROI. createROIs(Raster, int, RegionRequest, int, int) - Static method in class qupath.lib.analysis.images.ContourTracing. Create ROIs from one band of a raster containing integer label values. createROIs(Mat, RegionRequest, int, int) - Static method in class qupath.opencv.tools.OpenCVTools. Convert integer labels into ROIs. createROIs(SimpleImage, RegionRequest, int, int) - Static method in class qupath.lib.analysis.images.ContourTracing. Create ROIs from a labelled image containing integer labels. createROIs(ROI) - Method in class qupath.lib.objects.utils.Tiler. Create a list of ROI tiles from the input. createRotateImageDialog(QuPathGUI) - Static method in class qupath.lib.gui.commands.Commands. Create a dialog for rotating the image in the current viewer (for display only). createRowGrid(Node...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Create a GridPane containing rows that resize similarly to Swing's GridLayout(). createRowGr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:217036,mask,mask,217036,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['mask'],['mask']
Availability,"(Map<String,Integer> labelMap). Add multiple labels by classname, where the key represents a classname and the value ; represents the integer label that should be used for annotations of the given class. LabeledImageServer.Builder; addUnclassifiedLabel(int label). Add a single label for objects that are unclassified, where the label represents the integer label used for ; annotations that have no classification set. LabeledImageServer.Builder; addUnclassifiedLabel(int label,; Integer color). Add a single label for objects that are unclassified, where the label represents the integer label used for ; annotations that have no classification set. LabeledImageServer.Builder; backgroundLabel(int label). Specify the background label (0 by default). LabeledImageServer.Builder; backgroundLabel(int label,; Integer color). Specify the background label (0 by default) and color. LabeledImageServer; build(). Build the ImageServer with the requested parameters. LabeledImageServer.Builder; downsample(double downsample). Specify downsample factor. LabeledImageServer.Builder; grayscale(). Use grayscale LUT, rather than deriving colors from classifications. LabeledImageServer.Builder; grayscale(boolean grayscaleLut). Optionally use grayscale LUT, rather than deriving colors from classifications. LabeledImageServer.Builder; lineThickness(float thickness). Thickness of boundary lines and line annotations, defined in terms of pixels at the ; resolution specified by the downsample value of the server. LabeledImageServer.Builder; maxOutputChannelLimit(int maxChannels). Specify the maximum number of output channels allowed before QuPath will throw an exception. LabeledImageServer.Builder; multichannelOutput(boolean doMultichannel). If true, the output image consists of multiple binary images concatenated as different channels, ; so that the channel number relates to a classification. LabeledImageServer.Builder; setBoundaryLabel(String pathClassName,; int label). Set the classification and l",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.Builder.html:3041,down,downsample,3041,javadoc/docs/qupath/lib/images/servers/LabeledImageServer.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.Builder.html,2,['down'],['downsample']
Availability,"(Mat mat). Create an OpenCV blob from a single mat. static Mat; blobFromImages(Collection<Mat> mats,; double scaleFactor,; Size size,; Scalar mean,; boolean swapRB,; boolean crop). Create an OpenCV blob from a batch of Mats with optional scaling, resizing and cropping. static Mat; blobFromImages(Mat... mats). Create an OpenCV blob from one or more mats. static Mat; blobFromImages(Mat mat,; double scaleFactor,; Size size,; Scalar mean,; boolean swapRB,; boolean crop). Create an OpenCV blob from a Mat with optional scaling, resizing and cropping. static OpenCVDnn.Builder; builder(String modelPath). Initiative building and configuring an OpenCVDnn. static boolean; classify(ClassificationModel model,; PathObject pathObject,; Mat input,; IntFunction<PathClass> classifier,; String predictionMeasurement). Apply a classification model to an existing image patch to classify an object. static boolean; classify(ClassificationModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; int width,; int height,; IntFunction<PathClass> classifier,; String predictionMeasurement). Apply a classification model to an image patch to classify an object. static boolean; classify(ClassificationModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier,; String predictionMeasurement). Apply a classification model to an image patch to classify an object. static List<PathObject>; detect(DetectionModel model,; Mat mat,; RegionRequest request,; IntFunction<PathClass> classifier,; Function<ROI,PathObject> creator). Apply a detection model to generate rectangles surrounding distinct structures. static List<PathObject>; detect(DetectionModel model,; ImageServer<BufferedImage> server,; RegionRequest request,; IntFunction<PathClass> classifier,; Function<ROI,PathObject> creator). Apply a detection model to generate rectangles surrounding distinct structures. static List<String>; getOutputLayerNames(",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html:1911,down,downsample,1911,javadoc/docs/qupath/opencv/dnn/DnnTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html,1,['down'],['downsample']
Availability,"(Net net). Get the names of all unconnected output layers. static Map<String,DnnShape>; getOutputLayers(Net net,; DnnShape... inputShape). Get the names of all unconnected output layers. static List<Mat>; imagesFromBlob(Mat blob). Extract images from an OpenCV blob. static boolean; isCudaAvailable(). Query whether CUDA is reported as available by OpenCV. static List<DnnTools.DNNLayer>; parseLayers(Net net,; int width,; int height,; int channels,; int batchSize). Parse the layers for a Net, which allows inspection of names and sizes. static List<DnnShape>; parseShape(MatShapeVector vector). Extract Mat dimensions from a MatShapeVector. static List<String>; parseStrings(StringVector vector). Extract Strings from a StringVector. static Mat; readPatch(ImageServer<BufferedImage> server,; ROI roi,; double downsample,; int width,; int height). Read an image patch, optionally with a fixed size and using zero-padding if required. static Mat; readPatch(ImageServer<BufferedImage> server,; ROI roi,; double downsample,; int width,; int height,; int borderPadding). Read an image patch, optionally with a fixed size. static <T extends DnnModel>void; registerDnnModel(Class<T> subtype,; String name). Deprecated.; since v0.4.0; use DnnModels.registerDnnModel(Class, String) instead. static Mat; segment(SegmentationModel model,; Mat input,; Mat output). Apply a segmentation model to an image region. static Mat; segment(SegmentationModel model,; ImageServer<BufferedImage> server,; RegionRequest request). Apply a segmentation model to an image region. static void; setUseCuda(boolean requestUseCuda). Request that CUDA is used. static String; summarize(Net net,; int width,; int height,; int nChannels). Create a (multiline) summary String for a Net, given the specified image input dimensions. static boolean; useCuda(). Returns true if CUDA is available and requested. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html:3912,down,downsample,3912,javadoc/docs/qupath/opencv/dnn/DnnTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html,1,['down'],['downsample']
Availability,"(QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class GeneralTools. java.lang.Object; qupath.lib.common.GeneralTools. public final class GeneralTools; extends Object; Collection of generally useful static methods. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; SYMBOL_MICROMETER. String to represent um (but with the proper 'mu' symbol). static final char; SYMBOL_MU. Small Greek mu (useful for micrometers). static final char; SYMBOL_SIGMA. Small Greek sigma (useful for Gaussian filter sizes, standard deviations). Method Summary. All MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static boolean; almostTheSame(double n1,; double n2,; double tolerance). Test if two doubles are approximately equal, within a specified tolerance. static String; arrayToString(Object[] array,; String delimiter). Convert a String array to a single string, with a specified delimiter string. static String; arrayToString(Locale locale,; double[] array,; int nDecimalPlaces). Convert a double array to a String using a space as a delimiter. static String; arrayToString(Locale locale,; double[] array,; String delimiter,; int nDecimalPlaces). Convert a double array to string, with a specified number of decimal places. static boolean; blankString(String s,; boolean trim). Check if a string is blank, i.e. static boolean; checkExtensions(String path,; String... extensions). Check whether a path ends with one of a number of specified extensions (case insensitive). static double; clipValue(double value,; double min,; double max). Clip a value to be within a specific range. static int; clipValue(int value,; int min",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:1061,toler,tolerance,1061,javadoc/docs/qupath/lib/common/GeneralTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html,1,['toler'],['tolerance']
Availability,"(int); zSlices(int, int). tileSize; public OMEPyramidWriter.Builder tileSize(int tileSize); Define the requested tile size (width == height).; ; This is only a suggestion, and the OME reader may override it if the value is unsupported. Parameters:; tileSize - ; Returns:; this builder. tileSize; public OMEPyramidWriter.Builder tileSize(int tileWidth,; int tileHeight); Define the requested tile width and height.; ; This is only a suggestion, and the OME reader may override it if the value is unsupported. Parameters:; tileWidth - ; tileHeight - ; Returns:; this builder. downsamples; public OMEPyramidWriter.Builder downsamples(double... downsamples); Specify downsample factors to use in the final pyramid.; ; Note that the downsample values provided will be sorted in ascending order. Parameters:; downsamples - ; Returns:; this builder. dyadicDownsampling; public OMEPyramidWriter.Builder dyadicDownsampling(); Downsample by factors of 2.; ; Note that the highest downsample value will depend on the tile size, ; so the tile size should be set first. Returns:; this builder; See Also:. scaledDownsampling(double). scaledDownsampling; public OMEPyramidWriter.Builder scaledDownsampling(double scale); Downsample by specific increasing factor each time (e.g. if scale == 2, then downsamples will be 1, 2, 4, 8...).; ; Note that the highest downsample value will depend on the tile size, ; so the tile size should be set first. Parameters:; scale - ; Returns:; this builder; See Also:. scaledDownsampling(double). scaledDownsampling; public OMEPyramidWriter.Builder scaledDownsampling(double minDownsample,; double scale); Downsample by specific increasing factor each time, with a specified initial downsample value ; (e.g. if scale == 2, then downsamples will be minDownsample, minDownsample*2, minDownsample*4...).; ; Note that the highest downsample value will depend on the tile size, ; so the tile size should be set first. Parameters:; minDownsample - the starting downsample, defining the ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html:10087,down,downsample,10087,javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html,1,['down'],['downsample']
Availability,"(int value,; int min,; int max); Clip a value to be within a specific range. Parameters:; value - ; min - ; max - ; Returns:. clipValue; public static double clipValue(double value,; double min,; double max); Clip a value to be within a specific range. Parameters:; value - ; min - ; max - ; Returns:. almostTheSame; public static boolean almostTheSame(double n1,; double n2,; double tolerance); Test if two doubles are approximately equal, within a specified tolerance.; ; Relies on apache.common's method as the history of this method proved this task not as straightforward as initially thought.; ; Note that this calculation changed in v0.2.0-m4 and in v0.3.0. The behavior prior to v0.2.0-m4 divided the absolute difference ; by the first value only, which is not robust to differences in the input order or if the first value is negative. The behavior ; before v0.3.0 returned whether the absolute difference divided by the average is less than the specified tolerance. Parameters:; n1 - ; n2 - ; tolerance - ; Returns:. toURI; public static URI toURI(String path); throws URISyntaxException; Try to convert a path to a URI.; ; This currently does a very simple check for a known scheme at the beginning ; (""http:"", ""https:"" or """"file:"") to see if it can construct the URI directly; ; if not, it assumes the path refers to a local file (as it generally did in ; QuPath 0.1.2 and earlier). This method does not encode special characters. Parameters:; path - ; Returns:; Throws:; URISyntaxException; See Also:. toEncodedURI(String path). toEncodedURI; public static URI toEncodedURI(String path); throws URISyntaxException,; UnsupportedEncodingException,; MalformedURLException; Try to convert a path to an encoded URI.; ; URIs do not accept some characters (e.g. ""|""). This method will perform a simple check for; http: and https: schemes at the beginning of the URI. It will then modify ; the Query (@see Query) ; to a valid form. Finally, a reconstructed valid URI is returned. Note: this metho",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:13490,toler,tolerance,13490,javadoc/docs/qupath/lib/common/GeneralTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html,1,['toler'],['tolerance']
Availability,") - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian2D;  ; getEigenvectors(boolean) - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian3D;  ; getEmptyTile(int, int) - Method in class qupath.lib.images.servers.AbstractTileableImageServer;  ; getEmptyTile(int, int, boolean) - Method in class qupath.lib.images.servers.AbstractTileableImageServer. Create an empty tile for this server, using the default color model. getEngineByName(String) - Static method in class qupath.lib.gui.scripting.languages.ScriptLanguageProvider. Get the ScriptEngine based on its name. getEntry(ImageData<T>) - Method in interface qupath.lib.projects.Project. Request a ProjectImageEntry associated with an ImageData. getEntryPath() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a path to the data for this image entry, or null if this entry is not ; stored on the local file system. getErrorWriter() - Method in class qupath.lib.scripting.ScriptParameters. Get the error writer for script output. getEvents() - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Get an unmodifiable list of all events. getEventsAtTime(double) - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Get the number of events at a specified time (exactly). getEventType() - Method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. Get the hierarchy event type. getExcludeColumns() - Method in class qupath.lib.gui.tools.MeasurementExporter. Returns the list of columns to exclude from export. getExcludeOutsideRange() - Method in class qupath.lib.gui.tools.MeasurementMapper. Returns true if objects with values outside the specified min/max range have the min/max colors returned, false if null should be returned instead. getExpandToWindow() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Query whether the image is allowed to expand beyond its preferred width and height to fill the window. getExtension(File) - Static method in ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:389086,error,error,389086,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['error'],['error']
Availability,"). Get the parent, or a proxy parent if one has been specified. RegionRequest; getRegionRequest(). Get the region request. ImageServer<BufferedImage>; getServer(). Get the server. TileRequest; getTileRequest(). Get the tile request, if available. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getImageData; public ImageData<BufferedImage> getImageData(); Get the image data. Returns:. getServer; public ImageServer<BufferedImage> getServer(); Get the server. This is often the accessed from getImageData(), but in some cases it may be different; (e.g. if the processing should be applied to a transformed image). Returns:. getRegionRequest; public RegionRequest getRegionRequest(); Get the region request. Returns:. getTileRequest; public TileRequest getTileRequest(); Get the tile request, if available.; This should be used when the region request is derived at a specific tile resolution, because it is able to; provide more accurate tile coordinates without rounding errors. Returns:. getImage; public S getImage(); throws IOException; Get the image to process.; This may return a cached value, so it is important that it is not modified; by the caller. Returns:; Throws:; IOException. getMask; public T getMask(); throws IOException; Get the mask associated with the main ROI or the parent object, or null if no mask is available.; Note that the mask returned should correspond to the same region as getImage() - and not; the bounds of the ROI. Returns:; Throws:; IOException. getMask; public T getMask(ROI roi); throws IOException; Get the mask associated with any ROI, or null if no mask is available.; Note that the mask returned should correspond to the same region as getImage() - and not; the bounds of the ROI. Parameters:; roi - ; Returns:; Throws:; IOException. getParent; public PathObject getParent(); Get the parent object. Returns:; See Also:. getParentOrProxy(). getParent",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html:2428,error,errors,2428,javadoc/docs/qupath/lib/experimental/pixels/Parameters.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html,1,['error'],['errors']
Availability,"); Get the image data. Returns:. getServer; public ImageServer<BufferedImage> getServer(); Get the server. This is often the accessed from getImageData(), but in some cases it may be different; (e.g. if the processing should be applied to a transformed image). Returns:. getRegionRequest; public RegionRequest getRegionRequest(); Get the region request. Returns:. getTileRequest; public TileRequest getTileRequest(); Get the tile request, if available.; This should be used when the region request is derived at a specific tile resolution, because it is able to; provide more accurate tile coordinates without rounding errors. Returns:. getImage; public S getImage(); throws IOException; Get the image to process.; This may return a cached value, so it is important that it is not modified; by the caller. Returns:; Throws:; IOException. getMask; public T getMask(); throws IOException; Get the mask associated with the main ROI or the parent object, or null if no mask is available.; Note that the mask returned should correspond to the same region as getImage() - and not; the bounds of the ROI. Returns:; Throws:; IOException. getMask; public T getMask(ROI roi); throws IOException; Get the mask associated with any ROI, or null if no mask is available.; Note that the mask returned should correspond to the same region as getImage() - and not; the bounds of the ROI. Parameters:; roi - ; Returns:; Throws:; IOException. getParent; public PathObject getParent(); Get the parent object. Returns:; See Also:. getParentOrProxy(). getParentOrProxy; public PathObject getParentOrProxy(); Get the parent, or a proxy parent if one has been specified.; The proxy parent is used to provide a temporary parent object for tiled processing, when using the parent; directly may be problematic (e.g. because the region is too large). Returns:; See Also:. getParent(). builder; public static <S,; T> Parameters.Builder<S,T> builder(); Create a new builder for parameters. Type Parameters:; S - ; T - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html:2808,mask,mask,2808,javadoc/docs/qupath/lib/experimental/pixels/Parameters.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html,5,"['avail', 'mask']","['available', 'mask']"
Availability,"); Zoom in by one step. See Also:. zoomIn(int); getDefaultZoomFactor(). imageDataProperty; public ReadOnlyObjectProperty<ImageData<BufferedImage>> imageDataProperty(); Property for the image data currently being displayed within this viewer. Returns:; See Also:. getImageData(); setImageData(ImageData). getImageData; public ImageData<BufferedImage> getImageData(); Get the image data currently being displayed within thie viewer. Returns:. getOverlayOptions; public OverlayOptions getOverlayOptions(); Get the overlay options that control the viewer display. Returns:. getImageRegionStore; public DefaultImageRegionStore getImageRegionStore(); Get the region store used by this viewer for tile caching and painting. Returns:. setDoFasterRepaint; public void setDoFasterRepaint(boolean fasterRepaint); Set flag to indicate that repaints should prefer speed over accuracy. This is useful when scrolling quickly, or rapidly changing; the image zoom.; ; Note: Previously, this would drop the downsample level - but this produced visual artifacts too often. ; Currently it only impacts interpolation used. Parameters:; fasterRepaint - . getMousePosition; public Point2D getMousePosition(); Get the current cursor position within this viewer, or null if the cursor is outside the viewer.; This is provided in the component space. Returns:. isShowing; public boolean isShowing(); Returns true if the viewer is visible, and attached to a scene. Returns:. initializeForServer; protected void initializeForServer(ImageServer<BufferedImage> server). isSpaceDown; public boolean isSpaceDown(); Returns true if the spacebar was pressed when this component was focussed, and is still being held down. Returns:. setSpaceDown; public void setSpaceDown(boolean spaceDown); Notify this viewer that the isSpaceDown status should be changed.; ; This is useful whenever another component might have received the event,; but the viewer needs to 'know' when it receives the focus. Parameters:; spaceDown - . getCenterPixel",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:18930,down,downsample,18930,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,1,['down'],['downsample']
Availability,", Graphics, Shape, int, int, double, BufferedImage, ImageObserver, ImageRenderer), ; but wait until all the tiles have arrived (or abort if it is taking too long). Method Details. paintRegionCompletely; void paintRegionCompletely(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; ImageObserver observer,; ImageRenderer renderer,; long timeoutMilliseconds); Similar to paintRegion(ImageServer, Graphics, Shape, int, int, double, BufferedImage, ImageObserver, ImageRenderer), ; but wait until all the tiles have arrived (or abort if it is taking too long). Parameters:; server - the server representing the image that shown be painted; g - the graphics object upon which to paint; clipShapeVisible - the visible shape representing the area of the graphics object that should be filled; zPosition - the z-stack position; tPosition - the timepoint position; downsampleFactor - the downsample factor; observer - an ImageObserver (often ignored); renderer - an ImageRenderer to convert images to RGB; timeoutMilliseconds - Timeout after which a request is made from the PathImageServer directly, rather than waiting for tile requests. paintRegion; void paintRegion(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; BufferedImage imgThumbnail,; ImageObserver observer,; ImageRenderer renderer); Paint an image region. Parameters:; server - the server representing the image that shown be painted; g - the graphics object upon which to paint; clipShapeVisible - the visible shape representing the area of the graphics object that should be filled; zPosition - the z-stack position; tPosition - the timepoint position; downsampleFactor - the downsample factor; imgThumbnail - a thumbnail image; if not null, this will be used to 'fill the gaps'; observer - an ImageObserver (often ignored); renderer - an ImageRenderer to convert images to RGB. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ImageRegionRenderer.html:2574,down,downsampleFactor,2574,javadoc/docs/qupath/lib/gui/images/stores/ImageRegionRenderer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ImageRegionRenderer.html,3,['down'],"['downsample', 'downsampleFactor']"
Availability,", for cases where the processor does not make updates to the; parent object itself. Parameters:; outputHandler - ; Returns:. processor; public PixelProcessor.Builder<S,T,U> processor(Processor<S,T,U> processor); Set the processor. This is required to do any interesting work. Parameters:; processor - ; Returns:. padding; public PixelProcessor.Builder<S,T,U> padding(Padding padding); Set the padding to use when extracting regions.; Note that this is defined in pixels at the full image resolution, not the downsampled resolution. Parameters:; padding - ; Returns:. padding; public PixelProcessor.Builder<S,T,U> padding(int size); Set the padding to use when extracting regions, using a symmetric padding.; Note that this is defined in pixels at the full image resolution, not the downsampled resolution. Parameters:; size - ; Returns:. downsample; public PixelProcessor.Builder<S,T,U> downsample(double downsample); Set the downsample factor to use with requesting image regions. Parameters:; downsample - ; Returns:. pixelSize; public PixelProcessor.Builder<S,T,U> pixelSize(double pixelSize); Set the requested pixel size to use with requesting image regions.; This will be converted to a downsample factor based on the image calibration. Parameters:; pixelSize - ; Returns:. tiler; public PixelProcessor.Builder<S,T,U> tiler(Tiler tiler); Set a tiler to use. This is required for large regions, so that the image can be processed in tiles. Parameters:; tiler - ; Returns:. tile; public PixelProcessor.Builder<S,T,U> tile(int tileWidth,; int tileHeight); Set a default tiler to use, with a specified tile size. Parameters:; tileWidth - ; tileHeight - ; Returns:. merger; public PixelProcessor.Builder<S,T,U> merger(ObjectMerger merger); Set a merger to use. This is currently only relevant when using a tiler. Parameters:; merger - ; Returns:; See Also:. mergeSharedBoundaries(double). mergeSharedBoundaries; public PixelProcessor.Builder<S,T,U> mergeSharedBoundaries(double threshold); Convenien",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html:4083,down,downsample,4083,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,1,['down'],['downsample']
Availability,", wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getAssociatedImage, getAssociatedImageList, getBuilder, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelCalibration, getPixelType, getPreferredDownsamples, getTileRequestManager, getWidth, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, readBufferedImage, readRegion, readRegion, readRegion. Method Details. getInstanceLabels; public Map<PathObject,Integer> getInstanceLabels(); Get a mapping between objects and instance labels. Returns:; the instance label map, or an empty map if no objects are available or ; LabeledImageServer.Builder.useInstanceLabels() was not selected. getLabels; public Map<PathClass,Integer> getLabels(); Get an unmodifiable map of classifications and their corresponding labels.; Note that multiple classifications may use the same integer label. Returns:; a map of labels, or empty map if none are available or useInstanceLabels() was selected. getBoundaryLabels; public Map<PathClass,Integer> getBoundaryLabels(); Get an unmodifiable map of classifications and their corresponding boundary labels, if available.; Note that multiple classifications may use the same integer label. Returns:; a map of boundary labels, or empty map if none are available or useInstanceLabels() was selected. createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Returns null (does not support ServerBuilders). Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatena",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html:4763,avail,available,4763,javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html,1,['avail'],['available']
Availability,",; ImagePlane plane). Paint connections between objects (e.g. static void; paintHandles(List<Point2> handles,; Graphics2D g2d,; double minHandleSize,; double maxHandleSize,; Color colorStroke,; Color colorFill). Paint the handles onto a Graphics object, if we have a suitable (non-point) ROI. static void; paintHandles(RoiEditor roiEditor,; Graphics2D g2d,; double minHandleSize,; double maxHandleSize,; Color colorStroke,; Color colorFill). Paint the handles onto a Graphics object, if we have a suitable (non-point) ROI. static boolean; paintObject(PathObject pathObject,; Graphics2D g,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample). Paint an object (or, more precisely, its ROI). static void; paintShape(Shape shape,; Graphics2D g2d,; Color colorStroke,; Stroke stroke,; Color colorFill). Paint the specified shape with specified stroke and fill colors. static void; paintSpecifiedObjects(Graphics2D g2d,; Collection<? extends PathObject> pathObjects,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample). Paint the specified objects. static void; paintTMAGrid(Graphics2D g2d,; TMAGrid tmaGrid,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample). Paint the specified tissue microarray grid. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. paintSpecifiedObjects; public static void paintSpecifiedObjects(Graphics2D g2d,; Collection<? extends PathObject> pathObjects,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample); Paint the specified objects. Parameters:; g2d - the graphics object on which the objects should be painted; pathObjects - the objects to paint; overlayOptions - the overlay options defining how objects should be painted; selectionModel - the selection model used to determine the selection status o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html:2005,down,downsample,2005,javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html,1,['down'],['downsample']
Availability,",T,U>; padding(Padding padding). Set the padding to use when extracting regions. PixelProcessor.Builder<S,T,U>; pixelSize(double pixelSize). Set the requested pixel size to use with requesting image regions. PixelProcessor.Builder<S,T,U>; processor(Processor<S,T,U> processor). Set the processor. PixelProcessor.Builder<S,T,U>; tile(int tileWidth,; int tileHeight). Set a default tiler to use, with a specified tile size. PixelProcessor.Builder<S,T,U>; tiler(Tiler tiler). Set a tiler to use. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(). Method Details. imageSupplier; public PixelProcessor.Builder<S,T,U> imageSupplier(ImageSupplier<S> imageSupplier); Set the image supplier. This is required if the processor is to have access to pixels. Parameters:; imageSupplier - ; Returns:. maskSupplier; public PixelProcessor.Builder<S,T,U> maskSupplier(MaskSupplier<S,T> maskSupplier); Set the mask supplier. This is optional, but without it masks will be null. Parameters:; maskSupplier - ; Returns:. outputHandler; public PixelProcessor.Builder<S,T,U> outputHandler(OutputHandler<S,T,U> outputHandler); Set the output handler. This is optional, for cases where the processor does not make updates to the; parent object itself. Parameters:; outputHandler - ; Returns:. processor; public PixelProcessor.Builder<S,T,U> processor(Processor<S,T,U> processor); Set the processor. This is required to do any interesting work. Parameters:; processor - ; Returns:. padding; public PixelProcessor.Builder<S,T,U> padding(Padding padding); Set the padding to use when extracting regions.; Note that this is defined in pixels at the full image resolution, not the downsampled resolution. Parameters:; padding - ; Returns:. padding; public PixelProcessor.Builder<S,T,U> padding(int size); Set the padding to use when extracting regions, using a symmetric padding.; Note that this",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html:2783,mask,maskSupplier,2783,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,3,['mask'],"['mask', 'maskSupplier']"
Availability,"- ; Returns:. convertTransform; public static AffineTransformation convertTransform(AffineTransform transform); Convert an AffineTransform to an AffineTransformation. Parameters:; transform - ; Returns:. shapeToGeometry; public static Geometry shapeToGeometry(Shape shape); Convert a java.awt.Shape to a JTS Geometry. Parameters:; shape - ; Returns:. envelopToRegion; public static ImageRegion envelopToRegion(Envelope env,; int z,; int t); Convert an Envelope to an ImageRegion. Parameters:; env - envelop; z - z index for the region (default is 0); t - timepoint for the region (default is 0); Returns:; the smallest ImageRegion that contains the specified envelop. attemptOperation; public static Geometry attemptOperation(Geometry input,; Function<Geometry,Geometry> fun); Attempt to apply a function to a geometry, returning the input unchanged if there was an exception.; ; The purpose of this is to make it easier to apply non-essential functions that might fail (e.g. with a TopologyException ; and to recover easily. Parameters:; input - the input geometry; fun - the function to (attempt) to apply; Returns:; the new geometry if the function succeeded, otherwise the original geometry. roundCoordinates; public static Geometry roundCoordinates(Geometry geometry); Round coordinates in a Geometry to integer values. Parameters:; geometry - the updated Geometry; Returns:. constrainToBounds; public static Geometry constrainToBounds(Geometry geometry,; double x,; double y,; double width,; double height); Compute the intersection of a Geometry and a specified bounding box.; The original Geometry may be returned unchanged if no changes are required to fit within the bounds. Parameters:; geometry - the updated Geometry; x - ; y - ; width - ; height - ; Returns:. createRectangle; public static Geometry createRectangle(double x,; double y,; double width,; double height); Create a rectangular Geometry for the specified bounding box. Parameters:; x - ; y - ; width - ; height - ; Returns:.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryTools.html:5864,recover,recover,5864,javadoc/docs/qupath/lib/roi/GeometryTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryTools.html,1,['recover'],['recover']
Availability,"- Class in qupath.lib.experimental.pixels. Builder class for a PixelProcessor. PixelProcessorUtils - Class in qupath.lib.experimental.pixels. Utility functions to help with the PixelProcessor class. PixelProcessorUtils() - Constructor for class qupath.lib.experimental.pixels.PixelProcessorUtils;  ; pixelSize(double) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set the requested pixel size to use with requesting image regions. pixelSize(double, double) - Method in class qupath.lib.roi.GeometryTools.GeometryConverter.Builder. Specify the pixel width and height, used to scale x and y coordinates during conversion (default is 1.0 for both). pixelSize(PixelCalibration) - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapBuilder. Requested pixel size to determine the resolution of the density map, in calibrated units. pixelSizeCalibrated() - Method in class qupath.lib.images.servers.ImageServerMetadata. Returns true if pixel width and height calibration information is available for the image. pixelSizeMicrons(Number, Number) - Method in class qupath.lib.images.servers.ImageServerMetadata.Builder. Specify the pixel sizes, in microns. pixelSizeMicrons(Number, Number) - Method in class qupath.lib.images.servers.PixelCalibration.Builder. Specify the pixel width and height in microns (the most common calibration value). pixelSnapping - Variable in class qupath.lib.gui.panes.PreferencePane.DrawingPreferences;  ; pixelType(String) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify the output PixelType as a String, e.g. pixelType(PixelType) - Method in class qupath.lib.images.servers.bioformats.OMEPixelParser.Builder;  ; pixelType(PixelType) - Method in class qupath.lib.images.servers.ImageServerMetadata.Builder. Specify the bit-depth of the image. pixelType(PixelType) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify the output PixelType. PixelType - Enum Class in qupath.li",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:767540,avail,available,767540,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"- Method in class qupath.lib.gui.scripting.languages.PlainLanguage;  ; getAutoCompletor() - Method in class qupath.lib.gui.scripting.languages.PropertiesLanguage;  ; getAutoCompletor() - Method in class qupath.lib.gui.scripting.languages.XmlLanguage;  ; getAutoCompletor() - Method in class qupath.lib.gui.scripting.languages.YamlLanguage;  ; getAutoCompletor() - Method in class qupath.lib.scripting.languages.ScriptLanguage. Get the ScriptAutoCompletor object that takes care of this language's auto-completion. getAutomateActions() - Method in class qupath.lib.gui.QuPathGUI. Get the automated actions associated with this QuPath instance. getAvailableFeatures(Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Get a set containing the names of all measurements found in the measurement lists of a specified object collection. getAvailableLanguages() - Static method in class qupath.lib.gui.scripting.languages.ScriptLanguageProvider. Get the available script languages. getAvailablePathClasses() - Method in class qupath.lib.gui.QuPathGUI. Get an observable list of available PathClasses. getAvailableSyntaxes() - Static method in class qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider. Get the available script syntaxes. getAvailableTools() - Method in class qupath.lib.gui.viewer.tools.ExtendedPathTool;  ; getAveragedPixelSize() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the averaged pixel size in microns, if available - or Double.NaN otherwise. getAveragedPixelSize() - Method in class qupath.lib.images.servers.PixelCalibration. Get an average of PixelCalibration.getPixelWidth() and PixelCalibration.getPixelHeight(). getAveragedPixelSizeMicrons() - Method in class qupath.lib.images.servers.PixelCalibration. Get the average of the pixel width and height in microns if possible, or Double.NaN if the pixel size is not available. getBackingListEntries() - Method in class qupath.lib.gui.measure.ObservableMeasurem",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:333104,avail,available,333104,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"- Static method in class qupath.lib.experimental.pixels.MeasurementProcessor. Create a processor that can make custom measurements for an image object. createProject(File, Class<T>) - Static method in class qupath.lib.projects.Projects. Create a new project using the local file system. createProjectAction(Consumer<Project<BufferedImage>>) - Method in class qupath.lib.gui.QuPathGUI. Create an Action that depends upon a Project. createPropertySheetItem(Property<T>, Class<? extends T>) - Static method in class qupath.lib.gui.panes.PreferencePane. Deprecated.; use PropertyItemBuilder instead. createRandomRectangle(ImageRegion, double, double) - Static method in class qupath.lib.roi.RoiTools. Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. createRandomRectangle(ImageRegion, double, double, Random) - Static method in class qupath.lib.roi.RoiTools. Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. createRandomRectangle(ROI, double, double) - Static method in class qupath.lib.roi.RoiTools. Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI. createRandomRectangle(ROI, double, double, int, boolean, Random) - Static method in class qupath.lib.roi.RoiTools. Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI, ; using a specified maximum number of attempts. createRecentCommandsDialog(QuPathGUI) - Static method in class qupath.lib.gui.tools.CommandFinderTools. Create a dialog showing a filtered list of recently-used commands, for fast selection. createRecentItemsMenu(String, ObservableList<URI>, Consumer<URI>) - Static method in class qupath.lib.gui.tools.GuiTools. Create a menu that displays recent items, stored in the form of URIs, using default text to show for the menu i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:213342,mask,mask,213342,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['mask'],['mask']
Availability,"-coordinate of the second region's bounding box; y - y-coordinate of the second region's bounding box; width - width of the second region's bounding box; height - height of the second region's bounding box; Returns:; the clipped RegionRequest, which may be this if no clipping is required. updateZ; public RegionRequest updateZ(int z); Create a RegionRequest equivalent to this one with the updated z value. Parameters:; z - requested z position; Returns:; RegionRequest with the specified z value (may be this object unchanged). updateT; public RegionRequest updateT(int t); Create a RegionRequest equivalent to this one with the updated t value. Parameters:; t - requested t position; Returns:; RegionRequest with the specified t value (may be this object unchanged). updateDownsample; public RegionRequest updateDownsample(double downsample); Create a RegionRequest equivalent to this one with the updated downsample value. Parameters:; downsample - requested downsample position; Returns:; RegionRequest with the specified downsample value (may be this object unchanged). updatePath; public RegionRequest updatePath(String path); Create a RegionRequest equivalent to this one with the updated path. Parameters:; path - requested path position; Returns:; RegionRequest with the specified path value (may be this object unchanged). translate; public RegionRequest translate(int dx,; int dy); Create a RegionRequest equivalent to this one with the x and y coordinates updated by translation. Parameters:; dx - value to add to the x coordinate; dy - value to add to the y coordinate; Returns:; RegionRequest with the specified path value (may be this object unchanged). pad2D; public RegionRequest pad2D(int xPad,; int yPad); Add symmetric padding to the x and y dimensions of a request. Parameters:; xPad - padding to add along the x dimension; the width will be adjusted by xPad * 2; yPad - padding to add along the y dimension; the height will be adjusted by yPad * 2; Returns:; RegionRequest with ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html:9766,down,downsample,9766,javadoc/docs/qupath/lib/regions/RegionRequest.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html,3,['down'],['downsample']
Availability,". BufferedImageTools (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.awt.common; Class BufferedImageTools. java.lang.Object; qupath.lib.awt.common.BufferedImageTools. public final class BufferedImageTools; extends Object; Static methods for working with BufferedImages and QuPath objects. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static long; computeAboveThresholdCounts(WritableRaster raster,; int band,; double threshold,; WritableRaster rasterMask). Count the number of above-threshold pixels in a specified band of a raster, with optional mask. static long; computeAboveThresholdCounts(WritableRaster raster,; int band,; double threshold,; WritableRaster rasterMask,; Rectangle bounds). Count the number of above-threshold pixels in a specified band of a raster, with optional mask and/or bounding rectangle. static long[]; computeArgMaxHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask). Create a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion. static long[]; computeArgMaxHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask,; Rectangle bounds). Create a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion, ; with an optional bounding rectangle. static long[]; computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask). Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values. static long[]; computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaste",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:908,mask,mask,908,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,1,['mask'],['mask']
Availability,". BuildInfo (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class BuildInfo. java.lang.Object; qupath.lib.gui.BuildInfo. public class BuildInfo; extends Object; Basic version information about the current QuPath build. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getBuildString(). Get the build String, or null if no build String is available. static BuildInfo; getInstance(). Get the shared BuildInfo instance. String; getLatestCommit(). Get reference to the latest git commit, if known, or null if this has not be preserved. Version; getVersion(). Get the version, or null if the version is unknown. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getInstance; public static BuildInfo getInstance(); Get the shared BuildInfo instance. Returns:. getVersion; public Version getVersion(); Get the version, or null if the version is unknown. Returns:. getBuildString; public String getBuildString(); Get the build String, or null if no build String is available.; This provides a short summary of build information, including version, build time, and latest commit if known. Returns:. getLatestCommit; public String getLatestCommit(); Get reference to the latest git commit, if known, or null if this has not be preserved. Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/BuildInfo.html:724,avail,available,724,javadoc/docs/qupath/lib/gui/BuildInfo.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/BuildInfo.html,2,['avail'],['available']
Availability,". ChoiceParameter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.plugins.parameters; Class ChoiceParameter<S>. java.lang.Object; qupath.lib.plugins.parameters.ChoiceParameter<S>. Type Parameters:; S - . All Implemented Interfaces:; Serializable, Parameter<S>. public class ChoiceParameter<S>; extends Object; Parameter that supports a list of choices.; ; May be displayed as a drop-down list. Author:; Pete Bankhead; See Also:. Serialized Form. Field Summary; Fields. Modifier and Type; Field; Description; protected List<S>; choices;  ; protected S; lastValue;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Parameter<S>; duplicate(). Create a new Parameter with the same text and value. List<S>; getChoices(). Get a list of available choices. S; getDefaultValue(). Get a default value to use if the Parameter has not been otherwise set. String; getHelpText(). Get a description of the meaning of the Parameter; may be displayed e.g. String; getPrompt(). Get some prompt text that may be displayed to a user. S; getValue(). Get the current set value (may be null). S; getValueOrDefault(). Get the current set value, or any default if no value has been set. boolean; hasHelpText(). Query whether getHelpText() returns a meaningful String (as opposed to null). boolean; isHidden(). Test is the 'hidden' flag is set for the parameter. boolean; isValidInput(S value). Query if a specified value would be valid for this parameter. void; resetValue(). Set last value to null (so default can be used). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setStringLastValue(Locale locale,; String value). This will only ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html:666,down,down,666,javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html,1,['down'],['down']
Availability,". Constructor Details. AbstractInteractivePlugin; public AbstractInteractivePlugin(). Method Details. getDefaultParameterList; public abstract ParameterList getDefaultParameterList(ImageData<T> imageData); This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Parameters:; imageData - ; Returns:. alwaysPromptForObjects; public boolean alwaysPromptForObjects(); Description copied from interface: PathInteractivePlugin; If this returns true, then a prompt is requested every time the command is run - ; even if there are valid parent objects already selected. Specified by:; alwaysPromptForObjects in interface PathInteractivePlugin<T>; Returns:. getParameterList; protected ParameterList getParameterList(ImageData<T> imageData); Get a reference to a ParameterList stored internally, and which will be used for analysis.; ; If there is no list presently available, getDefaultParameterList will be called.; ; If there is a list available, it will be returned.; ; The reason for needing this in addition to getDefaultParameterList, is that parseArgument could ; modify the internal ParameterList that will actually be used, while getDefaultParameterList is useful; when creating GUIs and ensuring that there is always a sensible starting point. Parameters:; imageData - image data for which the parameters should be generated. This may influence which parameters are shown.; Returns:. parseArgument; protected boolean parseArgument(ImageData<T> imageData,; String arg); Description copied from class: AbstractPlugin; Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks will be called and then runTasks will submit these to the plugin runner to run.; If it returns 'false', runPlugin will immediately abort and return false as well.; ; Sin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html:4008,avail,available,4008,javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html,1,['avail'],['available']
Availability,". Constructor; Description; Builder(int fullWidth,; int fullHeight). Constructor to help build a list of ImageServerMetadata.ImageResolutionLevel objects to represent pyramidal resolutions. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ImageServerMetadata.ImageResolutionLevel.Builder; addFullResolutionLevel(). Add the full-resolution image as a level of the pyramid. ImageServerMetadata.ImageResolutionLevel.Builder; addLevel(double downsample,; int levelWidth,; int levelHeight). Add a new level by providing a downsample value, width and height. ImageServerMetadata.ImageResolutionLevel.Builder; addLevel(int levelWidth,; int levelHeight). Add a new level based on level dimensions, estimating the corresponding downsample value as required. ImageServerMetadata.ImageResolutionLevel.Builder; addLevel(ImageServerMetadata.ImageResolutionLevel level). Add a new level directly. ImageServerMetadata.ImageResolutionLevel.Builder; addLevelByDownsample(double downsample). Add a new level, calculating dimensions using a downsample factor applied to the full-resolution image. List<ImageServerMetadata.ImageResolutionLevel>; build(). Build a list of ImageResolutionLevels, which can be used with an ImageServerMetadata object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(int fullWidth,; int fullHeight); Constructor to help build a list of ImageServerMetadata.ImageResolutionLevel objects to represent pyramidal resolutions. Parameters:; fullWidth - full-resolution image width; fullHeight - full-resolution image height. Method Details. addLevelByDownsample; public ImageServerMetadata.ImageResolutionLevel.Builder addLevelByDownsample(double downsample); Add a new level, calculating dimensions using a downsample factor applied to the full-resolution image. Parameters:; downsample - ; Returns:. addFullRe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.ImageResolutionLevel.Builder.html:1845,down,downsample,1845,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.ImageResolutionLevel.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.ImageResolutionLevel.Builder.html,1,['down'],['downsample']
Availability,". ContextHelpViewer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class ContextHelpViewer. java.lang.Object; qupath.lib.gui.commands.ContextHelpViewer. public class ContextHelpViewer; extends Object; Help window providing context-dependent help. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression<InfoMessage>; getInfoMessage(). Get a message that may be used to create a badge indicating that info or warning messages; are available. static ContextHelpViewer; getInstance(QuPathGUI qupath). Get the single ContextHelpViewer instance associated with a specific ; QuPath instance. Stage; getStage(). Get the help viewer stage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInfoMessage; public ObjectExpression<InfoMessage> getInfoMessage(); Get a message that may be used to create a badge indicating that info or warning messages; are available. Returns:. getInstance; public static ContextHelpViewer getInstance(QuPathGUI qupath); Get the single ContextHelpViewer instance associated with a specific ; QuPath instance. Parameters:; qupath - ; Returns:. getStage; public Stage getStage(); Get the help viewer stage. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/ContextHelpViewer.html:828,avail,available,828,javadoc/docs/qupath/lib/gui/commands/ContextHelpViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/ContextHelpViewer.html,2,['avail'],['available']
Availability,". CreateTrainingImageCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands; Class CreateTrainingImageCommand. java.lang.Object; qupath.process.gui.commands.CreateTrainingImageCommand. public class CreateTrainingImageCommand; extends Object; Command to generate a SparseImageServer from multiple image regions across a project.; This can be useful as a training image for a pixel classifier, for example. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; CreateTrainingImageCommand();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ProjectImageEntry<BufferedImage>; promptToCreateTrainingImage(Project<BufferedImage> project,; List<PathClass> availableClasses). Prompt to create a training image, based upon annotations throughout a project. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. CreateTrainingImageCommand; public CreateTrainingImageCommand(). Method Details. promptToCreateTrainingImage; public static ProjectImageEntry<BufferedImage> promptToCreateTrainingImage(Project<BufferedImage> project,; List<PathClass> availableClasses); Prompt to create a training image, based upon annotations throughout a project. Parameters:; project - ; availableClasses - ; Returns:; the entry of the new training image, created within the project. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateTrainingImageCommand.html:1041,avail,availableClasses,1041,javadoc/docs/qupath/process/gui/commands/CreateTrainingImageCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/CreateTrainingImageCommand.html,3,['avail'],['availableClasses']
Availability,". DnnModelParams (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Class DnnModelParams. java.lang.Object; qupath.opencv.dnn.DnnModelParams. public class DnnModelParams; extends Object; Parameters to build a DnnModel.; These are used via DnnModels.buildModel(DnnModelParams).; ; Many parameters are optional.; However as many as are available should be set, to maximize the chances ; of a DnnModelBuilder being available to build a model from the parameters.; ; Warning! The API for this class is unstable; it is likely to change in ; future releases. Since:; v0.4.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; DnnModelParams.Builder. Builder for DnnModelParams. Field Summary; Fields. Modifier and Type; Field; Description; static final String; FRAMEWORK_MXNET. Default name to identify MXNet. static final String; FRAMEWORK_ONNX_RUNTIME. Default name to identify ONNX Runtime. static final String; FRAMEWORK_OPENCV_DNN. Default name to identify OpenCV DNN. static final String; FRAMEWORK_PYTORCH. Default name to identify PyTorch. static final String; FRAMEWORK_TENSORFLOW. Default name to identify TensorFlow. static final String; FRAMEWORK_TF_LITE. Default name to identify TensorFlow Lite. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static DnnModelParams.Builder; builder(). Create a new params builder, with default values. static DnnModelParams.Builder; builder(DnnModelParams params). Create a new params builder, initialized with the values from existing ; params. String; getFramework(). Get the name of the deep learning framework that may be used. Map<Str",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModelParams.html:622,avail,available,622,javadoc/docs/qupath/opencv/dnn/DnnModelParams.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModelParams.html,2,['avail'],['available']
Availability,". DoubleProperty; rotation. Return the rotation property of this viewer. IntegerProperty; tPosition. Current t-position for the timepoint currently visible in the viewer. IntegerProperty; zPosition. Current z-position for the z-slice currently visible in the viewer. Field Summary; Fields. Modifier and Type; Field; Description; protected boolean; imageUpdated. Flag used to indicate that the image was updated for a repaint (otherwise it's assumed only the overlay may have changed). protected boolean; locationUpdated. Flag used to indicate that the visible region in the viewer has changed. Constructor Summary; Constructors. Constructor; Description; QuPathViewer(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions). Create a new viewer. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addViewerListener(QuPathViewerListener listener). Add a viewer listener. void; centerImage(). Center the current image in the viewer, while keeping the same downsample factor. void; centerROI(ROI roi). Center the specified ROI in the viewer. void; closeViewer(). Request that this viewer is closed. protected boolean; componentContains(double x,; double y);  ; Point2D; componentPointToImagePoint(double x,; double y,; Point2D pointDest,; boolean constrainToBounds). Convert x and y coordinates from the component space to the image space. Point2D; componentPointToImagePoint(Point2D point,; Point2D pointDest,; boolean constrainToBounds). Convert a coordinate from the viewer into the corresponding pixel coordinate in the full-resolution image - optionally constraining it to any server bounds. protected void; fireImageDataChanged(ImageData<BufferedImage> imageDataPrevious,; ImageData<BufferedImage> imageDataNew);  ; protected void; fireVisibleRegionChangedEvent(Shape shape);  ; void; forceOverlayUpdate(). Force the overlay displaying detections and annotations to be repainted. DoubleProperty; gammaProperty(). Get the gamma p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:2126,down,downsample,2126,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,1,['down'],['downsample']
Availability,". FileCopier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class FileCopier. java.lang.Object; qupath.lib.gui.FileCopier. public class FileCopier; extends Object; Copy files to an output directory, prompting the user if necessary.; ; This is intended for interactive use; if there is an exception, the ; user will be notified by an error message dialog.; . Since:; v0.5.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; FileCopier();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; doCopy(). Perform the copying. FileCopier; inputFiles(Collection<File> files). Collection of files to copy. FileCopier; inputPaths(Collection<Path> paths). Collection of paths representing files to copy. FileCopier; outputPath(String name). Name of the output directory. FileCopier; outputPath(Path name). Path representing the output directory. FileCopier; relativeToUserDirectory(). Specify that the copying is relative to the QuPath user directory. FileCopier; title(String title). Title for any dialog. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FileCopier; public FileCopier(). Method Details. title; public FileCopier title(String title); Title for any dialog. Parameters:; title - ; Returns:. relativeToUserDirectory; public FileCopier relativeToUserDirectory(); Specify that the copying is relative to the QuPath user directory.; This is useful if copying files to the user directory itself, or a subdirectory.; If this method is called, then the user will be prompted to create a user directory ; if one",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/FileCopier.html:622,error,error,622,javadoc/docs/qupath/lib/gui/FileCopier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/FileCopier.html,1,['error'],['error']
Availability,". FileFormatInfo.ImageCheckType (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Interface FileFormatInfo.ImageCheckType. Enclosing class:; FileFormatInfo. public static interface FileFormatInfo.ImageCheckType; Interface defining some basic image metadata that may be extracted from an image file ; to help ascertain whether an ImageServerBuilder can handle it. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; String; getDescription(). Get the image description, as stored in a TIFF, or null if no description is available. File; getFile(). Get a File object representing the local image file - or null if no file could be found. long; getLargestImageHeight(). Get the height of the largest image, if known. long; getLargestImageWidth(). Get the width of the largest image, if known. boolean; isBigTiff(). Returns true if URI is for a local file known/expected to be a BigTIFF image. boolean; isNotRGB(). Returns true if we can say with reasonable confidence that the image is not RGB. boolean; isTiff(). Returns true if URI is for a local file known/expected to be a TIFF image. boolean; isURL(). Return true if URI has a scheme beginning with http. int; nImages(). Return an estimate of the number of images if known, or -1 if unknown. int; nImagesLargest(). Return the number of images with the largest image size, if known, or -1 if unknown. Method Details. isURL; boolean isURL(); Return true if URI has a scheme beginning with http. Returns:. isTiff; boolean isTiff(); Returns true if URI is for a local file known/expected to be a TIFF image. Returns:. isBigTiff; boolean isBigTiff(); Returns true if URI is for a local file known/expected to ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/FileFormatInfo.ImageCheckType.html:864,avail,available,864,javadoc/docs/qupath/lib/images/servers/FileFormatInfo.ImageCheckType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/FileFormatInfo.ImageCheckType.html,1,['avail'],['available']
Availability,". Get a list of available fonts. static ObservableList<QuPathStyleManager.StyleOption>; availableStyles. Get the current available styles as an observable list. static ObjectProperty<QuPathStyleManager.Fonts>; font. Get the current selected font. static ObjectProperty<QuPathStyleManager.StyleOption>; selectedStyle. Get the current selected style. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; QuPathStyleManager.Fonts. Available font families. static interface ; QuPathStyleManager.StyleOption. Interface defining a style that may be applied to QuPath. Constructor Summary; Constructors. Constructor; Description; QuPathStyleManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObservableList<QuPathStyleManager.Fonts>; availableFontsProperty(). Get a list of available fonts. static ObservableList<QuPathStyleManager.StyleOption>; availableStylesProperty(). Get the current available styles as an observable list. static ObjectProperty<QuPathStyleManager.Fonts>; fontProperty(). Get the current selected font. static boolean; installStyles(Collection<File> list). Handle installing CSS files (which can be used to style QuPath). static boolean; isDefaultStyle(). Check if the default JavaFX style is used. static void; refresh(). Refresh the current style. static ObjectProperty<QuPathStyleManager.StyleOption>; selectedStyleProperty(). Get the current selected style. static void; updateAvailableStyles(). Request that the list of available styles is updated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. availableStyles; public static ObservableList<QuPathStyleManager.StyleOption> availableStylesProperty; Get the current available styles as an observable list.; The list is unmodifiable, since any changes should be made via adding/removing files in UserDirectoryManage",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html:1787,avail,available,1787,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,1,['avail'],['available']
Availability,". Get the path to where user directory for storing CSS styles. getCurrentConsoleControl() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; getCurrentDataFileVersion() - Static method in class qupath.lib.io.PathIO. Get the current preferred data file version. getCurrentEditorControl() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; getCurrentHierarchy() - Static method in class qupath.lib.scripting.QP. Get the PathObjectHierarchy of the current ImageData. getCurrentImageData() - Static method in class qupath.lib.scripting.QP. Get the path to the current ImageData. getCurrentImageName() - Static method in class qupath.lib.scripting.QP. Get the name of the current image. getCurrentImageNameWithoutExtension() - Static method in class qupath.lib.scripting.QP. Get the name of the current image, removing any file extension. getCurrentImages(QuPathGUI) - Static method in class qupath.lib.gui.dialogs.ProjectDialogs. Get the ProjectImageEntry for each of the current images open in QuPath, if available. getCurrentLanguage() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor. Gets the value of the currentLanguage property. getCurrentParent() - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler;  ; getCurrentParent() - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler;  ; getCurrentParent() - Method in class qupath.process.gui.WandToolEventHandler;  ; getCurrentROI() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the current ROI, i.e. getCurrentScriptTab() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; getCurrentServer() - Static method in class qupath.lib.scripting.QP. Get the ImageServer of the current ImageData. getCurrentServerPath() - Static method in class qupath.lib.scripting.QP. Get the path to the ImageServer of the current ImageData. getCurrentSyntax() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor. Gets the value of the current",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:365489,avail,available,365489,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,". GsonTools.SubTypeAdapterFactory (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class GsonTools.SubTypeAdapterFactory<T>. java.lang.Object; qupath.lib.io.GsonTools.SubTypeAdapterFactory<T>. Type Parameters:; T - . All Implemented Interfaces:; TypeAdapterFactory. Enclosing class:; GsonTools. public static class GsonTools.SubTypeAdapterFactory<T>; extends Object; implements TypeAdapterFactory; A TypeAdapterFactory that is suitable for handling class hierarchies.; This can be used to construct the appropriate subtype when parsing the JSON.; ; This is inspired and influenced by the RuntimeTypeAdapterFactory class available as part of Gson extras, ; but not the main Gson library ; (https://github.com/google/gson/blob/gson-parent-2.8.6/extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java),; which is Copyright (C) 2011 Google Inc. licensed under Apache License, Version 2.0.; ; This behavior of this class differs in several ways:; ; it supports alias labels for deserialization, which can be used to help achieve backwards compatibility; it avoids use of the internal Streams class for Gson, which complicates modularity; it does not support a maintainLabel option (the label field is always removed). Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; <R> TypeAdapter<R>; create(Gson gson,; TypeToken<R> type);  ; GsonTools.SubTypeAdapterFactory<T>; registerAlias(Class<? extends T> subtype,; String alias). Register an alias label for a specified subtype. GsonTools.SubTypeAdapterFactory<T>; registerSubtype(Class<? extends T> subtype). Register a subtype using the default label (the simple name of the class). GsonTools.SubT",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html:906,avail,available,906,javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/GsonTools.SubTypeAdapterFactory.html,1,['avail'],['available']
Availability,". HaralickFeatureComputer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.features; Class HaralickFeatureComputer. java.lang.Object; qupath.lib.analysis.features.HaralickFeatureComputer. public class HaralickFeatureComputer; extends Object; Static methods for computing Haralick texture features. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; HaralickFeatureComputer();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static HaralickFeatures; measureHaralick(SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d). Compute mean Haralick features from a SimpleImage, with optional masking. static CoocurranceMatrices; updateCooccurrenceMatrices(CoocurranceMatrices matrices,; SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d). Update existing CoocurranceMatrices with the values in a SimpleImage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. HaralickFeatureComputer; public HaralickFeatureComputer(). Method Details. measureHaralick; public static HaralickFeatures measureHaralick(SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d); Compute mean Haralick features from a SimpleImage, with optional masking. Parameters:; ip - input image; bpMask - binary mask (may be null); nBins - number of bins in co-occurrence matrix; minValue - minimum value for binning in the co-occurrence matrix; maxValue - maximum value for binning in the co-occurrence matrix; d - separation between pi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/HaralickFeatureComputer.html:1003,mask,masking,1003,javadoc/docs/qupath/lib/analysis/features/HaralickFeatureComputer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/HaralickFeatureComputer.html,1,['mask'],['masking']
Availability,". HaralickFeaturesPlugin (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.algorithms; Class HaralickFeaturesPlugin. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.algorithms.HaralickFeaturesPlugin. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class HaralickFeaturesPlugin; extends AbstractInteractivePlugin<BufferedImage>; Plugin for calculating Haralick texture features, within or around detections or tiles.; ; The ROIs of the detections can be used directly as masks, or else the textures can alternatively be ; calculated within square or circular regions around the object centroids.; This latter option makes it possible to calculate a high density of tiles (for example), and then to ; compute textures at different resolutions independently of the tile size. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; HaralickFeaturesPlugin(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/HaralickFeaturesPlugin.html:896,mask,masks,896,javadoc/docs/qupath/lib/algorithms/HaralickFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/HaralickFeaturesPlugin.html,1,['mask'],['masks']
Availability,". ImagePlane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.regions; Class ImagePlane. java.lang.Object; qupath.lib.regions.ImagePlane. All Implemented Interfaces:; Comparable<ImagePlane>. public class ImagePlane; extends Object; implements Comparable<ImagePlane>; Helper class to store z-slice and time point indices, optionally along with a channel index as well.; ; These values are frequently required together, such as with ROIs and RegionRequests. ; It is more convenient (and less error-prone) to use a single ImagePlane instance rather than passing the indices as ; separate integers each time they are needed. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; compareTo(ImagePlane o). Compare with another ImagePlane, in the order t, z, c. boolean; equals(Object obj);  ; int; getC(). Get the channel index. static ImagePlane; getDefaultPlane(). Returns an ImagePlane with channel -1, z of 0 and t of 0. static ImagePlane; getPlane(int z,; int t). Returns an ImagePlus, where the z-slice and time point can be specified and ; channel is ignored (i.e. static ImagePlane; getPlane(ImageRegion region). Returns an ImagePlane with channel -1 and z and t set from an existing ImageRegion. static ImagePlane; getPlane(ROI roi). Returns an ImagePlane with channel -1, and z and t set from an existing ROI. static ImagePlane; getPlaneWithChannel(int c,; int z,; int t). Returns an ImagePlane, where the channel, z-slice and time point can be specified. static ImagePlane; getPlaneWithChannel(ROI roi). Returns an ImagePlane with channel, z and t set from an existing ROI. int; getT(). Get the time point index. int; getZ()",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/regions/ImagePlane.html:772,error,error-prone,772,javadoc/docs/qupath/lib/regions/ImagePlane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/ImagePlane.html,1,['error'],['error-prone']
Availability,". ImageRegionRenderer (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.images.stores; Interface ImageRegionRenderer. All Known Implementing Classes:; DefaultImageRegionStore. public interface ImageRegionRenderer; Interface for painting regions of an ImageServer onto a Graphics object. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; void; paintRegion(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; BufferedImage imgThumbnail,; ImageObserver observer,; ImageRenderer renderer). Paint an image region. void; paintRegionCompletely(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; ImageObserver observer,; ImageRenderer renderer,; long timeoutMilliseconds). Similar to paintRegion(ImageServer, Graphics, Shape, int, int, double, BufferedImage, ImageObserver, ImageRenderer), ; but wait until all the tiles have arrived (or abort if it is taking too long). Method Details. paintRegionCompletely; void paintRegionCompletely(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; ImageObserver observer,; ImageRenderer renderer,; long timeoutMilliseconds); Similar to paintRegion(ImageServer, Graphics, Shape, int, int, double, BufferedImage, ImageObserver, ImageRenderer), ; but wait until all the tiles have arrived (or abort if it is taking too long). Parameters:; server - the server representing the image that shown be painted; g - the graphics object upon which to paint; clipShapeVisible - t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ImageRegionRenderer.html:828,down,downsampleFactor,828,javadoc/docs/qupath/lib/gui/images/stores/ImageRegionRenderer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ImageRegionRenderer.html,1,['down'],['downsampleFactor']
Availability,". ImageRegionStoreFactory (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.images.stores; Class ImageRegionStoreFactory. java.lang.Object; qupath.lib.gui.images.stores.ImageRegionStoreFactory. public class ImageRegionStoreFactory; extends Object; Factory for creating an ImageRegionStore. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ImageRegionStoreFactory();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static DefaultImageRegionStore; createImageRegionStore(). Create an ImageRegionStore using a default tile cache size, based upon the available memory and user preferences. static DefaultImageRegionStore; createImageRegionStore(long tileCacheSizeBytes). Create an ImageRegionStore with a specified tile cache size, in bytes. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageRegionStoreFactory; public ImageRegionStoreFactory(). Method Details. createImageRegionStore; public static DefaultImageRegionStore createImageRegionStore(long tileCacheSizeBytes); Create an ImageRegionStore with a specified tile cache size, in bytes. Parameters:; tileCacheSizeBytes - ; Returns:. createImageRegionStore; public static DefaultImageRegionStore createImageRegionStore(); Create an ImageRegionStore using a default tile cache size, based upon the available memory and user preferences. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ImageRegionStoreFactory.html:922,avail,available,922,javadoc/docs/qupath/lib/gui/images/stores/ImageRegionStoreFactory.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ImageRegionStoreFactory.html,2,['avail'],['available']
Availability,". ImageServerMetadata.ImageResolutionLevel (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class ImageServerMetadata.ImageResolutionLevel. java.lang.Object; qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel. Enclosing class:; ImageServerMetadata. public static class ImageServerMetadata.ImageResolutionLevel; extends Object; Width and height of each resolution in a multi-level image pyramid. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; ImageServerMetadata.ImageResolutionLevel.Builder. Builder to create a list of ImageServerMetadata.ImageResolutionLevel to represent pyramidal resolutions. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; double; getDownsample(). Get the downsample factor for this level. int; getHeight(). Get the image height at this level. int; getWidth(). Get the image width at this level. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getDownsample; public double getDownsample(); Get the downsample factor for this level. Returns:. getWidth; public int getWidth(); Get the image width at this level. Returns:. getHeight; public int getHeight(); Get the image height at this level. Returns:. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.ImageResolutionLevel.html:1122,down,downsample,1122,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.ImageResolutionLevel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.ImageResolutionLevel.html,2,['down'],['downsample']
Availability,". Initial test implementation of Local Binary Patterns. LocalBinaryPatternsPlugin. Calculate local binary pattern features. LocalNormalization. Methods to normalize the local image intensity within an image, to have (approximately) zero mean and unit variance. LocalNormalization.LocalNormalizationType. Helper class to store local normalization parameters. LocalNormalization.NormalizationType. Local normalization type. LocalNormalization.SmoothingScale. 2D or 3D Gaussian scale. LoggingTools;  ; LogManager. Manage logging levels. LogManager.LogLevel. Available log levels. LogRankTest. Helper class to apply a log-rank test. LogRankTest.LogRankResult. Simple structure used to manage the result of a log rank test. LogTools. Helper class for logging. LogViewerCommand. A viewer for log messages. MarkdownLanguage. Class for the representation of JSON syntax in QuPath. MarkdownStyler. Styling to apply to a CodeArea, based on Markdown syntax. MaskSupplier<S,T>. A functional interface for supplying a mask corresponding to an image. Measurement. Basic interface to define a measurement. MeasurementExportCommand. Dialog box to export measurements. MeasurementExporter. Helper class for exporting the measurements of one or more entries in a project. MeasurementFactory; Deprecated.; MeasurementList. Interface defining a feature measurement list, consisting of key value pairs. MeasurementList.MeasurementListType. Enum representing different types of measurement list, with different priorities regarding ; flexibility and efficiency. MeasurementListFactory. Factory for creating new measurement lists. MeasurementMapPane. Component used for displaying measurement maps, whereby detection objects are recolored ; according to measurement values. MeasurementMapper. Helpers class that can be used to map an object's measurement to a color (packed RGB int). MeasurementProcessor. Create PixelProcessor instances that make measurements from objects. MeasurementProcessor.CustomMeasurement<S,T>. Inte",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:28016,mask,mask,28016,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['mask'],['mask']
Availability,". IntensityFeaturesPlugin (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.algorithms; Class IntensityFeaturesPlugin. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.algorithms.IntensityFeaturesPlugin. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class IntensityFeaturesPlugin; extends AbstractInteractivePlugin<BufferedImage>; Plugin for calculating intensity-based features, including Haralick textures, within or around detections or tiles.; ; The ROIs of the detections can be used directly as masks, or else the textures can alternatively be ; calculated within square or circular regions around the object centroids.; This latter option makes it possible to calculate a high density of tiles (for example), and then to ; compute textures at different resolutions independently of the tile size. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; IntensityFeaturesPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. boolean; alwaysPromptForObjects(). If this returns true, then a prompt is requested every time the command is run - ; even if there are valid parent objects already selected. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default Par",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html:928,mask,masks,928,javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/algorithms/IntensityFeaturesPlugin.html,1,['mask'],['masks']
Availability,". LogViewerCommand (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class LogViewerCommand. java.lang.Object; qupath.lib.gui.commands.LogViewerCommand. public class LogViewerCommand; extends Object; A viewer for log messages. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; LogViewerCommand(Window parent). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ObjectExpression<InfoMessage>; getInfoMessage(). Get a string expression to draw attention to error messages. qupath.ui.logviewer.ui.main.LogMessageCounts; getLogMessageCounts(). Get the counts of all messages logged by the log viewer. ObservableBooleanValue; hasUnseenErrors(). Boolean binding indicating whether there are any unseen errors. void; show();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. LogViewerCommand; public LogViewerCommand(Window parent); Constructor. Parameters:; parent - . Method Details. show; public void show(). getLogMessageCounts; public qupath.ui.logviewer.ui.main.LogMessageCounts getLogMessageCounts(); Get the counts of all messages logged by the log viewer. Returns:. hasUnseenErrors; public ObservableBooleanValue hasUnseenErrors(); Boolean binding indicating whether there are any unseen errors.; 'Unseen' here means errors that occur since the log viewer was visible. Returns:. getInfoMessage; public ObjectExpression<InfoMessage> getInfoMessage(); Get a string expression to draw attention to error messages. Returns:; a string expression that evaluates to the error message, or null if ther",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html:848,error,error,848,javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/LogViewerCommand.html,1,['error'],['error']
Availability,". MaskSupplier (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Interface MaskSupplier<S,T>. Type Parameters:; S - the type of image; T - the type of mask. Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public interface MaskSupplier<S,T>; A functional interface for supplying a mask corresponding to an image. Since:; v0.5.0. Method Summary. All MethodsStatic MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; static MaskSupplier<BufferedImage,BufferedImage>; createBufferedImageMaskSupplier(). Create a image supplier that returns a buffered image. T; getMask(Parameters<S,T> parameters,; ROI roi). Get a mask corresponding to the image, depicting a specified ROI. Method Details. getMask; T getMask(Parameters<S,T> parameters,; ROI roi); throws IOException; Get a mask corresponding to the image, depicting a specified ROI.; In contrast to an ImageSupplier, this may be given a ROI that differs from the main ROI of the parent; object stored in the Parameters. This is useful for cases where different masks might be required,; e.g. to represent a cell nucleus or cytoplasm.; ; When the mask is an image, it should be the same size as the result of parameters.getImage().; It is valid for this method to call parameters.getImage() to ensure this. Parameters:; parameters - ; roi - ; Returns:; Throws:; IOException; See Also:. ImageSupplier. createBufferedImageMaskSupplier; static MaskSupplier<BufferedImage,BufferedImage> createBufferedImageMaskSupplier(); Create a image supplier that returns a buffered image. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MaskSupplier.html:453,mask,mask,453,javadoc/docs/qupath/lib/experimental/pixels/MaskSupplier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MaskSupplier.html,6,['mask'],"['mask', 'masks']"
Availability,". Method Details. isTitle; public boolean isTitle(); Returns true if the parameter should be considered a title. It may therefore be displayed differently. Returns:. isValidInput; public boolean isValidInput(String value); Always returns false. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); Description copied from interface: Parameter; Set last value using a string; implementing classes may need to parse this. Parameters:; locale - ; value - ; Returns:. toString; public String toString(). duplicate; public Parameter<String> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public String getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public String getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html:3450,avail,available,3450,javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/EmptyParameter.html,1,['avail'],['available']
Availability,". Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GridOverlay; public GridOverlay(OverlayOptions overlayOptions); Constructor. Parameters:; overlayOptions - overlay options to control the grid display. Method Details. isVisible; public boolean isVisible(); Description copied from class: AbstractOverlay; Check overlay visibility status. If isVisible() returns false,; then calls to paintOverlay() will not do anything. Overrides:; isVisible in class AbstractOverlay; Returns:. paintOverlay; public void paintOverlay(Graphics2D g,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely); Description copied from interface: PathOverlay; Paint the overlay to a graphics object. The graphics object will have a transform applied to it, so the painting should; make use of coordinates in the original image space. Parameters:; g - Graphics2D object to which drawing should be performed. This should have any transform already applied to it.; imageRegion - The maximum image region that should be shown.; downsampleFactor - The downsample factor at which the overlay will be viewed. There is no need for rescaling according to; this value since it has already been applied to the Graphics2D as part of its AffineTransform, however; it may optionally be needed within the method e.g. to correct line thicknesses.; imageData - the ImageData associated with this overlay. If the overlay is being displayed on a viewer, this is the ImageData open ; within the viewer. Not all overlays require this, and it may be null.; paintCompletely - If true, the metho",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/GridOverlay.html:2252,down,downsampleFactor,2252,javadoc/docs/qupath/lib/gui/viewer/overlays/GridOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/GridOverlay.html,1,['down'],['downsampleFactor']
Availability,". Modifier and Type; Method; Description; ScriptParameters; build(). Build the ScriptParameters with the current options. ScriptParameters.Builder; doUpdateHierarchy(boolean requestUpdate). Optionally request a hierarchy update event after running a script; (default is true for scripts that operate on image data). ScriptParameters.Builder; setArgs(String[] args). Set optional string args to pass to the script. ScriptParameters.Builder; setBatchIndex(int ind). Set the current image index for batch processing (default is 0). ScriptParameters.Builder; setBatchSaveResult(boolean doSave). Specify whether the script that is running should save results or not. ScriptParameters.Builder; setBatchSize(int batch). Set the batch size for batch processing (default is 1). ScriptParameters.Builder; setDefaultImports(Collection<Class<?>> imports);  ; ScriptParameters.Builder; setDefaultStaticImports(Collection<Class<?>> imports);  ; ScriptParameters.Builder; setErrorWriter(Writer writer). Set the main error writer. ScriptParameters.Builder; setFile(File file);  ; ScriptParameters.Builder; setImageData(ImageData<?> imageData). Set the current image data for the script. ScriptParameters.Builder; setProject(Project<?> project). Set the current project for the script. ScriptParameters.Builder; setScript(String script);  ; ScriptParameters.Builder; setSystemWriters(). Set the output and error writers to use System.out and System.err. ScriptParameters.Builder; setWriter(Writer writer). Set the main output writer. ScriptParameters.Builder; useCompiled(boolean useCompiled). Request that the script is compiled before being evaluated, ; or a previously compiled version is used where available. ScriptParameters.Builder; useLogWriters(). Set the output and error writers to append to the default logger. ScriptParameters.Builder; useLogWriters(org.slf4j.Logger logger). Set the output and error writers to append to the specified logger. Methods inherited from class java.lang.Object; clone, equals,",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html:1660,error,error,1660,javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,1,['error'],['error']
Availability,". MorphologicalReconstruction (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.algorithms; Class MorphologicalReconstruction. java.lang.Object; qupath.lib.analysis.algorithms.MorphologicalReconstruction. public class MorphologicalReconstruction; extends Object; Implementation of 2D morphological reconstruction, using 8-connectivity & a hybrid method.; ; TODO: Implement any further optimizations added to the ImageJ version. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; MorphologicalReconstruction();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; morphologicalReconstruction(SimpleModifiableImage imMarker,; SimpleImage imMask). Apply morphological reconstruction with the specified marker and mask images. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MorphologicalReconstruction; public MorphologicalReconstruction(). Method Details. morphologicalReconstruction; public static boolean morphologicalReconstruction(SimpleModifiableImage imMarker,; SimpleImage imMask); Apply morphological reconstruction with the specified marker and mask images. Parameters:; imMarker - ; imMask - ; Returns:; true if the reconstruction terminated successfully, false if it stopped early (e.g. due to an interruption). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/MorphologicalReconstruction.html:1099,mask,mask,1099,javadoc/docs/qupath/lib/analysis/algorithms/MorphologicalReconstruction.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/algorithms/MorphologicalReconstruction.html,2,['mask'],['mask']
Availability,". Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.projects; Interface ResourceManager.Manager<T>. Type Parameters:; T - the generic type of the resource being managed. Enclosing class:; ResourceManager. public static interface ResourceManager.Manager<T>; Simple manager to handle saving and retrieving resources of different kinds, for example from projects ; or a user directory.; ; Examples of resources are scripts or classifiers. Several of these may be stored per project, ; and may be identified by name. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default boolean; contains(String name). Returns true if the manager knows a resource with the specified name exists. T; get(String name). Retrieve a resource by name. Collection<String>; getNames(). Get a list of the available resources. void; put(String name,; T resource). Save a resource within the project. boolean; remove(String name). Remove a resource within the project. Method Details. getNames; Collection<String> getNames(); throws IOException; Get a list of the available resources. Returns:; Throws:; IOException. get; T get(String name); throws IOException; Retrieve a resource by name. Parameters:; name - ; Returns:; Throws:; IOException. put; void put(String name,; T resource); throws IOException; Save a resource within the project. Parameters:; name - ; resource - ; Throws:; IOException. remove; boolean remove(String name); throws IOException; Remove a resource within the project. Parameters:; name - ; Returns:; true if a resource was successfully removed, false otherwise; Throws:; IOException. contains; default boolean contains(String name); throws IOException; Returns true if the manager knows a resource with the specified name exists. Parameters:; name - the name to check; Returns:; tru",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/projects/ResourceManager.Manager.html:1175,avail,available,1175,javadoc/docs/qupath/lib/projects/ResourceManager.Manager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/ResourceManager.Manager.html,1,['avail'],['available']
Availability,". ObjectDescriptionPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class ObjectDescriptionPane<T>. java.lang.Object; qupath.lib.gui.panes.ObjectDescriptionPane<T>. Type Parameters:; T - generic parameter for ImageData. public class ObjectDescriptionPane<T>; extends Object; Wraps a pane used to display an object description, if one is available. Since:; v0.4.0; Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static <T> Pane; createPane(ObservableValue<ImageData<T>> imageData);  ; static <T> Pane; createPane(ObservableValue<ImageData<T>> imageData,; boolean includeCell);  ; static <T> Stage; createWindow(QuPathGUI qupath);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createPane; public static <T> Pane createPane(ObservableValue<ImageData<T>> imageData). createPane; public static <T> Pane createPane(ObservableValue<ImageData<T>> imageData,; boolean includeCell). createWindow; public static <T> Stage createWindow(QuPathGUI qupath). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ObjectDescriptionPane.html:635,avail,available,635,javadoc/docs/qupath/lib/gui/panes/ObjectDescriptionPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ObjectDescriptionPane.html,1,['avail'],['available']
Availability,". OutputHandler (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Interface OutputHandler<S,T,U>. Type Parameters:; S - the type of image; T - the type of mask; U - the type of output. All Known Implementing Classes:; OutputHandler.ObjectOutputHandler. Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public interface OutputHandler<S,T,U>; A functional interface for handling the output of a Processor.; ; This may (for example) add measurements to the parent object, set the classification, or create child objects. Nested Class Summary; Nested Classes. Modifier and Type; Interface; Description; static class ; OutputHandler.ObjectOutputHandler<S,T,U>;  ; static interface ; OutputHandler.OutputToObjectConverter<S,T,U>;  . Method Summary. All MethodsStatic MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default OutputHandler<S,T,U>; andThen(OutputHandler<S,T,U> after). Append a second output handler to this one. static <S,; T,; U> OutputHandler<S,T,U>; consumeOutput(). Create a basic do-nothing output handler that consumes the output with no changes. static <S,; T,; U> OutputHandler<S,T,U>; createMaskAndSplitObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter). Create an output handler that can be used to add objects to the parent object, applying the ROI mask and; splitting objects with discontinuous ROIs. static <S,; T,; U> OutputHandler<S,T,U>; createObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter). Create an output handler that can be used to add objects t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html:457,mask,mask,457,javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html,1,['mask'],['mask']
Availability,". OutputHandler.OutputToObjectConverter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Interface OutputHandler.OutputToObjectConverter<S,T,U>. Enclosing interface:; OutputHandler<S,T,U>. Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public static interface OutputHandler.OutputToObjectConverter<S,T,U>. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; List<PathObject>; convertToObjects(Parameters<S,T> params,; U output). Convert the output of a pixel processor to a list of PathObjects. Method Details. convertToObjects; List<PathObject> convertToObjects(Parameters<S,T> params,; U output); Convert the output of a pixel processor to a list of PathObjects. Parameters:; params - the processing parameters; output - the output of the processor; Returns:; a list of objects, or null if the output is incompatible with this conversion.; Note that an empty list is not the same as null; an empty list indicates that; no objects were detected, whereas null indicates that the output is incompatible; and therefore should be passed to another output handler, if available. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.OutputToObjectConverter.html:1541,avail,available,1541,javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.OutputToObjectConverter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.OutputToObjectConverter.html,1,['avail'],['available']
Availability,". Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class PathROIObject. java.lang.Object; qupath.lib.objects.PathObject; qupath.lib.objects.PathROIObject. All Implemented Interfaces:; Externalizable, Serializable. Direct Known Subclasses:; PathAnnotationObject, PathDetectionObject, TMACoreObject. public abstract class PathROIObject; extends PathObject; Abstract class used for PathObjects that have ROIs associated with them.; ; In practice, this is almost all PathObjects (with the notable exception of PathRootObjects). Author:; Pete Bankhead; See Also:. Serialized Form. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; double; getClassProbability(). Request the classification probability, or Double.NaN if no probability is available. PathClass; getPathClass(). Get the classification of the object. ROI; getROI(). Get the region of interest (ROI) for the object. boolean; isEditable(). Deprecated.; since v0.4.0. boolean; isLocked(). Query the locked status for the object, indicating whether it should be editable or not. void; readExternal(ObjectInput in);  ; void; setLocked(boolean locked). Set locked flag, indicating that the object ROI should not be modified. void; setPathClass(PathClass pathClass,; double classProbability). Set the classification of the object, specifying a classification probability. void; setROI(ROI roi). Set the ROI for this object. void; writeExternal(ObjectOutput out);  . Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, createEmptyMeasurementList, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, g",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathROIObject.html:1106,avail,available,1106,javadoc/docs/qupath/lib/objects/PathROIObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathROIObject.html,1,['avail'],['available']
Availability,". Parameters (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class Parameters<S,T>. java.lang.Object; qupath.lib.experimental.pixels.Parameters<S,T>. Type Parameters:; S - the image type; T - the mask type. public class Parameters<S,T>; extends Object; Parameters for use with a PixelProcessor. Since:; v0.5.0. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Parameters.Builder<S,T>. Builder class for Parameters. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static <S,; T> Parameters.Builder<S,T>; builder(). Create a new builder for parameters. S; getImage(). Get the image to process. ImageData<BufferedImage>; getImageData(). Get the image data. T; getMask(). Get the mask associated with the main ROI or the parent object, or null if no mask is available. T; getMask(ROI roi). Get the mask associated with any ROI, or null if no mask is available. PathObject; getParent(). Get the parent object. PathObject; getParentOrProxy(). Get the parent, or a proxy parent if one has been specified. RegionRequest; getRegionRequest(). Get the region request. ImageServer<BufferedImage>; getServer(). Get the server. TileRequest; getTileRequest(). Get the tile request, if available. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getImageData; public ImageData<BufferedImage> getImageData(); Get the image data. Returns:. getServer; public ImageServer<BufferedImage> getServer(); Get the server. This is often the accessed from getImageData(), but in some cases it may be different",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html:500,mask,mask,500,javadoc/docs/qupath/lib/experimental/pixels/Parameters.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html,1,['mask'],['mask']
Availability,". Parameters.Builder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class Parameters.Builder<S,T>. java.lang.Object; qupath.lib.experimental.pixels.Parameters.Builder<S,T>. Type Parameters:; S - the image type; T - the mask type. Enclosing class:; Parameters<S,T>. public static class Parameters.Builder<S,T>; extends Object; Builder class for Parameters. Constructor Summary; Constructors. Constructor; Description; Builder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Parameters<S,T>; build(). Build the parameters. Parameters.Builder<S,T>; imageData(ImageData<BufferedImage> imageData). Set the image data. Parameters.Builder<S,T>; imageFunction(ImageSupplier<S> function). Function used ot lazily read the image. Parameters.Builder<S,T>; maskFunction(MaskSupplier<S,T> function). Function used to lazily create a mask corresponding to the image for a specified ROI. Parameters.Builder<S,T>; parent(PathObject parent). Set the parent object. Parameters.Builder<S,T>; parentProxy(PathObject parentProxy). Optionally set a temporary object to use as a parent. Parameters.Builder<S,T>; region(RegionRequest region). Specify the region to use for processing. Parameters.Builder<S,T>; server(ImageServer<BufferedImage> server). Set the server. Parameters.Builder<S,T>; tile(TileRequest tile). Specify the tile relevant for processing. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(). Method Details. imageData; public Parameters.Builder<S,T> imageData(ImageData<BufferedImage> imageData); Set the i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.Builder.html:524,mask,mask,524,javadoc/docs/qupath/lib/experimental/pixels/Parameters.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.Builder.html,1,['mask'],['mask']
Availability,". Parameters:; delimiter - delimiter to use between elements of the report, e.g. "", "" or ""\n""; Returns:; See Also:. trackedMemory(); physicalMemory(). findMaxima; public static Collection<OpenCVTools.IndexedPixel> findMaxima(Mat mat,; Mat mask); Find maxima within an image. Parameters:; mat - image containing maxima; must be 2D and single-channel; mask - optional mask; Returns:. getMaskedPixels; public static List<OpenCVTools.IndexedPixel> getMaskedPixels(Mat mat,; Mat mask); Extract all the masked pixels within an image. Parameters:; mat - input image; must be single-channel; mask - mask of the same size as mat; Returns:; list of pixels, including their indices and values. extractMaskedFloats; public static float[] extractMaskedFloats(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pixels should be extracted; mask - the mask to apply to the input; channel - the channel index (zero-based) to consider; Returns:; a float array containing the values of the input filtered by the mask; Throws:; IllegalArgumentException - when the input and the mask don't have the same dimensions. extractMaskedDoubles; public static double[] extractMaskedDoubles(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pixels should be extracted; mask - the mask to apply to the input; channel - the channel index (zero-based) to con",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:44395,mask,mask,44395,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html,1,['mask'],['mask']
Availability,". Parameters:; level - ; Returns:. getLevel; public ImageServerMetadata.ImageResolutionLevel getLevel(int level); Get resolution information for a specified pyramidal level. Parameters:; level - ; Returns:. isRGB; public boolean isRGB(); Returns true if the pixels are stored in (A)RGB form. Returns:. getPixelType; public PixelType getPixelType(); Returns the bit-depth for individual pixels in the image. Returns:. getMinValue; public Number getMinValue(); Get the minimum value supported by this image.; By default, this is the lower bound of the PixelType unless otherwise specified. Returns:; See Also:. getPixelType(). getMaxValue; public Number getMaxValue(); Get the minimum value supported by this image.; By default, this is the lower bound of the PixelType unless otherwise specified.; This purpose of this method is to support other effective bit-depths (e.g. 12-bit, 14-bit). Returns:; See Also:. getPixelType(). pixelSizeCalibrated; public boolean pixelSizeCalibrated(); Returns true if pixel width and height calibration information is available for the image. Returns:. zSpacingCalibrated; public boolean zSpacingCalibrated(); Returns true if z-spacing calibration information is available for the image. Returns:. getAveragedPixelSize; public double getAveragedPixelSize(); Get the averaged pixel size in microns, if available - or Double.NaN otherwise. Returns:. getPixelWidthMicrons; public double getPixelWidthMicrons(); Get the pixel width in microns, if available - or Double.NaN otherwise. Returns:. getPixelHeightMicrons; public double getPixelHeightMicrons(); Get the pixel height in microns, if available - or Double.NaN otherwise. Returns:. getZSpacingMicrons; public double getZSpacingMicrons(); Get the z-spacing in microns, if available - or Double.NaN otherwise. Returns:. getTimeUnit; public TimeUnit getTimeUnit(); Get the time unit for a time series. Returns:. getTimepoint; public double getTimepoint(int ind); Get the time point, defined in getTimeUnit(), or Doubl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html:6995,avail,available,6995,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html,1,['avail'],['available']
Availability,". Parameters:; net - ; inputShape - ; Returns:. parseLayers; public static List<DnnTools.DNNLayer> parseLayers(Net net,; int width,; int height,; int channels,; int batchSize); Parse the layers for a Net, which allows inspection of names and sizes. Parameters:; net - the Net to parse; width - input width; height - input height; channels - input channels; batchSize - input batch size; Returns:. parseStrings; public static List<String> parseStrings(StringVector vector); Extract Strings from a StringVector. Parameters:; vector - ; Returns:. parseShape; public static List<DnnShape> parseShape(MatShapeVector vector); Extract Mat dimensions from a MatShapeVector. Parameters:; vector - ; Returns:. summarize; public static String summarize(Net net,; int width,; int height,; int nChannels); throws IOException; Create a (multiline) summary String for a Net, given the specified image input dimensions. Parameters:; net - the Net to summarize; width - input width; height - input height; nChannels - input channel count; Returns:; Throws:; IOException - if an error occurs when loading the model. readPatch; public static Mat readPatch(ImageServer<BufferedImage> server,; ROI roi,; double downsample,; int width,; int height); throws IOException; Read an image patch, optionally with a fixed size and using zero-padding if required.; If the patch width and height are specified, these relate to the output (downsampled) image; and are centered on the ROI centroid. Otherwise the ROI bounds are used. Parameters:; server - the image server; roi - the ROI for which the patch should be extracted; downsample - the downsample value; width - the patch width, or -1 if the ROI bounds should be used; height - the patch height, or -1 if the ROI bounds should be used; Returns:; Throws:; IOException; See Also:. readPatch(ImageServer, ROI, double, int, int, int). readPatch; public static Mat readPatch(ImageServer<BufferedImage> server,; ROI roi,; double downsample,; int width,; int height,; int borderPa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html:7814,error,error,7814,javadoc/docs/qupath/opencv/dnn/DnnTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html,1,['error'],['error']
Availability,". Parameters:; path - ; downsample - ; rois - ; Returns:; Throws:; IllegalArgumentException - if the ROIs do not all fall on the same ImagePlane. createInstance; public static RegionRequest createInstance(String path,; RegionRequest request); Create a request that matches another request but with a different path. Parameters:; path - ; request - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; ImageRegion region); Create a request corresponding to a specified ImageRegion.; This may also be used to construct a request based on an existing request, but changing either the path or downsample. Parameters:; path - ; downsample - ; region - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; int x,; int y,; int width,; int height,; int z,; int t); Create a request for a region specified in terms of its bounding box, z-slice and time point. Parameters:; path - ; downsample - ; x - ; y - ; width - ; height - ; z - ; t - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; int x,; int y,; int width,; int height,; ImagePlane plane); Create a request for a region specified in terms of its bounding box and ImagePlane. Parameters:; path - ; downsample - ; x - ; y - ; width - ; height - ; plane - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; int x,; int y,; int width,; int height); Create a request for a region specified in terms of its bounding box, using the first z-slice and time point. Parameters:; path - ; downsample - ; x - ; y - ; width - ; height - ; Returns:. overlapsRequest; public boolean overlapsRequest(RegionRequest request); Returns true if the region specified by this request overlaps with that of another request.; The test includes insuring that they refer to the same image by checking the paths are the same. Parameters:; request - ; Returns:. getP",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html:7059,down,downsample,7059,javadoc/docs/qupath/lib/regions/RegionRequest.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html,1,['down'],['downsample']
Availability,". PathImage (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images; Interface PathImage<T>. Type Parameters:; T - . public interface PathImage<T>; Interface used when needing to associate pixel data with information regarding the image from which it was obtained.; ; The generic parameter defines the type of the image (e.g. BufferedImage, ImagePlus, Mat...). Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; double; getDownsampleFactor(). Get the downsample factor originally used when obtaining the image from an ImageServer; will be 1 if the image is full-resolution. T; getImage(). Get the pixel data (image). ImageRegion; getImageRegion(). The region within the (original, possibly larger) image that this particular image corresponds to. PixelCalibration; getPixelCalibration(). Get the PixelCalibration representing actual pixel sizes in this image, with downsampling applied if necessary. Method Details. getImage; T getImage(); Get the pixel data (image). Returns:. getDownsampleFactor; double getDownsampleFactor(); Get the downsample factor originally used when obtaining the image from an ImageServer; will be 1 if the image is full-resolution. Returns:. getPixelCalibration; PixelCalibration getPixelCalibration(); Get the PixelCalibration representing actual pixel sizes in this image, with downsampling applied if necessary. Returns:. getImageRegion; ImageRegion getImageRegion(); The region within the (original, possibly larger) image that this particular image corresponds to. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/PathImage.html:807,down,downsample,807,javadoc/docs/qupath/lib/images/PathImage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/PathImage.html,4,['down'],"['downsample', 'downsampling']"
Availability,". PathObjectPainter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer; Class PathObjectPainter. java.lang.Object; qupath.lib.gui.viewer.PathObjectPainter. public class PathObjectPainter; extends Object; Static methods to assist with painting PathObjects. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Stroke; getCachedStroke(double thickness). Get a BasicStroke with the specified thickness. static void; paintConnections(PathObjectConnections connections,; PathObjectHierarchy hierarchy,; Graphics2D g2d,; Color color,; double downsampleFactor,; ImagePlane plane). Paint connections between objects (e.g. static void; paintHandles(List<Point2> handles,; Graphics2D g2d,; double minHandleSize,; double maxHandleSize,; Color colorStroke,; Color colorFill). Paint the handles onto a Graphics object, if we have a suitable (non-point) ROI. static void; paintHandles(RoiEditor roiEditor,; Graphics2D g2d,; double minHandleSize,; double maxHandleSize,; Color colorStroke,; Color colorFill). Paint the handles onto a Graphics object, if we have a suitable (non-point) ROI. static boolean; paintObject(PathObject pathObject,; Graphics2D g,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample). Paint an object (or, more precisely, its ROI). static void; paintShape(Shape shape,; Graphics2D g2d,; Color colorStroke,; Stroke stroke,; Color colorFill). Paint the specified shape with specified stroke and fill colors. static void; paintSpecifiedObjects(Graphics2D g2d,; Collection<? extends PathObject> pathObjects,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; dou",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html:904,down,downsampleFactor,904,javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html,1,['down'],['downsampleFactor']
Availability,". PathObjectReader (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Interface PathObjectReader. All Known Implementing Classes:; ChannelDisplayTransformServer, ImageJServer. public interface PathObjectReader; Interface for classes capable of reading PathObjects from some source.; This may be used in conjunction with an ImageServer to indicate that the server can read objects ; as well as pixels from its source. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; Collection<PathObject>; readPathObjects(). Read a collection of objects from the source. Method Details. readPathObjects; Collection<PathObject> readPathObjects(); throws IOException; Read a collection of objects from the source. Returns:; a collection of objects, or empty list if no objects are available.; Throws:; IOException. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectReader.html:1128,avail,available,1128,javadoc/docs/qupath/lib/objects/PathObjectReader.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectReader.html,1,['avail'],['available']
Availability,". PixelClassifierPane (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ml; Class PixelClassifierPane. java.lang.Object; qupath.process.gui.commands.ml.PixelClassifierPane. public class PixelClassifierPane; extends Object; Main user interface for interactively training a PixelClassifier. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; PixelClassifierPane(QuPathGUI qupath). Constructor. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; installDefaultFeatureClassificationBuilder(qupath.process.gui.commands.ml.ImageDataTransformerBuilder builder). Add to the list of default feature calculator builders that will be available when ; this pane is opened. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifierPane; public PixelClassifierPane(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPathGUI that will be used for interactive training. Method Details. installDefaultFeatureClassificationBuilder; public static boolean installDefaultFeatureClassificationBuilder(qupath.process.gui.commands.ml.ImageDataTransformerBuilder builder); Add to the list of default feature calculator builders that will be available when ; this pane is opened.; ; This provides a mechanism to install additional feature calculators.; ; Note that the builder will only be added if it is not already present. Parameters:; builder - the builder to be installed; Returns:; true if the builder was added, false otherwise. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierPane.html:1019,avail,available,1019,javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierPane.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierPane.html,2,['avail'],['available']
Availability,". PixelProcessor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class PixelProcessor<S,T,U>. java.lang.Object; qupath.lib.experimental.pixels.PixelProcessor<S,T,U>. Type Parameters:; S - The type of image to process; T - The type of mask to use; often the same as S; U - The type of output to generate. public class PixelProcessor<S,T,U>; extends Object; A class for tiled image processing.; ; The aim of this class is to make it easy to write pixel-based processing algorithms using a variety; of different image representations, and also to run these in parallel.; . There are four main components:; ; An ImageSupplier that provides the image data; A MaskSupplier that can generate binary masks that correspond to the image; A Processor that processes the image data; An OutputHandler that handles the output of the Processor. The idea is that the Processor is the only component that needs to be written for a specific task...; and it is usually the fun bit to work on.; ; The other components are often very tedious to write and hard to get working correctly; also, there is much; overlap in the functionality required for different tasks.; For these reasons, we provide several default implementations here, written to support different image; representations.; . Since:; v0.5.0. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; PixelProcessor.Builder<S,T,U>. Builder class for a PixelProcessor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static <S,; T,; U> PixelProcessor.Builder<S,T,U>; builder(). Create a new builder to construct a PixelProcessor. void; processObjects(Ima",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.html:538,mask,mask,538,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.html,1,['mask'],['mask']
Availability,". PixelProcessor.Builder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class PixelProcessor.Builder<S,T,U>. java.lang.Object; qupath.lib.experimental.pixels.PixelProcessor.Builder<S,T,U>. Type Parameters:; S - the image type; T - the mask type; U - the output type. Enclosing class:; PixelProcessor<S,T,U>. public static class PixelProcessor.Builder<S,T,U>; extends Object; Builder class for a PixelProcessor. Constructor Summary; Constructors. Constructor; Description; Builder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; PixelProcessor<S,T,U>; build(). Build a PixelProcessor from the current state of the builder. PixelProcessor.Builder<S,T,U>; downsample(double downsample). Set the downsample factor to use with requesting image regions. PixelProcessor.Builder<S,T,U>; imageSupplier(ImageSupplier<S> imageSupplier). Set the image supplier. PixelProcessor.Builder<S,T,U>; maskSupplier(MaskSupplier<S,T> maskSupplier). Set the mask supplier. PixelProcessor.Builder<S,T,U>; merger(ObjectMerger merger). Set a merger to use. PixelProcessor.Builder<S,T,U>; mergeSharedBoundaries(double threshold). Convenience method to set a merger that merges objects based on their shared boundary. PixelProcessor.Builder<S,T,U>; outputHandler(OutputHandler<S,T,U> outputHandler). Set the output handler. PixelProcessor.Builder<S,T,U>; padding(int size). Set the padding to use when extracting regions, using a symmetric padding. PixelProcessor.Builder<S,T,U>; padding(Padding padding). Set the padding to use when extracting regions. PixelProcessor.Builder<S,T,U>; pixelSize(double pixelSize). Set the requested pixel size to use with requesting",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html:540,mask,mask,540,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,1,['mask'],['mask']
Availability,". PositivePixelCounterIJ (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.detect.tissue; Class PositivePixelCounterIJ. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.plugins.AbstractDetectionPlugin<BufferedImage>; qupath.imagej.detect.tissue.PositivePixelCounterIJ. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class PositivePixelCounterIJ; extends AbstractDetectionPlugin<BufferedImage>; Simple command to detect regions with positive staining.; ; For versions <= v0.1.2 this gave simple measurements that were influenced by the downsample values used.; Later versions make calibrated measurements and give more flexibility in terms of output. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; PositivePixelCounterIJ();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. Metho",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html:964,down,downsample,964,javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/PositivePixelCounterIJ.html,1,['down'],['downsample']
Availability,". PreferencePane.LocalePreferences (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.LocalePreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.LocalePreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.Locale""); public static class PreferencePane.LocalePreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final ObjectProperty<Locale>; localeDefault;  ; final ObjectProperty<Locale>; localeDisplay;  ; final ObjectProperty<Locale>; localeFormat;  . Constructor Summary; Constructors. Constructor; Description; LocalePreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. localeDefault; @LocalePref(value=""Prefs.Locale.default"",; availableLanguagesOnly=true); public final ObjectProperty<Locale> localeDefault. localeDisplay; @LocalePref(value=""Prefs.Locale.display"",; availableLanguagesOnly=true); public final ObjectProperty<Locale> localeDisplay. localeFormat; @LocalePref(""Prefs.Locale.format""); public final ObjectProperty<Locale> localeFormat. Constructor Details. LocalePreferences; public LocalePreferences(). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.LocalePreferences.html:1143,avail,availableLanguagesOnly,1143,javadoc/docs/qupath/lib/gui/panes/PreferencePane.LocalePreferences.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.LocalePreferences.html,2,['avail'],['availableLanguagesOnly']
Availability,". Processor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Interface Processor<S,T,U>. Type Parameters:; S - ; T - ; U - . Functional Interface:; This is a functional interface and can therefore be used as the assignment target for a lambda expression or method reference. @FunctionalInterface; public interface Processor<S,T,U>; A generic processor designed to work with Parameters and provide an output.; ; The intended use is to apply a local image processing task, such as thresholding, to a region of an image; corresponding to an object. Since:; v0.5.0. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; U; process(Parameters<S,T> params). Processing method. Method Details. process; U process(Parameters<S,T> params); throws IOException; Processing method. Parameters:; params - the parameters; these can be queried to access the parent object, image data, masks etc.; Returns:; the output; Throws:; IOException - if there is a problem reading the image; See Also:. OutputHandler; ImageSupplier; MaskSupplier. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Processor.html:1220,mask,masks,1220,javadoc/docs/qupath/lib/experimental/pixels/Processor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Processor.html,1,['mask'],['masks']
Availability,". ProjectDialogs (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.dialogs; Class ProjectDialogs. java.lang.Object; qupath.lib.gui.dialogs.ProjectDialogs. public class ProjectDialogs; extends Object; Dialogs specifically related to managing projects. Constructor Summary; Constructors. Constructor; Description; ProjectDialogs();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static org.controlsfx.control.ListSelectionView<ProjectImageEntry<BufferedImage>>; createImageChoicePane(QuPathGUI qupath,; List<ProjectImageEntry<BufferedImage>> availableImages,; List<ProjectImageEntry<BufferedImage>> selectedImages,; String openImageWarning). Populates a given ListSelectionView with all the project entries. static Collection<ProjectImageEntry<BufferedImage>>; getCurrentImages(QuPathGUI qupath). Get the ProjectImageEntry for each of the current images open in QuPath, if available. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProjectDialogs; public ProjectDialogs(). Method Details. createImageChoicePane; public static org.controlsfx.control.ListSelectionView<ProjectImageEntry<BufferedImage>> createImageChoicePane(QuPathGUI qupath,; List<ProjectImageEntry<BufferedImage>> availableImages,; List<ProjectImageEntry<BufferedImage>> selectedImages,; String openImageWarning); Populates a given ListSelectionView with all the project entries. Parameters:; qupath - variable used to understand which image(s) is/are opened in viewer(s).; availableImages - all available images; selectedImages - set some images to be selected initially (optional; c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/ProjectDialogs.html:880,avail,availableImages,880,javadoc/docs/qupath/lib/gui/dialogs/ProjectDialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/ProjectDialogs.html,1,['avail'],['availableImages']
Availability,. QuPathStyleManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.prefs; Class QuPathStyleManager. java.lang.Object; qupath.lib.gui.prefs.QuPathStyleManager. public class QuPathStyleManager; extends Object; Class to facilitate the use of different styles within QuPath.; ; These register themselves with PathPrefs so that they can be persistent across restarts. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; static ObservableList<QuPathStyleManager.Fonts>; availableFonts. Get a list of available fonts. static ObservableList<QuPathStyleManager.StyleOption>; availableStyles. Get the current available styles as an observable list. static ObjectProperty<QuPathStyleManager.Fonts>; font. Get the current selected font. static ObjectProperty<QuPathStyleManager.StyleOption>; selectedStyle. Get the current selected style. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; QuPathStyleManager.Fonts. Available font families. static interface ; QuPathStyleManager.StyleOption. Interface defining a style that may be applied to QuPath. Constructor Summary; Constructors. Constructor; Description; QuPathStyleManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObservableList<QuPathStyleManager.Fonts>; availableFontsProperty(). Get a list of available fonts. static ObservableList<QuPathStyleManager.StyleOption>; availableStylesProperty(). Get the current available styles as an observable list. static ObjectProperty<QuPathStyleManager.Fonts>; fontProperty(). Get the current selected font. static boolean; installStyles(Collection<File> list). Handle installing CSS fi,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html:784,avail,availableFonts,784,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,4,['avail'],"['available', 'availableFonts', 'availableStyles']"
Availability,". RegionRequest (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.regions; Class RegionRequest. java.lang.Object; qupath.lib.regions.ImageRegion; qupath.lib.regions.RegionRequest. public class RegionRequest; extends ImageRegion; Class for defining an image region that can also be used to request these region from an ImageServer.; ; In addition to the information contained within an ImageRegion, also contains the path to the image; (and optionally an additional image name stored within it) and a downsample value. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static List<RegionRequest>; createAllRequests(ImageServer<?> server,; double downsample). Create requests for the full width and height of an ImageServer, for all planes (z-slices and time points). static RegionRequest; createInstance(String path,; double downsample,; int x,; int y,; int width,; int height). Create a request for a region specified in terms of its bounding box, using the first z-slice and time point. static RegionRequest; createInstance(String path,; double downsample,; int x,; int y,; int width,; int height,; int z,; int t). Create a request for a region specified in terms of its bounding box, z-slice and time point. static RegionRequest; createInstance(String path,; double downsample,; int x,; int y,; int width,; int height,; ImagePlane plane). Create a request for a region specified in terms of its bounding box and ImagePlane. static RegionRequest; createInstance(String path,; double downsample,; Collection<? extends ROI> rois). Create a request that contains the pixels of the specified ROIs. static RegionRequest; createInstance",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html:781,down,downsample,781,javadoc/docs/qupath/lib/regions/RegionRequest.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html,2,['down'],['downsample']
Availability,". Representation of a color deconvolution stain vector, defined in terms of RGB optical densities. StainVector() - Constructor for class qupath.lib.color.StainVector. Default constructor, required for Externalizable interface. StainVector.DefaultStains - Enum Class in qupath.lib.color. Enum representing default stains. standardizeClassifications(Collection<PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Standardize the classifications for a collection of objects. standardizeClassifications(Collection<PathObject>, Comparator<String>) - Static method in class qupath.lib.objects.PathObjectTools. Standardize the classifications for a collection of objects. StandardPathClasses() - Constructor for class qupath.lib.objects.classes.PathClass.StandardPathClasses;  ; start() - Method in class qupath.lib.common.Timeit. Start the Timeit and create a checkpoint with the default name. start(String) - Method in class qupath.lib.common.Timeit. Start the Timeit and create a checkpoint with the specified name. start(Stage) - Method in class qupath.lib.gui.QuPathApp;  ; start(Stage) - Method in class qupath.lib.gui.tma.QuPathTMAViewer;  ; startMonitoring(String, int, boolean) - Method in class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; startMonitoring(String, int, boolean) - Method in interface qupath.lib.plugins.SimpleProgressMonitor. Set the plugin to monitor, and begin monitoring. startMoving(double, double, boolean) - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler.ViewerMover. Start moving, with initial velocity given by dx and dy. startTranslation(double, double, boolean) - Method in class qupath.lib.roi.RoiEditor. Returns true if the current ROI is translatable, and at the end of this call the translation has started. startupMessage - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; startupScriptPath - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferen",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:995628,checkpoint,checkpoint,995628,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['checkpoint'],['checkpoint']
Availability,". RunningStatistics (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.stats; Class RunningStatistics. java.lang.Object; qupath.lib.analysis.stats.RunningStatistics. public class RunningStatistics; extends Object; Helper class for computing basic statistics from values as they are added.; ; This is useful e.g. when iterating through pixels, computing statistics from masked/labelled values.; ; Warning! This maintains a sum as a double - for many pixels and/or 16-bit data this may lead to imprecision ; (although for small regions, and especially optical densities having low values, it should be fine).; ; A warning is logged for particularly large values. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; protected long; size;  . Constructor Summary; Constructors. Constructor; Description; RunningStatistics(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addValue(double val). Add another value; NaN values are counted but do not contribute to the statistics. double; getMax(). Get the maximum non-NaN value added. double; getMean(). Get the mean of all non-NaN values that were added. double; getMin(). Get the minimum non-NaN value added. long; getNumNaNs(). Get count of the number of NaN values added. double; getRange(). Get the range, i.e. double; getStdDev(). Get the standard deviation of all non-NaN values that were added. double; getSum(). Get the sum of all non-NaN values that were added. double; getVariance(). Get the variance of all non-NaN values that were added. long; size(). Get count of the number of non-NaN values added. String; toString();  . Methods inherited ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/RunningStatistics.html:658,mask,masked,658,javadoc/docs/qupath/lib/analysis/stats/RunningStatistics.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/RunningStatistics.html,1,['mask'],['masked']
Availability,". ScriptLanguageProvider (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.languages; Class ScriptLanguageProvider. java.lang.Object; qupath.lib.gui.scripting.languages.ScriptLanguageProvider. public class ScriptLanguageProvider; extends Object; Class with static methods to fetch all the available ScriptLanguages. Since:; v0.4.0; Author:; Melvin Gelbard, Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ScriptLanguageProvider();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ScriptLanguage; fromString(String languageString). Get the ScriptLanguage object corresponding to the specified String. static Collection<ScriptLanguage>; getAvailableLanguages(). Get the available script languages. static ScriptEngine; getEngineByName(String languageName). Get the ScriptEngine based on its name. static ScriptLanguage; getLanguageFromExtension(String ext). Return the first ScriptLanguage compatible with the specified extension (can be runnable or not). static ScriptLanguage; getLanguageFromName(String name). Given a file name, determine the associated language - or null if no suitable (supported) language can be found. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ScriptLanguageProvider; public ScriptLanguageProvider(). Method Details. getAvailableLanguages; public static Collection<ScriptLanguage> getAvailableLanguages(); Get the available script languages. Returns:. getLanguageFromName; public static ScriptLanguage getLanguageFromName(String name); Given a file name, determine the associate",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/ScriptLanguageProvider.html:584,avail,available,584,javadoc/docs/qupath/lib/gui/scripting/languages/ScriptLanguageProvider.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/ScriptLanguageProvider.html,1,['avail'],['available']
Availability,. ScriptParameters.Builder - Class in qupath.lib.scripting. Builder class for ScriptParameters. scriptRunning() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor. Observable value indicating whether a script is currently running or not. scriptsDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Read only property representing the shared scripts directory. scriptsPath - Variable in class qupath.lib.gui.panes.PreferencePane.ExtensionPreferences;  ; scriptsPath - Variable in class qupath.lib.gui.panes.PreferencePane.ScriptingPreferences;  ; scriptsPathProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Path to a directory containing scripts for quick-access through the user interface. ScriptStyler - Interface in qupath.lib.gui.scripting.richtextfx.stylers. Interface for classes that apply some styling to a RichTextFX's CodeArea. ScriptStylerProvider - Class in qupath.lib.gui.scripting.richtextfx.stylers. Class with static methods to fetch all the available ScriptStylers. ScriptStylerProvider() - Constructor for class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider;  ; ScriptSyntax - Interface in qupath.lib.gui.scripting.syntax. Interface for classes that apply some syntax formatting to an EditableText. ScriptSyntaxProvider - Class in qupath.lib.gui.scripting.syntax. Class with static methods to fetch all the available ScriptSyntaxes. ScriptSyntaxProvider() - Constructor for class qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider;  ; ScriptTab - Class in qupath.lib.gui.scripting. Class representing a script tab (e.g. scrollSpeed - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; scrollSpeedProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Percentage to scale scroll speed for zooming etc. searchDepth(int) - Method in class qupath.lib.io.UriUpdater. Maximum search depth when using UriUpdater.searchDepth(int) to match filenames in directories and subdirector,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:890098,avail,available,890098,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,". ScriptStylerProvider (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.richtextfx.stylers; Class ScriptStylerProvider. java.lang.Object; qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. public class ScriptStylerProvider; extends Object; Class with static methods to fetch all the available ScriptStylers. Since:; v0.4.0; Author:; Melvin Gelbard. Field Summary; Fields. Modifier and Type; Field; Description; static final ScriptStyler; GROOVY. Styler for Groovy. static final ScriptStyler; JAVA. Styler for Java. static final ScriptStyler; JSON. Styler for JSON. static final ScriptStyler; MARKDOWN. Styler for markdown. static final ScriptStyler; PLAIN. Plain styler (no highlighting). static final ScriptStyler; PROPERTIES. Styler for Java properties files. static final ScriptStyler; PYTHON. Styler for Python. static final ScriptStyler; XML. Styler for XML. static final ScriptStyler; YAML. Styler for YAML. Constructor Summary; Constructors. Constructor; Description; ScriptStylerProvider();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static org.fxmisc.richtext.model.StyleSpans<Collection<String>>; getLogStyling(String text). Get styling for use with a logger. static org.fxmisc.richtext.model.StyleSpans<Collection<String>>; getPlainStyling(String text). Get simple styling that does not apply any classes. static ScriptStyler; getStylerFromLanguage(ScriptLanguage language). Get the ScriptStyler object corresponding to the specified ScriptLanguage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. PLAIN; public st",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/ScriptStylerProvider.html:594,avail,available,594,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/ScriptStylerProvider.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/ScriptStylerProvider.html,1,['avail'],['available']
Availability,". ScriptSyntaxProvider (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.syntax; Class ScriptSyntaxProvider. java.lang.Object; qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider. public class ScriptSyntaxProvider; extends Object; Class with static methods to fetch all the available ScriptSyntaxes. Since:; v0.4.0; Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final ScriptSyntax; GROOVY;  ; static final ScriptSyntax; JSON;  ; static final ScriptSyntax; PLAIN;  ; static final ScriptSyntax; PROPERTIES;  ; static final ScriptSyntax; PYTHON;  ; static final ScriptSyntax; XML;  ; static final ScriptSyntax; YAML;  . Constructor Summary; Constructors. Constructor; Description; ScriptSyntaxProvider();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static Collection<ScriptSyntax>; getAvailableSyntaxes(). Get the available script syntaxes. static ScriptSyntax; getSyntaxFromName(String name). Get a script syntax from a specified language name. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. GROOVY; public static final ScriptSyntax GROOVY. XML; public static final ScriptSyntax XML. YAML; public static final ScriptSyntax YAML. JSON; public static final ScriptSyntax JSON. PLAIN; public static final ScriptSyntax PLAIN. PROPERTIES; public static final ScriptSyntax PROPERTIES. PYTHON; public static final ScriptSyntax PYTHON. Constructor Details. ScriptSyntaxProvider; public ScriptSyntaxProvider(). Method Details. getAvailableSyntaxes; public static Collection<ScriptSyntax> getAvailableSynta",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/syntax/ScriptSyntaxProvider.html:570,avail,available,570,javadoc/docs/qupath/lib/gui/scripting/syntax/ScriptSyntaxProvider.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/syntax/ScriptSyntaxProvider.html,1,['avail'],['available']
Availability,". SimpleTissueDetection2 (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.detect.tissue; Class SimpleTissueDetection2. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.plugins.AbstractDetectionPlugin<BufferedImage>; qupath.imagej.detect.tissue.SimpleTissueDetection2. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class SimpleTissueDetection2; extends AbstractDetectionPlugin<BufferedImage>; Very basic global thresholding command to identify tissue regions.; ; Uses fixed approach to downsampling images & global threshold applied to RGB images only.; ; TODO: Provide choice of channels to threshold; TODO: Support 16-bit data. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; SimpleTissueDetection2(). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected void; addRunnableTasks(ImageData<BufferedImage> imageData,; PathObject parentObject,; List<Runnable> tasks). For a specified parent object, generate a task to run. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected Collection<? extends PathObject>; getParentObjects(ImageData<BufferedImage> imageData). Get all selec",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html:916,down,downsampling,916,javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/tissue/SimpleTissueDetection2.html,1,['down'],['downsampling']
Availability,". SparseImageServer.Builder (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class SparseImageServer.Builder. java.lang.Object; qupath.lib.images.servers.SparseImageServer.Builder. Enclosing class:; SparseImageServer. public static class SparseImageServer.Builder; extends Object; Builder to create a new SparseImageServer. Constructor Summary; Constructors. Constructor; Description; Builder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; SparseImageServer; build(). Build a new SparseImageServer. SparseImageServer.Builder; jsonRegion(ImageRegion region,; double downsample,; ImageServerBuilder.ServerBuilder<BufferedImage> builder). Add a region based on a JSON representation of an ImageServer. SparseImageServer.Builder; serverRegion(ImageRegion region,; double downsample,; ImageServer<BufferedImage> server). Add a region based on an existing ImageServer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(). Method Details. jsonRegion; public SparseImageServer.Builder jsonRegion(ImageRegion region,; double downsample,; ImageServerBuilder.ServerBuilder<BufferedImage> builder); Add a region based on a JSON representation of an ImageServer. Parameters:; region - the region within this image where the pixels requested from the server should be positioned; downsample - the downsample value for the represented region; builder - the ServerBuilder representation of the server to include; Returns:; See Also:. ImageServers. serverRegion; public SparseImageServer.Builder serverRegion(ImageRegion regio",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/SparseImageServer.Builder.html:923,down,downsample,923,javadoc/docs/qupath/lib/images/servers/SparseImageServer.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/SparseImageServer.Builder.html,1,['down'],['downsample']
Availability,". Specify whether measurement tables should show thumbnail images by default or not. static BooleanProperty; showPointHulls. Show the convex hull for point annotations within the viewer. static BooleanProperty; showStartupMessage. Show a startup message when QuPath is launched. static BooleanProperty; showTMAOptions. Flag to indicate that the TMA menu should be shown to the user - only relevant when working with Tissue Microarrays. static BooleanProperty; showToolBarBadges. Show badges on the toolbar, e.g. static BooleanProperty; skipMissingCores. Skip ('jump over') missing cores when navigating through TMA grids. static StringProperty; startupScript. Path to a startup script that should be run immediately after QuPath's launch. static StringProperty; tableDelimiter. Delimiter to use when exporting tables. static DoubleProperty; tileCachePercentage. Requested percentage of available memory to use for tile caching. static DoubleProperty; tmaExportDownsample. Default downsample factor to use when exporting TMA cores. static BooleanProperty; useCalibratedLocationString. Show the cursor location on a viewer in calibrated units, rather than pixels. static BooleanProperty; usePixelSnapping. If true, pixels should be snapped to integer coordinates when using the drawing tools. static BooleanProperty; useRotateGestures. Support rotate gestures for touchscreens and trackpads. static ObjectProperty<String>; userPath. A path where additional files may be stored, such as extensions and log files. static BooleanProperty; useScrollGestures. Support scroll gestures for touchscreens and trackpads. static BooleanProperty; useSelectedColor. Use a specified color for highlighting selected objects in the viewer. static BooleanProperty; useSystemMenubar. Deprecated. static BooleanProperty; useTileBrush. Request that the brush tool automatically uses any available tiles, rather than creating 'circles' as normal. static BooleanProperty; useZoomGestures. Support zoom gestures for touchscree",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:8494,down,downsample,8494,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['down'],['downsample']
Availability,". TMAScoreImporter (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class TMAScoreImporter. java.lang.Object; qupath.lib.io.TMAScoreImporter. public class TMAScoreImporter; extends Object; Helper class for importing data in connection with TMA slides.; ; Some methods may be changed / moved in the future, e.g. because they are more generally useful,; such as those related to parsing CSV data. However, the attempts by these methods to auto-detect ; numeric data are not entirely robust - so more improvement is needed. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TMAScoreImporter();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static int; importFromCSV(File file,; PathObjectHierarchy hierarchy). Import TMA scores from a file into the TMAGrid of an object hierarchy. static int; importFromCSV(String text,; PathObjectHierarchy hierarchy). Import TMA scores from a String into the TMAGrid of an object hierarchy. static double[]; parseNumeric(List<String> list,; boolean allOrNothing). Parse numeric values from a list of strings. static Map<String,List<String>>; readCSV(File file). Read CSV data from a file into a map connecting column headers (keys) to lists of Strings (entries). static Map<String,List<String>>; readCSV(String text). Read CSV data from a String into a map connecting column headers (keys) to lists of Strings (entries). static Map<String,List<String>>; readCSV(Scanner scanner). Read CSV data into a map connecting column headers (keys) to lists of Strings (entries). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/TMAScoreImporter.html:767,robust,robust,767,javadoc/docs/qupath/lib/io/TMAScoreImporter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/TMAScoreImporter.html,1,['robust'],['robust']
Availability,". TileListener (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.images.stores; Interface TileListener<T>. Type Parameters:; T - . All Known Implementing Classes:; QuPathViewer, QuPathViewerPlus. public interface TileListener<T>; Interface for anything that needs to know when image tiles become available. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; boolean; requiresTileRegion(String serverPath,; ImageRegion region). Check if the listener requires a particular tile. void; tileAvailable(String serverPath,; ImageRegion region,; T tile). Notify a listener that an image tile has been received read & is available. Method Details. tileAvailable; void tileAvailable(String serverPath,; ImageRegion region,; T tile); Notify a listener that an image tile has been received read & is available. Parameters:; serverPath - ; region - ; tile - . requiresTileRegion; boolean requiresTileRegion(String serverPath,; ImageRegion region); Check if the listener requires a particular tile.; This is primarily designed to deal with asynchronous tile requests;; by the time the server is ready to process the the request, it might be out of date; (e.g. if the user has panned to a different part of the image).; ; A server *may* make use of this function to do a last minute poll of all listeners to; check if the region is required.; Any implementation should return quickly (erring conservatively on the side of 'true' if; the calculations would be prohibitively expensive), since otherwise it doesn't save time; in seeking the tile itself. Parameters:; serverPath - ; region - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/TileListener.html:581,avail,available,581,javadoc/docs/qupath/lib/gui/images/stores/TileListener.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/TileListener.html,3,['avail'],['available']
Availability,". TileRequest (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class TileRequest. java.lang.Object; qupath.lib.images.servers.TileRequest. public class TileRequest; extends Object; A wrapper for a RegionRequest, useful to precisely specify image tiles at a particular resolution.; ; Why?; ; Because downsamples can be defined with floating point precision, and are not always unambiguous when ; calculated as the ratios of pyramid level dimensions (i.e. different apparent horizontal and vertical scaling), ; a RegionRequest is too fuzzy a way to refer to a specific rectangle of pixels from a specific pyramid level. ; Rounding errors can easily occur, and different image readers might respond differently to the same request.; ; Consequently, TileRequests provide a means to reproducibly define coordinates at pyramid levels and not only ; the full resolution image space. They wrap a RegionRequest, because this is still used for caching purposes. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static TileRequest; createInstance(String path,; int level,; double downsample,; ImageRegion tileRegion). Create a new tile request for a specified region, downsample and resolution level. static TileRequest; createInstance(ImageServer<?> server,; int level,; ImageRegion tileRegion). Create a new tile request for a specified region and resolution level of an image. boolean; equals(Object obj);  ; double; getDownsample(). Get the downsample value for this tile. int; getImageHeight(). Get the height of the bounding box for this tile in the full resolution image. ImagePlane; getImagePlane(). Get the ImagePlane for",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TileRequest.html:597,down,downsamples,597,javadoc/docs/qupath/lib/images/servers/TileRequest.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TileRequest.html,2,"['down', 'error']","['downsamples', 'errors']"
Availability,". TileRequestManager (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Interface TileRequestManager. public interface TileRequestManager; Helper class to manage tile requests from an ImageServer.; ; The purpose of this is to make it possible to identify the 'optimal' regions to request ; for any particular pixels in the image, based on the resolution levels actually present. ; ; By contrast RegionRequest objects can be used to easily request any pixels at ; any desired resolution, but this flexibility means that one can easily requests pixels ; in an inefficient way - or even inadvertently request pixels multiple times ; (e.g. through rounding errors when requesting pixels at an arbitrary resolution). Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract Methods. Modifier and Type; Method; Description; Collection<TileRequest>; getAllTileRequests(). Get TileRequest objects for all tiles that this server supports. TileRequest; getTileRequest(int level,; int x,; int y,; int z,; int t). Get the single TileRequest containing a specified pixel, or null if no such request exists. Collection<TileRequest>; getTileRequests(RegionRequest request). Get a collection of TileRequest objects necessary to fulfil a specific RegionRequest. Collection<TileRequest>; getTileRequestsForLevel(int level). Get TileRequest objects for all tiles that this server supports ; at the specified resolution level. Method Details. getAllTileRequests; Collection<TileRequest> getAllTileRequests(); Get TileRequest objects for all tiles that this server supports.; ; This should return an exhaustive collection of non-overlapping tiles, such that ; making requests for each of these would result ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TileRequestManager.html:949,error,errors,949,javadoc/docs/qupath/lib/images/servers/TileRequestManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TileRequestManager.html,1,['error'],['errors']
Availability,". Timeit (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class Timeit. java.lang.Object; qupath.lib.common.Timeit. public class Timeit; extends Object; Helper class to time code execution.; It is designed to be particularly useful when scripting.; The main timing report is implemented as timeit.toString() so that it can easily be printed.; ; A simple use is to start the timer before running code and print it at the end:; ; var timeit = new Timeit().start();; // Do something; timeit.stop(); // Optional - we can also print at any time; System.out.println(timeit);; ; . Checkpoints can also be added to output times for individual stages:; ; var timeit = new Timeit();; timeit.checkpoint(""First checkpoint"");; // Do something; timeit.checkpoint(""Second checkpoint"");; // Do something else; timeit.stop();; System.out.println(timeit);; ; . Finally, a Timeit can be used to repeatedly run the same code multiple times, and print the timings at the end.; ; ; var timeit = new Timeit(); .microseconds(); .checkpointAndRun(""Greeting"", () -> System.out.println(""Hello!""), 10); .summarizeCheckpoints(); .stop();; System.out.println(timeit);; ; . Since:; v0.4.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Timeit.Checkpoint. Class representing a named checkpoint with a timestamp in nanoseconds. Constructor Summary; Constructors. Constructor; Description; Timeit();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Timeit; autoUnits();  ; Timeit; checkpoint(). Create a new checkpoint with a default name. Timeit; checkpoint(String name). Create a new checkpoint with the ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:971,checkpoint,checkpoint,971,javadoc/docs/qupath/lib/common/Timeit.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html,2,['checkpoint'],['checkpoint']
Availability,". Timeit.Checkpoint (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class Timeit.Checkpoint. java.lang.Object; qupath.lib.common.Timeit.Checkpoint. Enclosing class:; Timeit. public static class Timeit.Checkpoint; extends Object; Class representing a named checkpoint with a timestamp in nanoseconds. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; getName(). Get the checkpoint name. long; getNanoseconds(). Get the checkpoint timestamp in nanoseconds. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getName; public String getName(); Get the checkpoint name. Returns:. getNanoseconds; public long getNanoseconds(); Get the checkpoint timestamp in nanoseconds. Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.Checkpoint.html:547,checkpoint,checkpoint,547,javadoc/docs/qupath/lib/common/Timeit.Checkpoint.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.Checkpoint.html,5,['checkpoint'],['checkpoint']
Availability,". UpdateChecker.ReleaseVersion (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.extensions; Class UpdateChecker.ReleaseVersion. java.lang.Object; qupath.lib.gui.extensions.UpdateChecker.ReleaseVersion. Enclosing class:; UpdateChecker. public static class UpdateChecker.ReleaseVersion; extends Object; Class to represent a release version. Used to provide an update link, if available. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static UpdateChecker.ReleaseVersion; create(String name,; Version version,; URI uri). Create a new UpdateChecker.ReleaseVersion. String; getName(). Get the release name (any text). URI; getUri(). Get a URI to download the release (may be null if no URI is available). Version; getVersion(). Get the semantic version. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. getName; public String getName(); Get the release name (any text). Returns:. getVersion; public Version getVersion(); Get the semantic version. Returns:. getUri; public URI getUri(); Get a URI to download the release (may be null if no URI is available). Returns:. create; public static UpdateChecker.ReleaseVersion create(String name,; Version version,; URI uri); Create a new UpdateChecker.ReleaseVersion. Parameters:; name - a user-friendly name for the project; version - semantic version; uri - URI for downloading the release (may be null); Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html:660,avail,available,660,javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/extensions/UpdateChecker.ReleaseVersion.html,6,"['avail', 'down']","['available', 'download', 'downloading']"
Availability,". UriUpdater (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class UriUpdater<T extends UriResource>. java.lang.Object; qupath.lib.io.UriUpdater<T>. Type Parameters:; T - . public class UriUpdater<T extends UriResource>; extends Object; Helper class for updating URIs, for example whenever files have moved or projects have been transferred between computers. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; UriUpdater.SingleUriItem. Wrapper for a URI, providing access to a Path if available. static enum ; UriUpdater.UriStatus. Enum representing the status of a URI, i.e. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; applyReplacements(). Apply all current replacements, updating the UriResource objects. int; countMissing(). Get a count of the items flagged as missing. int; countReplacements(). Get a count of the number of replacements for missing items. static <T extends UriResource>UriUpdater<T>; create(Collection<T> resources). Create a new UriUpdater to support updating URIs for one or more UriResource objects. static <T extends UriResource>UriUpdater<T>; create(Collection<T> resources,; Collection<UriUpdater.SingleUriItem> items,; Map<UriUpdater.SingleUriItem,UriUpdater.SingleUriItem> replacements). Create a new UriUpdater using the specified collections. static <T extends UriResource>UriUpdater<T>; create(T resource). Create a new UriUpdater to support updating URIs for a single UriResource. static int; fixUris(UriResource resource,; Project<?> project). Attempt to fix any broken paths by updating URIs based upon the current project. Collection<Ur",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html:838,avail,available,838,javadoc/docs/qupath/lib/io/UriUpdater.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.html,1,['avail'],['available']
Availability,". UriUpdater.SingleUriItem (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.io; Class UriUpdater.SingleUriItem. java.lang.Object; qupath.lib.io.UriUpdater.SingleUriItem. Enclosing class:; UriUpdater<T extends UriResource>. public static class UriUpdater.SingleUriItem; extends Object; Wrapper for a URI, providing access to a Path if available. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; equals(Object obj);  ; Path; getPath(). Get the Path corresponding to the URI, or none if the URI does not refer to a file. UriUpdater.UriStatus; getStatus(). Get the URI status. URI; getURI(). Get the URI. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. getStatus; public UriUpdater.UriStatus getStatus(); Get the URI status. Returns:. getURI; public URI getURI(); Get the URI. Returns:. getPath; public Path getPath(); Get the Path corresponding to the URI, or none if the URI does not refer to a file. Returns:. toString; public String toString(). Overrides:; toString in class Object. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.SingleUriItem.html:616,avail,available,616,javadoc/docs/qupath/lib/io/UriUpdater.SingleUriItem.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/UriUpdater.SingleUriItem.html,1,['avail'],['available']
Availability,". XmlStyler (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.richtextfx.stylers; Class XmlStyler. java.lang.Object; qupath.lib.gui.scripting.richtextfx.stylers.XmlStyler. All Implemented Interfaces:; ScriptStyler. public class XmlStyler; extends Object; implements ScriptStyler; Styling to apply to a CodeArea for XML.; ; This is based on XMLEditorDemo.java from RichTextFX, available at ; https://github.com/FXMisc/RichTextFX/blob/master/richtextfx-demos/src/main/java/org/fxmisc/richtext/demo/XMLEditorDemo.java; and adapted for use in QuPath.; ; The license for RichTextFX is given below:; ; Copyright (c) 2013-2017, Tomas Mikula and contributors; ; All rights reserved.; ; Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:; ; 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.; ; 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.; ; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS IS"" AND ANY EXPRESS OR IMPLIED WARRANTIES, ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. ; IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL ; DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) ; HOWEVER CAU",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/XmlStyler.html:671,avail,available,671,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/XmlStyler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/XmlStyler.html,1,['avail'],['available']
Availability,". checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.JsonImageServerBuilder;  ; checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; checkMinVersion(String) - Static method in class qupath.lib.scripting.QP. Check whether the current QuPath version is ≥ the specified version. checkpoint() - Method in class qupath.lib.common.Timeit. Create a new checkpoint with a default name. checkpoint(String) - Method in class qupath.lib.common.Timeit. Create a new checkpoint with the specified name. checkpointAndRun(Runnable) - Method in class qupath.lib.common.Timeit. Create a checkpoint with the default name and immediately run the provided runnable. checkpointAndRun(String, Runnable) - Method in class qupath.lib.common.Timeit. Create a checkpoint and immediately run the provided Runnable. checkpointAndRun(String, Runnable, int) - Method in class qupath.lib.common.Timeit. Create a checkpoint and immediately run the provided Runnable nIterations times. checkType(URI) - Static method in class qupath.lib.images.servers.FileFormatInfo. Check the type of an image for a specified URI. checkVersionRange(String, String) - Static method in class qupath.lib.scripting.QP. Check whether the current QuPath version is ≥ the specified minimum version, and < the specified maximum. ChoiceParameter<S> - Class in qupath.lib.plugins.parameters. Parameter that supports a list of choices. choices - Variable in class qupath.lib.plugins.parameters.ChoiceParameter;  ; CIRCULARITY - Enum constant in enum class qupath.lib.analysis.features.ObjectMeasurements.ShapeFeatures. Circularity. CITE - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; classification() - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Set the model type to be OpenCVDnn.ModelType.CLASSIFICATION. CLASSIFICATION - Enum constant in enum class qupath.lib.images.servers.ImageServerMetadata.ChannelType. Each channel represe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:99394,checkpoint,checkpoint,99394,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['checkpoint'],['checkpoint']
Availability,". doWatershed(SimpleImage, SimpleModifiableImage, boolean) - Static method in class qupath.lib.analysis.algorithms.Watershed. Apply a 2D watershed transform. doWatershed(SimpleImage, SimpleModifiableImage, double, boolean) - Static method in class qupath.lib.analysis.algorithms.Watershed. Apply a 2D watershed transform, constraining region growing using an intensity threshold. DOWNLOAD - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; downsample(double) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set the downsample factor to use with requesting image regions. downsample(double) - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Specify downsample factor (defined in terms of the full resolution image space). downsample(double) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Specify downsample factor. downsample(double) - Method in class qupath.lib.images.writers.TileExporter. Define resolution as a downsample value. downsamples(double...) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify downsamples; this is especially important for 'thick' objects (annotations, TMA cores); because the downsamples define the resolutions at which these will be rendered. downsamples(double...) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify downsample factors to use in the final pyramid. DragDropImportListener - Class in qupath.lib.gui.viewer. Drag and drop support for main QuPath application, which can support a range of different object types (Files, URLs, Strings,..). DragDropImportListener(QuPathGUI) - Constructor for class qupath.lib.gui.viewer.DragDropImportListener. Constructor. DragDropImportListener.DropHandler<T> - Interface in qupath.lib.gui.viewer. Interface to define a new drop handler. DrawingPreferences() - Constructor for class qupath.lib.gui.panes.PreferencePane.DrawingPreferences;  ; dumpMetadata() - Method in",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:271588,down,downsample,271588,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['down'],['downsample']
Availability,". getClass().getName() + "": "" + URI + parameters; ; This will be called on demand whenever AbstractImageServer.getPath() is first required. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. readRegion; public BufferedImage readRegion(RegionRequest request); Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Specified by:; readRegion in interface ImageServer<BufferedImage>; Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; See Also:. ImageServer.readRegion(double, int, int, int, int, int, int); ImageServer.readRegion(double, int, int, int, int); ImageServer.readBufferedImage(RegionRequest). convertToBufferedImage; public static BufferedImage convertToBufferedImage(ImagePlus imp2,; int z,; int t,; ColorModel colorModel); Convert an ImagePlus to a BufferedImage, for a specific z-slice and timepoint.; ; Note that ImageJ uses 1-based indices for z and t! Therefore these should be >= 1.; ; A ColorModel can optionally",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServer.html:5638,down,downsampling,5638,javadoc/docs/qupath/imagej/images/servers/ImageJServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServer.html,1,['down'],['downsampling']
Availability,". getMagnificationString(QuPathViewer) - Static method in class qupath.lib.gui.tools.GuiTools. Get an appropriate String to represent the magnification of the image currently in the viewer. getMainObjectFilter() - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapParameters. Get the primary object filter. getMajor() - Method in class qupath.lib.common.Version. Get the major version number (X.0.0). getManager() - Method in class qupath.lib.images.servers.SparseImageServer. Get the manager, which defines from whence the regions originate. getMask() - Method in class qupath.lib.experimental.pixels.Parameters. Get the mask associated with the main ROI or the parent object, or null if no mask is available. getMask(Parameters<S, T>, ROI) - Method in interface qupath.lib.experimental.pixels.MaskSupplier. Get a mask corresponding to the image, depicting a specified ROI. getMask(ROI) - Method in class qupath.lib.experimental.pixels.Parameters. Get the mask associated with any ROI, or null if no mask is available. getMaskedPixels(Mat, Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Extract all the masked pixels within an image. getMaskImageNames() - Method in interface qupath.lib.projects.Project. Query whether 'true' or masked image names are being returned. getMatrixInverse() - Method in class qupath.lib.color.ColorDeconvolutionStains. Get matrix inverse, as useful for color deconvolution. getMax() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the maximum non-NaN value added. getMaxAllowed() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getMaxAllowed() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the max allowed display value. getMaxBlue() - Method in class qupath.lib.color.ColorDeconvolutionStains. Get the maximum value for the blue channel (default = 255). getMaxCount() - Method in class qupath.lib.analysis.stats.Histogram. Get the highest count found for any bin. getMaxDecimalPlace",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:432600,mask,mask,432600,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,3,"['avail', 'mask']","['available', 'mask']"
Availability,". getName() - Method in class qupath.opencv.WatershedNucleiCV;  ; getName() - Method in class qupath.process.gui.commands.ml.ClassificationResolution. Get the simple name for this resolution. getName() - Method in class qupath.process.gui.ProcessingExtension;  ; getNameFromURI(URI) - Static method in interface qupath.lib.projects.Project. Extract a usable project name from a URI. getNames() - Method in interface qupath.lib.projects.ResourceManager.Manager. Get a list of the available resources. getNameWithoutExtension(File) - Static method in class qupath.lib.common.GeneralTools. Get the file name with extension removed. getNameWithoutExtension(String) - Static method in class qupath.lib.common.GeneralTools. Deprecated.; v0.5.0 in favor of GeneralTools.stripExtension(String), which does the same thing but has; a more descriptive name. See https://github.com/qupath/qupath/pull/1275 for details. getNanoseconds() - Method in class qupath.lib.common.Timeit.Checkpoint. Get the checkpoint timestamp in nanoseconds. getNavigationAccelerationProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Get whether to apply the navigation acceleration (& deceleration) effects or not. getNearest(double, double, double) - Method in class qupath.lib.roi.PointsROI. Identify the closest point within a specified distance to coordinates x,y - or null if no points are found. getNearestNeighbor(PathObject) - Method in class qupath.lib.analysis.DelaunayTools.Subdivision. Get the nearest neighbor for the specified object. getNearestNeighbor(PathObject, BiPredicate<PathObject, PathObject>) - Method in class qupath.lib.analysis.DelaunayTools.Subdivision. Get the nearest neighbor for the specified object, filtered by a predicate. getNegative(PathClass) - Static method in class qupath.lib.objects.classes.PathClass. Get a standalone or derived Negative classification. getNegative(PathClass) - Static method in class qupath.lib.objects.classes.PathClassFactory. Deprecated.; since v0.4.0, ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:456345,checkpoint,checkpoint,456345,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['checkpoint'],['checkpoint']
Availability,". protected boolean; tryToClassify(PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier);  ; boolean; updateURIs(Map<URI,URI> replacements). Update the specified URIs. Methods inherited from class qupath.lib.classifiers.object.AbstractObjectClassifier; classifyObjects, getCompatibleObjects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. DnnObjectClassifier; public DnnObjectClassifier(PathObjectFilter filter,; DnnModel model,; List<PathClass> pathClasses,; int width,; int height,; double requestedPixelSize); Constructor. Parameters:; filter - filter to select compatible options; model - wrapper for the DNN model, including optional preprocessing; pathClasses - ordered list of classifications, corresponding to the predicted labels; width - patch width, in pixels, at the classification size; height - patch height, in pixels, at the classification side; requestedPixelSize - requested pixel size, in calibrated units, used to calculate the downsample value. Method Details. getPathClasses; public Collection<PathClass> getPathClasses(); Description copied from interface: ObjectClassifier; Get the classifications set by this classifier. Specified by:; getPathClasses in interface ObjectClassifier<BufferedImage>; Returns:. classifyObjects; public int classifyObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass); Description copied from interface: ObjectClassifier; Classify the objects in the specified collection.; This provides a means to specify exactly which objects should be classified, avoiding reliance on ObjectClassifier.getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is u",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html:3289,down,downsample,3289,javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,1,['down'],['downsample']
Availability,. qupath.lib.common (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.common. package qupath.lib.common. General-purpose helper classes. Classes. Class; Description; ColorTools. Static functions to help work with RGB(A) colors using packed ints. GeneralTools. Collection of generally useful static methods. LogTools. Helper class for logging. Prefs. Core QuPath preferences. ThreadTools. Create a thread factory that supports adding a prefix to the name and setting daemon status. Timeit. Helper class to time code execution. Timeit.Checkpoint. Class representing a named checkpoint with a timestamp in nanoseconds. Version. Helper class for working with semantic versioning. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/package-summary.html:827,checkpoint,checkpoint,827,javadoc/docs/qupath/lib/common/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/package-summary.html,1,['checkpoint'],['checkpoint']
Availability,". qupath.lib.experimental.pixels (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.experimental.pixels. package qupath.lib.experimental.pixels. Experimental package to simplify pixel operations for large images.; ; Warning! This package is experimental and not thoroughly tested.; Use with caution; it is likely to change in the future. All Classes and InterfacesInterfacesClasses. Class; Description; ImageJProcessor. Class to generate a PixelProcessor when using ImageJ for the primary image representation. ImageSupplier<S>. A functional interface for supplying an image region for processing. MaskSupplier<S,T>. A functional interface for supplying a mask corresponding to an image. MeasurementProcessor. Create PixelProcessor instances that make measurements from objects. MeasurementProcessor.CustomMeasurement<S,T>. Interface for calculating one custom measurement from an image, using Parameters. MeasurementProcessor.Functions. Functions for calculating measurements from an array of pixels. MeasurementProcessor.Measurements. Methods to create custom measurements. OpenCVProcessor. Class to generate a PixelProcessor when using OpenCV for the primary image representation. OutputHandler<S,T,U>. A functional interface for handling the output of a Processor. OutputHandler.ObjectOutputHandler<S,T,U>;  ; OutputHandler.OutputToObjectConverter<S,T,U>;  ; Parameters<S,T>. Parameters for use with a PixelProcessor. Parameters.Builder<S,T>. Builder class for Parameters. PixelProcessor<S,T,U>. A class for tiled image processing. PixelProcessor.Builder<S,T,U>. Builder class for a PixelProcessor. PixelProcessorUtils. Utility functions to help with the PixelProcessor class. Processor<S,T,U>. A generic processor designed to work with Parame",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/package-summary.html:910,mask,mask,910,javadoc/docs/qupath/lib/experimental/pixels/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/package-summary.html,1,['mask'],['mask']
Availability,". qupath.lib.gui.images.stores (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.images.stores. package qupath.lib.gui.images.stores. Classes for requesting, caching and drawing image tiles. All Classes and InterfacesInterfacesClasses. Class; Description; AbstractImageRenderer. Abstract ImageRenderer, which adds a timestamp variable. ColorModelRenderer. An ImageRenderer that uses a ColorModel. DefaultImageRegionStore. An ImageRegionStore suitable for either Swing or JavaFX applications. ImageRegionRenderer. Interface for painting regions of an ImageServer onto a Graphics object. ImageRegionStoreFactory. Factory for creating an ImageRegionStore. ImageRegionStoreHelpers. Helper methods related to image region storage. ImageRenderer. Interface for objects capable of converting a BufferedImage for rendering using Graphics2D. TileListener<T>. Interface for anything that needs to know when image tiles become available. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/package-summary.html:1175,avail,available,1175,javadoc/docs/qupath/lib/gui/images/stores/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/package-summary.html,1,['avail'],['available']
Availability,". qupath.lib.gui.panes (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.panes. package qupath.lib.gui.panes. Panes used to display information in the QuPath interface. Related Packages. Package; Description; qupath.lib.gui. The main QuPath user interface. Classes. Class; Description; AnnotationPane. Component for displaying annotations within the active image. ImageDetailsPane. A panel used for displaying basic info about an image, e.g. MeasurementMapPane. Component used for displaying measurement maps, whereby detection objects are recolored ; according to measurement values. ObjectDescriptionPane<T>. Wraps a pane used to display an object description, if one is available. ObjectTreeBrowser. Simple browser for exploring fields (including private fields) within an object by reflection. PathObjectHierarchyView. Component for showing a tree-based view of the object hierarchy. PreferencePane. QuPath's preference pane, giving a means to modify many of the properties within PathPrefs. PreferencePane.AppearancePreferences;  ; PreferencePane.DrawingPreferences;  ; PreferencePane.ExtensionPreferences;  ; PreferencePane.GeneralPreferences;  ; PreferencePane.InputOutputPreferences;  ; PreferencePane.LocalePreferences;  ; PreferencePane.MeasurementPreferences;  ; PreferencePane.ObjectPreferences;  ; PreferencePane.ScriptingPreferences;  ; PreferencePane.UndoRedoPreferences;  ; PreferencePane.ViewerPreferences;  ; ProjectBrowser. Component for previewing and selecting images within a project. SelectedMeasurementTableView. Component to show measurements for a currently-selected object. ServerSelector. Helper class for selecting one image server out of a collection. SimpleImageViewer. A simple viewer for a single image, with ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/package-summary.html:932,avail,available,932,javadoc/docs/qupath/lib/gui/panes/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/package-summary.html,1,['avail'],['available']
Availability,". qupath.lib.gui.scripting.languages (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.scripting.languages. package qupath.lib.gui.scripting.languages. Language and syntax definitions for QuPath scripting. Related Packages. Package; Description; qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.scripting.completors. Classes for auto-completion in QuPath's script editor. qupath.lib.gui.scripting.richtextfx. Alternative script editor for QuPath using syntax highlighting thanks to RichTextFX (https://github.com/FXMisc/RichTextFX). qupath.lib.gui.scripting.syntax. Classes for syntax help in QuPath's script editor. All Classes and InterfacesInterfacesClasses. Class; Description; CssLanguage. Class for representing CSS in QuPath. DefaultScriptLanguage. Default implementation for a ScriptLanguage, based on a ScriptEngine. DefaultScriptLanguage.ImportStatementGenerator. Interface defining how the import statements should be generated for the language. GroovyLanguage. Class for the representation of the Groovy programming language in QuPath. HtmlRenderer. Marker interface that indicates an executable language renders HTML. JsonLanguage. Class for the representation of JSON syntax in QuPath. MarkdownLanguage. Class for the representation of JSON syntax in QuPath. PlainLanguage. Class for the representation of plain text in QuPath. PropertiesLanguage. Class for the representation of properties and config files in QuPath. ScriptLanguageProvider. Class with static methods to fetch all the available ScriptLanguages. XmlLanguage. Class for representing XML in QuPath. YamlLanguage. Class for the representation of YAML syntax in QuPath. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/package-summary.html:1791,avail,available,1791,javadoc/docs/qupath/lib/gui/scripting/languages/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/package-summary.html,1,['avail'],['available']
Availability,". qupath.lib.gui.scripting.richtextfx.stylers (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.scripting.richtextfx.stylers. package qupath.lib.gui.scripting.richtextfx.stylers. Classes for syntax styling in QuPath's script editor. Related Packages. Package; Description; qupath.lib.gui.scripting.richtextfx. Alternative script editor for QuPath using syntax highlighting thanks to RichTextFX (https://github.com/FXMisc/RichTextFX). All Classes and InterfacesInterfacesClasses. Class; Description; GroovyStyler. Styling to apply to a CodeArea, based on Groovy or Java syntax. JsonStyler. Styling to apply to a CodeArea, based on JSON syntax. MarkdownStyler. Styling to apply to a CodeArea, based on Markdown syntax. PlainStyler. Styling for plain text (which really means no styling). PropertiesStyler. Styling to apply to a CodeArea, based on Java .properties and .cfg file syntax. PythonStyler. Styling to apply to a CodeArea, based on Python syntax. ScriptStyler. Interface for classes that apply some styling to a RichTextFX's CodeArea. ScriptStylerProvider. Class with static methods to fetch all the available ScriptStylers. XmlStyler. Styling to apply to a CodeArea for XML. YamlStyler. Styling to apply to a CodeArea, based on YAML syntax. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/package-summary.html:1366,avail,available,1366,javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/richtextfx/stylers/package-summary.html,1,['avail'],['available']
Availability,. qupath.lib.gui.scripting.syntax (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.gui.scripting.syntax. package qupath.lib.gui.scripting.syntax. Classes for syntax help in QuPath's script editor. Related Packages. Package; Description; qupath.lib.gui.scripting. Scripting through the QuPath interface. qupath.lib.gui.scripting.completors. Classes for auto-completion in QuPath's script editor. qupath.lib.gui.scripting.languages. Language and syntax definitions for QuPath scripting. qupath.lib.gui.scripting.richtextfx. Alternative script editor for QuPath using syntax highlighting thanks to RichTextFX (https://github.com/FXMisc/RichTextFX). All Classes and InterfacesInterfacesClasses. Class; Description; ScriptSyntax. Interface for classes that apply some syntax formatting to an EditableText. ScriptSyntaxProvider. Class with static methods to fetch all the available ScriptSyntaxes. ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/syntax/package-summary.html:1122,avail,available,1122,javadoc/docs/qupath/lib/gui/scripting/syntax/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/syntax/package-summary.html,1,['avail'],['available']
Availability,". qupath.lib.io (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Package:. Description; Related Packages; Classes and Interfaces. Package: ; Description | ; Related Packages | ; Classes and Interfaces. SEARCH. Package qupath.lib.io. package qupath.lib.io. Supports reading and writing some core QuPath data structures. All Classes and InterfacesInterfacesClassesEnum Classes. Class; Description; FeatureCollection. Class to wrap a collection of objects to indicate they should be export as a GeoJSON ""FeatureCollection"". GsonTools. Helper class providing Gson instances with type adapters registered to serialize ; several key classes. GsonTools.SubTypeAdapterFactory<T>. A TypeAdapterFactory that is suitable for handling class hierarchies. PathIO. Primary class for loading/saving ImageData objects. PathIO.GeoJsonExportOptions. Options to customize the export of PathObjects as GeoJSON. PointIO. Helper class for reading/writing point objects in terms of their x,y coordinates. TMAScoreImporter. Helper class for importing data in connection with TMA slides. UriResource. Interface for objects that depend upon URIs. UriUpdater<T extends UriResource>. Helper class for updating URIs, for example whenever files have moved or projects have been transferred between computers. UriUpdater.SingleUriItem. Wrapper for a URI, providing access to a Path if available. UriUpdater.UriStatus. Enum representing the status of a URI, i.e. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/io/package-summary.html:1445,avail,available,1445,javadoc/docs/qupath/lib/io/package-summary.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/io/package-summary.html,1,['avail'],['available']
Availability,". static Stage; createShowSystemInfoDialog(QuPathGUI qupath). Create a window summarizing key system information relevant for QuPath. static org.controlsfx.control.action.Action; createSingleStageAction(Supplier<Stage> supplier). Create a command that generates a persistent single dialog on demand. static org.controlsfx.control.action.Action; createSingleStageAction(Supplier<Stage> supplier,; String name). Create a named command that generates a persistent single dialog on demand. static Stage; createSpecifyAnnotationDialog(QuPathGUI qupath). Create a stage to prompt the user to specify an annotation to add. static Stage; createWorkflowDisplayDialog(QuPathGUI qupath). Create a dialog to show the workflow history for the current image data. static org.controlsfx.control.action.Action; createZoomCommand(QuPathGUI qupath,; int zoomAmount). Create a zoom in/out command action. static void; detectionCentroidDistances2D(ImageData<?> imageData). Compute the distance between the centroids of all detections, for all available classifications. static void; distanceToAnnotations2D(ImageData<?> imageData,; boolean signedDistances). Compute the distance between all detections and the closest annotation, for all annotation classifications. static void; duplicateSelectedAnnotations(ImageData<?> imageData). Duplicate the selected annotations. static void; editSelectedAnnotation(QuPathGUI qupath). Prompt to edit the selected annotation by translation and rotation. static void; insertSelectedObjectsInHierarchy(ImageData<?> imageData). Insert the selected objects in the hierarchy, resolving positions accordingly. static void; launchTMADataViewer(QuPathGUI qupath). Open new window with the TMA data viewer. static void; makeInverseAnnotation(ImageData<?> imageData). Make an inverse annotation for the selected objects, storing the command in the history workflow. static void; mergeSelectedAnnotations(ImageData<?> imageData). Merge the currently-selected annotations for an image, replacing",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:3479,avail,available,3479,javadoc/docs/qupath/lib/gui/commands/Commands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html,1,['avail'],['available']
Availability,".    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class PixelProcessor.Builder<S,T,U>. java.lang.Object; qupath.lib.experimental.pixels.PixelProcessor.Builder<S,T,U>. Type Parameters:; S - the image type; T - the mask type; U - the output type. Enclosing class:; PixelProcessor<S,T,U>. public static class PixelProcessor.Builder<S,T,U>; extends Object; Builder class for a PixelProcessor. Constructor Summary; Constructors. Constructor; Description; Builder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; PixelProcessor<S,T,U>; build(). Build a PixelProcessor from the current state of the builder. PixelProcessor.Builder<S,T,U>; downsample(double downsample). Set the downsample factor to use with requesting image regions. PixelProcessor.Builder<S,T,U>; imageSupplier(ImageSupplier<S> imageSupplier). Set the image supplier. PixelProcessor.Builder<S,T,U>; maskSupplier(MaskSupplier<S,T> maskSupplier). Set the mask supplier. PixelProcessor.Builder<S,T,U>; merger(ObjectMerger merger). Set a merger to use. PixelProcessor.Builder<S,T,U>; mergeSharedBoundaries(double threshold). Convenience method to set a merger that merges objects based on their shared boundary. PixelProcessor.Builder<S,T,U>; outputHandler(OutputHandler<S,T,U> outputHandler). Set the output handler. PixelProcessor.Builder<S,T,U>; padding(int size). Set the padding to use when extracting regions, using a symmetric padding. PixelProcessor.Builder<S,T,U>; padding(Padding padding). Set the padding to use when extracting regions. PixelProcessor.Builder<S,T,U>; pixelSize(double pixelSize). Set the requested pixel size to use with requesting image regions. PixelProcessor.Builder<S,T,U>; processor(Processor<S,T,U> proc",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html:1056,down,downsample,1056,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,1,['down'],['downsample']
Availability,".) - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; checkImageSupport(URI, String...) - Method in interface qupath.lib.images.servers.ImageServerBuilder. Check whether a URI is supported by this builder. checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.JsonImageServerBuilder;  ; checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; checkMinVersion(String) - Static method in class qupath.lib.scripting.QP. Check whether the current QuPath version is ≥ the specified version. checkpoint() - Method in class qupath.lib.common.Timeit. Create a new checkpoint with a default name. checkpoint(String) - Method in class qupath.lib.common.Timeit. Create a new checkpoint with the specified name. checkpointAndRun(Runnable) - Method in class qupath.lib.common.Timeit. Create a checkpoint with the default name and immediately run the provided runnable. checkpointAndRun(String, Runnable) - Method in class qupath.lib.common.Timeit. Create a checkpoint and immediately run the provided Runnable. checkpointAndRun(String, Runnable, int) - Method in class qupath.lib.common.Timeit. Create a checkpoint and immediately run the provided Runnable nIterations times. checkType(URI) - Static method in class qupath.lib.images.servers.FileFormatInfo. Check the type of an image for a specified URI. checkVersionRange(String, String) - Static method in class qupath.lib.scripting.QP. Check whether the current QuPath version is ≥ the specified minimum version, and < the specified maximum. ChoiceParameter<S> - Class in qupath.lib.plugins.parameters. Parameter that supports a list of choices. choices - Variable in class qupath.lib.plugins.parameters.ChoiceParameter;  ; CIRCULARITY - Enum constant in enum class qupath.lib.analysis.features.ObjectMeasurements.ShapeFeatures. Circularity. CITE - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; classification() - Me",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:99159,checkpoint,checkpointAndRun,99159,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['checkpoint'],['checkpointAndRun']
Availability,".; ; ; ; var polygons = splitAreaToPolygons(area, -1, 0, 0);; var holes = polygons[0];; var regions = polygons[1];; ; . Parameters:; area - ; c - ; z - ; t - ; Returns:. createRandomRectangle; public static ROI createRandomRectangle(ImageRegion mask,; double width,; double height); throws IllegalArgumentException; Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. Parameters:; mask - region defining the area in which the rectangle can be located, including the image plane information; width - width of the rectangle to create; height - height of the rectangle to create; Returns:; a rectangle with the specified width and height, covered by the mask; Throws:; IllegalArgumentException - if either the mask width or height is too small for the requested width and height. createRandomRectangle; public static ROI createRandomRectangle(ImageRegion mask,; double width,; double height,; Random random); throws IllegalArgumentException; Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. Parameters:; mask - region defining the area in which the rectangle can be located, including the image plane information; width - width of the rectangle to create; height - height of the rectangle to create; random - random number generator to use (may be null to use a default); Returns:; a rectangle with the specified width and height, covered by the mask; Throws:; IllegalArgumentException - if either the mask width or height is too small for the requested width and height. createRandomRectangle; public static ROI createRandomRectangle(ROI mask,; double width,; double height); throws IllegalArgumentException; Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI.; ; For greater control, see createRandomRectangle(ROI, double, double, int, boolean, Random). Parameters:; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:17746,mask,mask,17746,javadoc/docs/qupath/lib/roi/RoiTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html,2,['mask'],['mask']
Availability,".Action; MOVE_TOOL;  ; final org.controlsfx.control.action.Action; POINTS_TOOL;  ; final org.controlsfx.control.action.Action; POLYGON_TOOL;  ; final org.controlsfx.control.action.Action; POLYLINE_TOOL;  ; final org.controlsfx.control.action.Action; RECTANGLE_TOOL;  ; final org.controlsfx.control.action.Action; SELECTION_MODE;  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ToolManager; create(). Create a new instance. PathTool; getPreviousSelectedTool(). Get the value of selectedToolProperty(). PathTool; getSelectedTool(). Get the value of selectedToolProperty(). org.controlsfx.control.action.Action; getSelectionModeAction(). Return the action associated with 'selection mode'. org.controlsfx.control.action.Action; getToolAction(PathTool tool). Get the action that corresponds to a specific PathTool, creating a new action if one does not already exist. ObservableList<PathTool>; getTools(). Get a read-only list of all available tools. boolean; installTool(PathTool tool,; KeyCodeCombination accelerator). Install a new tool for interacting with viewers. boolean; isToolSwitchingEnabled(). Returns true if the user is able to activate another PathTool, false otherwise. BooleanProperty; lockSelectedToolProperty(). Property to request that the selected tool be locked. ReadOnlyObjectProperty<PathTool>; previousSelectedToolProperty(). Property storing the previous tool that was selected. ReadOnlyObjectProperty<PathTool>; selectedToolProperty(). Property containing the currently-selected PathTool. void; setSelectedTool(PathTool tool). Programmatically select the active PathTool. void; setToolSwitchingEnabled(boolean enabled). Toggle whether the user is permitted to switch to a new active PathTool. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. selectedTool; public ReadOnlyObjectProperty<PathTool",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ToolManager.html:2186,avail,available,2186,javadoc/docs/qupath/lib/gui/ToolManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ToolManager.html,1,['avail'],['available']
Availability,".BioimageIoModel modelSpec,; int preferredTileWidth,; int preferredTileHeight,; ImageOp... inputOps); Create an instance of PatchClassifierParams from a model spec.; This encapsulates some key information QuPath needs for building a model in a way that can ; be modified and updated according to user requirements. Parameters:; modelSpec - the model spec to initialize the parameters; preferredTileWidth - preferred tile width, or -1 to automatically determine this; the width will be updated based on the spec; preferredTileHeight - preferred tile height, or -1 to automatically determine this; the height will be updated based on the spec; inputOps - optional additional preprocessing ops to apply, before any in the model spec are added; Returns:. transformsToOp; public static ImageOp transformsToOp(Collection<? extends qupath.bioimageio.spec.BioimageIoSpec.Processing> transforms); Create an ImageOp that applies the specified transforms sequentially.; ; Important!; This method is experimental and subject to change in future versions.; ; Not all Bioimage Model Zoo transforms are supported ; by QuPath ops, and ops are generally per tile whereas model zoo transforms ; sometimes require global statistics (e.g. for normalization).; ; This method will make an attempt to return a suitable op, but it may ; not be able to incorporate all steps. Parameters:; transforms - ; Returns:. transformToOp; public static ImageOp transformToOp(qupath.bioimageio.spec.BioimageIoSpec.Processing transform); Create an ImageOp that applies the specified transforms, if possible.; ; Important!; This method is experimental and subject to change in future versions.; ; Not all Bioimage Model Zoo transforms are supported ; by QuPath ops, and ops are generally per tile whereas model zoo transforms ; sometimes require global statistics (e.g. for normalization).; ; This method will make an attempt to return a suitable op, but may ; return null if no such op is available. Parameters:; transform - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/BioimageIoTools.html:5044,avail,available,5044,javadoc/docs/qupath/opencv/ml/BioimageIoTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/BioimageIoTools.html,1,['avail'],['available']
Availability,".Dialogs. Deprecated.; Show a standard message dialog. showMessageDialog(String, Node) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. showMiniViewer(QuPathViewer) - Static method in class qupath.lib.gui.commands.Commands. Show a mini viewer window associated with a specific viewer. showNamesProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showNoImageError(String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message that no image is available. showNoImageError(String) - Static method in class qupath.lib.gui.tools.GuiTools. Show an error message that no image is available. showNoProjectError(String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message that no project is available. showNoProjectError(String) - Static method in class qupath.lib.gui.tools.GuiTools. Show an error message that no project is available. showOverviewProperty() - Method in class qupath.lib.gui.viewer.ViewerManager. Show the overview image. showOverviewProperty() - Method in class qupath.lib.gui.viewer.ViewerPlusDisplayOptions. Show the overview image. showParameterDialog(String, ParameterList) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a (modal) dialog for a specified ParameterList. showParameterDialog(String, ParameterList) - Static method in class qupath.lib.gui.tools.GuiTools. Show a (modal) dialog for a specified ParameterList. showPixelClassificationProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showPlainMessage(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a plain message. showPlainNotification(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a plain notification. showPointHullsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Sho",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:968879,error,error,968879,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,2,"['avail', 'error']","['available', 'error']"
Availability,".DirectServerChannelInfo;  ; getMaxAllowed() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the max allowed display value. getMaxBlue() - Method in class qupath.lib.color.ColorDeconvolutionStains. Get the maximum value for the blue channel (default = 255). getMaxCount() - Method in class qupath.lib.analysis.stats.Histogram. Get the highest count found for any bin. getMaxDecimalPlaces() - Method in class qupath.lib.common.Timeit. Get the maximum number of decimal places when reporting timings. getMaxDisplay() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getMaxDisplay() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the max display value. getMaxDisplay() - Method in class qupath.lib.display.settings.ChannelSettings. Get the requested maximum display value for the channel,; This should be used with the last entry in any lookup table. getMaxDownsample() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the maximum downsample value supported by this viewer. getMaxFeatures() - Method in class qupath.lib.analysis.features.CoocurranceMatrices. Compute maximum features from all four rotations. getMaxGreen() - Method in class qupath.lib.color.ColorDeconvolutionStains. Get the maximum value for the green channel (default = 255). getMaxHeight() - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapParameters. Get the maximum height of the density map. getMaxNormalizedCount() - Method in class qupath.lib.analysis.stats.Histogram. Get the highest count found for any bin, divided by the total counts across the entire histogram. getMaxRed() - Method in class qupath.lib.color.ColorDeconvolutionStains. Get the maximum value for the red channel (default = 255). getMaxROIHandleSize() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the maximum size for which ROI handles may be drawn. getMaxThreads() - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Get the maximum number of",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:434212,down,downsample,434212,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['down'],['downsample']
Availability,".ImageResolutionLevel; getLevel(int level). Get resolution information for a specified pyramidal level. List<ImageServerMetadata.ImageResolutionLevel>; getLevels(). Get an unmodifiable list containing the resolution levels. double; getMagnification(). Get the magnification value, or Double.NaN if this is unavailable. Number; getMaxValue(). Get the minimum value supported by this image. Number; getMinValue(). Get the minimum value supported by this image. String; getName(). Get the image name. PixelCalibration; getPixelCalibration(). Get a PixelCalibration object representing the pixel size information for this metadata object. double; getPixelHeightMicrons(). Get the pixel height in microns, if available - or Double.NaN otherwise. PixelType; getPixelType(). Returns the bit-depth for individual pixels in the image. double; getPixelWidthMicrons(). Get the pixel width in microns, if available - or Double.NaN otherwise. double[]; getPreferredDownsamplesArray(). Request the preferred downsamples from the image metadata. int; getPreferredTileHeight(). Get the preferred tile height, which can be used to optimize pixel requests for large images. int; getPreferredTileWidth(). Get the preferred tile width, which can be used to optimize pixel requests for large images. int; getSizeC(). Get the number of image channels. int; getSizeT(). Get the number of time points. int; getSizeZ(). Get the number of z-slices. double; getTimepoint(int ind). Get the time point, defined in getTimeUnit(), or Double.NaN if this is unknown. TimeUnit; getTimeUnit(). Get the time unit for a time series. int; getWidth(). Get the full-resolution image width. double; getZSpacingMicrons(). Get the z-spacing in microns, if available - or Double.NaN otherwise. int; hashCode();  ; boolean; isCompatibleMetadata(ImageServerMetadata metadata). Returns true if a specified ImageServerMetadata is compatible with this one, that is it has the same path and dimensions; (but possibly different pixel sizes, magnificati",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html:3160,down,downsamples,3160,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html,1,['down'],['downsamples']
Availability,".classes.PathClassFactory. Deprecated.; since v0.4.0, use PathClass.getTwoPlus(PathClass). getType() - Method in class qupath.lib.gui.tools.MeasurementExporter. Returns the type of path objects used in the export. getTypeAdapterFactory() - Static method in class qupath.lib.classifiers.object.ObjectClassifiers. Get a TypeAdapterFactory to handle ObjectClassifier instances. getTypeAdapterFactory() - Static method in class qupath.opencv.ml.objects.features.FeatureExtractors. Get the TypeAdapterFactory default used for FeatureExtractor objects. getTypeAdapterFactory() - Static method in class qupath.opencv.ml.pixel.PixelClassifiers. Get the TypeAdapterFactory default used for PixelClassifier objects. getTypeAdaptor(Class<T>) - Static method in class qupath.opencv.io.OpenCVTypeAdapters. Get a TypeAdapter to pass to a GsonBuilder for a specific supported OpenCV class, ; i.e. getUndoRedoManager() - Method in class qupath.lib.gui.QuPathGUI. Get the UndoRedoManager, which can be useful if needing to clear it in cases where available memory is low. getUniqueID() - Method in class qupath.lib.gui.images.stores.AbstractImageRenderer;  ; getUniqueID() - Method in class qupath.lib.gui.images.stores.ColorModelRenderer;  ; getUniqueID() - Method in interface qupath.lib.gui.images.stores.ImageRenderer. Get a unique key, which will be used for caching. getUnit() - Method in class qupath.lib.plugins.parameters.NumericParameter. Get the unit to display for this parameter (may be null if no unit is available). getUnmodifiableMetadataMap() - Method in class qupath.lib.objects.PathObject. Get an unmodifiable map of the metadata. getUpperBound() - Method in enum class qupath.lib.images.servers.PixelType. Get a number representing the maximum value permitted by this type. getUpperBound() - Method in class qupath.lib.plugins.parameters.NumericParameter. Retrieve the upper bound. getUri() - Method in class qupath.lib.gui.extensions.UpdateChecker.ReleaseVersion. Get a URI to download the releas",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:542450,avail,available,542450,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,".commands.Commands. Attempt to annotation objects to the system clipboard, if available. copySelectedAnnotationsToCurrentPlane(QuPathViewer) - Static method in class qupath.lib.gui.commands.Commands. Copy the selected objects and add them to the plane currently active in the viewer. copySelectedAnnotationsToPlane(int, int) - Static method in class qupath.lib.scripting.QP. Copy the selected annotations in the current hierarchy to the specified z-slice and timepoint. copySelectedAnnotationsToPlane(PathObjectHierarchy, ImagePlane) - Static method in class qupath.lib.scripting.QP. Copy the selected annotations in the specified hierarchy to the specified image plane. copySelectedAnnotationsToPlane(ImagePlane) - Static method in class qupath.lib.scripting.QP. Copy the selected annotations in the current hierarchy to the specified image plane. copySelectedObjectsToClipboard(ImageData<BufferedImage>) - Static method in class qupath.lib.gui.commands.Commands. Attempt to copy selected objects to the system clipboard, if available. copySelectedObjectsToPlane(int, int) - Static method in class qupath.lib.scripting.QP. Copy the selected objects in the current hierarchy to the specified z-slice and timepoint. copySelectedObjectsToPlane(PathObjectHierarchy, ImagePlane) - Static method in class qupath.lib.scripting.QP. Copy the selected objects in the specified hierarchy to the specified image plane. copySelectedObjectsToPlane(ImagePlane) - Static method in class qupath.lib.scripting.QP. Copy the selected objects in the current hierarchy to the specified image plane. copyTableContentsToClipboard(PathTableData<?>, Collection<String>) - Static method in class qupath.lib.gui.commands.SummaryMeasurementTableCommand. Get a single String representing the data in a table and copy it to the clipboard. copyToClipboard(Object) - Static method in class qupath.lib.gui.scripting.QPEx. Try to copy an object to the clipboard. Core() - Constructor for class qupath.opencv.ops.ImageOps.Core;  ; coun",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:150043,avail,available,150043,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,".experimental.pixels.Parameters.Builder. Function used to lazily create a mask corresponding to the image for a specified ROI. maskImageNames - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; maskImageNamesProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request that image names are hidden within the user interface. maskObject(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. maskObjectAndSplit(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. maskSupplier(MaskSupplier<S, T>) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set the mask supplier. MaskSupplier<S,T> - Interface in qupath.lib.experimental.pixels. A functional interface for supplying a mask corresponding to an image. MATCH_VIEWER_RESOLUTIONS - Variable in class qupath.lib.gui.actions.ViewerActions;  ; matchByID(Collection<? extends PathObject>, Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Match objects according to their IDs. matchClassName(String...) - Method in class qupath.imagej.images.servers.ImageJServerBuilder;  ; matchClassName(String...) - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; matchClassName(String...) - Method in interface qupath.lib.images.servers.ImageServerBuilder. Check if this provider matches one or more specified classnames. matchClassName(String...) - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; matchResolutions() - Method in class qupath.lib.gui.viewer.ViewerManager. Match the display resolutions (downsamples)",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:673566,mask,mask,673566,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['mask'],['mask']
Availability,".experimental.pixels; Class PixelProcessorUtils. java.lang.Object; qupath.lib.experimental.pixels.PixelProcessorUtils. public class PixelProcessorUtils; extends Object; Utility functions to help with the PixelProcessor class. Since:; v0.5.0. Constructor Summary; Constructors. Constructor; Description; PixelProcessorUtils();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; containsCentroid(ROI roi,; PathObject child). Check whether a child object's centroid is contained within a ROI. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; int channel,; Function<PathObject,ROI> roiFunction). Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; String channelName,; Function<PathObject,ROI> roiFunction). Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; ColorTransforms.ColorTransform transform,; Function<PathObject,ROI> roiFunction). Extract the pixels from the image using the specified transform, and applying any ROI mask. static List<PathObject>; maskObject(ROI parentROI,; PathObject child). Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. static List<PathObject>; maskObjectAndSplit(ROI parentROI,; PathObject child). Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelProcessorUtils; public PixelProcessorUtils(). Method Details. extractMa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html:1400,mask,mask,1400,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html,1,['mask'],['mask']
Availability,".gui.panes.PreferencePane.AppearancePreferences;  ; getSuffix() - Method in class qupath.lib.common.Version. Get the (optional) suffix, which may be appended at the end of the version ; number to indicate a pre-release (0.0.0-X). getSuitableName(Class<? extends PathObject>, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Get a user-friendly name for a specific type of PathObject, based on its Java class. getSum() - Method in class qupath.lib.analysis.stats.Histogram. Get the sum of all the values being histogrammed. getSum() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the sum of all non-NaN values that were added. getSummary() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a summary string representing this image entry. getSupportedObjects(Collection<? extends PathObject>, Collection<Class<? extends PathObject>>) - Static method in class qupath.lib.objects.PathObjectTools. From a collection of available objects, extract those that are instances of specified supported classes. getSupportedParentObjectClasses() - Method in class qupath.imagej.detect.cells.SubcellularDetection;  ; getSupportedParentObjectClasses() - Method in class qupath.imagej.detect.dearray.TMADearrayerPluginIJ;  ; getSupportedParentObjectClasses() - Method in class qupath.imagej.detect.tissue.SimpleTissueDetection2;  ; getSupportedParentObjectClasses() - Method in class qupath.imagej.gui.ImageJMacroRunner;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getSupportedParentObjectClasses() - Method in class qupath.lib.algorithms.TilerPlugin;  ; getSupportedParentObjectClasses() - Meth",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:524948,avail,available,524948,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,".images.stores.TileWorker<BufferedImage>; createTileWorker(ImageServer<BufferedImage> server,; RegionRequest request,; Map<RegionRequest,BufferedImage> cache,; boolean ensureTileReturned);  ; Map<RegionRequest,BufferedImage>; getCache();  ; protected BufferedImage; getCachedRegion(ImageServer<BufferedImage> server,; RegionRequest request);  ; BufferedImage; getCachedThumbnail(ImageServer<BufferedImage> server,; int zPosition,; int tPosition);  ; BufferedImage; getCachedTile(ImageServer<BufferedImage> server,; RegionRequest request);  ; Map<RegionRequest,BufferedImage>; getCachedTilesForServer(ImageServer<BufferedImage> server). Get a map of all cached tiles pertaining to a specific ImageServer. BufferedImage; getThumbnail(ImageServer<BufferedImage> server,; int zPosition,; int tPosition,; boolean addToCache);  ; long; getTileCacheSize(). Get the tile cache size, in bytes. void; paintRegion(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; BufferedImage imgThumbnail,; ImageObserver observer,; ImageRenderer imageDisplay). Paint an image region. void; paintRegionCompletely(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; ImageObserver observer,; ImageRenderer imageDisplay,; long timeoutMilliseconds). Similar to paintRegion, but wait until all the tiles have arrived (or abort if it is taking too long). protected void; registerRequest(TileListener<BufferedImage> tileListener,; ImageServer<BufferedImage> server,; Shape clipShape,; double downsampleFactor,; int zPosition,; int tPosition). Register a request so that the tile request queue will be populated, including potentially for nearby tiles (i.e. protected void; registerRequest(TileListener<BufferedImage> tileListener,; ImageServer<BufferedImage> server,; RegionRequest region,; double downsampleFactor,; int zPosition,; int tPosition);  ; void; removeTileList",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html:2588,down,downsampleFactor,2588,javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,1,['down'],['downsampleFactor']
Availability,".lib.common.ColorTools. Mask for use when extracting the alpha component from a packed ARGB int value. MASK_BLUE - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the blue component from a packed (A)RGB int value. MASK_GREEN - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the green component from a packed (A)RGB int value. MASK_RED - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the red component from a packed (A)RGB int value. maskFunction(MaskSupplier<S, T>) - Method in class qupath.lib.experimental.pixels.Parameters.Builder. Function used to lazily create a mask corresponding to the image for a specified ROI. maskImageNames - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; maskImageNamesProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request that image names are hidden within the user interface. maskObject(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. maskObjectAndSplit(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. maskSupplier(MaskSupplier<S, T>) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set the mask supplier. MaskSupplier<S,T> - Interface in qupath.lib.experimental.pixels. A functional interface for supplying a mask corresponding to an image. MATCH_VIEWER_RESOLUTIONS - Variable in class qupath.lib.gui.actions.ViewerActions;  ; matchByID(Collection<? extends PathObject>, Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Match objects accordin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:672934,mask,maskObject,672934,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['mask'],['maskObject']
Availability,".servers.LabeledImageServer.Builder. Use annotations for labels. useCalibratedLocationStringProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Show the cursor location on a viewer in calibrated units, rather than pixels. useCellNuclei() - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Use cells rather than annotations for labels, requesting the nucleus ROI where available. useCells() - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Use cells rather than annotations for labels. useColorLUTs() - Method in class qupath.lib.display.ImageDisplay. The opposite of ImageDisplay.useGrayscaleLuts(). useCompiled() - Method in class qupath.lib.scripting.ScriptParameters. Request that any script should be compiled before being evaluated, ; and previously compiled versions reused when possible. useCompiled(boolean) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Request that the script is compiled before being evaluated, ; or a previously compiled version is used where available. useCuda() - Static method in class qupath.opencv.dnn.DnnTools. Returns true if CUDA is available and requested. useDetections() - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Use detections rather than annotations for labels. useExtensions - Variable in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension.BioFormatsPreferences;  ; useFilter(Predicate<PathObject>) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Use a custom method of selecting objects for inclusion. useGrayscaleLutProperty() - Method in class qupath.lib.display.ImageDisplay. Property that specifies whether grayscale lookup tables should be preferred to color lookup tables. useGrayscaleLuts() - Method in class qupath.lib.display.ImageDisplay. Get the value of ImageDisplay.useGrayscaleLutProperty(). useInstanceLabels() - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Request",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1071767,avail,available,1071767,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,".servers.TileRequest. public class TileRequest; extends Object; A wrapper for a RegionRequest, useful to precisely specify image tiles at a particular resolution.; ; Why?; ; Because downsamples can be defined with floating point precision, and are not always unambiguous when ; calculated as the ratios of pyramid level dimensions (i.e. different apparent horizontal and vertical scaling), ; a RegionRequest is too fuzzy a way to refer to a specific rectangle of pixels from a specific pyramid level. ; Rounding errors can easily occur, and different image readers might respond differently to the same request.; ; Consequently, TileRequests provide a means to reproducibly define coordinates at pyramid levels and not only ; the full resolution image space. They wrap a RegionRequest, because this is still used for caching purposes. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static TileRequest; createInstance(String path,; int level,; double downsample,; ImageRegion tileRegion). Create a new tile request for a specified region, downsample and resolution level. static TileRequest; createInstance(ImageServer<?> server,; int level,; ImageRegion tileRegion). Create a new tile request for a specified region and resolution level of an image. boolean; equals(Object obj);  ; double; getDownsample(). Get the downsample value for this tile. int; getImageHeight(). Get the height of the bounding box for this tile in the full resolution image. ImagePlane; getImagePlane(). Get the ImagePlane for this request. int; getImageWidth(). Get the width of the bounding box for this tile in the full resolution image. int; getImageX(). Get the x-coordinate of the bounding box for this tile in the full resolution image. int; getImageY(). Get the y-coordinate of the bounding box for this tile in the full resolution image. int; getLevel(). Get the resolution level. ImagePlane; getPlane(). Deprecated.; v0.4.0 use ge",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TileRequest.html:1451,down,downsample,1451,javadoc/docs/qupath/lib/images/servers/TileRequest.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TileRequest.html,1,['down'],['downsample']
Availability,"/1+/2+/3+ based on a single (usually intensity-based) measurement. CellIntensityClassificationCommand(QuPathGUI) - Constructor for class qupath.process.gui.commands.CellIntensityClassificationCommand. Constructor. cells() - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the filter to accept cell objects only. CELLS - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept cells. CellTools - Class in qupath.lib.objects. Helper class for working with PathObjects that represent cells. CellTools() - Constructor for class qupath.lib.objects.CellTools;  ; CENTER - Enum constant in enum class qupath.lib.objects.utils.Tiler.TileAlignment;  ; CENTER_LEFT - Enum constant in enum class qupath.lib.objects.utils.Tiler.TileAlignment;  ; CENTER_RIGHT - Enum constant in enum class qupath.lib.objects.utils.Tiler.TileAlignment;  ; centerImage() - Method in class qupath.lib.gui.viewer.QuPathViewer. Center the current image in the viewer, while keeping the same downsample factor. centerROI(ROI) - Method in class qupath.lib.gui.viewer.QuPathViewer. Center the specified ROI in the viewer. centroidDistancePredicate(double, boolean) - Static method in class qupath.lib.analysis.DelaunayTools. BiPredicate that returns true for objects with ROI centroids within a specified distance. centroids() - Method in class qupath.lib.analysis.DelaunayTools.Builder. Specify that the triangulation should be based on ROI centroids. centroids(Collection<? extends PathObject>) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Plot centroids for the specified objects in pixel units. centroids(Collection<? extends PathObject>, PixelCalibration) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Plot centroids for the specified objects using a fixed pixel calibration. CENTROIDS - Enum constant in enum class qupath.lib.gui.viewer.OverlayOptions.DetectionDisplayMode. Show only detection centroids, not boundaries.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:87527,down,downsample,87527,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['down'],['downsample']
Availability,"0, or invalid). getGamma; public double getGamma(); Get the gamma value used for this viewer. Returns:. setGamma; public void setGamma(double gamma); Set the gamma value for this viewer.; Note that if the property is bound (as it is by default, the method does not; change the gamma value but rather logs a warning that viewer.gammaProperty().unbind(); should be called first. Parameters:; gamma - . gammaProperty; public DoubleProperty gammaProperty(); Get the gamma property for this viewer.; By default, this is bound to PathPrefs.viewerGammaProperty(). Returns:; See Also:. getGamma(); setGamma(double). getROIEditor; public RoiEditor getROIEditor(); Get the RoiEditor used by this viewer. Returns:. getImageDisplay; public ImageDisplay getImageDisplay(); Get the ImageDisplay object used to determine how the image is converted to RGB for display. Returns:. componentContains; protected boolean componentContains(double x,; double y). setDownsampleFactor; public void setDownsampleFactor(double downsampleFactor); Set the downsample factor for this viewer. Parameters:; downsampleFactor - . getThumbnail; public BufferedImage getThumbnail(); Get a thumbnail representing the image as displayed by this viewer. Returns:. getAllThumbnails; public List<BufferedImage> getAllThumbnails(); Get thumbnails for all z-slices & time points. Returns:. getRGBThumbnail; public BufferedImage getRGBThumbnail(); Get a thumbnail representing the image as displayed by this viewer.; ; Note: This will be a color (aRGB) image, with any color transforms applied -; therefore should not be used to extract 'original' pixel values. Returns:. setDownsampleFactor; public void setDownsampleFactor(double downsampleFactor,; double cx,; double cy); Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards.; The purpose is to make it possible to zoom in/out while keeping the cursor focussed on a particular location.; ; The specified downsample factor will au",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:28505,down,downsampleFactor,28505,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,2,['down'],"['downsample', 'downsampleFactor']"
Availability,"0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.objects; Class PathRootObject. java.lang.Object; qupath.lib.objects.PathObject; qupath.lib.objects.PathRootObject. All Implemented Interfaces:; Externalizable, Serializable. public class PathRootObject; extends PathObject; The root object used at the base of a PathObjectHierarchy.; ; This doesn't have a ROI, and can't have its PathClass set. Author:; Pete Bankhead; See Also:. Serialized Form. Constructor Summary; Constructors. Constructor; Description; PathRootObject();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getClassProbability(). Request the classification probability, or Double.NaN if no probability is available. PathClass; getPathClass(). Get the classification of the object. ROI; getROI(). Get the region of interest (ROI) for the object. boolean; isEditable(). The root object is never locked. boolean; isRootObject(). Returns true if the object is the 'root' of an object hierarchy. void; setPathClass(PathClass pathClass,; double classProbability). Set the classification of the object, specifying a classification probability. String; toString();  . Methods inherited from class qupath.lib.objects.PathObject; addChildObject, addChildObjects, addPathObject, addPathObjects, clearChildObjects, clearMetadataMap, clearPathObjects, createEmptyMeasurementList, getChildObjects, getChildObjects, getChildObjectsAsArray, getClassifications, getColor, getColorRGB, getDescendantObjects, getDisplayedName, getID, getLevel, getMeasurementList, getMeasurements, getMetadata, getName, getParent, getUnmodifiableMetadataMap, hasChildObjects, hasChildren, hasMeasurements, hasROI, isAnnotation, isCell",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathRootObject.html:1033,avail,available,1033,javadoc/docs/qupath/lib/objects/PathRootObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathRootObject.html,1,['avail'],['available']
Availability,"0; See Also:. readRegion(double, int, int, int, int, int, int); readRegion(double, int, int, int, int); readBufferedImage(RegionRequest). readRegion; default T readRegion(double downsample,; int x,; int y,; int width,; int height,; int z,; int t); throws IOException; Read a 2D(+C) image region for a specified z-plane and timepoint.; Coordinates and bounding box dimensions are in pixel units, at the full image resolution ; (i.e. when downsample = 1).; ; All channels are always returned. Parameters:; downsample - downsample factor for the region; x - x coordinate of the top left of the region bounding box; y - y coordinate of the top left of the region bounding box; width - bounding box width; height - bounding box height; z - index for the z-position; t - index for the timepoint; Returns:; pixels for the region being requested; Throws:; IOException; Since:; v0.4.0; See Also:. readRegion(RegionRequest). readRegion; default T readRegion(double downsample,; int x,; int y,; int width,; int height); throws IOException; Read a 2D(+C) image region from the default ImagePlane (i.e. z and t are 0).; Coordinates and bounding box dimensions are in pixel units, at the full image resolution ; (i.e. when downsample = 1).; ; All channels are always returned. Parameters:; downsample - downsample factor for the region; x - x coordinate of the top left of the region bounding box; y - y coordinate of the top left of the region bounding box; width - bounding box width; height - bounding box height; Returns:; pixels for the region being requested; Throws:; IOException; Since:; v0.4.0; See Also:. readRegion(RegionRequest); readRegion(double, int, int, int, int, int, int). getServerType; String getServerType(); A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. getAssociatedImageList; List<String> getAssociatedImageList(); Get a list of 'associated images', e.g. thumbnails or slide overview images.; ; Each associated image ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html:10654,down,downsample,10654,javadoc/docs/qupath/lib/images/servers/ImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html,1,['down'],['downsample']
Availability,"55; only the lower 8 bits are used.; ; Warning! Note the order of the input values.; This differs from the (deprecated) method makeRGBA(int, int, int, int). Parameters:; a - ; r - ; g - ; b - ; Returns:; packed ARGB value; See Also:. packClippedARGB(int, int, int, int). packClippedARGB; public static int packClippedARGB(int a,; int r,; int g,; int b); Make a packed ARGB value from specified input values, clipping to the range 0-255.; ; Input a, r, g, and b should be in the range 0-255, but if they are not they are clipped to the closest valid value.; ; Warning! Note the order of the input values.; This differs from the (deprecated) method makeRGBA(int, int, int, int). Parameters:; a - ; r - ; g - ; b - ; Returns:; packed ARGB value; See Also:. packARGB(int, int, int, int). do8BitRangeCheck; public static int do8BitRangeCheck(int v); Clip an input value to be an integer in the range 0-255. Parameters:; v - ; Returns:. do8BitRangeCheck; public static int do8BitRangeCheck(float v); Clip an input value to be an integer in the range 0-255 (with rounding down). Parameters:; v - ; Returns:. do8BitRangeCheck; public static int do8BitRangeCheck(double v); Clip an input value to be an integer in the range 0-255 (with rounding down). Parameters:; v - ; Returns:. alpha; public static int alpha(int argb); Extract the 8-bit alpha value from a packed ARGB value. Parameters:; argb - ; Returns:. red; public static int red(int rgb); Extract the 8-bit red value from a packed RGB value. Parameters:; rgb - ; Returns:. green; public static int green(int rgb); Extract the 8-bit green value from a packed RGB value. Parameters:; rgb - ; Returns:. blue; public static int blue(int rgb); Extract the 8-bit blue value from a packed RGB value. Parameters:; rgb - ; Returns:. makeScaledRGB; public static int makeScaledRGB(int rgb,; double scale); Scale the RGB channels for a color by a fixed amount.; ; This is useful for brightening/darkening an input color. Parameters:; rgb - ; scale - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/ColorTools.html:9240,down,down,9240,javadoc/docs/qupath/lib/common/ColorTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/ColorTools.html,1,['down'],['down']
Availability,":. createFullImageAnnotation(boolean, int, int); createFullImageAnnotation(ImageData, boolean). createFullImageAnnotation; public static PathObject createFullImageAnnotation(boolean setSelected,; int z,; int t); Create an annotation around the full image for the current image, on the specified z-slice and timepoint. Parameters:; setSelected - if true, set the annotation to be selected when it is created; z - z-slice (0-based index); t - timepoint (0-based index); Returns:; the annotation that was created, or null if no image data was available; Since:; v0.4.0; See Also:. createFullImageAnnotation(ImageData, boolean, int, int). createFullImageAnnotation; public static PathObject createFullImageAnnotation(ImageData<?> imageData,; boolean setSelected); Create an annotation around the full image for the specified image, on the default (first) z-slice and timepoint. Parameters:; imageData - the image data for which the annotation should be added; setSelected - if true, set the annotation to be selected when it is created; Returns:; the annotation that was created, or null if no image data was available; Since:; v0.4.0. createFullImageAnnotation; public static PathObject createFullImageAnnotation(ImageData<?> imageData,; boolean setSelected,; int z,; int t); Create an annotation around the full image for the specified image, on the specified z-slice and timepoint. Parameters:; imageData - the image data for which the annotation should be added; setSelected - if true, set the annotation to be selected when it is created; z - z-slice (0-based index); t - timepoint (0-based index); Returns:; the annotation that was created, or null if no image data was available; Since:; v0.4.0. buildServer; @Deprecated; public static <T> ImageServer<T> buildServer(String path,; Class<T> cls,; String... args); throws IOException; Deprecated.; In the usual case where BufferedImage is the class, use buildServer(String, String...) instead ; because it handles default args. Build an ImageServer ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:72927,avail,available,72927,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['avail'],['available']
Availability,":. getCurrentServerPath; public static String getCurrentServerPath(); Get the path to the ImageServer of the current ImageData. Returns:; See Also:. getCurrentImageData(). getCurrentImageData; public static ImageData<BufferedImage> getCurrentImageData(); Get the path to the current ImageData.; ; This returns getBatchImageData() if it is not null; otherwise, it returns ; the default image data last set through setDefaultImageData(ImageData). Returns:; See Also:. getBatchImageData(). getProject; public static Project<BufferedImage> getProject(); Get the current project.; ; This returns getBatchProject() if it is not null; otherwise, it returns ; the default project last set through setDefaultProject(Project). Returns:; See Also:. getBatchProject(). resolvePath; public static String resolvePath(String path); throws IllegalArgumentException; Resolve a path, replacing any placeholders. Currently, this means only PROJECT_BASE_DIR. Parameters:; path - ; Returns:; Throws:; IllegalArgumentException - if PROJECT_BASE_DIR is used but no project is available. buildFilePath; public static String buildFilePath(String first,; String... more); throws IllegalArgumentException; Build a file path from multiple components.; A common use of this is; ; String path = buildFilePath(PROJECT_BASE_DIR, ""export"");; ; although that can now be replaced by buildPathInProject(String...). Parameters:; first - the first component of the file path; more - additional path components to append; Returns:; Throws:; IllegalArgumentException - if PROJECT_BASE_DIR is used but no project is available; See Also:. buildPathInProject(String...); makePathInProject(String...); makeFileInProject(String...). buildPathInProject; public static String buildPathInProject(String... more); throws IllegalArgumentException; Build a file or directory path relative to the current project, but do not make ; any changes on the file system.; This is equivalent to calling; ; String path = buildFilePath(PROJECT_BASE_DIR, more);; .",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:51687,avail,available,51687,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['avail'],['available']
Availability,":. outputHandler; public PixelProcessor.Builder<S,T,U> outputHandler(OutputHandler<S,T,U> outputHandler); Set the output handler. This is optional, for cases where the processor does not make updates to the; parent object itself. Parameters:; outputHandler - ; Returns:. processor; public PixelProcessor.Builder<S,T,U> processor(Processor<S,T,U> processor); Set the processor. This is required to do any interesting work. Parameters:; processor - ; Returns:. padding; public PixelProcessor.Builder<S,T,U> padding(Padding padding); Set the padding to use when extracting regions.; Note that this is defined in pixels at the full image resolution, not the downsampled resolution. Parameters:; padding - ; Returns:. padding; public PixelProcessor.Builder<S,T,U> padding(int size); Set the padding to use when extracting regions, using a symmetric padding.; Note that this is defined in pixels at the full image resolution, not the downsampled resolution. Parameters:; size - ; Returns:. downsample; public PixelProcessor.Builder<S,T,U> downsample(double downsample); Set the downsample factor to use with requesting image regions. Parameters:; downsample - ; Returns:. pixelSize; public PixelProcessor.Builder<S,T,U> pixelSize(double pixelSize); Set the requested pixel size to use with requesting image regions.; This will be converted to a downsample factor based on the image calibration. Parameters:; pixelSize - ; Returns:. tiler; public PixelProcessor.Builder<S,T,U> tiler(Tiler tiler); Set a tiler to use. This is required for large regions, so that the image can be processed in tiles. Parameters:; tiler - ; Returns:. tile; public PixelProcessor.Builder<S,T,U> tile(int tileWidth,; int tileHeight); Set a default tiler to use, with a specified tile size. Parameters:; tileWidth - ; tileHeight - ; Returns:. merger; public PixelProcessor.Builder<S,T,U> merger(ObjectMerger merger); Set a merger to use. This is currently only relevant when using a tiler. Parameters:; merger - ; Returns:; See Als",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html:3926,down,downsample,3926,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,1,['down'],['downsample']
Availability,": ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class Parameters<S,T>. java.lang.Object; qupath.lib.experimental.pixels.Parameters<S,T>. Type Parameters:; S - the image type; T - the mask type. public class Parameters<S,T>; extends Object; Parameters for use with a PixelProcessor. Since:; v0.5.0. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Parameters.Builder<S,T>. Builder class for Parameters. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static <S,; T> Parameters.Builder<S,T>; builder(). Create a new builder for parameters. S; getImage(). Get the image to process. ImageData<BufferedImage>; getImageData(). Get the image data. T; getMask(). Get the mask associated with the main ROI or the parent object, or null if no mask is available. T; getMask(ROI roi). Get the mask associated with any ROI, or null if no mask is available. PathObject; getParent(). Get the parent object. PathObject; getParentOrProxy(). Get the parent, or a proxy parent if one has been specified. RegionRequest; getRegionRequest(). Get the region request. ImageServer<BufferedImage>; getServer(). Get the server. TileRequest; getTileRequest(). Get the tile request, if available. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getImageData; public ImageData<BufferedImage> getImageData(); Get the image data. Returns:. getServer; public ImageServer<BufferedImage> getServer(); Get the server. This is often the accessed from getImageData(), but in some cases it may be different; (e.g. if the processing should be applied to a transformed image). Returns:. getRegionRequest; public RegionRequest getRegionRequest(); Get the region request. Returns:. getTileRequest; public TileRequest getTileRequest(); Get the t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html:1208,mask,mask,1208,javadoc/docs/qupath/lib/experimental/pixels/Parameters.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html,3,"['avail', 'mask']","['available', 'mask']"
Availability,": ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class SparseImageServer.SparseImageServerManager. java.lang.Object; qupath.lib.images.servers.SparseImageServer.SparseImageServerManager. All Implemented Interfaces:; AutoCloseable. Enclosing class:; SparseImageServer. public static class SparseImageServer.SparseImageServerManager; extends Object; implements AutoCloseable; Helper class for SparseImageServers, capable of returning the appropriate ImageServer for ; different ImageRegions and different resolutions.; ; This also allows serialization/deserialization with JSON. Constructor Summary; Constructors. Constructor; Description; SparseImageServerManager();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Collection<ImageRegion>; getRegions(). Get an unmodifiable collection for all available regions. ImageServer<BufferedImage>; getServer(ImageRegion region,; double downsample). Request the server for a specific downsample. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. SparseImageServerManager; public SparseImageServerManager(). Method Details. getRegions; public Collection<ImageRegion> getRegions(); Get an unmodifiable collection for all available regions.; ; This can be used to iterate through regions to check which overlap a request. Returns:. getServer; public ImageServer<BufferedImage> getServer(ImageRegion region,; double downsample); throws IOException; Request the server for a specific downsample.; ; Note that this does not aim to return a server for any arbitrary region; rather, ; a server must exist for the specified region and downsample, otherwise this will return null. Parameters:; region - specified region to which the server should correspond (must be found within getRegions()); downsample - sp",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/SparseImageServer.SparseImageServerManager.html:1294,down,downsample,1294,javadoc/docs/qupath/lib/images/servers/SparseImageServer.SparseImageServerManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/SparseImageServer.SparseImageServerManager.html,1,['down'],['downsample']
Availability,"; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class Parameters.Builder<S,T>. java.lang.Object; qupath.lib.experimental.pixels.Parameters.Builder<S,T>. Type Parameters:; S - the image type; T - the mask type. Enclosing class:; Parameters<S,T>. public static class Parameters.Builder<S,T>; extends Object; Builder class for Parameters. Constructor Summary; Constructors. Constructor; Description; Builder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Parameters<S,T>; build(). Build the parameters. Parameters.Builder<S,T>; imageData(ImageData<BufferedImage> imageData). Set the image data. Parameters.Builder<S,T>; imageFunction(ImageSupplier<S> function). Function used ot lazily read the image. Parameters.Builder<S,T>; maskFunction(MaskSupplier<S,T> function). Function used to lazily create a mask corresponding to the image for a specified ROI. Parameters.Builder<S,T>; parent(PathObject parent). Set the parent object. Parameters.Builder<S,T>; parentProxy(PathObject parentProxy). Optionally set a temporary object to use as a parent. Parameters.Builder<S,T>; region(RegionRequest region). Specify the region to use for processing. Parameters.Builder<S,T>; server(ImageServer<BufferedImage> server). Set the server. Parameters.Builder<S,T>; tile(TileRequest tile). Specify the tile relevant for processing. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(). Method Details. imageData; public Parameters.Builder<S,T> imageData(ImageData<BufferedImage> imageData); Set the image data. Parameters:; imageData - ; Returns:. server; public Parameters.Builder<S,T> server(ImageServer<BufferedImage> s",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.Builder.html:1109,mask,maskFunction,1109,javadoc/docs/qupath/lib/experimental/pixels/Parameters.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.Builder.html,1,['mask'],['maskFunction']
Availability,"; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.overlays; Class GridOverlay. java.lang.Object; qupath.lib.gui.viewer.overlays.AbstractOverlay; qupath.lib.gui.viewer.overlays.GridOverlay. All Implemented Interfaces:; PathOverlay. public class GridOverlay; extends AbstractOverlay; An overlay used to show a (counting) grid on top of an image. Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; AbstractOverlay.LocationStringFunction. Constructor Summary; Constructors. Constructor; Description; GridOverlay(OverlayOptions overlayOptions). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; isVisible(). Check overlay visibility status. void; paintOverlay(Graphics2D g,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GridOverlay; public GridOverlay(OverlayOptions overlayOptions); Constructor. Parameters:; overlayOptions - overlay options to control the grid display. Method Details. isVisible; public boolean isVisible(); Description copied from class: AbstractOverlay; Check overlay visibility status. If isVisible() returns false,; then calls to paintOverlay() will not do anything. Overrides:; isVisible in class AbstractOverlay; Returns:. paintOverlay; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/GridOverlay.html:1172,down,downsampleFactor,1172,javadoc/docs/qupath/lib/gui/viewer/overlays/GridOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/GridOverlay.html,1,['down'],['downsampleFactor']
Availability,"; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions; Class InfoMessage. java.lang.Object; qupath.lib.gui.actions.InfoMessage. public class InfoMessage; extends Object; An informative message that should be shown to the user. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<Number>; count. Read only property containing any count associated with the text (may be null). ReadOnlyStringProperty; text. Read only property containing the message text. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; InfoMessage.MessageType. The type of message, which can be used for styling. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<Number>; countProperty(). Read only property containing any count associated with the text (may be null). static InfoMessage; error(String text). Create an error message with static text. static InfoMessage; error(String text,; int count). Create an error message with static text and a count. static InfoMessage; error(ObservableNumberValue count). Create a error message to show a count of errors. static InfoMessage; error(ObservableValue<String> text). Create an error message. static InfoMessage; error(ObservableValue<String> text,; ObservableNumberValue count). Create an error message with a count. int; getCount(). Counts associated with the message, or -1 if the count is null. InfoMessage.MessageType; getMessageType(). Type of the message. String; getText(). Text of the message. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(String text,; int count). Create an information message with static text and a count. static InfoMessage; info(ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; info(ObservableValue<String> text). Create ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:1248,error,error,1248,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,1,['error'],['error']
Availability,"; Create a request that contains the pixels of the specified ROI.; This is calculated using the ROI bounding box. Parameters:; path - ; downsample - ; roi - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; Collection<? extends ROI> rois); Create a request that contains the pixels of the specified ROIs.; This is calculated using the ROI bounding boxes. Parameters:; path - ; downsample - ; rois - ; Returns:; Throws:; IllegalArgumentException - if the ROIs do not all fall on the same ImagePlane. createInstance; public static RegionRequest createInstance(String path,; RegionRequest request); Create a request that matches another request but with a different path. Parameters:; path - ; request - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; ImageRegion region); Create a request corresponding to a specified ImageRegion.; This may also be used to construct a request based on an existing request, but changing either the path or downsample. Parameters:; path - ; downsample - ; region - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; int x,; int y,; int width,; int height,; int z,; int t); Create a request for a region specified in terms of its bounding box, z-slice and time point. Parameters:; path - ; downsample - ; x - ; y - ; width - ; height - ; z - ; t - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; int x,; int y,; int width,; int height,; ImagePlane plane); Create a request for a region specified in terms of its bounding box and ImagePlane. Parameters:; path - ; downsample - ; x - ; y - ; width - ; height - ; plane - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; int x,; int y,; int width,; int height); Create a request for a region specified in terms of its bounding box, using the fir",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html:6723,down,downsample,6723,javadoc/docs/qupath/lib/regions/RegionRequest.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html,1,['down'],['downsample']
Availability,"; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class PixelProcessor.Builder<S,T,U>. java.lang.Object; qupath.lib.experimental.pixels.PixelProcessor.Builder<S,T,U>. Type Parameters:; S - the image type; T - the mask type; U - the output type. Enclosing class:; PixelProcessor<S,T,U>. public static class PixelProcessor.Builder<S,T,U>; extends Object; Builder class for a PixelProcessor. Constructor Summary; Constructors. Constructor; Description; Builder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; PixelProcessor<S,T,U>; build(). Build a PixelProcessor from the current state of the builder. PixelProcessor.Builder<S,T,U>; downsample(double downsample). Set the downsample factor to use with requesting image regions. PixelProcessor.Builder<S,T,U>; imageSupplier(ImageSupplier<S> imageSupplier). Set the image supplier. PixelProcessor.Builder<S,T,U>; maskSupplier(MaskSupplier<S,T> maskSupplier). Set the mask supplier. PixelProcessor.Builder<S,T,U>; merger(ObjectMerger merger). Set a merger to use. PixelProcessor.Builder<S,T,U>; mergeSharedBoundaries(double threshold). Convenience method to set a merger that merges objects based on their shared boundary. PixelProcessor.Builder<S,T,U>; outputHandler(OutputHandler<S,T,U> outputHandler). Set the output handler. PixelProcessor.Builder<S,T,U>; padding(int size). Set the padding to use when extracting regions, using a symmetric padding. PixelProcessor.Builder<S,T,U>; padding(Padding padding). Set the padding to use when extracting regions. PixelProcessor.Builder<S,T,U>; pixelSize(double pixelSize). Set the requested pixel size to use with requesting image regions. PixelProcessor.Builder<S,T,U>; processor(Processor<S,T,U> processor). Set the processor. PixelProcessor.Builder<S,T,U>; tile(int tileWidth,; int tileHeight). Set a default tiler to use, with a specified tile size. PixelProcessor.Builder<S,T,U>",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html:1245,mask,maskSupplier,1245,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,2,['mask'],['maskSupplier']
Availability,"; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class Parameters.Builder<S,T>. java.lang.Object; qupath.lib.experimental.pixels.Parameters.Builder<S,T>. Type Parameters:; S - the image type; T - the mask type. Enclosing class:; Parameters<S,T>. public static class Parameters.Builder<S,T>; extends Object; Builder class for Parameters. Constructor Summary; Constructors. Constructor; Description; Builder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Parameters<S,T>; build(). Build the parameters. Parameters.Builder<S,T>; imageData(ImageData<BufferedImage> imageData). Set the image data. Parameters.Builder<S,T>; imageFunction(ImageSupplier<S> function). Function used ot lazily read the image. Parameters.Builder<S,T>; maskFunction(MaskSupplier<S,T> function). Function used to lazily create a mask corresponding to the image for a specified ROI. Parameters.Builder<S,T>; parent(PathObject parent). Set the parent object. Parameters.Builder<S,T>; parentProxy(PathObject parentProxy). Optionally set a temporary object to use as a parent. Parameters.Builder<S,T>; region(RegionRequest region). Specify the region to use for processing. Parameters.Builder<S,T>; server(ImageServer<BufferedImage> server). Set the server. Parameters.Builder<S,T>; tile(TileRequest tile). Specify the tile relevant for processing. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(). Method Details. imageData; public Parameters.Builder<S,T> imageData(ImageData<BufferedImage> imageData); Set the image data. Parameters:; imageData - ; Returns:. server; public Parameters.Builder<S,T> server(ImageServer<BufferedImage> server); Set the server. This is optional, for cases when processing sh",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.Builder.html:1184,mask,mask,1184,javadoc/docs/qupath/lib/experimental/pixels/Parameters.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.Builder.html,1,['mask'],['mask']
Availability,"; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.overlays; Interface PathOverlay. All Known Implementing Classes:; AbstractImageOverlay, AbstractOverlay, BufferedImageOverlay, GridOverlay, HierarchyOverlay, PixelClassificationOverlay, TMAGridOverlay. public interface PathOverlay; Interface defining an overlay to paint on top of a viewer. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default String; getLocationString(ImageData<BufferedImage> imageData,; double x,; double y,; int z,; int t). Get a location string to display when showing a specified image. void; paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. Method Details. paintOverlay; void paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely); Paint the overlay to a graphics object. The graphics object will have a transform applied to it, so the painting should; make use of coordinates in the original image space. Parameters:; g2d - Graphics2D object to which drawing should be performed. This should have any transform already applied to it.; imageRegion - The maximum image region that should be shown.; downsampleFactor - The downsample factor at which the overlay will be viewed. There is no need for rescaling according to; this value since it has already been applied to the Graphics2D as part of its AffineTransform, however; it may optionally be needed within the method e.g. to correct line thicknesses.; imageData - the ImageData associated with this overlay. If the overlay is being displayed on a viewer, this is the ImageData open ; within the viewer. Not all overlays require this, and it may be null.; paintCompletely - If true, the method is permitted to return",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PathOverlay.html:1250,down,downsampleFactor,1250,javadoc/docs/qupath/lib/gui/viewer/overlays/PathOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PathOverlay.html,1,['down'],['downsampleFactor']
Availability,"; Returns:; this exporter; See Also:. requestedPixelSize(double). requestedPixelSize; public TileExporter requestedPixelSize(double pixelSize); Define resolution as a pixel size in calibrated units. The actual units depend upon those stored within the server. Parameters:; pixelSize - ; Returns:; this exporter. includePartialTiles; public TileExporter includePartialTiles(boolean includePartialTiles); Specify whether incomplete tiles at image boundaries should be included.; ; If true, then when tiling the entire image some tiles may not have the specified tile width or height, ; or alternatively when creating tiles based upon object centroids then some zero-padding may be required ; to ensure the center is preserved along with the tile dimensions.; Default is false. Parameters:; includePartialTiles - ; Returns:; this exporter; See Also:. tileSize(int, int); parentObjects(Predicate); parentObjects(Collection); useROIBounds(boolean). region; public TileExporter region(RegionRequest region); Define the region to be processed, including downsample. Default is the full image. Parameters:; region - ; Returns:; this exporter; See Also:. region(ImageRegion). region; public TileExporter region(ImageRegion region); Define the region to be processed. Default is the full image. Parameters:; region - ; Returns:; this exporter; See Also:. region(RegionRequest). zRange; public TileExporter zRange(int minZ,; int maxZ); Define the range of Z-slices to process. Default is all Z-slices (0 to nZSlices).; Note: the range is from minZ (included) to maxZ (excluded). -1 can be ; used for maxZ to process all Z-slices without having to indicate the exact max number. Parameters:; minZ - the lower value (included); maxZ - the higher value (excluded); Returns:; this exporter. tRange; public TileExporter tRange(int minT,; int maxT); Define the range of timepoints to process. Default is all timepoints (0 to nTimepoints).; Note: the range is from minT (included) to maxT (excluded). -1 can be ; used f",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/TileExporter.html:8340,down,downsample,8340,javadoc/docs/qupath/lib/images/writers/TileExporter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/TileExporter.html,1,['down'],['downsample']
Availability,"; Static helper method to write an image using Bio-Formats with the specified compression.; This is primarily intended for saving whole slide images as pyramidal OME-TIFF, but other formats are supported. Parameters:; server - ; path - ; compression - ; Throws:; FormatException; IOException. writeImage; public static void writeImage(ImageServer<BufferedImage> server,; String path,; OMEPyramidWriter.CompressionType compression,; ImageRegion region); throws FormatException,; IOException; Static helper method to write an image region using Bio-Formats with the specified compression.; If region is null, the entire image will be written. If region is not null, it defines the bounding box of the exported ; pixels in addition to the z-slice and timepoint. Parameters:; server - image to write; path - path to output file; compression - image compression method; may be null to use the default compression; region - the region to export. If this is a RegionRequest that defines a downsample other than the default for the server, this downsample will be used.; Throws:; FormatException; IOException. writeImage; public static void writeImage(ImageServer<BufferedImage> server,; String path,; OMEPyramidWriter.CompressionType compression,; ImageRegion region,; boolean allZ,; boolean allT); throws FormatException,; IOException; Static helper method to write an image using Bio-Formats for a defined region with the specified compression, optionally including all ; z-slices or timepoints.; This is intended primarily to write (possibly pyramidal) OME-TIFF images; other formats may support fewer image types and dimensions. Parameters:; server - image to write; path - path to output file; compression - image compression method; may be null to use the default compression; region - the region to export. If this is a RegionRequest that defines a downsample other than the default for the server, this downsample will be used.; allZ - if true, export all z-slices otherwise export slice defined by ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.html:5597,down,downsample,5597,javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.html,2,['down'],['downsample']
Availability,"; T defaultChoice). Deprecated.; Show a choice dialog with a collection of choices (selection from ComboBox or similar). static <T> T; showChoiceDialog(String title,; String message,; T[] choices,; T defaultChoice). Deprecated.; Show a choice dialog with an array of choices (selection from ComboBox or similar). static boolean; showConfirmDialog(String title,; String text). Deprecated.; Show a confirm dialog (OK/Cancel). static boolean; showConfirmDialog(String title,; Node node). Deprecated.; Show a confirm dialog (OK/Cancel). static void; showErrorMessage(String title,; String message). Deprecated.; Show an error message. static void; showErrorMessage(String title,; Throwable e). Deprecated.; Show an error message, displaying the localized message of a Throwable. static void; showErrorMessage(String title,; Node node). Deprecated.; Show an error message, with the content defined within a Node. static void; showErrorNotification(String title,; String message). Deprecated.; Show an error notification. static void; showErrorNotification(String title,; Throwable e). Deprecated.; Show an error notification, displaying the localized message of a Throwable. static void; showInfoNotification(String title,; String message). Deprecated.; Show an info notification. static Double; showInputDialog(String title,; String message,; Double initialInput). Deprecated.; Show an input dialog requesting a numeric value. static String; showInputDialog(String title,; String message,; String initialInput). Deprecated.; Show an input dialog requesting a String input. static boolean; showMessageDialog(String title,; String message). Deprecated.; Show a standard message dialog. static boolean; showMessageDialog(String title,; Node node). Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. static void; showNoImageError(String title). Deprecated.; Show an error message that no image is available. static void; showNoProjectError(String title). Deprecated",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:3527,error,error,3527,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['error'],['error']
Availability,"; double downsample,; Collection<? extends ROI> rois); Create a request that contains the pixels of the specified ROIs.; This is calculated using the ROI bounding boxes. Parameters:; path - ; downsample - ; rois - ; Returns:; Throws:; IllegalArgumentException - if the ROIs do not all fall on the same ImagePlane. createInstance; public static RegionRequest createInstance(String path,; RegionRequest request); Create a request that matches another request but with a different path. Parameters:; path - ; request - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; ImageRegion region); Create a request corresponding to a specified ImageRegion.; This may also be used to construct a request based on an existing request, but changing either the path or downsample. Parameters:; path - ; downsample - ; region - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; int x,; int y,; int width,; int height,; int z,; int t); Create a request for a region specified in terms of its bounding box, z-slice and time point. Parameters:; path - ; downsample - ; x - ; y - ; width - ; height - ; z - ; t - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; int x,; int y,; int width,; int height,; ImagePlane plane); Create a request for a region specified in terms of its bounding box and ImagePlane. Parameters:; path - ; downsample - ; x - ; y - ; width - ; height - ; plane - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; int x,; int y,; int width,; int height); Create a request for a region specified in terms of its bounding box, using the first z-slice and time point. Parameters:; path - ; downsample - ; x - ; y - ; width - ; height - ; Returns:. overlapsRequest; public boolean overlapsRequest(RegionRequest request); Returns true if the region specified by this request overlaps",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html:6873,down,downsample,6873,javadoc/docs/qupath/lib/regions/RegionRequest.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html,1,['down'],['downsample']
Availability,"; equalTo(String) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification (by name) for objects for which the specified measurement has a value exactly equal to the threshold. equalTo(PathClass) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification for objects for which the specified measurement has a value exactly equal to the threshold. error() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create an error alert dialog. error(String) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text. error(String, int) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text and a count. error(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a error message to show a count of errors. error(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message. error(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with a count. ERROR - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Error or exception. ERROR - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Error logging (only if something goes recognizably wrong). escapeFilePath(String) - Static method in class qupath.lib.common.GeneralTools. Escape backslashes in an absolute file path - useful when scripting. estimateAvailableMemory() - Static method in class qupath.lib.common.GeneralTools. Estimate the current available memory in bytes, based upon the JVM max and the memory currently used. estimateCellBoundary(Geometry, double, double) - Static method in class qupath.lib.objects.CellTools. Estimate a cell boundary using Geometry objects. estimateDownsampleFactor(ImagePlu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:283531,error,error,283531,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['error'],['error']
Availability,"; int depth); Create a 1x1 single-channel Mat with a specific value.; If necessary, clipping or rounding is applied. Parameters:; value - the value to include in the Mat; depth - depth of the image; if a type (including channels) is supplied instead, the channel information is removed.; Returns:; a Mat with one pixel containing the closest value supported by the type. putPixelsUnsigned; public static void putPixelsUnsigned(Mat mat,; byte[] pixels); Set pixels from a byte array.; ; There is no real error checking; it is assumed that the pixel array is in the appropriate format. Parameters:; mat - ; pixels - . putPixelsFloat; public static void putPixelsFloat(Mat mat,; float[] pixels); Set pixels from a float array.; ; There is no real error checking; it is assumed that the pixel array is in the appropriate format. Parameters:; mat - ; pixels - . getCircularStructuringElement; @Deprecated; public static Mat getCircularStructuringElement(int radius); Deprecated.; createDisk(int, boolean) gives more reliable shapes. Create a Mat depicting a circle of the specified radius.; ; Pixels within the circle have the value 1, pixels outside are 0. Parameters:; radius - ; Returns:. createDisk; public static Mat createDisk(int radius,; boolean doMean); Create a disk filter.; This is a rasterized approximation of a filled circle with the specified radius. Parameters:; radius - radius of the disk; must be > 0; doMean - if true, normalize kernel by dividing by the sum of all elements.; If false, all 'inside' elements are 1 and all 'outside' elements are 0.; Returns:; a Mat of size radius*2+1 that depicts a filled circle. invertBinary; public static void invertBinary(Mat matBinary,; Mat matDest); Invert a binary image.; ; Specifically, sets all zero pixels to 255 and all non-zero pixels to 0. Parameters:; matBinary - ; matDest - . extractPixels; public static float[] extractPixels(Mat mat,; float[] pixels); Extract pixels as a float[] array.; . In QuPath v0.2 this would return only th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:26454,reliab,reliable,26454,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html,1,['reliab'],['reliable']
Availability,"; isDefaultStyle(). Check if the default JavaFX style is used. static void; refresh(). Refresh the current style. static ObjectProperty<QuPathStyleManager.StyleOption>; selectedStyleProperty(). Get the current selected style. static void; updateAvailableStyles(). Request that the list of available styles is updated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. availableStyles; public static ObservableList<QuPathStyleManager.StyleOption> availableStylesProperty; Get the current available styles as an observable list.; The list is unmodifiable, since any changes should be made via adding/removing files in UserDirectoryManager.getCssStylesPath(). See Also:. availableStylesProperty(). selectedStyle; public static ObjectProperty<QuPathStyleManager.StyleOption> selectedStyleProperty; Get the current selected style. See Also:. selectedStyleProperty(). availableFonts; public static ObservableList<QuPathStyleManager.Fonts> availableFontsProperty; Get a list of available fonts.; The list is unmodifiable, since this is primarily used to overcome issues with the default font on macOS ; by changing the font family. More fine-grained changes can be made via css. See Also:. availableFontsProperty(). font; public static ObjectProperty<QuPathStyleManager.Fonts> fontProperty; Get the current selected font. See Also:. fontProperty(). Constructor Details. QuPathStyleManager; public QuPathStyleManager(). Method Details. updateAvailableStyles; public static void updateAvailableStyles(); Request that the list of available styles is updated.; It makes sense to call this when a new user directory has been set, so that a check for CSS files ; can be performed. installStyles; public static boolean installStyles(Collection<File> list); Handle installing CSS files (which can be used to style QuPath). Parameters:; list - list of css files; Returns:. refresh; public static void refresh()",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html:3025,avail,availableFonts,3025,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,1,['avail'],['availableFonts']
Availability,"; isSymmetric() - Method in class qupath.lib.regions.Padding. Returns true of the padding is identical on all sides (x1 == x2 == y1 == y2). isThreePlus(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Return true if the name of the class is ""3+"", indicating a weakly-positive staining. isTiff() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Returns true if URI is for a local file known/expected to be a TIFF image. isTile() - Method in class qupath.lib.objects.PathObject. Returns true if this object represents an image tile. isTitle - Variable in class qupath.lib.plugins.parameters.EmptyParameter;  ; isTitle() - Method in class qupath.lib.plugins.parameters.EmptyParameter. Returns true if the parameter should be considered a title. isTMACore() - Method in class qupath.lib.objects.PathObject. Returns true if this object represents a TMA core. isTMADearrayed() - Static method in class qupath.lib.scripting.QP. Returns true if TMA cores are available. isToolSwitchingEnabled() - Method in class qupath.lib.gui.ToolManager. Returns true if the user is able to activate another PathTool, false otherwise. isTrained() - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier;  ; isTrained() - Method in class qupath.opencv.ml.OpenCVClassifiers.DTreesClassifier;  ; isTrained() - Method in class qupath.opencv.ml.OpenCVClassifiers.EMClusterer;  ; isTrained() - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier;  ; isTrained() - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV;  ; isTrained() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier;  ; isTrained() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV;  ; isTrained() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV;  ; isTrained() - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Classifier has already been trained and is r",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:634626,avail,available,634626,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"; setBorderColor(Color color). Set the border color for this viewer. void; setCenterPixelLocation(double x,; double y). Set the image pixel to display in the center of the viewer (using image pixel coordinates at the full-resolution). void; setCursor(Cursor cursor). Set the requested cursor to display in this viewer. void; setCustomPixelLayerOverlay(PathOverlay pathOverlay). Optionally set a custom overlay to use for the pixel layer. void; setDoFasterRepaint(boolean fasterRepaint). Set flag to indicate that repaints should prefer speed over accuracy. void; setDownsampleFactor(double downsampleFactor). Set the downsample factor for this viewer. void; setDownsampleFactor(double downsampleFactor,; double cx,; double cy). Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards. void; setDownsampleFactor(double downsampleFactor,; double cx,; double cy,; boolean clipToMinMax). Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards. void; setGamma(double gamma). Set the gamma value for this viewer. void; setImageData(ImageData<BufferedImage> imageDataNew). Set the current image for this viewer. void; setMagnification(double magnification). Set the downsample factor based upon magnification values. void; setMinimumRepaintSpacingMillis(long repaintSpacingMillis). Prevent frequent repaints (temporarily) by setting a minimum time that must have elapsed; after the previous repaint for a new one to be triggered. void; setRotation(double theta). Set the rotation; angle in radians. void; setSelectedObject(PathObject pathObject). Set selected object in the current hierarchy, without centering the viewer. void; setSelectedObject(PathObject pathObject,; boolean addToSelected). Set selected object in the current hierarchy, without centering the viewer. void; setSpaceDown(boolean spaceDown). Notify this viewer that the isSpaceDown status should be changed. void; setTPo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:11510,down,downsample,11510,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,1,['down'],['downsample']
Availability,"; setMaskImageNames(boolean maskNames). Request that entries return masked image names, rather than the 'true' image names. boolean; setPathClasses(Collection<? extends PathClass> pathClasses). Update the available PathClasses. void; syncChanges(). Save the project. Method Details. getPathClasses; List<PathClass> getPathClasses(); Get an unmodifiable list representing the PathClasses associated with this project. Returns:. getMaskImageNames; boolean getMaskImageNames(); Query whether 'true' or masked image names are being returned. Returns:; See Also:. setMaskImageNames(boolean). setMaskImageNames; void setMaskImageNames(boolean maskNames); Request that entries return masked image names, rather than the 'true' image names.; ; The purpose of this is to support studies where the user ought not to see the image names during analysis, ; reducing the potential for user bias. Parameters:; maskNames - ; See Also:. getMaskImageNames(). setPathClasses; boolean setPathClasses(Collection<? extends PathClass> pathClasses); Update the available PathClasses. Parameters:; pathClasses - ; Returns:; true if the stored values changed, false otherwise. getURI; URI getURI(); Get a URI that can be used when saving/reloading this project. Returns:. getPreviousURI; URI getPreviousURI(); Sometimes projects move (unfortunately). This returns the previous URI, if known - ; which can be helpful for resolving relative paths to images in the event that ; both project and images have moved together. Returns:. getNameFromURI; static String getNameFromURI(URI uri); Extract a usable project name from a URI. Parameters:; uri - ; Returns:. getVersion; String getVersion(); The version string for this project, which can be used to distinguish new and older project ; (which may contain different information).; ; This may be null if the version information is not stored. Returns:. getPath; Path getPath(); Get a path to this project, or null if this project is not on a local file system.; ; If not null, th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/projects/Project.html:4156,avail,available,4156,javadoc/docs/qupath/lib/projects/Project.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/Project.html,1,['avail'],['available']
Availability,"; true if changes should be saved after running the script, false if they should not or if it is unknown. getArgs; public String[] getArgs(); Get an optional array of string arguments passed to the script. Returns:. getWriter; public Writer getWriter(); Get the main writer for script output. Returns:. getErrorWriter; public Writer getErrorWriter(); Get the error writer for script output. Returns:. getDefaultImports; public List<Class<?>> getDefaultImports(); Get default imports that should be included with the script, where possible.; Not all languages may support adding default imports.; ; The purpose of this is to make scripting easier and more intuitive, resembling a ; macro language and without a need for the user to know much about QuPath's classes. Returns:; See Also:. getDefaultStaticImports(). useCompiled; public boolean useCompiled(); Request that any script should be compiled before being evaluated, ; and previously compiled versions reused when possible.; ; This is not always supported, but where it is it may improve performance; if the same script is evaluated many times.; It may also mean that any errors are caught earlier.; . Returns:. doUpdateHierarchy; public boolean doUpdateHierarchy(); Request whether to fire an update event for the object hierarchy, if an image data ; object is available.; ; The purpose of this is to avoid requiring the caller to fire a hierarchy update as ; boilerplate at the end of a script. Returns:. getDefaultStaticImports; public List<Class<?>> getDefaultStaticImports(); Get default static imports that should be included with the script, where possible.; Not all languages may support adding default imports.; ; The purpose of this is to make scripting easier and more intuitive, resembling a ; macro language and without a need for the user to know much about QuPath's classes. Returns:; See Also:. getDefaultImports(). builder; public static ScriptParameters.Builder builder(); Create a new builder for ScriptParameters. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html:5329,error,errors,5329,javadoc/docs/qupath/lib/scripting/ScriptParameters.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html,2,"['avail', 'error']","['available', 'errors']"
Availability,"<PathClass> classifier,; String predictionMeasurement). Apply a classification model to an image patch to classify an object. static List<PathObject>; detect(DetectionModel model,; Mat mat,; RegionRequest request,; IntFunction<PathClass> classifier,; Function<ROI,PathObject> creator). Apply a detection model to generate rectangles surrounding distinct structures. static List<PathObject>; detect(DetectionModel model,; ImageServer<BufferedImage> server,; RegionRequest request,; IntFunction<PathClass> classifier,; Function<ROI,PathObject> creator). Apply a detection model to generate rectangles surrounding distinct structures. static List<String>; getOutputLayerNames(Net net). Get the names of all unconnected output layers. static Map<String,DnnShape>; getOutputLayers(Net net,; DnnShape... inputShape). Get the names of all unconnected output layers. static List<Mat>; imagesFromBlob(Mat blob). Extract images from an OpenCV blob. static boolean; isCudaAvailable(). Query whether CUDA is reported as available by OpenCV. static List<DnnTools.DNNLayer>; parseLayers(Net net,; int width,; int height,; int channels,; int batchSize). Parse the layers for a Net, which allows inspection of names and sizes. static List<DnnShape>; parseShape(MatShapeVector vector). Extract Mat dimensions from a MatShapeVector. static List<String>; parseStrings(StringVector vector). Extract Strings from a StringVector. static Mat; readPatch(ImageServer<BufferedImage> server,; ROI roi,; double downsample,; int width,; int height). Read an image patch, optionally with a fixed size and using zero-padding if required. static Mat; readPatch(ImageServer<BufferedImage> server,; ROI roi,; double downsample,; int width,; int height,; int borderPadding). Read an image patch, optionally with a fixed size. static <T extends DnnModel>void; registerDnnModel(Class<T> subtype,; String name). Deprecated.; since v0.4.0; use DnnModels.registerDnnModel(Class, String) instead. static Mat; segment(SegmentationModel model,;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html:3238,avail,available,3238,javadoc/docs/qupath/opencv/dnn/DnnTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html,1,['avail'],['available']
Availability,"<RegionRequest,BufferedImage> cache. thumbnailCache; protected Map<RegionRequest,BufferedImage> thumbnailCache. Method Details. paintRegionCompletely; public void paintRegionCompletely(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; ImageObserver observer,; ImageRenderer imageDisplay,; long timeoutMilliseconds); Similar to paintRegion, but wait until all the tiles have arrived (or abort if it is taking too long). Specified by:; paintRegionCompletely in interface ImageRegionRenderer; Parameters:; server - ; g - ; clipShapeVisible - ; zPosition - ; tPosition - ; downsampleFactor - ; observer - ; imageDisplay - ; timeoutMilliseconds - Timeout after which a request is made from the PathImageServer directly, rather than waiting for tile requests. paintRegion; public void paintRegion(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; BufferedImage imgThumbnail,; ImageObserver observer,; ImageRenderer imageDisplay); Description copied from interface: ImageRegionRenderer; Paint an image region. Specified by:; paintRegion in interface ImageRegionRenderer; Parameters:; server - the server representing the image that shown be painted; g - the graphics object upon which to paint; clipShapeVisible - the visible shape representing the area of the graphics object that should be filled; zPosition - the z-stack position; tPosition - the timepoint position; downsampleFactor - the downsample factor; imgThumbnail - a thumbnail image; if not null, this will be used to 'fill the gaps'; observer - an ImageObserver (often ignored); imageDisplay - an ImageRenderer to convert images to RGB. close; public void close(). getTileCacheSize; public long getTileCacheSize(); Get the tile cache size, in bytes.; Image tiles larger than this cannot be cached. Returns:. getCachedThumbnail; public BufferedImage getCachedThumbnail(ImageServer<B",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html:5314,down,downsampleFactor,5314,javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,1,['down'],['downsampleFactor']
Availability,"> T; showChoiceDialog(String title,; String message,; T[] choices,; T defaultChoice). Deprecated.; Show a choice dialog with an array of choices (selection from ComboBox or similar). static boolean; showConfirmDialog(String title,; String text). Deprecated.; Show a confirm dialog (OK/Cancel). static boolean; showConfirmDialog(String title,; Node node). Deprecated.; Show a confirm dialog (OK/Cancel). static void; showErrorMessage(String title,; String message). Deprecated.; Show an error message. static void; showErrorMessage(String title,; Throwable e). Deprecated.; Show an error message, displaying the localized message of a Throwable. static void; showErrorMessage(String title,; Node node). Deprecated.; Show an error message, with the content defined within a Node. static void; showErrorNotification(String title,; String message). Deprecated.; Show an error notification. static void; showErrorNotification(String title,; Throwable e). Deprecated.; Show an error notification, displaying the localized message of a Throwable. static void; showInfoNotification(String title,; String message). Deprecated.; Show an info notification. static Double; showInputDialog(String title,; String message,; Double initialInput). Deprecated.; Show an input dialog requesting a numeric value. static String; showInputDialog(String title,; String message,; String initialInput). Deprecated.; Show an input dialog requesting a String input. static boolean; showMessageDialog(String title,; String message). Deprecated.; Show a standard message dialog. static boolean; showMessageDialog(String title,; Node node). Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. static void; showNoImageError(String title). Deprecated.; Show an error message that no image is available. static void; showNoProjectError(String title). Deprecated.; Show an error message that no project is available. static boolean; showParameterDialog(String title,; ParameterList params). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:3632,error,error,3632,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['error'],['error']
Availability,"ARCH. Package qupath.lib.gui.commands; Class MiniViewers.MiniViewerManager. java.lang.Object; qupath.lib.gui.commands.MiniViewers.MiniViewerManager. All Implemented Interfaces:; EventListener, EventHandler<MouseEvent>. Enclosing class:; MiniViewers. public static class MiniViewers.MiniViewerManager; extends Object; implements EventHandler<MouseEvent>; A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. Constructor Summary; Constructors. Constructor; Description; MiniViewerManager(QuPathViewer mainViewer,; Collection<? extends ChannelDisplayInfo> channels). Deprecated.; use MiniViewers.createManager(QuPathViewer, Collection) instead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getDownsample(). Get the downsample used within the mini viewers. GridPane; getPane(). Get the pane containing all mini viewers, which can be added to a scene for display. void; handle(MouseEvent event);  ; void; setDownsample(double downsample). Set the downsample to use within the mini viewers. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MiniViewerManager; @Deprecated; public MiniViewerManager(QuPathViewer mainViewer,; Collection<? extends ChannelDisplayInfo> channels); Deprecated.; use MiniViewers.createManager(QuPathViewer, Collection) instead. Constructor specifying a primary viewer and number of channels. Parameters:; mainViewer - the viewer that the mini viewers relate to (i.e. tracking the cursor location); channels - the channels to include. Method Details. getDownsample; public double getDownsample(); Get the downsample used within the mini viewers. Returns:. setDownsample; public void setDownsample(double downsample); Set the downsample to use within the mini viewers. Parameters:; downsample - . getPane; public GridPane getPane(); Get the pane containing all mini vi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html:1364,down,downsample,1364,javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html,1,['down'],['downsample']
Availability,"ActionTools. Specify that an Action has a meaningful 'selected' status. isSelected() - Method in class qupath.lib.gui.SelectableItem. Returns true if the value of the selected property equals SelectableItem.getItem(). isSelected(PathObject) - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Query whether a specific object is selected. isShapeROI(ROI) - Static method in class qupath.lib.roi.RoiTools. Returns true if the ROI is not null and is not a point ROI. isShowing() - Method in class qupath.lib.display.settings.ChannelSettings. Get whether the channel should be displayed. isShowing() - Method in class qupath.lib.gui.viewer.QuPathViewer. Returns true if the viewer is visible, and attached to a scene. isSignedInteger() - Method in enum class qupath.lib.images.servers.PixelType. Returns true if the type is a signed integer representation. isSpaceDown() - Method in class qupath.lib.gui.viewer.QuPathViewer. Returns true if the spacebar was pressed when this component was focussed, and is still being held down. isStandalone() - Method in class qupath.lib.gui.QuPathGUI. Query whether this is a standalone QuPathGUI instance, as flagged during startup. isStringMeasurement(String) - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Query whether a named measurement returns a String value only. isStructureChangeEvent() - Method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. Returns true if the hierarchy structure has changed, e.g. isSubtractMode(MouseEvent) - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler;  ; isSymmetric() - Method in class qupath.lib.regions.Padding. Returns true of the padding is identical on all sides (x1 == x2 == y1 == y2). isThreePlus(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Return true if the name of the class is ""3+"", indicating a weakly-positive staining. isTiff() - Method in interface qupath.lib.images.servers.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:633035,down,down,633035,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['down'],['down']
Availability,"AffineTransformImageServer; protected AffineTransformImageServer(ImageServer<BufferedImage> server,; AffineTransform transform); throws NoninvertibleTransformException. Throws:; NoninvertibleTransformException. Method Details. createID; protected String createID(); Description copied from class: AbstractImageServer; Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + parameters; ; This will be called on demand whenever AbstractImageServer.getPath() is first required. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Specified by:; readRegion in interface ImageServer<BufferedImage>; Overrides:; readRegion in class TransformingImageServer<BufferedImage>; Parameters:; request - the region for which pixels are requ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AffineTransformImageServer.html:3815,down,downsample,3815,javadoc/docs/qupath/lib/images/servers/AffineTransformImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AffineTransformImageServer.html,1,['down'],['downsample']
Availability,"B int value. static final Integer; MASK_BLUE. Mask for use when extracting the blue component from a packed (A)RGB int value. static final Integer; MASK_GREEN. Mask for use when extracting the green component from a packed (A)RGB int value. static final Integer; MASK_RED. Mask for use when extracting the red component from a packed (A)RGB int value. static final Integer; RED. Packed int representing red. static final Integer; WHITE. Packed int representing white. static final Integer; YELLOW. Packed int representing yellow. Method Summary. All MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static int; alpha(int argb). Extract the 8-bit alpha value from a packed ARGB value. static int; blue(int rgb). Extract the 8-bit blue value from a packed RGB value. static int; clip255(double val). Convert a double value to an int, flooring and clipping to the range 0-255. static int; do8BitRangeCheck(double v). Clip an input value to be an integer in the range 0-255 (with rounding down). static int; do8BitRangeCheck(float v). Clip an input value to be an integer in the range 0-255 (with rounding down). static int; do8BitRangeCheck(int v). Clip an input value to be an integer in the range 0-255. static int; green(int rgb). Extract the 8-bit green value from a packed RGB value. static int; makeRGB(int r,; int g,; int b). Deprecated.; Use packRGB(int, int, int) or packClippedRGB(int, int, int) instead. static int; makeRGBA(int r,; int g,; int b,; int a). Deprecated.; The naming and order of arguments is misleading. static int; makeScaledRGB(int rgb,; double scale). Scale the RGB channels for a color by a fixed amount. static int; packARGB(int a,; int r,; int g,; int b). Make a packed ARGB value from specified input values. static int; packClippedARGB(int a,; int r,; int g,; int b). Make a packed ARGB value from specified input values, clipping to the range 0-255. static int; packClippedRGB(int r,; int g,; int b). Make a packed RGB v",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/ColorTools.html:2052,down,down,2052,javadoc/docs/qupath/lib/common/ColorTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/ColorTools.html,1,['down'],['down']
Availability,"BrightnessContrastSliderPane. Value of the minimum slider. minWidth(double) - Method in class qupath.lib.gui.ColorMapCanvas;  ; MISSING - Enum constant in enum class qupath.lib.io.UriUpdater.UriStatus. URI refers to a file that does not appear to exist or is inaccessible. missingValue(double) - Method in class qupath.opencv.ml.FeaturePreprocessor.Builder;  ; mkdirs(String) - Static method in class qupath.lib.scripting.QP. Ensure directories exist for the specified path, calling file.mkdirs() if not. ML() - Constructor for class qupath.opencv.ops.ImageOps.ML;  ; modality(Modality) - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Specify the modality of the dialog. modelType(OpenCVDnn.ModelType) - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Set the model type, used by OpenCVDnn.buildModel(). morphologicalReconstruction(ImageProcessor, ImageProcessor) - Static method in class qupath.imagej.processing.MorphologicalReconstruction. Apply morphological operation using marker and mask images. morphologicalReconstruction(Mat, Mat) - Static method in class qupath.opencv.tools.ProcessingCV. Compute morphological reconstruction. morphologicalReconstruction(SimpleModifiableImage, SimpleImage) - Static method in class qupath.lib.analysis.algorithms.MorphologicalReconstruction. Apply morphological reconstruction with the specified marker and mask images. MorphologicalReconstruction - Class in qupath.imagej.processing. Implementation of morphological reconstruction for ImageJ. MorphologicalReconstruction - Class in qupath.lib.analysis.algorithms. Implementation of 2D morphological reconstruction, using 8-connectivity & a hybrid method. MorphologicalReconstruction() - Constructor for class qupath.imagej.processing.MorphologicalReconstruction;  ; MorphologicalReconstruction() - Constructor for class qupath.lib.analysis.algorithms.MorphologicalReconstruction;  ; mouseClicked(MouseEvent) - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEven",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:696734,mask,mask,696734,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['mask'],['mask']
Availability,"BufferedImage>; getImageData(). Get the image data currently being displayed within thie viewer. ImageDisplay; getImageDisplay(). Get the ImageDisplay object used to determine how the image is converted to RGB for display. String; getImageObjectClassificationString(double x,; double y). Get a string representing the object classification x & y location in the viewer component,; or an empty String if no object is found. ImagePlane; getImagePlane(). Get the ImagePlane currently being displayed, including z and t positions. DefaultImageRegionStore; getImageRegionStore(). Get the region store used by this viewer for tile caching and painting. double; getMagnification(). Get the magnification for the image within this viewer, or Double.NaN if no image is present. double; getMaxDownsample(). Get the maximum downsample value supported by this viewer. double; getMaxROIHandleSize(). Get the maximum size for which ROI handles may be drawn. double; getMinDownsample(). Get the minimum downsample value supported by this viewer. Point2D; getMousePosition(). Get the current cursor position within this viewer, or null if the cursor is outside the viewer. String; getObjectClassificationString(double x,; double y). Get a string representing the object classification x & y location in the viewer component,; or an empty String if no object is found. List<PathOverlay>; getOverlayLayers(). Get an unmodifiable list containing the overlay layers, in order. OverlayOptions; getOverlayOptions(). Get the overlay options that control the viewer display. protected ImageRenderer; getRenderer(). Request a renderer that converts image tiles into RGB images. BufferedImage; getRGBThumbnail(). Get a thumbnail representing the image as displayed by this viewer. RoiEditor; getROIEditor(). Get the RoiEditor used by this viewer. double; getRotation(). Get the current rotation; angle in radians. PathObject; getSelectedObject(). Get the currently-selected object from the hierarchy. ImageServer<BufferedImage>",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:6022,down,downsample,6022,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,1,['down'],['downsample']
Availability,"ChannelDisplayInfo) - Method in class qupath.lib.display.ImageDisplay. Automatically set the display range for a channel, using the default saturation defined in PathPrefs.autoBrightnessContrastSaturationPercentProperty(). autoSetDisplayRange(ChannelDisplayInfo, double) - Method in class qupath.lib.display.ImageDisplay. Automatically set the display range for a channel. autoUnits() - Method in class qupath.lib.common.Timeit;  ; autoUpdate - Variable in class qupath.lib.gui.panes.PreferencePane.AppearancePreferences;  ; autoUpdate - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; autoUpdateCheckProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Check for updates when launching QuPath, if possible. availableChannels() - Method in class qupath.lib.display.ImageDisplay. ObservableList containing the channels currently available for display. availableFontsProperty() - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Get a list of available fonts. availableStylesProperty() - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Get the current available styles as an observable list. averageChannelProject() - Method in class qupath.lib.images.servers.TransformedServerBuilder. Perform an average (mean) projection of the channels. awaitCompletion() - Method in class qupath.lib.plugins.AbstractTaskRunner. Await the completion of currently-running tasks, notifying any listener if necessary. AwtTools - Class in qupath.lib.awt.common. A collection of static methods useful when working with AWT shapes and ImageRegions. B. backend(int) - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Specify the backend, e.g. backgroundColor - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; backgroundColor(int, boolean) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify a base color. backgroundColor(Color) - Method in class qupath.lib.gui.images.servers.Rendered",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:51306,avail,available,51306,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"Class InfoMessage. java.lang.Object; qupath.lib.gui.actions.InfoMessage. public class InfoMessage; extends Object; An informative message that should be shown to the user. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<Number>; count. Read only property containing any count associated with the text (may be null). ReadOnlyStringProperty; text. Read only property containing the message text. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; InfoMessage.MessageType. The type of message, which can be used for styling. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<Number>; countProperty(). Read only property containing any count associated with the text (may be null). static InfoMessage; error(String text). Create an error message with static text. static InfoMessage; error(String text,; int count). Create an error message with static text and a count. static InfoMessage; error(ObservableNumberValue count). Create a error message to show a count of errors. static InfoMessage; error(ObservableValue<String> text). Create an error message. static InfoMessage; error(ObservableValue<String> text,; ObservableNumberValue count). Create an error message with a count. int; getCount(). Counts associated with the message, or -1 if the count is null. InfoMessage.MessageType; getMessageType(). Type of the message. String; getText(). Text of the message. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(String text,; int count). Create an information message with static text and a count. static InfoMessage; info(ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; info(ObservableValue<String> text). Create an information message. static InfoMessage; info(ObservableValue<String> text,; ObservableNumberValu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:1342,error,error,1342,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,1,['error'],['error']
Availability,"Class, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelClassifierUI; public PixelClassifierUI(). Method Details. createRegionFilterCombo; public static ComboBox<RegionFilter> createRegionFilterCombo(OverlayOptions options); Create a ComboBox that can be used to select the pixel classification region filter. Parameters:; options - ; Returns:. createPixelClassifierButtons; public static Pane createPixelClassifierButtons(ObjectExpression<ImageData<BufferedImage>> imageData,; ObjectExpression<PixelClassifier> classifier,; StringExpression classifierName); Create a standard button pane for pixel classifiers, to create, measure and classify objects. Parameters:; imageData - expression that provides the ImageData to which the operation should be applied; classifier - expression that provides the PixelClassifier that will be used; classifierName - expression that provides the saved name of the classifier. If available, running a command will ; result in it being logged to the history workflow for later scripting.; Returns:; a Pane that may be added to a scene. createSavePixelClassifierPane; public static Pane createSavePixelClassifierPane(ObjectExpression<Project<BufferedImage>> project,; ObjectExpression<PixelClassifier> classifier,; StringProperty savedName); Create a pane that contains a text field and save button to allow a pixel classifier to be saved in a project. Parameters:; project - the current project, within which the classifier can be saved; classifier - the classifier to save; savedName - property to store the classifier name. If the user saves the classifier, this will be set to the saved name.; Otherwise, if classifier is changed, this will be set to null. Therefore it provides a way to determine if the ; current classifier has been saved and, if so, what is its name.; Returns:; a pane that may be added to a scene. promptToCreateObjects; public static boolean promptToCreateObjects(ImageData<BufferedImage> imageData,; PixelC",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierUI.html:2748,avail,available,2748,javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierUI.html,1,['avail'],['available']
Availability,"Classifiers.ClassifyByMeasurementBuilder. Set the classification (by name) for objects for which the specified measurement has a value exactly equal to the threshold. equalTo(PathClass) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification for objects for which the specified measurement has a value exactly equal to the threshold. error() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create an error alert dialog. error(String) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text. error(String, int) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text and a count. error(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a error message to show a count of errors. error(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message. error(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with a count. ERROR - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Error or exception. ERROR - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Error logging (only if something goes recognizably wrong). escapeFilePath(String) - Static method in class qupath.lib.common.GeneralTools. Escape backslashes in an absolute file path - useful when scripting. estimateAvailableMemory() - Static method in class qupath.lib.common.GeneralTools. Estimate the current available memory in bytes, based upon the JVM max and the memory currently used. estimateCellBoundary(Geometry, double, double) - Static method in class qupath.lib.objects.CellTools. Estimate a cell boundary using Geometry objects. estimateDownsampleFactor(ImagePlus, ImageServer<?>) - Static method in class qupath.imagej.tools.IJTools. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:283633,error,error,283633,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['error'],['error']
Availability,"Code, notify, notifyAll, wait, wait, wait. Field Details. lastValue; protected Boolean lastValue. Method Details. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); Description copied from interface: Parameter; Set last value using a string; implementing classes may need to parse this. Parameters:; locale - ; value - ; Returns:. isValidInput; public boolean isValidInput(Boolean value); Description copied from interface: Parameter; Query if a specified value would be valid for this parameter. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. duplicate; public Parameter<Boolean> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public Boolean getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public Boolean getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last val",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html:3227,avail,available,3227,javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/BooleanParameter.html,1,['avail'],['available']
Availability,"CommandFinderTools. public static class CommandFinderTools.CommandEntry; extends Object; Helper class to wrap summary data for a command to display in the list. Property Summary; Properties. Type; Property; Description; ReadOnlyStringProperty; acceleratorText. Property corresponding to getAcceleratorText(). ReadOnlyStringProperty; longText. Property corresponding to getLongText(). ReadOnlyStringProperty; menuPath. Property corresponding to getMenuPath(). ReadOnlyStringProperty; text. Property corresponding to getText(). Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyStringProperty; acceleratorTextProperty(). Property corresponding to getAcceleratorText(). String; getAcceleratorText(). Get a String representation of any accelerator for the command. String; getCommandPath(). Get a string representation of the menu path for this command, including the menu path and the text. String; getLongText(). Get the long text (description) for the command, if available. MenuItem; getMenuItem(). Get the menu item corresponding to this command. String; getMenuPath(). Get a String representation of the menu containing this command. String; getText(). Get the name of the command. ReadOnlyStringProperty; longTextProperty(). Property corresponding to getLongText(). ReadOnlyStringProperty; menuPathProperty(). Property corresponding to getMenuPath(). ReadOnlyStringProperty; textProperty(). Property corresponding to getText(). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. acceleratorText; public ReadOnlyStringProperty acceleratorTextProperty; Property corresponding to getAcceleratorText(). See Also:. getAcceleratorText(); acceleratorTextProperty(). text; public ReadOnlyStringProperty textProperty; Property corresponding to getText(). See Also:. getText(); textProperty(). longText; public ReadOnlyStringProperty longTextP",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandEntry.html:1527,avail,available,1527,javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandEntry.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandEntry.html,1,['avail'],['available']
Availability,"Constructors. Constructor; Description; OpenCVModelObjectClassifier(PathObjectFilter filter,; OpenCVDnn model,; List<PathClass> pathClasses,; int width,; int height,; double requestedPixelSize). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; classifyObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass). Classify the objects in the specified collection. Map<String,Integer>; getMissingFeatures(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects). Check for missing features, returning the names and number of input objects missing the specified features. Collection<PathClass>; getPathClasses(). Get the classifications set by this classifier. Collection<URI>; getURIs(). Get all the URIs required for this resource. protected boolean; tryToClassify(ClassificationModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier);  ; boolean; updateURIs(Map<URI,URI> replacements). Update the specified URIs. Methods inherited from class qupath.lib.classifiers.object.AbstractObjectClassifier; classifyObjects, getCompatibleObjects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. OpenCVModelObjectClassifier; public OpenCVModelObjectClassifier(PathObjectFilter filter,; OpenCVDnn model,; List<PathClass> pathClasses,; int width,; int height,; double requestedPixelSize); Constructor. Parameters:; filter - filter to select compatible options; model - wrapper for the DNN model, including optional preprocessing; pathClasses - ordered list of classifications, corresponding to the predicted labels; width - patch width, in pixels, at the classification size; height - patch ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html:2050,down,downsample,2050,javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html,1,['down'],['downsample']
Availability,"Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class Parameters<S,T>. java.lang.Object; qupath.lib.experimental.pixels.Parameters<S,T>. Type Parameters:; S - the image type; T - the mask type. public class Parameters<S,T>; extends Object; Parameters for use with a PixelProcessor. Since:; v0.5.0. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Parameters.Builder<S,T>. Builder class for Parameters. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static <S,; T> Parameters.Builder<S,T>; builder(). Create a new builder for parameters. S; getImage(). Get the image to process. ImageData<BufferedImage>; getImageData(). Get the image data. T; getMask(). Get the mask associated with the main ROI or the parent object, or null if no mask is available. T; getMask(ROI roi). Get the mask associated with any ROI, or null if no mask is available. PathObject; getParent(). Get the parent object. PathObject; getParentOrProxy(). Get the parent, or a proxy parent if one has been specified. RegionRequest; getRegionRequest(). Get the region request. ImageServer<BufferedImage>; getServer(). Get the server. TileRequest; getTileRequest(). Get the tile request, if available. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getImageData; public ImageData<BufferedImage> getImageData(); Get the image data. Returns:. getServer; public ImageServer<BufferedImage> getServer(); Get the server. This is often the accessed from getImageData(), but in some cases it may be different; (e.g. if the processing should be applied to a transformed image). Returns:. getRegionRequest; public RegionRequest getRegionRe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html:1090,mask,mask,1090,javadoc/docs/qupath/lib/experimental/pixels/Parameters.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html,3,"['avail', 'mask']","['available', 'mask']"
Availability,"Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class Commands. java.lang.Object; qupath.lib.gui.commands.Commands. public class Commands; extends Object; Helper class implementing simple 'single-method' commands for easy inclusion in the GUI. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; Commands();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; closeProject(QuPathGUI qupath). Close the current project open in the QuPathGUI. static boolean; combineSelectedAnnotations(ImageData<?> imageData,; RoiTools.CombineOp op). Combine the selected annotations for the specified hierarchy. static void; convertDetectionsToPoints(ImageData<?> imageData,; boolean preferNucleus). Convert detection objects to point annotations based upon their ROI centroids. static void; copyAnnotationsToClipboard(ImageData<BufferedImage> imageData). Attempt to annotation objects to the system clipboard, if available. static void; copySelectedAnnotationsToCurrentPlane(QuPathViewer viewer). Copy the selected objects and add them to the plane currently active in the viewer. static void; copySelectedObjectsToClipboard(ImageData<BufferedImage> imageData). Attempt to copy selected objects to the system clipboard, if available. static void; createFullImageAnnotation(QuPathViewer viewer). Create a full image annotation for the image in the specified viewer. static Stage; createLicensesWindow(QuPathGUI qupath). Create a window summarizing license information for QuPath and its third party dependencies. static Stage; createMeasurementMapDialog(QuPathGUI qupath). Create a dialog for displaying measurement maps. static Stage; createMemoryMonitorDialog(QuPathGUI qupath). Create a dialog to monitor memory usage. static Stage; createObjectDescriptionsDialog(QuPathGUI qupath). Create a stage to display object descriptions. static Stage; createPreferencesDialog(QuPathGUI qupath). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:1301,avail,available,1301,javadoc/docs/qupath/lib/gui/commands/Commands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html,1,['avail'],['available']
Availability,"DisplayBand to define the colormap associated with an image band (channel). createBelow(int, double) - Static method in class qupath.lib.analysis.images.ContourTracing.ChannelThreshold. Create a threshold to select values less than or equal to a specified threshold. createBinaryMask(Mat, DoublePredicate) - Static method in class qupath.opencv.tools.OpenCVTools. Create a binary mask (0, 255 values) by applying a predicate to pixel values. createBrushEventHandler() - Static method in class qupath.lib.gui.viewer.tools.handlers.PathToolEventHandlers;  ; createBufferedImageMaskSupplier() - Static method in interface qupath.lib.experimental.pixels.MaskSupplier. Create a image supplier that returns a buffered image. createBufferedImageSupplier() - Static method in interface qupath.lib.experimental.pixels.ImageSupplier. Create a image supplier that returns a buffered image. createButton(Action) - Static method in class qupath.lib.gui.actions.ActionTools. Create a button from an action, showing both the text and graphic if available. createButtonPane(QuPathGUI, ObjectExpression<ImageData<BufferedImage>>, ObjectExpression<DensityMaps.DensityMapBuilder>, StringExpression, ObjectExpression<PixelClassificationOverlay>, boolean) - Static method in class qupath.process.gui.commands.density.DensityMapUI. Create a pane containing standardized buttons associated with processing a density map (find hotspots, threshold, export map). createButtonWithGraphicOnly(Action) - Static method in class qupath.lib.gui.actions.ActionTools. Create a button from an action, showing only the graphic and not any text. createCellObject(ROI, ROI) - Static method in class qupath.lib.objects.PathObjects. Create a cell object. createCellObject(ROI, ROI, PathClass) - Static method in class qupath.lib.objects.PathObjects. Create a cell object with an optional classification. createCellObject(ROI, ROI, PathClass, MeasurementList) - Static method in class qupath.lib.objects.PathObjects. Create a cell object wit",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:164172,avail,available,164172,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"DnnModels (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Class DnnModels. java.lang.Object; qupath.opencv.dnn.DnnModels. public class DnnModels; extends Object; Helper class for building new DnnModels.; ; This includes a ServiceLoader to support adding new implementations ; via extensions. Since:; v0.4.0; Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; DnnModels();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static DnnModel; buildModel(DnnModelParams params). Build a DnnModel from the given parameters. static boolean; registerBuilder(DnnModelBuilder builder). Register a new DnnModelBuilder. static <T extends DnnModel>void; registerDnnModel(Class<T> subtype,; String name). Register a new DnnModel class for JSON serialization/deserialization. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DnnModels; public DnnModels(). Method Details. registerDnnModel; public static <T extends DnnModel> void registerDnnModel(Class<T> subtype,; String name); Register a new DnnModel class for JSON serialization/deserialization. Type Parameters:; T - ; Parameters:; subtype - ; name - . registerBuilder; public static boolean registerBuilder(DnnModelBuilder builder); Register a new DnnModelBuilder. Parameters:; builder - ; Returns:. buildModel; public static DnnModel buildModel(DnnModelParams params); Build a DnnModel from the given parameters.; This queries all available DnnModelBuilders through a service loader. Parameters:; params - ; Returns:; a new DnnModel, or null if no model could be built. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModels.html:1863,avail,available,1863,javadoc/docs/qupath/opencv/dnn/DnnModels.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnModels.html,1,['avail'],['available']
Availability,"DocsUrl(String) - Static method in class qupath.lib.gui.Urls. Get the base URL for the QuPath documentation for this software version, including ; a relative component to link to a specific page (without leading slash). getView() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the main JavaFX component representing this viewer. getViewer() - Method in class qupath.lib.gui.QuPathGUI. Get the currently active viewer. getViewer() - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler;  ; getViewer() - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler;  ; getViewer() - Method in class qupath.process.gui.WandToolEventHandler;  ; getViewerActions() - Method in class qupath.lib.gui.QuPathGUI. Get the associations associated with QuPath image viewers. getViewerManager() - Method in class qupath.lib.gui.actions.ViewerActions;  ; getViewerManager() - Method in class qupath.lib.gui.QuPathGUI. Get the viewer manager, which gives access to all the viewers available within this QuPath instance. getVoronoiFaces() - Method in class qupath.lib.analysis.DelaunayTools.Subdivision. Get a map of Voronoi faces as JTS Geometry objects. getVoronoiROIs(Geometry) - Method in class qupath.lib.analysis.DelaunayTools.Subdivision. Get a map of Voronoi faces, convered to ROI objects. getWandSensitivity() - Static method in class qupath.process.gui.WandToolEventHandler. Query the wand sensitivity value, which influences how similar local intensity values must be for the wand region growing. getWandSigmaPixels() - Static method in class qupath.process.gui.WandToolEventHandler. Query the Gaussian sigma value used to smooth the image when applying the wand. getWandUseOverlays() - Static method in class qupath.process.gui.WandToolEventHandler. Query whether the wand tool should be influenced by pixel values painted on image overlays. getWidth() - Method in class qupath.imagej.tools.PixelImageIJ;  ; getWidth() - Method in interface qupath.lib.analy",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:551679,avail,available,551679,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"E, BRIGHTFIELD_OTHER, FLUORESCENCE, OTHER, PROJECT_BASE_DIR, VERSION. Constructor Summary; Constructors. Constructor; Description; QPEx();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; applyDisplaySettings(String name). Apply the display settings with the specified name or file path to the current version. static boolean; applyDisplaySettings(ImageDisplaySettings settings). Apply the display settings to the current viewer. static boolean; applyDisplaySettings(QuPathViewer viewer,; ImageDisplaySettings settings). Apply the display settings to the specified viewer. static void; copyToClipboard(Object o). Try to copy an object to the clipboard. static TaskRunner; createTaskRunner(). Create a task runner with the default number of threads defined by ThreadTools.getParallelism(). static TaskRunner; createTaskRunner(int nThreads). Create a task runner with the specified number of threads. static void; exportTMAData(String path,; double downsampleFactor). Export TMA summary data for the current image. static void; exportTMAData(ImageData<BufferedImage> imageData,; String path,; double downsampleFactor). Export TMA summary data for the specified image. static Collection<Class<?>>; getCoreClasses(). Get a list of core classes that are likely to be useful for scripting. static QuPathViewer; getCurrentViewer(). Get the active viewer in the current QuPath instance. static QuPathGUI; getQuPath(). Get the current QuPath instance. static Window; getWindow(String title). Access a window currently open within QuPath by its title. static ImageDisplaySettings; loadDisplaySettings(String name). Load a display settings object from a file path or from the current project. static String; locateFile(String nameOrPath). Locate a specified file based upon its name or path, with a search depth of 4. static String; locateFile(String nameOrPath,; int searchDepth). Locate a specified file based upon its name or path. static F",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:1744,down,downsampleFactor,1744,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html,1,['down'],['downsampleFactor']
Availability,"Event(Shape shape). repaintEntireImage; public void repaintEntireImage(); Request that the entire image is repainted, including the thumbnail.; This should be called whenever a major change in display is triggered, such as ; changing the brightness/contrast or lookup table.; Otherwise, repaint() is preferable. See Also:. repaint(). getMagnification; public double getMagnification(); Get the magnification for the image within this viewer, or Double.NaN if no image is present.; This is mostly for display; getDownsampleFactor() is more meaningful.; The actual value of the magnification depends upon whether any magnification value is available ; within the image metadata. Returns:. getFullMagnification; public double getFullMagnification(); Get the full magnification for the image.; This is either the magnification value stored within the current image metadata, ; or 1.0 if no suitable image or metadata is available. Returns:. setMagnification; public void setMagnification(double magnification); Set the downsample factor based upon magnification values.; In general, setDownsampleFactor(double) should be used directly in preference to this method. Parameters:; magnification - . closeViewer; public void closeViewer(); Request that this viewer is closed.; This unbinds the viewer from any properties it may be observing,; and also triggers QuPathViewerListener.viewerClosed(QuPathViewer) calls for ; any viewer listeners. paintComponent; protected void paintComponent(Graphics g). paintViewer; protected void paintViewer(Graphics g,; int w,; int h). getMaxROIHandleSize; public double getMaxROIHandleSize(); Get the maximum size for which ROI handles may be drawn. Returns:. repaintTimestamp; public ReadOnlyLongProperty repaintTimestamp(); Get the timestamp referring to the last time this viewer was repainted. Returns:. getOverlayLayers; public List<PathOverlay> getOverlayLayers(); Get an unmodifiable list containing the overlay layers, in order. Returns:. getCustomOverlayLayers; pu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:26119,down,downsample,26119,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,1,['down'],['downsample']
Availability,"Ex();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; applyDisplaySettings(String name). Apply the display settings with the specified name or file path to the current version. static boolean; applyDisplaySettings(ImageDisplaySettings settings). Apply the display settings to the current viewer. static boolean; applyDisplaySettings(QuPathViewer viewer,; ImageDisplaySettings settings). Apply the display settings to the specified viewer. static void; copyToClipboard(Object o). Try to copy an object to the clipboard. static TaskRunner; createTaskRunner(). Create a task runner with the default number of threads defined by ThreadTools.getParallelism(). static TaskRunner; createTaskRunner(int nThreads). Create a task runner with the specified number of threads. static void; exportTMAData(String path,; double downsampleFactor). Export TMA summary data for the current image. static void; exportTMAData(ImageData<BufferedImage> imageData,; String path,; double downsampleFactor). Export TMA summary data for the specified image. static Collection<Class<?>>; getCoreClasses(). Get a list of core classes that are likely to be useful for scripting. static QuPathViewer; getCurrentViewer(). Get the active viewer in the current QuPath instance. static QuPathGUI; getQuPath(). Get the current QuPath instance. static Window; getWindow(String title). Access a window currently open within QuPath by its title. static ImageDisplaySettings; loadDisplaySettings(String name). Load a display settings object from a file path or from the current project. static String; locateFile(String nameOrPath). Locate a specified file based upon its name or path, with a search depth of 4. static String; locateFile(String nameOrPath,; int searchDepth). Locate a specified file based upon its name or path. static File; promptForFile(String... extensions). Prompt the user to select a file from a file chooser. static boolean; runPlugin(String cla",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:1895,down,downsampleFactor,1895,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html,1,['down'],['downsampleFactor']
Availability,"Exception - if either the mask width or height is too small for the requested width and height. createRandomRectangle; public static ROI createRandomRectangle(ImageRegion mask,; double width,; double height,; Random random); throws IllegalArgumentException; Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. Parameters:; mask - region defining the area in which the rectangle can be located, including the image plane information; width - width of the rectangle to create; height - height of the rectangle to create; random - random number generator to use (may be null to use a default); Returns:; a rectangle with the specified width and height, covered by the mask; Throws:; IllegalArgumentException - if either the mask width or height is too small for the requested width and height. createRandomRectangle; public static ROI createRandomRectangle(ROI mask,; double width,; double height); throws IllegalArgumentException; Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI.; ; For greater control, see createRandomRectangle(ROI, double, double, int, boolean, Random). Parameters:; mask - region defining the area in which the rectangle can be located, including the image plane information; width - width of the rectangle to create; height - height of the rectangle to create; Returns:; a rectangle with the specified width and height and covered by the mask, or null if it was not possible to find a rectangle ; that meets this criterion; Throws:; IllegalArgumentException - if either the mask width or height is too small for the requested width and height; See Also:. createRandomRectangle(ROI, double, double, int, boolean, Random). createRandomRectangle; public static ROI createRandomRectangle(ROI mask,; double width,; double height,; int maxAttempts,; boolean permitErosion,; Random random); throws IllegalArgumentException; Create a",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:18511,mask,mask,18511,javadoc/docs/qupath/lib/roi/RoiTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html,2,['mask'],['mask']
Availability,"Exception. exportTMAData; public static void exportTMAData(ImageData<BufferedImage> imageData,; String path,; double downsampleFactor); throws IOException; Export TMA summary data for the specified image. Parameters:; imageData - the image containing TMA data to export; path - path to the export directory; downsampleFactor - downsample applied to each TMA core image; Throws:; IOException. getQuPath; public static QuPathGUI getQuPath(); Get the current QuPath instance. Returns:. getCurrentViewer; public static QuPathViewer getCurrentViewer(); Get the active viewer in the current QuPath instance. Returns:; an active viewer, or null if no viewer is active in QuPath currently. locateFile; public static String locateFile(String nameOrPath); throws IOException; Locate a specified file based upon its name or path, with a search depth of 4.; This first checks if the provided path is to a file that already exists.; If it is not, then it searches recursively within the current project or ; user directory (if available) up to a fixed search depth for a file with the same name. Parameters:; nameOrPath - the original name or path; Returns:; the identified file path, or the original file path if no update was found or required; Throws:; IOException; See Also:. UriUpdater.locateFile(String, int, Path...). locateFile; public static String locateFile(String nameOrPath,; int searchDepth); throws IOException; Locate a specified file based upon its name or path.; This first checks if the provided path is to a file that already exists.; If it is not, then it searches recursively within the current project or ; user directory (if available) up to a specified search depth for a file with the same name. Parameters:; nameOrPath - the original name or path; searchDepth - how deep to search subdirectories recursively; Returns:; the identified file path, or the original file path if no update was found or required; Throws:; IOException; See Also:. UriUpdater.locateFile(String, int, Path...). r",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:13775,avail,available,13775,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html,1,['avail'],['available']
Availability,"GB. RenderedImageServer.Builder; settings(ImageDisplaySettings settings). Specify the ImageDisplaySettings that control conversion to RGB. RenderedImageServer.Builder; store(DefaultImageRegionStore store). Specify the region store used to paint the underlying image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(QuPathViewer viewer); Create a rendered image server build using viewer defaults. Parameters:; viewer - . Builder; public Builder(ImageData<BufferedImage> imageData); Create a rendered image server for the specified ImageData;. Parameters:; imageData - . Method Details. downsamples; public RenderedImageServer.Builder downsamples(double... downsamples); Specify downsamples; this is especially important for 'thick' objects (annotations, TMA cores); because the downsamples define the resolutions at which these will be rendered. Parameters:; downsamples - ; Returns:. display; @Deprecated; public RenderedImageServer.Builder display(ImageDisplay display); Deprecated.; use renderer(ImageRenderer) instead (since an ImageDisplay is also an ImageRenderer. Specify the ImageDisplay that controls conversion to RGB. Parameters:; display - ; Returns:. settings; public RenderedImageServer.Builder settings(ImageDisplaySettings settings); Specify the ImageDisplaySettings that control conversion to RGB.; This will only be applied if no renderer has been set. Parameters:; settings - ; Returns:; Since:; v0.5.0; See Also:. renderer(ImageRenderer). renderer; public RenderedImageServer.Builder renderer(ImageRenderer renderer); Specify the ImageRenderer that controls conversion to RGB. Parameters:; renderer - ; Returns:; See Also:. settings(ImageDisplaySettings). overlayOpacity; public RenderedImageServer.Builder overlayOpacity(double opacity); Specify the opacity for overlay layers.; This will be clipped to the range 0 (transparent) and 1 (opaque).",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html:3279,down,downsamples,3279,javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html,1,['down'],['downsamples']
Availability,"Get the ROI for the primary selected object within the current PathObjectHierarchy. static Collection<PathObject>; getTileObjects(). Get a list of the current tile objects. static List<TMACoreObject>; getTMACoreList(). Get the list of TMA core objects for the current hierarchy. static boolean; hasMeasurement(PathObject pathObject,; String measurementName). Test whether a PathObject has a specified measurement in its measurement list. static boolean; importObjectsFromFile(String path). Import all PathObjects from the given file. static void; insertObjects(Collection<? extends PathObject> pathObjects). Insert objects into the hierarchy, resolving their location and setting parent/child relationships. static void; insertObjects(PathObject pathObject). Insert object into the hierarchy, resolving its location and setting parent/child relationships. static boolean; isDirectory(String path). Query if a file path corresponds to a directory. static boolean; isTMADearrayed(). Returns true if TMA cores are available. static DensityMaps.DensityMapBuilder; loadDensityMap(String name). Load a density map for a project or file path. static ImageData<BufferedImage>; loadImageData(String path,; boolean setBatchData). Deprecated. static ObjectClassifier<BufferedImage>; loadObjectClassifier(String... names). Load an object classifier for a project or file path. static PixelClassifier; loadPixelClassifier(String name). Load a pixel classifier for a project or file path. static String; locateFile(String nameOrPath). Locate a specified file based upon its name or path, with a search depth of 4. static String; locateFile(String nameOrPath,; int searchDepth). Locate a specified file based upon its name or path. static Integer; makeARGB(int a,; int r,; int g,; int b). Make a packed int representation of an ARGB color. static File; makeFileInProject(String... more). Build a file path relative to the current project, and create a File object. static boolean; makeInverseAnnotation(). Make an in",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:21604,avail,available,21604,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['avail'],['available']
Availability,"HistogramChart. Set the histogram display mode. setDoFasterRepaint(boolean) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set flag to indicate that repaints should prefer speed over accuracy. setDoubleLastValue(double) - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; setDoubleLastValue(double) - Method in class qupath.lib.plugins.parameters.IntParameter;  ; setDoubleLastValue(double) - Method in class qupath.lib.plugins.parameters.NumericParameter. A class for setting the numeric value as a double (subclasses should convert this as needed). setDownsample(double) - Method in class qupath.lib.gui.commands.MiniViewers.MiniViewerManager. Set the downsample to use within the mini viewers. setDownsampleFactor(double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the downsample factor for this viewer. setDownsampleFactor(double, double, double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards. setDownsampleFactor(double, double, double, boolean) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards. setError() - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level to LogLevel.ERROR. setErrorWriter(Writer) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the main error writer. setExcludeOutsideRange(boolean) - Method in class qupath.lib.gui.tools.MeasurementMapper. Specify whether out-of-range values should be excluded. setExpandToWindow(boolean) - Method in class qupath.lib.gui.panes.SimpleImageViewer. Control whether the image should be allowed to expand beyond its preferred width and height to fill the window. setFeatureOp(ImageDataOp) - Method in class qupath.process.gui.commands.ml.PixelClassifierTraining. Set the ImageDataOp used to calculate features.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:924732,down,downsample,924732,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['down'],['downsample']
Availability,"I,String> menuitemText). Create a menu that displays recent items, stored in the form of URIs, customizing the text displayed for the menu items. static org.controlsfx.glyphfont.Glyph; ensureDuplicatableGlyph(org.controlsfx.glyphfont.Glyph glyph). Ensure that a Glyph is 'duplicatable', without losing its key properties. static org.controlsfx.glyphfont.Glyph; ensureDuplicatableGlyph(org.controlsfx.glyphfont.Glyph glyph,; boolean useFill). Ensure that a Glyph is 'duplicatable', optionally retaining any fill. static ImageData.ImageType; estimateImageType(ImageServer<BufferedImage> server,; BufferedImage imgThumbnail). Make a semi-educated guess at the image type of a PathImageServer. static String; getMagnificationString(QuPathViewer viewer). Get an appropriate String to represent the magnification of the image currently in the viewer. static WritableImage; getScaledRGBInstance(BufferedImage img,; int targetWidth,; int targetHeight). Get a scaled (RGB or ARGB) image, achieving reasonable quality even when scaling down by a considerably amount. static void; installRangePrompt(Slider slider). Install a mouse click listener to prompt the user to input min/max values for a slider. static BufferedImage; makeFullScreenshot(). Make a BufferedImage snapshot of the full screen. static BufferedImage; makeSnapshot(). Make a BufferedImage snapshot of the current GUI. static BufferedImage; makeSnapshot(QuPathGUI qupath,; GuiTools.SnapshotType type). Make a snapshot (image) showing what is currently displayed in a QuPath window; or the active viewer within QuPath, as determined by the SnapshotType. static BufferedImage; makeSnapshot(QuPathGUI qupath,; QuPathViewer viewer,; GuiTools.SnapshotType type). Make a snapshot (image) showing what is currently displayed in a QuPath window; or the specified viewer, as determined by the SnapshotType. static WritableImage; makeSnapshotFX(QuPathGUI qupath,; GuiTools.SnapshotType type). Make a snapshot as a JavaFX Image, using the current viewer i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html:2747,down,down,2747,javadoc/docs/qupath/lib/gui/tools/GuiTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html,1,['down'],['down']
Availability,"IllegalArgumentException; Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI.; ; For greater control, see createRandomRectangle(ROI, double, double, int, boolean, Random). Parameters:; mask - region defining the area in which the rectangle can be located, including the image plane information; width - width of the rectangle to create; height - height of the rectangle to create; Returns:; a rectangle with the specified width and height and covered by the mask, or null if it was not possible to find a rectangle ; that meets this criterion; Throws:; IllegalArgumentException - if either the mask width or height is too small for the requested width and height; See Also:. createRandomRectangle(ROI, double, double, int, boolean, Random). createRandomRectangle; public static ROI createRandomRectangle(ROI mask,; double width,; double height,; int maxAttempts,; boolean permitErosion,; Random random); throws IllegalArgumentException; Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI, ; using a specified maximum number of attempts. Parameters:; mask - region defining the area in which the rectangle can be located, including the image plane information; width - width of the rectangle to create; height - height of the rectangle to create; maxAttempts - the maximum number of attempts to make when attempting to fit the rectangle within the ROI; permitErosion - optionally make an additional attempt to locate a rectangle by eroding the mask and using the remaining ; region. For a non-square rectangle, this uses the length of the longest side for erosion - and therefore ; may exclude some possible rectangles from consideration.; random - random number generator to use for the initial attempts (may be null to use a default); Returns:; a rectangle with the specified width and height and covered by the mask, or null if it was not possible t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:19439,mask,mask,19439,javadoc/docs/qupath/lib/roi/RoiTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html,2,['mask'],['mask']
Availability,"Image> params,; String channelName,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. Parameters:; params - processor parameters; channelName - name of the channel to extract; roiFunction - the function used to select a ROI from an object (generally the main ROI or nucleus),; or null to use no ROI at all; Returns:; Throws:; IOException. extractMaskedPixels; public static double[] extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; ColorTransforms.ColorTransform transform,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from the image using the specified transform, and applying any ROI mask. Parameters:; params - processor parameters; transform - transform to extract single-channel pixels; roiFunction - the function used to select a ROI from an object (generally the main ROI or nucleus),; or null to use no ROI at all; Returns:; Throws:; IOException. maskObject; public static List<PathObject> maskObject(ROI parentROI,; PathObject child); Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. Parameters:; parentROI - ; child - ; Returns:; either an empty or singleton list, depending upon whether the child object has a non-empty; ROI after the masking is applied. maskObjectAndSplit; public static List<PathObject> maskObjectAndSplit(ROI parentROI,; PathObject child); Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. Parameters:; parentROI - ; child - ; Returns:; a list of objects, either empty or containing one or more objects. containsCentroid; public static boolean containsCentroid(ROI roi,; PathObject child); Check whether a child object's centroid is contained within a ROI. Parameters:; roi - ; child - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html:4024,mask,maskObject,4024,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html,9,['mask'],"['mask', 'maskObject', 'maskObjectAndSplit', 'masking']"
Availability,"ImageServer at a specified downsample level. static boolean; setImageName(ImageServer<?> server,; String name). Set the name property of the metadata for an ImageServer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ServerTools; public ServerTools(). Method Details. getDefaultShortServerName; public static String getDefaultShortServerName(URI uri); Get the default shortened server name given the server's path. Parameters:; uri - ; Returns:. getChannelIndex; public static int getChannelIndex(ImageServer<?> server,; String channelName); Get the index of the first channel of a server with a specified channel name. Parameters:; server - ; channelName - ; Returns:; index (0-based) of the first channel with a name matching channelName, or -1 if no channel is found. getPreferredResolutionLevel; public static int getPreferredResolutionLevel(ImageServer<?> server,; double requestedDownsample); Get the preferred resolution level to request regions from an ImageServer at a specified downsample level. Parameters:; server - ; requestedDownsample - ; Returns:; See Also:. getPreferredDownsampleFactor(ImageServer, double). getPreferredDownsampleFactor; public static double getPreferredDownsampleFactor(ImageServer<?> server,; double requestedDownsample); Get the downsample factor supported by the server that is the best match for the requested downsample.; ; Generally, this will be <= the requested downsample (but it may be slightly more if the error introduced; would be very small, i.e. if 4 is requested and 4.0001 is available, 4.0001 would be returned). Parameters:; server - ; requestedDownsample - ; Returns:; See Also:. getPreferredResolutionLevel(ImageServer, double). getDisplayableImageName; public static String getDisplayableImageName(ImageServer<?> server); Get an ImageServer name suitable for displaying.; If the server is null, ""No image"" is returned. Otherwise, ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ServerTools.html:3123,down,downsample,3123,javadoc/docs/qupath/lib/images/servers/ServerTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ServerTools.html,1,['down'],['downsample']
Availability,"Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Class OpenCVDnn.Builder. java.lang.Object; qupath.opencv.dnn.OpenCVDnn.Builder. Enclosing class:; OpenCVDnn. public static class OpenCVDnn.Builder; extends Object; Helper class to build an OpenCVDnn. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; OpenCVDnn.Builder; backend(int backend). Specify the backend, e.g. OpenCVDnn; build(). Build a new OpenCVDnn. OpenCVDnn.Builder; classification(). Set the model type to be OpenCVDnn.ModelType.CLASSIFICATION. OpenCVDnn.Builder; config(String pathConfig). Path to config file (if required). OpenCVDnn.Builder; config(URI pathConfig). Path to config file (if required). OpenCVDnn.Builder; cpu(). Request CPU backend and target, if available. OpenCVDnn.Builder; cuda(). Request CUDA backend and target, if available. OpenCVDnn.Builder; cuda16(). Request CUDA backend and target, if available, with 16-bit floating point. OpenCVDnn.Builder; detection(). Set the model type to be OpenCVDnn.ModelType.DETECTION. OpenCVDnn.Builder; framework(String name). Specify the framework (used to identify the appropriate loader for the model). OpenCVDnn.Builder; mean(Scalar mean). Mean values which should be subtracted from the image channels before input to the Net. OpenCVDnn.Builder; modelType(OpenCVDnn.ModelType type). Set the model type, used by OpenCVDnn.buildModel(). OpenCVDnn.Builder; name(String name). User-friendly name to use with this model. OpenCVDnn.Builder; opencl(). Specify OpenCL target. OpenCVDnn.Builder; opencl16(). Specify OpenCL target with 16-bit floating point. OpenCVDnn.Builder; outputs(String... layers). Set the layer outputs. OpenCVDnn.Builder; outputs(Map<String,DnnShape> outputs). Set the layer outputs and shapes. OpenCVDnn.Builder; scale(double scale). Scale values,",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html:1162,avail,available,1162,javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html,1,['avail'],['available']
Availability,"Input,; BufferedImage imgOutput). Apply the required transforms to a BufferedImage to get the appropriate display. static BufferedImage; applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput,; List<? extends ChannelDisplayInfo> selectedChannels,; boolean useGrayscaleLuts). Deprecated.; use instead applyTransforms(BufferedImage, BufferedImage, List, ChannelDisplayMode). static BufferedImage; applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput,; List<? extends ChannelDisplayInfo> selectedChannels,; ChannelDisplayMode mode). Convert an image to RGB by applying the specified ChannelDisplayInfos and ChannelDisplayMode. void; autoSetDisplayRange(ChannelDisplayInfo info). Automatically set the display range for a channel, using the default saturation defined in PathPrefs.autoBrightnessContrastSaturationPercentProperty(). void; autoSetDisplayRange(ChannelDisplayInfo info,; double saturation). Automatically set the display range for a channel. ObservableList<ChannelDisplayInfo>; availableChannels(). ObservableList containing the channels currently available for display. LongProperty; changeTimestampProperty(). Timestamp for the most recent change. static ImageDisplay; create(ImageData<BufferedImage> imageData). Create a new image display, and set the specified image data. ObjectBinding<ChannelDisplayMode>; displayMode(). Get the value of useInvertedBackgroundProperty(). Histogram; getHistogram(ChannelDisplayInfo info). Returns a histogram for a ChannelInfo, or none if no histogram is available (e.g. ImageData<BufferedImage>; getImageData(). Get the current image data. long; getLastChangeTimestamp(). Get a timestamp the last known changes for the object. ChannelDisplayInfo; getSwitchToGrayscaleChannel(). Get the value of switchToGrayscaleChannelProperty(). String; getTransformedValueAsString(BufferedImage img,; int x,; int y). Get a string representation of a transformed pixel value, using the currently-selected channels. boolean; isCompatible(ImageDisp",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html:2711,avail,availableChannels,2711,javadoc/docs/qupath/lib/display/ImageDisplay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html,1,['avail'],['availableChannels']
Availability,"J Roi, using an ImagePlus to help set properties. Parameters:; roi - the ImageJ ROI; xOrigin - the x-origin to translate the Roi; should be Calibration.xOrigin if available, or 0 otherwise; yOrigin - the y-origin to translate the Roi; should be Calibration.yOrigin if available, or 0 otherwise; downsampleFactor - the downsample factor used for rescaling (or 1.0 for no rescaling); plane - the specific plane to use for the QuPath ROI; if null, the ImageJ Roi position properties will be used instead, where possible; Returns:; a PathObject or null if no object could be created (e.g. the ImageJ roi is null or incompatible); Since:; v0.4.0; See Also:. convertToPathObject(ImagePlus, ImageServer, Roi, double, Function, ImagePlane); convertToDetection(Roi, double, ImagePlus). convertToAnnotation; public static PathObject convertToAnnotation(Roi roi,; double downsampleFactor,; ImagePlus imp); Create an annotation object for a specific ImageJ Roi. Parameters:; roi - the ImageJ ROI; downsampleFactor - the downsample factor used for rescaling (or 1.0 for no rescaling); imp - the ImagePlus associated with this Roi; it is used to determine the xOrigin, yOrigin and image plane; Returns:; a PathObject or null if no object could be created (e.g. the ImageJ roi is null or incompatible); Since:; v0.4.0; See Also:. convertToPathObject(ImagePlus, ImageServer, Roi, double, Function, ImagePlane); convertToAnnotation(Roi, double, double, double, ImagePlane). convertToDetection; public static PathObject convertToDetection(Roi roi,; double downsampleFactor,; ImagePlus imp); Create a detection object for a specific ImageJ Roi. Parameters:; roi - the ImageJ ROI; downsampleFactor - the downsample factor used for rescaling (or 1.0 for no rescaling); imp - the ImagePlus associated with this Roi; it is used to determine the xOrigin, yOrigin and image plane; Returns:; a PathObject or null if no object could be created (e.g. the ImageJ roi is null or incompatible); Since:; v0.4.0; See Also:. convertTo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:15558,down,downsampleFactor,15558,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,2,['down'],"['downsample', 'downsampleFactor']"
Availability,"List<Roi>; readImageJRois(File file). Read ImageJ Rois from a .roi or a RoiSet.zip file. static void; setMemoryThreshold(double threshold);  ; static void; setTitleFromObject(PathImage<ImagePlus> pathImage,; PathObject pathObject). Set the name of an image based on a PathObject. static double; tryToParseMicrons(double value,; String unit). Based on a value and its units, try to get something suitable in microns. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. IJTools; public IJTools(). Method Details. setMemoryThreshold; public static void setMemoryThreshold(double threshold). Parameters:; threshold - - value in the interval ]0;1] defining the maximum remaining memory fraction an image can have ; when importing an image to ImageJ. isMemorySufficient; public static boolean isMemorySufficient(RegionRequest region,; ImageData<BufferedImage> imageData); throws Exception; Check if sufficient memory is available to request pixels for a specific region, and the number ; of pixels is less than the maximum length of a Java array. Parameters:; region - the requested region coming from; imageData - this BufferedImage; Returns:; true if the memory is sufficient; Throws:; Exception - either the fact that ImageJ cannot handle the image size or that the memory is insufficient. extractHyperstack; public static ImagePlus extractHyperstack(ImageServer<BufferedImage> server,; RegionRequest request); throws IOException; Extract a full ImageJ hyperstack for a specific region, using all z-slices and time points. Parameters:; server - ; request - ; Returns:; Throws:; IOException. extractHyperstack; public static ImagePlus extractHyperstack(ImageServer<BufferedImage> server,; RegionRequest request,; int zStart,; int zEnd,; int tStart,; int tEnd); throws IOException; Extract a full ImageJ hyperstack for a specific region, for specified ranges of z-slices and time points. Parameter",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:8635,avail,available,8635,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,1,['avail'],['available']
Availability,"LoadPixelClassifierCommand(QuPathGUI) - Static method in class qupath.process.gui.commands.ui.LoadResourceCommand. Create a Runnable to interactively load a pixel classifier and display it in all viewers. createLogFiles - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; createLogWriter(Logger, Level) - Static method in class qupath.lib.scripting.LoggingTools. Create a Writer that passes messages to the log at a specified level. createManager(QuPathViewer) - Static method in class qupath.lib.gui.commands.MiniViewers. Create a MiniViewers.MiniViewerManager associated with a specified viewer. createManager(QuPathViewer, Collection<? extends ChannelDisplayInfo>) - Static method in class qupath.lib.gui.commands.MiniViewers. Create a MiniViewers.MiniViewerManager displaying multiple channels and ; associated with a specified viewer. createMask(Mat, DoublePredicate, double, double) - Static method in class qupath.opencv.tools.OpenCVTools. Create a mask by applying a predicate to pixel values. createMaskAndSplitObjectOutputHandler(OutputHandler.OutputToObjectConverter<S, T, U>) - Static method in interface qupath.lib.experimental.pixels.OutputHandler. Create an output handler that can be used to add objects to the parent object, applying the ROI mask and; splitting objects with discontinuous ROIs. createMatImageSupplier() - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create an ImageSupplier that returns an OpenCV Mat. createMatMaskSupplier() - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create a MaskSupplier that returns an OpenCV Mat. createMaximumChannelTransform() - Static method in class qupath.lib.images.servers.ColorTransforms. Create a ColorTransform that calculates the maximum of all channels. createMeanChannelTransform() - Static method in class qupath.lib.images.servers.ColorTransforms. Create a ColorTransform that calculates the mean of all channels. createMeasurement(String, double)",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:195417,mask,mask,195417,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['mask'],['mask']
Availability,"Loader; public OpenSlideLoader(). Method Details. tryToLoadQuietly; public static boolean tryToLoadQuietly(String... searchPath); Try to load OpenSlide, but don't throw an exception if it fails. Parameters:; searchPath - optional search paths that may be provided to assist with finding the preferred library.; Returns:; true if OpenSlide was loaded successfully, false otherwise. tryToLoad; public static boolean tryToLoad(String... searchPath); throws UnsatisfiedLinkError; Try to load OpenSlide. This is liable to throw an exception if the library cannot be loaded. Parameters:; searchPath - optional search paths that may be provided to assist with finding the preferred library.; Returns:; true if OpenSlide was loaded successfully, false otherwise.; Throws:; UnsatisfiedLinkError. getLibraryVersion; public static String getLibraryVersion(); Get the version of the OpenSlide library.; This will attempt to load OpenSlide if it is not already available. Returns:; a version string for the library, or null if the library is not available. isOpenSlideAvailable; public static boolean isOpenSlideAvailable(); Query whether OpenSlide has already been loaded.; This will not attempt to load the library; for that, use #tryToLoadQuietly(), getLibraryVersion() ; or tryToLoad(String...). Returns:; true if OpenSlide has been loaded successfully, false otherwise. openImage; public static OpenSlide openImage(String path); throws IOException; Open an image using OpenSlide, returning an OpenSlide instance to access pixels and metadata.; ; This will attempt to load OpenSlide if it has not already been loaded, throwing an IOException if; this fails.; Use isOpenSlideAvailable() to check whether OpenSlide is available before calling this. Parameters:; path - the image path (usually an absolute file path); Returns:; an OpenSlide instance; Throws:; IOException - if OpenSlide could not be loaded failed to open the file. detectVendor; public static String detectVendor(String path); Try to detect the v",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html:2567,avail,available,2567,javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html,1,['avail'],['available']
Availability,"MAGrid(String, String, boolean) - Static method in class qupath.lib.scripting.QP. Relabel the current TMA grid. relabelTMAGrid(PathObjectHierarchy, String, String, boolean) - Static method in class qupath.lib.scripting.QP. Relabel a TMA grid. relabelTMAGrid(TMAGrid, String, String, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Relabel a TMA grid. relative(URI, URI) - Method in class qupath.lib.io.UriUpdater. Identify replacements for missing URIs by relativizing URI. relative(Path, Path) - Method in class qupath.lib.io.UriUpdater. Identify replacements for missing URIs by relativizing paths. relativeToUserDirectory() - Method in class qupath.lib.gui.FileCopier. Specify that the copying is relative to the QuPath user directory. RELOAD_DATA - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.Actions;  ; reloadImageData(QuPathGUI, ImageData<BufferedImage>) - Static method in class qupath.lib.gui.commands.Commands. Reload the specified image data from a previously saved version,if available. remove(String) - Method in interface qupath.lib.measurements.MeasurementList. Remove a named measurement. remove(String) - Method in interface qupath.lib.projects.ResourceManager.Manager. Remove a resource within the project. REMOVE_COLUMN - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions.RemoveActions;  ; REMOVE_FRAGMENTS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.AnnotationActions;  ; REMOVE_ROW - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions.RemoveActions;  ; removeActions - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions;  ; RemoveActions() - Constructor for class qupath.lib.gui.actions.menus.TMAMenuActions.Actions.RemoveActions;  ; removeAllImages(Collection<ProjectImageEntry<T>>, boolean) - Method in interface qupath.lib.projects.Project. Remove multiple images from the project, optionally including associated data. removeByAreas(ByteProcessor, doub",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:842732,avail,available,842732,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"Manager, getWidth, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, readBufferedImage, readRegion, readRegion, readRegion. Method Details. getInstanceLabels; public Map<PathObject,Integer> getInstanceLabels(); Get a mapping between objects and instance labels. Returns:; the instance label map, or an empty map if no objects are available or ; LabeledImageServer.Builder.useInstanceLabels() was not selected. getLabels; public Map<PathClass,Integer> getLabels(); Get an unmodifiable map of classifications and their corresponding labels.; Note that multiple classifications may use the same integer label. Returns:; a map of labels, or empty map if none are available or useInstanceLabels() was selected. getBoundaryLabels; public Map<PathClass,Integer> getBoundaryLabels(); Get an unmodifiable map of classifications and their corresponding boundary labels, if available.; Note that multiple classifications may use the same integer label. Returns:; a map of boundary labels, or empty map if none are available or useInstanceLabels() was selected. createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Returns null (does not support ServerBuilders). Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Specified by:; getURIs in interface ImageServer<BufferedImage>; Returns:. createID; protected String createID(); Returns a UUID. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. isEmp",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html:5107,avail,available,5107,javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html,1,['avail'],['available']
Availability,"MeasurementMapper. Set the measurement value that maps to the first color in the color mapper. setDisplayMode(HistogramChart.DisplayMode) - Method in class qupath.lib.gui.charts.HistogramChart. Set the histogram display mode. setDoFasterRepaint(boolean) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set flag to indicate that repaints should prefer speed over accuracy. setDoubleLastValue(double) - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; setDoubleLastValue(double) - Method in class qupath.lib.plugins.parameters.IntParameter;  ; setDoubleLastValue(double) - Method in class qupath.lib.plugins.parameters.NumericParameter. A class for setting the numeric value as a double (subclasses should convert this as needed). setDownsample(double) - Method in class qupath.lib.gui.commands.MiniViewers.MiniViewerManager. Set the downsample to use within the mini viewers. setDownsampleFactor(double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the downsample factor for this viewer. setDownsampleFactor(double, double, double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards. setDownsampleFactor(double, double, double, boolean) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards. setError() - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level to LogLevel.ERROR. setErrorWriter(Writer) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the main error writer. setExcludeOutsideRange(boolean) - Method in class qupath.lib.gui.tools.MeasurementMapper. Specify whether out-of-range values should be excluded. setExpandToWindow(boolean) - Method in class qupath.lib.gui.panes.SimpleImageViewer. Control whether the image should be allowed to expand beyond its preferred width a",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:924595,down,downsample,924595,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['down'],['downsample']
Availability,"Measurements(ImageData, Collection, ShapeFeatures...) can be used without specifying any features.; This method requires at least one feature so as to have a distinct method signature. Parameters:; imageData - the image to which the objects belong. This is used to determine pixel calibration and to fire an update event. May be null.; pathObjects - the objects that should be measured; feature - first feature to add; additionalFeatures - optional array of Strings specifying the features to add. addShapeMeasurements; public static void addShapeMeasurements(ImageData<?> imageData,; Collection<? extends PathObject> pathObjects,; ObjectMeasurements.ShapeFeatures... features); Add shape measurements to the specified objects. Parameters:; imageData - the image to which the objects belong. This is used to determine pixel calibration and to fire an update event. May be null.; pathObjects - the objects that should be measured; features - the specific features to add. If none are specified, all available features will be added. setChannelNames; public static void setChannelNames(String... names); Set the channel names for the current ImageData. Parameters:; names - ; See Also:. setChannelNames(ImageData, String...). setChannelNames; public static void setChannelNames(ImageData<?> imageData,; String... names); Set the channel names for the specified ImageData.; It is not essential to pass names for all channels: ; by passing n values, the first n channel names will be set.; Any name that is null will be left unchanged. Parameters:; imageData - ; names - . setChannelColors; public static void setChannelColors(Integer... colors); Set the channel colors for the current ImageData. Parameters:; colors - ; See Also:. setChannelColors(ImageData, Integer...); setChannelNames(ImageData, String...). setChannelColors; public static void setChannelColors(ImageData<?> imageData,; Integer... colors); Set the channel colors for the specified ImageData.; It is not essential to pass names for all",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:62546,avail,available,62546,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['avail'],['available']
Availability,"MenubarProperty; Legacy property used to specify whether the system menubar should be used for the main QuPath stage.; This should be bound bidirectionally to the corresponding property of any menubars created. See Also:. useSystemMenubarProperty(). numCommandThreads; public static IntegerProperty numCommandThreadsProperty; Property specifying the preferred number of threads QuPath should use for multithreaded commands. See Also:. numCommandThreadsProperty(). showImageNameInTitle; public static BooleanProperty showImageNameInTitleProperty; Property specifying if QuPath should show the image title in the main window title.; For privacy reasons it may be desirable to turn this off in some cases. See Also:. showImageNameInTitleProperty(). autoUpdateCheck; public static ObjectProperty<PathPrefs.AutoUpdateType> autoUpdateCheckProperty; Check for updates when launching QuPath, if possible. See Also:. autoUpdateCheckProperty(). maskImageNames; public static BooleanProperty maskImageNamesProperty; Request that image names are hidden within the user interface. See Also:. maskImageNamesProperty(). defaultLocale; public static ObjectProperty<Locale> defaultLocaleProperty; Get a property for setting the default Locale.; Setting this locale impacts both Locale.Category.FORMAT and Locale.Category.DISPLAY, ; and may trigger an update to defaultLocaleDisplayProperty() and defaultLocaleFormatProperty() ; if these have been changed. Since:; v0.4.0; See Also:. defaultLocaleProperty(). defaultLocaleFormat; public static ObjectProperty<Locale> defaultLocaleFormatProperty; Get a property for setting the default Locale for Locale.Category.FORMAT.; Setting this property also results in the Locale being changed to match. See Also:. defaultLocaleFormatProperty(). defaultLocaleDisplay; public static ObjectProperty<Locale> defaultLocaleDisplayProperty; Get a property for setting the default Locale for Locale.Category.DISPLAY.; Setting this property also results in the Locale being changed to ma",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:24832,mask,maskImageNames,24832,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,2,['mask'],"['maskImageNames', 'maskImageNamesProperty']"
Availability,"Metadata. Get the channel type, which can be used to interpret the channels. getChartDataAsString(XYChart<Number, Number>) - Static method in class qupath.lib.gui.charts.ChartTools. Get a string representation of chart data, in such a way that it could be pasted into a spreadsheet. getCheckpoints() - Method in class qupath.lib.common.Timeit. Get an list of all the checkpoints. getChildObjects() - Method in class qupath.lib.objects.PathObject. Get a collection of child objects. getChildObjects(Collection<PathObject>) - Method in class qupath.lib.objects.PathObject. Get a collection containing all child objects. getChildObjectsAsArray() - Method in class qupath.lib.objects.PathObject. Get a defensive copy of child objects as an array. getChoiceParameterValue(String) - Method in class qupath.lib.plugins.parameters.ParameterList. Get a choice parameter value (or its default) for the specified key. getChoices() - Method in class qupath.lib.plugins.parameters.ChoiceParameter. Get a list of available choices. getChooser(Window) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Get a QuPathChooser instance linked to a specific window. getCircularity(ROI) - Static method in class qupath.lib.roi.RoiTools. Get circularity measurement for Area ROIs, calculated as 4 * PI * (area / perimeter^2). getCircularity(ROI, double, double) - Static method in class qupath.lib.roi.RoiTools. Get circularity measurement for area ROIs, with optional pixel calibration, calculated as 4 * PI * (area / perimeter^2). getCircularStructuringElement(int) - Static method in class qupath.opencv.tools.OpenCVTools. Deprecated.; OpenCVTools.createDisk(int, boolean) gives more reliable shapes. getCitationUrl() - Static method in class qupath.lib.gui.Urls. Get a URL pointing to a page that explains how to cite this version of QuPath in a publication. getClassification(ImageServer<BufferedImage>, int, int, int, int) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Reque",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:352355,avail,available,352355,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"Method Details. addShapeMeasurements; public static void addShapeMeasurements(PathObject pathObject,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features); Add shape measurements for one object. If this is a cell, measurements will be made for both the ; nucleus and cell boundary where possible. Parameters:; pathObject - the object for which measurements should be added; cal - pixel calibration, used to determine units and scaling; features - specific features to add; if empty, all available shape features will be added. addShapeMeasurements; public static void addShapeMeasurements(Collection<? extends PathObject> pathObjects,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features); Add shape measurements for multiple objects. If any of these objects is a cell, measurements will be made for both the ; nucleus and cell boundary where possible. Parameters:; pathObjects - the objects for which measurements should be added; cal - pixel calibration, used to determine units and scaling; features - specific features to add; if empty, all available shape features will be added. addIntensityMeasurements; public static void addIntensityMeasurements(ImageServer<BufferedImage> server,; PathObject pathObject,; double downsample,; Collection<ObjectMeasurements.Measurements> measurements,; Collection<ObjectMeasurements.Compartments> compartments); throws IOException; Measure all channels of an image for one individual object or cell.; All compartments are measured where possible (nucleus, cytoplasm, membrane and full cell).; ; Note: This implementation is likely to change in the future, to enable neighboring cells to be ; measured more efficiently. Parameters:; server - the server containing the pixels (and channels) to be measured; pathObject - the cell to measure (the MeasurementList will be updated); downsample - resolution at which to request pixels; measurements - requested measurements to make; compartments - the cell compartments to measure; ig",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html:3127,avail,available,3127,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html,1,['avail'],['available']
Availability,"Method in class qupath.lib.display.settings.ChannelColor. Get the green value. getGreenOpticalDensities(int[], double, float[]) - Static method in class qupath.lib.color.ColorDeconvolutionHelper. Convert red channel of packed rgb pixel to optical density values, using a specified maximum value. getGridHeight() - Method in class qupath.lib.objects.hierarchy.DefaultTMAGrid;  ; getGridHeight() - Method in interface qupath.lib.objects.hierarchy.TMAGrid. Number of cores along the vertical axis of the grid. getGridLines() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; getGridWidth() - Method in class qupath.lib.objects.hierarchy.DefaultTMAGrid;  ; getGridWidth() - Method in interface qupath.lib.objects.hierarchy.TMAGrid. Number of cores along the horizontal axis of the grid. getHalo() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the 'halo' around the output. getHandles() - Method in class qupath.lib.roi.RoiEditor. Get all the handles for the current ROI being edited, or an empty list if no handles are available. getHazardRatio() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the calculated hazard ratio. getHazardRatioLowerConfidence() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the lower bound of the hazard ratio confidence interval. getHazardRatioUpperConfidence() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the upper bound of the hazard ratio confidence interval. getHeight() - Method in class qupath.imagej.tools.PixelImageIJ;  ; getHeight() - Method in interface qupath.lib.analysis.images.SimpleImage. Get the image height. getHeight() - Method in class qupath.lib.geom.ImmutableDimension. Get the ImmutableDimension height. getHeight() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getHeight() - Method in interface qupath.lib.images.servers.ImageServer. Height of the full-resolution image in pixels. getHeight",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:399628,avail,available,399628,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"Method in class qupath.lib.gui.commands.MiniViewers.MiniViewerManager. Get the downsample used within the mini viewers. getDownsample() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel. Get the downsample factor for this level. getDownsample() - Method in class qupath.lib.images.servers.TileRequest. Get the downsample value for this tile. getDownsample() - Method in class qupath.lib.regions.RegionRequest. Get the requested downsample factor, defining the resolution at which pixels should be returned. getDownsampleFactor() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the current downsample factor. getDownsampleFactor() - Method in interface qupath.lib.images.PathImage. Get the downsample factor originally used when obtaining the image from an ImageServer; will be 1 if the image is full-resolution. getDownsampleFactor(ImageServer<?>, double) - Static method in class qupath.lib.images.servers.ServerTools. Calculate a downsample factor for a server given a preferred pixel size. getDownsampleForLevel(int) - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the downsample factor for a specific resolution level. getDownsampleForResolution(int) - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getDownsampleForResolution(int) - Method in interface qupath.lib.images.servers.ImageServer. Get the downsample factor for a specified resolution level, where level 0 is the full resolution image ; and nResolutions() - 1 is the lowest resolution available. getDummyColorModel(int) - Static method in class qupath.lib.color.ColorModelFactory. Get a dummy ColorModel instance. getEdgeMax() - Method in class qupath.lib.analysis.stats.Histogram. Get the maximum edge of the histogram. getEdgeMin() - Method in class qupath.lib.analysis.stats.Histogram. Get the minimum edge of the histogram. getEdgeRange() - Method in class qupath.lib.analysis.stats.Histogram. Get the histogram edge range, defined as the maximum ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:386525,down,downsample,386525,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['down'],['downsample']
Availability,"Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier;  ; createTrainData(Mat, Mat, Mat, boolean) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV;  ; createTrainData(Mat, Mat, Mat, boolean) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV;  ; createTrainData(Mat, Mat, Mat, boolean) - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier;  ; createTrainData(Mat, Mat, Mat, boolean) - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Create training data in the format required by this classifier. createTrainingData(Collection<ImageData<BufferedImage>>) - Method in class qupath.process.gui.commands.ml.PixelClassifierTraining. Create training data, using a label map automatically generated from the available classifications. createTrainingData(ImageData<BufferedImage>) - Method in class qupath.process.gui.commands.ml.PixelClassifierTraining. Create training data, using a label map automatically generated from the available classifications. createTrainingDataForLabelMap(Collection<ImageData<BufferedImage>>, Map<PathClass, Integer>) - Method in class qupath.process.gui.commands.ml.PixelClassifierTraining. Get a classifier training map, using a predefined label map (which determines which classifications to use). CreateTrainingImageCommand - Class in qupath.process.gui.commands. Command to generate a SparseImageServer from multiple image regions across a project. CreateTrainingImageCommand() - Constructor for class qupath.process.gui.commands.CreateTrainingImageCommand;  ; createTreeCell() - Static method in class qupath.lib.gui.tools.PathObjectLabels. Create a TreeCell for displaying a PathObject using the default PathObject.toString() method. createTreeCell(Function<PathObject, String>) - Static method in class qupath.lib.gui.tools.PathObjectLabels. Create a TreeCell for displaying a PathObject using a custom method to create a string representation of the object. createU",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:234042,avail,available,234042,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.analysis.features; Class ObjectMeasurements. java.lang.Object; qupath.lib.analysis.features.ObjectMeasurements. public class ObjectMeasurements; extends Object; Experimental class to generate object measurements.; ; May very well be moved, removed or refactored in a future release... Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; ObjectMeasurements.Compartments. Cell compartments. static enum ; ObjectMeasurements.Measurements. Requested intensity measurements. static enum ; ObjectMeasurements.ShapeFeatures. Standard measurements that may be computed from shapes. Constructor Summary; Constructors. Constructor; Description; ObjectMeasurements();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; addIntensityMeasurements(ImageServer<BufferedImage> server,; PathObject pathObject,; double downsample,; Collection<ObjectMeasurements.Measurements> measurements,; Collection<ObjectMeasurements.Compartments> compartments). Measure all channels of an image for one individual object or cell. static void; addShapeMeasurements(Collection<? extends PathObject> pathObjects,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features). Add shape measurements for multiple objects. static void; addShapeMeasurements(PathObject pathObject,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features). Add shape measurements for one object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ObjectMeasurements; public ObjectMeasurements(). Method Details. addShapeMeasurements; public static void addShapeMeasurements(PathObject pathObject,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features); Add sh",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html:1279,down,downsample,1279,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html,1,['down'],['downsample']
Availability,"Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display.settings; Class ImageDisplaySettings. java.lang.Object; qupath.lib.display.settings.ImageDisplaySettings. public class ImageDisplaySettings; extends Object; A simple class to store the main information needed by QuPath to display an image,; in a JSON-friendly form. Constructor Summary; Constructors. Constructor; Description; ImageDisplaySettings();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageDisplaySettings; create(String name,; double gamma,; boolean invertBackground,; List<ChannelSettings> channels). Create a new image display settings object. List<ChannelSettings>; getChannels(). Get all the available channels. double; getGamma(). Get the requested vamma value for the viewer. String; getName(). Get the name of the settings. boolean; invertBackground(). Get whether the background should be shown 'inverted'. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageDisplaySettings; public ImageDisplaySettings(). Method Details. create; public static ImageDisplaySettings create(String name,; double gamma,; boolean invertBackground,; List<ChannelSettings> channels); Create a new image display settings object. Parameters:; name - ; gamma - ; invertBackground - ; channels - ; Returns:. getName; public String getName(); Get the name of the settings. Returns:. getGamma; public double getGamma(); Get the requested vamma value for the viewer. Returns:. invertBackground; public boolean invertBackground(); Get whether the background should be shown 'inverted'.; This can make a fluorescence image look more like a brightfield image,; and vice versa. Returns:. getChannels; public List<ChannelSettings> getChannels(); Get all the available channels. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ImageDisplaySettings.html:2199,avail,available,2199,javadoc/docs/qupath/lib/display/settings/ImageDisplaySettings.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ImageDisplaySettings.html,1,['avail'],['available']
Availability,"Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.process.gui.commands.ml; Class PixelClassifierTraining. java.lang.Object; qupath.process.gui.commands.ml.PixelClassifierTraining. public class PixelClassifierTraining; extends Object; Helper class for training a pixel classifier. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; PixelClassifierTraining.ClassifierTrainingData. Wrapper for training data. Constructor Summary; Constructors. Constructor; Description; PixelClassifierTraining(ImageDataOp featureCalculator). Create a new pixel classifier helper, to support generating training data. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; PixelClassifierTraining.ClassifierTrainingData; createTrainingData(Collection<ImageData<BufferedImage>> imageData). Create training data, using a label map automatically generated from the available classifications. PixelClassifierTraining.ClassifierTrainingData; createTrainingData(ImageData<BufferedImage> imageData). Create training data, using a label map automatically generated from the available classifications. PixelClassifierTraining.ClassifierTrainingData; createTrainingDataForLabelMap(Collection<ImageData<BufferedImage>> imageData,; Map<PathClass,Integer> labels). Get a classifier training map, using a predefined label map (which determines which classifications to use). BoundaryStrategy; getBoundaryStrategy(). Get the strategy for handling the boundaries of area annotations. ImageDataOp; getFeatureOp(). Get an ImageDataOp used for feature calculation. PixelCalibration; getResolution(). Get the resolution at which the training should occur. void; setBoundaryStrategy(BoundaryStrategy strategy). Set the strategy for handling the boundaries of area annotations. void; setFeatureOp(ImageDataOp featureOp). Set the ImageDataOp used to calculate f",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.html:1256,avail,available,1256,javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.html,1,['avail'],['available']
Availability,"Method; Description; static boolean; areaContains(ROI pathROI,; double x,; double y). Returns true if pathROI is an area that contains x & y somewhere within it. static ROI; buffer(ROI roi,; double distance). Buffer the specified ROI, dilating (or eroding) by the specified distance. static List<ROI>; clipToROI(ROI parent,; Collection<? extends ROI> rois). Intersect a collection of ROIs with a single parent ROI, returning all results that are valid. static ROI; combineROIs(ROI shape1,; ROI shape2,; RoiTools.CombineOp op). Combine two shape ROIs together. static Collection<? extends ROI>; computeTiledROIs(ROI parentROI,; ImmutableDimension sizePreferred,; ImmutableDimension sizeMax,; boolean fixedSize,; int overlap). Create a collection of tiled ROIs corresponding to a specified parentROI if it is larger than sizeMax, with optional overlaps. static ROI; createRandomRectangle(ImageRegion mask,; double width,; double height). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. static ROI; createRandomRectangle(ImageRegion mask,; double width,; double height,; Random random). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. static ROI; createRandomRectangle(ROI mask,; double width,; double height). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI. static ROI; createRandomRectangle(ROI mask,; double width,; double height,; int maxAttempts,; boolean permitErosion,; Random random). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI, ; using a specified maximum number of attempts. static ROI; difference(ROI roi1,; ROI roi2). Compute the difference between two ROIs. static ROI; fillHoles(ROI roi). Fill the holes of an Area ROI, or return the ROI unchanged if it contains ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:1872,mask,mask,1872,javadoc/docs/qupath/lib/roi/RoiTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html,1,['mask'],['mask']
Availability,"Methods inherited from class qupath.lib.regions.ImageRegion; contains, createInstance, createInstance, createInstance, getHeight, getImagePlane, getMaxX, getMaxY, getMinX, getMinY, getPlane, getT, getWidth, getX, getY, getZ, intersects, intersects. Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. toString; public String toString(). Overrides:; toString in class ImageRegion. createInstance; public static RegionRequest createInstance(ImageServer<?> server); Create a request for the full width and height of an ImageServer, for the default plane (first z-slice, time point) ; and first resolution level downsample (usually 1, but not always). Parameters:; server - ; Returns:. createInstance; public static RegionRequest createInstance(ImageServer<?> server,; double downsample); Create a request for the full width and height of an ImageServer, for the default plane (first z-slice, time point). Parameters:; server - ; downsample - ; Returns:. createAllRequests; public static List<RegionRequest> createAllRequests(ImageServer<?> server,; double downsample); Create requests for the full width and height of an ImageServer, for all planes (z-slices and time points). Parameters:; server - ; downsample - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; ROI roi); Create a request that contains the pixels of the specified ROI.; This is calculated using the ROI bounding box. Parameters:; path - ; downsample - ; roi - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; Collection<? extends ROI> rois); Create a request that contains the pixels of the specified ROIs.; This is calculated using the ROI bounding boxes. Parameters:; path - ; downsample - ; rois - ; Returns:; Throws:; IllegalArgumentException - if the ROIs do not all fall on the same ImagePlane. createInstance; public static RegionRequest crea",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html:5276,down,downsample,5276,javadoc/docs/qupath/lib/regions/RegionRequest.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html,1,['down'],['downsample']
Availability,"MethodsConcrete Methods. Modifier and Type; Method; Description; static ScriptParameters.Builder; builder(). Create a new builder for ScriptParameters. boolean; doUpdateHierarchy(). Request whether to fire an update event for the object hierarchy, if an image data ; object is available. String[]; getArgs(). Get an optional array of string arguments passed to the script. int; getBatchIndex(). Get the index of the current image for batch processing, where 0 is the first and getBatchSize() - 1 ; is the last. Boolean; getBatchSaveResult(). Get whether changes to the image data should be saved. int; getBatchSize(). Get the number of images being batch processed, or 1 if just a single image is being processed. List<Class<?>>; getDefaultImports(). Get default imports that should be included with the script, where possible. List<Class<?>>; getDefaultStaticImports(). Get default static imports that should be included with the script, where possible. Writer; getErrorWriter(). Get the error writer for script output. File; getFile(). Get the file where the script is located. ImageData<?>; getImageData(). Get the current ImageData that should be used with the script. Project<?>; getProject(). Get the current project that should be used with the script. String; getScript(). Get the text of the script. Writer; getWriter(). Get the main writer for script output. boolean; useCompiled(). Request that any script should be compiled before being evaluated, ; and previously compiled versions reused when possible. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getFile; public File getFile(); Get the file where the script is located.; This can return null if the script is purely in-memory.; ; Note that if it is not null, the contents of the file do not have to match the result of ; getScript(), e.g. if the script has unsaved changes.; It can nevertheless be helpful to know the locati",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html:1792,error,error,1792,javadoc/docs/qupath/lib/scripting/ScriptParameters.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.html,1,['error'],['error']
Availability,"N_TOOL; @ActionAccelerator(""p""); @ActionConfig(""Tools.polygon""); public final org.controlsfx.control.action.Action POLYGON_TOOL. POLYLINE_TOOL; @ActionAccelerator(""v""); @ActionConfig(""Tools.polyline""); public final org.controlsfx.control.action.Action POLYLINE_TOOL. BRUSH_TOOL; @ActionAccelerator(""b""); @ActionConfig(""Tools.brush""); public final org.controlsfx.control.action.Action BRUSH_TOOL. LINE_TOOL; @ActionAccelerator(""l""); @ActionConfig(value=""Tools.line"",; bindLocale=false); public final org.controlsfx.control.action.Action LINE_TOOL. POINTS_TOOL; @ActionAccelerator("".""); @ActionConfig(""Tools.points""); public final org.controlsfx.control.action.Action POINTS_TOOL. SELECTION_MODE; @ActionAccelerator(""shift+s""); @ActionIcon(SELECTION_MODE); @ActionConfig(""Tools.selectionMode""); public final org.controlsfx.control.action.Action SELECTION_MODE. Method Details. create; public static ToolManager create(); Create a new instance. Returns:. getTools; public ObservableList<PathTool> getTools(); Get a read-only list of all available tools.; If you wish to add a new one, use installTool(PathTool, KeyCodeCombination). Returns:. selectedToolProperty; public ReadOnlyObjectProperty<PathTool> selectedToolProperty(); Property containing the currently-selected PathTool.; If this needs to be changed, use setSelectedTool(PathTool) to ensure that ; isToolSwitchingEnabled() has an effect. Returns:; See Also:. getSelectedTool(); setSelectedTool(PathTool). lockSelectedToolProperty; public BooleanProperty lockSelectedToolProperty(); Property to request that the selected tool be locked.; Calls to setSelectedTool(PathTool) are discarded until the tool is unlocked. Returns:. installTool; public boolean installTool(PathTool tool,; KeyCodeCombination accelerator); Install a new tool for interacting with viewers. Parameters:; tool - the tool to add; accelerator - an optional accelerator (may be null); Returns:; true if the tool was added, false otherwise (e.g. if the tool had already been add",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ToolManager.html:5444,avail,available,5444,javadoc/docs/qupath/lib/gui/ToolManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ToolManager.html,1,['avail'],['available']
Availability,"Object; implements Serializable; ROI representing an arbitrary open polyline. Author:; Pete Bankhead; See Also:. PolygonROI; Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). The centroid for a Polyline here is represented by the centroid of its bounding box. double; getCentroidY(). The centroid for a Polyline here is represented by the centroid of its bounding box. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. double; getLength(). Get ROI length. int; getNumPoints(). Default implementation, calls ROI.getAllPoints() and then caches the result. String; getRoiName(). Get a String representation of the kind of ROI we have, ; e.g. ROI.RoiType; getRoiType(). Get the RoiType, used to distinguish between points, lines and areas. double; getScaledArea(double pixelWidth,; double pixelHeight). Get scaled area of the ROI, for use with calibrated pixel sizes. double; getScaledLength(double pixelWidth,; double pixelH",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:1514,avail,available,1514,javadoc/docs/qupath/lib/roi/PolylineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html,1,['avail'],['available']
Availability,"OnlyObjectProperty<String> imageNameProperty; Get a read-only property indicating the name of the image. See Also:. imageNameProperty(). image; public ReadOnlyObjectProperty<Image> imageProperty; Get a read-only property representing the JavaFX image. See Also:. getImage(); imageProperty(). bufferedImage; public ReadOnlyObjectProperty<BufferedImage> bufferedImageProperty; Get a read-only property representing the buffered image. See Also:. getBufferedImage(); bufferedImageProperty(). Constructor Details. SimpleImageViewer; public SimpleImageViewer(); Create a new simple image viewer.; The stage will be created, but not shown. Method Details. getPlaceholderText; public String getPlaceholderText(); Get the placeholder text to show if no image is available. Returns:. setPlaceholderText; public void setPlaceholderText(String placeholder); Set the placeholder text to show if no image is available. Parameters:; placeholder - . placeholderTextProperty; public StringProperty placeholderTextProperty(); Get the placeholder text to show if no image is available. Returns:; See Also:. getPlaceholderText(); setPlaceholderText(String). saturationPercentProperty; public DoubleProperty saturationPercentProperty(); Get the percentage of any non-8-bit image that should be saturated when applying auto contrast settings. Returns:; See Also:. getSaturationPercent(); setSaturationPercent(double). getSaturationPercent; public double getSaturationPercent(); Get the percentage of pixels to use when applying auto contrast settings to a non-8-bit image. Returns:. setSaturationPercent; public void setSaturationPercent(double percent); Set the percentage of pixels to use when applying auto contrast settings to a non-8-bit image. Parameters:; percent - . expandToWindowProperty; public BooleanProperty expandToWindowProperty(); Get the property indicating whether the image should grow to fill the window (while maintaining its; aspect ratio).; If false, the image will grow no larger than its preferre",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html:5807,avail,available,5807,javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html,1,['avail'],['available']
Availability,"Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.images.stores; Class ImageRegionStoreHelpers. java.lang.Object; qupath.lib.gui.images.stores.ImageRegionStoreHelpers. public class ImageRegionStoreHelpers; extends Object; Helper methods related to image region storage.; ; Provides a standard method of tiling an image, which are used by the viewer.; ; In cases where viewing tiles are cached, this makes it possible to find out; what the tile boundaries are... and perhaps adjust requests accordingly to match with cached tiles. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ImageRegionStoreHelpers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static RegionRequest; getTileRequest(ImageServer<BufferedImage> server,; double x,; double y,; double downsampleFactor,; int zPosition,; int tPosition). Given an ImageServer, determine the boundaries of the image tile that contains specified x, y coordinates. static List<RegionRequest>; getTilesToRequest(ImageServer<?> server,; Shape clipShape,; double downsampleFactor,; int zPosition,; int tPosition,; List<RegionRequest> regions). Given ImageServer, determine the boundaries of the image tiles that would be needed to paint; a specified shape (defined by coordinates in the full-resolution image space). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageRegionStoreHelpers; public ImageRegionStoreHelpers(). Method Details. getTilesToRequest; public static List<RegionRequest> getTilesToRequest(ImageServer<?> server,; Shape clipShape,; double downsampleFactor,; int zPosition,; int tPosition,; List<RegionRequest> regions); Given Image",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ImageRegionStoreHelpers.html:1157,down,downsampleFactor,1157,javadoc/docs/qupath/lib/gui/images/stores/ImageRegionStoreHelpers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ImageRegionStoreHelpers.html,1,['down'],['downsampleFactor']
Availability,"Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.common; Class GeneralTools. java.lang.Object; qupath.lib.common.GeneralTools. public final class GeneralTools; extends Object; Collection of generally useful static methods. Author:; Pete Bankhead. Field Summary; Fields. Modifier and Type; Field; Description; static final String; SYMBOL_MICROMETER. String to represent um (but with the proper 'mu' symbol). static final char; SYMBOL_MU. Small Greek mu (useful for micrometers). static final char; SYMBOL_SIGMA. Small Greek sigma (useful for Gaussian filter sizes, standard deviations). Method Summary. All MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static boolean; almostTheSame(double n1,; double n2,; double tolerance). Test if two doubles are approximately equal, within a specified tolerance. static String; arrayToString(Object[] array,; String delimiter). Convert a String array to a single string, with a specified delimiter string. static String; arrayToString(Locale locale,; double[] array,; int nDecimalPlaces). Convert a double array to a String using a space as a delimiter. static String; arrayToString(Locale locale,; double[] array,; String delimiter,; int nDecimalPlaces). Convert a double array to string, with a specified number of decimal places. static boolean; blankString(String s,; boolean trim). Check if a string is blank, i.e. static boolean; checkExtensions(String path,; String... extensions). Check whether a path ends with one of a number of specified extensions (case insensitive). static double; clipValue(double value,; double min,; double max). Clip a value to be within a specific range. static int; clipValue(int value,; int min,; int max). Clip a value to be within a specific range. static NumberFormat; createFormatter(",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:1137,toler,tolerance,1137,javadoc/docs/qupath/lib/common/GeneralTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html,1,['toler'],['tolerance']
Availability,"Path(). protected abstract ImageServerBuilder.ServerBuilder<T>; createServerBuilder(). Create a ServerBuilder, which can be used to construct an identical ImageServer. protected void; finalize(). Attempt to close the server. T; getAssociatedImage(String name). Get the image for a given associated image name. List<String>; getAssociatedImageList(). Get a list of 'associated images', e.g. ImageServerBuilder.ServerBuilder<T>; getBuilder(). Get a ServerBuilder capable of building a server the same as this one. protected Map<RegionRequest,T>; getCache(). Get the internal cache. T; getCachedTile(TileRequest tile). Get a cached tile, or null if the tile has not been cached. ImageChannel; getChannel(int channel). Request information for one channel (0-based index). T; getDefaultThumbnail(int z,; int t). Get the default thumbnail for a specified z-slice and timepoint. double; getDownsampleForResolution(int level). Get the downsample factor for a specified resolution level, where level 0 is the full resolution image ; and nResolutions() - 1 is the lowest resolution available. int; getHeight(). Height of the full-resolution image in pixels. Class<T>; getImageClass(). Get the class of the image representation returned by this ImageServer. ImageServerMetadata; getMetadata(). Get essential metadata associated with the ImageServer as a distinct object. String; getPath(). Default implementation lazily calls createID() on demand. PixelType; getPixelType(). The bit-depth and type of the image. double[]; getPreferredDownsamples(). Request the preferred downsamples from the image metadata. protected double; getThumbnailDownsampleFactor(int maxWidth,; int maxHeight);  ; TileRequestManager; getTileRequestManager(). Get a TileRequestManager that can be used to identify image tiles that may be efficiently requested; from this ImageServer. int; getWidth(). Width of the full-resolution image in pixels. boolean; isEmptyRegion(RegionRequest request). Always returns false. boolean; isRGB(). Tru",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html:2147,down,downsample,2147,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,2,"['avail', 'down']","['available', 'downsample']"
Availability,"PathClass. Get a standalone or derived Positive classification. getPositive(PathClass) - Static method in class qupath.lib.objects.classes.PathClassFactory. Deprecated.; since v0.4.0, use PathClass.getPositive(PathClass). getPostprocessing() - Method in class qupath.opencv.ml.PatchClassifierParams. Get any postprocessing steps that should be applied after prediction. getPredictionFunction() - Method in class qupath.opencv.dnn.AbstractDnnModel. Get the prediction function that can apply a prediction with one or more blobs as input. getPredictionFunction() - Method in class qupath.opencv.dnn.OpenCVDnn;  ; getPredictionOp() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the image op used for prediction only. getPreferencePane() - Method in class qupath.lib.gui.QuPathGUI. Get a reference to the PreferencePane. getPreferredDownsampleFactor(ImageServer<?>, double) - Static method in class qupath.lib.images.servers.ServerTools. Get the downsample factor supported by the server that is the best match for the requested downsample. getPreferredDownsamples() - Method in class qupath.lib.images.servers.AbstractImageServer. Request the preferred downsamples from the image metadata. getPreferredDownsamples() - Method in interface qupath.lib.images.servers.ImageServer. Get an array of downsample factors supported by the server. getPreferredDownsamplesArray() - Method in class qupath.lib.images.servers.ImageServerMetadata. Request the preferred downsamples from the image metadata. getPreferredOverlayColor() - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay. Return the preferred overlay color. getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Met",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:488419,down,downsample,488419,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,2,['down'],['downsample']
Availability,"PathObject> pathObjects,; boolean resetExistingClass); Description copied from interface: ObjectClassifier; Classify the objects in the specified collection.; This provides a means to specify exactly which objects should be classified, avoiding reliance on ObjectClassifier.getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Specified by:; classifyObjects in interface ObjectClassifier<BufferedImage>; Parameters:; imageData - data that may or may not be required for classification depending upon how features are extracted; pathObjects - the objects to classify; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. ObjectClassifier.classifyObjects(ImageData, boolean); ObjectClassifier.getCompatibleObjects(ImageData). tryToClassify; protected boolean tryToClassify(ClassificationModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier). getMissingFeatures; public Map<String,Integer> getMissingFeatures(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects); Description copied from interface: ObjectClassifier; Check for missing features, returning the names and number of input objects missing the specified features.; This is useful as a warning that the input for the classifier may not be valid.; Default implementation returns an empty map; however, implementations should attempt to provide a meaningful ; output if possible. Features that are not missing should not be included in the output. Specified by:; getMissingFeatures in interface ObjectClassifier<BufferedImage>; Parameters:; imageData - image containing the objects to test; pathObjects - objects to test for missing features; if not available, ObjectClassifier.getCompatibleObjects(ImageData) will be called.; Returns:; a map of feature names ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html:4602,down,downsample,4602,javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html,1,['down'],['downsample']
Availability,"PixelClassifierTools. Request the classification for a specific pixel. getClassificationLabels() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Map between integer labels and classifications. getClassificationLabels() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get map between labels and classification names. getClassifications() - Method in class qupath.lib.objects.PathObject. Get the components of the PathClass as an unmodifiable set. getClassifier() - Method in class qupath.lib.classifiers.pixel.PixelClassificationImageServer. Get the PixelClassifier performing the classification. getClassifyBoundaryStrategy(PathClass, double) - Static method in class qupath.process.gui.commands.ml.BoundaryStrategy. Create a boundary strategy that trains a classifier for a specific PathClass for annotation boundaries. getClassProbability() - Method in class qupath.lib.objects.PathObject. Request the classification probability, or Double.NaN if no probability is available. getClassProbability() - Method in class qupath.lib.objects.PathROIObject;  ; getClassProbability() - Method in class qupath.lib.objects.PathRootObject;  ; getClipboardText(boolean) - Static method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; getClusters(BiPredicate<PathObject, PathObject>) - Method in class qupath.lib.analysis.DelaunayTools.Subdivision. Get clusters of connected objects, where connections are made between neighboring objects that meet the specified predicate. getColor() - Method in class qupath.lib.color.StainVector. Get a Color that (roughly) corresponds to color represented by this stain vector. getColor() - Method in interface qupath.lib.display.ChannelDisplayInfo. Predominate color used when this ChannelDisplayInfo uses a Color LUT (e.g. getColor() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getColor() - Method in class qupath.lib.display.settings.ChannelSettings. Get the color used to display the channel, or null",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:354338,avail,available,354338,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"Plus to help set properties. Parameters:; roi - the ImageJ ROI; downsampleFactor - the downsample factor used for rescaling (or 1.0 for no rescaling); creator - a function; imp - the ImagePlus associated with this Roi; it is used to determine the xOrigin, yOrigin and image plane; Returns:; a PathObject or null if no object could be created (e.g. the ImageJ roi is null or incompatible); Since:; v0.4.0; See Also:. convertToPathObject(Roi, double, double, double, Function, ImagePlane). convertToAnnotation; public static PathObject convertToAnnotation(Roi roi,; double xOrigin,; double yOrigin,; double downsampleFactor,; ImagePlane plane); Create an annotation object for a specific ImageJ Roi, using an ImagePlus to help set properties. Parameters:; roi - the ImageJ ROI; xOrigin - the x-origin to translate the Roi; should be Calibration.xOrigin if available, or 0 otherwise; yOrigin - the y-origin to translate the Roi; should be Calibration.yOrigin if available, or 0 otherwise; downsampleFactor - the downsample factor used for rescaling (or 1.0 for no rescaling); plane - the specific plane to use for the QuPath ROI; if null, the ImageJ Roi position properties will be used instead, where possible; Returns:; a PathObject or null if no object could be created (e.g. the ImageJ roi is null or incompatible); Since:; v0.4.0; See Also:. convertToPathObject(ImagePlus, ImageServer, Roi, double, Function, ImagePlane); convertToAnnotation(Roi, double, ImagePlus). convertToDetection; public static PathObject convertToDetection(Roi roi,; double xOrigin,; double yOrigin,; double downsampleFactor,; ImagePlane plane); Create a detection object for a specific ImageJ Roi, using an ImagePlus to help set properties. Parameters:; roi - the ImageJ ROI; xOrigin - the x-origin to translate the Roi; should be Calibration.xOrigin if available, or 0 otherwise; yOrigin - the y-origin to translate the Roi; should be Calibration.yOrigin if available, or 0 otherwise; downsampleFactor - the downsample fac",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:13864,avail,available,13864,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,3,"['avail', 'down']","['available', 'downsample', 'downsampleFactor']"
Availability,"PoolManager to help with submitting tasks in other threads.; A benefit of using this is that all the thread pools created will be shutdown when ; QuPath is exited. Returns:. getExtensionManager; public ExtensionManager getExtensionManager(); Get an ExtensionManager to facilitating working with extensions. Returns:. getViewerManager; public ViewerManager getViewerManager(); Get the viewer manager, which gives access to all the viewers available within this QuPath instance. Returns:. getAvailablePathClasses; public ObservableList<PathClass> getAvailablePathClasses(); Get an observable list of available PathClasses. Returns:. getDefaultDragDropListener; public DragDropImportListener getDefaultDragDropListener(); Get a reference to the default drag & drop listener, so this may be added to additional windows if needed. Returns:. resetAvailablePathClasses; public boolean resetAvailablePathClasses(); Populate the availablePathClasses with a default list. Returns:; true if changes were mad to the available classes, false otherwise. getAnalysisTabPane; public TabPane getAnalysisTabPane(); Access the main tab pane shown in the QuPath window.; This enables extensions to add or remove tabs - but be cautious!; ; Removing tabs can impact other functionality; If adding a tab, it is usually best to apply FXUtils.makeTabUndockable(Tab). Returns:. isStandalone; public boolean isStandalone(); Query whether this is a standalone QuPathGUI instance, as flagged during startup.; It can be important to know this so as to avoid calling System.exit(0) or similar, ; and bringing down some other application entirely. Returns:; true if this is a standalone QuPathGUI instance, false otherwise. getAllViewers; public ObservableList<QuPathViewer> getAllViewers(); Get an unmodifiable observable list of all viewers. Returns:; See Also:. ViewerManager.getAllViewers(). getViewer; public QuPathViewer getViewer(); Get the currently active viewer. Returns:. getInstance; public static QuPathGUI getInstance(",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:17165,avail,available,17165,javadoc/docs/qupath/lib/gui/QuPathGUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html,1,['avail'],['available']
Availability,"Position,; double downsampleFactor,; BufferedImage imgThumbnail,; ImageObserver observer,; ImageRenderer imageDisplay). Paint an image region. void; paintRegionCompletely(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; ImageObserver observer,; ImageRenderer imageDisplay,; long timeoutMilliseconds). Similar to paintRegion, but wait until all the tiles have arrived (or abort if it is taking too long). protected void; registerRequest(TileListener<BufferedImage> tileListener,; ImageServer<BufferedImage> server,; Shape clipShape,; double downsampleFactor,; int zPosition,; int tPosition). Register a request so that the tile request queue will be populated, including potentially for nearby tiles (i.e. protected void; registerRequest(TileListener<BufferedImage> tileListener,; ImageServer<BufferedImage> server,; RegionRequest region,; double downsampleFactor,; int zPosition,; int tPosition);  ; void; removeTileListener(TileListener<BufferedImage> listener);  ; protected Object; requestImageTile(ImageServer<BufferedImage> server,; RegionRequest request,; Map<RegionRequest,BufferedImage> cache,; boolean ensureTileReturned). Request an image tile. protected boolean; stopWaiting(RegionRequest request);  ; protected void; workerComplete(qupath.lib.gui.images.stores.TileWorker<BufferedImage> worker). Every TileWorker should call this when the task is done!. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. paintTileBorders; protected static boolean paintTileBorders. tileListeners; protected List<TileListener<BufferedImage>> tileListeners. cache; protected Map<RegionRequest,BufferedImage> cache. thumbnailCache; protected Map<RegionRequest,BufferedImage> thumbnailCache. Method Details. paintRegionCompletely; public void paintRegionCompletely(ImageServer<BufferedImage> server,; Graphics g,; Shape cli",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html:3499,down,downsampleFactor,3499,javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,1,['down'],['downsampleFactor']
Availability,"ProjectDialogs; extends Object; Dialogs specifically related to managing projects. Constructor Summary; Constructors. Constructor; Description; ProjectDialogs();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static org.controlsfx.control.ListSelectionView<ProjectImageEntry<BufferedImage>>; createImageChoicePane(QuPathGUI qupath,; List<ProjectImageEntry<BufferedImage>> availableImages,; List<ProjectImageEntry<BufferedImage>> selectedImages,; String openImageWarning). Populates a given ListSelectionView with all the project entries. static Collection<ProjectImageEntry<BufferedImage>>; getCurrentImages(QuPathGUI qupath). Get the ProjectImageEntry for each of the current images open in QuPath, if available. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProjectDialogs; public ProjectDialogs(). Method Details. createImageChoicePane; public static org.controlsfx.control.ListSelectionView<ProjectImageEntry<BufferedImage>> createImageChoicePane(QuPathGUI qupath,; List<ProjectImageEntry<BufferedImage>> availableImages,; List<ProjectImageEntry<BufferedImage>> selectedImages,; String openImageWarning); Populates a given ListSelectionView with all the project entries. Parameters:; qupath - variable used to understand which image(s) is/are opened in viewer(s).; availableImages - all available images; selectedImages - set some images to be selected initially (optional; can be null); openImageWarning - warning shown if image(s) to process is/are currently opened in viewer(s).; Returns:; a ListSelectionView suitable for selecting entries. getCurrentImages; public static Collection<ProjectImageEntry<BufferedImage>> getCurrentImages(QuPathGUI qupath); Get the ProjectImageEntry for each of the current images open in QuPath, if available. Parameters:; qupath - ; Returns:; a collection of currently-open project entries. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/ProjectDialogs.html:1631,avail,availableImages,1631,javadoc/docs/qupath/lib/gui/dialogs/ProjectDialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/ProjectDialogs.html,4,['avail'],"['available', 'availableImages']"
Availability,"Property() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showEditor() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; showEditor() - Method in interface qupath.lib.gui.scripting.ScriptEditor. Show the script editor. showErrorMessage(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message. showErrorMessage(String, Throwable) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message, displaying the localized message of a Throwable. showErrorMessage(String, Node) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message, with the content defined within a Node. showErrorNotification(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error notification. showErrorNotification(String, Throwable) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error notification, displaying the localized message of a Throwable. showExperimentalCommands - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; showExperimentalOptionsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Flag to indicate that menu items marked 'experimental' should be shown to the user. showGridProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showHistogram(String) - Method in class qupath.lib.gui.charts.HistogramDisplay. Show the histogram for a specified data column. showImageNameInTitle - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; showImageNameInTitleProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Property specifying if QuPath should show the image title in the main window title. showInfoNotification(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an info notification. showingProperty() - Method in class qupath.lib.gui.panes.SlideLabelVi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:965100,error,error,965100,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['error'],['error']
Availability,"QuPath v0.4.0 to ; provide an alternative way to interact with classifications and to add support for ; multiple classifications. It is possible that this becomes the 'standard' approach ; in future versions, with PathClass being deprecated.; ; Feedback or discussion on the approach is welcome on the forum at ; image.sc. Returns:; an empty collection is the PathClass is null, otherwise a collection of strings ; where each string gives the name of one component of the PathClass; Since:; v0.4.0; See Also:. setClassifications(Collection). setPathClass; public abstract void setPathClass(PathClass pathClass,; double classProbability); Set the classification of the object, specifying a classification probability.; ; The probability is expected to be between 0 and 1, or Double.NaN if no probability should be set. Parameters:; pathClass - ; classProbability - . getClassProbability; public abstract double getClassProbability(); Request the classification probability, or Double.NaN if no probability is available. Returns:. getDisplayedName; public String getDisplayedName(); Request an object name in a form suitable for displaying.; ; This may combine various properties of the object. Returns:. getName; public String getName(); Request the stored object name. Returns:. setName; public void setName(String name); Set the stored object name. Parameters:; name - . getROI; public abstract ROI getROI(); Get the region of interest (ROI) for the object. Returns:. getColor; public Integer getColor(); Return any stored color as a packed RGB value.; ; This may be null if no color has been set. Returns:; Since:; v0.4.0; See Also:. setColorRGB(Integer); ColorTools.red(int); ColorTools.green(int); ColorTools.blue(int). getColorRGB; @Deprecated; public Integer getColorRGB(); Deprecated.; since v0.4.0, use getColor() instead. Return any stored color as a packed RGB value.; ; This may be null if no color has been set. Returns:. setColorRGB; @Deprecated; public void setColorRGB(Integer color); D",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:18517,avail,available,18517,javadoc/docs/qupath/lib/objects/PathObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html,1,['avail'],['available']
Availability,"R; public static final String SYMBOL_MICROMETER; String to represent um (but with the proper 'mu' symbol). See Also:. Constant Field Values. Method Details. getVersion; public static String getVersion(); Get a String representation of QuPath's version, if known. Returns:; a String representation of the version, or null if the version is unknown; See Also:. getSemanticVersion(). getSemanticVersion; public static Version getSemanticVersion(); Get a representation of QuPath's version, parsed according to the rules of semantic versioning if possible. Returns:; the current version, or null if the version is unknown or cannot be parsed from getVersion(); See Also:. getVersion(). getPackageVersion; public static String getPackageVersion(Class<?> cls); Try to determine the version of a jar containing a specified class.; This first checks the implementation version in the package, then looks for a VERSION ; file stored as a resource. Parameters:; cls - class used to identify the package; Returns:; the version, if available, or null if no version is known. getExtension; public static Optional<String> getExtension(File file); Get filename extension. Some implementation notes:; ; Note that this is generally 'the final dot and beyond', however this method ; also handles several important special cases: "".ome.tif"", "".ome.tiff"" and "".tar.gz"".; The dot is included as the first character.; No check is performed to see if the file is actually a directory, but if a dot is the final character then no ; extension is returned.; The extension is returned as-is, without adjusting to be upper or lower case. Parameters:; file - ; Returns:; see #getNameWithoutExtension(File). getExtension; public static Optional<String> getExtension(String name); Get extension from a filename. Some implementation notes:; ; Note that this is generally 'the final dot and beyond', however this method ; also handles several important special cases: "".ome.tif"", "".ome.tiff"" and "".tar.gz"".; The dot is included as th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:8226,avail,available,8226,javadoc/docs/qupath/lib/common/GeneralTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html,1,['avail'],['available']
Availability,"RCH. Package qupath.lib.common; Class Timeit. java.lang.Object; qupath.lib.common.Timeit. public class Timeit; extends Object; Helper class to time code execution.; It is designed to be particularly useful when scripting.; The main timing report is implemented as timeit.toString() so that it can easily be printed.; ; A simple use is to start the timer before running code and print it at the end:; ; var timeit = new Timeit().start();; // Do something; timeit.stop(); // Optional - we can also print at any time; System.out.println(timeit);; ; . Checkpoints can also be added to output times for individual stages:; ; var timeit = new Timeit();; timeit.checkpoint(""First checkpoint"");; // Do something; timeit.checkpoint(""Second checkpoint"");; // Do something else; timeit.stop();; System.out.println(timeit);; ; . Finally, a Timeit can be used to repeatedly run the same code multiple times, and print the timings at the end.; ; ; var timeit = new Timeit(); .microseconds(); .checkpointAndRun(""Greeting"", () -> System.out.println(""Hello!""), 10); .summarizeCheckpoints(); .stop();; System.out.println(timeit);; ; . Since:; v0.4.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Timeit.Checkpoint. Class representing a named checkpoint with a timestamp in nanoseconds. Constructor Summary; Constructors. Constructor; Description; Timeit();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Timeit; autoUnits();  ; Timeit; checkpoint(). Create a new checkpoint with a default name. Timeit; checkpoint(String name). Create a new checkpoint with the specified name. Timeit; checkpointAndRun(Runnable runnable). Create a checkpoint with the default name and immediately run the provided runnable. Timeit; checkpointAndRun(String name,; Runnable runnable). Create a checkpoint and immediately run the provided Runnable. Timeit; checkpointAndRun(String name,; Runnable",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:1295,checkpoint,checkpointAndRun,1295,javadoc/docs/qupath/lib/common/Timeit.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html,1,['checkpoint'],['checkpointAndRun']
Availability,"ROI, dilating (or eroding) by the specified distance. static List<ROI>; clipToROI(ROI parent,; Collection<? extends ROI> rois). Intersect a collection of ROIs with a single parent ROI, returning all results that are valid. static ROI; combineROIs(ROI shape1,; ROI shape2,; RoiTools.CombineOp op). Combine two shape ROIs together. static Collection<? extends ROI>; computeTiledROIs(ROI parentROI,; ImmutableDimension sizePreferred,; ImmutableDimension sizeMax,; boolean fixedSize,; int overlap). Create a collection of tiled ROIs corresponding to a specified parentROI if it is larger than sizeMax, with optional overlaps. static ROI; createRandomRectangle(ImageRegion mask,; double width,; double height). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. static ROI; createRandomRectangle(ImageRegion mask,; double width,; double height,; Random random). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. static ROI; createRandomRectangle(ROI mask,; double width,; double height). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI. static ROI; createRandomRectangle(ROI mask,; double width,; double height,; int maxAttempts,; boolean permitErosion,; Random random). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI, ; using a specified maximum number of attempts. static ROI; difference(ROI roi1,; ROI roi2). Compute the difference between two ROIs. static ROI; fillHoles(ROI roi). Fill the holes of an Area ROI, or return the ROI unchanged if it contains no holes. static Area; getArea(ROI roi). Get an Area object representing a ROI. static double; getBoundaryDistance(ROI roi1,; ROI roi2). Get the Euclidean distance between the boundaries of two ROIs. static double; getBoundaryDist",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:2102,mask,mask,2102,javadoc/docs/qupath/lib/roi/RoiTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html,1,['mask'],['mask']
Availability,"ROIMask(ROI roi,; double downsample); Create a ROI mask using the minimal bounding box for the ROI. Parameters:; roi - ; downsample - ; Returns:. createROIMask; public static BufferedImage createROIMask(int width,; int height,; ROI roi,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for mask; xOrigin - pixel x coordinate of the top left of the region to include in the mask.; yOrigin - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i.e. the amount to scale.; Returns:. createROIMask; public static BufferedImage createROIMask(Shape shape,; double downsample); Create a Shape mask using the minimal bounding box for the Shape. Parameters:; shape - ; downsample - ; Returns:. createShapeMask; public static BufferedImage createShapeMask(int width,; int height,; Shape shape,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; shape - Shape for mask; xOrigin - pixel x coordinate of the top left of the region to include in the mask.; yOrigin - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i.e. the amount to scale.; Returns:. ensureBufferedImageType; public static BufferedImage ensureBufferedImageType(BufferedImage img,; int requestedType); Convert a BufferedImage to have a specified type.; ; This makes use of Graphics2D.drawImage, which imposes limits on supported types ; (i.e. RGB or 8-bit grayscale), and is",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:5776,down,downsample,5776,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,1,['down'],['downsample']
Availability,"RegionRenderer; Parameters:; server - the server representing the image that shown be painted; g - the graphics object upon which to paint; clipShapeVisible - the visible shape representing the area of the graphics object that should be filled; zPosition - the z-stack position; tPosition - the timepoint position; downsampleFactor - the downsample factor; imgThumbnail - a thumbnail image; if not null, this will be used to 'fill the gaps'; observer - an ImageObserver (often ignored); imageDisplay - an ImageRenderer to convert images to RGB. close; public void close(). getTileCacheSize; public long getTileCacheSize(); Get the tile cache size, in bytes.; Image tiles larger than this cannot be cached. Returns:. getCachedThumbnail; public BufferedImage getCachedThumbnail(ImageServer<BufferedImage> server,; int zPosition,; int tPosition). registerRequest; protected void registerRequest(TileListener<BufferedImage> tileListener,; ImageServer<BufferedImage> server,; Shape clipShape,; double downsampleFactor,; int zPosition,; int tPosition); Register a request so that the tile request queue will be populated, including potentially for nearby tiles (i.e. preemptively). Parameters:; tileListener - ; server - ; clipShape - ; downsampleFactor - ; zPosition - ; tPosition - . registerRequest; protected void registerRequest(TileListener<BufferedImage> tileListener,; ImageServer<BufferedImage> server,; RegionRequest region,; double downsampleFactor,; int zPosition,; int tPosition). addTileListener; public void addTileListener(TileListener<BufferedImage> listener). getCache; public Map<RegionRequest,BufferedImage> getCache(). removeTileListener; public void removeTileListener(TileListener<BufferedImage> listener). getCachedTile; public BufferedImage getCachedTile(ImageServer<BufferedImage> server,; RegionRequest request). getCachedTilesForServer; public Map<RegionRequest,BufferedImage> getCachedTilesForServer(ImageServer<BufferedImage> server); Get a map of all cached tiles pertaining t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html:6536,down,downsampleFactor,6536,javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,1,['down'],['downsampleFactor']
Availability,"Request request,; IntFunction<PathClass> classifier,; Function<ROI,PathObject> creator). Apply a detection model to generate rectangles surrounding distinct structures. static List<String>; getOutputLayerNames(Net net). Get the names of all unconnected output layers. static Map<String,DnnShape>; getOutputLayers(Net net,; DnnShape... inputShape). Get the names of all unconnected output layers. static List<Mat>; imagesFromBlob(Mat blob). Extract images from an OpenCV blob. static boolean; isCudaAvailable(). Query whether CUDA is reported as available by OpenCV. static List<DnnTools.DNNLayer>; parseLayers(Net net,; int width,; int height,; int channels,; int batchSize). Parse the layers for a Net, which allows inspection of names and sizes. static List<DnnShape>; parseShape(MatShapeVector vector). Extract Mat dimensions from a MatShapeVector. static List<String>; parseStrings(StringVector vector). Extract Strings from a StringVector. static Mat; readPatch(ImageServer<BufferedImage> server,; ROI roi,; double downsample,; int width,; int height). Read an image patch, optionally with a fixed size and using zero-padding if required. static Mat; readPatch(ImageServer<BufferedImage> server,; ROI roi,; double downsample,; int width,; int height,; int borderPadding). Read an image patch, optionally with a fixed size. static <T extends DnnModel>void; registerDnnModel(Class<T> subtype,; String name). Deprecated.; since v0.4.0; use DnnModels.registerDnnModel(Class, String) instead. static Mat; segment(SegmentationModel model,; Mat input,; Mat output). Apply a segmentation model to an image region. static Mat; segment(SegmentationModel model,; ImageServer<BufferedImage> server,; RegionRequest request). Apply a segmentation model to an image region. static void; setUseCuda(boolean requestUseCuda). Request that CUDA is used. static String; summarize(Net net,; int width,; int height,; int nChannels). Create a (multiline) summary String for a Net, given the specified image input dimens",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html:3713,down,downsample,3713,javadoc/docs/qupath/opencv/dnn/DnnTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html,1,['down'],['downsample']
Availability,"SelectedObjectsProperty; public static BooleanProperty alwaysPaintSelectedObjectsProperty(); Always paint selected objects in the viewer, even if the opacity setting is 0. Returns:. viewerInterpolateBilinearProperty; public static BooleanProperty viewerInterpolateBilinearProperty(); Request that images are displayed in viewers using bilinear interpolation. Returns:. detectionTreeDisplayModeProperty; public static ObjectProperty<PathPrefs.DetectionTreeDisplayModes> detectionTreeDisplayModeProperty(); Define how detections should be displayed in lists and tree views.; ; Showing all detections can be a bad idea, since there may be serious performance issues ; (especially when selecting/deselecting objects on an expanded tree). Returns:. maxObjectsToClipboardProperty; public static IntegerProperty maxObjectsToClipboardProperty(); The maximum number of objects that can be copied to the system clipboard.; This is to avoid accidentally putting very large amounts of data on the clipboard (causing the app to slow down or freeze), ; or attempting to create strings that are too long. Returns:. scalebarFontSizeProperty; public static ObjectProperty<PathPrefs.FontSize> scalebarFontSizeProperty(); Preferred font size for the scalebar in the viewer. Returns:. locationFontSizeProperty; public static ObjectProperty<PathPrefs.FontSize> locationFontSizeProperty(); Preferred font size for the location text in the viewer. Returns:. scalebarFontWeightProperty; public static ObjectProperty<FontWeight> scalebarFontWeightProperty(); Preferred font weight in the viewer. Returns:. scalebarLineWidthProperty; public static DoubleProperty scalebarLineWidthProperty(); Preferred line width for the scalebar. Returns:. allredMinPercentagePositiveProperty; public static DoubleProperty allredMinPercentagePositiveProperty(); The minimum positive percentage of cells for Allred proportion score to be non-zero.; ; Using the strict definition, this would be 0... however for image analysis this can be very ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:59639,down,down,59639,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['down'],['down']
Availability,"Server that treats a particular sub-region of another ImageServer as a full image, ; i.e. CroppedImageServer(ImageServer<BufferedImage>, ImageRegion) - Constructor for class qupath.lib.images.servers.CroppedImageServer. Create an ImageServer that represents a cropped region of another (larger) server. cropTiles(boolean) - Method in class qupath.lib.objects.utils.Tiler.Builder. Set whether the tiler is set to crop the output to the input parent. cross3(double[], double[]) - Static method in class qupath.lib.color.StainVector. Compute the cross product of two vectors. cssDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Read only property representing the css directory. CssLanguage - Class in qupath.lib.gui.scripting.languages. Class for representing CSS in QuPath. CssLanguage() - Constructor for class qupath.lib.gui.scripting.languages.CssLanguage. Constructor for JSON language. cuda() - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Request CUDA backend and target, if available. cuda16() - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Request CUDA backend and target, if available, with 16-bit floating point. currentChannelProperty() - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Get the currently-selected channel. currentChannelVisible() - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Read-only property indicating whether the currently-selected channel is visible,; i.e. currentLanguageProperty() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; currentSyntaxProperty() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; cursorTrackingProperty() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the cursorTracking property of this tracker. cut() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; cut() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Request cut the current s",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:238116,avail,available,238116,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"ShowCellNuclei(); Query the current OverlayOptions.DetectionDisplayMode to see if nuclei ROIs should be drawn. Returns:; true if nuclei should be drawn, false otherwise. getShowCellBoundaries; public boolean getShowCellBoundaries(); Query the current OverlayOptions.DetectionDisplayMode to see if cell boundary ROIs should be drawn. Returns:; true if nuclei should be drawn, false otherwise. setDetectionDisplayMode; public void setDetectionDisplayMode(OverlayOptions.DetectionDisplayMode mode); Set the current OverlayOptions.DetectionDisplayMode. Parameters:; mode - the requested mode to set. detectionDisplayModeProperty; public ObjectProperty<OverlayOptions.DetectionDisplayMode> detectionDisplayModeProperty(); Property representing the current OverlayOptions.DetectionDisplayMode. Returns:; See Also:. getDetectionDisplayMode(); setDetectionDisplayMode(OverlayOptions.DetectionDisplayMode). getThickStrokeWidth; public float getThickStrokeWidth(double downsample); Get the requested stroke thickness to use when drawing ROIs that should be represented with 'thick' lines (annotations, TMA cores). Parameters:; downsample - downsample at which the annotations should be drawn; Returns:; preferred stroke thickness to use. setShowTMAGrid; public void setShowTMAGrid(boolean show); Show the TMA grid on the image, if present. Parameters:; show - . setShowAnnotations; public void setShowAnnotations(boolean show); Show the annotations on the image. Parameters:; show - . setShowNames; public void setShowNames(boolean show); Show the object names on the image. Parameters:; show - . setFontSize; public void setFontSize(float size); Set the requested font size for the 'Show names' option. Parameters:; size - . setShowDetections; public void setShowDetections(boolean show); Show the objects as an overlay on the image. Parameters:; show - . setShowPixelClassification; public void setShowPixelClassification(boolean show); Show pixel classification overlays. Parameters:; show - . setFillDetect",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html:11375,down,downsample,11375,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,1,['down'],['downsample']
Availability,"SpaceDown(boolean spaceDown). Notify this viewer that the isSpaceDown status should be changed. void; setTPosition(int tPosition). Set the requested time point to be visible. void; setZPosition(int zPos). Set the requested z-slice to be visible. void; tileAvailable(String serverPath,; ImageRegion region,; BufferedImage tile). Notify a listener that an image tile has been received read & is available. String; toString();  ; IntegerProperty; tPositionProperty(). Current t-position for the timepoint currently visible in the viewer. protected void; updateAffineTransform();  ; protected void; updateCursor();  ; void; zoomIn(). Zoom in by one step. void; zoomIn(int nSteps). Zoom in by a specified number of steps, where one 'step' indicates a minimal zoom increment. void; zoomOut(). Zoom out by one step. void; zoomOut(int nSteps). Zoom out by a specified number of steps, where one 'step' indicates a minimal zoom increment. void; zoomToFit(). Request that the downsample is set to contain the entire image, and the image is centered in the viewer. IntegerProperty; zPositionProperty(). Current z-position for the z-slice currently visible in the viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Property Details. imageData; public ReadOnlyObjectProperty<ImageData<BufferedImage>> imageDataProperty; Property for the image data currently being displayed within this viewer. See Also:. getImageData(); setImageData(ImageData); imageDataProperty(). gamma; public DoubleProperty gammaProperty; Get the gamma property for this viewer.; By default, this is bound to PathPrefs.viewerGammaProperty(). See Also:. getGamma(); setGamma(double); gammaProperty(). rotation; public DoubleProperty rotationProperty; Return the rotation property of this viewer. See Also:. getRotation(); setRotation(double); rotationProperty(). zPosition; public IntegerProperty zPositionProperty; Current z-position for the z-slice curren",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:13421,down,downsample,13421,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,1,['down'],['downsample']
Availability,"Specify the overlay options to control display.; This will override any previous customizations added to the builder. Parameters:; options - ; Returns:; this builder. fillAnnotations; public SvgTools.SvgBuilder fillAnnotations(boolean doFill); Request whether annotations are drawn as 'filled' shapes. Parameters:; doFill - ; Returns:; this builder. fillDetections; public SvgTools.SvgBuilder fillDetections(boolean doFill); Request whether detections are drawn as 'filled' shapes. Parameters:; doFill - ; Returns:; this builder. showSelection; public SvgTools.SvgBuilder showSelection(boolean doShow); Request whether selected objects are displayed. Parameters:; doShow - ; Returns:; this builder. region; public SvgTools.SvgBuilder region(ImageRegion region); Specify the region (in terms of the full resolution image space) for export.; If a RegionRequest is supplied, the downsample factor will be used if none has otherwise been set. Parameters:; region - ; Returns:; this builder. downsample; public SvgTools.SvgBuilder downsample(double downsample); Specify downsample factor (defined in terms of the full resolution image space). Parameters:; downsample - ; Returns:; this builder. width; public SvgTools.SvgBuilder width(int width); Export image width. Parameters:; width - width (in pixels) of the SVG image.; Returns:; this builder. height; public SvgTools.SvgBuilder height(int height); Export image height. Parameters:; height - height (in pixels) of the SVG image.; Returns:; this builder. size; public SvgTools.SvgBuilder size(int width,; int height); Export image size. Parameters:; width - width (in pixels) of the SVG image.; height - height (in pixels) of the SVG image.; Returns:; this builder. embedImages; public SvgTools.SvgBuilder embedImages(); Specify whether the underlying (raster) image should be embedded in any export.; This requires that the constructor with a QuPathViewer is called to supply the ; necessary rendering settings. Returns:; this builder; See Also:. link",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html:6017,down,downsample,6017,javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html,1,['down'],['downsample']
Availability,"String, wait, wait, wait. Field Details. startupMessage; @BooleanPref(""Prefs.General.showStartupMessage""); public final BooleanProperty startupMessage. startupScriptPath; @FilePref(value=""Prefs.General.startupScriptPath"",; extensions=""*.groovy""); public final StringProperty startupScriptPath. autoUpdate; @Pref(value=""Prefs.General.checkForUpdates"",; type=AutoUpdateType.class); public final ObjectProperty<PathPrefs.AutoUpdateType> autoUpdate. systemMenubar; @Pref(value=""Prefs.General.systemMenubar"",; type=SystemMenuBarOption.class); public final ObjectProperty<SystemMenuBar.SystemMenuBarOption> systemMenubar. maxMemoryGB; @DoublePref(""Prefs.General.maxMemory""); public final DoubleProperty maxMemoryGB. tileCache; @DoublePref(""Prefs.General.tileCache""); public final DoubleProperty tileCache. showImageNameInTitle; @BooleanPref(""Prefs.General.showImageNameInTitle""); public final BooleanProperty showImageNameInTitle. maskImageNames; @BooleanPref(""Prefs.General.maskImageNames""); public final BooleanProperty maskImageNames. createLogFiles; @BooleanPref(""Prefs.General.logFiles""); public final BooleanProperty createLogFiles. logLevel; @Pref(value=""Prefs.General.logLevel"",; type=LogLevel.class); public final ObjectProperty<LogManager.LogLevel> logLevel. numThreads; @IntegerPref(""Prefs.General.numThreads""); public final IntegerProperty numThreads. setImageType; @Pref(value=""Prefs.General.imageType"",; type=ImageTypeSetting.class); public final ObjectProperty<PathPrefs.ImageTypeSetting> setImageType. commandBarDisplay; @Pref(value=""Prefs.General.commandBar"",; type=CommandBarDisplay.class); public final ObjectProperty<CommandFinderTools.CommandBarDisplay> commandBarDisplay. showExperimentalCommands; @BooleanPref(""Prefs.General.showExperimental""); public final BooleanProperty showExperimentalCommands. showTMACommands; @BooleanPref(""Prefs.General.showTMA""); public final BooleanProperty showTMACommands. showDeprecatedCommands; @BooleanPref(""Prefs.General.showDeprecated""); public fina",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html:2778,mask,maskImageNames,2778,javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html,2,['mask'],['maskImageNames']
Availability,"TH; public static final String PROPERTY_NAME_BOUNDS_WIDTH. See Also:. Constant Field Values. PROPERTY_NAME_BOUNDS_HEIGHT; public static final String PROPERTY_NAME_BOUNDS_HEIGHT. See Also:. Constant Field Values. Method Details. dispose; public void dispose(); Dispose the OpenSlide object; this is equivalent to close(). getLevelCount; public int getLevelCount(); Get the total number of pyramid levels. Returns:. getLevel0Width; public long getLevel0Width(); Get the width of the full-resolution image (level 0). Returns:. getLevel0Height; public long getLevel0Height(); Get the height of the full-resolution image (level 0). Returns:. getLevelWidth; public long getLevelWidth(int level); Get the image width at the specified level. Parameters:; level - ; Returns:. getLevelHeight; public long getLevelHeight(int level); Get the image height at the specified level. Parameters:; level - ; Returns:. paintRegionARGB; public void paintRegionARGB(int[] dest,; long x,; long y,; int level,; int w,; int h); throws IOException. Throws:; IOException. getProperties; public Map<String,String> getProperties(); Get an unmodifiable map of all available properties. Returns:. getAssociatedImage; public BufferedImage getAssociatedImage(String name); throws IOException; Get a named associated image. Parameters:; name - ; Returns:; Throws:; IOException. getAssociatedImages; public List<String> getAssociatedImages(); Get a list of all associated image names. Returns:. close; public void close(); Close; this is important for cleanup. Specified by:; close in interface AutoCloseable; Specified by:; close in interface Closeable. getICCProfileBytes; public byte[] getICCProfileBytes(); throws UnsupportedOperationException; Request the bytes for an ICC profile. Returns:; the bytes of an ICC profile is available, or null otherwise.; Throws:; UnsupportedOperationException - if an unsatisfied link error occurred, which indicates that; the OpenSlide version is not compatible (it should be 4.0.0 or greater). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlide.html:4758,avail,available,4758,javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlide.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlide.html,3,"['avail', 'error']","['available', 'error']"
Availability,"TION_OBJECTS - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.CopyActions;  ; COPY_FULL_SCREENSHOT - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.CopyActions;  ; COPY_SELECTED_OBJECTS - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.CopyActions;  ; COPY_VIEW - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.CopyActions;  ; COPY_WINDOW - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.CopyActions;  ; COPY_WINDOW_SCREENSHOT - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.CopyActions;  ; copyAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; copyActions - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.Actions;  ; CopyActions() - Constructor for class qupath.lib.gui.actions.menus.EditMenuActions.CopyActions;  ; copyAnnotationsToClipboard(ImageData<BufferedImage>) - Static method in class qupath.lib.gui.commands.Commands. Attempt to annotation objects to the system clipboard, if available. copySelectedAnnotationsToCurrentPlane(QuPathViewer) - Static method in class qupath.lib.gui.commands.Commands. Copy the selected objects and add them to the plane currently active in the viewer. copySelectedAnnotationsToPlane(int, int) - Static method in class qupath.lib.scripting.QP. Copy the selected annotations in the current hierarchy to the specified z-slice and timepoint. copySelectedAnnotationsToPlane(PathObjectHierarchy, ImagePlane) - Static method in class qupath.lib.scripting.QP. Copy the selected annotations in the specified hierarchy to the specified image plane. copySelectedAnnotationsToPlane(ImagePlane) - Static method in class qupath.lib.scripting.QP. Copy the selected annotations in the current hierarchy to the specified image plane. copySelectedObjectsToClipboard(ImageData<BufferedImage>) - Static method in class qupath.lib.gui.commands.Commands. Attempt to copy selected objects to the system clipboard, if available. copySelectedObjec",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:149095,avail,available,149095,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"TMACoreObject(double, double, double, double, boolean, ImagePlane) - Static method in class qupath.lib.objects.PathObjects. Create a TMA core object with an ellipse ROI. createTmaCoreView(QuPathGUI) - Static method in class qupath.lib.gui.commands.PathObjectGridView. Create a grid view for TMA core objects. createTMAGrid(String, String, boolean, double) - Static method in class qupath.lib.scripting.QP. Create a new regular TMAGrid and set it as active on the hierarchy for the current image. createTMAGrid(String, String, boolean, double, ImageRegion) - Static method in class qupath.lib.objects.PathObjectTools. Create a new regular TMAGrid, fit within a specified region. createTMAGrid(ImageData<?>, String, String, boolean, double) - Static method in class qupath.lib.scripting.QP. Create a new regular TMAGrid and set it as active on the hierarchy for an image. createToggleButton(Action) - Static method in class qupath.lib.gui.actions.ActionTools. Create a toggle button from an action, showing both the text and graphic if available. createToggleButtonWithGraphicOnly(Action) - Static method in class qupath.lib.gui.actions.ActionTools. Create a toggle button from an action, showing only the graphic and not any text. createTool(EventHandler<MouseEvent>, String, Node) - Static method in class qupath.lib.gui.viewer.tools.PathTools. Create a tool from the specified MouseEvent handler. createTool(EventType<T>, EventHandler<T>, String, Node) - Static method in class qupath.lib.gui.viewer.tools.PathTools. Create a tool from the specified event handler. createTouchingMerger() - Static method in class qupath.lib.objects.utils.ObjectMerger. Create an object merger that can merge together any objects with similar ROIs (e.g. createTracedGeometry(Raster, double, double, int, RegionRequest) - Static method in class qupath.lib.analysis.images.ContourTracing. Create a traced geometry from a raster. createTracedGeometry(SimpleImage, double, double, RegionRequest) - Static method in class q",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:231134,avail,available,231134,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"The preferred method of interpolation to use for display. See Also:. getInterpolation(); setInterpolation(ImageInterpolation); interpolationProperty(). Constructor Details. AbstractImageOverlay; protected AbstractImageOverlay(OverlayOptions options). Method Details. setInterpolation; public void setInterpolation(ImageInterpolation interpolation); Set the preferred method of interpolation to use for display. Parameters:; interpolation - . getInterpolation; public ImageInterpolation getInterpolation(); Get the preferred method of interpolation to use for display. Returns:. interpolationProperty; public ObjectProperty<ImageInterpolation> interpolationProperty(); The preferred method of interpolation to use for display. Returns:; See Also:. getInterpolation(); setInterpolation(ImageInterpolation). setInterpolation; protected void setInterpolation(Graphics2D g2d). paintOverlay; public void paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely); Description copied from interface: PathOverlay; Paint the overlay to a graphics object. The graphics object will have a transform applied to it, so the painting should; make use of coordinates in the original image space. Parameters:; g2d - Graphics2D object to which drawing should be performed. This should have any transform already applied to it.; imageRegion - The maximum image region that should be shown.; downsampleFactor - The downsample factor at which the overlay will be viewed. There is no need for rescaling according to; this value since it has already been applied to the Graphics2D as part of its AffineTransform, however; it may optionally be needed within the method e.g. to correct line thicknesses.; imageData - the ImageData associated with this overlay. If the overlay is being displayed on a viewer, this is the ImageData open ; within the viewer. Not all overlays require this, and it may be null.; paintCompletely - If true, the me",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractImageOverlay.html:3454,down,downsampleFactor,3454,javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractImageOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractImageOverlay.html,1,['down'],['downsampleFactor']
Availability,"Timeit. Timeit; summarizeCheckpoints(). Request that checkpoints are summarized in the toString() method. Timeit; summarizeCheckpoints(boolean summarize). Optionally request that checkpoints are summarized in the toString() method. String; toString(). Returns a snapshot string representation of the Timeit's status. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. Timeit; public Timeit(). Method Details. start; public Timeit start(); throws UnsupportedOperationException; Start the Timeit and create a checkpoint with the default name.; ; Note that calling this method is not essential, because the Timeit will automatically ; be started when the first checkpoint is created. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has previously been started; See Also:. start(String); checkpoint(). start; public Timeit start(String name); throws UnsupportedOperationException; Start the Timeit and create a checkpoint with the specified name.; ; Note that calling this method is not essential, because the Timeit will automatically ; be started when the first checkpoint is created. Parameters:; name - of the checkpoint; if null, a default name will be generated; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has previously been started; See Also:. start(); checkpoint(String). checkpointAndRun; public Timeit checkpointAndRun(Runnable runnable); throws UnsupportedOperationException; Create a checkpoint with the default name and immediately run the provided runnable.; ; Note that no checkpoint is made automatically after completion, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; runnable - the runnable to run; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpointAndRun; public Timeit checkpointAndRun(",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:4261,checkpoint,checkpoint,4261,javadoc/docs/qupath/lib/common/Timeit.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html,1,['checkpoint'],['checkpoint']
Availability,"Tools(). Method Details. getDefaultShortServerName; public static String getDefaultShortServerName(URI uri); Get the default shortened server name given the server's path. Parameters:; uri - ; Returns:. getChannelIndex; public static int getChannelIndex(ImageServer<?> server,; String channelName); Get the index of the first channel of a server with a specified channel name. Parameters:; server - ; channelName - ; Returns:; index (0-based) of the first channel with a name matching channelName, or -1 if no channel is found. getPreferredResolutionLevel; public static int getPreferredResolutionLevel(ImageServer<?> server,; double requestedDownsample); Get the preferred resolution level to request regions from an ImageServer at a specified downsample level. Parameters:; server - ; requestedDownsample - ; Returns:; See Also:. getPreferredDownsampleFactor(ImageServer, double). getPreferredDownsampleFactor; public static double getPreferredDownsampleFactor(ImageServer<?> server,; double requestedDownsample); Get the downsample factor supported by the server that is the best match for the requested downsample.; ; Generally, this will be <= the requested downsample (but it may be slightly more if the error introduced; would be very small, i.e. if 4 is requested and 4.0001 is available, 4.0001 would be returned). Parameters:; server - ; requestedDownsample - ; Returns:; See Also:. getPreferredResolutionLevel(ImageServer, double). getDisplayableImageName; public static String getDisplayableImageName(ImageServer<?> server); Get an ImageServer name suitable for displaying.; If the server is null, ""No image"" is returned. Otherwise, the name ; stored in the metadata is returned if not null, otherwise server.getShortServerName() is used. Parameters:; server - ; Returns:. setImageName; public static boolean setImageName(ImageServer<?> server,; String name); Set the name property of the metadata for an ImageServer. Parameters:; server - the server to update; name - the new name to use",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ServerTools.html:3402,down,downsample,3402,javadoc/docs/qupath/lib/images/servers/ServerTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ServerTools.html,2,['down'],['downsample']
Availability,"Tools.SvgBuilder; extends Object; Builder class to enable the export of rendered QuPath objects as SVG images.; This can be useful to generate high-quality figures using a vector representation of objects, ; which may be further customized in other applications (e.g. to change line thickness, color). Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; SvgTools.SvgBuilder.ImageIncludeType. Enum defining ways in which raster images may be included in the SVG file. Constructor Summary; Constructors. Constructor; Description; SvgBuilder(). Create a new builder, which will later be customized. SvgBuilder(QuPathViewer viewer). Create a builder initialized according to the current viewer. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; createDocument(). Create a String representation of the SVG document. SvgTools.SvgBuilder; downsample(double downsample). Specify downsample factor (defined in terms of the full resolution image space). SvgTools.SvgBuilder; embedImages(). Specify whether the underlying (raster) image should be embedded in any export. SvgTools.SvgBuilder; fillAnnotations(boolean doFill). Request whether annotations are drawn as 'filled' shapes. SvgTools.SvgBuilder; fillDetections(boolean doFill). Request whether detections are drawn as 'filled' shapes. SvgTools.SvgBuilder; height(int height). Export image height. SvgTools.SvgBuilder; hierarchy(PathObjectHierarchy hierarchy). Specify the PathObjectHierarchy. SvgTools.SvgBuilder; imageData(ImageData<BufferedImage> imageData). Specify the ImageData. SvgTools.SvgBuilder; images(SvgTools.SvgBuilder.ImageIncludeType include). Specify if/how raster images should be included in the SVG. SvgTools.SvgBuilder; includeOverlays(boolean doInclude). Specify whether overlays should be included. SvgTools.SvgBuilder; linkImages(). Specify whether the underlying (raster) image should be included in any export. SvgTools.SvgBuilder;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html:1479,down,downsample,1479,javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html,1,['down'],['downsample']
Availability,"Type; Property; Description; ReadOnlyObjectProperty<Number>; count. Read only property containing any count associated with the text (may be null). ReadOnlyStringProperty; text. Read only property containing the message text. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; InfoMessage.MessageType. The type of message, which can be used for styling. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<Number>; countProperty(). Read only property containing any count associated with the text (may be null). static InfoMessage; error(String text). Create an error message with static text. static InfoMessage; error(String text,; int count). Create an error message with static text and a count. static InfoMessage; error(ObservableNumberValue count). Create a error message to show a count of errors. static InfoMessage; error(ObservableValue<String> text). Create an error message. static InfoMessage; error(ObservableValue<String> text,; ObservableNumberValue count). Create an error message with a count. int; getCount(). Counts associated with the message, or -1 if the count is null. InfoMessage.MessageType; getMessageType(). Type of the message. String; getText(). Text of the message. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(String text,; int count). Create an information message with static text and a count. static InfoMessage; info(ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; info(ObservableValue<String> text). Create an information message. static InfoMessage; info(ObservableValue<String> text,; ObservableNumberValue count). Create an information message with a count. ReadOnlyStringProperty; textProperty(). Read only property containing the message text. static InfoMessage; warning(String text). Create a warning me",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:1559,error,error,1559,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,1,['error'],['error']
Availability,"Value; protected S lastValue. Method Details. getChoices; public List<S> getChoices(); Get a list of available choices. Returns:. isValidInput; public boolean isValidInput(S value); Description copied from interface: Parameter; Query if a specified value would be valid for this parameter. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); This will only work for string choices... for other types it will always return false; and fail to set the lastValue. Parameters:; locale - ; value - ; Returns:. duplicate; public Parameter<S> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public S getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public S getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value to null (",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html:3350,avail,available,3350,javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html,1,['avail'],['available']
Availability,"Viewers property. Property description:; Parameters:; synchronizeViewers - the value for the synchronizeViewers property; See Also:. getSynchronizeViewers(); synchronizeViewersProperty(). synchronizeViewersProperty; public ReadOnlyBooleanProperty synchronizeViewersProperty(). Returns:; the synchronizeViewers property; See Also:. getSynchronizeViewers(); setSynchronizeViewers(boolean). selectedObjectChanged; public void selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected); Description copied from interface: QuPathViewerListener; Called when the primary selected object has changed in a viewer. Specified by:; selectedObjectChanged in interface QuPathViewerListener; Parameters:; viewer - the viewer; pathObjectSelected - . applyLastAnnotationToActiveViewer; public boolean applyLastAnnotationToActiveViewer(). viewerClosed; public void viewerClosed(QuPathViewer viewer); Description copied from interface: QuPathViewerListener; Called when a viewer is closed. Specified by:; viewerClosed in interface QuPathViewerListener; Parameters:; viewer - the viewer that has been closed. detachActiveViewerFromGrid; public void detachActiveViewerFromGrid(); Detach the currently active viewer from the viewer grid, if possible. attachActiveViewerToGrid; public void attachActiveViewerToGrid(); Insert the currently active viewer back into the viewer grid. See Also:. attachViewerToGrid(QuPathViewer). detachViewerFromGrid; public void detachViewerFromGrid(QuPathViewer viewer); Detach the specified viewer from the viewer grid, if possible.; This will remove the viewer from the grid, and create a new window to contain it. Parameters:; viewer - ; See Also:. detachViewerFromGrid(QuPathViewer). attachViewerToGrid; public void attachViewerToGrid(QuPathViewer viewer); Attach the specified viewer to the viewer grid, if possible.; It will be inserted in place of the first available empty viewer slot.; If no empty slots are available, an error will be shown. Parameters:; viewer - . ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html:12804,avail,available,12804,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,3,"['avail', 'error']","['available', 'error']"
Availability,"] counts,; WritableRaster rasterMask). Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values. static long[]; computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask,; Rectangle bounds). Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values, optionally restricted to a bounding rectangle. static BufferedImage; createROIMask(int width,; int height,; ROI roi,; double xOrigin,; double yOrigin,; double downsample). Create a grayscale BufferedImage representing a mask for a specified ROI. static BufferedImage; createROIMask(int width,; int height,; ROI roi,; RegionRequest request). Create a grayscale BufferedImage representing a mask for a specified ROI. static BufferedImage; createROIMask(Shape shape,; double downsample). Create a Shape mask using the minimal bounding box for the Shape. static BufferedImage; createROIMask(ROI roi,; double downsample). Create a ROI mask using the minimal bounding box for the ROI. static BufferedImage; createShapeMask(int width,; int height,; Shape shape,; double xOrigin,; double yOrigin,; double downsample). Create a grayscale BufferedImage representing a mask for a specified ROI. static BufferedImage; crop(BufferedImage img,; int x,; int y,; int width,; int height). Create a crop of the image using the specified bounding box. static BufferedImage; duplicate(BufferedImage img). Duplicate a BufferedImage. static BufferedImage; ensureBufferedImage(Image image). Convert an Image to a BufferedImage if necessary, or return the original image unchanged ; if it is already a BufferedImage. static BufferedImage; ensureBufferedImageType(BufferedImage img,; int requestedType). Convert a BufferedImage to have a specified type. static boolean; is8bitColorType(int type). Returns true if a BufferedImage type represents an 8-bit color image. static BufferedImage; resize(BufferedImage img,; int finalWidth,; int finalHeight,; boolean smoothInterpo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:2757,mask,mask,2757,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,1,['mask'],['mask']
Availability,"_LIST - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.ProjectActions;  ; EXPORT_ORIGINAL - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.ExportImageActions;  ; EXPORT_RENDERED - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.ExportImageActions;  ; exportAllObjectsToGeoJson(String, String, String...) - Static method in class qupath.lib.scripting.QP. Export all objects (excluding root object) to an output file as GeoJSON. exportAllObjectsToGeoJson(String, PathIO.GeoJsonExportOptions...) - Static method in class qupath.lib.scripting.QP. Export all objects (excluding root object) to an output file as GeoJSON. exportImageActions - Variable in class qupath.lib.gui.actions.menus.FileMenuActions.Actions;  ; ExportImageActions() - Constructor for class qupath.lib.gui.actions.menus.FileMenuActions.ExportImageActions;  ; exportJson(boolean) - Method in class qupath.lib.images.writers.TileExporter. Optionally export a JSON file that includes label information and image/label pairs, where available. exportMeasurements(File) - Method in class qupath.lib.gui.tools.MeasurementExporter. Exports the measurements of one or more entries in the project. exportMeasurements(OutputStream) - Method in class qupath.lib.gui.tools.MeasurementExporter. Exports the measurements of one or more entries in the project. exportObjectsAsGeoJSON(File, Collection<? extends PathObject>, PathIO.GeoJsonExportOptions...) - Static method in class qupath.lib.io.PathIO. Export a collection of objects as a GeoJSON ""FeatureCollection"" to a file. exportObjectsAsGeoJSON(OutputStream, Collection<? extends PathObject>, PathIO.GeoJsonExportOptions...) - Static method in class qupath.lib.io.PathIO. Export a collection of objects as a GeoJSON ""FeatureCollection"" to an output stream. exportObjectsAsGeoJSON(Path, Collection<? extends PathObject>, PathIO.GeoJsonExportOptions...) - Static method in class qupath.lib.io.PathIO. Export a collection of objects as a GeoJSON ""Fea",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:289402,avail,available,289402,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"_POWER;  ; static final String; PROPERTY_NAME_QUICKHASH1;  ; static final String; PROPERTY_NAME_VENDOR;  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close(). Close; this is important for cleanup. void; dispose(). Dispose the OpenSlide object; this is equivalent to close(). BufferedImage; getAssociatedImage(String name). Get a named associated image. List<String>; getAssociatedImages(). Get a list of all associated image names. byte[]; getICCProfileBytes(). Request the bytes for an ICC profile. long; getLevel0Height(). Get the height of the full-resolution image (level 0). long; getLevel0Width(). Get the width of the full-resolution image (level 0). int; getLevelCount(). Get the total number of pyramid levels. long; getLevelHeight(int level). Get the image height at the specified level. long; getLevelWidth(int level). Get the image width at the specified level. Map<String,String>; getProperties(). Get an unmodifiable map of all available properties. void; paintRegionARGB(int[] dest,; long x,; long y,; int level,; int w,; int h);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. PROPERTY_NAME_COMMENT; public static final String PROPERTY_NAME_COMMENT. See Also:. Constant Field Values. PROPERTY_NAME_VENDOR; public static final String PROPERTY_NAME_VENDOR. See Also:. Constant Field Values. PROPERTY_NAME_QUICKHASH1; public static final String PROPERTY_NAME_QUICKHASH1. See Also:. Constant Field Values. PROPERTY_NAME_BACKGROUND_COLOR; public static final String PROPERTY_NAME_BACKGROUND_COLOR. See Also:. Constant Field Values. PROPERTY_NAME_OBJECTIVE_POWER; public static final String PROPERTY_NAME_OBJECTIVE_POWER. See Also:. Constant Field Values. PROPERTY_NAME_MPP_X; public static final String PROPERTY_NAME_MPP_X. See Also:. Constant Field Values. PROPERTY_NAME_MPP_Y; public static final String PROPERTY_NA",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlide.html:2342,avail,available,2342,javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlide.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlide.html,1,['avail'],['available']
Availability,"a css. See Also:. availableFontsProperty(). font; public static ObjectProperty<QuPathStyleManager.Fonts> fontProperty; Get the current selected font. See Also:. fontProperty(). Constructor Details. QuPathStyleManager; public QuPathStyleManager(). Method Details. updateAvailableStyles; public static void updateAvailableStyles(); Request that the list of available styles is updated.; It makes sense to call this when a new user directory has been set, so that a check for CSS files ; can be performed. installStyles; public static boolean installStyles(Collection<File> list); Handle installing CSS files (which can be used to style QuPath). Parameters:; list - list of css files; Returns:. refresh; public static void refresh(); Refresh the current style.; This should not normally be required, but may be useful during startup to ensure ; that the style is properly set at the appropriate time. isDefaultStyle; public static boolean isDefaultStyle(); Check if the default JavaFX style is used. Returns:; true if the default style is used, false otherwise. availableStylesProperty; public static ObservableList<QuPathStyleManager.StyleOption> availableStylesProperty(); Get the current available styles as an observable list.; The list is unmodifiable, since any changes should be made via adding/removing files in UserDirectoryManager.getCssStylesPath(). Returns:. selectedStyleProperty; public static ObjectProperty<QuPathStyleManager.StyleOption> selectedStyleProperty(); Get the current selected style. Returns:. availableFontsProperty; public static ObservableList<QuPathStyleManager.Fonts> availableFontsProperty(); Get a list of available fonts.; The list is unmodifiable, since this is primarily used to overcome issues with the default font on macOS ; by changing the font family. More fine-grained changes can be made via css. Returns:; list of available fonts. fontProperty; public static ObjectProperty<QuPathStyleManager.Fonts> fontProperty(); Get the current selected font. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html:4387,avail,availableStylesProperty,4387,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,7,['avail'],"['available', 'availableFontsProperty', 'availableStylesProperty']"
Availability,"a packed (A)RGB int value. maskFunction(MaskSupplier<S, T>) - Method in class qupath.lib.experimental.pixels.Parameters.Builder. Function used to lazily create a mask corresponding to the image for a specified ROI. maskImageNames - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; maskImageNamesProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request that image names are hidden within the user interface. maskObject(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. maskObjectAndSplit(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. maskSupplier(MaskSupplier<S, T>) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set the mask supplier. MaskSupplier<S,T> - Interface in qupath.lib.experimental.pixels. A functional interface for supplying a mask corresponding to an image. MATCH_VIEWER_RESOLUTIONS - Variable in class qupath.lib.gui.actions.ViewerActions;  ; matchByID(Collection<? extends PathObject>, Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Match objects according to their IDs. matchClassName(String...) - Method in class qupath.imagej.images.servers.ImageJServerBuilder;  ; matchClassName(String...) - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; matchClassName(String...) - Method in interface qupath.lib.images.servers.ImageServerBuilder. Check if this provider matches one or more specified classnames. matchClassName(String...) - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; matchResolutions() - Method i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:673452,mask,maskSupplier,673452,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['mask'],['maskSupplier']
Availability,"a rectangle ; that meets this criterion; Throws:; IllegalArgumentException - if either the mask width or height is too small for the requested width and height; See Also:. createRandomRectangle(ROI, double, double, int, boolean, Random). createRandomRectangle; public static ROI createRandomRectangle(ROI mask,; double width,; double height,; int maxAttempts,; boolean permitErosion,; Random random); throws IllegalArgumentException; Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI, ; using a specified maximum number of attempts. Parameters:; mask - region defining the area in which the rectangle can be located, including the image plane information; width - width of the rectangle to create; height - height of the rectangle to create; maxAttempts - the maximum number of attempts to make when attempting to fit the rectangle within the ROI; permitErosion - optionally make an additional attempt to locate a rectangle by eroding the mask and using the remaining ; region. For a non-square rectangle, this uses the length of the longest side for erosion - and therefore ; may exclude some possible rectangles from consideration.; random - random number generator to use for the initial attempts (may be null to use a default); Returns:; a rectangle with the specified width and height and covered by the mask, or null if it was not possible to find a rectangle ; that meets this criterion; Throws:; IllegalArgumentException - if either the mask width or height is too small for the requested width and height; See Also:. createRandomRectangle(ROI, double, double). areaContains; public static boolean areaContains(ROI pathROI,; double x,; double y); Returns true if pathROI is an area that contains x & y somewhere within it. Parameters:; pathROI - ; x - ; y - ; Returns:. isShapeROI; public static boolean isShapeROI(ROI roi); Returns true if the ROI is not null and is not a point ROI. Parameters:; roi - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:20519,mask,mask,20519,javadoc/docs/qupath/lib/roi/RoiTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html,2,['mask'],['mask']
Availability,"a type.; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; Returns:; the updated histogram counts; See Also:. computeUnsignedIntHistogram(WritableRaster, long[], WritableRaster, Rectangle). computeUnsignedIntHistogram; public static long[] computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask,; Rectangle bounds); Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values, optionally restricted to a bounding rectangle. Parameters:; raster - the raster containing the data for the histogram; if not TYPE_BYTE or TYPE_USHORT an IllegalArgumentException will be thrown; counts - histogram counts; if null, a new array will be created. Its must be sufficient for the data type, i.e. 256 or 65536.; No size checking is performed, therefore if non-null it must be sufficiently large for the data type.; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped.; bounds - optional rectangle defining the bounds of the raster to search.; If not null, this is used with the (also optional) mask to restrict the pixels that are used.; This can give substantial performance improvements for small masked regions embedded in larger images.; Returns:; the updated histogram counts; See Also:. computeUnsignedIntHistogram(WritableRaster, long[], WritableRaster). computeArgMaxHistogram; public static long[] computeArgMaxHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask); Create a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion. Parameters:; raster - the multi-band raster containing values to check; counts - existing histogram if it should be updated, or null if a new histogram should be created. The length should ; match the number of bands in the raster.; rasterMask - optional single-channel mask; if not",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:11319,mask,mask,11319,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,2,['mask'],['mask']
Availability,"aCPP's Pointer class.; This is suitable for logging if required. Returns:; See Also:. trackedMemory(); memoryReport(CharSequence). trackedMemory; public static String trackedMemory(); Get a brief, one-line report on tracked memory use, based on JavaCPP's Pointer class.; This is suitable for logging if required. Returns:; See Also:. physicalMemory(); memoryReport(CharSequence). memoryReport; public static String memoryReport(CharSequence delimiter); Create a brief report on memory use, based on JavaCPP's Pointer class. Parameters:; delimiter - delimiter to use between elements of the report, e.g. "", "" or ""\n""; Returns:; See Also:. trackedMemory(); physicalMemory(). findMaxima; public static Collection<OpenCVTools.IndexedPixel> findMaxima(Mat mat,; Mat mask); Find maxima within an image. Parameters:; mat - image containing maxima; must be 2D and single-channel; mask - optional mask; Returns:. getMaskedPixels; public static List<OpenCVTools.IndexedPixel> getMaskedPixels(Mat mat,; Mat mask); Extract all the masked pixels within an image. Parameters:; mat - input image; must be single-channel; mask - mask of the same size as mat; Returns:; list of pixels, including their indices and values. extractMaskedFloats; public static float[] extractMaskedFloats(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pixels should be extracted; mask - the mask to apply to the input; channel - the channel index (zero-based) to consider; Returns:; a float array containing the values of the input filtered by the mask; Throws:; IllegalArgumentException - when the input and the mask don't have the same dimensions. extractMaskedDoubles; public static double[] ex",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:43893,mask,mask,43893,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html,2,['mask'],"['mask', 'masked']"
Availability,"aN if this is unknown. getTimeToEvent() - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData.KaplanMeierEvent. Get the stored time to event (units are unspecified). getTimeUnit() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the time unit for a time series. getTimeUnit() - Method in class qupath.lib.images.servers.PixelCalibration. Get the time unit for a time series. getTMACore(int, int) - Method in class qupath.lib.objects.hierarchy.DefaultTMAGrid;  ; getTMACore(int, int) - Method in interface qupath.lib.objects.hierarchy.TMAGrid. Get the TMACoreObject for a specified grid location. getTMACore(String) - Method in class qupath.lib.objects.hierarchy.DefaultTMAGrid;  ; getTMACore(String) - Method in interface qupath.lib.objects.hierarchy.TMAGrid. Retrieve a TMA core based upon its name. getTMACoreForPixel(TMAGrid, double, double) - Static method in class qupath.lib.objects.PathObjectTools. Get the TMA core that contains the specified x & y coordinate, or null if no core is available for the coordinates give. getTMACoreList() - Method in class qupath.lib.objects.hierarchy.DefaultTMAGrid;  ; getTMACoreList() - Method in interface qupath.lib.objects.hierarchy.TMAGrid. Get an unmodifiable list of all TMA core objects. getTMACoreList() - Static method in class qupath.lib.scripting.QP. Get the list of TMA core objects for the current hierarchy. getTMACoreObjects(PathObjectHierarchy, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Extract a list of TMA cores from an object hierarchy. getTMAGrid() - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Get the TMAGrid, or null if there is no TMA grid associated with this hierarchy. getToken(String, int) - Method in interface qupath.lib.scripting.languages.AutoCompletions.CompletionTokenizer. Get the token needed for the completion. getTokenizer() - Method in interface qupath.lib.scripting.languages.AutoCompletions.Completion. Get the tokenizer needed to ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:537818,avail,available,537818,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"abel represents the integer label used for ; annotations with the given classification. addLabels(Map<PathClass, Integer>) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Add multiple labels by PathClass, where the key represents a PathClass and the value ; represents the integer label that should be used for annotations of the given class. addLabelsByName(Map<String, Integer>) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Add multiple labels by classname, where the key represents a classname and the value ; represents the integer label that should be used for annotations of the given class. addLevel(double, int, int) - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel.Builder. Add a new level by providing a downsample value, width and height. addLevel(int, int) - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel.Builder. Add a new level based on level dimensions, estimating the corresponding downsample value as required. addLevel(ImageServerMetadata.ImageResolutionLevel) - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel.Builder. Add a new level directly. addLevelByDownsample(double) - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel.Builder. Add a new level, calculating dimensions using a downsample factor applied to the full-resolution image. addListener(PathObjectHierarchyListener) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Add a hierarchy change listener. addMeasurement(String, double) - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; v0.4.0 use MeasurementList.put(String, double) instead. addMeasurements(Collection<? extends PathObject>, String) - Method in class qupath.opencv.ml.pixel.PixelClassificationMeasurementManager. Add measurements to specified objects. addMeasurements(Collection<? extends PathObject>, PixelClassificatio",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:19945,down,downsample,19945,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['down'],['downsample']
Availability,"ace defining a style that may be applied to QuPath. Constructor Summary; Constructors. Constructor; Description; QuPathStyleManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObservableList<QuPathStyleManager.Fonts>; availableFontsProperty(). Get a list of available fonts. static ObservableList<QuPathStyleManager.StyleOption>; availableStylesProperty(). Get the current available styles as an observable list. static ObjectProperty<QuPathStyleManager.Fonts>; fontProperty(). Get the current selected font. static boolean; installStyles(Collection<File> list). Handle installing CSS files (which can be used to style QuPath). static boolean; isDefaultStyle(). Check if the default JavaFX style is used. static void; refresh(). Refresh the current style. static ObjectProperty<QuPathStyleManager.StyleOption>; selectedStyleProperty(). Get the current selected style. static void; updateAvailableStyles(). Request that the list of available styles is updated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. availableStyles; public static ObservableList<QuPathStyleManager.StyleOption> availableStylesProperty; Get the current available styles as an observable list.; The list is unmodifiable, since any changes should be made via adding/removing files in UserDirectoryManager.getCssStylesPath(). See Also:. availableStylesProperty(). selectedStyle; public static ObjectProperty<QuPathStyleManager.StyleOption> selectedStyleProperty; Get the current selected style. See Also:. selectedStyleProperty(). availableFonts; public static ObservableList<QuPathStyleManager.Fonts> availableFontsProperty; Get a list of available fonts.; The list is unmodifiable, since this is primarily used to overcome issues with the default font on macOS ; by changing the font family. More fine-grained changes can be made via css. See Also:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html:2345,avail,available,2345,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,1,['avail'],['available']
Availability,"ackage; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.awt.common; Class BufferedImageTools. java.lang.Object; qupath.lib.awt.common.BufferedImageTools. public final class BufferedImageTools; extends Object; Static methods for working with BufferedImages and QuPath objects. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static long; computeAboveThresholdCounts(WritableRaster raster,; int band,; double threshold,; WritableRaster rasterMask). Count the number of above-threshold pixels in a specified band of a raster, with optional mask. static long; computeAboveThresholdCounts(WritableRaster raster,; int band,; double threshold,; WritableRaster rasterMask,; Rectangle bounds). Count the number of above-threshold pixels in a specified band of a raster, with optional mask and/or bounding rectangle. static long[]; computeArgMaxHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask). Create a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion. static long[]; computeArgMaxHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask,; Rectangle bounds). Create a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion, ; with an optional bounding rectangle. static long[]; computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask). Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values. static long[]; computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask,; Rectangle bounds). Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:1146,mask,mask,1146,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,1,['mask'],['mask']
Availability,"actor for a specific resolution level. int; getHeight(). Get the full-resolution image height. ImageServerMetadata.ImageResolutionLevel; getLevel(int level). Get resolution information for a specified pyramidal level. List<ImageServerMetadata.ImageResolutionLevel>; getLevels(). Get an unmodifiable list containing the resolution levels. double; getMagnification(). Get the magnification value, or Double.NaN if this is unavailable. Number; getMaxValue(). Get the minimum value supported by this image. Number; getMinValue(). Get the minimum value supported by this image. String; getName(). Get the image name. PixelCalibration; getPixelCalibration(). Get a PixelCalibration object representing the pixel size information for this metadata object. double; getPixelHeightMicrons(). Get the pixel height in microns, if available - or Double.NaN otherwise. PixelType; getPixelType(). Returns the bit-depth for individual pixels in the image. double; getPixelWidthMicrons(). Get the pixel width in microns, if available - or Double.NaN otherwise. double[]; getPreferredDownsamplesArray(). Request the preferred downsamples from the image metadata. int; getPreferredTileHeight(). Get the preferred tile height, which can be used to optimize pixel requests for large images. int; getPreferredTileWidth(). Get the preferred tile width, which can be used to optimize pixel requests for large images. int; getSizeC(). Get the number of image channels. int; getSizeT(). Get the number of time points. int; getSizeZ(). Get the number of z-slices. double; getTimepoint(int ind). Get the time point, defined in getTimeUnit(), or Double.NaN if this is unknown. TimeUnit; getTimeUnit(). Get the time unit for a time series. int; getWidth(). Get the full-resolution image width. double; getZSpacingMicrons(). Get the z-spacing in microns, if available - or Double.NaN otherwise. int; hashCode();  ; boolean; isCompatibleMetadata(ImageServerMetadata metadata). Returns true if a specified ImageServerMetadata is comp",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html:3059,avail,available,3059,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html,1,['avail'],['available']
Availability,"ad. Property Summary; Properties. Type; Property; Description; static ObservableList<QuPathStyleManager.Fonts>; availableFonts. Get a list of available fonts. static ObservableList<QuPathStyleManager.StyleOption>; availableStyles. Get the current available styles as an observable list. static ObjectProperty<QuPathStyleManager.Fonts>; font. Get the current selected font. static ObjectProperty<QuPathStyleManager.StyleOption>; selectedStyle. Get the current selected style. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; QuPathStyleManager.Fonts. Available font families. static interface ; QuPathStyleManager.StyleOption. Interface defining a style that may be applied to QuPath. Constructor Summary; Constructors. Constructor; Description; QuPathStyleManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObservableList<QuPathStyleManager.Fonts>; availableFontsProperty(). Get a list of available fonts. static ObservableList<QuPathStyleManager.StyleOption>; availableStylesProperty(). Get the current available styles as an observable list. static ObjectProperty<QuPathStyleManager.Fonts>; fontProperty(). Get the current selected font. static boolean; installStyles(Collection<File> list). Handle installing CSS files (which can be used to style QuPath). static boolean; isDefaultStyle(). Check if the default JavaFX style is used. static void; refresh(). Refresh the current style. static ObjectProperty<QuPathStyleManager.StyleOption>; selectedStyleProperty(). Get the current selected style. static void; updateAvailableStyles(). Request that the list of available styles is updated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. availableStyles; public static ObservableList<QuPathStyleManager.StyleOption> availableStylesProperty; Get the current available styles as an ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html:1672,avail,available,1672,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,1,['avail'],['available']
Availability,"addShapeMeasurements(PathObject pathObject,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features); Add shape measurements for one object. If this is a cell, measurements will be made for both the ; nucleus and cell boundary where possible. Parameters:; pathObject - the object for which measurements should be added; cal - pixel calibration, used to determine units and scaling; features - specific features to add; if empty, all available shape features will be added. addShapeMeasurements; public static void addShapeMeasurements(Collection<? extends PathObject> pathObjects,; PixelCalibration cal,; ObjectMeasurements.ShapeFeatures... features); Add shape measurements for multiple objects. If any of these objects is a cell, measurements will be made for both the ; nucleus and cell boundary where possible. Parameters:; pathObjects - the objects for which measurements should be added; cal - pixel calibration, used to determine units and scaling; features - specific features to add; if empty, all available shape features will be added. addIntensityMeasurements; public static void addIntensityMeasurements(ImageServer<BufferedImage> server,; PathObject pathObject,; double downsample,; Collection<ObjectMeasurements.Measurements> measurements,; Collection<ObjectMeasurements.Compartments> compartments); throws IOException; Measure all channels of an image for one individual object or cell.; All compartments are measured where possible (nucleus, cytoplasm, membrane and full cell).; ; Note: This implementation is likely to change in the future, to enable neighboring cells to be ; measured more efficiently. Parameters:; server - the server containing the pixels (and channels) to be measured; pathObject - the cell to measure (the MeasurementList will be updated); downsample - resolution at which to request pixels; measurements - requested measurements to make; compartments - the cell compartments to measure; ignored if the object is not a cell; Throws:; IOException. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html:3304,down,downsample,3304,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.html,2,['down'],['downsample']
Availability,"adequately be represented by a Shape object. Specified by:; getShape in interface ROI; Returns:. getRoiType; public ROI.RoiType getRoiType(); Description copied from interface: ROI; Get the RoiType, used to distinguish between points, lines and areas. Specified by:; getRoiType in interface ROI; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Desc",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:11573,avail,available,11573,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,1,['avail'],['available']
Availability,"adpools created by this manager. static SharedThreadPoolManager; create(). Create a new instance. <V> ExecutorCompletionService<V>; createSharedPoolCompletionService(Class<V> cls). Create a completion service that uses a shared threadpool for the application. ExecutorService; getSingleThreadExecutor(Object owner). Get a reusable executor using a single thread, creating a new executor if needed. void; submitShortTask(Runnable runnable). Submit a short task to a shared thread pool. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. create; public static SharedThreadPoolManager create(); Create a new instance. Returns:. getSingleThreadExecutor; public ExecutorService getSingleThreadExecutor(Object owner); Get a reusable executor using a single thread, creating a new executor if needed.; ; An owner can be specified, in which case the same Executor will be returned for the owner ; for so long as the Executor has not been shut down; if it has been shut down, a new Executor will be returned.; ; Specifying an owner is a good idea if there is a chance that any submitted tasks could block,; since the same Executor will be returned for all requests that give a null owner.; ; The advantage of using this over creating an ExecutorService some other way is that; shutdown will be called on any pools created this way whenever QuPath is quit. Parameters:; owner - ; Returns:. createSharedPoolCompletionService; public <V> ExecutorCompletionService<V> createSharedPoolCompletionService(Class<V> cls); Create a completion service that uses a shared threadpool for the application. Type Parameters:; V - ; Parameters:; cls - ; Returns:. submitShortTask; public void submitShortTask(Runnable runnable); Submit a short task to a shared thread pool. Parameters:; runnable - . close; public void close(); Shutdown any threadpools created by this manager. Specified by:; close in interface AutoClosea",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/SharedThreadPoolManager.html:2038,down,down,2038,javadoc/docs/qupath/lib/gui/SharedThreadPoolManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/SharedThreadPoolManager.html,2,['down'],['down']
Availability,"age has been extracted!. Parameters:; imp - ; server - ; Returns:. convertToPathObject; @Deprecated; public static PathObject convertToPathObject(ImagePlus imp,; ImageServer<?> server,; Roi roi,; double downsampleFactor,; Function<ROI,PathObject> creator,; ImagePlane plane); Deprecated.; use instead convertToPathObject(Roi, double, double, double, Function, ImagePlane). Create a PathObject for a specific ImageJ Roi.; This method has been deprecated, since its signature was misleading (the server was not used). Parameters:; imp - ; server - ; roi - ; downsampleFactor - ; creator - ; plane - ; Returns:. convertToPathObject; public static PathObject convertToPathObject(Roi roi,; double xOrigin,; double yOrigin,; double downsampleFactor,; Function<ROI,PathObject> creator,; ImagePlane plane); Create a PathObject for a specific ImageJ Roi. Parameters:; roi - the ImageJ ROI; xOrigin - the x-origin to translate the Roi; should be Calibration.xOrigin if available, or 0 otherwise; yOrigin - the y-origin to translate the Roi; should be Calibration.yOrigin if available, or 0 otherwise; downsampleFactor - the downsample factor used for rescaling (or 1.0 for no rescaling); creator - a function; plane - the specific plane to use for the QuPath ROI; if null, the ImageJ Roi position properties will be used instead, where possible; Returns:; a PathObject or null if no object could be created (e.g. the ImageJ roi is null or incompatible); Since:; v0.4.0; See Also:. convertToPathObject(Roi, double, Function, ImagePlus). convertToPathObject; public static PathObject convertToPathObject(Roi roi,; double downsampleFactor,; Function<ROI,PathObject> creator,; ImagePlus imp); Create a PathObject for a specific ImageJ Roi, using an ImagePlus to help set properties. Parameters:; roi - the ImageJ ROI; downsampleFactor - the downsample factor used for rescaling (or 1.0 for no rescaling); creator - a function; imp - the ImagePlus associated with this Roi; it is used to determine the xOrigin, yOrig",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:12124,avail,available,12124,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,1,['avail'],['available']
Availability,"age); Deprecated.; Show a warning notification. Parameters:; title - ; message - . showInfoNotification; public static void showInfoNotification(String title,; String message); Deprecated.; Show an info notification. Parameters:; title - ; message - . showPlainNotification; public static void showPlainNotification(String title,; String message); Deprecated.; Show a plain notification. Parameters:; title - ; message - . showNoImageError; public static void showNoImageError(String title); Deprecated.; Show an error message that no image is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Deprecated.; Show an error message that no project is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showErrorMessage; public static void showErrorMessage(String title,; String message); Deprecated.; Show an error message. Parameters:; title - ; message - . showErrorMessage; public static void showErrorMessage(String title,; Node node); Deprecated.; Show an error message, with the content defined within a Node. Parameters:; title - ; node - . showPlainMessage; public static void showPlainMessage(String title,; String message); Deprecated.; Show a plain message. Parameters:; title - ; message - . showTextWindow; public static void showTextWindow(Window owner,; String title,; String contents,; Modality modality,; boolean isEditable); Deprecated.; Show a window containing plain text, with the specified properties. Parameters:; owner - ; title - ; contents - ; modality - ; isEditable - . promptForMultipleFiles; public static List<File> promptForMultipleFiles(String title,; File dirBase,; String filterDescription,; String... exts); Deprecated.; Prompt to open a list of files. Parameters:; title - ; dirBase - ; filterDescription - ; exts - ; Returns:. promptForDirectory; public static File promptF",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:10374,error,error,10374,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['error'],['error']
Availability,"age> plugin,; String arg). Create an Action to call the specified plugin for the current image. org.controlsfx.control.action.Action; createProjectAction(Consumer<Project<BufferedImage>> command). Create an Action that depends upon a Project. <V> ExecutorCompletionService<V>; createSharedPoolCompletionService(Class<V> cls). Deprecated.; since v0.5.0; use getThreadPoolManager(). ExecutorService; createSingleThreadExecutor(Object owner). Deprecated.; since v0.5.0; use getThreadPoolManager(). org.controlsfx.control.action.Action; createViewerAction(Consumer<QuPathViewer> command). Create an Action that depends upon an QuPathViewer. ObservableList<QuPathViewer>; getAllViewers(). Get an unmodifiable observable list of all viewers. TabPane; getAnalysisTabPane(). Access the main tab pane shown in the QuPath window. AutomateActions; getAutomateActions(). Get the automated actions associated with this QuPath instance. ObservableList<PathClass>; getAvailablePathClasses(). Get an observable list of available PathClasses. static String; getBuildString(). Get a String representing the QuPath version & build time. CommonActions; getCommonActions(). Get the common actions associated with this QuPath instance. DragDropImportListener; getDefaultDragDropListener(). Get a reference to the default drag & drop listener, so this may be added to additional windows if needed. String; getDisplayedImageName(ImageData<BufferedImage> imageData). Get the image name to display for a specified image. ExtensionManager; getExtensionManager(). Get an ExtensionManager to facilitating working with extensions. ImageData<BufferedImage>; getImageData(). Get the value of imageDataProperty(). DefaultImageRegionStore; getImageRegionStore(). Return the global DefaultImageRegionStore instance, used to cache and paint image tiles. static QuPathGUI; getInstance(). Get the static instance of the current QuPath GUI. LogViewerCommand; getLogViewerCommand(). Get the log viewer associated with this QuPath instance. M",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:3637,avail,available,3637,javadoc/docs/qupath/lib/gui/QuPathGUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html,1,['avail'],['available']
Availability,"ageOverlay; extends AbstractOverlay; Abstract PathOverlay with additional properties relevant when drawing BufferedImages. Author:; Pete Bankhead. Property Summary; Properties. Type; Property; Description; ObjectProperty<ImageInterpolation>; interpolation. The preferred method of interpolation to use for display. Nested Class Summary. Nested classes/interfaces inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; AbstractOverlay.LocationStringFunction. Constructor Summary; Constructors. Modifier; Constructor; Description; protected ; AbstractImageOverlay(OverlayOptions options);  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ImageInterpolation; getInterpolation(). Get the preferred method of interpolation to use for display. ObjectProperty<ImageInterpolation>; interpolationProperty(). The preferred method of interpolation to use for display. void; paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. protected void; setInterpolation(Graphics2D g2d);  ; void; setInterpolation(ImageInterpolation interpolation). Set the preferred method of interpolation to use for display. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, isVisible, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. interpolation; public ObjectProperty<ImageInterpolation> interpolationProperty; The preferred method of interpolation to use for display. See Also:. getInterpolation(); setInterpolation(ImageInterpolation); interpolationProperty(). Constructor Details. Abstrac",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractImageOverlay.html:1667,down,downsampleFactor,1667,javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractImageOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/AbstractImageOverlay.html,1,['down'],['downsampleFactor']
Availability,"agePlane plane). Create a request for a region specified in terms of its bounding box and ImagePlane. static RegionRequest; createInstance(String path,; double downsample,; Collection<? extends ROI> rois). Create a request that contains the pixels of the specified ROIs. static RegionRequest; createInstance(String path,; double downsample,; ImageRegion region). Create a request corresponding to a specified ImageRegion. static RegionRequest; createInstance(String path,; double downsample,; ROI roi). Create a request that contains the pixels of the specified ROI. static RegionRequest; createInstance(String path,; RegionRequest request). Create a request that matches another request but with a different path. static RegionRequest; createInstance(ImageServer<?> server). Create a request for the full width and height of an ImageServer, for the default plane (first z-slice, time point) ; and first resolution level downsample (usually 1, but not always). static RegionRequest; createInstance(ImageServer<?> server,; double downsample). Create a request for the full width and height of an ImageServer, for the default plane (first z-slice, time point). boolean; equals(Object obj);  ; double; getDownsample(). Get the requested downsample factor, defining the resolution at which pixels should be returned. String; getPath(). Get the requested ImageServer path, used as an identifier. int; hashCode();  ; RegionRequest; intersect2D(int x,; int y,; int width,; int height). Intersect to the specified 2D region. RegionRequest; intersect2D(ImageRegion region). Intersect to the specified 2D region, ignoring z and t. boolean; overlapsRequest(RegionRequest request). Returns true if the region specified by this request overlaps with that of another request. RegionRequest; pad2D(int xPad,; int yPad). Add symmetric padding to the x and y dimensions of a request. RegionRequest; pad2D(Padding padding). Add symmetric padding to the x and y dimensions of a request. String; toString();  ; RegionRequ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html:2723,down,downsample,2723,javadoc/docs/qupath/lib/regions/RegionRequest.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html,1,['down'],['downsample']
Availability,"ages.servers.bioformats.OMEPixelParser.Builder;  ; Normalizer - Class in qupath.opencv.ml.objects.features. Class to help with simple feature normalization, by adding an offset and then multiplying by a scaling factor. noSelection() - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Returns true if no objects are selected. nResolutions() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; nResolutions() - Method in interface qupath.lib.images.servers.ImageServer. Number of resolutions for the image. nTimepoints() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; nTimepoints() - Method in interface qupath.lib.images.servers.ImageServer. Number of time points in a time series. nTimepoints() - Method in class qupath.lib.images.servers.PixelCalibration. Get the number of known time points. NUCLEI_AND_BOUNDARIES - Enum constant in enum class qupath.lib.gui.viewer.OverlayOptions.DetectionDisplayMode. Show both cell boundaries and cell nuclei, where available. NUCLEI_ONLY - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; NUCLEI_ONLY - Enum constant in enum class qupath.lib.gui.viewer.OverlayOptions.DetectionDisplayMode. Show only cell nuclei. NUCLEUS - Enum constant in enum class qupath.lib.analysis.features.ObjectMeasurements.Compartments. Nucleus only. NUCLEUS_CELL_RATIO - Enum constant in enum class qupath.lib.analysis.features.ObjectMeasurements.ShapeFeatures. Nucleus/cell area ratio (only relevant to cell objects). NULL_CLASS - Static variable in class qupath.lib.objects.classes.PathClass. Default PathClass that represents no classification. numCommandThreadsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Property specifying the preferred number of threads QuPath should use for multithreaded commands. numDimensions() - Method in class qupath.opencv.dnn.DnnShape. The total number of dimensions, i.e. NumericParameter<S> - Class in qupath.lib.plugins.parameters. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:714364,avail,available,714364,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"ait, wait, wait. Constructor Details. Timeit; public Timeit(). Method Details. start; public Timeit start(); throws UnsupportedOperationException; Start the Timeit and create a checkpoint with the default name.; ; Note that calling this method is not essential, because the Timeit will automatically ; be started when the first checkpoint is created. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has previously been started; See Also:. start(String); checkpoint(). start; public Timeit start(String name); throws UnsupportedOperationException; Start the Timeit and create a checkpoint with the specified name.; ; Note that calling this method is not essential, because the Timeit will automatically ; be started when the first checkpoint is created. Parameters:; name - of the checkpoint; if null, a default name will be generated; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has previously been started; See Also:. start(); checkpoint(String). checkpointAndRun; public Timeit checkpointAndRun(Runnable runnable); throws UnsupportedOperationException; Create a checkpoint with the default name and immediately run the provided runnable.; ; Note that no checkpoint is made automatically after completion, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; runnable - the runnable to run; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpointAndRun; public Timeit checkpointAndRun(String name,; Runnable runnable); throws UnsupportedOperationException; Create a checkpoint and immediately run the provided Runnable.; ; Note that no checkpoint is made automatically after completion, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; name - the name of the checkpoint to create; runnable - the runnable to run; Returns:; this instance; Throws:; Unsupp",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:4648,checkpoint,checkpoint,4648,javadoc/docs/qupath/lib/common/Timeit.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html,1,['checkpoint'],['checkpoint']
Availability,"al reconstruction. static void; imposeMaxima(FloatProcessor fp,; Roi roi). Ensure that a FloatProcessor only has region maxima within a specified Roi, using morphological reconstruction. static void; imposeMaxima(FloatProcessor fp,; ImageProcessor ipMask). Ensure that a FloatProcessor only has region maxima within a specified mask, using morphological reconstruction. static void; imposeMinima(FloatProcessor fp,; Roi roi). Ensure that a FloatProcessor only has region minima within a specified Roi, using morphological reconstruction. static boolean; morphologicalReconstruction(ImageProcessor ipMarker,; ImageProcessor ipMask). Apply morphological operation using marker and mask images. static ImageProcessor; openingByReconstruction(ImageProcessor ip,; double radius). Apply opening by reconstruction, with the specified minimum filter radius. static boolean; validateMarkerMask(ImageProcessor ipMarker,; ImageProcessor ipMask). Check that marker and mask images have the same size, and ensure that marker pixels are <= mask pixels, ; making this if necessary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MorphologicalReconstruction; public MorphologicalReconstruction(). Method Details. binaryReconstruction; public static ByteProcessor binaryReconstruction(ByteProcessor bpMarker,; ByteProcessor bpMask,; boolean permitMaskChanges); Alternative morphological reconstruction (based on ImageJ's FloodFiller) suitable for binary images only. Parameters:; bpMarker - ; bpMask - ; permitMaskChanges - ; Returns:. morphologicalReconstruction; public static boolean morphologicalReconstruction(ImageProcessor ipMarker,; ImageProcessor ipMask); Apply morphological operation using marker and mask images. The marker image is changed. Parameters:; ipMarker - ; ipMask - ; Returns:. validateMarkerMask; public static boolean validateMarkerMask(ImageProcessor ipMarker,; ImageProcessor i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/MorphologicalReconstruction.html:2273,mask,mask,2273,javadoc/docs/qupath/imagej/processing/MorphologicalReconstruction.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/MorphologicalReconstruction.html,2,['mask'],['mask']
Availability,"all objects).; Generated with a UUID for uniqueness, and because it should not be serialized. ANY_POSITIVE_CLASS; public static final PathClass ANY_POSITIVE_CLASS; Accept any positive classification, including 1+, 2+, 3+.; Generated with a UUID for uniqueness, and because it should not be serialized. Constructor Details. DensityMapUI; public DensityMapUI(). Method Details. createSaveDensityMapPane; public static Pane createSaveDensityMapPane(ObjectExpression<Project<BufferedImage>> project,; ObjectExpression<DensityMaps.DensityMapBuilder> densityMap,; StringProperty savedName); Create a pane that can be used to save a DensityMaps.DensityMapBuilder, with standardized display and prompts. Parameters:; project - ; densityMap - ; savedName - ; Returns:. createButtonPane; public static Pane createButtonPane(QuPathGUI qupath,; ObjectExpression<ImageData<BufferedImage>> imageData,; ObjectExpression<DensityMaps.DensityMapBuilder> builder,; StringExpression densityMapName,; ObjectExpression<PixelClassificationOverlay> overlay,; boolean enableUnsavedButton); Create a pane containing standardized buttons associated with processing a density map (find hotspots, threshold, export map).; ; Note that because density maps need to reflect the current hierarchy, but should be relatively fast to compute (at low resolution), ; the full density map is generated upon request. Parameters:; qupath - QuPathGUI instance, used to identify viewers; imageData - expression returning the ImageData to use; builder - expression returning the DensityMaps.DensityMapBuilder to use; densityMapName - name of the density map, if it has been saved (otherwise null). This is used for writing workflow steps.; overlay - optional overlay; if present, this could be used by commands to update display (e.g. by temporarily setting a color model).; enableUnsavedButton - add button to enable buttons even if no name is available (indicating the map has not been saved).; Returns:; a pane that may be added to a stage. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/density/DensityMapUI.html:3824,avail,available,3824,javadoc/docs/qupath/process/gui/commands/density/DensityMapUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/density/DensityMapUI.html,1,['avail'],['available']
Availability,"all repainting requests. DoubleProperty; rotationProperty(). Return the rotation property of this viewer. void; selectedPathObjectChanged(PathObject pathObjectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have changed. void; setActiveTool(PathTool tool). Set the active PathTool for input to this viewer. void; setBorderColor(Color color). Set the border color for this viewer. void; setCenterPixelLocation(double x,; double y). Set the image pixel to display in the center of the viewer (using image pixel coordinates at the full-resolution). void; setCursor(Cursor cursor). Set the requested cursor to display in this viewer. void; setCustomPixelLayerOverlay(PathOverlay pathOverlay). Optionally set a custom overlay to use for the pixel layer. void; setDoFasterRepaint(boolean fasterRepaint). Set flag to indicate that repaints should prefer speed over accuracy. void; setDownsampleFactor(double downsampleFactor). Set the downsample factor for this viewer. void; setDownsampleFactor(double downsampleFactor,; double cx,; double cy). Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards. void; setDownsampleFactor(double downsampleFactor,; double cx,; double cy,; boolean clipToMinMax). Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards. void; setGamma(double gamma). Set the gamma value for this viewer. void; setImageData(ImageData<BufferedImage> imageDataNew). Set the current image for this viewer. void; setMagnification(double magnification). Set the downsample factor based upon magnification values. void; setMinimumRepaintSpacingMillis(long repaintSpacingMillis). Prevent frequent repaints (temporarily) by setting a minimum time that must have elapsed; after the previous repaint for a new one to be triggered. void; setRotation(double theta). Set the rotation; angle in radians. void; setSelectedOb",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:11180,down,downsample,11180,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,1,['down'],['downsample']
Availability,"alueWithBoundsCheck(Integer lastValue); Description copied from class: NumericParameter; Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. Specified by:; setValueWithBoundsCheck in class NumericParameter<Integer>; Parameters:; lastValue - ; Returns:. setDoubleLastValue; public boolean setDoubleLastValue(double val); Description copied from class: NumericParameter; A class for setting the numeric value as a double (subclasses should convert this as needed). Specified by:; setDoubleLastValue in class NumericParameter<Integer>; Parameters:; val - ; Returns:. duplicate; public Parameter<Integer> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public Integer getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public Integer getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last val",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html:3942,avail,available,3942,javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/IntParameter.html,1,['avail'],['available']
Availability,"alues, using a specified maximum value. getBooleanParameterValue(String) - Method in class qupath.lib.plugins.parameters.ParameterList. Get a boolean parameter value (or its default) for the specified key. getBorderColor() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the border color set for this viewer. getBoundaryClass(PathClass) - Method in class qupath.process.gui.commands.ml.BoundaryStrategy. Get the classification to be used for the annotation boundary, given the classification of the annotated region. getBoundaryDistance(ROI, ROI) - Static method in class qupath.lib.roi.RoiTools. Get the Euclidean distance between the boundaries of two ROIs. getBoundaryDistance(ROI, ROI, double, double) - Static method in class qupath.lib.roi.RoiTools. Get the calibrated Euclidean distance between the boundaries of two ROIs using specified pixel sizes. getBoundaryLabels() - Method in class qupath.lib.images.servers.LabeledImageServer. Get an unmodifiable map of classifications and their corresponding boundary labels, if available. getBoundaryStrategy() - Method in class qupath.process.gui.commands.ml.PixelClassifierTraining. Get the strategy for handling the boundaries of area annotations. getBoundaryThickness() - Method in class qupath.process.gui.commands.ml.BoundaryStrategy. Get the boundary thickness, in pixels. getBounds(ImageRegion) - Static method in class qupath.lib.awt.common.AwtTools. Create a Rectangle corresponding to the x,y,width,height of an ImageRegion. getBounds(ImageRegion, Rectangle) - Static method in class qupath.lib.awt.common.AwtTools. Set the bounds of an existing Rectangle to the x,y,width,height of an ImageRegion. getBounds(ROI) - Static method in class qupath.lib.awt.common.AwtTools. Create a Rectangle corresponding to bounding box of a ROI. getBounds2D(ROI) - Static method in class qupath.lib.awt.common.AwtTools. Create a Rectangle2D corresponding to bounding box of a ROI. getBounds2D(ROI, Rectangle2D) - Static method in class qupath.l",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:338103,avail,available,338103,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"ameters:; imp - ; server - ; roi - ; downsampleFactor - ; plane - ; Returns:. convertToDetection; @Deprecated; public static PathObject convertToDetection(ImagePlus imp,; ImageServer<?> server,; Roi roi,; double downsampleFactor,; ImagePlane plane); Deprecated.; use instead convertToDetection(Roi, double, double, double, ImagePlane). Create an detection object for a specific ImageJ Roi. Parameters:; imp - ; server - ; roi - ; downsampleFactor - ; plane - ; Returns:. convertLabelsToCells; public static SortedMap<Number,PathObject> convertLabelsToCells(ImageProcessor ipNuclei,; ImageProcessor ipCells,; Calibration cal,; double downsample,; ImagePlane plane); Convert integer labeled images into cell objects. Parameters:; ipNuclei - labels corresponding to cell nuclei; non-zero values here must be identical to the values in ipCells; ipCells - labels corresponding to full cell areas; cal - a Calibration object used to aid conversion between ImageJ and QuPath ROIs; downsample - the downsample value for the ImageProcessors, used to aid conversion between ImageJ and QuPath ROIs; plane - the ImagePlane defining where ROIs should be added; Returns:; a SortedMap containing integer labels from the original labeled images mapped to the corresponding cells that have been created. convertLabelsToCells; public static SortedMap<Number,PathObject> convertLabelsToCells(ImageProcessor ipNuclei,; ImageProcessor ipCells,; double xOrigin,; double yOrigin,; double downsample,; ImagePlane plane); Convert integer labeled images into cell objects. Parameters:; ipNuclei - labels corresponding to cell nuclei; non-zero values here must be identical to the values in ipCells; ipCells - labels corresponding to full cell areas; xOrigin - the x pixel coordinate for the top left corner of the image, used to aid conversion between ImageJ and QuPath ROIs; equivalent to Calibration.xOrigin; yOrigin - the y pixel coordinate for the top left corner of the image, used to aid conversion between ImageJ and Qu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:18709,down,downsample,18709,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,2,['down'],['downsample']
Availability,"ameters:; name - of the checkpoint; if null, a default name will be generated; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has previously been started; See Also:. start(); checkpoint(String). checkpointAndRun; public Timeit checkpointAndRun(Runnable runnable); throws UnsupportedOperationException; Create a checkpoint with the default name and immediately run the provided runnable.; ; Note that no checkpoint is made automatically after completion, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; runnable - the runnable to run; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpointAndRun; public Timeit checkpointAndRun(String name,; Runnable runnable); throws UnsupportedOperationException; Create a checkpoint and immediately run the provided Runnable.; ; Note that no checkpoint is made automatically after completion, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; name - the name of the checkpoint to create; runnable - the runnable to run; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpointAndRun; public Timeit checkpointAndRun(String name,; Runnable runnable,; int nIterations); throws UnsupportedOperationException; Create a checkpoint and immediately run the provided Runnable nIterations times.; The purpose of this is to get better insights into the time required to run a self-contained block of code.; ; Note that no checkpoint is made automatically after completion of the final iteration, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; name - base name of the checkpoint to create; the iteration number will be appended if nIterations > 1; runnable - the runnable to run; nIterations - the number of times to run the runnable; R",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:5375,checkpoint,checkpoint,5375,javadoc/docs/qupath/lib/common/Timeit.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html,2,['checkpoint'],['checkpoint']
Availability,"ameters:; server - ; downsample - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; ROI roi); Create a request that contains the pixels of the specified ROI.; This is calculated using the ROI bounding box. Parameters:; path - ; downsample - ; roi - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; Collection<? extends ROI> rois); Create a request that contains the pixels of the specified ROIs.; This is calculated using the ROI bounding boxes. Parameters:; path - ; downsample - ; rois - ; Returns:; Throws:; IllegalArgumentException - if the ROIs do not all fall on the same ImagePlane. createInstance; public static RegionRequest createInstance(String path,; RegionRequest request); Create a request that matches another request but with a different path. Parameters:; path - ; request - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; ImageRegion region); Create a request corresponding to a specified ImageRegion.; This may also be used to construct a request based on an existing request, but changing either the path or downsample. Parameters:; path - ; downsample - ; region - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; int x,; int y,; int width,; int height,; int z,; int t); Create a request for a region specified in terms of its bounding box, z-slice and time point. Parameters:; path - ; downsample - ; x - ; y - ; width - ; height - ; z - ; t - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; int x,; int y,; int width,; int height,; ImagePlane plane); Create a request for a region specified in terms of its bounding box and ImagePlane. Parameters:; path - ; downsample - ; x - ; y - ; width - ; height - ; plane - ; Returns:. createInstance; public static RegionRequest createInstance(String path,",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html:6522,down,downsample,6522,javadoc/docs/qupath/lib/regions/RegionRequest.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html,1,['down'],['downsample']
Availability,"ameters:; server - ; imp - ; request - ; Returns:; Throws:; IOException. convertToIJRoi; public static <T extends PathImage<ImagePlus>> Roi convertToIJRoi(ROI pathROI,; T pathImage); Create an ImageJ Roi from a ROI, suitable for displaying on the ImagePlus of an PathImage<ImagePlus>. Parameters:; pathROI - ; pathImage - ; Returns:. convertToIJRoi; public static <T extends PathImage<ImagePlus>> Roi convertToIJRoi(ROI pathROI,; Calibration cal,; double downsampleFactor); Convert a QuPath ROI to an ImageJ Roi for an image with the specified calibration. Type Parameters:; T - ; Parameters:; pathROI - ; cal - ; downsampleFactor - ; Returns:; See Also:. convertToIJRoi(ROI, double, double, double). convertToROI; public static ROI convertToROI(Roi roi,; Calibration cal,; double downsampleFactor,; ImagePlane plane); Create a ROI from an ImageJ Roi, using the Calibration object of an ImagePlus. Parameters:; roi - ImageJ Roi; cal - calibration object, including original information; downsampleFactor - the downsample factor of the original image; plane - plane defining c, z and t indices; Returns:. getImagePlane; public static ImagePlane getImagePlane(Roi roi,; ImagePlus imp); Get the ImagePlane of an ImageJ Roi, based upon its stored positions. Parameters:; roi - ImageJ roi that may have c, z, t or position properties set.; imp - associated image; if not null, this will be used to convert the Roi's 'position' property, if non-zero; Returns:; the ImagePlane that is the best approximation of this Roi's position. convertToROI; public static <T extends PathImage<? extends ImagePlus>>; ROI convertToROI(Roi roi,; T pathImage); Create a ROI from an ImageJ Roi. Parameters:; roi - ; pathImage - ; Returns:. convertToPolygonROI; public static PolygonROI convertToPolygonROI(PolygonRoi roi,; Calibration cal,; double downsampleFactor,; ImagePlane plane); Convert an ImageJ PolygonRoi to a QuPath PolygonROI. Parameters:; roi - ; cal - ; downsampleFactor - ; plane - ; Returns:. convertToIJRoi;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:24312,down,downsampleFactor,24312,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,2,['down'],"['downsample', 'downsampleFactor']"
Availability,"ance MethodsAbstract Methods. Modifier and Type; Method; Description; void; paintRegion(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; BufferedImage imgThumbnail,; ImageObserver observer,; ImageRenderer renderer). Paint an image region. void; paintRegionCompletely(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; ImageObserver observer,; ImageRenderer renderer,; long timeoutMilliseconds). Similar to paintRegion(ImageServer, Graphics, Shape, int, int, double, BufferedImage, ImageObserver, ImageRenderer), ; but wait until all the tiles have arrived (or abort if it is taking too long). Method Details. paintRegionCompletely; void paintRegionCompletely(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; ImageObserver observer,; ImageRenderer renderer,; long timeoutMilliseconds); Similar to paintRegion(ImageServer, Graphics, Shape, int, int, double, BufferedImage, ImageObserver, ImageRenderer), ; but wait until all the tiles have arrived (or abort if it is taking too long). Parameters:; server - the server representing the image that shown be painted; g - the graphics object upon which to paint; clipShapeVisible - the visible shape representing the area of the graphics object that should be filled; zPosition - the z-stack position; tPosition - the timepoint position; downsampleFactor - the downsample factor; observer - an ImageObserver (often ignored); renderer - an ImageRenderer to convert images to RGB; timeoutMilliseconds - Timeout after which a request is made from the PathImageServer directly, rather than waiting for tile requests. paintRegion; void paintRegion(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; BufferedImage imgThumbnail,; ImageO",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ImageRegionRenderer.html:1563,down,downsampleFactor,1563,javadoc/docs/qupath/lib/gui/images/stores/ImageRegionRenderer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ImageRegionRenderer.html,1,['down'],['downsampleFactor']
Availability,"and PathImageServer. static void; calibrateObject(PathObject pathObject,; Roi roi). Set the properties of a PathObject based upon an ImageJ Roi. static FloatProcessor[]; colorDeconvolve(ColorProcessor cp,; ColorDeconvolutionStains stains). Apply color deconvolution, outputting 3 'stain' images in the same order as the stain vectors. static boolean; containsImageJRois(File file). Check whether a file is likely to contain an ImageJ ROI, based upon its extension ; or .zip file contents. static SortedMap<Number,PathObject>; convertLabelsToCells(ImageProcessor ipNuclei,; ImageProcessor ipCells,; double xOrigin,; double yOrigin,; double downsample,; ImagePlane plane). Convert integer labeled images into cell objects. static SortedMap<Number,PathObject>; convertLabelsToCells(ImageProcessor ipNuclei,; ImageProcessor ipCells,; Calibration cal,; double downsample,; ImagePlane plane). Convert integer labeled images into cell objects. static PathObject; convertToAnnotation(Roi roi,; double xOrigin,; double yOrigin,; double downsampleFactor,; ImagePlane plane). Create an annotation object for a specific ImageJ Roi, using an ImagePlus to help set properties. static PathObject; convertToAnnotation(Roi roi,; double downsampleFactor,; ImagePlus imp). Create an annotation object for a specific ImageJ Roi. static PathObject; convertToAnnotation(ImagePlus imp,; ImageServer<?> server,; Roi roi,; double downsampleFactor,; ImagePlane plane). Deprecated.; use instead convertToAnnotation(Roi, double, double, double, ImagePlane). static PathObject; convertToDetection(Roi roi,; double xOrigin,; double yOrigin,; double downsampleFactor,; ImagePlane plane). Create a detection object for a specific ImageJ Roi, using an ImagePlus to help set properties. static PathObject; convertToDetection(Roi roi,; double downsampleFactor,; ImagePlus imp). Create a detection object for a specific ImageJ Roi. static PathObject; convertToDetection(ImagePlus imp,; ImageServer<?> server,; Roi roi,; double downsampl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:1950,down,downsampleFactor,1950,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,1,['down'],['downsampleFactor']
Availability,"and to apply a pre-trained object classifier to an image. ObjectClassifierLoadCommand(QuPathGUI) - Constructor for class qupath.process.gui.commands.ObjectClassifierLoadCommand. Constructor. ObjectClassifiers - Class in qupath.lib.classifiers.object. Helper class for creating ObjectClassifiers. ObjectClassifiers() - Constructor for class qupath.lib.classifiers.object.ObjectClassifiers;  ; ObjectClassifiers.ClassifyByMeasurementBuilder<T> - Class in qupath.lib.classifiers.object. Builder to create a simple ObjectClassifier that assigns a classification based upon whether the ; measurement of an object is above, equal to or below a specified threshold. ObjectClassifiers.ObjectClassifierTypeAdapterFactory - Class in qupath.lib.classifiers.object. TypeAdapterFactory to help with serializing ObjectClassifiers to and from JSON. objectCountPostfix() - Method in class qupath.lib.objects.PathObject;  ; ObjectDescriptionPane<T> - Class in qupath.lib.gui.panes. Wraps a pane used to display an object description, if one is available. ObjectDetector<T> - Interface in qupath.lib.plugins. Minimal interface that may be used to plugins that perform detection within a specified ROI ; and using a specified ImageData with set parameters. ObjectMeasurements - Class in qupath.lib.analysis.features. Experimental class to generate object measurements. ObjectMeasurements() - Constructor for class qupath.lib.analysis.features.ObjectMeasurements;  ; ObjectMeasurements.Compartments - Enum Class in qupath.lib.analysis.features. Cell compartments. ObjectMeasurements.Measurements - Enum Class in qupath.lib.analysis.features. Requested intensity measurements. ObjectMeasurements.ShapeFeatures - Enum Class in qupath.lib.analysis.features. Standard measurements that may be computed from shapes. ObjectMerger - Class in qupath.lib.objects.utils. Helper class for merging objects using different criteria. ObjectPreferences() - Constructor for class qupath.lib.gui.panes.PreferencePane.ObjectPreferences;  ;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:717898,avail,available,717898,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"andler.OutputToObjectConverter to convert the output to a list of objects.; ; This method does not apply any masking to the parent ROI, but assumed this has already been applied; elsewhere. Consequently, it can result in objects being created that extend beyond the ROI.; To avoid this, use createMaskAndSplitObjectOutputHandler(OutputToObjectConverter) or; #createMaskedObjectOutputHandler(OutputToObjectConverter)}. Type Parameters:; S - the image type; T - the mask type; U - the output type; Parameters:; converter - ; Returns:. createObjectOutputHandler; static <S,; T,; U> OutputHandler<S,T,U> createObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter); Create an output handler that can be used to add objects to the parent object, applying the ROI mask.; This can result in objects with discontinuous ROIs.; This requires an OutputHandler.OutputToObjectConverter to convert the output to a list of objects. Type Parameters:; S - the image type; T - the mask type; U - the output type; Parameters:; converter - ; Returns:; See Also:. createMaskAndSplitObjectOutputHandler(OutputToObjectConverter). createMaskAndSplitObjectOutputHandler; static <S,; T,; U> OutputHandler<S,T,U> createMaskAndSplitObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter); Create an output handler that can be used to add objects to the parent object, applying the ROI mask and; splitting objects with discontinuous ROIs.; This requires an OutputHandler.OutputToObjectConverter to convert the output to a list of objects. Type Parameters:; S - the image type; T - the mask type; U - the output type; Parameters:; converter - ; Returns:; See Also:. createObjectOutputHandler(OutputToObjectConverter). consumeOutput; static <S,; T,; U> OutputHandler<S,T,U> consumeOutput(); Create a basic do-nothing output handler that consumes the output with no changes.; This returns true regardless of input, without doing anything further. Type Parameters:; S - ; T - ; U - ; Returns:",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html:5060,mask,mask,5060,javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html,1,['mask'],['mask']
Availability,"ankString(String s,; boolean trim). Check if a string is blank, i.e. static boolean; checkExtensions(String path,; String... extensions). Check whether a path ends with one of a number of specified extensions (case insensitive). static double; clipValue(double value,; double min,; double max). Clip a value to be within a specific range. static int; clipValue(int value,; int min,; int max). Clip a value to be within a specific range. static NumberFormat; createFormatter(int nDecimalPlaces). Create a new DecimalFormat that may be used to convert a number to have a maximum of nDecimalPlaces; (trailing zeros are not shown). static boolean; deleteFile(File fileToDelete,; boolean preferTrash). Delete a file, optionally requesting that it be moved to the trash rather than permanently deleted. static String; escapeFilePath(String path). Escape backslashes in an absolute file path - useful when scripting. static long; estimateAvailableMemory(). Estimate the current available memory in bytes, based upon the JVM max and the memory currently used. static long; estimateUsedMemory(). Estimate the current used memory. static String; formatNumber(double value,; int maxDecimalPlaces). Format a value with a maximum number of decimal places, using the default Locale. static String; formatNumber(Locale locale,; double value,; int maxDecimalPlaces). Format a value with a maximum number of decimal places, using a specified Locale. static String; generateDistinctName(String base,; Collection<String> existingNames). Generate a name that is distinct from the names in an existing collection, while being based on a provided name. static Optional<String>; getExtension(File file). Get filename extension. static Optional<String>; getExtension(String name). Get extension from a filename. static String; getNameWithoutExtension(File file). Get the file name with extension removed. static String; getNameWithoutExtension(String name). Deprecated.; v0.5.0 in favor of stripExtension(String), which does",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:2607,avail,available,2607,javadoc/docs/qupath/lib/common/GeneralTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html,1,['avail'],['available']
Availability,"annotation objects 'filled' in viewers. void; setFillDetections(boolean fill). Show detection objects 'filled' in viewers. void; setFontSize(float size). Set the requested font size for the 'Show names' option. void; setGridLines(GridLines gridLines). Set the GridLines object that defines how a counting grid may be show in viewers. void; setMeasurementMapper(MeasurementMapper mapper). Set the MeasurementMapper that defines how detections should be color coded according to their measurement values in viewers. void; setOpacity(float opacity). Set global opacity for overlay drawing. void; setPathClassHidden(PathClass pathClass,; boolean hidden). Request that objects with a particular PathClass not be displayed. void; setPixelClassificationRegionFilter(RegionFilter region). Control where pixel classifications should be calculated during live prediction. void; setShowAnnotations(boolean show). Show the annotations on the image. void; setShowConnections(boolean show). Show connections between objects, if available. void; setShowDetections(boolean show). Show the objects as an overlay on the image. void; setShowGrid(boolean showGrid). Set whether a counting grid should be shown in viewers. void; setShowNames(boolean show). Show the object names on the image. void; setShowPixelClassification(boolean show). Show pixel classification overlays. void; setShowTMACoreLabels(boolean showTMALabels). Show TMA core names on top of the image. void; setShowTMAGrid(boolean show). Show the TMA grid on the image, if present. BooleanProperty; showAnnotationsProperty();  ; BooleanProperty; showConnectionsProperty();  ; BooleanProperty; showDetectionsProperty();  ; BooleanProperty; showGridProperty();  ; BooleanProperty; showNamesProperty();  ; BooleanProperty; showPixelClassificationProperty();  ; BooleanProperty; showTMACoreLabelsProperty();  ; BooleanProperty; showTMAGridProperty();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, noti",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html:5303,avail,available,5303,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,1,['avail'],['available']
Availability,"anoseconds(). Report timings in nanoseconds. Timeit; seconds(). Report timings in seconds. Timeit; start(). Start the Timeit and create a checkpoint with the default name. Timeit; start(String name). Start the Timeit and create a checkpoint with the specified name. Timeit; stop(). Stop the Timeit. Timeit; summarizeCheckpoints(). Request that checkpoints are summarized in the toString() method. Timeit; summarizeCheckpoints(boolean summarize). Optionally request that checkpoints are summarized in the toString() method. String; toString(). Returns a snapshot string representation of the Timeit's status. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. Timeit; public Timeit(). Method Details. start; public Timeit start(); throws UnsupportedOperationException; Start the Timeit and create a checkpoint with the default name.; ; Note that calling this method is not essential, because the Timeit will automatically ; be started when the first checkpoint is created. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has previously been started; See Also:. start(String); checkpoint(). start; public Timeit start(String name); throws UnsupportedOperationException; Start the Timeit and create a checkpoint with the specified name.; ; Note that calling this method is not essential, because the Timeit will automatically ; be started when the first checkpoint is created. Parameters:; name - of the checkpoint; if null, a default name will be generated; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has previously been started; See Also:. start(); checkpoint(String). checkpointAndRun; public Timeit checkpointAndRun(Runnable runnable); throws UnsupportedOperationException; Create a checkpoint with the default name and immediately run the provided runnable.; ; Note that no checkpoint is made automatically after completion, ; so ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:3980,checkpoint,checkpoint,3980,javadoc/docs/qupath/lib/common/Timeit.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html,1,['checkpoint'],['checkpoint']
Availability,"arameters:; mats - ; kernel - ; ind3D - ; border - ; Returns:. filterZ; public static List<Mat> filterZ(List<Mat> mats,; Mat kernelZ,; int ind3D,; int border); Filter filter along entries in the input list.; ; If each Mat in the list can be considered a consecutive 2D image plane from a z-stack, ; this can be considered filtering along the z-dimension. Parameters:; mats - ; kernelZ - ; ind3D - if -1, return filtered results for all mats, otherwise only return results for the mat at the specified ind3D; border - ; Returns:. extractZStack; public static List<Mat> extractZStack(ImageServer<BufferedImage> server,; RegionRequest request,; int zMin,; int zMax); throws IOException; Extract a list of Mats, where each Mat corresponds to a z-slice. Parameters:; server - ; request - ; zMin - first z slice, inclusive; zMax - last z slice, exclusive; Returns:; Throws:; IOException. extractZStack; public static List<Mat> extractZStack(ImageServer<BufferedImage> server,; RegionRequest request); throws IOException; Extract a list of Mats, where each Mat corresponds to a z-slice, for all available z-slices of a region. Parameters:; server - ; request - ; Returns:; Throws:; IOException; See Also:. extractZStack(ImageServer, RegionRequest, int, int). crop; public static Mat crop(Mat mat,; int x,; int y,; int width,; int height); Crop a region from a Mat based on its bounding box, returning a new image (not a subregion). Parameters:; mat - ; x - ; y - ; width - ; height - ; Returns:. crop; public static Mat crop(Mat mat,; Padding padding); Crop a region from a Mat by stripping off padding, returning a new image (not a subregion). Parameters:; mat - ; padding - ; Returns:; Since:; v0.4.0. applyTiled; public static Mat applyTiled(Function<Mat,Mat> fun,; Mat mat,; int tileWidth,; int tileHeight,; Padding padding,; int borderType); Apply a function to a Mat that strictly requires a specific input size.; The output is expected to have the same size as the input, but may have a different num",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:31734,avail,available,31734,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html,1,['avail'],['available']
Availability,"arameters:; server - ; path - ; compression - ; Throws:; FormatException; IOException. writeImage; public static void writeImage(ImageServer<BufferedImage> server,; String path,; OMEPyramidWriter.CompressionType compression,; ImageRegion region); throws FormatException,; IOException; Static helper method to write an image region using Bio-Formats with the specified compression.; If region is null, the entire image will be written. If region is not null, it defines the bounding box of the exported ; pixels in addition to the z-slice and timepoint. Parameters:; server - image to write; path - path to output file; compression - image compression method; may be null to use the default compression; region - the region to export. If this is a RegionRequest that defines a downsample other than the default for the server, this downsample will be used.; Throws:; FormatException; IOException. writeImage; public static void writeImage(ImageServer<BufferedImage> server,; String path,; OMEPyramidWriter.CompressionType compression,; ImageRegion region,; boolean allZ,; boolean allT); throws FormatException,; IOException; Static helper method to write an image using Bio-Formats for a defined region with the specified compression, optionally including all ; z-slices or timepoints.; This is intended primarily to write (possibly pyramidal) OME-TIFF images; other formats may support fewer image types and dimensions. Parameters:; server - image to write; path - path to output file; compression - image compression method; may be null to use the default compression; region - the region to export. If this is a RegionRequest that defines a downsample other than the default for the server, this downsample will be used.; allZ - if true, export all z-slices otherwise export slice defined by region (ignored if image is not a z-stack); allT - if true, export all timepoints otherwise export timepoint defined by region (ignored if image is not a timeseries); Throws:; FormatException; IOException. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.html:6464,down,downsample,6464,javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.html,2,['down'],['downsample']
Availability,"arameters:; title - dialog title; message - dialog prompt; choices - array of available options; defaultChoice - initial selected option; Returns:; chosen option, or null if the user cancels the dialog. showChoiceDialog; public static <T> T showChoiceDialog(String title,; String message,; Collection<T> choices,; T defaultChoice); Deprecated.; Show a choice dialog with a collection of choices (selection from ComboBox or similar). Type Parameters:; T - ; Parameters:; title - dialog title; message - dialog prompt; choices - list of available options; defaultChoice - initial selected option; Returns:; chosen option, or null if the user cancels the dialog. showErrorMessage; public static void showErrorMessage(String title,; Throwable e); Deprecated.; Show an error message, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; Throwable e); Deprecated.; Show an error notification, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; String message); Deprecated.; Show an error notification. Parameters:; title - ; message - . showWarningNotification; public static void showWarningNotification(String title,; String message); Deprecated.; Show a warning notification. Parameters:; title - ; message - . showInfoNotification; public static void showInfoNotification(String title,; String message); Deprecated.; Show an info notification. Parameters:; title - ; message - . showPlainNotification; public static void showPlainNotification(String title,; String message); Deprecated.; Show a plain notification. Parameters:; title - ; message - . showNoImageError; public static void showNoImageError(String title); Deprecated.; Show an error message that no image is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showNoProje",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:9012,error,error,9012,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['error'],['error']
Availability,"are exported. OMEPyramidWriter.Builder; bigTiff(). Request that the image is written in BigTIFF format. OMEPyramidWriter.Builder; bigTiff(boolean doBigTiff). Specify whether the image should be written in BigTIFF format. OMEPyramidWriter.OMEPyramidSeries; build(). Create an OMEPyramidWriter.OMEPyramidSeries to write the OME-TIFF. OMEPyramidWriter.Builder; channels(int... channels). Override default of writing all channels in their original order to be able to specify which ; channels are output, and in which order. OMEPyramidWriter.Builder; channelsImages(). Request that channels are written as separate images. OMEPyramidWriter.Builder; channelsInterleaved(). Request that channels are written interleaved within a single image plane. OMEPyramidWriter.Builder; channelsPlanar(). Request that channels are written as separate image planes. OMEPyramidWriter.Builder; compression(OMEPyramidWriter.CompressionType compression). Request the output compression type. OMEPyramidWriter.Builder; downsamples(double... downsamples). Specify downsample factors to use in the final pyramid. OMEPyramidWriter.Builder; dyadicDownsampling(). Downsample by factors of 2. OMEPyramidWriter.Builder; losslessCompression(). Request the default lossless compression method. OMEPyramidWriter.Builder; lossyCompression(). Request the default lossy compression method. OMEPyramidWriter.Builder; name(String name). Specify a series name. OMEPyramidWriter.Builder; parallelize(). Parallelize tile export, if possible. OMEPyramidWriter.Builder; parallelize(boolean doParallel). Specify if tile export should be parallelized if possible, with the default number of threads (current 4). OMEPyramidWriter.Builder; parallelize(int nThreads). Specify if tile export should be parallelized if possible, with the requested number of threads. OMEPyramidWriter.Builder; pixelType(String exportPixelType). Specify the output PixelType as a String, e.g. OMEPyramidWriter.Builder; pixelType(PixelType exportPixelType). Specify the ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html:2101,down,downsamples,2101,javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html,1,['down'],['downsamples']
Availability,"arted by dragging, then it will end by lifting the mouse (rather than requiring a double-click). See Also:. enableFreehandToolsProperty(). useZoomGestures; public static BooleanProperty useZoomGesturesProperty; Support zoom gestures for touchscreens and trackpads. See Also:. useZoomGesturesProperty(). useRotateGestures; public static BooleanProperty useRotateGesturesProperty; Support rotate gestures for touchscreens and trackpads. See Also:. useRotateGesturesProperty(). useScrollGestures; public static BooleanProperty useScrollGesturesProperty; Support scroll gestures for touchscreens and trackpads. See Also:. useScrollGesturesProperty(). brushCreateNewObjects; public static BooleanProperty brushCreateNewObjectsProperty; Create new objects by default when drawing with the Brush tool. The alternative is to append (discontinuous) regions to existing annotations. See Also:. brushCreateNewObjectsProperty(). brushScaleByMag; public static BooleanProperty brushScaleByMagProperty; Optionally scale the default brush tool diameter by the viewer magnification (downsample value). See Also:. brushScaleByMagProperty(). brushDiameter; public static IntegerProperty brushDiameterProperty; Default brush tool diameter, in pixels. See Also:. brushDiameterProperty(). returnToMoveMode; public static BooleanProperty returnToMoveModeProperty; Request that the GUI returns to using the PAN tool after a ROI is drawn.; This helps keep errant clicking under control, but not permitting new ROIs to be made without; explicitly activating a ROI too. See Also:. returnToMoveModeProperty(). tileCachePercentage; public static DoubleProperty tileCachePercentageProperty; Requested percentage of available memory to use for tile caching. See Also:. tileCachePercentageProperty(). useCalibratedLocationString; public static BooleanProperty useCalibratedLocationStringProperty; Show the cursor location on a viewer in calibrated units, rather than pixels. See Also:. useCalibratedLocationStringProperty(). useSele",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:34922,down,downsample,34922,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['down'],['downsample']
Availability,"ary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.dnn; Class OpenCVDnn.Builder. java.lang.Object; qupath.opencv.dnn.OpenCVDnn.Builder. Enclosing class:; OpenCVDnn. public static class OpenCVDnn.Builder; extends Object; Helper class to build an OpenCVDnn. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; OpenCVDnn.Builder; backend(int backend). Specify the backend, e.g. OpenCVDnn; build(). Build a new OpenCVDnn. OpenCVDnn.Builder; classification(). Set the model type to be OpenCVDnn.ModelType.CLASSIFICATION. OpenCVDnn.Builder; config(String pathConfig). Path to config file (if required). OpenCVDnn.Builder; config(URI pathConfig). Path to config file (if required). OpenCVDnn.Builder; cpu(). Request CPU backend and target, if available. OpenCVDnn.Builder; cuda(). Request CUDA backend and target, if available. OpenCVDnn.Builder; cuda16(). Request CUDA backend and target, if available, with 16-bit floating point. OpenCVDnn.Builder; detection(). Set the model type to be OpenCVDnn.ModelType.DETECTION. OpenCVDnn.Builder; framework(String name). Specify the framework (used to identify the appropriate loader for the model). OpenCVDnn.Builder; mean(Scalar mean). Mean values which should be subtracted from the image channels before input to the Net. OpenCVDnn.Builder; modelType(OpenCVDnn.ModelType type). Set the model type, used by OpenCVDnn.buildModel(). OpenCVDnn.Builder; name(String name). User-friendly name to use with this model. OpenCVDnn.Builder; opencl(). Specify OpenCL target. OpenCVDnn.Builder; opencl16(). Specify OpenCL target with 16-bit floating point. OpenCVDnn.Builder; outputs(String... layers). Set the layer outputs. OpenCVDnn.Builder; outputs(Map<String,DnnShape> outputs). Set the layer outputs and shapes. OpenCVDnn.Builder; scale(double scale). Scale values, by which channels should be multiplied (after mean subtraction) before input to the Net. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html:1238,avail,available,1238,javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html,1,['avail'],['available']
Availability,"as available; Since:; v0.4.0; See Also:. createFullImageAnnotation(ImageData, boolean, int, int). createFullImageAnnotation; public static PathObject createFullImageAnnotation(ImageData<?> imageData,; boolean setSelected); Create an annotation around the full image for the specified image, on the default (first) z-slice and timepoint. Parameters:; imageData - the image data for which the annotation should be added; setSelected - if true, set the annotation to be selected when it is created; Returns:; the annotation that was created, or null if no image data was available; Since:; v0.4.0. createFullImageAnnotation; public static PathObject createFullImageAnnotation(ImageData<?> imageData,; boolean setSelected,; int z,; int t); Create an annotation around the full image for the specified image, on the specified z-slice and timepoint. Parameters:; imageData - the image data for which the annotation should be added; setSelected - if true, set the annotation to be selected when it is created; z - z-slice (0-based index); t - timepoint (0-based index); Returns:; the annotation that was created, or null if no image data was available; Since:; v0.4.0. buildServer; @Deprecated; public static <T> ImageServer<T> buildServer(String path,; Class<T> cls,; String... args); throws IOException; Deprecated.; In the usual case where BufferedImage is the class, use buildServer(String, String...) instead ; because it handles default args. Build an ImageServer with a specified class. Parameters:; path - image path (usually a file path or URI); cls - generic type for the server (usually BufferedImage); args - optional arguments; Returns:; an ImageServer, if one could be build from the supplied arguments; Throws:; IOException - if unable to build the server; See Also:. ImageServers.buildServer(URI, String...). buildServer; public static ImageServer<BufferedImage> buildServer(String path,; String... args); throws IOException; Build an ImageServer with the class BufferedImage. Parameters:; p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:73494,avail,available,73494,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['avail'],['available']
Availability,"ase from a GitHub repo. checkImageSupport(URI, String...) - Method in class qupath.imagej.images.servers.ImageJServerBuilder;  ; checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; checkImageSupport(URI, String...) - Method in interface qupath.lib.images.servers.ImageServerBuilder. Check whether a URI is supported by this builder. checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.JsonImageServerBuilder;  ; checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; checkMinVersion(String) - Static method in class qupath.lib.scripting.QP. Check whether the current QuPath version is ≥ the specified version. checkpoint() - Method in class qupath.lib.common.Timeit. Create a new checkpoint with a default name. checkpoint(String) - Method in class qupath.lib.common.Timeit. Create a new checkpoint with the specified name. checkpointAndRun(Runnable) - Method in class qupath.lib.common.Timeit. Create a checkpoint with the default name and immediately run the provided runnable. checkpointAndRun(String, Runnable) - Method in class qupath.lib.common.Timeit. Create a checkpoint and immediately run the provided Runnable. checkpointAndRun(String, Runnable, int) - Method in class qupath.lib.common.Timeit. Create a checkpoint and immediately run the provided Runnable nIterations times. checkType(URI) - Static method in class qupath.lib.images.servers.FileFormatInfo. Check the type of an image for a specified URI. checkVersionRange(String, String) - Static method in class qupath.lib.scripting.QP. Check whether the current QuPath version is ≥ the specified minimum version, and < the specified maximum. ChoiceParameter<S> - Class in qupath.lib.plugins.parameters. Parameter that supports a list of choices. choices - Variable in class qupath.lib.plugins.parameters.ChoiceParameter;  ; CIRCULARITY - Enum constant in enum class qupath.lib.analysis",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:99003,checkpoint,checkpointAndRun,99003,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['checkpoint'],['checkpointAndRun']
Availability,"ased indexing); Returns:; this exporter. channels; public TileExporter channels(String... channelNames); Export only specified channels, identified by name.; ; Note: currently, this always involved conversion to 32-bit.; This behavior may change in a future version of QuPath to preserve image type. Parameters:; channelNames - channels to export; Returns:; this exporter. overlap; public TileExporter overlap(int overlap); Define tile overlap (both x and y) in pixel units at the export resolution.; This is ignored if 'parentObjects' are specified. Parameters:; overlap - ; Returns:; this exporter. overlap; public TileExporter overlap(int overlapX,; int overlapY); Define tile overlap (x and y separately) in pixel units at the export resolution.; This is ignored if 'parentObjects' are specified. Parameters:; overlapX - ; overlapY - ; Returns:; this exporter. downsample; public TileExporter downsample(double downsample); Define resolution as a downsample value. Parameters:; downsample - ; Returns:; this exporter; See Also:. requestedPixelSize(double). requestedPixelSize; public TileExporter requestedPixelSize(double pixelSize); Define resolution as a pixel size in calibrated units. The actual units depend upon those stored within the server. Parameters:; pixelSize - ; Returns:; this exporter. includePartialTiles; public TileExporter includePartialTiles(boolean includePartialTiles); Specify whether incomplete tiles at image boundaries should be included.; ; If true, then when tiling the entire image some tiles may not have the specified tile width or height, ; or alternatively when creating tiles based upon object centroids then some zero-padding may be required ; to ensure the center is preserved along with the tile dimensions.; Default is false. Parameters:; includePartialTiles - ; Returns:; this exporter; See Also:. tileSize(int, int); parentObjects(Predicate); parentObjects(Collection); useROIBounds(boolean). region; public TileExporter region(RegionRequest region); Def",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/TileExporter.html:7280,down,downsample,7280,javadoc/docs/qupath/lib/images/writers/TileExporter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/TileExporter.html,1,['down'],['downsample']
Availability,"ashCode() - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; hashCode() - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; hasHelpText() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; hasHelpText() - Method in interface qupath.lib.plugins.parameters.Parameter. Query whether getHelpText() returns a meaningful String (as opposed to null). hasImageData() - Method in interface qupath.lib.projects.ProjectImageEntry. Check if this entry has saved ImageData already available. hasJavaPreferences() - Static method in class qupath.lib.gui.prefs.PathPrefs. Attempt to load user JVM defaults - may fail if packager.jar (and any required native library) isn't found. hasLowerAndUpperBounds() - Method in class qupath.lib.plugins.parameters.NumericParameter. Returns true if this parameter has both lower and upper bounds constraining valid values. hasLowerBound() - Method in class qupath.lib.plugins.parameters.NumericParameter. Returns true if the parameter has a valid lower bound. hasMeasurement(PathObject, String) - Static method in class qupath.lib.scripting.QP. Test whether a PathObject has a specified measurement in its measurement list. hasMeasurements() - Method in class qupath.lib.objects.PathObject. Returns true if the measurement list for this object is not empty. hasNucleus() - Method in class qupath.lib.objects.PathCellObject. Returns true if a nucleus ROI is stored for this cell. hasObjectsForRegion(Class<? extends PathObject>",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:571193,avail,available,571193,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"ashCode, notify, notifyAll, wait, wait, wait. Field Details. lastValue; protected String lastValue. Method Details. isValidInput; public boolean isValidInput(String value); Description copied from interface: Parameter; Query if a specified value would be valid for this parameter. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); Description copied from interface: Parameter; Set last value using a string; implementing classes may need to parse this. Parameters:; locale - ; value - ; Returns:. duplicate; public Parameter<String> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Specified by:; setHidden in interface Parameter<S>; Parameters:; hidden - . isHidden; public boolean isHidden(); Description copied from interface: Parameter; Test is the 'hidden' flag is set for the parameter. Specified by:; isHidden in interface Parameter<S>; Returns:. getDefaultValue; public String getDefaultValue(); Description copied from interface: Parameter; Get a default value to use if the Parameter has not been otherwise set. Specified by:; getDefaultValue in interface Parameter<S>; Returns:. getValue; public String getValue(); Description copied from interface: Parameter; Get the current set value (may be null). Specified by:; getValue in interface Parameter<S>; Returns:; See Also:. Parameter.setValue(S); Parameter.getValueOrDefault(). resetValue; public void resetValue(); Description copied from interface: Parameter; Set last value",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html:3158,avail,available,3158,javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/StringParameter.html,1,['avail'],['available']
Availability,"ass qupath.lib.gui.extensions.UpdateChecker. Query the most recent QuPath release on GitHub. checkForUpdate(GitHubProject.GitHubRepo) - Static method in class qupath.lib.gui.extensions.UpdateChecker. Query the latest release from a GitHub repo. checkImageSupport(URI, String...) - Method in class qupath.imagej.images.servers.ImageJServerBuilder;  ; checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; checkImageSupport(URI, String...) - Method in interface qupath.lib.images.servers.ImageServerBuilder. Check whether a URI is supported by this builder. checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.JsonImageServerBuilder;  ; checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; checkMinVersion(String) - Static method in class qupath.lib.scripting.QP. Check whether the current QuPath version is ≥ the specified version. checkpoint() - Method in class qupath.lib.common.Timeit. Create a new checkpoint with a default name. checkpoint(String) - Method in class qupath.lib.common.Timeit. Create a new checkpoint with the specified name. checkpointAndRun(Runnable) - Method in class qupath.lib.common.Timeit. Create a checkpoint with the default name and immediately run the provided runnable. checkpointAndRun(String, Runnable) - Method in class qupath.lib.common.Timeit. Create a checkpoint and immediately run the provided Runnable. checkpointAndRun(String, Runnable, int) - Method in class qupath.lib.common.Timeit. Create a checkpoint and immediately run the provided Runnable nIterations times. checkType(URI) - Static method in class qupath.lib.images.servers.FileFormatInfo. Check the type of an image for a specified URI. checkVersionRange(String, String) - Static method in class qupath.lib.scripting.QP. Check whether the current QuPath version is ≥ the specified minimum version, and < the specified maximum. ChoiceParameter<S> - C",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:98789,checkpoint,checkpoint,98789,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['checkpoint'],['checkpoint']
Availability,"ass<? extends PathObject>> supportedParents). Get the parent objects to use when running the plugin, or null if no suitable parent objects are found. static boolean; promptForSliderRange(Slider slider). Prompt the user to input min/max values for a slider. static boolean; promptToClearAllSelectedObjects(ImageData<?> imageData). Prompt user to select all currently-selected objects (except TMA core objects). static boolean; promptToRemoveSelectedObject(PathObject pathObjectSelected,; PathObjectHierarchy hierarchy). Prompt to remove a single, specified selected object. static boolean; promptToSetActiveAnnotationProperties(PathObjectHierarchy hierarchy). Prompt the user to set properties for the currently-selected annotation(s). static <T> void; refreshList(ListView<T> listView). Refresh a ListView in the Application thread. static void; showNoImageError(String title). Show an error message that no image is available. static void; showNoProjectError(String title). Show an error message that no project is available. static boolean; showParameterDialog(String title,; ParameterList params). Show a (modal) dialog for a specified ParameterList. static void; showWithScreenSizeConstraints(Stage stage,; double proportion). Show a stage, while ensuring that it cannot be larger than the screen size. static void; showWithSizeConstraints(Stage stage,; double maxWidth,; double maxHeight). Show a stage, while ensuring that it cannot be larger the maximum dimensions provided; This effectively sets the maximum dimensions of the stage, shows it, and then restores the previous maximum dimensions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GuiTools; public GuiTools(). Method Details. createMoreButton; public static Button createMoreButton(ContextMenu menu,; Side side); Create a Button with a standardized icon and tooltip text to indicate 'More', ; which triggers a ContextMe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html:5917,error,error,5917,javadoc/docs/qupath/lib/gui/tools/GuiTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html,2,"['avail', 'error']","['available', 'error']"
Availability,"asurementMapper() - Method in class qupath.lib.gui.viewer.OverlayOptions. Reset any MeasurementMapper, so that measurements are not used to determine object colors. resetMinimumRepaintSpacingMillis() - Method in class qupath.lib.gui.viewer.QuPathViewer. Return to processing all repainting requests. resetPathClass() - Method in class qupath.lib.objects.PathObject. Reset the classification (i.e. resetPreferences() - Static method in class qupath.lib.gui.prefs.PathPrefs. Reset the preferences to their defaults. resetSelection() - Static method in class qupath.lib.scripting.QP. Clear the selected objects for the current PathObjectHierarchy. resetSelection(ImageData<?>) - Static method in class qupath.lib.gui.commands.Commands. Reset the selection for an image. resetTMAMetadata(boolean) - Static method in class qupath.lib.scripting.QP. Remove all TMA metadata from the current TMA grid. resetTMAMetadata(ImageData<?>) - Static method in class qupath.lib.gui.commands.Commands. Reset TMA metadata, if available. resetTMAMetadata(PathObjectHierarchy, boolean) - Static method in class qupath.lib.scripting.QP. Remove all TMA metadata from the TMA grid of the specified hierarchy. resetValue() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; resetValue() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; resetValue() - Method in interface qupath.lib.plugins.parameters.Parameter. Set last value to null (so default can be used). resizable() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Make the dialog resizable (but default it ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:864290,avail,available,864290,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"at takes an existing metadata object as a starting point, ; but allows individual properties to be overridden. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ImageServerMetadata; build(). Build an ImageServerMetadata. ImageServerMetadata.Builder; channels(Collection<ImageChannel> channels). Specify the image channels. ImageServerMetadata.Builder; channelType(ImageServerMetadata.ChannelType type). Specify the interpretation of channels. ImageServerMetadata.Builder; classificationLabels(Map<Integer,PathClass> classificationLabels). Specify the interpretation of classification labels. ImageServerMetadata.Builder; height(int height). Specify the full-resolution image height. ImageServerMetadata.Builder; levels(Collection<ImageServerMetadata.ImageResolutionLevel> levels). Specify resolution levels, where the largest image should come first. ImageServerMetadata.Builder; levelsFromDownsamples(double... downsamples). Specify downsample values for pyramidal levels. ImageServerMetadata.Builder; magnification(double magnification). Specify a magnification value for the highest-resolution image. ImageServerMetadata.Builder; maxValue(Number val). Specify the maximum value supported by this image. ImageServerMetadata.Builder; minValue(Number val). Specify the minimum value supported by this image. ImageServerMetadata.Builder; name(String name). Specify the image name. ImageServerMetadata.Builder; pixelSizeMicrons(Number pixelWidthMicrons,; Number pixelHeightMicrons). Specify the pixel sizes, in microns. ImageServerMetadata.Builder; pixelType(PixelType pixelType). Specify the bit-depth of the image. ImageServerMetadata.Builder; preferredTileSize(int tileWidth,; int tileHeight). Specify the preferred tile height and width. ImageServerMetadata.Builder; rgb(boolean isRGB). Specify that the image stores pixels in (A)RGB form. ImageServerMetadata.Builder; sizeT(int sizeT). Specify the number of time points. ImageServerMetadata.Build",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.Builder.html:2027,down,downsample,2027,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.Builder.html,1,['down'],['downsample']
Availability,"at,; Mat mask). Find maxima within an image. static Mat; findRegionalMaxima(Mat mat). Get the regional maxima within a Mat, providing the output as a labeled image. static void; floor(Mat mat). Floor values in a floating point Mat. static void; gaussianFilter(Mat mat,; double sigma). Apply a 2D Gaussian filter to all channels of an image, with symmetric boundary padding. static void; gaussianFilter(Mat mat,; double sigma,; int borderType). Apply a 2D Gaussian filter to all channels of an image. static Mat; getCircularStructuringElement(int radius). Deprecated.; createDisk(int, boolean) gives more reliable shapes. static double[]; getGaussianDeriv(double sigma,; int order,; int length). Get filter coefficients for a 1D Gaussian (derivative) kernel. static Mat; getGaussianDerivKernel(double sigma,; int order,; boolean doColumn). Get filter coefficients for a 1D Gaussian (derivative) kernel. static List<OpenCVTools.IndexedPixel>; getMaskedPixels(Mat mat,; Mat mask). Extract all the masked pixels within an image. static int; getOpenCVPixelType(PixelType pixelType). Get the OpenCV type code corresponding to a PixelType. static Mat; hConcat(Collection<? extends Mat> mats,; Mat dest). Horizontal concatenation for a Mat. static Mat; imageToMat(BufferedImage img). Convert a BufferedImage to an OpenCV Mat. static Mat; imageToMatBGR(BufferedImage img,; boolean includeAlpha). Extract 8-bit unsigned pixels from a BufferedImage as a multichannel BGR(A) Mat. static Mat; imageToMatRGB(BufferedImage img,; boolean includeAlpha). Extract 8-bit unsigned pixels from a BufferedImage as a multichannel RGB(A) Mat. static void; invertBinary(Mat matBinary,; Mat matDest). Invert a binary image. static boolean; isFloat(Mat mat). Returns true if a Mat is a floating point (rather than int) type. static Mat; label(Mat matBinary,; int connectivity). Label connected components for non-zero pixels in an image. static int; label(Mat matBinary,; Mat matLabels,; int connectivity). Label connected compon",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:6926,mask,masked,6926,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html,1,['mask'],['masked']
Availability,"at,; int radius). Apply a 2D closing filter (dilation followed by erosion) to all channels of an image. static List<PathObject>; createAnnotations(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel). Create annotation objects by tracing contours in a labelled image. static Mat; createBinaryMask(Mat mat,; DoublePredicate predicate). Create a binary mask (0, 255 values) by applying a predicate to pixel values. static List<PathObject>; createCells(Mat matLabelsNuclei,; Mat matLabelsCells,; RegionRequest region,; int minLabel,; int maxLabel). Create cell objects by tracing contours in a labelled image. static List<PathObject>; createDetections(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel). Create detection objects by tracing contours in a labelled image. static Mat; createDisk(int radius,; boolean doMean). Create a disk filter. static Mat; createMask(Mat mat,; DoublePredicate predicate,; double trueValue,; double falseValue). Create a mask by applying a predicate to pixel values. static List<PathObject>; createObjects(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel,; BiFunction<ROI,Number,PathObject> creator). Create objects by tracing contours in a labelled image. static Map<Number,ROI>; createROIs(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel). Convert integer labels into ROIs. static Mat; crop(Mat mat,; int x,; int y,; int width,; int height). Crop a region from a Mat based on its bounding box, returning a new image (not a subregion). static Mat; crop(Mat mat,; Padding padding). Crop a region from a Mat by stripping off padding, returning a new image (not a subregion). static Mat; ensureContinuous(Mat mat,; boolean inPlace). Ensure a Mat is continuous, creating a copy of the data if necessary. static double[]; extractDoubles(Mat mat). Extract pixels as a double array. static float[]; extractFloats(Mat mat). Extract pixels as a float array. static double[]; extractMaskedDoubles(Mat input,; Ma",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:3110,mask,mask,3110,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html,1,['mask'],['mask']
Availability,"at; Returns:; list of pixels, including their indices and values. extractMaskedFloats; public static float[] extractMaskedFloats(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pixels should be extracted; mask - the mask to apply to the input; channel - the channel index (zero-based) to consider; Returns:; a float array containing the values of the input filtered by the mask; Throws:; IllegalArgumentException - when the input and the mask don't have the same dimensions. extractMaskedDoubles; public static double[] extractMaskedDoubles(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pixels should be extracted; mask - the mask to apply to the input; channel - the channel index (zero-based) to consider; Returns:; a double array containing the values of the input filtered by the mask; Throws:; IllegalArgumentException - when the input and the mask don't have the same dimensions. shrinkLabels; public static Mat shrinkLabels(Mat mat); Shrink labels to a single point.; This works by effectively iterating through each label, and retaining only the labeled pixel that is closest to the centroid ; of all pixels with the same label - setting all other pixels within the component to zero. Parameters:; mat - label mat (must be CV_32S); Returns:; the labeled image, with only one pixel per label greater than zero. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:45042,mask,mask,45042,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html,8,['mask'],['mask']
Availability,"ata, and therefore ; should not be reused across viewers. Parameters:; regionStore - region store to cache image tiles; overlayOptions - overlay options to control display; imageData - current image data. Method Details. resetImageData; public void resetImageData(); Reset the last image data.; The hierarchy overlay stores the last-seen image data internally to assist with caching, but retaining a reference; too long could become a memory leak. paintOverlay; public void paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely); Description copied from interface: PathOverlay; Paint the overlay to a graphics object. The graphics object will have a transform applied to it, so the painting should; make use of coordinates in the original image space. Parameters:; g2d - Graphics2D object to which drawing should be performed. This should have any transform already applied to it.; imageRegion - The maximum image region that should be shown.; downsampleFactor - The downsample factor at which the overlay will be viewed. There is no need for rescaling according to; this value since it has already been applied to the Graphics2D as part of its AffineTransform, however; it may optionally be needed within the method e.g. to correct line thicknesses.; imageData - the ImageData associated with this overlay. If the overlay is being displayed on a viewer, this is the ImageData open ; within the viewer. Not all overlays require this, and it may be null.; paintCompletely - If true, the method is permitted to return without completely painting everything, for performance reasons. clearCachedOverlay; public void clearCachedOverlay(); Clear previously-cached tiles for this overlay. clearCachedOverlayForRegion; public void clearCachedOverlayForRegion(ImageRegion region); Clear previously-cached tiles for a specified region of this overlay. Parameters:; region - the region for which tiles should be removed. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html:3375,down,downsampleFactor,3375,javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html,2,['down'],"['downsample', 'downsampleFactor']"
Availability,"ate a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion, ; with an optional bounding rectangle. Parameters:; raster - the multi-band raster containing values to check; counts - existing histogram if it should be updated, or null if a new histogram should be created. The length should ; match the number of bands in the raster.; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; bounds - optional rectangle defining the bounds of the raster to search.; If not null, this is used with the (also optional) mask to restrict the pixels that are used.; This can give substantial performance improvements for small masked regions embedded in larger images.; Returns:; See Also:. computeArgMaxHistogram(WritableRaster, long[], WritableRaster). computeAboveThresholdCounts; public static long computeAboveThresholdCounts(WritableRaster raster,; int band,; double threshold,; WritableRaster rasterMask); Count the number of above-threshold pixels in a specified band of a raster, with optional mask. Parameters:; raster - the multi-band raster containing values to check; band - the band (channel) to consider; threshold - threshold value; pixels with values > threshold this will be counted; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; Returns:; See Also:. computeAboveThresholdCounts(WritableRaster, int, double, WritableRaster, Rectangle). computeAboveThresholdCounts; public static long computeAboveThresholdCounts(WritableRaster raster,; int band,; double threshold,; WritableRaster rasterMask,; Rectangle bounds); Count the number of above-threshold pixels in a specified band of a raster, with optional mask and/or bounding rectangle. Parameters:; raster - the multi-band raster containing values to check; band - the band (channel) to consider; threshold - threshold value; pixels with va",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:13788,mask,mask,13788,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,1,['mask'],['mask']
Availability,"ate a name that is distinct from the names in an existing collection, while being based on a provided name.; ; This is useful, for example, when duplicating named items and requiring that the duplicates can be distinguished.; The precise way in which the name is derived is implementation-dependent, with the only requirement that it be ; recognizably derived from the base name.; ; Currently, names are generated in the form ""base (i)"" where i is an integer.; ; Note that if the base already has the same form, any existing integer will be stripped away; ; for example providing ""name (1)"" as the base will yield the output ""name (2)"", ; (assuming this name does not already exist), rather than ""name (1) (1)"". Parameters:; base - the (non-empty) base from which the name should be derived; existingNames - a collection of names that are already in use, and therefore must be avoided; Returns:; the distinct name. estimateAvailableMemory; public static long estimateAvailableMemory(); Estimate the current available memory in bytes, based upon the JVM max and the memory currently used.; ; This may be used to help determine whether a memory-hungry operation should be attempted. Returns:; the estimated unused memory in bytes. estimateUsedMemory; public static long estimateUsedMemory(); Estimate the current used memory. Returns:; the estimated allocated memory in bytes. smartStringSort; public static <T> void smartStringSort(Collection<T> collection); Smart-sort a collection using the Object.toString() method applied to each element.; See smartStringSort(Collection, Function) for more details. Type Parameters:; T - ; Parameters:; collection - collection to be sorted (results are retained in-place); See Also:. smartStringSort(Collection, Function). smartStringSort; public static <T> void smartStringSort(Collection<T> collection,; Function<T,String> extractor); Smart-sort a collection after extracting a String representation of each element.; This differs from a 'normal' sort by splitti",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:21211,avail,available,21211,javadoc/docs/qupath/lib/common/GeneralTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html,1,['avail'],['available']
Availability,"ate a request for a region specified in terms of its bounding box and ImagePlane. Parameters:; path - ; downsample - ; x - ; y - ; width - ; height - ; plane - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; int x,; int y,; int width,; int height); Create a request for a region specified in terms of its bounding box, using the first z-slice and time point. Parameters:; path - ; downsample - ; x - ; y - ; width - ; height - ; Returns:. overlapsRequest; public boolean overlapsRequest(RegionRequest request); Returns true if the region specified by this request overlaps with that of another request.; The test includes insuring that they refer to the same image by checking the paths are the same. Parameters:; request - ; Returns:. getPath; public String getPath(); Get the requested ImageServer path, used as an identifier. Returns:; See Also:. ImageServer.getPath(). getDownsample; public double getDownsample(); Get the requested downsample factor, defining the resolution at which pixels should be returned. Returns:. intersect2D; public RegionRequest intersect2D(ImageRegion region); Intersect to the specified 2D region, ignoring z and t. Parameters:; region - the region defining the x, y, width and height of the maximum permitted bounding box.; Returns:; the clipped RegionRequest, which may be this if no clipping is required. intersect2D; public RegionRequest intersect2D(int x,; int y,; int width,; int height); Intersect to the specified 2D region. Parameters:; x - x-coordinate of the second region's bounding box; y - y-coordinate of the second region's bounding box; width - width of the second region's bounding box; height - height of the second region's bounding box; Returns:; the clipped RegionRequest, which may be this if no clipping is required. updateZ; public RegionRequest updateZ(int z); Create a RegionRequest equivalent to this one with the updated z value. Parameters:; z - requested z position; Returns:; Reg",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html:8279,down,downsample,8279,javadoc/docs/qupath/lib/regions/RegionRequest.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html,1,['down'],['downsample']
Availability,"ate different kinds of Area ; (e.g. java.awt.Area or some JavaFX alternative.). Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Beware this method! This will return all polygon points (useful e.g. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Get the x coordinate of the ROI centroid;. double; getCentroidY(). Get the y coordinate of the ROI centroid;. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. double; getLength(). Get ROI length. int; getNumPoints(). Default implementation, calls ROI.getAllPoints() and then caches the result. String; getRoiName(). Get a String representation of the kind of ROI we have, ; e.g. ROI.RoiType; getRoiType(). Get the RoiType, used to distinguish between points, lines and areas. double; getScaledArea(double pixelWidth,; double pixelHeight). Get scaled area of the ROI, for use with calibrated pixel sizes. double; getScaledLength(double pixelWidth,; double pixelHeight). Get the scaled length, for use with calibrated pixel sizes. Shape; getShape(",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html:2314,avail,available,2314,javadoc/docs/qupath/lib/roi/AreaROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/AreaROI.html,1,['avail'],['available']
Availability,"ath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.opencv.ml; Class OpenCVClassifiers.RTreesClassifier. java.lang.Object; qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel; qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Enclosing class:; OpenCVClassifiers. public static class OpenCVClassifiers.RTreesClassifier; extends OpenCVClassifiers.OpenCVStatModel; Classifier based on RTrees. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TrainData; createTrainData(Mat samples,; Mat targets,; Mat weights,; boolean doMulticlass). Create training data in the format required by this classifier. double[]; getFeatureImportance(). Request the variable importance values from the last trained RTrees classifier, if available. String; getName(). User-friendly, readable name for the classifier. ParameterList; getParameterList(). Retrieve a list of adjustable parameter that can be used to customize the classifier. protected int; getTrainFlags();  ; boolean; hasFeatureImportance(). Check if the last time train was called, variable (feature) importance was calculated. boolean; isTrained(). Classifier has already been trained and is ready to predict. void; predict(Mat samples,; Mat results,; Mat probabilities). Default implementation calling. void; predictWithLock(Mat samples,; Mat results,; Mat probabilities). Implement predictWithLock rather than predict to ensure predict is not called while ; training. boolean; supportsAutoUpdate(). Returns true (the default value). boolean; supportsMissingValues(). Tree classifiers in OpenCV support missing values, others do not. boolean; supportsMulticlass(). Returns false (the default value). boolean; supportsProbabilities(). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html:1078,avail,available,1078,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,1,['avail'],['available']
Availability,"ath. static Integer; makeARGB(int a,; int r,; int g,; int b). Make a packed int representation of an ARGB color. static File; makeFileInProject(String... more). Build a file path relative to the current project, and create a File object. static boolean; makeInverseAnnotation(). Make an inverse annotation using the current ImageData and its current selected objects. static boolean; makeInverseAnnotation(ImageData<?> imageData). Make an inverse annotation using the specified ImageData and current selected objects. static boolean; makeInverseAnnotation(ImageData<?> imageData,; Collection<PathObject> pathObjects). Make an annotation, for which the ROI is obtained by subtracting the ROIs of the specified objects from the closest ; common ancestor ROI (or entire image if the closest ancestor is the root). static boolean; makeInverseAnnotation(ImageData<?> imageData,; PathObject pathObject). Make an annotation for the specified ImageData, for which the ROI is obtained by subtracting ; the existing ROI from the ROI of its parent object (or entire image if no suitable parent object is available). static boolean; makeInverseAnnotation(PathObject pathObject). Make an annotation for the current ImageData, for which the ROI is obtained by subtracting ; the existing ROI from the ROI of its parent object (or entire image if no suitable parent object is available). static String; makePathInProject(String... more). Build a file or directory path relative to the current project, and ensure that it exists. static Integer; makeRGB(int r,; int g,; int b). Make a packed int representation of an RGB color. static double; measurement(PathObject pathObject,; String measurementName). Extract the specified measurement from a PathObject. static boolean; mergeAnnotations(Collection<PathObject> annotations). Merge annotations for the current hierarchy. static boolean; mergeAnnotations(PathObjectHierarchy hierarchy,; Collection<PathObject> annotations). Merge the specified annotations to create a ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:23398,avail,available,23398,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['avail'],['available']
Availability,"ath.lib.gui.tools.IconFactory.PathIcons;  ; downsample(double) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set the downsample factor to use with requesting image regions. downsample(double) - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Specify downsample factor (defined in terms of the full resolution image space). downsample(double) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Specify downsample factor. downsample(double) - Method in class qupath.lib.images.writers.TileExporter. Define resolution as a downsample value. downsamples(double...) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify downsamples; this is especially important for 'thick' objects (annotations, TMA cores); because the downsamples define the resolutions at which these will be rendered. downsamples(double...) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify downsample factors to use in the final pyramid. DragDropImportListener - Class in qupath.lib.gui.viewer. Drag and drop support for main QuPath application, which can support a range of different object types (Files, URLs, Strings,..). DragDropImportListener(QuPathGUI) - Constructor for class qupath.lib.gui.viewer.DragDropImportListener. Constructor. DragDropImportListener.DropHandler<T> - Interface in qupath.lib.gui.viewer. Interface to define a new drop handler. DrawingPreferences() - Constructor for class qupath.lib.gui.panes.PreferencePane.DrawingPreferences;  ; dumpMetadata() - Method in class qupath.imagej.images.servers.ImageJServer. Get a String representing the image metadata. dumpMetadata() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer. Retrieve a string representation of the metadata OME-XML. dumpMetadata() - Method in class qupath.lib.images.servers.openslide.OpenslideImageServer. Retrieve a JSON string representation of the properties, as stored as key-value pai",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:271987,down,downsample,271987,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['down'],['downsample']
Availability,"ath.lib.images.servers.ImageServerBuilder. Check whether a URI is supported by this builder. checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.JsonImageServerBuilder;  ; checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; checkMinVersion(String) - Static method in class qupath.lib.scripting.QP. Check whether the current QuPath version is ≥ the specified version. checkpoint() - Method in class qupath.lib.common.Timeit. Create a new checkpoint with a default name. checkpoint(String) - Method in class qupath.lib.common.Timeit. Create a new checkpoint with the specified name. checkpointAndRun(Runnable) - Method in class qupath.lib.common.Timeit. Create a checkpoint with the default name and immediately run the provided runnable. checkpointAndRun(String, Runnable) - Method in class qupath.lib.common.Timeit. Create a checkpoint and immediately run the provided Runnable. checkpointAndRun(String, Runnable, int) - Method in class qupath.lib.common.Timeit. Create a checkpoint and immediately run the provided Runnable nIterations times. checkType(URI) - Static method in class qupath.lib.images.servers.FileFormatInfo. Check the type of an image for a specified URI. checkVersionRange(String, String) - Static method in class qupath.lib.scripting.QP. Check whether the current QuPath version is ≥ the specified minimum version, and < the specified maximum. ChoiceParameter<S> - Class in qupath.lib.plugins.parameters. Parameter that supports a list of choices. choices - Variable in class qupath.lib.plugins.parameters.ChoiceParameter;  ; CIRCULARITY - Enum constant in enum class qupath.lib.analysis.features.ObjectMeasurements.ShapeFeatures. Circularity. CITE - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; classification() - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Set the model type to be OpenCVDnn.ModelType.CLASSIFICATION. CLASSIFICATION - Enum constant i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:99301,checkpoint,checkpointAndRun,99301,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['checkpoint'],['checkpointAndRun']
Availability,"athGUI. Refresh the title bar in the main QuPath window. refreshTitles() - Method in class qupath.lib.gui.viewer.ViewerManager. Request that viewers refresh their titles. region(int, int, int, int) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Define the region to export based on a bounding box. region(ImageRegion) - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Specify the region (in terms of the full resolution image space) for export. region(ImageRegion) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Define the region to export, including the z-slice and time point. region(ImageRegion) - Method in class qupath.lib.images.writers.TileExporter. Define the region to be processed. region(RegionRequest) - Method in class qupath.lib.experimental.pixels.Parameters.Builder. Specify the region to use for processing. region(RegionRequest) - Method in class qupath.lib.images.writers.TileExporter. Define the region to be processed, including downsample. REGION - Enum constant in enum class qupath.lib.objects.classes.PathClassFactory.StandardPathClasses. Deprecated.; Region class. REGION - Static variable in class qupath.lib.objects.classes.PathClass.StandardPathClasses. Region class. RegionFilter - Interface in qupath.lib.gui.viewer. Define the area of an image to which pixel classification should be applied. RegionFilter.StandardRegionFilters - Enum Class in qupath.lib.gui.viewer. Standard classification regions (hopefully all you will ever need). RegionRequest - Class in qupath.lib.regions. Class for defining an image region that can also be used to request these region from an ImageServer. regionToGeometry(ImageRegion) - Static method in class qupath.lib.roi.GeometryTools. Convert an ImageRegion to a rectangular Geometry. registerAlias(Class<? extends T>, String) - Method in class qupath.lib.io.GsonTools.SubTypeAdapterFactory. Register an alias label for a specified subtype. registerBuilder(DnnModelBuil",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:838620,down,downsample,838620,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['down'],['downsample']
Availability,"athImage(ImageServer<BufferedImage> server,; ImagePlus imp,; RegionRequest request); throws IOException; Create a PathImage from an ImagePlus and region.; If imp is null, it is read from the server. Parameters:; server - ; imp - ; request - ; Returns:; Throws:; IOException. convertToIJRoi; public static <T extends PathImage<ImagePlus>> Roi convertToIJRoi(ROI pathROI,; T pathImage); Create an ImageJ Roi from a ROI, suitable for displaying on the ImagePlus of an PathImage<ImagePlus>. Parameters:; pathROI - ; pathImage - ; Returns:. convertToIJRoi; public static <T extends PathImage<ImagePlus>> Roi convertToIJRoi(ROI pathROI,; Calibration cal,; double downsampleFactor); Convert a QuPath ROI to an ImageJ Roi for an image with the specified calibration. Type Parameters:; T - ; Parameters:; pathROI - ; cal - ; downsampleFactor - ; Returns:; See Also:. convertToIJRoi(ROI, double, double, double). convertToROI; public static ROI convertToROI(Roi roi,; Calibration cal,; double downsampleFactor,; ImagePlane plane); Create a ROI from an ImageJ Roi, using the Calibration object of an ImagePlus. Parameters:; roi - ImageJ Roi; cal - calibration object, including original information; downsampleFactor - the downsample factor of the original image; plane - plane defining c, z and t indices; Returns:. getImagePlane; public static ImagePlane getImagePlane(Roi roi,; ImagePlus imp); Get the ImagePlane of an ImageJ Roi, based upon its stored positions. Parameters:; roi - ImageJ roi that may have c, z, t or position properties set.; imp - associated image; if not null, this will be used to convert the Roi's 'position' property, if non-zero; Returns:; the ImagePlane that is the best approximation of this Roi's position. convertToROI; public static <T extends PathImage<? extends ImagePlus>>; ROI convertToROI(Roi roi,; T pathImage); Create a ROI from an ImageJ Roi. Parameters:; roi - ; pathImage - ; Returns:. convertToPolygonROI; public static PolygonROI convertToPolygonROI(PolygonRoi roi,; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:24106,down,downsampleFactor,24106,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,1,['down'],['downsampleFactor']
Availability,"ating Point annotations. CountingDialogCommand(QuPathGUI) - Constructor for class qupath.lib.gui.commands.CountingDialogCommand. Constructor. countMissing() - Method in class qupath.lib.io.UriUpdater. Get a count of the items flagged as missing. countObjectsWithClass(Collection<? extends PathObject>, PathClass, boolean) - Static method in class qupath.lib.objects.PathObjectTools. Count the number of PathObjects in a collection with a specified class or base class. countProperty() - Method in class qupath.lib.gui.actions.InfoMessage. Read only property containing any count associated with the text (may be null). countReplacements() - Method in class qupath.lib.io.UriUpdater. Get a count of the number of replacements for missing items. countsTransformProperty() - Method in class qupath.lib.gui.charts.HistogramChart. Property to control how counts should be transformed before being; shown in the histogram. cpu() - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Request CPU backend and target, if available. create() - Static method in class qupath.lib.gui.SharedThreadPoolManager. Create a new instance. create() - Static method in class qupath.lib.gui.ToolManager. Create a new instance. create(boolean) - Static method in class qupath.lib.gui.tools.WebViews. Create a new WebView. create(int) - Static method in class qupath.lib.analysis.images.ContourTracing.ChannelThreshold. Create a simple channel threshold. create(int, double, double) - Static method in class qupath.lib.analysis.images.ContourTracing.ChannelThreshold. Create a threshold to select values between a minimum and maximum (inclusive). create(Gson, TypeToken<R>) - Method in class qupath.lib.io.GsonTools.SubTypeAdapterFactory;  ; create(Gson, TypeToken<T>) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ObjectClassifierTypeAdapterFactory;  ; create(Gson, TypeToken<T>) - Method in class qupath.opencv.io.OpenCVTypeAdapters.OpenCVTypeAdaptorFactory;  ; create(String, double, boolean, List<Ch",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:152276,avail,available,152276,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"ationException; Create a checkpoint and immediately run the provided Runnable nIterations times.; The purpose of this is to get better insights into the time required to run a self-contained block of code.; ; Note that no checkpoint is made automatically after completion of the final iteration, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; name - base name of the checkpoint to create; the iteration number will be appended if nIterations > 1; runnable - the runnable to run; nIterations - the number of times to run the runnable; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpoint; public Timeit checkpoint(); throws UnsupportedOperationException; Create a new checkpoint with a default name. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpoint; public Timeit checkpoint(String name); throws UnsupportedOperationException; Create a new checkpoint with the specified name. Parameters:; name - name of the checkpoint; if null, a default name will be generated; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. stop; public Timeit stop(); throws UnsupportedOperationException; Stop the Timeit. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit hasn't been started, or has already been stopped. autoUnits; public Timeit autoUnits(). nanoseconds; public Timeit nanoseconds(); Report timings in nanoseconds. Returns:; this instance. milliseconds; public Timeit milliseconds(); Report timings in milliseconds. Returns:; this instance. microseconds; public Timeit microseconds(); Report timings in microseconds. Returns:; this instance. seconds; public Timeit seconds(); Report timings in seconds. Returns:; this instance. minutes; public Timeit minutes(); Report timings in minutes. Returns:; this instance. summarizeCheck",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:6774,checkpoint,checkpoint,6774,javadoc/docs/qupath/lib/common/Timeit.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html,3,['checkpoint'],['checkpoint']
Availability,"available styles as an observable list.; The list is unmodifiable, since any changes should be made via adding/removing files in UserDirectoryManager.getCssStylesPath(). See Also:. availableStylesProperty(). selectedStyle; public static ObjectProperty<QuPathStyleManager.StyleOption> selectedStyleProperty; Get the current selected style. See Also:. selectedStyleProperty(). availableFonts; public static ObservableList<QuPathStyleManager.Fonts> availableFontsProperty; Get a list of available fonts.; The list is unmodifiable, since this is primarily used to overcome issues with the default font on macOS ; by changing the font family. More fine-grained changes can be made via css. See Also:. availableFontsProperty(). font; public static ObjectProperty<QuPathStyleManager.Fonts> fontProperty; Get the current selected font. See Also:. fontProperty(). Constructor Details. QuPathStyleManager; public QuPathStyleManager(). Method Details. updateAvailableStyles; public static void updateAvailableStyles(); Request that the list of available styles is updated.; It makes sense to call this when a new user directory has been set, so that a check for CSS files ; can be performed. installStyles; public static boolean installStyles(Collection<File> list); Handle installing CSS files (which can be used to style QuPath). Parameters:; list - list of css files; Returns:. refresh; public static void refresh(); Refresh the current style.; This should not normally be required, but may be useful during startup to ensure ; that the style is properly set at the appropriate time. isDefaultStyle; public static boolean isDefaultStyle(); Check if the default JavaFX style is used. Returns:; true if the default style is used, false otherwise. availableStylesProperty; public static ObservableList<QuPathStyleManager.StyleOption> availableStylesProperty(); Get the current available styles as an observable list.; The list is unmodifiable, since any changes should be made via adding/removing files in UserDi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html:3683,avail,available,3683,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,1,['avail'],['available']
Availability,"available. requiresTileRegion(String, ImageRegion) - Method in interface qupath.lib.gui.images.stores.TileListener. Check if the listener requires a particular tile. requiresTileRegion(String, ImageRegion) - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; RESET_DETECTION_CLASSIFICATIONS - Variable in class qupath.lib.gui.actions.menus.ClassifyMenuActions.Actions;  ; RESET_METADATA - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions;  ; RESET_PREFERENCES - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.Actions;  ; RESET_SELECTION - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.SelectActions;  ; resetActiveHandle() - Method in class qupath.lib.roi.RoiEditor. Ensure that no handle is active. resetAllSliders() - Method in class qupath.lib.gui.commands.display.BrightnessContrastSliderPane. Reset all sliders to their default values. resetAvailablePathClasses() - Method in class qupath.lib.gui.QuPathGUI. Populate the availablePathClasses with a default list. resetBatchProjectAndImage() - Static method in class qupath.lib.scripting.QP. Reset the Project and ImageData used for batch processing for the current thread. resetClassifications(Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Reset the PathClass for all objects of the specified type in the current hierarchy. resetClassifications(ImageData<?>, Class<? extends PathObject>) - Static method in class qupath.lib.gui.commands.Commands. Select objects that are instances of a specified class, logging an appropriate method in the workflow. resetClassifications(PathObjectHierarchy, Class<? extends PathObject>) - Static method in class qupath.lib.scripting.QP. Reset the PathClass for all objects of the specified type in the specified hierarchy. resetConstrainingObjects() - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler. Reset the constraining objects. resetConstrainingObjects() - Method in class qupath.lib.gu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:860892,avail,availablePathClasses,860892,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['availablePathClasses']
Availability,"awn on the overlay; level - the level from which to request regions; for the highest available resolution, use 0; Throws:; IOException. setColorModel; public void setColorModel(ColorModel colorModel); Optionally set a custom ColorModel.; This makes it possible to display the BufferedImage with a different color model than its ; original model. Parameters:; colorModel - . getColorModel; public ColorModel getColorModel(). Returns:; the custom color model, if any is found. changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> observable,; ImageData<BufferedImage> oldValue,; ImageData<BufferedImage> newValue). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. getRegionMap; public Map<ImageRegion,BufferedImage> getRegionMap(); Get an unmodifiable Map containing image regions to paint on this overlay. Returns:. paintOverlay; public void paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely); Description copied from interface: PathOverlay; Paint the overlay to a graphics object. The graphics object will have a transform applied to it, so the painting should; make use of coordinates in the original image space. Specified by:; paintOverlay in interface PathOverlay; Overrides:; paintOverlay in class AbstractImageOverlay; Parameters:; g2d - Graphics2D object to which drawing should be performed. This should have any transform already applied to it.; imageRegion - The maximum image region that should be shown.; downsampleFactor - The downsample factor at which the overlay will be viewed. There is no need for rescaling according to; this value since it has already been applied to the Graphics2D as part of its AffineTransform, however; it may optionally be needed within the method e.g. to correct line thicknesses.; imageData - the ImageData associated with this overlay. If the overlay is being displayed on a viewer, this is the ImageData o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html:6322,down,downsampleFactor,6322,javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html,1,['down'],['downsampleFactor']
Availability,"ay depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Specified by:; getURIs in interface ImageServer<BufferedImage>; Returns:. createID; protected String createID(); Description copied from class: AbstractImageServer; Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + parameters; ; This will be called on demand whenever AbstractImageServer.getPath() is first required. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. readRegion; public BufferedImage readRegion(RegionRequest request); Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Specified by:; readRegion in interface ImageServer<BufferedImage>; Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; See Also:. Image",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServer.html:5124,down,downsample,5124,javadoc/docs/qupath/imagej/images/servers/ImageJServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/images/servers/ImageJServer.html,1,['down'],['downsample']
Availability,"ay.ImageDisplay. Get the value of ImageDisplay.useGrayscaleLutProperty(). useInstanceLabels() - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Request that unique labels are used for all objects, rather than classifications. useInstanceLabels(boolean) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Optionally request that unique labels are used for all objects, rather than classifications. useInvertedBackground() - Method in class qupath.lib.display.ImageDisplay. Get the value of ImageDisplay.useInvertedBackgroundProperty(). useInvertedBackgroundProperty() - Method in class qupath.lib.display.ImageDisplay. Property that specifies whether the background should be inverted (i.e. useLogWriters() - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the output and error writers to append to the default logger. useLogWriters(Logger) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the output and error writers to append to the specified logger. useMicrons() - Method in class qupath.lib.gui.viewer.GridLines. Query whether to use calibrated units when calculating coordinates for any counting grid. useMultipoint - Variable in class qupath.lib.gui.panes.PreferencePane.DrawingPreferences;  ; useOverlays - Variable in class qupath.process.gui.WandToolEventHandler.WandPreferences;  ; useParallelization - Variable in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension.BioFormatsPreferences;  ; usePixelSnappingProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. If true, pixels should be snapped to integer coordinates when using the drawing tools. UserDirectoryManager - Class in qupath.lib.gui. Helper class for managing a user directory, and associated subdirectories. userDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Property representing the user directory. useROIBounds(boolean) - Method in class qupath.lib.images.writers.TileExporter. Op",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1073530,error,error,1073530,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['error'],['error']
Availability,"based upon userDirectoryProperty and DIR_COLORMAPS. Returns:. getUserPath; public Path getUserPath(); Get the user path where additional files may be stored. Returns:. getRelativePathOrNull; public Path getRelativePathOrNull(String other). setUserPath; public void setUserPath(Path path); throws IllegalArgumentException; Set the user path where additional files may be stored.; Note that the specified path must exist and must represent a directory. Parameters:; path - ; Throws:; IllegalArgumentException - if the path is not null, but does not represent a valid, existing directory. getExtensionsPath; public Path getExtensionsPath(); Get the path to where extensions should be stored. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getCssStylesPath; public Path getCssStylesPath(); Get the path to where user directory for storing CSS styles. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null; Since:; v0.4.0. getLogDirectoryPath; public Path getLogDirectoryPath(); Get the path to where log files should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getLocalizationDirectoryPath; public Path getLocalizationDirectoryPath(); Get the path to where localization property files should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getColormapsDirectoryPath; public Path getColormapsDirectoryPath(); Get the path to where colormaps should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getScriptsDirectoryPath; public Path getScriptsDirectoryPath(); Get the path to where shared script files should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html:9659,avail,available,9659,javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,4,['avail'],['available']
Availability,"be the primary selected object, optionally retaining the ; existing selected objects. setSelectedObjects(Collection<? extends PathObject>, PathObject) - Method in class qupath.lib.objects.hierarchy.events.PathObjectSelectionModel. Specify a collection of objects to be selected, and which among them should be the primary. setSelectedTool(PathTool) - Method in class qupath.lib.gui.ToolManager. Programmatically select the active PathTool. setServiceLoader(ServiceLoader<ImageServerBuilder>) - Static method in class qupath.lib.images.servers.ImageServerProvider. Replace the default service loader with another. setShowAnnotations(boolean) - Method in class qupath.lib.gui.viewer.OverlayOptions. Show the annotations on the image. setShowChannel(ChannelDisplayInfo) - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Request that the specified channel is shown. setShowConnections(boolean) - Method in class qupath.lib.gui.viewer.OverlayOptions. Show connections between objects, if available. setShowDetections(boolean) - Method in class qupath.lib.gui.viewer.OverlayOptions. Show the objects as an overlay on the image. setShowGrid(boolean) - Method in class qupath.lib.gui.viewer.OverlayOptions. Set whether a counting grid should be shown in viewers. setShowLocation(boolean) - Method in class qupath.lib.gui.viewer.ViewerPlusDisplayOptions. Set the value of ViewerPlusDisplayOptions.showLocationProperty(). setShowNames(boolean) - Method in class qupath.lib.gui.viewer.OverlayOptions. Show the object names on the image. setShowOverview(boolean) - Method in class qupath.lib.gui.viewer.ViewerPlusDisplayOptions. Set the value of ViewerPlusDisplayOptions.showOverviewProperty(). setShowPixelClassification(boolean) - Method in class qupath.lib.gui.viewer.OverlayOptions. Show pixel classification overlays. setShowScalebar(boolean) - Method in class qupath.lib.gui.viewer.ViewerPlusDisplayOptions. Set the value of ViewerPlusDisplayOptions.showScalebarProperty(). s",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:946974,avail,available,946974,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"ber>. java.lang.Object; qupath.lib.plugins.parameters.NumericParameter<S>. Type Parameters:; S - . All Implemented Interfaces:; Serializable, Parameter<S>. Direct Known Subclasses:; DoubleParameter, IntParameter. public abstract class NumericParameter<S extends Number>; extends Object; Abstract parameter to represent a numeric value. Author:; Pete Bankhead; See Also:. DoubleParameter; IntParameter; Serialized Form. Field Summary; Fields. Modifier and Type; Field; Description; protected S; lastValue;  . Method Summary. All MethodsInstance MethodsAbstract MethodsConcrete Methods. Modifier and Type; Method; Description; S; getDefaultValue(). Get a default value to use if the Parameter has not been otherwise set. String; getHelpText(). Get a description of the meaning of the Parameter; may be displayed e.g. double; getLowerBound(). Retrieve the lower bound. String; getPrompt(). Get some prompt text that may be displayed to a user. String; getUnit(). Get the unit to display for this parameter (may be null if no unit is available). double; getUpperBound(). Retrieve the upper bound. S; getValue(). Get the current set value (may be null). S; getValueOrDefault(). Get the current set value, or any default if no value has been set. boolean; hasHelpText(). Query whether getHelpText() returns a meaningful String (as opposed to null). boolean; hasLowerAndUpperBounds(). Returns true if this parameter has both lower and upper bounds constraining valid values. boolean; hasLowerBound(). Returns true if the parameter has a valid lower bound. boolean; hasUpperBound(). Returns true if the parameter has a valid upper bound. boolean; isHidden(). Test is the 'hidden' flag is set for the parameter. boolean; isUnbounded(). Returns true if this neither a lower nor an upper bound constraining valid values. boolean; isValidInput(S value). Numbers are considered valid if they are not NaN. void; resetValue(). Set last value to null (so default can be used). abstract boolean; setDoubleLastValue(do",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html:1436,avail,available,1436,javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html,1,['avail'],['available']
Availability,"bject or null if no object could be created (e.g. the ImageJ roi is null or incompatible); Since:; v0.4.0; See Also:. convertToPathObject(Roi, double, Function, ImagePlus). convertToPathObject; public static PathObject convertToPathObject(Roi roi,; double downsampleFactor,; Function<ROI,PathObject> creator,; ImagePlus imp); Create a PathObject for a specific ImageJ Roi, using an ImagePlus to help set properties. Parameters:; roi - the ImageJ ROI; downsampleFactor - the downsample factor used for rescaling (or 1.0 for no rescaling); creator - a function; imp - the ImagePlus associated with this Roi; it is used to determine the xOrigin, yOrigin and image plane; Returns:; a PathObject or null if no object could be created (e.g. the ImageJ roi is null or incompatible); Since:; v0.4.0; See Also:. convertToPathObject(Roi, double, double, double, Function, ImagePlane). convertToAnnotation; public static PathObject convertToAnnotation(Roi roi,; double xOrigin,; double yOrigin,; double downsampleFactor,; ImagePlane plane); Create an annotation object for a specific ImageJ Roi, using an ImagePlus to help set properties. Parameters:; roi - the ImageJ ROI; xOrigin - the x-origin to translate the Roi; should be Calibration.xOrigin if available, or 0 otherwise; yOrigin - the y-origin to translate the Roi; should be Calibration.yOrigin if available, or 0 otherwise; downsampleFactor - the downsample factor used for rescaling (or 1.0 for no rescaling); plane - the specific plane to use for the QuPath ROI; if null, the ImageJ Roi position properties will be used instead, where possible; Returns:; a PathObject or null if no object could be created (e.g. the ImageJ roi is null or incompatible); Since:; v0.4.0; See Also:. convertToPathObject(ImagePlus, ImageServer, Roi, double, Function, ImagePlane); convertToAnnotation(Roi, double, ImagePlus). convertToDetection; public static PathObject convertToDetection(Roi roi,; double xOrigin,; double yOrigin,; double downsampleFactor,; ImagePlane ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:13510,down,downsampleFactor,13510,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,1,['down'],['downsampleFactor']
Availability,"bject; An informative message that should be shown to the user. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<Number>; count. Read only property containing any count associated with the text (may be null). ReadOnlyStringProperty; text. Read only property containing the message text. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; InfoMessage.MessageType. The type of message, which can be used for styling. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<Number>; countProperty(). Read only property containing any count associated with the text (may be null). static InfoMessage; error(String text). Create an error message with static text. static InfoMessage; error(String text,; int count). Create an error message with static text and a count. static InfoMessage; error(ObservableNumberValue count). Create a error message to show a count of errors. static InfoMessage; error(ObservableValue<String> text). Create an error message. static InfoMessage; error(ObservableValue<String> text,; ObservableNumberValue count). Create an error message with a count. int; getCount(). Counts associated with the message, or -1 if the count is null. InfoMessage.MessageType; getMessageType(). Type of the message. String; getText(). Text of the message. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(String text,; int count). Create an information message with static text and a count. static InfoMessage; info(ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; info(ObservableValue<String> text). Create an information message. static InfoMessage; info(ObservableValue<String> text,; ObservableNumberValue count). Create an information message with a count. ReadOnlyStringProperty; textProperty(). Read only prop",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:1451,error,error,1451,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,2,['error'],"['error', 'errors']"
Availability,"bjectClassifier.classifyObjects(ImageData, boolean); ObjectClassifier.getCompatibleObjects(ImageData). tryToClassify; protected boolean tryToClassify(ClassificationModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier). getMissingFeatures; public Map<String,Integer> getMissingFeatures(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects); Description copied from interface: ObjectClassifier; Check for missing features, returning the names and number of input objects missing the specified features.; This is useful as a warning that the input for the classifier may not be valid.; Default implementation returns an empty map; however, implementations should attempt to provide a meaningful ; output if possible. Features that are not missing should not be included in the output. Specified by:; getMissingFeatures in interface ObjectClassifier<BufferedImage>; Parameters:; imageData - image containing the objects to test; pathObjects - objects to test for missing features; if not available, ObjectClassifier.getCompatibleObjects(ImageData) will be called.; Returns:; a map of feature names and the number of objects missing the corresponding features. getURIs; public Collection<URI> getURIs(); throws IOException; Description copied from interface: UriResource; Get all the URIs required for this resource. This is often an empty or singleton list. Specified by:; getURIs in interface UriResource; Returns:; the required URIs; Throws:; IOException. updateURIs; public boolean updateURIs(Map<URI,URI> replacements); throws IOException; Description copied from interface: UriResource; Update the specified URIs.; ; Warning! This should be used sparingly, particularly for objects that are otherwise immutable.; It is intended only for correcting paths that have become invalid (e.g. because of files being relocated ; or transferred between computers) before first use of the object.; It should",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html:5445,avail,available,5445,javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVModelObjectClassifier.html,1,['avail'],['available']
Availability,"bjects(Collection<T> pathObjects). Get a list of objects with point ROIs from a collection of objects. static Set<PathClass>; getRepresentedPathClasses(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Get a set of the represented path classes, i.e. static ROI; getROI(PathObject pathObject,; boolean preferNucleus). Get the ROI for a PathObject, with a preference for the nucleus ROI of a cell. static String; getSuitableName(Class<? extends PathObject> cls,; boolean makePlural). Get a user-friendly name for a specific type of PathObject, based on its Java class. static Collection<? extends PathObject>; getSupportedObjects(Collection<? extends PathObject> availableObjects,; Collection<Class<? extends PathObject>> supportedClasses). From a collection of available objects, extract those that are instances of specified supported classes. static TMACoreObject; getTMACoreForPixel(TMAGrid tmaGrid,; double x,; double y). Get the TMA core that contains the specified x & y coordinate, or null if no core is available for the coordinates give. static List<TMACoreObject>; getTMACoreObjects(PathObjectHierarchy hierarchy,; boolean includeMissingCores). Extract a list of TMA cores from an object hierarchy. static boolean; hasPointROI(PathObject pathObject). Returns true if a PathObject has a Point ROI. static boolean; hierarchyContainsObject(PathObjectHierarchy hierarchy,; PathObject pathObject). Check if a hierarchy contains a specified PathObject. static boolean; isAncestor(PathObject pathObject,; PathObject possibleAncestor). Query if one object is the ancestor of another. static void; lockObjects(PathObjectHierarchy hierarchy,; Collection<? extends PathObject> pathObjects). Set specified objects to be 'locked'. static void; lockSelectedObjects(PathObjectHierarchy hierarchy). Set selected objects to be 'locked', firing an update event if the status of any object is changed. static Map<PathObject,PathObject>; matchByID(Collection<? extends PathObject> sourceObjects,;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:7655,avail,available,7655,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['avail'],['available']
Availability,"ble, boolean) - Static method in class qupath.lib.analysis.algorithms.Watershed. Apply a 2D watershed transform, constraining region growing using an intensity threshold. DOWNLOAD - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; downsample(double) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set the downsample factor to use with requesting image regions. downsample(double) - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Specify downsample factor (defined in terms of the full resolution image space). downsample(double) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Specify downsample factor. downsample(double) - Method in class qupath.lib.images.writers.TileExporter. Define resolution as a downsample value. downsamples(double...) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify downsamples; this is especially important for 'thick' objects (annotations, TMA cores); because the downsamples define the resolutions at which these will be rendered. downsamples(double...) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify downsample factors to use in the final pyramid. DragDropImportListener - Class in qupath.lib.gui.viewer. Drag and drop support for main QuPath application, which can support a range of different object types (Files, URLs, Strings,..). DragDropImportListener(QuPathGUI) - Constructor for class qupath.lib.gui.viewer.DragDropImportListener. Constructor. DragDropImportListener.DropHandler<T> - Interface in qupath.lib.gui.viewer. Interface to define a new drop handler. DrawingPreferences() - Constructor for class qupath.lib.gui.panes.PreferencePane.DrawingPreferences;  ; dumpMetadata() - Method in class qupath.imagej.images.servers.ImageJServer. Get a String representing the image metadata. dumpMetadata() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer. Retrieve a string r",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:271714,down,downsamples,271714,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,2,['down'],['downsamples']
Availability,"ble downsample). Paint the specified tissue microarray grid. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. paintSpecifiedObjects; public static void paintSpecifiedObjects(Graphics2D g2d,; Collection<? extends PathObject> pathObjects,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample); Paint the specified objects. Parameters:; g2d - the graphics object on which the objects should be painted; pathObjects - the objects to paint; overlayOptions - the overlay options defining how objects should be painted; selectionModel - the selection model used to determine the selection status of each object; downsample - the downsample factor; this should already be applied to the graphics object, but is needed to determine some line thicknesses. paintTMAGrid; public static void paintTMAGrid(Graphics2D g2d,; TMAGrid tmaGrid,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample); Paint the specified tissue microarray grid. Parameters:; g2d - the graphics object on which the objects should be painted; tmaGrid - the TMA grid; overlayOptions - the overlay options defining how objects should be painted; selectionModel - the selection model used to determine the selection status of each object; downsample - the downsample factor; this should already be applied to the graphics object, but is needed to determine some line thicknesses. paintObject; public static boolean paintObject(PathObject pathObject,; Graphics2D g,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample); Paint an object (or, more precisely, its ROI).; ; This is subject to the OverlayOptions, and therefore may not actually end up painting anything; (if the settings are such that objects of the class provided are not to be displayed). Parameters:; pathObject - ; g - ; overlayOptions - ; selectionMo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html:3239,down,downsample,3239,javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html,1,['down'],['downsample']
Availability,blic ScriptParameters.Builder setDefaultImports(Collection<Class<?>> imports). setDefaultStaticImports; public ScriptParameters.Builder setDefaultStaticImports(Collection<Class<?>> imports). setFile; public ScriptParameters.Builder setFile(File file). setScript; public ScriptParameters.Builder setScript(String script). setSystemWriters; public ScriptParameters.Builder setSystemWriters(); Set the output and error writers to use System.out and System.err. Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(org.slf4j.Logger logger); Set the output and error writers to append to the specified logger. Parameters:; logger - ; Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(); Set the output and error writers to append to the default logger. Returns:. setWriter; public ScriptParameters.Builder setWriter(Writer writer); Set the main output writer. Parameters:; writer - ; Returns:. setErrorWriter; public ScriptParameters.Builder setErrorWriter(Writer writer); Set the main error writer. Parameters:; writer - ; Returns:. setBatchSize; public ScriptParameters.Builder setBatchSize(int batch); Set the batch size for batch processing (default is 1). Parameters:; batch - ; Returns:. setBatchIndex; public ScriptParameters.Builder setBatchIndex(int ind); Set the current image index for batch processing (default is 0). Parameters:; ind - ; Returns:. setBatchSaveResult; public ScriptParameters.Builder setBatchSaveResult(boolean doSave); Specify whether the script that is running should save results or not. Parameters:; doSave - ; Returns:. setArgs; public ScriptParameters.Builder setArgs(String[] args); Set optional string args to pass to the script. Parameters:; args - ; Returns:. setProject; public ScriptParameters.Builder setProject(Project<?> project); Set the current project for the script. Parameters:; project - ; Returns:. setImageData; public ScriptParameters.Builder setImageData(ImageData<?> imageData); Set the current image data for th,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html:3795,error,error,3795,javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,1,['error'],['error']
Availability,"boolean) - Method in class qupath.lib.gui.viewer.QuPathViewer. Convert x and y coordinates from the component space to the image space. componentPointToImagePoint(Point2D, Point2D, boolean) - Method in class qupath.lib.gui.viewer.QuPathViewer. Convert a coordinate from the viewer into the corresponding pixel coordinate in the full-resolution image - optionally constraining it to any server bounds. compress(String) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Compresses the specified text by removing extra space, according to the syntax. compression(OMEPyramidWriter.CompressionType) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Request the output compression type. compressSourceAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; computeAboveThresholdCounts(WritableRaster, int, double, WritableRaster) - Static method in class qupath.lib.awt.common.BufferedImageTools. Count the number of above-threshold pixels in a specified band of a raster, with optional mask. computeAboveThresholdCounts(WritableRaster, int, double, WritableRaster, Rectangle) - Static method in class qupath.lib.awt.common.BufferedImageTools. Count the number of above-threshold pixels in a specified band of a raster, with optional mask and/or bounding rectangle. computeAngle(StainVector, StainVector) - Static method in class qupath.lib.color.StainVector. Calculate the angle between two stain vectors, in degrees. computeArgMaxHistogram(WritableRaster, long[], WritableRaster) - Static method in class qupath.lib.awt.common.BufferedImageTools. Create a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion. computeArgMaxHistogram(WritableRaster, long[], WritableRaster, Rectangle) - Static method in class qupath.lib.awt.common.BufferedImageTools. Create a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion, ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:129315,mask,mask,129315,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['mask'],['mask']
Availability,"bration, readBufferedImage, readRegion, readRegion. Constructor Details. RearrangeRGBImageServer; protected RearrangeRGBImageServer(ImageServer<BufferedImage> server,; String order). Method Details. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Specified by:; readRegion in interface ImageServer<BufferedImage>; Overrides:; readRegion in class TransformingImageServer<BufferedImage>; Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; Throws:; IOException; See Also:. ImageServer.readRegion(double, int, int, int, int, int, int); ImageServer.readRegion(double, int, int, int, int); ImageServer.readBufferedImage(RegionRequest). getServerType; public String getServerType(); Description copied from interface: ImageServer; A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Returns:. createServerBuilder;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RearrangeRGBImageServer.html:3828,down,downsampling,3828,javadoc/docs/qupath/lib/images/servers/RearrangeRGBImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RearrangeRGBImageServer.html,1,['down'],['downsampling']
Availability,"c BooleanProperty; showPointHullsProperty(). Show the convex hull for point annotations within the viewer. static BooleanProperty; showStartupMessageProperty(). Show a startup message when QuPath is launched. static BooleanProperty; showTMAOptionsProperty(). Flag to indicate that the TMA menu should be shown to the user - only relevant when working with Tissue Microarrays. static BooleanProperty; showToolBarBadgesProperty(). Show badges on the toolbar, e.g. static BooleanProperty; skipMissingCoresProperty(). Skip ('jump over') missing cores when navigating through TMA grids. static StringProperty; startupScriptProperty(). Path to a startup script that should be run immediately after QuPath's launch. static StringProperty; tableDelimiterProperty(). Delimiter to use when exporting tables. static DoubleProperty; tileCachePercentageProperty(). Requested percentage of available memory to use for tile caching. static DoubleProperty; tmaExportDownsampleProperty(). Default downsample factor to use when exporting TMA cores. static BooleanProperty; useCalibratedLocationStringProperty(). Show the cursor location on a viewer in calibrated units, rather than pixels. static BooleanProperty; usePixelSnappingProperty(). If true, pixels should be snapped to integer coordinates when using the drawing tools. static BooleanProperty; useRotateGesturesProperty(). Support rotate gestures for touchscreens and trackpads. static ObjectProperty<String>; userPathProperty(). A path where additional files may be stored, such as extensions and log files. static BooleanProperty; useScrollGesturesProperty(). Support scroll gestures for touchscreens and trackpads. static BooleanProperty; useSelectedColorProperty(). Use a specified color for highlighting selected objects in the viewer. static BooleanProperty; useSystemMenubarProperty(). Deprecated. static BooleanProperty; useTileBrushProperty(). Request that the brush tool automatically uses any available tiles, rather than creating 'circles' as norma",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:22191,down,downsample,22191,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['down'],['downsample']
Availability,"c Collection<? extends ROI>; computeTiledROIs(ROI parentROI,; ImmutableDimension sizePreferred,; ImmutableDimension sizeMax,; boolean fixedSize,; int overlap). Create a collection of tiled ROIs corresponding to a specified parentROI if it is larger than sizeMax, with optional overlaps. static ROI; createRandomRectangle(ImageRegion mask,; double width,; double height). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. static ROI; createRandomRectangle(ImageRegion mask,; double width,; double height,; Random random). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. static ROI; createRandomRectangle(ROI mask,; double width,; double height). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI. static ROI; createRandomRectangle(ROI mask,; double width,; double height,; int maxAttempts,; boolean permitErosion,; Random random). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI, ; using a specified maximum number of attempts. static ROI; difference(ROI roi1,; ROI roi2). Compute the difference between two ROIs. static ROI; fillHoles(ROI roi). Fill the holes of an Area ROI, or return the ROI unchanged if it contains no holes. static Area; getArea(ROI roi). Get an Area object representing a ROI. static double; getBoundaryDistance(ROI roi1,; ROI roi2). Get the Euclidean distance between the boundaries of two ROIs. static double; getBoundaryDistance(ROI roi1,; ROI roi2,; double pixelWidth,; double pixelHeight). Get the calibrated Euclidean distance between the boundaries of two ROIs using specified pixel sizes. static double; getCentroidDistance(ROI roi1,; ROI roi2). Get the Euclidean distance between the centroids of two ROIs. static double; getCentroidDistance(ROI roi1,; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:2356,mask,mask,2356,javadoc/docs/qupath/lib/roi/RoiTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html,1,['mask'],['mask']
Availability,"c method in class qupath.lib.display.settings.DisplaySettingUtils. Check if the settings are compatible with the display. setTitleFromObject(PathImage<ImagePlus>, PathObject) - Static method in class qupath.imagej.tools.IJTools. Set the name of an image based on a PathObject. setTMAEntriesFromImageData(ImageData<BufferedImage>) - Method in class qupath.lib.gui.tma.TMASummaryViewer. Deprecated.; Set the TMA entries from the TMACoreObjects of a specific ImageData. setTMAGrid(TMAGrid) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Set the tma grid for this hierarchy. setToExpandGridPaneHeight(Node...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Set constraints and max width values (where possible) so that the specified nodes ; fill all available vertical space in a GridPane. setToExpandGridPaneWidth(Node...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Set constraints and max width values (where possible) so that the specified nodes ; fill all available horizontal space in a GridPane. setToolSwitchingEnabled(boolean) - Method in class qupath.lib.gui.ToolManager. Toggle whether the user is permitted to switch to a new active PathTool. setTooltipFunction(Function<Double, String>) - Method in class qupath.lib.gui.ColorMapCanvas. Set the function that will take a value between 0 and 255 (from the color map) and output a displayable string. setTPosition(int) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the requested time point to be visible. setTrace() - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level to LogLevel.TRACE. setupTarget(Node) - Method in class qupath.lib.gui.viewer.DragDropImportListener. Prepare a target node to accept drag and drop events. setupTarget(Scene) - Method in class qupath.lib.gui.viewer.DragDropImportListener. Prepare a target scene to accept drag and drop events. setUseCuda(boolean) - Static method in class qupath.opencv.dnn.DnnTool",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:952546,avail,available,952546,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"c method in class qupath.opencv.tools.GroovyCV. Calculate the sum of all elements in a Mat, ignoring NaNs. sum(Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Get the sum of an image, across all pixels (regardless of channels), ignoring NaNs. SUM - Enum constant in enum class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapType. No normalization; maps provide raw object counts in a defined radius. sumFilter(Mat, int) - Static method in class qupath.opencv.tools.OpenCVTools. Apply a circular 2D sum filter to all channels of an image, with symmetric boundary padding. sumFilter(Mat, int, int) - Static method in class qupath.opencv.tools.OpenCVTools. Apply a circular 2D sum filter to all channels of an image. summarize(Net, int, int, int) - Static method in class qupath.opencv.dnn.DnnTools. Create a (multiline) summary String for a Net, given the specified image input dimensions. summarizeCheckpoints() - Method in class qupath.lib.common.Timeit. Request that checkpoints are summarized in the Timeit.toString() method. summarizeCheckpoints(boolean) - Method in class qupath.lib.common.Timeit. Optionally request that checkpoints are summarized in the Timeit.toString() method. SummaryMeasurementTableCommand - Class in qupath.lib.gui.commands. Show a summary table for an object of a particular type (annotation, detection, TMA core...). SummaryMeasurementTableCommand(QuPathGUI) - Constructor for class qupath.lib.gui.commands.SummaryMeasurementTableCommand. Command to show a summary measurement table, for PathObjects of a specified type (e.g. supports2D() - Method in enum class qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature. Returns true if the feature can be computed for 2D images. supports3D() - Method in enum class qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature. Returns true if the feature can be computed for 3D images (z-stacks). supportsAutoUpdate() - Method in class qupath.opencv.ml.OpenCVClassifiers.BoostClassifier. Returns true (the ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1003715,checkpoint,checkpoints,1003715,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['checkpoint'],['checkpoints']
Availability,"ce and time point. static RegionRequest; createInstance(String path,; double downsample,; int x,; int y,; int width,; int height,; ImagePlane plane). Create a request for a region specified in terms of its bounding box and ImagePlane. static RegionRequest; createInstance(String path,; double downsample,; Collection<? extends ROI> rois). Create a request that contains the pixels of the specified ROIs. static RegionRequest; createInstance(String path,; double downsample,; ImageRegion region). Create a request corresponding to a specified ImageRegion. static RegionRequest; createInstance(String path,; double downsample,; ROI roi). Create a request that contains the pixels of the specified ROI. static RegionRequest; createInstance(String path,; RegionRequest request). Create a request that matches another request but with a different path. static RegionRequest; createInstance(ImageServer<?> server). Create a request for the full width and height of an ImageServer, for the default plane (first z-slice, time point) ; and first resolution level downsample (usually 1, but not always). static RegionRequest; createInstance(ImageServer<?> server,; double downsample). Create a request for the full width and height of an ImageServer, for the default plane (first z-slice, time point). boolean; equals(Object obj);  ; double; getDownsample(). Get the requested downsample factor, defining the resolution at which pixels should be returned. String; getPath(). Get the requested ImageServer path, used as an identifier. int; hashCode();  ; RegionRequest; intersect2D(int x,; int y,; int width,; int height). Intersect to the specified 2D region. RegionRequest; intersect2D(ImageRegion region). Intersect to the specified 2D region, ignoring z and t. boolean; overlapsRequest(RegionRequest request). Returns true if the region specified by this request overlaps with that of another request. RegionRequest; pad2D(int xPad,; int yPad). Add symmetric padding to the x and y dimensions of a request. R",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html:2615,down,downsample,2615,javadoc/docs/qupath/lib/regions/RegionRequest.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html,1,['down'],['downsample']
Availability,"ce). trackedMemory; public static String trackedMemory(); Get a brief, one-line report on tracked memory use, based on JavaCPP's Pointer class.; This is suitable for logging if required. Returns:; See Also:. physicalMemory(); memoryReport(CharSequence). memoryReport; public static String memoryReport(CharSequence delimiter); Create a brief report on memory use, based on JavaCPP's Pointer class. Parameters:; delimiter - delimiter to use between elements of the report, e.g. "", "" or ""\n""; Returns:; See Also:. trackedMemory(); physicalMemory(). findMaxima; public static Collection<OpenCVTools.IndexedPixel> findMaxima(Mat mat,; Mat mask); Find maxima within an image. Parameters:; mat - image containing maxima; must be 2D and single-channel; mask - optional mask; Returns:. getMaskedPixels; public static List<OpenCVTools.IndexedPixel> getMaskedPixels(Mat mat,; Mat mask); Extract all the masked pixels within an image. Parameters:; mat - input image; must be single-channel; mask - mask of the same size as mat; Returns:; list of pixels, including their indices and values. extractMaskedFloats; public static float[] extractMaskedFloats(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pixels should be extracted; mask - the mask to apply to the input; channel - the channel index (zero-based) to consider; Returns:; a float array containing the values of the input filtered by the mask; Throws:; IllegalArgumentException - when the input and the mask don't have the same dimensions. extractMaskedDoubles; public static double[] extractMaskedDoubles(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified ch",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:44003,mask,mask,44003,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html,2,['mask'],['mask']
Availability,"ce); y - y-coordinate in the component space (not image space); Returns:; a String to display representing the object classification. getImageObjectClassificationString; public String getImageObjectClassificationString(double x,; double y); Get a string representing the object classification x & y location in the viewer component,; or an empty String if no object is found. Parameters:; x - x-coordinate in the image space (not the component/viewer space); y - y-coordinate in the image space (not the component/viewer space); Returns:; a String to display representing the object classification. getFullLocationString; protected String getFullLocationString(boolean useCalibratedUnits); Get a string to summarize the pixel found below the most recent known mouse location, ; or """" if the mouse is outside this viewer. Parameters:; useCalibratedUnits - If true, microns will be used rather than pixels (if known).; Returns:. getHierarchy; public PathObjectHierarchy getHierarchy(); Get the object hierarchy for the current image data, or null if no image data is available. Returns:. addViewerListener; public void addViewerListener(QuPathViewerListener listener); Add a viewer listener. Parameters:; listener - . removeViewerListener; public void removeViewerListener(QuPathViewerListener listener); Remove a viewer listener. Parameters:; listener - . setCenterPixelLocation; public void setCenterPixelLocation(double x,; double y); Set the image pixel to display in the center of the viewer (using image pixel coordinates at the full-resolution). Parameters:; x - ; y - . centerROI; public void centerROI(ROI roi); Center the specified ROI in the viewer. Parameters:; roi - . updateAffineTransform; protected void updateAffineTransform(). setRotation; public void setRotation(double theta); Set the rotation; angle in radians. Parameters:; theta - . isRotated; public boolean isRotated(); Returns true if viewer.getRotation() != 0. Returns:; isRotated. getRotation; public double getRotation(); Ge",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:34033,avail,available,34033,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,1,['avail'],['available']
Availability,"charts.Charts.ScatterChartBuilder;  ; markerOpacity(double) - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder. Specify the marker opacity. markerOpacity(double) - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder. Specify the marker opacity. markerOpacity(double) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Specify the marker opacity. MASK_ALPHA - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the alpha component from a packed ARGB int value. MASK_BLUE - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the blue component from a packed (A)RGB int value. MASK_GREEN - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the green component from a packed (A)RGB int value. MASK_RED - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the red component from a packed (A)RGB int value. maskFunction(MaskSupplier<S, T>) - Method in class qupath.lib.experimental.pixels.Parameters.Builder. Function used to lazily create a mask corresponding to the image for a specified ROI. maskImageNames - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; maskImageNamesProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request that image names are hidden within the user interface. maskObject(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. maskObjectAndSplit(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. maskSupplier(MaskSupplier<S, T>) - Method in class qupath.lib.experimental.pixels.Pi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:672507,mask,maskFunction,672507,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['mask'],['maskFunction']
Availability,"charts.HistogramChart. Get the histogram display mode. getDisplayText() - Method in interface qupath.lib.scripting.languages.AutoCompletions.Completion. Get the text that should be displayed for this completion. getDocsUrl() - Static method in class qupath.lib.gui.Urls. Get the base URL for the QuPath documentation (independent of version). getDouble(int) - Method in interface qupath.lib.analysis.stats.ArrayWrappers.ArrayWrapper. Extract one entry from the array, converting to double as necessary. getDoubleParameterValue(String) - Method in class qupath.lib.plugins.parameters.ParameterList. Get a double parameter value (or its default) for the specified key. getDoubleValues(String) - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; getDoubleValues(String) - Method in interface qupath.lib.gui.measure.PathTableData. Get all double values for all items. getDownsample() - Method in class qupath.lib.gui.commands.MiniViewers.MiniViewerManager. Get the downsample used within the mini viewers. getDownsample() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel. Get the downsample factor for this level. getDownsample() - Method in class qupath.lib.images.servers.TileRequest. Get the downsample value for this tile. getDownsample() - Method in class qupath.lib.regions.RegionRequest. Get the requested downsample factor, defining the resolution at which pixels should be returned. getDownsampleFactor() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the current downsample factor. getDownsampleFactor() - Method in interface qupath.lib.images.PathImage. Get the downsample factor originally used when obtaining the image from an ImageServer; will be 1 if the image is full-resolution. getDownsampleFactor(ImageServer<?>, double) - Static method in class qupath.lib.images.servers.ServerTools. Calculate a downsample factor for a server given a preferred pixel size. getDownsampleForLevel(int) - Method in class qupath.lib.i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:385627,down,downsample,385627,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['down'],['downsample']
Availability,"checkpoint with the default name and immediately run the provided runnable. Timeit; checkpointAndRun(String name,; Runnable runnable). Create a checkpoint and immediately run the provided Runnable. Timeit; checkpointAndRun(String name,; Runnable runnable,; int nIterations). Create a checkpoint and immediately run the provided Runnable nIterations times. List<Timeit.Checkpoint>; getCheckpoints(). Get an list of all the checkpoints. int; getMaxDecimalPlaces(). Get the maximum number of decimal places when reporting timings. static void; main(String[] args);  ; Timeit; maxDecimalPlaces(int maxDP). Set the maximum number of decimal places when reporting timings ; using seconds or minutes. Timeit; microseconds(). Report timings in microseconds. Timeit; milliseconds(). Report timings in milliseconds. Timeit; minutes(). Report timings in minutes. Timeit; nanoseconds(). Report timings in nanoseconds. Timeit; seconds(). Report timings in seconds. Timeit; start(). Start the Timeit and create a checkpoint with the default name. Timeit; start(String name). Start the Timeit and create a checkpoint with the specified name. Timeit; stop(). Stop the Timeit. Timeit; summarizeCheckpoints(). Request that checkpoints are summarized in the toString() method. Timeit; summarizeCheckpoints(boolean summarize). Optionally request that checkpoints are summarized in the toString() method. String; toString(). Returns a snapshot string representation of the Timeit's status. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. Timeit; public Timeit(). Method Details. start; public Timeit start(); throws UnsupportedOperationException; Start the Timeit and create a checkpoint with the default name.; ; Note that calling this method is not essential, because the Timeit will automatically ; be started when the first checkpoint is created. Returns:; this instance; Throws:; UnsupportedOperationException - if",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:3070,checkpoint,checkpoint,3070,javadoc/docs/qupath/lib/common/Timeit.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html,1,['checkpoint'],['checkpoint']
Availability,"cific ImageJ Roi. static PathObject; convertToAnnotation(ImagePlus imp,; ImageServer<?> server,; Roi roi,; double downsampleFactor,; ImagePlane plane). Deprecated.; use instead convertToAnnotation(Roi, double, double, double, ImagePlane). static PathObject; convertToDetection(Roi roi,; double xOrigin,; double yOrigin,; double downsampleFactor,; ImagePlane plane). Create a detection object for a specific ImageJ Roi, using an ImagePlus to help set properties. static PathObject; convertToDetection(Roi roi,; double downsampleFactor,; ImagePlus imp). Create a detection object for a specific ImageJ Roi. static PathObject; convertToDetection(ImagePlus imp,; ImageServer<?> server,; Roi roi,; double downsampleFactor,; ImagePlane plane). Deprecated.; use instead convertToDetection(Roi, double, double, double, ImagePlane). static ImageProcessor; convertToFloatProcessor(SimpleImage image). Convert a SimpleImage to an ImageProcessor. static <T extends PathImage<ImagePlus>>Roi; convertToIJRoi(ROI pathROI,; double xOrigin,; double yOrigin,; double downsampleFactor). Convert a QuPath ROI to an ImageJ Roi. static <T extends PathImage<ImagePlus>>Roi; convertToIJRoi(ROI pathROI,; Calibration cal,; double downsampleFactor). Convert a QuPath ROI to an ImageJ Roi for an image with the specified calibration. static <T extends PathImage<ImagePlus>>Roi; convertToIJRoi(ROI pathROI,; T pathImage). Create an ImageJ Roi from a ROI, suitable for displaying on the ImagePlus of an PathImage<ImagePlus>. static PathImage<ImagePlus>; convertToImagePlus(String title,; ImageServer<BufferedImage> server,; BufferedImage img,; RegionRequest request). Convert a BufferedImage into a PathImage<ImagePlus>. static PathImage<ImagePlus>; convertToImagePlus(ImageServer<BufferedImage> server,; RegionRequest request). Read a region from an ImageServer<BufferedImage as a PathImage<ImagePlus>. static ImageProcessor; convertToImageProcessor(BufferedImage img,; int band). Extract pixels as an an ImageProcessor from a si",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:3263,down,downsampleFactor,3263,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,1,['down'],['downsampleFactor']
Availability,"cified increment of 90 degrees. Parameters:; server - ; rotation - . Method Details. getRotation; public RotatedImageServer.Rotation getRotation(); Get the rotation applied by this server. Returns:. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Specified by:; readRegion in interface ImageServer<BufferedImage>; Overrides:; readRegion in class TransformingImageServer<BufferedImage>; Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; Throws:; IOException; See Also:. ImageServer.readRegion(double, int, int, int, int, int, int); ImageServer.readRegion(double, int, int, int, int); ImageServer.readBufferedImage(RegionRequest). getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Specified by:; getOr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RotatedImageServer.html:4508,down,downsampling,4508,javadoc/docs/qupath/lib/images/servers/RotatedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RotatedImageServer.html,1,['down'],['downsampling']
Availability,"cify downsample factors to use in the final pyramid.; ; Note that the downsample values provided will be sorted in ascending order. Parameters:; downsamples - ; Returns:; this builder. dyadicDownsampling; public OMEPyramidWriter.Builder dyadicDownsampling(); Downsample by factors of 2.; ; Note that the highest downsample value will depend on the tile size, ; so the tile size should be set first. Returns:; this builder; See Also:. scaledDownsampling(double). scaledDownsampling; public OMEPyramidWriter.Builder scaledDownsampling(double scale); Downsample by specific increasing factor each time (e.g. if scale == 2, then downsamples will be 1, 2, 4, 8...).; ; Note that the highest downsample value will depend on the tile size, ; so the tile size should be set first. Parameters:; scale - ; Returns:; this builder; See Also:. scaledDownsampling(double). scaledDownsampling; public OMEPyramidWriter.Builder scaledDownsampling(double minDownsample,; double scale); Downsample by specific increasing factor each time, with a specified initial downsample value ; (e.g. if scale == 2, then downsamples will be minDownsample, minDownsample*2, minDownsample*4...).; ; Note that the highest downsample value will depend on the tile size, ; so the tile size should be set first. Parameters:; minDownsample - the starting downsample, defining the highest-resolution image (usually 1.0); scale - the scale used to define successive downsamples; Returns:; this builder; See Also:. scaledDownsampling(double). channels; public OMEPyramidWriter.Builder channels(int... channels); Override default of writing all channels in their original order to be able to specify which ; channels are output, and in which order. Parameters:; channels - zero-based channel indices for all channels that should be exported, in the desired export order.; Returns:; this builder. build; public OMEPyramidWriter.OMEPyramidSeries build(); Create an OMEPyramidWriter.OMEPyramidSeries to write the OME-TIFF. Returns:; the series. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html:10865,down,downsamples,10865,javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html,4,['down'],"['downsample', 'downsamples']"
Availability,"ckage; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.images.servers; Class SparseImageServer.Builder. java.lang.Object; qupath.lib.images.servers.SparseImageServer.Builder. Enclosing class:; SparseImageServer. public static class SparseImageServer.Builder; extends Object; Builder to create a new SparseImageServer. Constructor Summary; Constructors. Constructor; Description; Builder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; SparseImageServer; build(). Build a new SparseImageServer. SparseImageServer.Builder; jsonRegion(ImageRegion region,; double downsample,; ImageServerBuilder.ServerBuilder<BufferedImage> builder). Add a region based on a JSON representation of an ImageServer. SparseImageServer.Builder; serverRegion(ImageRegion region,; double downsample,; ImageServer<BufferedImage> server). Add a region based on an existing ImageServer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(). Method Details. jsonRegion; public SparseImageServer.Builder jsonRegion(ImageRegion region,; double downsample,; ImageServerBuilder.ServerBuilder<BufferedImage> builder); Add a region based on a JSON representation of an ImageServer. Parameters:; region - the region within this image where the pixels requested from the server should be positioned; downsample - the downsample value for the represented region; builder - the ServerBuilder representation of the server to include; Returns:; See Also:. ImageServers. serverRegion; public SparseImageServer.Builder serverRegion(ImageRegion region,; double downsample,; ImageServer<BufferedImage> server); Add a region based on an existing ImageServer. Parameters:; reg",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/SparseImageServer.Builder.html:1125,down,downsample,1125,javadoc/docs/qupath/lib/images/servers/SparseImageServer.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/SparseImageServer.Builder.html,1,['down'],['downsample']
Availability,"class Object; Throws:; Throwable. isEmptyRegion; public boolean isEmptyRegion(RegionRequest request); Always returns false. Specified by:; isEmptyRegion in interface ImageServer<T>; Parameters:; request - ; Returns:. toString; public String toString(). Overrides:; toString in class Object. getCachedTile; public T getCachedTile(TileRequest tile); Get a cached tile, or null if the tile has not been cached.; ; This is useful whenever it is important to return quickly rather than wait for a tile to be fetched or generated.; ; Warning! The cached tile is returned directly (with no defensive copying) for performance.; This means that it must not be modified by the code that requests it.; If there is any chance the tile may be modified (or passed to untrusted code), then make sure to ; make a defensive copy, e.g. using BufferedImageTools.duplicate(java.awt.image.BufferedImage) ; if using a buffered image. Specified by:; getCachedTile in interface ImageServer<T>; Parameters:; tile - ; Returns:; the tile if it has been cached, or null if no cached tile is available for the request. createID; protected abstract String createID(); Create a unique ID for the server, which can be returned as the default value of getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + parameters; ; This will be called on demand whenever getPath() is first required. Returns:. getPath; public String getPath(); Default implementation lazily calls createID() on demand. Specified by:; getPath in interface ImageServer<T>; Returns:; See Also:. createID(). getWidth; public int getWidth(); Description copied from interface: ImageServer; Width of the full-resolution image in pixels. Specified by:; getWidth in interface ImageServer<T>; Returns:. getHeight; public int getHeight(); Description copied from interface: ImageServer; Height of the full-resolution image in pixels. Specified by:; getHeight in interface ImageServer<T>; Returns:. nChannels; public int nChannels(); Description ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html:8463,avail,available,8463,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,1,['avail'],['available']
Availability,"class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. toString; public String toString(). Overrides:; toString in class ImageRegion. createInstance; public static RegionRequest createInstance(ImageServer<?> server); Create a request for the full width and height of an ImageServer, for the default plane (first z-slice, time point) ; and first resolution level downsample (usually 1, but not always). Parameters:; server - ; Returns:. createInstance; public static RegionRequest createInstance(ImageServer<?> server,; double downsample); Create a request for the full width and height of an ImageServer, for the default plane (first z-slice, time point). Parameters:; server - ; downsample - ; Returns:. createAllRequests; public static List<RegionRequest> createAllRequests(ImageServer<?> server,; double downsample); Create requests for the full width and height of an ImageServer, for all planes (z-slices and time points). Parameters:; server - ; downsample - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; ROI roi); Create a request that contains the pixels of the specified ROI.; This is calculated using the ROI bounding box. Parameters:; path - ; downsample - ; roi - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; Collection<? extends ROI> rois); Create a request that contains the pixels of the specified ROIs.; This is calculated using the ROI bounding boxes. Parameters:; path - ; downsample - ; rois - ; Returns:; Throws:; IllegalArgumentException - if the ROIs do not all fall on the same ImagePlane. createInstance; public static RegionRequest createInstance(String path,; RegionRequest request); Create a request that matches another request but with a different path. Parameters:; path - ; request - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; ImageRegion r",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html:5548,down,downsample,5548,javadoc/docs/qupath/lib/regions/RegionRequest.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html,1,['down'],['downsample']
Availability,"color.ColorTransformer.ColorTransformMethod. Third stain after color deconvolution. StainVector - Class in qupath.lib.color. Representation of a color deconvolution stain vector, defined in terms of RGB optical densities. StainVector() - Constructor for class qupath.lib.color.StainVector. Default constructor, required for Externalizable interface. StainVector.DefaultStains - Enum Class in qupath.lib.color. Enum representing default stains. standardizeClassifications(Collection<PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Standardize the classifications for a collection of objects. standardizeClassifications(Collection<PathObject>, Comparator<String>) - Static method in class qupath.lib.objects.PathObjectTools. Standardize the classifications for a collection of objects. StandardPathClasses() - Constructor for class qupath.lib.objects.classes.PathClass.StandardPathClasses;  ; start() - Method in class qupath.lib.common.Timeit. Start the Timeit and create a checkpoint with the default name. start(String) - Method in class qupath.lib.common.Timeit. Start the Timeit and create a checkpoint with the specified name. start(Stage) - Method in class qupath.lib.gui.QuPathApp;  ; start(Stage) - Method in class qupath.lib.gui.tma.QuPathTMAViewer;  ; startMonitoring(String, int, boolean) - Method in class qupath.lib.plugins.CommandLineTaskRunner.CommandLineProgressMonitor;  ; startMonitoring(String, int, boolean) - Method in interface qupath.lib.plugins.SimpleProgressMonitor. Set the plugin to monitor, and begin monitoring. startMoving(double, double, boolean) - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler.ViewerMover. Start moving, with initial velocity given by dx and dy. startTranslation(double, double, boolean) - Method in class qupath.lib.roi.RoiEditor. Returns true if the current ROI is translatable, and at the end of this call the translation has started. startupMessage - Variable in class qupath.lib.gui.panes.Pref",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:995506,checkpoint,checkpoint,995506,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['checkpoint'],['checkpoint']
Availability,"count of messages. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text); Create a warning message. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(String text); Create a warning message with static text. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text,; ObservableNumberValue count); Create a warning message with a count. Parameters:; text - ; count - ; Returns:. warning; public static InfoMessage warning(ObservableNumberValue count); Create a warning message to show a count of warnings. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(String text,; int count); Create a warning message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text); Create an error message. Parameters:; text - ; Returns:. error; public static InfoMessage error(String text); Create an error message with static text. Parameters:; text - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text,; ObservableNumberValue count); Create an error message with a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(String text,; int count); Create an error message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableNumberValue count); Create a error message to show a count of errors. Parameters:; count - ; Returns:. textProperty; public ReadOnlyStringProperty textProperty(); Read only property containing the message text. Returns:; See Also:. getText(). getText; public String getText(); Text of the message. Returns:. countProperty; public ReadOnlyObjectProperty<Number> countProperty(); Read only property containing any count associated with the text (may be null). Returns:; See Also:. getCount(). getCount; public int getCount(); Counts",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:5179,error,error,5179,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,3,['error'],['error']
Availability,"counting grid. getStage() - Method in class qupath.lib.gui.commands.ContextHelpViewer. Get the help viewer stage. getStage() - Method in class qupath.lib.gui.commands.PathObjectGridView. Get the stage used to show the grid view. getStage() - Method in class qupath.lib.gui.JavadocViewer. Get the stage used to show the javadocs. getStage() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the stage used to display the image. getStage() - Method in class qupath.lib.gui.QuPathGUI. Get the main QuPath stage. getStage() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor. Get the stage for this script editor. getStage() - Method in class qupath.lib.gui.tma.TMASummaryViewer. Deprecated.; Get the stage for display. getStage() - Method in class qupath.process.gui.commands.density.DensityMapDialog. Get the stage. getStain(int) - Method in class qupath.lib.color.ColorDeconvolutionStains. Get a specified color deconvolution stain vector, where n should be 1, 2 or 3 ; (because color deconvolution on a 3-channel image can recover [to some extent] up to 3 stains). getStainNumber(StainVector) - Method in class qupath.lib.color.ColorDeconvolutionStains. Get the number for a specific stain (1, 2 or 3). getStainProjection(int, double, double, double, double[], double[], double[]) - Static method in class qupath.lib.color.ColorTransformer. Calculate magnitude of projection of pixel OD onto stain OD. getStainRejection(int, double, double, double, double[], double[], double[]) - Static method in class qupath.lib.color.ColorTransformer. Calculate magnitude of rejection of pixel OD onto stain OD. getStains(boolean) - Method in class qupath.lib.color.ColorDeconvolutionStains. Get a collection of all the stains. getStartTime() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the time associated with the first recorded frame. getStartX() - Method in class qupath.lib.gui.viewer.GridLines. Starting x coordinate for any counting grid (usually 0). getSt",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:520258,recover,recover,520258,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['recover'],['recover']
Availability,"crete Methods. Modifier and Type; Method; Description; static ScriptLanguage; fromString(String languageString). Get the ScriptLanguage object corresponding to the specified String. static Collection<ScriptLanguage>; getAvailableLanguages(). Get the available script languages. static ScriptEngine; getEngineByName(String languageName). Get the ScriptEngine based on its name. static ScriptLanguage; getLanguageFromExtension(String ext). Return the first ScriptLanguage compatible with the specified extension (can be runnable or not). static ScriptLanguage; getLanguageFromName(String name). Given a file name, determine the associated language - or null if no suitable (supported) language can be found. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ScriptLanguageProvider; public ScriptLanguageProvider(). Method Details. getAvailableLanguages; public static Collection<ScriptLanguage> getAvailableLanguages(); Get the available script languages. Returns:. getLanguageFromName; public static ScriptLanguage getLanguageFromName(String name); Given a file name, determine the associated language - or null if no suitable (supported) language can be found. Parameters:; name - ; Returns:. fromString; public static ScriptLanguage fromString(String languageString); Get the ScriptLanguage object corresponding to the specified String. ; If the string cannot be matched, PlainLanguage is returned. Parameters:; languageString - ; Returns:; corresponding script language, or PlainLanguage if no match. getLanguageFromExtension; public static ScriptLanguage getLanguageFromExtension(String ext); Return the first ScriptLanguage compatible with the specified extension (can be runnable or not). Parameters:; ext - the extension of the script file; Returns:; compatible script language. getEngineByName; public static ScriptEngine getEngineByName(String languageName); Get the ScriptEngine bas",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/ScriptLanguageProvider.html:1837,avail,available,1837,javadoc/docs/qupath/lib/gui/scripting/languages/ScriptLanguageProvider.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/ScriptLanguageProvider.html,1,['avail'],['available']
Availability,"cript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.overlays; Interface PathOverlay. All Known Implementing Classes:; AbstractImageOverlay, AbstractOverlay, BufferedImageOverlay, GridOverlay, HierarchyOverlay, PixelClassificationOverlay, TMAGridOverlay. public interface PathOverlay; Interface defining an overlay to paint on top of a viewer. Author:; Pete Bankhead. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault Methods. Modifier and Type; Method; Description; default String; getLocationString(ImageData<BufferedImage> imageData,; double x,; double y,; int z,; int t). Get a location string to display when showing a specified image. void; paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. Method Details. paintOverlay; void paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely); Paint the overlay to a graphics object. The graphics object will have a transform applied to it, so the painting should; make use of coordinates in the original image space. Parameters:; g2d - Graphics2D object to which drawing should be performed. This should have any transform already applied to it.; imageRegion - The maximum image region that should be shown.; downsampleFactor - The downsample factor at which the overlay will be viewed. There is no need for rescaling according to; this value since it has already been applied to the Graphics2D as part of its AffineTransform, however; it may optionally be needed within the method e.g. to correct line thicknesses.; imageData - the ImageData asso",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PathOverlay.html:1030,down,downsampleFactor,1030,javadoc/docs/qupath/lib/gui/viewer/overlays/PathOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PathOverlay.html,1,['down'],['downsampleFactor']
Availability,"cript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupathj; Class QuPath_Send_Overlay_to_QuPath. java.lang.Object; qupathj.QuPath_Send_Overlay_to_QuPath. All Implemented Interfaces:; PlugIn. public class QuPath_Send_Overlay_to_QuPath; extends Object; implements PlugIn; ImageJ plugin for sending back all the ROIs on an ImageJ overlay to QuPath.; ; Optionally measure the ROIs first, and include the measurements as features. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; QuPath_Send_Overlay_to_QuPath();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static List<PathObject>; createObjectsFromROIs(ImagePlus imp,; Collection<? extends Roi> rois,; double downsample,; boolean asDetection,; boolean includeMeasurements,; ImagePlane plane). Turn an array of ImageJ ROIs into a list of QuPath PathObjects, optionally adding measurements as well. static List<PathObject>; createPathObjectsFromROIs(ImagePlus imp,; Roi[] rois,; ImageServer<?> server,; double downsample,; boolean asDetection,; boolean includeMeasurements,; ImagePlane plane). Deprecated.; use instead createObjectsFromROIs(ImagePlus, Collection, double, boolean, boolean, ImagePlane). void; run(String arg);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPath_Send_Overlay_to_QuPath; public QuPath_Send_Overlay_to_QuPath(). Method Details. run; public void run(String arg). Specified by:; run in interface PlugIn. createPathObjectsFromROIs; @Deprecated; public static List<PathObject> createPathObjectsFromROIs(ImagePlus imp,; Roi[] rois,; Image",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupathj/QuPath_Send_Overlay_to_QuPath.html:1084,down,downsample,1084,javadoc/docs/qupathj/QuPath_Send_Overlay_to_QuPath.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupathj/QuPath_Send_Overlay_to_QuPath.html,1,['down'],['downsample']
Availability,"cription; HaralickFeatureComputer();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static HaralickFeatures; measureHaralick(SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d). Compute mean Haralick features from a SimpleImage, with optional masking. static CoocurranceMatrices; updateCooccurrenceMatrices(CoocurranceMatrices matrices,; SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d). Update existing CoocurranceMatrices with the values in a SimpleImage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. HaralickFeatureComputer; public HaralickFeatureComputer(). Method Details. measureHaralick; public static HaralickFeatures measureHaralick(SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d); Compute mean Haralick features from a SimpleImage, with optional masking. Parameters:; ip - input image; bpMask - binary mask (may be null); nBins - number of bins in co-occurrence matrix; minValue - minimum value for binning in the co-occurrence matrix; maxValue - maximum value for binning in the co-occurrence matrix; d - separation between pixels considered adjacent, usually 1; Returns:. updateCooccurrenceMatrices; public static CoocurranceMatrices updateCooccurrenceMatrices(CoocurranceMatrices matrices,; SimpleImage ip,; SimpleImage bpMask,; int nBins,; double minValue,; double maxValue,; int d); Update existing CoocurranceMatrices with the values in a SimpleImage. Parameters:; matrices - ; ip - input image; bpMask - binary mask (may be null); nBins - number of bins in co-occurrence matrix; minValue - minimum value for binning in the co-occurrence matrix; maxValue - maximum value for binning in the co-occurrence matrix; d - separation between pixels considered adjacent, usually 1; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/HaralickFeatureComputer.html:1776,mask,mask,1776,javadoc/docs/qupath/lib/analysis/features/HaralickFeatureComputer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/HaralickFeatureComputer.html,2,['mask'],['mask']
Availability,"ct; implements Serializable; ROI representing a straight line, defined by its end points. Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. double; getLength(). Get ROI length. int; getNumPoints(). Returns 2 (since the line is defined by its end points). String; getRoiName(). Get a String representation of the kind of ROI we have, ; e.g. ROI.RoiType; getRoiType(). Get the RoiType, used to distinguish between points, lines and areas. double; getScaledArea(double pixelWidth,; double pixelHeight). Get scaled area of the ROI, for use with calibrated pixel sizes. double; getScaledLength(double pixelWidth,; double pixelHeight). Get the scaled length, for use with calibrated pixel sizes. Shape; getShape(). Returns a",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html:1502,avail,available,1502,javadoc/docs/qupath/lib/roi/LineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html,1,['avail'],['available']
Availability,"ctConnections;  ; readExternal(ObjectInput) - Method in class qupath.lib.objects.PathROIObject;  ; readExternal(ObjectInput) - Method in class qupath.lib.objects.TMACoreObject;  ; readExternal(ObjectInput) - Method in class qupath.lib.plugins.workflow.SimplePluginWorkflowStep;  ; readExternal(ObjectInput) - Method in class qupath.lib.plugins.workflow.Workflow;  ; readFile(File) - Method in class qupath.lib.gui.scripting.ScriptTab. Read the file, set the editor's text area with the content of the file ; and return the detected language (based on the file extension). readFileAsString(File) - Static method in class qupath.lib.common.GeneralTools. Read the entire contents of a file into a single String. readFileAsString(String) - Static method in class qupath.lib.common.GeneralTools. Read the entire contents of a file given by the specified path into a single String. readHierarchy() - Method in interface qupath.lib.projects.ProjectImageEntry. Read the PathObjectHierarchy for this entry, or return an empty hierarchy if none is available. readHierarchy(File) - Static method in class qupath.lib.io.PathIO. Read a hierarchy from a .qpdata file. readHierarchy(InputStream) - Static method in class qupath.lib.io.PathIO. Read a PathObjectHierarchy from a saved data file (omitting all other contents). readHierarchy(Path) - Static method in class qupath.lib.io.PathIO. Read a hierarchy from a .qpdata file. readImageData() - Method in interface qupath.lib.projects.ProjectImageEntry. Read the ImageData associated with this entry, or create a new ImageData if none is currently present. readImageData(File, ImageData<T>, ImageServer<T>, Class<T>) - Static method in class qupath.lib.io.PathIO. Read ImageData from a File into an existing ImageData object, or create a new one if required. readImageData(InputStream, ImageData<T>, ImageServer<T>, Class<T>) - Static method in class qupath.lib.io.PathIO. Read ImageData from an InputStream into an existing ImageData object, or creating a new on",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:823239,avail,available,823239,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"ctedAnnotationAreasByLines, splitSelectedAnnotationAreasByLines, splitSelectedAnnotationAreasByLines, splitSelectedAnnotationAreasByLines, splitSpecifiedAreasByLines, transformAllObjects, transformAllObjects, transformSelectedObjects, transformSelectedObjects, translateAllObjects, translateAllObjects, writeDensityMapImage, writeDensityMapImage, writeImage, writeImage, writeImageRegion, writePredictionImage, writePredictionImage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QPEx; public QPEx(). Method Details. getCoreClasses; public static Collection<Class<?>> getCoreClasses(); Get a list of core classes that are likely to be useful for scripting.; The purpose of this is to allow users to find classes they are likely to need, ; or to import these automatically at the beginning of scripts. Returns:. exportTMAData; public static void exportTMAData(String path,; double downsampleFactor); throws IOException; Export TMA summary data for the current image. Parameters:; path - path to the export directory; downsampleFactor - downsample applied to each TMA core image; Throws:; IOException. exportTMAData; public static void exportTMAData(ImageData<BufferedImage> imageData,; String path,; double downsampleFactor); throws IOException; Export TMA summary data for the specified image. Parameters:; imageData - the image containing TMA data to export; path - path to the export directory; downsampleFactor - downsample applied to each TMA core image; Throws:; IOException. getQuPath; public static QuPathGUI getQuPath(); Get the current QuPath instance. Returns:. getCurrentViewer; public static QuPathViewer getCurrentViewer(); Get the active viewer in the current QuPath instance. Returns:; an active viewer, or null if no viewer is active in QuPath currently. locateFile; public static String locateFile(String nameOrPath); throws IOException; Locate a specified file based upo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:12552,down,downsampleFactor,12552,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html,1,['down'],['downsampleFactor']
Availability,"ction<OpenCVTools.IndexedPixel>; findMaxima(Mat mat,; Mat mask). Find maxima within an image. static Mat; findRegionalMaxima(Mat mat). Get the regional maxima within a Mat, providing the output as a labeled image. static void; floor(Mat mat). Floor values in a floating point Mat. static void; gaussianFilter(Mat mat,; double sigma). Apply a 2D Gaussian filter to all channels of an image, with symmetric boundary padding. static void; gaussianFilter(Mat mat,; double sigma,; int borderType). Apply a 2D Gaussian filter to all channels of an image. static Mat; getCircularStructuringElement(int radius). Deprecated.; createDisk(int, boolean) gives more reliable shapes. static double[]; getGaussianDeriv(double sigma,; int order,; int length). Get filter coefficients for a 1D Gaussian (derivative) kernel. static Mat; getGaussianDerivKernel(double sigma,; int order,; boolean doColumn). Get filter coefficients for a 1D Gaussian (derivative) kernel. static List<OpenCVTools.IndexedPixel>; getMaskedPixels(Mat mat,; Mat mask). Extract all the masked pixels within an image. static int; getOpenCVPixelType(PixelType pixelType). Get the OpenCV type code corresponding to a PixelType. static Mat; hConcat(Collection<? extends Mat> mats,; Mat dest). Horizontal concatenation for a Mat. static Mat; imageToMat(BufferedImage img). Convert a BufferedImage to an OpenCV Mat. static Mat; imageToMatBGR(BufferedImage img,; boolean includeAlpha). Extract 8-bit unsigned pixels from a BufferedImage as a multichannel BGR(A) Mat. static Mat; imageToMatRGB(BufferedImage img,; boolean includeAlpha). Extract 8-bit unsigned pixels from a BufferedImage as a multichannel RGB(A) Mat. static void; invertBinary(Mat matBinary,; Mat matDest). Invert a binary image. static boolean; isFloat(Mat mat). Returns true if a Mat is a floating point (rather than int) type. static Mat; label(Mat matBinary,; int connectivity). Label connected components for non-zero pixels in an image. static int; label(Mat matBinary,; Mat matL",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:6903,mask,mask,6903,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html,1,['mask'],['mask']
Availability,"ction<ROI,Number,PathObject> creator). Create objects by tracing contours in a labelled image. static Map<Number,ROI>; createROIs(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel). Convert integer labels into ROIs. static Mat; crop(Mat mat,; int x,; int y,; int width,; int height). Crop a region from a Mat based on its bounding box, returning a new image (not a subregion). static Mat; crop(Mat mat,; Padding padding). Crop a region from a Mat by stripping off padding, returning a new image (not a subregion). static Mat; ensureContinuous(Mat mat,; boolean inPlace). Ensure a Mat is continuous, creating a copy of the data if necessary. static double[]; extractDoubles(Mat mat). Extract pixels as a double array. static float[]; extractFloats(Mat mat). Extract pixels as a float array. static double[]; extractMaskedDoubles(Mat input,; Mat mask,; int channel). Extract pixels from an image using a mask, limited to the specified channel index. static float[]; extractMaskedFloats(Mat input,; Mat mask,; int channel). Extract pixels from an image using a mask, limited to the specified channel index. static double[]; extractPixels(Mat mat,; double[] pixels). Extract pixels as a double array. static float[]; extractPixels(Mat mat,; float[] pixels). Extract pixels as a float[] array. static List<Mat>; extractZStack(ImageServer<BufferedImage> server,; RegionRequest request). Extract a list of Mats, where each Mat corresponds to a z-slice, for all available z-slices of a region. static List<Mat>; extractZStack(ImageServer<BufferedImage> server,; RegionRequest request,; int zMin,; int zMax). Extract a list of Mats, where each Mat corresponds to a z-slice. static void; fill(Mat mat,; double value). Fill the pixels of an image with a specific value. static void; fill(Mat mat,; Mat mask,; double value). Fill the pixels of an image with a specific value, corresponding to a mask. static void; fillSmallHoles(Mat matBinary,; double maxArea). Fill holes in a binary image (1-ch",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:4286,mask,mask,4286,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html,1,['mask'],['mask']
Availability,"ctory; public static TypeAdapterFactory getServerBuilderFactory(); Get a TypeAdapterFactory to handle ServerBuilders. Returns:. pyramidalize; public static ImageServer<BufferedImage> pyramidalize(ImageServer<BufferedImage> server,; double... downsamples); Wrap an ImageServer to dynamically generate a pyramid. This does not involve writing any new image, ; and may be rather processor and memory-intensive as high-resolution tiles must be accessed to fulfil ; low-resolution requests. However, tile caching means that after tiles have been accessed once perceived ; performance can be considerably improved. Parameters:; server - the server to wrap (typically having only one resolution level); downsamples - optional array giving the downsamples of the new pyramid. If not provided,; Returns:. pyramidalizeTiled; public static ImageServer<BufferedImage> pyramidalizeTiled(ImageServer<BufferedImage> server,; int tileWidth,; int tileHeight,; double... downsamples); Wrap an ImageServer to dynamically generate a pyramid, using specified tile sizes.; This does not involve writing any new image, and may be rather processor and memory-intensive as high-resolution ; tiles must be accessed to fulfil low-resolution requests.; However, tile caching means that after tiles have been accessed once perceived ; performance can be considerably improved. Parameters:; server - the server to wrap (typically having only one resolution level); tileWidth - requested tile height; tileHeight - requested tile height; downsamples - optional array giving the downsamples of the new pyramid. If not provided,; Returns:. buildServer; public static ImageServer<BufferedImage> buildServer(String path,; String... args); throws IOException; Build a ImageServer for the specified URI path and optional args.; ; See buildServer(URI, String...) for more information about how args are applied. Parameters:; path - path for the image; it should be possible to convert this to a URI; args - ; Returns:; Throws:; IOException.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServers.html:3714,down,downsamples,3714,javadoc/docs/qupath/lib/images/servers/ImageServers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServers.html,1,['down'],['downsamples']
Availability,"ctoryManager. Create a read only property for a relative path of the user subdirectory. createRenderedServer(QuPathViewer) - Static method in class qupath.lib.gui.images.servers.RenderedImageServer. Create an ImageServer that returns tiles based on how approximately they would appear within the viewer. createRenderedServer(ImageServer<BufferedImage>, ImageRenderer) - Static method in class qupath.lib.gui.images.servers.RenderedImageServer. Create an ImageServer that converts the image to RGB using the specified ImageRenderer. createROIIcon(ROI, int, int, Color) - Static method in class qupath.lib.gui.tools.IconFactory. Create an icon depicting a ROI. createROIMask(int, int, ROI, double, double, double) - Static method in class qupath.lib.awt.common.BufferedImageTools. Create a grayscale BufferedImage representing a mask for a specified ROI. createROIMask(int, int, ROI, RegionRequest) - Static method in class qupath.lib.awt.common.BufferedImageTools. Create a grayscale BufferedImage representing a mask for a specified ROI. createROIMask(Shape, double) - Static method in class qupath.lib.awt.common.BufferedImageTools. Create a Shape mask using the minimal bounding box for the Shape. createROIMask(ROI, double) - Static method in class qupath.lib.awt.common.BufferedImageTools. Create a ROI mask using the minimal bounding box for the ROI. createROIs(Raster, int, RegionRequest, int, int) - Static method in class qupath.lib.analysis.images.ContourTracing. Create ROIs from one band of a raster containing integer label values. createROIs(Mat, RegionRequest, int, int) - Static method in class qupath.opencv.tools.OpenCVTools. Convert integer labels into ROIs. createROIs(SimpleImage, RegionRequest, int, int) - Static method in class qupath.lib.analysis.images.ContourTracing. Create ROIs from a labelled image containing integer labels. createROIs(ROI) - Method in class qupath.lib.objects.utils.Tiler. Create a list of ROI tiles from the input. createRotateImageDialog(QuPathGUI) -",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:216741,mask,mask,216741,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['mask'],['mask']
Availability,"cts have changed. void; setActiveTool(PathTool tool). Set the active PathTool for input to this viewer. void; setBorderColor(Color color). Set the border color for this viewer. void; setCenterPixelLocation(double x,; double y). Set the image pixel to display in the center of the viewer (using image pixel coordinates at the full-resolution). void; setCursor(Cursor cursor). Set the requested cursor to display in this viewer. void; setCustomPixelLayerOverlay(PathOverlay pathOverlay). Optionally set a custom overlay to use for the pixel layer. void; setDoFasterRepaint(boolean fasterRepaint). Set flag to indicate that repaints should prefer speed over accuracy. void; setDownsampleFactor(double downsampleFactor). Set the downsample factor for this viewer. void; setDownsampleFactor(double downsampleFactor,; double cx,; double cy). Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards. void; setDownsampleFactor(double downsampleFactor,; double cx,; double cy,; boolean clipToMinMax). Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards. void; setGamma(double gamma). Set the gamma value for this viewer. void; setImageData(ImageData<BufferedImage> imageDataNew). Set the current image for this viewer. void; setMagnification(double magnification). Set the downsample factor based upon magnification values. void; setMinimumRepaintSpacingMillis(long repaintSpacingMillis). Prevent frequent repaints (temporarily) by setting a minimum time that must have elapsed; after the previous repaint for a new one to be triggered. void; setRotation(double theta). Set the rotation; angle in radians. void; setSelectedObject(PathObject pathObject). Set selected object in the current hierarchy, without centering the viewer. void; setSelectedObject(PathObject pathObject,; boolean addToSelected). Set selected object in the current hierarchy, without centering the viewer. void; setS",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:11440,down,downsampleFactor,11440,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,1,['down'],['downsampleFactor']
Availability,"cts should be painted; selectionModel - the selection model used to determine the selection status of each object; downsample - the downsample factor; this should already be applied to the graphics object, but is needed to determine some line thicknesses. paintTMAGrid; public static void paintTMAGrid(Graphics2D g2d,; TMAGrid tmaGrid,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample); Paint the specified tissue microarray grid. Parameters:; g2d - the graphics object on which the objects should be painted; tmaGrid - the TMA grid; overlayOptions - the overlay options defining how objects should be painted; selectionModel - the selection model used to determine the selection status of each object; downsample - the downsample factor; this should already be applied to the graphics object, but is needed to determine some line thicknesses. paintObject; public static boolean paintObject(PathObject pathObject,; Graphics2D g,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample); Paint an object (or, more precisely, its ROI).; ; This is subject to the OverlayOptions, and therefore may not actually end up painting anything; (if the settings are such that objects of the class provided are not to be displayed). Parameters:; pathObject - ; g - ; overlayOptions - ; selectionModel - ; downsample - ; Returns:; true if anything was painted, false otherwise. paintShape; public static void paintShape(Shape shape,; Graphics2D g2d,; Color colorStroke,; Stroke stroke,; Color colorFill); Paint the specified shape with specified stroke and fill colors. Parameters:; shape - shape to paint; g2d - graphics object; colorStroke - stroke color (may be null); stroke - stroke (may be null); colorFill - fill color (may be null). getCachedStroke; public static Stroke getCachedStroke(double thickness); Get a BasicStroke with the specified thickness. Parameters:; thickness - ; Returns:. paintHandles; public static void pa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html:3876,down,downsample,3876,javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html,1,['down'],['downsample']
Availability,"cts(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel,; BiFunction<ROI,Number,PathObject> creator). Create objects by tracing contours in a labelled image. static Map<Number,ROI>; createROIs(Mat matLabels,; RegionRequest region,; int minLabel,; int maxLabel). Convert integer labels into ROIs. static Mat; crop(Mat mat,; int x,; int y,; int width,; int height). Crop a region from a Mat based on its bounding box, returning a new image (not a subregion). static Mat; crop(Mat mat,; Padding padding). Crop a region from a Mat by stripping off padding, returning a new image (not a subregion). static Mat; ensureContinuous(Mat mat,; boolean inPlace). Ensure a Mat is continuous, creating a copy of the data if necessary. static double[]; extractDoubles(Mat mat). Extract pixels as a double array. static float[]; extractFloats(Mat mat). Extract pixels as a float array. static double[]; extractMaskedDoubles(Mat input,; Mat mask,; int channel). Extract pixels from an image using a mask, limited to the specified channel index. static float[]; extractMaskedFloats(Mat input,; Mat mask,; int channel). Extract pixels from an image using a mask, limited to the specified channel index. static double[]; extractPixels(Mat mat,; double[] pixels). Extract pixels as a double array. static float[]; extractPixels(Mat mat,; float[] pixels). Extract pixels as a float[] array. static List<Mat>; extractZStack(ImageServer<BufferedImage> server,; RegionRequest request). Extract a list of Mats, where each Mat corresponds to a z-slice, for all available z-slices of a region. static List<Mat>; extractZStack(ImageServer<BufferedImage> server,; RegionRequest request,; int zMin,; int zMax). Extract a list of Mats, where each Mat corresponds to a z-slice. static void; fill(Mat mat,; double value). Fill the pixels of an image with a specific value. static void; fill(Mat mat,; Mat mask,; double value). Fill the pixels of an image with a specific value, corresponding to a mask. static void; fill",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:4188,mask,mask,4188,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html,1,['mask'],['mask']
Availability,"d ROIs. static RegionRequest; createInstance(String path,; double downsample,; ImageRegion region). Create a request corresponding to a specified ImageRegion. static RegionRequest; createInstance(String path,; double downsample,; ROI roi). Create a request that contains the pixels of the specified ROI. static RegionRequest; createInstance(String path,; RegionRequest request). Create a request that matches another request but with a different path. static RegionRequest; createInstance(ImageServer<?> server). Create a request for the full width and height of an ImageServer, for the default plane (first z-slice, time point) ; and first resolution level downsample (usually 1, but not always). static RegionRequest; createInstance(ImageServer<?> server,; double downsample). Create a request for the full width and height of an ImageServer, for the default plane (first z-slice, time point). boolean; equals(Object obj);  ; double; getDownsample(). Get the requested downsample factor, defining the resolution at which pixels should be returned. String; getPath(). Get the requested ImageServer path, used as an identifier. int; hashCode();  ; RegionRequest; intersect2D(int x,; int y,; int width,; int height). Intersect to the specified 2D region. RegionRequest; intersect2D(ImageRegion region). Intersect to the specified 2D region, ignoring z and t. boolean; overlapsRequest(RegionRequest request). Returns true if the region specified by this request overlaps with that of another request. RegionRequest; pad2D(int xPad,; int yPad). Add symmetric padding to the x and y dimensions of a request. RegionRequest; pad2D(Padding padding). Add symmetric padding to the x and y dimensions of a request. String; toString();  ; RegionRequest; translate(int dx,; int dy). Create a RegionRequest equivalent to this one with the x and y coordinates updated by translation. RegionRequest; updateDownsample(double downsample). Create a RegionRequest equivalent to this one with the updated downsample value",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html:2928,down,downsample,2928,javadoc/docs/qupath/lib/regions/RegionRequest.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html,1,['down'],['downsample']
Availability,"d Summary; Fields. Modifier and Type; Field; Description; protected double; x;  ; protected double; x2;  ; protected double; y;  ; protected double; y2;  . Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double xx,; double yy). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Since ellipses aren't represented internally with simple polygon points, ; this currently returns only 4 points (rather more diamond-like that would be ideal). double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. double; getLength(). Get ROI length. int; getNumPoints(). Returns 4 (since the ellipse is defined by its bounding box). String; getRoiName(). Get a String representation of the kind of ROI we have, ; e.g. ROI.RoiType; getRoiType(). Get the RoiType, used to distinguish between points, lines and areas. double; getScaledArea(double pixelWidth,; double pixelHeight). Get scaled area of the ROI, for use with calibrated pixel sizes. double; getScaledLength(double pixelWidth,; double pixelHeight). Get the scaled length, for use with calibrated pixel sizes. Shape; getShape(). Retu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html:1767,avail,available,1767,javadoc/docs/qupath/lib/roi/EllipseROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html,1,['avail'],['available']
Availability,"d for this entry. ResourceManager.Manager<ImageServer<T>>; getImages(). Access additional images associated with the project entry, e.g. Collection<String>; getMetadataKeys(). Get an unmodifiable collection of the metadata map's keys. Map<String,String>; getMetadataMap(). Get an unmodifiable view of the underlying metadata map. default String; getMetadataSummaryString(). Get a formatted string representation of the metadata map's contents. String; getMetadataValue(String key). Request a metadata value. String; getOriginalImageName(). Get the original image name, without any randomization. ImageServerBuilder.ServerBuilder<T>; getServerBuilder(). Get a ImageServerBuilder.ServerBuilder that can be used to open this image. default Collection<URI>; getServerURIs(). Deprecated.; use instead UriResource.getURIs(). String; getSummary(). Get a summary string representing this image entry. T; getThumbnail(). Request a thumbnail for the image. boolean; hasImageData(). Check if this entry has saved ImageData already available. String; putMetadataValue(String key,; String value). Store a metadata value. PathObjectHierarchy; readHierarchy(). Read the PathObjectHierarchy for this entry, or return an empty hierarchy if none is available. ImageData<T>; readImageData(). Read the ImageData associated with this entry, or create a new ImageData if none is currently present. String; removeMetadataValue(String key). Remove a metadata value. void; saveImageData(ImageData<T> imageData). Save the ImageData for this entry using the default storage location for the project. void; setDescription(String description). Set the description. void; setImageName(String name). Set the image name for this project entry. void; setThumbnail(T img). Set a thumbnail for the image. default boolean; updateServerURIs(Map<URI,URI> replacements). Deprecated.; use instead UriResource.updateURIs(Map). Methods inherited from interface qupath.lib.io.UriResource; getUris, getURIs, updateUris, updateURIs. Method Detail",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/projects/ProjectImageEntry.html:2338,avail,available,2338,javadoc/docs/qupath/lib/projects/ProjectImageEntry.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/ProjectImageEntry.html,1,['avail'],['available']
Availability,"d index). Parameters:; channel - ; Returns:; See Also:. ImageServerMetadata.getChannels(). getMetadata; ImageServerMetadata getMetadata(); Get essential metadata associated with the ImageServer as a distinct object. This may be edited by the user. Returns:; See Also:. getOriginalMetadata(). setMetadata; void setMetadata(ImageServerMetadata metadata); throws IllegalArgumentException; Set the metadata to use, e.g. to change the pixel size in microns. Parameters:; metadata - ; Throws:; IllegalArgumentException - if the metadata is incompatible (e.g. different image path, different bit-depth). getOriginalMetadata; ImageServerMetadata getOriginalMetadata(); Get the original metadata read during creation of the server. This may or may not be correct. Returns:; See Also:. getMetadata(). getDefaultThumbnail; T getDefaultThumbnail(int z,; int t); throws IOException; Get the default thumbnail for a specified z-slice and timepoint.; ; This should be the lowest resolution image that is available in the case of the multiresolution ; image, or else the full image. For large datasets, it may be used to determine basic statistics or ; histograms without requiring every pixel to be visited in the full resolution image. Parameters:; z - ; t - ; Returns:; Throws:; IOException. getTileRequestManager; TileRequestManager getTileRequestManager(); Get a TileRequestManager that can be used to identify image tiles that may be efficiently requested; from this ImageServer.; ; This is useful because managing arbitrary RegionRequests can result in inefficiencies if a request ; straddles multiple tiles unnecessarily. Also, it can be used to help ensure consistency whenever ; requesting regions at different resolutions, where rounding errors might otherwise occur.; ; Note that the TileRequestManager is not guaranteed to remain the same for the lifecycle of the server. ; For example, if the image metadata is changed then a new manager may be constructed. Returns:. getImageClass; Class<T> getImageCl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html:14192,avail,available,14192,javadoc/docs/qupath/lib/images/servers/ImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html,1,['avail'],['available']
Availability,"d inputs and their shapes. getInputs() - Method in interface qupath.opencv.dnn.PredictionFunction. Get the required inputs. getInputShapes() - Method in class qupath.opencv.dnn.DnnTools.DNNLayer. Layer input shape. getInputWidth() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Requested width of input image, or -1 if the classifier is not fussy. getInsertion(String, int, String) - Method in interface qupath.lib.scripting.languages.AutoCompletions.Completion. Get the string to insert, given the provided text and position. getInstallationUrl() - Static method in class qupath.lib.gui.Urls. Get a URL pointing to a page that explains how to install this version of QuPath. getInstalledImageServerBuilders() - Static method in class qupath.lib.images.servers.ImageServerProvider. Request all available ImageServerBuilders. getInstalledImageServerBuilders(Class<T>) - Static method in class qupath.lib.images.servers.ImageServerProvider. Request all available ImageServerBuilders supporting a given image class. getInstance() - Static method in class qupath.lib.gui.BuildInfo. Get the shared BuildInfo instance. getInstance() - Static method in class qupath.lib.gui.ExtensionClassLoader. Get a singleton instance of the ExtensionClassLoader. getInstance() - Static method in class qupath.lib.gui.JavadocViewer. Get the main (singleton) instance of JavadocViewer. getInstance() - Static method in class qupath.lib.gui.QuPathGUI. Get the static instance of the current QuPath GUI. getInstance() - Static method in class qupath.lib.gui.scripting.languages.CssLanguage. Get the static instance of this class. getInstance() - Static method in class qupath.lib.gui.scripting.languages.GroovyLanguage. Get the static instance of this class. getInstance() - Static method in class qupath.lib.gui.scripting.languages.JsonLanguage. Get the static instance of this class. getInstance() - Static method in class qupath.lib.gui.scripting.languages.MarkdownLanguage. Get the static instan",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:414805,avail,available,414805,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"d lines. requestUserDirectory; public static File requestUserDirectory(boolean promptIfMissing); Request the current user directory, optionally prompting the user to request a directory if none is available. Parameters:; promptIfMissing - ; Returns:; the user directory, or null if none exists and the user did not create one. reloadImageData; public static void reloadImageData(QuPathGUI qupath,; ImageData<BufferedImage> imageData); Reload the specified image data from a previously saved version,if available. Parameters:; qupath - ; imageData - . promptToAddShapeFeatures; public static void promptToAddShapeFeatures(QuPathGUI qupath); Prompt to add shape features for selected objects. Parameters:; qupath - current QuPath instance. convertDetectionsToPoints; public static void convertDetectionsToPoints(ImageData<?> imageData,; boolean preferNucleus); Convert detection objects to point annotations based upon their ROI centroids. Parameters:; imageData - the image data to process; preferNucleus - if true, use a nucleus ROI for cell objects (if available. promptToSimplifySelectedAnnotations; public static void promptToSimplifySelectedAnnotations(ImageData<?> imageData,; double altitudeThreshold); Show a prompt to selected annotations in a hierarchy. Parameters:; imageData - the current image data; altitudeThreshold - default altitude value for simplification. selectObjectsOnCurrentPlane; public static void selectObjectsOnCurrentPlane(QuPathViewer viewer); Select all the objects on the current plane of the viewer. Parameters:; viewer - . selectAllObjects; public static void selectAllObjects(ImageData<?> imageData); Select all objects (excluding the root object) in the imageData. Parameters:; imageData - . selectObjectsByClass; public static void selectObjectsByClass(ImageData<?> imageData,; Class<? extends PathObject> cls); Select objects that are instances of a specified class, logging an appropriate method in the workflow. Parameters:; imageData - ; cls - . resetSelection;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:24212,avail,available,24212,javadoc/docs/qupath/lib/gui/commands/Commands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html,1,['avail'],['available']
Availability,"d t indices; Returns:. getImagePlane; public static ImagePlane getImagePlane(Roi roi,; ImagePlus imp); Get the ImagePlane of an ImageJ Roi, based upon its stored positions. Parameters:; roi - ImageJ roi that may have c, z, t or position properties set.; imp - associated image; if not null, this will be used to convert the Roi's 'position' property, if non-zero; Returns:; the ImagePlane that is the best approximation of this Roi's position. convertToROI; public static <T extends PathImage<? extends ImagePlus>>; ROI convertToROI(Roi roi,; T pathImage); Create a ROI from an ImageJ Roi. Parameters:; roi - ; pathImage - ; Returns:. convertToPolygonROI; public static PolygonROI convertToPolygonROI(PolygonRoi roi,; Calibration cal,; double downsampleFactor,; ImagePlane plane); Convert an ImageJ PolygonRoi to a QuPath PolygonROI. Parameters:; roi - ; cal - ; downsampleFactor - ; plane - ; Returns:. convertToIJRoi; public static <T extends PathImage<ImagePlus>> Roi convertToIJRoi(ROI pathROI,; double xOrigin,; double yOrigin,; double downsampleFactor); Convert a QuPath ROI to an ImageJ Roi. Type Parameters:; T - ; Parameters:; pathROI - ; xOrigin - x-origin indicating relationship of ImagePlus to the original image, as stored in ImageJ Calibration object; yOrigin - y-origin indicating relationship of ImagePlus to the original image, as stored in ImageJ Calibration object; downsampleFactor - downsample factor at which the ImagePlus was extracted from the full-resolution image; Returns:. convertToROI; public static ROI convertToROI(Roi roi,; double xOrigin,; double yOrigin,; double downsampleFactor,; ImagePlane plane); Create a ROI from an ImageJ Roi. Parameters:; roi - ImageJ Roi; xOrigin - x-origin, as stored in an ImageJ Calibration object; yOrigin - y-origin, as stored in an ImageJ Calibration object; downsampleFactor - ; plane - plane defining c, z and t indices; Returns:. convertToOpticalDensitySum; public static FloatProcessor convertToOpticalDensitySum(ColorProcessor cp",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:25447,down,downsampleFactor,25447,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,1,['down'],['downsampleFactor']
Availability,"d to run a self-contained block of code.; ; Note that no checkpoint is made automatically after completion of the final iteration, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; name - base name of the checkpoint to create; the iteration number will be appended if nIterations > 1; runnable - the runnable to run; nIterations - the number of times to run the runnable; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpoint; public Timeit checkpoint(); throws UnsupportedOperationException; Create a new checkpoint with a default name. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpoint; public Timeit checkpoint(String name); throws UnsupportedOperationException; Create a new checkpoint with the specified name. Parameters:; name - name of the checkpoint; if null, a default name will be generated; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. stop; public Timeit stop(); throws UnsupportedOperationException; Stop the Timeit. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit hasn't been started, or has already been stopped. autoUnits; public Timeit autoUnits(). nanoseconds; public Timeit nanoseconds(); Report timings in nanoseconds. Returns:; this instance. milliseconds; public Timeit milliseconds(); Report timings in milliseconds. Returns:; this instance. microseconds; public Timeit microseconds(); Report timings in microseconds. Returns:; this instance. seconds; public Timeit seconds(); Report timings in seconds. Returns:; this instance. minutes; public Timeit minutes(); Report timings in minutes. Returns:; this instance. summarizeCheckpoints; public Timeit summarizeCheckpoints(); Request that checkpoints are summarized in the toString() method.; Currently, this means simply reporting the mean time ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:6944,checkpoint,checkpoint,6944,javadoc/docs/qupath/lib/common/Timeit.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html,1,['checkpoint'],['checkpoint']
Availability,"dImage; public T getAssociatedImage(String name); Description copied from interface: ImageServer; Get the image for a given associated image name. Specified by:; getAssociatedImage in interface ImageServer<T>; Parameters:; name - ; Returns:; See Also:. ImageServer.getAssociatedImageList(). getChannel; public ImageChannel getChannel(int channel); Description copied from interface: ImageServer; Request information for one channel (0-based index). Specified by:; getChannel in interface ImageServer<T>; Parameters:; channel - ; Returns:; See Also:. ImageServerMetadata.getChannels(). getDefaultThumbnail; public T getDefaultThumbnail(int z,; int t); throws IOException; Description copied from interface: ImageServer; Get the default thumbnail for a specified z-slice and timepoint.; ; This should be the lowest resolution image that is available in the case of the multiresolution ; image, or else the full image. For large datasets, it may be used to determine basic statistics or ; histograms without requiring every pixel to be visited in the full resolution image. Specified by:; getDefaultThumbnail in interface ImageServer<T>; Parameters:; z - ; t - ; Returns:; Throws:; IOException. getTileRequestManager; public TileRequestManager getTileRequestManager(); Description copied from interface: ImageServer; Get a TileRequestManager that can be used to identify image tiles that may be efficiently requested; from this ImageServer.; ; This is useful because managing arbitrary RegionRequests can result in inefficiencies if a request ; straddles multiple tiles unnecessarily. Also, it can be used to help ensure consistency whenever ; requesting regions at different resolutions, where rounding errors might otherwise occur.; ; Note that the TileRequestManager is not guaranteed to remain the same for the lifecycle of the server. ; For example, if the image metadata is changed then a new manager may be constructed. Specified by:; getTileRequestManager in interface ImageServer<T>; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html:12660,error,errors,12660,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,1,['error'],['errors']
Availability,"dWriter.Builder; bigTiff(). Request that the image is written in BigTIFF format. OMEPyramidWriter.Builder; bigTiff(boolean doBigTiff). Specify whether the image should be written in BigTIFF format. OMEPyramidWriter.OMEPyramidSeries; build(). Create an OMEPyramidWriter.OMEPyramidSeries to write the OME-TIFF. OMEPyramidWriter.Builder; channels(int... channels). Override default of writing all channels in their original order to be able to specify which ; channels are output, and in which order. OMEPyramidWriter.Builder; channelsImages(). Request that channels are written as separate images. OMEPyramidWriter.Builder; channelsInterleaved(). Request that channels are written interleaved within a single image plane. OMEPyramidWriter.Builder; channelsPlanar(). Request that channels are written as separate image planes. OMEPyramidWriter.Builder; compression(OMEPyramidWriter.CompressionType compression). Request the output compression type. OMEPyramidWriter.Builder; downsamples(double... downsamples). Specify downsample factors to use in the final pyramid. OMEPyramidWriter.Builder; dyadicDownsampling(). Downsample by factors of 2. OMEPyramidWriter.Builder; losslessCompression(). Request the default lossless compression method. OMEPyramidWriter.Builder; lossyCompression(). Request the default lossy compression method. OMEPyramidWriter.Builder; name(String name). Specify a series name. OMEPyramidWriter.Builder; parallelize(). Parallelize tile export, if possible. OMEPyramidWriter.Builder; parallelize(boolean doParallel). Specify if tile export should be parallelized if possible, with the default number of threads (current 4). OMEPyramidWriter.Builder; parallelize(int nThreads). Specify if tile export should be parallelized if possible, with the requested number of threads. OMEPyramidWriter.Builder; pixelType(String exportPixelType). Specify the output PixelType as a String, e.g. OMEPyramidWriter.Builder; pixelType(PixelType exportPixelType). Specify the output PixelType. OMEPy",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html:2123,down,downsamples,2123,javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html,1,['down'],['downsamples']
Availability,"data.ImageResolutionLevel. public static class ImageServerMetadata.ImageResolutionLevel.Builder; extends Object; Builder to create a list of ImageServerMetadata.ImageResolutionLevel to represent pyramidal resolutions. Constructor Summary; Constructors. Constructor; Description; Builder(int fullWidth,; int fullHeight). Constructor to help build a list of ImageServerMetadata.ImageResolutionLevel objects to represent pyramidal resolutions. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ImageServerMetadata.ImageResolutionLevel.Builder; addFullResolutionLevel(). Add the full-resolution image as a level of the pyramid. ImageServerMetadata.ImageResolutionLevel.Builder; addLevel(double downsample,; int levelWidth,; int levelHeight). Add a new level by providing a downsample value, width and height. ImageServerMetadata.ImageResolutionLevel.Builder; addLevel(int levelWidth,; int levelHeight). Add a new level based on level dimensions, estimating the corresponding downsample value as required. ImageServerMetadata.ImageResolutionLevel.Builder; addLevel(ImageServerMetadata.ImageResolutionLevel level). Add a new level directly. ImageServerMetadata.ImageResolutionLevel.Builder; addLevelByDownsample(double downsample). Add a new level, calculating dimensions using a downsample factor applied to the full-resolution image. List<ImageServerMetadata.ImageResolutionLevel>; build(). Build a list of ImageResolutionLevels, which can be used with an ImageServerMetadata object. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(int fullWidth,; int fullHeight); Constructor to help build a list of ImageServerMetadata.ImageResolutionLevel objects to represent pyramidal resolutions. Parameters:; fullWidth - full-resolution image width; fullHeight - full-resolution image height. Method Details. addLevelByDownsamp",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.ImageResolutionLevel.Builder.html:1603,down,downsample,1603,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.ImageResolutionLevel.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.ImageResolutionLevel.Builder.html,1,['down'],['downsample']
Availability,"dd multiple labels by classname, where the key represents a classname and the value ; represents the integer label that should be used for annotations of the given class. LabeledImageServer.Builder; addUnclassifiedLabel(int label). Add a single label for objects that are unclassified, where the label represents the integer label used for ; annotations that have no classification set. LabeledImageServer.Builder; addUnclassifiedLabel(int label,; Integer color). Add a single label for objects that are unclassified, where the label represents the integer label used for ; annotations that have no classification set. LabeledImageServer.Builder; backgroundLabel(int label). Specify the background label (0 by default). LabeledImageServer.Builder; backgroundLabel(int label,; Integer color). Specify the background label (0 by default) and color. LabeledImageServer; build(). Build the ImageServer with the requested parameters. LabeledImageServer.Builder; downsample(double downsample). Specify downsample factor. LabeledImageServer.Builder; grayscale(). Use grayscale LUT, rather than deriving colors from classifications. LabeledImageServer.Builder; grayscale(boolean grayscaleLut). Optionally use grayscale LUT, rather than deriving colors from classifications. LabeledImageServer.Builder; lineThickness(float thickness). Thickness of boundary lines and line annotations, defined in terms of pixels at the ; resolution specified by the downsample value of the server. LabeledImageServer.Builder; maxOutputChannelLimit(int maxChannels). Specify the maximum number of output channels allowed before QuPath will throw an exception. LabeledImageServer.Builder; multichannelOutput(boolean doMultichannel). If true, the output image consists of multiple binary images concatenated as different channels, ; so that the channel number relates to a classification. LabeledImageServer.Builder; setBoundaryLabel(String pathClassName,; int label). Set the classification and label to use for boundaries for cl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.Builder.html:3080,down,downsample,3080,javadoc/docs/qupath/lib/images/servers/LabeledImageServer.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.Builder.html,1,['down'],['downsample']
Availability,"de in the Mat; type - type of the image; this may contain additional channels if required.; Returns:; a Mat with one pixel containing the closest value supported by the type. scalarMat; public static Mat scalarMat(double value,; int depth); Create a 1x1 single-channel Mat with a specific value.; If necessary, clipping or rounding is applied. Parameters:; value - the value to include in the Mat; depth - depth of the image; if a type (including channels) is supplied instead, the channel information is removed.; Returns:; a Mat with one pixel containing the closest value supported by the type. putPixelsUnsigned; public static void putPixelsUnsigned(Mat mat,; byte[] pixels); Set pixels from a byte array.; ; There is no real error checking; it is assumed that the pixel array is in the appropriate format. Parameters:; mat - ; pixels - . putPixelsFloat; public static void putPixelsFloat(Mat mat,; float[] pixels); Set pixels from a float array.; ; There is no real error checking; it is assumed that the pixel array is in the appropriate format. Parameters:; mat - ; pixels - . getCircularStructuringElement; @Deprecated; public static Mat getCircularStructuringElement(int radius); Deprecated.; createDisk(int, boolean) gives more reliable shapes. Create a Mat depicting a circle of the specified radius.; ; Pixels within the circle have the value 1, pixels outside are 0. Parameters:; radius - ; Returns:. createDisk; public static Mat createDisk(int radius,; boolean doMean); Create a disk filter.; This is a rasterized approximation of a filled circle with the specified radius. Parameters:; radius - radius of the disk; must be > 0; doMean - if true, normalize kernel by dividing by the sum of all elements.; If false, all 'inside' elements are 1 and all 'outside' elements are 0.; Returns:; a Mat of size radius*2+1 that depicts a filled circle. invertBinary; public static void invertBinary(Mat matBinary,; Mat matDest); Invert a binary image.; ; Specifically, sets all zero pixels to 255",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:26187,error,error,26187,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html,1,['error'],['error']
Availability,"de. getChannel() - Method in class qupath.lib.analysis.images.ContourTracing.ChannelThreshold. Get the channel to threshold. getChannel() - Method in class qupath.lib.display.DirectServerChannelInfo. Get the channel number. getChannel(int) - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getChannel(int) - Method in interface qupath.lib.images.servers.ImageServer. Request information for one channel (0-based index). getChannel(int) - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the specified channel. getChannelIndex(ImageServer<?>, String) - Static method in class qupath.lib.images.servers.ServerTools. Get the index of the first channel of a server with a specified channel name. getChannelList(String...) - Static method in class qupath.lib.images.servers.ImageChannel. Convert an array of channel names into a list of ImageChannel using default colors. getChannels() - Method in class qupath.lib.display.settings.ImageDisplaySettings. Get all the available channels. getChannels() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get an unmodifiable list of all channels. getChannels(List<ImageChannel>) - Method in interface qupath.opencv.ops.ImageOp. Get appropriate channels to reflect the output of this transform. getChannels(ImageData<BufferedImage>) - Method in interface qupath.opencv.ops.ImageDataOp. Get appropriate channels to reflect the output of this transform, given the input. getChannelType() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the channel type, which can be used to interpret the channels. getChartDataAsString(XYChart<Number, Number>) - Static method in class qupath.lib.gui.charts.ChartTools. Get a string representation of chart data, in such a way that it could be pasted into a spreadsheet. getCheckpoints() - Method in class qupath.lib.common.Timeit. Get an list of all the checkpoints. getChildObjects() - Method in class qupath.lib.objects.PathObject. Get a collection of ch",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:350822,avail,available,350822,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"ded. double; getMin(). Get the minimum non-NaN value added. long; getNumNaNs(). Get count of the number of NaN values added. double; getRange(). Get the range, i.e. double; getStdDev(). Get the standard deviation of all non-NaN values that were added. double; getSum(). Get the sum of all non-NaN values that were added. double; getVariance(). Get the variance of all non-NaN values that were added. long; size(). Get count of the number of non-NaN values added. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. size; protected long size. Constructor Details. RunningStatistics; public RunningStatistics(); Default constructor. Method Details. size; public long size(); Get count of the number of non-NaN values added. Returns:; See Also:. getNumNaNs(). addValue; public void addValue(double val); Add another value; NaN values are counted but do not contribute to the statistics. Parameters:; val - ; See Also:. getNumNaNs(). getNumNaNs; public long getNumNaNs(); Get count of the number of NaN values added. Returns:; See Also:. size(). getSum; public double getSum(); Get the sum of all non-NaN values that were added. Returns:. getMean; public double getMean(); Get the mean of all non-NaN values that were added. Returns:. getVariance; public double getVariance(); Get the variance of all non-NaN values that were added. Returns:. getStdDev; public double getStdDev(); Get the standard deviation of all non-NaN values that were added. Returns:. getMin; public double getMin(); Get the minimum non-NaN value added. Returns:; the minimum value, or NaN if no values are available. getMax; public double getMax(); Get the maximum non-NaN value added. Returns:; the maximum value, or NaN if no values are available. getRange; public double getRange(); Get the range, i.e. maximum - minimum values. Returns:. toString; public String toString(). Overrides:; toString in class Object. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/RunningStatistics.html:3187,avail,available,3187,javadoc/docs/qupath/lib/analysis/stats/RunningStatistics.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/stats/RunningStatistics.html,2,['avail'],['available']
Availability,"default OutputHandler<S,T,U> orElse(OutputHandler<S,T,U> after); Append a second output handler to this one, but only call it if this one returns false.; The return value of the handler is then true if either returns true. Parameters:; after - ; Returns:. createUnmaskedObjectOutputHandler; static <S,; T,; U> OutputHandler<S,T,U> createUnmaskedObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter); Create an output handler that can be used to add objects to the parent object.; This requires an OutputHandler.OutputToObjectConverter to convert the output to a list of objects.; ; This method does not apply any masking to the parent ROI, but assumed this has already been applied; elsewhere. Consequently, it can result in objects being created that extend beyond the ROI.; To avoid this, use createMaskAndSplitObjectOutputHandler(OutputToObjectConverter) or; #createMaskedObjectOutputHandler(OutputToObjectConverter)}. Type Parameters:; S - the image type; T - the mask type; U - the output type; Parameters:; converter - ; Returns:. createObjectOutputHandler; static <S,; T,; U> OutputHandler<S,T,U> createObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter); Create an output handler that can be used to add objects to the parent object, applying the ROI mask.; This can result in objects with discontinuous ROIs.; This requires an OutputHandler.OutputToObjectConverter to convert the output to a list of objects. Type Parameters:; S - the image type; T - the mask type; U - the output type; Parameters:; converter - ; Returns:; See Also:. createMaskAndSplitObjectOutputHandler(OutputToObjectConverter). createMaskAndSplitObjectOutputHandler; static <S,; T,; U> OutputHandler<S,T,U> createMaskAndSplitObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter); Create an output handler that can be used to add objects to the parent object, applying the ROI mask and; splitting objects with discontinuous ROIs.; This requires an Output",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html:4540,mask,mask,4540,javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html,1,['mask'],['mask']
Availability,"der; extends Object; Deprecated.; Builder class to create a custom Dialog. Constructor Summary; Constructors. Constructor; Description; Builder(). Deprecated.;  . Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; Dialogs.Builder; alertType(Alert.AlertType type). Deprecated.; Create a dialog styled as a specified alert type. Dialog<ButtonType>; build(). Deprecated.; Build the dialog. Dialogs.Builder; buttons(String... buttonNames). Deprecated.; Specify the buttons to display in the dialog. Dialogs.Builder; buttons(ButtonType... buttonTypes). Deprecated.; Specify the buttons to display in the dialog. Dialogs.Builder; confirmation(). Deprecated.; Create an confirmation alert dialog. Dialogs.Builder; content(Node content). Deprecated.; Specify a Node to display within the dialog. Dialogs.Builder; contentText(String content). Deprecated.; Specify the dialog content text. Dialogs.Builder; error(). Deprecated.; Create an error alert dialog. Dialogs.Builder; expandableContent(Node content). Deprecated.; Specify a Node to display within the dialog as expandable content, not initially visible. Dialogs.Builder; headerText(String header). Deprecated.; Specify the dialog header text. Dialogs.Builder; height(double height). Deprecated.; Specify the dialog height. Dialogs.Builder; information(). Deprecated.; Create an information alert dialog. Dialogs.Builder; modality(Modality modality). Deprecated.; Specify the modality of the dialog. Dialogs.Builder; nonModal(). Deprecated.; Specify that the dialog should be non-modal. Dialogs.Builder; owner(Window owner). Deprecated.; Specify the dialog owner. Dialogs.Builder; prefHeight(double prefHeight). Deprecated.; Specify the preferred height of the dialog pane. Dialogs.Builder; prefWidth(double prefWidth). Deprecated.; Specify the preferred width of the dialog pane. Dialogs.Builder; resizable(). Deprecated.; Make the dialog resizable (but default it is not). void; show(",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.Builder.html:1512,error,error,1512,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.Builder.html,1,['error'],['error']
Availability,"der;  ; mkdirs(String) - Static method in class qupath.lib.scripting.QP. Ensure directories exist for the specified path, calling file.mkdirs() if not. ML() - Constructor for class qupath.opencv.ops.ImageOps.ML;  ; modality(Modality) - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Specify the modality of the dialog. modelType(OpenCVDnn.ModelType) - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Set the model type, used by OpenCVDnn.buildModel(). morphologicalReconstruction(ImageProcessor, ImageProcessor) - Static method in class qupath.imagej.processing.MorphologicalReconstruction. Apply morphological operation using marker and mask images. morphologicalReconstruction(Mat, Mat) - Static method in class qupath.opencv.tools.ProcessingCV. Compute morphological reconstruction. morphologicalReconstruction(SimpleModifiableImage, SimpleImage) - Static method in class qupath.lib.analysis.algorithms.MorphologicalReconstruction. Apply morphological reconstruction with the specified marker and mask images. MorphologicalReconstruction - Class in qupath.imagej.processing. Implementation of morphological reconstruction for ImageJ. MorphologicalReconstruction - Class in qupath.lib.analysis.algorithms. Implementation of 2D morphological reconstruction, using 8-connectivity & a hybrid method. MorphologicalReconstruction() - Constructor for class qupath.imagej.processing.MorphologicalReconstruction;  ; MorphologicalReconstruction() - Constructor for class qupath.lib.analysis.algorithms.MorphologicalReconstruction;  ; mouseClicked(MouseEvent) - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler;  ; mouseClicked(MouseEvent) - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler;  ; mouseClicked(MouseEvent) - Method in class qupath.process.gui.WandToolEventHandler;  ; mouseDragged(MouseEvent) - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler;  ; mouseDragged(MouseEvent) - Method in class",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:697096,mask,mask,697096,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['mask'],['mask']
Availability,"disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.display.settings; Class ImageDisplaySettings. java.lang.Object; qupath.lib.display.settings.ImageDisplaySettings. public class ImageDisplaySettings; extends Object; A simple class to store the main information needed by QuPath to display an image,; in a JSON-friendly form. Constructor Summary; Constructors. Constructor; Description; ImageDisplaySettings();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static ImageDisplaySettings; create(String name,; double gamma,; boolean invertBackground,; List<ChannelSettings> channels). Create a new image display settings object. List<ChannelSettings>; getChannels(). Get all the available channels. double; getGamma(). Get the requested vamma value for the viewer. String; getName(). Get the name of the settings. boolean; invertBackground(). Get whether the background should be shown 'inverted'. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageDisplaySettings; public ImageDisplaySettings(). Method Details. create; public static ImageDisplaySettings create(String name,; double gamma,; boolean invertBackground,; List<ChannelSettings> channels); Create a new image display settings object. Parameters:; name - ; gamma - ; invertBackground - ; channels - ; Returns:. getName; public String getName(); Get the name of the settings. Returns:. getGamma; public double getGamma(); Get the requested vamma value for the viewer. Returns:. invertBackground; public boolean invertBackground(); Get whether the background should be shown 'inverted'.; This can make a fluor",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ImageDisplaySettings.html:1050,avail,available,1050,javadoc/docs/qupath/lib/display/settings/ImageDisplaySettings.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/settings/ImageDisplaySettings.html,1,['avail'],['available']
Availability,"ditional arguments currently requested when opening images; See Also:. clearReaderOptions(); setReaderOptions(Map). clearReaderOptions; public void clearReaderOptions(); Clear all reader options, returning these to their defaults. See Also:. getReaderOptions(); setReaderOptions(Map). setReaderOptions; public void setReaderOptions(Map<String,String> options); Set additional arguments that should be passed to readers.; Example:; ; BioFormatsServerOptions.setReaderOptions(Map.of(""zeissczi.autostitch"", ""false""));; ; Note: options are passed to every server, even when irrelevant for the particular server type.; Therefore they can end up being stored unnecessarily in projects and server paths.; For that reason it best practice to call clearReaderOptions() after options are no longer required. Parameters:; options - the arguments to pass when opening new readers; See Also:. clearReaderOptions(); getReaderOptions(). getInstance; public static BioFormatsServerOptions getInstance(); Get the static instance of BioFormatsServerOptions, available to servers being constructed. Returns:. bioformatsEnabled; public boolean bioformatsEnabled(); Returns true if Bio-Formats is enabled and may be used to read images. Returns:. setBioformatsEnabled; public void setBioformatsEnabled(boolean bioformatsEnabled); Set whether Bio-Formats should be enabled or disabled (in favor of other readers). Parameters:; bioformatsEnabled - . setFilesOnly; public void setFilesOnly(boolean filesOnly); Set whether Bio-Formats should support only local files (rather than any URL). Parameters:; filesOnly - . getFilesOnly; public boolean getFilesOnly(); Returns true if Bio-Formats is restricted to support only local files, not other URLs. Returns:. getMemoizationTimeMillis; public int getMemoizationTimeMillis(); Returns the number of milliseconds that must elapse when opening an image before a memoization file is generated. Returns:. setMemoizationTimeMillis; public void setMemoizationTimeMillis(int memoizatio",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerOptions.html:5407,avail,available,5407,javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerOptions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/bioformats/BioFormatsServerOptions.html,1,['avail'],['available']
Availability,"downsample factor, defining the resolution at which pixels should be returned. getDownsampleFactor() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the current downsample factor. getDownsampleFactor() - Method in interface qupath.lib.images.PathImage. Get the downsample factor originally used when obtaining the image from an ImageServer; will be 1 if the image is full-resolution. getDownsampleFactor(ImageServer<?>, double) - Static method in class qupath.lib.images.servers.ServerTools. Calculate a downsample factor for a server given a preferred pixel size. getDownsampleForLevel(int) - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the downsample factor for a specific resolution level. getDownsampleForResolution(int) - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getDownsampleForResolution(int) - Method in interface qupath.lib.images.servers.ImageServer. Get the downsample factor for a specified resolution level, where level 0 is the full resolution image ; and nResolutions() - 1 is the lowest resolution available. getDummyColorModel(int) - Static method in class qupath.lib.color.ColorModelFactory. Get a dummy ColorModel instance. getEdgeMax() - Method in class qupath.lib.analysis.stats.Histogram. Get the maximum edge of the histogram. getEdgeMin() - Method in class qupath.lib.analysis.stats.Histogram. Get the minimum edge of the histogram. getEdgeRange() - Method in class qupath.lib.analysis.stats.Histogram. Get the histogram edge range, defined as the maximum edge - the minimum edge. getEigenvalues(boolean) - Method in interface qupath.opencv.tools.MultiscaleFeatures.Hessian. Get the eigenvalues, ranked from highest to lowest. getEigenvalues(boolean) - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian2D;  ; getEigenvalues(boolean) - Method in class qupath.opencv.tools.MultiscaleFeatures.Hessian3D;  ; getEigenvectors(boolean) - Method in interface qupath.opencv.tools.MultiscaleFeatures.Hessian. Get th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:386938,down,downsample,386938,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,2,"['avail', 'down']","['available', 'downsample']"
Availability,"d BufferedImage createDefaultRGBImage(int width,; int height); Create the default (blank) RGB image for this server.; ; By default this will have TYPE_INT_RGB but a subclass may change this if necessary ; (e.g. to incorporate an alpha channel). Parameters:; width - ; height - ; Returns:. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; Throws:; IOException; See Also:. ImageServer.readRegion(double, int, int, int, int, int, int); ImageServer.readRegion(double, int, int, int, int); ImageServer.readBufferedImage(RegionRequest). allowSmoothInterpolation; protected boolean allowSmoothInterpolation(); Returns true if this server is permitted to use smooth interpolation when resizing.; The default implementation returns true if the channel type is not ImageServerMetadata.ChannelType.CLASSIFICATION. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractTileableImageServer.html:5739,down,downsampling,5739,javadoc/docs/qupath/lib/images/servers/AbstractTileableImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractTileableImageServer.html,1,['down'],['downsampling']
Availability,"e (may be null). S; getValueOrDefault(). Get the current set value, or any default if no value has been set. boolean; hasHelpText(). Query whether getHelpText() returns a meaningful String (as opposed to null). boolean; isHidden(). Test is the 'hidden' flag is set for the parameter. boolean; isValidInput(S value). Query if a specified value would be valid for this parameter. void; resetValue(). Set last value to null (so default can be used). void; setHidden(boolean hidden). Mark that a parameter should not be displayed to a user. boolean; setStringLastValue(Locale locale,; String value). This will only work for string choices... boolean; setValue(S value). Set the Parameter to have a specified value. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Field Details. choices; protected List<S> choices. lastValue; protected S lastValue. Method Details. getChoices; public List<S> getChoices(); Get a list of available choices. Returns:. isValidInput; public boolean isValidInput(S value); Description copied from interface: Parameter; Query if a specified value would be valid for this parameter. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); This will only work for string choices... for other types it will always return false; and fail to set the lastValue. Parameters:; locale - ; value - ; Returns:. duplicate; public Parameter<S> duplicate(); Description copied from interface: Parameter; Create a new Parameter with the same text and value. Returns:. setHidden; public void setHidden(boolean hidden); Description copied from interface: Parameter; Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. usin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html:2409,avail,available,2409,javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/ChoiceParameter.html,1,['avail'],['available']
Availability,"e Javascript that, if run, would perform the step. ScriptAttributes. Default attributes that can be set when running scripts. ScriptAutoCompletor. Interface for classes that implement auto-completion (e.g. ScriptEditor. Minimal interface for a script editor that the GUI can call. ScriptEditorControl<T>. Basic script editor control using JavaFX. ScriptLanguage. Abstract class to represent languages supported by the script editor. ScriptLanguageProvider. Class with static methods to fetch all the available ScriptLanguages. ScriptParameters. Class that stores key information that is useful for running scripts. ScriptParameters.Builder. Builder class for ScriptParameters. ScriptStyler. Interface for classes that apply some styling to a RichTextFX's CodeArea. ScriptStylerProvider. Class with static methods to fetch all the available ScriptStylers. ScriptSyntax. Interface for classes that apply some syntax formatting to an EditableText. ScriptSyntaxProvider. Class with static methods to fetch all the available ScriptSyntaxes. ScriptTab. Class representing a script tab (e.g. SelectableItem<T>. Helper class for managing items when only one of them may be selected. SelectedMeasurementTableView. Component to show measurements for a currently-selected object. ServerSelector. Helper class for selecting one image server out of a collection. ServerTools. Static methods helpful when dealing with ImageServers. ShapeFeaturesPlugin<T>. Add shape measurements. ShapeSimplifier. Helper methods for simplifying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level. SharedThreadPoolManager. Manager to simplify submitting short tasks in background threads using a shared ExecutorService. SimpleImage. A minimal interface for accessing pixel values in a single-channel image. SimpleImages. Create SimpleImage instances for basic pixel processing. SimpleImageViewer. A simple viewer for a single image, with options to save or copy. SimpleModifiableIma",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:51943,avail,available,51943,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['avail'],['available']
Availability,"e ROI bounds are used. Parameters:; server - the image server; roi - the ROI for which the patch should be extracted; downsample - the downsample value; width - the patch width, or -1 if the ROI bounds should be used; height - the patch height, or -1 if the ROI bounds should be used; borderPadding - the border padding for out-of-bounds requests, for use with OpenCV's copyMakeBorder; Returns:; Throws:; IOException; See Also:. readPatch(ImageServer, ROI, double, int, int). classify; public static boolean classify(ClassificationModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier,; String predictionMeasurement); throws IOException; Apply a classification model to an image patch to classify an object. Parameters:; model - the model for prediction; pathObject - the object to classify; server - the image supplying the patch; downsample - the requested downsample at which classification should be applied; classifier - function to convert the classification label into a PathClass; predictionMeasurement - optional measurement name for storing the prediction value (often treated as a probability) ; in the measurement list of the object.; Returns:; true if the classification of the object has changed, false otherwise; Throws:; IOException - if the patch cannot be read. classify; public static boolean classify(ClassificationModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; int width,; int height,; IntFunction<PathClass> classifier,; String predictionMeasurement); throws IOException,; IllegalArgumentException; Apply a classification model to an image patch to classify an object.; If a patch width and height both > 0, the patch is cropped around the ROI centroid and padded if necessary.; If a patch width and height both < 0, the bounding box of hte ROI is used directly and the model is assumed able to ; resize if needed.; If the patch width and height are anythin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html:9882,down,downsample,9882,javadoc/docs/qupath/opencv/dnn/DnnTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html,2,['down'],['downsample']
Availability,"e ROI to buffer; distance - the distance to buffer, in pixels. If negative an erosion will be performed.; Returns:; the modified ROI (which may be empty). splitROI; public static List<ROI> splitROI(ROI roi); Split a multi-part ROI into separate pieces.; ; If the ROI is already a distinct, single region or line it is returned as a singleton list. Parameters:; roi - ; Returns:. splitAreaToPolygons; public static PolygonROI[][] splitAreaToPolygons(Area area,; int c,; int z,; int t); Split Area into PolygonROIs for the exterior and the holes.; ; The first array returned gives the holes and the second the positive regions (admittedly, it might have ; been more logical the other way around).; ; ; ; var polygons = splitAreaToPolygons(area, -1, 0, 0);; var holes = polygons[0];; var regions = polygons[1];; ; . Parameters:; area - ; c - ; z - ; t - ; Returns:. createRandomRectangle; public static ROI createRandomRectangle(ImageRegion mask,; double width,; double height); throws IllegalArgumentException; Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. Parameters:; mask - region defining the area in which the rectangle can be located, including the image plane information; width - width of the rectangle to create; height - height of the rectangle to create; Returns:; a rectangle with the specified width and height, covered by the mask; Throws:; IllegalArgumentException - if either the mask width or height is too small for the requested width and height. createRandomRectangle; public static ROI createRandomRectangle(ImageRegion mask,; double width,; double height,; Random random); throws IllegalArgumentException; Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. Parameters:; mask - region defining the area in which the rectangle can be located, including the image plane information; width - width of the rectangle to cre",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:17061,mask,mask,17061,javadoc/docs/qupath/lib/roi/RoiTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html,2,['mask'],['mask']
Availability,"e Timeit has already been stopped. checkpointAndRun; public Timeit checkpointAndRun(String name,; Runnable runnable); throws UnsupportedOperationException; Create a checkpoint and immediately run the provided Runnable.; ; Note that no checkpoint is made automatically after completion, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; name - the name of the checkpoint to create; runnable - the runnable to run; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpointAndRun; public Timeit checkpointAndRun(String name,; Runnable runnable,; int nIterations); throws UnsupportedOperationException; Create a checkpoint and immediately run the provided Runnable nIterations times.; The purpose of this is to get better insights into the time required to run a self-contained block of code.; ; Note that no checkpoint is made automatically after completion of the final iteration, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; name - base name of the checkpoint to create; the iteration number will be appended if nIterations > 1; runnable - the runnable to run; nIterations - the number of times to run the runnable; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpoint; public Timeit checkpoint(); throws UnsupportedOperationException; Create a new checkpoint with a default name. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpoint; public Timeit checkpoint(String name); throws UnsupportedOperationException; Create a new checkpoint with the specified name. Parameters:; name - name of the checkpoint; if null, a default name will be generated; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. stop; public Timeit stop(); throws U",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:6064,checkpoint,checkpoint,6064,javadoc/docs/qupath/lib/common/Timeit.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html,2,['checkpoint'],['checkpoint']
Availability,"e and the viewer already has an ImageServer, then any ImageServer path recorded within the data file will be ignored; promptToSaveChanges - if true, the user will be prompted to ask whether to save changes or not; Returns:; Throws:; IOException. openImageEntry; public boolean openImageEntry(ProjectImageEntry<BufferedImage> entry); Open the image represented by the specified ProjectImageEntry.; ; If an image is currently open, this command will prompt to save any changes. Parameters:; entry - ; Returns:. promptToOpenImageFile; public boolean promptToOpenImageFile(); Show a file chooser to open a new image in the current viewer.; ; If this encounters an exception, an error message will be shown. Returns:; true if the image was opened, false otherwise. promptToOpenImageFileOrUri; public boolean promptToOpenImageFileOrUri(); Show a dialog to open a new image in the current viewer, with support ; for entering a URL (rather than requiring a local file only).; ; If this encounters an exception, an error message will be shown. Returns:; true if the image was opened, false otherwise. openImage; public boolean openImage(QuPathViewer viewer,; String pathNew); throws IOException. Throws:; IOException. openImage; public boolean openImage(QuPathViewer viewer,; String pathNew,; boolean prompt,; boolean includeURLs); throws IOException; Open a new whole slide image server, or ImageData.; If the path is the same as a currently-open server, do nothing. Parameters:; viewer - the viewer into which the image should be opened; pathNew - ; prompt - if true, give the user the opportunity to cancel opening if a whole slide server is already set; includeURLs - if true, any prompt should support URL input and not only a file chooser; Returns:; true if the server was set for this GUI, false otherwise; Throws:; IOException. installGroovyCommand; public MenuItem installGroovyCommand(String menuPath,; File file); Install a Groovy script as a new command in QuPath. Parameters:; menuPath - menu whe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:19813,error,error,19813,javadoc/docs/qupath/lib/gui/QuPathGUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html,1,['error'],['error']
Availability,"e appropriate loader for the model). Parameters:; name - ; Returns:. config; public OpenCVDnn.Builder config(String pathConfig); Path to config file (if required). Parameters:; pathConfig - ; Returns:. config; public OpenCVDnn.Builder config(URI pathConfig); Path to config file (if required). Parameters:; pathConfig - ; Returns:. name; public OpenCVDnn.Builder name(String name); User-friendly name to use with this model. Parameters:; name - ; Returns:. opencl; public OpenCVDnn.Builder opencl(); Specify OpenCL target. It probably won't help, but perhaps worth a try. Returns:. opencl16; public OpenCVDnn.Builder opencl16(); Specify OpenCL target with 16-bit floating point. ; It probably won't help, but perhaps worth a try. Returns:. cuda; public OpenCVDnn.Builder cuda(); Request CUDA backend and target, if available. Returns:. cpu; public OpenCVDnn.Builder cpu(); Request CPU backend and target, if available. Returns:. cuda16; public OpenCVDnn.Builder cuda16(); Request CUDA backend and target, if available, with 16-bit floating point. Returns:. target; public OpenCVDnn.Builder target(int target); Specify the target, e.g. opencv_dnn.DNN_TARGET_CUDA. Parameters:; target - ; Returns:; See Also:. cuda(); opencl(). backend; public OpenCVDnn.Builder backend(int backend); Specify the backend, e.g. opencv_dnn.DNN_BACKEND_CUDA. Parameters:; backend - ; Returns:; See Also:. cuda(); opencl(). mean; public OpenCVDnn.Builder mean(Scalar mean); Mean values which should be subtracted from the image channels before input to the Net. Parameters:; mean - ; Returns:. scale; public OpenCVDnn.Builder scale(double scale); Scale values, by which channels should be multiplied (after mean subtraction) before input to the Net. Parameters:; scale - ; Returns:. size; public OpenCVDnn.Builder size(int width,; int height); Input width and height. Parameters:; width - ; height - ; Returns:. size; public OpenCVDnn.Builder size(Size size); Input width and height. Parameters:; size - ; Returns:. modelTy",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html:3795,avail,available,3795,javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html,1,['avail'],['available']
Availability,"e called in an Application.start(Stage) method, ; although could potentially be called later from another JavaFX application.; ; Afterwards, calls to getInstance() will return the QuPath instance. Parameters:; stage - the stage to use for the QuPath UI (usually from Application.start(Stage)); hostServices - host services from the JavaFX Application, if available; Returns:; Throws:; IllegalStateException - if an instance of QuPath is already running (i.e. getInstance() is not null); See Also:. createInstance(Stage); launchInstanceFromSwing(). createHiddenInstance; public static QuPathGUI createHiddenInstance(); throws IllegalStateException; Create a new QuPath instance that is not visible (i.e. its stage is not shown). Returns:; Throws:; IllegalStateException. launchInstanceFromSwing; public static void launchInstanceFromSwing(); Static method to launch QuPath from within a Swing/AWT application.; ; This aims to handle several things:; ; initializing JavaFX in the appropriate thread; flagging that shutting down QuPath should not terminate the JVM; showing the QuPath UI window. This can potentially be used from other environments (e.g. MATLAB, Fiji, Python).; Afterwards, calls to getInstance() will return the QuPath instance as soon as it is available.; However, note that depending upon the thread from which this method is called, the QuPath instance may not ; be available until some time after the method returns.; ; If there is already an instance of QuPath running, this requests that it is made visible - but otherwise does nothing. requestAutomaticUpdateCheck; public void requestAutomaticUpdateCheck(); Request an automated update check in a background thread.; This will use the user preferences to determine whether or how to check for updates ; (i.e. if the preferences have disabled an update check, then it will not be run). See Also:. requestFullUpdateCheck(). requestFullUpdateCheck; public void requestFullUpdateCheck(); Request a manual update check in a backgroun",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:14211,down,down,14211,javadoc/docs/qupath/lib/gui/QuPathGUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html,1,['down'],['down']
Availability,"e channels to be the default for this kind of server, i.e. a single channel with ImageServerMetadata.DEFAULT_CLASSIFICATION_LABELS_CHANNEL. Parameters:; type - ; Returns:. classificationLabels; public ImageServerMetadata.Builder classificationLabels(Map<Integer,PathClass> classificationLabels); Specify the interpretation of classification labels. Only relevant for ImageServerMetadata.ChannelType.CLASSIFICATION. Parameters:; classificationLabels - ; Returns:. rgb; public ImageServerMetadata.Builder rgb(boolean isRGB); Specify that the image stores pixels in (A)RGB form. Parameters:; isRGB - ; Returns:. pixelType; public ImageServerMetadata.Builder pixelType(PixelType pixelType); Specify the bit-depth of the image. Parameters:; pixelType - ; Returns:. levelsFromDownsamples; public ImageServerMetadata.Builder levelsFromDownsamples(double... downsamples); Specify downsample values for pyramidal levels.; The appropriate image sizes will be computed based upon these. Parameters:; downsamples - ; Returns:; See Also:. levels(Collection). levels; public ImageServerMetadata.Builder levels(Collection<ImageServerMetadata.ImageResolutionLevel> levels); Specify resolution levels, where the largest image should come first.; ; Normally level[0].width == width && level[0].height == height, but this is not ; strictly required; for example, it is permissible for the server to supply only resolutions lower than ; the full image if these ought to be upsampled elsewhere.; ; In other words, the width and height encode the size of the image as it should be ; interpreted, while the levels refer to the size of the rasters actually available here. Parameters:; levels - ; Returns:. sizeZ; public ImageServerMetadata.Builder sizeZ(int sizeZ); Specify the number of z-slices. Parameters:; sizeZ - ; Returns:. sizeT; public ImageServerMetadata.Builder sizeT(int sizeT); Specify the number of time points. Parameters:; sizeT - ; Returns:. pixelSizeMicrons; public ImageServerMetadata.Builder pixelSizeMi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.Builder.html:6378,down,downsamples,6378,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.Builder.html,1,['down'],['downsamples']
Availability,"e have H-DAB staining, by checking the names of the first two stains and confirming that the third stain is a residual.; Note the order of the stains must be 1-Hematoxylin, 2-DAB, 3-residual (missing). Returns:. changeStain; public ColorDeconvolutionStains changeStain(StainVector stainNew,; int stainNumber); Create a new stains object, identical to this one but for one StainVector having been changed. Parameters:; stainNew - ; stainNumber - ; Returns:. changeName; public ColorDeconvolutionStains changeName(String name); Create a new stains object with the same StainVectors but a new name. Parameters:; name - ; Returns:. changeMaxValues; public ColorDeconvolutionStains changeMaxValues(double maxRed,; double maxGreen,; double maxBlue); Create a new stains object with the same StainVectors but new max (background) values. Parameters:; maxRed - ; maxGreen - ; maxBlue - ; Returns:. getStain; public StainVector getStain(int n); Get a specified color deconvolution stain vector, where n should be 1, 2 or 3 ; (because color deconvolution on a 3-channel image can recover [to some extent] up to 3 stains).; ; If only 2 stains are set (i.e. stain1 and stain2), then a third stain is computed; orthogonal to the first two, with the name 'residual'. Parameters:; n - ; Returns:; The requested stain vector, or null if n is out of range or the stain was not set. getStains; public Collection<StainVector> getStains(boolean includeResidual); Get a collection of all the stains. Parameters:; includeResidual - if true, include residual stains in the list. If false, only include non-residual stains.; Returns:; a collection of stains. getName; public String getName(); Get the stains name. Returns:. getStainNumber; public int getStainNumber(StainVector stain); Get the number for a specific stain (1, 2 or 3). Parameters:; stain - ; Returns:. getMaxRed; public double getMaxRed(); Get the maximum value for the red channel (default = 255). Returns:. getMaxGreen; public double getMaxGreen(); Get the",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.html:8596,recover,recover,8596,javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorDeconvolutionStains.html,1,['recover'],['recover']
Availability,"e if a project was created, false otherwise (e.g. the user cancelled). promptToOpenProject; public static boolean promptToOpenProject(QuPathGUI qupath); Prompt the user to open an existing project and set it as active. Parameters:; qupath - the QuPathGUI instance for which the project should be opened.; Returns:; true if a project was opened, false otherwise (e.g. the user cancelled). launchTMADataViewer; public static void launchTMADataViewer(QuPathGUI qupath); Open new window with the TMA data viewer. Parameters:; qupath - current QuPathGUI instance (may be null). distanceToAnnotations2D; public static void distanceToAnnotations2D(ImageData<?> imageData,; boolean signedDistances); Compute the distance between all detections and the closest annotation, for all annotation classifications. Parameters:; imageData - the image data to process; signedDistances - if true, use signed distances. detectionCentroidDistances2D; public static void detectionCentroidDistances2D(ImageData<?> imageData); Compute the distance between the centroids of all detections, for all available classifications. Parameters:; imageData - the image data to process. promptToSetGridLineSpacing; public static void promptToSetGridLineSpacing(OverlayOptions options); Prompt to input the spacing for the grid lines optionally displayed on viewers. Parameters:; options - the OverlayOptions that manage the grid lines. requestUserDirectory; public static File requestUserDirectory(boolean promptIfMissing); Request the current user directory, optionally prompting the user to request a directory if none is available. Parameters:; promptIfMissing - ; Returns:; the user directory, or null if none exists and the user did not create one. reloadImageData; public static void reloadImageData(QuPathGUI qupath,; ImageData<BufferedImage> imageData); Reload the specified image data from a previously saved version,if available. Parameters:; qupath - ; imageData - . promptToAddShapeFeatures; public static void promptToAdd",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:22839,avail,available,22839,javadoc/docs/qupath/lib/gui/commands/Commands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html,1,['avail'],['available']
Availability,"e line, with the script stopping ; if the criterion is not met.; ; Using this successfully depends upon VERSION being available.; To avoid an exception if it is not, use; ; if (VERSION != null); checkMinVersion(""0.4.0"");; ; . Parameters:; version - last known compatible version (inclusive); Throws:; UnsupportedOperationException - if the version test is not passed, of version information is unavailable; Since:; v0.4.0; See Also:. checkVersionRange(String, String). checkVersionRange; public static void checkVersionRange(String minVersion,; String maxVersion); throws UnsupportedOperationException; Check whether the current QuPath version is ≥ the specified minimum version, and < the specified maximum.; This can be added at the beginning of a script to prevent the script running if it is known to be incompatible.; ; The minimum is inclusive and maximum is exclusive so that the maximum can be given as the first version known to ; introduce a breaking change.; ; Using this successfully depends upon VERSION being available.; To avoid an exception if it is not, use; ; if (VERSION != null); checkVersionRange(""0.4.0"", ""0.5.0"");; ; . Parameters:; minVersion - last known compatible version (inclusive); maxVersion - next known incompatible version; Throws:; UnsupportedOperationException - if the version test is not passed, of version information is unavailable; Since:; v0.4.0; See Also:. checkMinVersion(String). removeObjectsOutsideImage; public static boolean removeObjectsOutsideImage(); Remove objects that are entirely outside the current image. Returns:; true if objects were removed, false otherwise; Since:; v0.4.0; See Also:. removeObjectsOutsideImage(ImageData, boolean). removeObjectsOutsideImage; public static boolean removeObjectsOutsideImage(boolean ignoreIntersecting); Remove objects that are entirely or partially outside the current image. Parameters:; ignoreIntersecting - if true, ignore objects that are intersecting the image bounds; if false, remove these intersecti",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:144461,avail,available,144461,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['avail'],['available']
Availability,"e skipped; Returns:; See Also:. computeArgMaxHistogram(WritableRaster, long[], WritableRaster, Rectangle). computeArgMaxHistogram; public static long[] computeArgMaxHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask,; Rectangle bounds); Create a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion, ; with an optional bounding rectangle. Parameters:; raster - the multi-band raster containing values to check; counts - existing histogram if it should be updated, or null if a new histogram should be created. The length should ; match the number of bands in the raster.; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; bounds - optional rectangle defining the bounds of the raster to search.; If not null, this is used with the (also optional) mask to restrict the pixels that are used.; This can give substantial performance improvements for small masked regions embedded in larger images.; Returns:; See Also:. computeArgMaxHistogram(WritableRaster, long[], WritableRaster). computeAboveThresholdCounts; public static long computeAboveThresholdCounts(WritableRaster raster,; int band,; double threshold,; WritableRaster rasterMask); Count the number of above-threshold pixels in a specified band of a raster, with optional mask. Parameters:; raster - the multi-band raster containing values to check; band - the band (channel) to consider; threshold - threshold value; pixels with values > threshold this will be counted; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; Returns:; See Also:. computeAboveThresholdCounts(WritableRaster, int, double, WritableRaster, Rectangle). computeAboveThresholdCounts; public static long computeAboveThresholdCounts(WritableRaster raster,; int band,; double threshold,; WritableRaster rasterMask,; Rectangle bounds); Count the n",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:13412,mask,masked,13412,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,1,['mask'],['masked']
Availability,"e string is null or empty. escapeFilePath; public static String escapeFilePath(String path); Escape backslashes in an absolute file path - useful when scripting. Parameters:; path - ; Returns:. clipValue; public static int clipValue(int value,; int min,; int max); Clip a value to be within a specific range. Parameters:; value - ; min - ; max - ; Returns:. clipValue; public static double clipValue(double value,; double min,; double max); Clip a value to be within a specific range. Parameters:; value - ; min - ; max - ; Returns:. almostTheSame; public static boolean almostTheSame(double n1,; double n2,; double tolerance); Test if two doubles are approximately equal, within a specified tolerance.; ; Relies on apache.common's method as the history of this method proved this task not as straightforward as initially thought.; ; Note that this calculation changed in v0.2.0-m4 and in v0.3.0. The behavior prior to v0.2.0-m4 divided the absolute difference ; by the first value only, which is not robust to differences in the input order or if the first value is negative. The behavior ; before v0.3.0 returned whether the absolute difference divided by the average is less than the specified tolerance. Parameters:; n1 - ; n2 - ; tolerance - ; Returns:. toURI; public static URI toURI(String path); throws URISyntaxException; Try to convert a path to a URI.; ; This currently does a very simple check for a known scheme at the beginning ; (""http:"", ""https:"" or """"file:"") to see if it can construct the URI directly; ; if not, it assumes the path refers to a local file (as it generally did in ; QuPath 0.1.2 and earlier). This method does not encode special characters. Parameters:; path - ; Returns:; Throws:; URISyntaxException; See Also:. toEncodedURI(String path). toEncodedURI; public static URI toEncodedURI(String path); throws URISyntaxException,; UnsupportedEncodingException,; MalformedURLException; Try to convert a path to an encoded URI.; ; URIs do not accept some characters (e.g. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:13256,robust,robust,13256,javadoc/docs/qupath/lib/common/GeneralTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html,1,['robust'],['robust']
Availability,"e tile relevant for processing. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(). Method Details. imageData; public Parameters.Builder<S,T> imageData(ImageData<BufferedImage> imageData); Set the image data. Parameters:; imageData - ; Returns:. server; public Parameters.Builder<S,T> server(ImageServer<BufferedImage> server); Set the server. This is optional, for cases when processing should be applied to a different image; from that stored in the image data. Parameters:; server - ; Returns:. region; public Parameters.Builder<S,T> region(RegionRequest region); Specify the region to use for processing. Parameters:; region - ; Returns:; See Also:. tile(TileRequest). tile; public Parameters.Builder<S,T> tile(TileRequest tile); Specify the tile relevant for processing.; If the regions are available as tile requests, these should be used instead of region requests -; because they enable more accurate contour tracing across tile boundaries. Parameters:; tile - ; Returns:; See Also:. region(RegionRequest). imageFunction; public Parameters.Builder<S,T> imageFunction(ImageSupplier<S> function); Function used ot lazily read the image. Parameters:; function - ; Returns:. maskFunction; public Parameters.Builder<S,T> maskFunction(MaskSupplier<S,T> function); Function used to lazily create a mask corresponding to the image for a specified ROI. Parameters:; function - ; Returns:. parent; public Parameters.Builder<S,T> parent(PathObject parent); Set the parent object. Parameters:; parent - ; Returns:. parentProxy; public Parameters.Builder<S,T> parentProxy(PathObject parentProxy); Optionally set a temporary object to use as a parent.; This is useful for tiled processing, when the parent object may be too large to process in a single region. Parameters:; parentProxy - ; Returns:. build; public Parameters<S,T> build(); Build the parameters. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.Builder.html:2982,mask,maskFunction,2982,javadoc/docs/qupath/lib/experimental/pixels/Parameters.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.Builder.html,3,['mask'],"['mask', 'maskFunction']"
Availability,"e v0.4.0, use PathClass.getOnePlus(PathClass). Get a standalone or derived 1+ classification, indicating weak positivity. Parameters:; parentClass - parent classification (may be null); Returns:. getTwoPlus; @Deprecated; public static PathClass getTwoPlus(PathClass parentClass); Deprecated.; since v0.4.0, use PathClass.getTwoPlus(PathClass). Get a standalone or derived 2+ classification, indicating moderate positivity. Parameters:; parentClass - parent classification (may be null); Returns:. getThreePlus; @Deprecated; public static PathClass getThreePlus(PathClass parentClass); Deprecated.; since v0.4.0, use PathClass.getThreePlus(PathClass). Get a standalone or derived 3+ classification, indicating strong positivity. Parameters:; parentClass - parent classification (may be null); Returns:. getNegative; @Deprecated; public static PathClass getNegative(PathClass parentClass); Deprecated.; since v0.4.0, use PathClass.getNegative(PathClass). Get a standalone or derived Negative classification. Parameters:; parentClass - parent classification (may be null); Returns:. getPositive; @Deprecated; public static PathClass getPositive(PathClass parentClass); Deprecated.; since v0.4.0, use PathClass.getPositive(PathClass). Get a standalone or derived Positive classification. Parameters:; parentClass - parent classification (may be null); Returns:. getPathClass; @Deprecated; public static PathClass getPathClass(PathClassFactory.StandardPathClasses pathClass); Deprecated.; since v0.4.0, use PathClass.StandardPathClasses. Get a standard PathClass. Parameters:; pathClass - ; Returns:. getPathClassUnclassified; @Deprecated; public static PathClass getPathClassUnclassified(); Deprecated.; since v0.4.0, use instead PathClass.NULL_CLASS. Return a special 'null' class to represent no classification.; ; This is useful for displaying available classes; it should not be set as the class for any object, ; rather an object that is unclassified should have a classification of null. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClassFactory.html:7367,avail,available,7367,javadoc/docs/qupath/lib/objects/classes/PathClassFactory.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClassFactory.html,1,['avail'],['available']
Availability,"e width. setLivePrediction(boolean) - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Turn on or off live prediction. setLocationStringFunction(AbstractOverlay.LocationStringFunction) - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay. Set a custom function to calculate a location string for the overlay. setLocked(boolean) - Method in class qupath.lib.objects.PathObject. Set locked status, if possible. setLocked(boolean) - Method in class qupath.lib.objects.PathROIObject. Set locked flag, indicating that the object ROI should not be modified. setLUTColor(int, int, int) - Method in class qupath.lib.display.DirectServerChannelInfo. Set the 'maximum' color, which defines the lookup table to use. setMagnification(double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the downsample factor based upon magnification values. setMaskImageNames(boolean) - Method in interface qupath.lib.projects.Project. Request that entries return masked image names, rather than the 'true' image names. setMaxDisplay(float) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; setMaxDisplay(float) - Method in interface qupath.lib.display.ChannelDisplayInfo.ModifiableChannelDisplayInfo. Set the max display value for this channel. setMaxHeight(double, Region...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Set the max height property for the specified regions. setMaxThreads(int) - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Set the maximum number of threads that may be used during live prediction. setMaxWidth(double, Region...) - Static method in class qupath.lib.gui.tools.PaneTools. Deprecated.; Set the max width property for the specified regions. setMeasurementMapper(MeasurementMapper) - Method in class qupath.lib.gui.viewer.OverlayOptions. Set the MeasurementMapper that defines how detections should be color coded according to their measurement values in viewers. setMemoizat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:933875,mask,masked,933875,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['mask'],['masked']
Availability,"e(). Get a reference to the PreferencePane. Project<BufferedImage>; getProject(). Get the value of projectProperty(). ScriptEditor; getScriptEditor(). Get a reference to the current ScriptEditor (which may or may not be open at the moment). Stage; getStage(). Get the main QuPath stage. SharedThreadPoolManager; getThreadPoolManager(). Get a SharedThreadPoolManager to help with submitting tasks in other threads. ToolBar; getToolBar(). Get the main toolbar. ToolManager; getToolManager(). Get the ToolManager that handles available and selected tools. UndoRedoManager; getUndoRedoManager(). Get the UndoRedoManager, which can be useful if needing to clear it in cases where available memory is low. static Version; getVersion(). Get the current QuPath version. QuPathViewer; getViewer(). Get the currently active viewer. ViewerActions; getViewerActions(). Get the associations associated with QuPath image viewers. ViewerManager; getViewerManager(). Get the viewer manager, which gives access to all the viewers available within this QuPath instance. ReadOnlyObjectProperty<ImageData<BufferedImage>>; imageDataProperty(). Read-only property containing the image open within the currently-active viewer. void; installActions(Collection<? extends org.controlsfx.control.action.Action> actions). Install the specified actions. MenuItem; installCommand(String menuPath,; Runnable runnable). Install a new command in QuPath. MenuItem; installGroovyCommand(String menuPath,; File file). Install a Groovy script as a new command in QuPath. MenuItem; installGroovyCommand(String menuPath,; String script). Install a Groovy script as a new command in QuPath. MenuItem; installImageDataCommand(String menuPath,; Consumer<ImageData<BufferedImage>> command). Install a new command in QuPath that takes the current ImageData as input. boolean; isReadOnly(). Query whether QuPath is in 'read-only' mode. boolean; isStandalone(). Query whether this is a standalone QuPathGUI instance, as flagged during startup. sta",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:6147,avail,available,6147,javadoc/docs/qupath/lib/gui/QuPathGUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html,1,['avail'],['available']
Availability,"e(QuPathGUI, ImageData<BufferedImage>) - Static method in class qupath.lib.gui.commands.Commands. Show a measurement table for all detection objects. showDetectionsProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showEditor() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; showEditor() - Method in interface qupath.lib.gui.scripting.ScriptEditor. Show the script editor. showErrorMessage(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message. showErrorMessage(String, Throwable) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message, displaying the localized message of a Throwable. showErrorMessage(String, Node) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message, with the content defined within a Node. showErrorNotification(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error notification. showErrorNotification(String, Throwable) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error notification, displaying the localized message of a Throwable. showExperimentalCommands - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; showExperimentalOptionsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Flag to indicate that menu items marked 'experimental' should be shown to the user. showGridProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showHistogram(String) - Method in class qupath.lib.gui.charts.HistogramDisplay. Show the histogram for a specified data column. showImageNameInTitle - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; showImageNameInTitleProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Property specifying if QuPath should show the image title in the main window title. showInfoNotification(String, String) - S",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:964961,error,error,964961,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['error'],['error']
Availability,"e). owner; public Dialogs.Builder owner(Window owner); Deprecated.; Specify the dialog owner. Parameters:; owner - dialog title; Returns:; this builder. resizable; public Dialogs.Builder resizable(); Deprecated.; Make the dialog resizable (but default it is not). Returns:; this builder. nonModal; public Dialogs.Builder nonModal(); Deprecated.; Specify that the dialog should be non-modal.; By default, most dialogs are modal (and therefore block clicks to other windows). Returns:; this builder. modality; public Dialogs.Builder modality(Modality modality); Deprecated.; Specify the modality of the dialog. Parameters:; modality - requested modality; Returns:; this builder. alertType; public Dialogs.Builder alertType(Alert.AlertType type); Deprecated.; Create a dialog styled as a specified alert type. Parameters:; type - ; Returns:; this builder. warning; public Dialogs.Builder warning(); Deprecated.; Create a warning alert dialog. Returns:; this builder. error; public Dialogs.Builder error(); Deprecated.; Create an error alert dialog. Returns:; this builder. information; public Dialogs.Builder information(); Deprecated.; Create an information alert dialog. Returns:; this builder. confirmation; public Dialogs.Builder confirmation(); Deprecated.; Create an confirmation alert dialog. Returns:; this builder. buttons; public Dialogs.Builder buttons(ButtonType... buttonTypes); Deprecated.; Specify the buttons to display in the dialog. Parameters:; buttonTypes - buttons to use; Returns:; this builder. buttons; public Dialogs.Builder buttons(String... buttonNames); Deprecated.; Specify the buttons to display in the dialog. Parameters:; buttonNames - names of buttons to use; Returns:; this builder. width; public Dialogs.Builder width(double width); Deprecated.; Specify the dialog width. Parameters:; width - requested width; Returns:; this builder. height; public Dialogs.Builder height(double height); Deprecated.; Specify the dialog height. Parameters:; height - requested height; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.Builder.html:5299,error,error,5299,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.Builder.html,1,['error'],['error']
Availability,"e, double). updatePlane; public ROI updatePlane(ImagePlane plane); Description copied from interface: ROI; Create a new ROI defining the same region on a different ImagePlane.; The original ROI is unchanged. Specified by:; updatePlane in interface ROI; Parameters:; plane - the new plane to use; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Desc",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html:10211,avail,available,10211,javadoc/docs/qupath/lib/roi/GeometryROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/GeometryROI.html,1,['avail'],['available']
Availability,"e, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. framework; public OpenCVDnn.Builder framework(String name); Specify the framework (used to identify the appropriate loader for the model). Parameters:; name - ; Returns:. config; public OpenCVDnn.Builder config(String pathConfig); Path to config file (if required). Parameters:; pathConfig - ; Returns:. config; public OpenCVDnn.Builder config(URI pathConfig); Path to config file (if required). Parameters:; pathConfig - ; Returns:. name; public OpenCVDnn.Builder name(String name); User-friendly name to use with this model. Parameters:; name - ; Returns:. opencl; public OpenCVDnn.Builder opencl(); Specify OpenCL target. It probably won't help, but perhaps worth a try. Returns:. opencl16; public OpenCVDnn.Builder opencl16(); Specify OpenCL target with 16-bit floating point. ; It probably won't help, but perhaps worth a try. Returns:. cuda; public OpenCVDnn.Builder cuda(); Request CUDA backend and target, if available. Returns:. cpu; public OpenCVDnn.Builder cpu(); Request CPU backend and target, if available. Returns:. cuda16; public OpenCVDnn.Builder cuda16(); Request CUDA backend and target, if available, with 16-bit floating point. Returns:. target; public OpenCVDnn.Builder target(int target); Specify the target, e.g. opencv_dnn.DNN_TARGET_CUDA. Parameters:; target - ; Returns:; See Also:. cuda(); opencl(). backend; public OpenCVDnn.Builder backend(int backend); Specify the backend, e.g. opencv_dnn.DNN_BACKEND_CUDA. Parameters:; backend - ; Returns:; See Also:. cuda(); opencl(). mean; public OpenCVDnn.Builder mean(Scalar mean); Mean values which should be subtracted from the image channels before input to the Net. Parameters:; mean - ; Returns:. scale; public OpenCVDnn.Builder scale(double scale); Scale values, by which channels should be multiplied (after mean subtraction) before input to the Net. Parameters:; scale - ; Returns:. size; public OpenCVDnn.Builder siz",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html:3602,avail,available,3602,javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/OpenCVDnn.Builder.html,1,['avail'],['available']
Availability,"e, i.e. importFromCSV(File, PathObjectHierarchy) - Static method in class qupath.lib.io.TMAScoreImporter. Import TMA scores from a file into the TMAGrid of an object hierarchy. importFromCSV(String, PathObjectHierarchy) - Static method in class qupath.lib.io.TMAScoreImporter. Import TMA scores from a String into the TMAGrid of an object hierarchy. importObjectsFromFile(String) - Static method in class qupath.lib.scripting.QP. Import all PathObjects from the given file. importPreferences(InputStream) - Static method in class qupath.lib.gui.prefs.PathPrefs. Import preferences from a stream. imposeMaxima(FloatProcessor, Roi) - Static method in class qupath.imagej.processing.MorphologicalReconstruction. Ensure that a FloatProcessor only has region maxima within a specified Roi, using morphological reconstruction. imposeMaxima(FloatProcessor, ImageProcessor) - Static method in class qupath.imagej.processing.MorphologicalReconstruction. Ensure that a FloatProcessor only has region maxima within a specified mask, using morphological reconstruction. imposeMinima(FloatProcessor, Roi) - Static method in class qupath.imagej.processing.MorphologicalReconstruction. Ensure that a FloatProcessor only has region minima within a specified Roi, using morphological reconstruction. INACTIVE_SERVER - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; INCLUDE_IGNORED - Enum constant in enum class qupath.opencv.ml.pixel.PixelClassifierTools.CreateObjectOptions. Generate objects for ignored classes (default is not to). includeOnlyColumns(String...) - Method in class qupath.lib.gui.tools.MeasurementExporter. Specify the columns that will be included in the export. includeOverlays(boolean) - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Specify whether overlays should be included. includePartialTiles(boolean) - Method in class qupath.lib.images.writers.TileExporter. Specify whether incomplete tiles at image boundaries should be included. info(String) - ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:599537,mask,mask,599537,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['mask'],['mask']
Availability,"e,; File dirBase,; String defaultName,; Map<String,String> filters). Deprecated.; Prompt user to select a file path to save, providing zero or more file extensions as an option. static <T> T; showChoiceDialog(String title,; String message,; Collection<T> choices,; T defaultChoice). Deprecated.; Show a choice dialog with a collection of choices (selection from ComboBox or similar). static <T> T; showChoiceDialog(String title,; String message,; T[] choices,; T defaultChoice). Deprecated.; Show a choice dialog with an array of choices (selection from ComboBox or similar). static boolean; showConfirmDialog(String title,; String text). Deprecated.; Show a confirm dialog (OK/Cancel). static boolean; showConfirmDialog(String title,; Node node). Deprecated.; Show a confirm dialog (OK/Cancel). static void; showErrorMessage(String title,; String message). Deprecated.; Show an error message. static void; showErrorMessage(String title,; Throwable e). Deprecated.; Show an error message, displaying the localized message of a Throwable. static void; showErrorMessage(String title,; Node node). Deprecated.; Show an error message, with the content defined within a Node. static void; showErrorNotification(String title,; String message). Deprecated.; Show an error notification. static void; showErrorNotification(String title,; Throwable e). Deprecated.; Show an error notification, displaying the localized message of a Throwable. static void; showInfoNotification(String title,; String message). Deprecated.; Show an info notification. static Double; showInputDialog(String title,; String message,; Double initialInput). Deprecated.; Show an input dialog requesting a numeric value. static String; showInputDialog(String title,; String message,; String initialInput). Deprecated.; Show an input dialog requesting a String input. static boolean; showMessageDialog(String title,; String message). Deprecated.; Show a standard message dialog. static boolean; showMessageDialog(String title,; Node node",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:3242,error,error,3242,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['error'],['error']
Availability,"e. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(String text); Create a warning message with static text. Parameters:; text - ; Returns:. warning; public static InfoMessage warning(ObservableValue<String> text,; ObservableNumberValue count); Create a warning message with a count. Parameters:; text - ; count - ; Returns:. warning; public static InfoMessage warning(ObservableNumberValue count); Create a warning message to show a count of warnings. Parameters:; count - ; Returns:. warning; public static InfoMessage warning(String text,; int count); Create a warning message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text); Create an error message. Parameters:; text - ; Returns:. error; public static InfoMessage error(String text); Create an error message with static text. Parameters:; text - ; Returns:. error; public static InfoMessage error(ObservableValue<String> text,; ObservableNumberValue count); Create an error message with a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(String text,; int count); Create an error message with static text and a count. Parameters:; text - ; count - ; Returns:. error; public static InfoMessage error(ObservableNumberValue count); Create a error message to show a count of errors. Parameters:; count - ; Returns:. textProperty; public ReadOnlyStringProperty textProperty(); Read only property containing the message text. Returns:; See Also:. getText(). getText; public String getText(); Text of the message. Returns:. countProperty; public ReadOnlyObjectProperty<Number> countProperty(); Read only property containing any count associated with the text (may be null). Returns:; See Also:. getCount(). getCount; public int getCount(); Counts associated with the message, or -1 if the count is null. Returns:. getMessageType; public InfoMessage.MessageType getMessageType(); Type of the mes",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:5306,error,error,5306,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,3,['error'],['error']
Availability,"eDetections(). useFilter; public LabeledImageServer.Builder useFilter(Predicate<PathObject> filter); Use a custom method of selecting objects for inclusion.; The default is to use annotations. Parameters:; filter - the filter that determines whether an object will be included or not; Returns:; See Also:. useAnnotations(). grayscale; public LabeledImageServer.Builder grayscale(); Use grayscale LUT, rather than deriving colors from classifications.; This can streamline import in software that automatically converts paletted images to RGB. Returns:; Since:; v0.4.0; See Also:. grayscale(boolean). grayscale; public LabeledImageServer.Builder grayscale(boolean grayscaleLut); Optionally use grayscale LUT, rather than deriving colors from classifications.; This can streamline import in software that automatically converts paletted images to RGB. Parameters:; grayscaleLut - ; Returns:; Since:; v0.4.0; See Also:. grayscale(). downsample; public LabeledImageServer.Builder downsample(double downsample); Specify downsample factor. This is very important because it defines ; the resolution at which shapes will be drawn and the line thickness is determined. Parameters:; downsample - ; Returns:. tileSize; public LabeledImageServer.Builder tileSize(int tileSize); Set tile width and height (square tiles). Parameters:; tileSize - ; Returns:. tileSize; public LabeledImageServer.Builder tileSize(int tileWidth,; int tileHeight); Set tile width and height. Parameters:; tileWidth - ; tileHeight - ; Returns:. lineThickness; public LabeledImageServer.Builder lineThickness(float thickness); Thickness of boundary lines and line annotations, defined in terms of pixels at the ; resolution specified by the downsample value of the server. Parameters:; thickness - ; Returns:. useUniqueLabels; @Deprecated; public LabeledImageServer.Builder useUniqueLabels(); Deprecated.; in favor of useInstanceLabels(). Returns:. useInstanceLabels; public LabeledImageServer.Builder useInstanceLabels(); Request that u",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.Builder.html:7872,down,downsample,7872,javadoc/docs/qupath/lib/images/servers/LabeledImageServer.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.Builder.html,3,['down'],['downsample']
Availability,"eImageDataAction(Consumer<ImageData<BufferedImage>>) - Method in class qupath.lib.gui.QuPathGUI. Create an Action that depends upon an ImageData. createImageDataAction(Consumer<ImageData<BufferedImage>>, String) - Method in class qupath.lib.gui.QuPathGUI. Create an Action that depends upon an ImageData. createImagePlusImageSupplier() - Static method in class qupath.lib.experimental.pixels.ImageJProcessor. Create an ImageSupplier that returns an ImageJ ImagePlus. createImagePlusMaskSupplier() - Static method in class qupath.lib.experimental.pixels.ImageJProcessor. Create a MaskSupplier that returns an ImageJ ByteProcessor. createImageRegionPredicate(ImageRegion) - Static method in class qupath.lib.objects.PathObjectTools. Create a predicate that only accepts PathObjects if they have ROIs that fall within a specified ImageRegion. createImageRegionStore() - Static method in class qupath.lib.gui.images.stores.ImageRegionStoreFactory. Create an ImageRegionStore using a default tile cache size, based upon the available memory and user preferences. createImageRegionStore(long) - Static method in class qupath.lib.gui.images.stores.ImageRegionStoreFactory. Create an ImageRegionStore with a specified tile cache size, in bytes. createImageStack(ImageProcessor...) - Static method in class qupath.imagej.tools.IJTools. Create an ImageStack containing the specified ImageProcessors. createIndexColorModel(int, int, int, boolean) - Static method in class qupath.lib.color.ColorToolsAwt. Get an IndexColorModel representing a linear LUT based on a RGB color. createIndexedColorModel(Map<Integer, Integer>, boolean) - Static method in class qupath.lib.color.ColorModelFactory. Create an indexed colormap for a labelled (indexed color) image. createIndexedColorModel8bit(ColorMaps.ColorMap) - Static method in class qupath.lib.color.ColorModelFactory. Create an 8-bit IndexColorModel from a ColorMaps.ColorMap. createIndexedColorModel8bit(ColorMaps.ColorMap, int) - Static method in class qupath.l",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:185838,avail,available,185838,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"ePlus imp,; ImageServer<?> server); Estimate the downsample factor for an image region extracted from an image server, based upon ; the ratio of pixel sizes if possible or ratio of dimensions if necessary.; ; Note that the ratio of dimensions is only suitable if the full image has been extracted!. Parameters:; imp - ; server - ; Returns:. convertToPathObject; @Deprecated; public static PathObject convertToPathObject(ImagePlus imp,; ImageServer<?> server,; Roi roi,; double downsampleFactor,; Function<ROI,PathObject> creator,; ImagePlane plane); Deprecated.; use instead convertToPathObject(Roi, double, double, double, Function, ImagePlane). Create a PathObject for a specific ImageJ Roi.; This method has been deprecated, since its signature was misleading (the server was not used). Parameters:; imp - ; server - ; roi - ; downsampleFactor - ; creator - ; plane - ; Returns:. convertToPathObject; public static PathObject convertToPathObject(Roi roi,; double xOrigin,; double yOrigin,; double downsampleFactor,; Function<ROI,PathObject> creator,; ImagePlane plane); Create a PathObject for a specific ImageJ Roi. Parameters:; roi - the ImageJ ROI; xOrigin - the x-origin to translate the Roi; should be Calibration.xOrigin if available, or 0 otherwise; yOrigin - the y-origin to translate the Roi; should be Calibration.yOrigin if available, or 0 otherwise; downsampleFactor - the downsample factor used for rescaling (or 1.0 for no rescaling); creator - a function; plane - the specific plane to use for the QuPath ROI; if null, the ImageJ Roi position properties will be used instead, where possible; Returns:; a PathObject or null if no object could be created (e.g. the ImageJ roi is null or incompatible); Since:; v0.4.0; See Also:. convertToPathObject(Roi, double, Function, ImagePlus). convertToPathObject; public static PathObject convertToPathObject(Roi roi,; double downsampleFactor,; Function<ROI,PathObject> creator,; ImagePlus imp); Create a PathObject for a specific ImageJ Roi, u",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:11891,down,downsampleFactor,11891,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,1,['down'],['downsampleFactor']
Availability,"eServer.Builder; addUnclassifiedLabel(int label,; Integer color). Add a single label for objects that are unclassified, where the label represents the integer label used for ; annotations that have no classification set. LabeledImageServer.Builder; backgroundLabel(int label). Specify the background label (0 by default). LabeledImageServer.Builder; backgroundLabel(int label,; Integer color). Specify the background label (0 by default) and color. LabeledImageServer; build(). Build the ImageServer with the requested parameters. LabeledImageServer.Builder; downsample(double downsample). Specify downsample factor. LabeledImageServer.Builder; grayscale(). Use grayscale LUT, rather than deriving colors from classifications. LabeledImageServer.Builder; grayscale(boolean grayscaleLut). Optionally use grayscale LUT, rather than deriving colors from classifications. LabeledImageServer.Builder; lineThickness(float thickness). Thickness of boundary lines and line annotations, defined in terms of pixels at the ; resolution specified by the downsample value of the server. LabeledImageServer.Builder; maxOutputChannelLimit(int maxChannels). Specify the maximum number of output channels allowed before QuPath will throw an exception. LabeledImageServer.Builder; multichannelOutput(boolean doMultichannel). If true, the output image consists of multiple binary images concatenated as different channels, ; so that the channel number relates to a classification. LabeledImageServer.Builder; setBoundaryLabel(String pathClassName,; int label). Set the classification and label to use for boundaries for classified areas. LabeledImageServer.Builder; setBoundaryLabel(String pathClassName,; int label,; Integer color). Set the classification and label to use for boundaries for classified areas. LabeledImageServer.Builder; setBoundaryLabel(PathClass pathClass,; int label). Set the classification and label to use for boundaries for classified areas. LabeledImageServer.Builder; setBoundaryLabel(PathCla",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.Builder.html:3524,down,downsample,3524,javadoc/docs/qupath/lib/images/servers/LabeledImageServer.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.Builder.html,1,['down'],['downsample']
Availability,"eServer<BufferedImage> server,; RegionRequest regionRequest,; Geometry clipArea,; ContourTracing.ChannelThreshold... thresholds). Trace one or more geometries in an image. static Geometry; traceGeometry(ImageServer<BufferedImage> server,; RegionRequest regionRequest,; Geometry clipArea,; int channel,; double minThreshold,; double maxThreshold). Trace a geometry from a single channel of a single image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ContourTracing; public ContourTracing(). Method Details. labelsToDetections; public static List<PathObject> labelsToDetections(Collection<Path> paths,; boolean mergeByLabel); throws IOException; Convert labeled images to detection objects, determining the region from the filename if possible. Parameters:; paths - paths to image files (e.g. PNGs); mergeByLabel - if true, merge objects with the same ROI label; Returns:; a list of objects generated from the labels; Throws:; IOException - if there is an error reading the images. labelsToCells; public static List<PathObject> labelsToCells(Collection<Path> paths,; boolean mergeByLabel); throws IOException; Convert 2-channel labeled images to cell objects, determining the region from the filename if possible. Parameters:; paths - paths to image files (e.g. PNGs); mergeByLabel - if true, merge objects with the same ROI label; Returns:; a list of objects generated from the labels; Throws:; IOException - if there is an error reading the images. labelsToDetections; public static List<PathObject> labelsToDetections(Path path,; RegionRequest request); throws IOException; Convert a labeled image to detection objects. Parameters:; path - path to labeled image file (e.g. PNGs); request - a RegionRequest representing the region or the full image, used to reposition and rescale ROIs.; If not provided, this will be extracted from the filename, if possible.; Returns:; a list of obje",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html:6587,error,error,6587,javadoc/docs/qupath/lib/analysis/images/ContourTracing.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html,1,['error'],['error']
Availability,"eanProperty; fillAnnotationsProperty();  ; BooleanProperty; fillDetectionsProperty();  ; FloatProperty; fontSizeProperty();  ; boolean; getAllPathClassesVisible();  ; OverlayOptions.DetectionDisplayMode; getDetectionDisplayMode(). Get the current OverlayOptions.DetectionDisplayMode. boolean; getFillAnnotations();  ; boolean; getFillDetections();  ; float; getFontSize();  ; GridLines; getGridLines();  ; MeasurementMapper; getMeasurementMapper();  ; float; getOpacity(). Get the global opacity for overlay drawing. RegionFilter; getPixelClassificationRegionFilter();  ; boolean; getShowAnnotations();  ; boolean; getShowCellBoundaries(). Query the current OverlayOptions.DetectionDisplayMode to see if cell boundary ROIs should be drawn. boolean; getShowCellNuclei(). Query the current OverlayOptions.DetectionDisplayMode to see if nuclei ROIs should be drawn. boolean; getShowConnections();  ; boolean; getShowDetections();  ; boolean; getShowGrid();  ; boolean; getShowNames();  ; boolean; getShowPixelClassification();  ; boolean; getShowTMACoreLabels();  ; boolean; getShowTMAGrid();  ; float; getThickStrokeWidth(double downsample). Get the requested stroke thickness to use when drawing ROIs that should be represented with 'thick' lines (annotations, TMA cores). ObjectProperty<GridLines>; gridLinesProperty();  ; ObservableSet<PathClass>; hiddenClassesProperty();  ; boolean; isPathClassHidden(PathClass pathClass). Query whether objects with a specified classification should be displayed or hidden. ReadOnlyLongProperty; lastChangeTimestamp(). Get a property representing the timestamp of the last recorded change for any property. ObjectProperty<MeasurementMapper>; measurementMapperProperty();  ; FloatProperty; opacityProperty(). Property representing the global opacity for overlay drawing. ObjectProperty<RegionFilter>; pixelClassificationFilterRegionProperty();  ; void; resetMeasurementMapper(). Reset any MeasurementMapper, so that measurements are not used to determine object col",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html:3239,down,downsample,3239,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,1,['down'],['downsample']
Availability,"eate a checkbox from an action.; This stores a reference to the action as a property of the checkbox. Parameters:; action - the action from which to construct the checkbox; Returns:; a new CheckBox configured according to the action. createToggleButtonWithGraphicOnly; public static ToggleButton createToggleButtonWithGraphicOnly(org.controlsfx.control.action.Action action); Create a toggle button from an action, showing only the graphic and not any text.; This stores a reference to the action as a property of the toggle button. Parameters:; action - ; Returns:. createToggleButton; public static ToggleButton createToggleButton(org.controlsfx.control.action.Action action); Create a toggle button from an action, showing both the text and graphic if available.; This stores a reference to the action as a property of the toggle button. Parameters:; action - ; Returns:. createButton; public static Button createButton(org.controlsfx.control.action.Action action); Create a button from an action, showing both the text and graphic if available.; This stores a reference to the action as a property of the button. Parameters:; action - the action from which to construct the button; Returns:; a new Button configured according to the action. createButtonWithGraphicOnly; public static Button createButtonWithGraphicOnly(org.controlsfx.control.action.Action action); Create a button from an action, showing only the graphic and not any text.; This stores a reference to the action as a property of the button. Parameters:; action - the action from which to construct the button; Returns:; a new Button configured according to the action. createSelectableAction; public static org.controlsfx.control.action.Action createSelectableAction(ObservableValue<Boolean> property,; String name,; Node icon,; KeyCombination accelerator); Create an action with its Action.selectedProperty() bound to a specified property, with optional graphic and accelerator. Parameters:; property - the property to which the ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html:12614,avail,available,12614,javadoc/docs/qupath/lib/gui/actions/ActionTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html,1,['avail'],['available']
Availability,"eateNewObjects; public static BooleanProperty brushCreateNewObjectsProperty; Create new objects by default when drawing with the Brush tool. The alternative is to append (discontinuous) regions to existing annotations. See Also:. brushCreateNewObjectsProperty(). brushScaleByMag; public static BooleanProperty brushScaleByMagProperty; Optionally scale the default brush tool diameter by the viewer magnification (downsample value). See Also:. brushScaleByMagProperty(). brushDiameter; public static IntegerProperty brushDiameterProperty; Default brush tool diameter, in pixels. See Also:. brushDiameterProperty(). returnToMoveMode; public static BooleanProperty returnToMoveModeProperty; Request that the GUI returns to using the PAN tool after a ROI is drawn.; This helps keep errant clicking under control, but not permitting new ROIs to be made without; explicitly activating a ROI too. See Also:. returnToMoveModeProperty(). tileCachePercentage; public static DoubleProperty tileCachePercentageProperty; Requested percentage of available memory to use for tile caching. See Also:. tileCachePercentageProperty(). useCalibratedLocationString; public static BooleanProperty useCalibratedLocationStringProperty; Show the cursor location on a viewer in calibrated units, rather than pixels. See Also:. useCalibratedLocationStringProperty(). useSelectedColor; public static BooleanProperty useSelectedColorProperty; Use a specified color for highlighting selected objects in the viewer. See Also:. useSelectedColorProperty(). showPointHulls; public static BooleanProperty showPointHullsProperty; Show the convex hull for point annotations within the viewer. See Also:. showPointHullsProperty(). multipointTool; public static BooleanProperty multipointToolProperty; Create multiple points within the same annotation when using the counting tool.; The alternative is to create a new annotation for each new point. See Also:. multipointToolProperty(). tmaExportDownsample; public static DoubleProperty tmaE",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:35541,avail,available,35541,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['avail'],['available']
Availability,"eckpoint"");; // Do something; timeit.checkpoint(""Second checkpoint"");; // Do something else; timeit.stop();; System.out.println(timeit);; ; . Finally, a Timeit can be used to repeatedly run the same code multiple times, and print the timings at the end.; ; ; var timeit = new Timeit(); .microseconds(); .checkpointAndRun(""Greeting"", () -> System.out.println(""Hello!""), 10); .summarizeCheckpoints(); .stop();; System.out.println(timeit);; ; . Since:; v0.4.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Timeit.Checkpoint. Class representing a named checkpoint with a timestamp in nanoseconds. Constructor Summary; Constructors. Constructor; Description; Timeit();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Timeit; autoUnits();  ; Timeit; checkpoint(). Create a new checkpoint with a default name. Timeit; checkpoint(String name). Create a new checkpoint with the specified name. Timeit; checkpointAndRun(Runnable runnable). Create a checkpoint with the default name and immediately run the provided runnable. Timeit; checkpointAndRun(String name,; Runnable runnable). Create a checkpoint and immediately run the provided Runnable. Timeit; checkpointAndRun(String name,; Runnable runnable,; int nIterations). Create a checkpoint and immediately run the provided Runnable nIterations times. List<Timeit.Checkpoint>; getCheckpoints(). Get an list of all the checkpoints. int; getMaxDecimalPlaces(). Get the maximum number of decimal places when reporting timings. static void; main(String[] args);  ; Timeit; maxDecimalPlaces(int maxDP). Set the maximum number of decimal places when reporting timings ; using seconds or minutes. Timeit; microseconds(). Report timings in microseconds. Timeit; milliseconds(). Report timings in milliseconds. Timeit; minutes(). Report timings in minutes. Timeit; nanoseconds(). Report timings in nanoseconds. Timeit; seconds",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:1981,checkpoint,checkpoint,1981,javadoc/docs/qupath/lib/common/Timeit.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html,1,['checkpoint'],['checkpoint']
Availability,"econstruction(ImageProcessor ip,; double radius). Apply opening by reconstruction, with the specified minimum filter radius. static boolean; validateMarkerMask(ImageProcessor ipMarker,; ImageProcessor ipMask). Check that marker and mask images have the same size, and ensure that marker pixels are <= mask pixels, ; making this if necessary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MorphologicalReconstruction; public MorphologicalReconstruction(). Method Details. binaryReconstruction; public static ByteProcessor binaryReconstruction(ByteProcessor bpMarker,; ByteProcessor bpMask,; boolean permitMaskChanges); Alternative morphological reconstruction (based on ImageJ's FloodFiller) suitable for binary images only. Parameters:; bpMarker - ; bpMask - ; permitMaskChanges - ; Returns:. morphologicalReconstruction; public static boolean morphologicalReconstruction(ImageProcessor ipMarker,; ImageProcessor ipMask); Apply morphological operation using marker and mask images. The marker image is changed. Parameters:; ipMarker - ; ipMask - ; Returns:. validateMarkerMask; public static boolean validateMarkerMask(ImageProcessor ipMarker,; ImageProcessor ipMask); Check that marker and mask images have the same size, and ensure that marker pixels are <= mask pixels, ; making this if necessary. Parameters:; ipMarker - ; ipMask - ; Returns:. openingByReconstruction; public static ImageProcessor openingByReconstruction(ImageProcessor ip,; double radius); Apply opening by reconstruction, with the specified minimum filter radius. Parameters:; ip - ; radius - ; Returns:. closingByReconstruction; public static ImageProcessor closingByReconstruction(ImageProcessor ip,; double radius); Apply a morphological closing by reconstruction. Parameters:; ip - ImageProcessor to process; radius - minimum filter radius; Returns:; processed image. imposeMinima; public static void imposeMin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/MorphologicalReconstruction.html:3124,mask,mask,3124,javadoc/docs/qupath/imagej/processing/MorphologicalReconstruction.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/MorphologicalReconstruction.html,1,['mask'],['mask']
Availability,"ect) - Method in class qupath.lib.regions.RegionRequest;  ; equals(Object) - Method in class qupath.opencv.tools.LocalNormalization.SmoothingScale;  ; equals(Object) - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; equals(Object) - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; equalTo(String) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification (by name) for objects for which the specified measurement has a value exactly equal to the threshold. equalTo(PathClass) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification for objects for which the specified measurement has a value exactly equal to the threshold. error() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create an error alert dialog. error(String) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text. error(String, int) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text and a count. error(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a error message to show a count of errors. error(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message. error(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with a count. ERROR - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Error or exception. ERROR - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Error logging (only if something goes recognizably wrong). escapeFilePath(String) - Static method in class qupath.lib.common.GeneralTools. Escape backslashes in an absolute file path - useful when scripting. estimateAvailableMemory() - Static method ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:283225,error,error,283225,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['error'],['error']
Availability,"ectSelected,; PathObject previousObject,; Collection<PathObject> allSelected). Fired when the selected objects have changed. void; setActiveTool(PathTool tool). Set the active PathTool for input to this viewer. void; setBorderColor(Color color). Set the border color for this viewer. void; setCenterPixelLocation(double x,; double y). Set the image pixel to display in the center of the viewer (using image pixel coordinates at the full-resolution). void; setCursor(Cursor cursor). Set the requested cursor to display in this viewer. void; setCustomPixelLayerOverlay(PathOverlay pathOverlay). Optionally set a custom overlay to use for the pixel layer. void; setDoFasterRepaint(boolean fasterRepaint). Set flag to indicate that repaints should prefer speed over accuracy. void; setDownsampleFactor(double downsampleFactor). Set the downsample factor for this viewer. void; setDownsampleFactor(double downsampleFactor,; double cx,; double cy). Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards. void; setDownsampleFactor(double downsampleFactor,; double cx,; double cy,; boolean clipToMinMax). Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards. void; setGamma(double gamma). Set the gamma value for this viewer. void; setImageData(ImageData<BufferedImage> imageDataNew). Set the current image for this viewer. void; setMagnification(double magnification). Set the downsample factor based upon magnification values. void; setMinimumRepaintSpacingMillis(long repaintSpacingMillis). Prevent frequent repaints (temporarily) by setting a minimum time that must have elapsed; after the previous repaint for a new one to be triggered. void; setRotation(double theta). Set the rotation; angle in radians. void; setSelectedObject(PathObject pathObject). Set selected object in the current hierarchy, without centering the viewer. void; setSelectedObject(PathObject pathObject,; bo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:11295,down,downsample,11295,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,1,['down'],['downsample']
Availability,"ectory. scriptsPath - Variable in class qupath.lib.gui.panes.PreferencePane.ExtensionPreferences;  ; scriptsPath - Variable in class qupath.lib.gui.panes.PreferencePane.ScriptingPreferences;  ; scriptsPathProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Path to a directory containing scripts for quick-access through the user interface. ScriptStyler - Interface in qupath.lib.gui.scripting.richtextfx.stylers. Interface for classes that apply some styling to a RichTextFX's CodeArea. ScriptStylerProvider - Class in qupath.lib.gui.scripting.richtextfx.stylers. Class with static methods to fetch all the available ScriptStylers. ScriptStylerProvider() - Constructor for class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider;  ; ScriptSyntax - Interface in qupath.lib.gui.scripting.syntax. Interface for classes that apply some syntax formatting to an EditableText. ScriptSyntaxProvider - Class in qupath.lib.gui.scripting.syntax. Class with static methods to fetch all the available ScriptSyntaxes. ScriptSyntaxProvider() - Constructor for class qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider;  ; ScriptTab - Class in qupath.lib.gui.scripting. Class representing a script tab (e.g. scrollSpeed - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; scrollSpeedProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Percentage to scale scroll speed for zooming etc. searchDepth(int) - Method in class qupath.lib.io.UriUpdater. Maximum search depth when using UriUpdater.searchDepth(int) to match filenames in directories and subdirectories. searchPath(Path) - Method in class qupath.lib.io.UriUpdater. Search for filenames that match missing URIs, recursively up to the depth specified by UriUpdater.searchDepth(int). seconds() - Method in class qupath.lib.common.Timeit. Report timings in seconds. segment(SegmentationModel, Mat, Mat) - Static method in class qupath.opencv.dnn.DnnTools. Apply a segmentation model to an i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:890484,avail,available,890484,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"ed (or abort if it is taking too long). Specified by:; paintRegionCompletely in interface ImageRegionRenderer; Parameters:; server - ; g - ; clipShapeVisible - ; zPosition - ; tPosition - ; downsampleFactor - ; observer - ; imageDisplay - ; timeoutMilliseconds - Timeout after which a request is made from the PathImageServer directly, rather than waiting for tile requests. paintRegion; public void paintRegion(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; BufferedImage imgThumbnail,; ImageObserver observer,; ImageRenderer imageDisplay); Description copied from interface: ImageRegionRenderer; Paint an image region. Specified by:; paintRegion in interface ImageRegionRenderer; Parameters:; server - the server representing the image that shown be painted; g - the graphics object upon which to paint; clipShapeVisible - the visible shape representing the area of the graphics object that should be filled; zPosition - the z-stack position; tPosition - the timepoint position; downsampleFactor - the downsample factor; imgThumbnail - a thumbnail image; if not null, this will be used to 'fill the gaps'; observer - an ImageObserver (often ignored); imageDisplay - an ImageRenderer to convert images to RGB. close; public void close(). getTileCacheSize; public long getTileCacheSize(); Get the tile cache size, in bytes.; Image tiles larger than this cannot be cached. Returns:. getCachedThumbnail; public BufferedImage getCachedThumbnail(ImageServer<BufferedImage> server,; int zPosition,; int tPosition). registerRequest; protected void registerRequest(TileListener<BufferedImage> tileListener,; ImageServer<BufferedImage> server,; Shape clipShape,; double downsampleFactor,; int zPosition,; int tPosition); Register a request so that the tile request queue will be populated, including potentially for nearby tiles (i.e. preemptively). Parameters:; tileListener - ; server - ; clipShape - ; downsampleFactor -",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html:5855,down,downsampleFactor,5855,javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,2,['down'],"['downsample', 'downsampleFactor']"
Availability,"ed from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TMAGridOverlay; public TMAGridOverlay(OverlayOptions overlayOptions); Constructor. Parameters:; overlayOptions - overlay options to control the display of this overlay. Method Details. isVisible; public boolean isVisible(); Description copied from class: AbstractOverlay; Check overlay visibility status. If isVisible() returns false,; then calls to paintOverlay() will not do anything. Overrides:; isVisible in class AbstractOverlay; Returns:. paintOverlay; public void paintOverlay(Graphics2D g,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely); Description copied from interface: PathOverlay; Paint the overlay to a graphics object. The graphics object will have a transform applied to it, so the painting should; make use of coordinates in the original image space. Parameters:; g - Graphics2D object to which drawing should be performed. This should have any transform already applied to it.; imageRegion - The maximum image region that should be shown.; downsampleFactor - The downsample factor at which the overlay will be viewed. There is no need for rescaling according to; this value since it has already been applied to the Graphics2D as part of its AffineTransform, however; it may optionally be needed within the method e.g. to correct line thicknesses.; imageData - the ImageData associated with this overlay. If the overlay is being displayed on a viewer, this is the ImageData open ; within the viewer. Not all overlays require this, and it may be null.; paintCompletely - If true, the metho",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/TMAGridOverlay.html:2294,down,downsampleFactor,2294,javadoc/docs/qupath/lib/gui/viewer/overlays/TMAGridOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/TMAGridOverlay.html,1,['down'],['downsampleFactor']
Availability,"ed gamma correction in this viewer. PathObjectHierarchy; getHierarchy(). Get the object hierarchy for the current image data, or null if no image data is available. ImageData<BufferedImage>; getImageData(). Get the image data currently being displayed within thie viewer. ImageDisplay; getImageDisplay(). Get the ImageDisplay object used to determine how the image is converted to RGB for display. String; getImageObjectClassificationString(double x,; double y). Get a string representing the object classification x & y location in the viewer component,; or an empty String if no object is found. ImagePlane; getImagePlane(). Get the ImagePlane currently being displayed, including z and t positions. DefaultImageRegionStore; getImageRegionStore(). Get the region store used by this viewer for tile caching and painting. double; getMagnification(). Get the magnification for the image within this viewer, or Double.NaN if no image is present. double; getMaxDownsample(). Get the maximum downsample value supported by this viewer. double; getMaxROIHandleSize(). Get the maximum size for which ROI handles may be drawn. double; getMinDownsample(). Get the minimum downsample value supported by this viewer. Point2D; getMousePosition(). Get the current cursor position within this viewer, or null if the cursor is outside the viewer. String; getObjectClassificationString(double x,; double y). Get a string representing the object classification x & y location in the viewer component,; or an empty String if no object is found. List<PathOverlay>; getOverlayLayers(). Get an unmodifiable list containing the overlay layers, in order. OverlayOptions; getOverlayOptions(). Get the overlay options that control the viewer display. protected ImageRenderer; getRenderer(). Request a renderer that converts image tiles into RGB images. BufferedImage; getRGBThumbnail(). Get a thumbnail representing the image as displayed by this viewer. RoiEditor; getROIEditor(). Get the RoiEditor used by this viewer. doubl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:5847,down,downsample,5847,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,1,['down'],['downsample']
Availability,"ed percentage of available memory to use for tile caching. See Also:. tileCachePercentageProperty(). useCalibratedLocationString; public static BooleanProperty useCalibratedLocationStringProperty; Show the cursor location on a viewer in calibrated units, rather than pixels. See Also:. useCalibratedLocationStringProperty(). useSelectedColor; public static BooleanProperty useSelectedColorProperty; Use a specified color for highlighting selected objects in the viewer. See Also:. useSelectedColorProperty(). showPointHulls; public static BooleanProperty showPointHullsProperty; Show the convex hull for point annotations within the viewer. See Also:. showPointHullsProperty(). multipointTool; public static BooleanProperty multipointToolProperty; Create multiple points within the same annotation when using the counting tool.; The alternative is to create a new annotation for each new point. See Also:. multipointToolProperty(). tmaExportDownsample; public static DoubleProperty tmaExportDownsampleProperty; Default downsample factor to use when exporting TMA cores. See Also:. tmaExportDownsampleProperty(). viewerGamma; public static DoubleProperty viewerGammaProperty; Requested gamma value applied to the image in each viewer (for display only). See Also:. viewerGammaProperty(). viewerBackgroundColor; public static IntegerProperty viewerBackgroundColorProperty; Color to paint behind any image. See Also:. viewerBackgroundColorProperty(). colorDefaultObjects; public static IntegerProperty colorDefaultObjectsProperty; The default color used to display objects of any type, where a default has not otherwise been specified. See Also:. colorDefaultObjectsProperty(). colorSelectedObject; public static IntegerProperty colorSelectedObjectProperty; The default color used to display selected objects. See Also:. colorSelectedObjectProperty(). colorTMA; public static IntegerProperty colorTMAProperty; The default color used to display TMA core objects. See Also:. colorTMAProperty(). colorTMAMi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:36543,down,downsample,36543,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['down'],['downsample']
Availability,"ed; public static class Dialogs.Builder; extends Object; Deprecated.; Builder class to create a custom Dialog. Constructor Summary; Constructors. Constructor; Description; Builder(). Deprecated.;  . Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; Dialogs.Builder; alertType(Alert.AlertType type). Deprecated.; Create a dialog styled as a specified alert type. Dialog<ButtonType>; build(). Deprecated.; Build the dialog. Dialogs.Builder; buttons(String... buttonNames). Deprecated.; Specify the buttons to display in the dialog. Dialogs.Builder; buttons(ButtonType... buttonTypes). Deprecated.; Specify the buttons to display in the dialog. Dialogs.Builder; confirmation(). Deprecated.; Create an confirmation alert dialog. Dialogs.Builder; content(Node content). Deprecated.; Specify a Node to display within the dialog. Dialogs.Builder; contentText(String content). Deprecated.; Specify the dialog content text. Dialogs.Builder; error(). Deprecated.; Create an error alert dialog. Dialogs.Builder; expandableContent(Node content). Deprecated.; Specify a Node to display within the dialog as expandable content, not initially visible. Dialogs.Builder; headerText(String header). Deprecated.; Specify the dialog header text. Dialogs.Builder; height(double height). Deprecated.; Specify the dialog height. Dialogs.Builder; information(). Deprecated.; Create an information alert dialog. Dialogs.Builder; modality(Modality modality). Deprecated.; Specify the modality of the dialog. Dialogs.Builder; nonModal(). Deprecated.; Specify that the dialog should be non-modal. Dialogs.Builder; owner(Window owner). Deprecated.; Specify the dialog owner. Dialogs.Builder; prefHeight(double prefHeight). Deprecated.; Specify the preferred height of the dialog pane. Dialogs.Builder; prefWidth(double prefWidth). Deprecated.; Specify the preferred width of the dialog pane. Dialogs.Builder; resizable(). Deprecated.; Make the dialog resizable ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.Builder.html:1480,error,error,1480,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.Builder.html,1,['error'],['error']
Availability,"edImage if necessary, or return the original image unchanged ; if it is already a BufferedImage. static BufferedImage; ensureBufferedImageType(BufferedImage img,; int requestedType). Convert a BufferedImage to have a specified type. static boolean; is8bitColorType(int type). Returns true if a BufferedImage type represents an 8-bit color image. static BufferedImage; resize(BufferedImage img,; int finalWidth,; int finalHeight,; boolean smoothInterpolate). Resize the image to have the requested width/height, using area averaging and bilinear interpolation. static void; setValues(DataBuffer buffer,; double val). Set all values in a DataBuffer. static void; swapRGBOrder(BufferedImage img,; String order). Swap the order of pixels in an RGB image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. createROIMask; public static BufferedImage createROIMask(int width,; int height,; ROI roi,; RegionRequest request); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for mask; request - region that the mask should correspond to, including the origin (x & y) and downsample factor to use.; Returns:. createROIMask; public static BufferedImage createROIMask(ROI roi,; double downsample); Create a ROI mask using the minimal bounding box for the ROI. Parameters:; roi - ; downsample - ; Returns:. createROIMask; public static BufferedImage createROIMask(int width,; int height,; ROI roi,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for ma",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:4393,mask,mask,4393,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,1,['mask'],['mask']
Availability,"edImage, boolean); imageToMatBGR(java.awt.image.BufferedImage, boolean). getOpenCVPixelType; public static int getOpenCVPixelType(PixelType pixelType); throws IllegalArgumentException; Get the OpenCV type code corresponding to a PixelType.; ; Note, OpenCV has no matching type for PixelType.UINT32. In this case a signed 32-bit int ; type will be returned, and a warning logged. Parameters:; pixelType - the QuPath pixel type; Returns:; the closest OpenCV pixel type; Throws:; IllegalArgumentException - if the PixelType is unknown. apply; public static void apply(Mat mat,; DoubleUnaryOperator operator); Apply an operation to the pixels of an image.; ; No type conversion is applied; it is recommended to use floating point images, or otherwise check ; that clipping, rounding and non-finite values are handled as expected. Parameters:; mat - image; operator - operator to apply to pixels of the image, in-place. createMask; public static Mat createMask(Mat mat,; DoublePredicate predicate,; double trueValue,; double falseValue); Create a mask by applying a predicate to pixel values. Parameters:; mat - the input image; predicate - the predicate to apply to each pixel; trueValue - the value to include in the mask for pixels that match the predicate; falseValue - the value to include in the mask for pixels that do not match the predicate; Returns:; the mask; See Also:. createBinaryMask(Mat, DoublePredicate). createBinaryMask; public static Mat createBinaryMask(Mat mat,; DoublePredicate predicate); Create a binary mask (0, 255 values) by applying a predicate to pixel values. Parameters:; mat - the input image; predicate - the predicate to apply to each pixel; Returns:; the mask; See Also:. createMask(Mat, DoublePredicate, double, double). replaceValues; public static void replaceValues(Mat mat,; double originalValue,; double newValue); Replace a specific value in an array.; ; If the value to replace is NaN, use instead replaceNaNs(Mat, double). Parameters:; mat - array; originalValu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:15040,mask,mask,15040,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html,1,['mask'],['mask']
Availability,"eferencePane.GeneralPreferences;  ; createLogWriter(Logger, Level) - Static method in class qupath.lib.scripting.LoggingTools. Create a Writer that passes messages to the log at a specified level. createManager(QuPathViewer) - Static method in class qupath.lib.gui.commands.MiniViewers. Create a MiniViewers.MiniViewerManager associated with a specified viewer. createManager(QuPathViewer, Collection<? extends ChannelDisplayInfo>) - Static method in class qupath.lib.gui.commands.MiniViewers. Create a MiniViewers.MiniViewerManager displaying multiple channels and ; associated with a specified viewer. createMask(Mat, DoublePredicate, double, double) - Static method in class qupath.opencv.tools.OpenCVTools. Create a mask by applying a predicate to pixel values. createMaskAndSplitObjectOutputHandler(OutputHandler.OutputToObjectConverter<S, T, U>) - Static method in interface qupath.lib.experimental.pixels.OutputHandler. Create an output handler that can be used to add objects to the parent object, applying the ROI mask and; splitting objects with discontinuous ROIs. createMatImageSupplier() - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create an ImageSupplier that returns an OpenCV Mat. createMatMaskSupplier() - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create a MaskSupplier that returns an OpenCV Mat. createMaximumChannelTransform() - Static method in class qupath.lib.images.servers.ColorTransforms. Create a ColorTransform that calculates the maximum of all channels. createMeanChannelTransform() - Static method in class qupath.lib.images.servers.ColorTransforms. Create a ColorTransform that calculates the mean of all channels. createMeasurement(String, double) - Static method in class qupath.lib.measurements.MeasurementFactory. Deprecated.; Create a measurement with a double value. createMeasurement(String, float) - Static method in class qupath.lib.measurements.MeasurementFactory. Deprecated.; Create a measurement wi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:195720,mask,mask,195720,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['mask'],['mask']
Availability,"eferences(OutputStream stream). Export preferences to a stream. static Path; getConfigPath(). Try to get the path to the config file. static Path; getDefaultQuPathUserDirectory(). Get the default location for extensions. static boolean; getNavigationAccelerationProperty(). Get whether to apply the navigation acceleration (& deceleration) effects or not. static ObservableList<URI>; getRecentProjectList(). Get a list of the most recent projects that were opened. static ObservableList<URI>; getRecentScriptsList(). Get a list of the most recent scripts that were opened. static double; getScaledNavigationSpeed(). Get navigation speed scaled as a proportion and forced to be in the range 0-1. static double; getScaledScrollSpeed(). Get scroll speed scaled as a proportion and forced to be in the range 0-1. static String; getSerializationExtension(). File extension used for serialization of ImageData (without the dot). static boolean; getShowAllRGBTransforms(). Request that all available color transforms are shown for RGB images. static boolean; getSkipMissingCoresProperty(). Return whether the viewer skips missing TMA cores when navigating TMA grids ; with arrow keys. static Preferences; getUserPreferences(). Deprecated.; since v0.5.0 - avoid direct use of the Preferences object, since this may be invalidated by; a call to resetPreferences(). static BooleanProperty; gridScaleMicronsProperty(). Define counting grid optionally displayed on any viewer using microns rather than pixel coordinates. static DoubleProperty; gridSpacingXProperty(). Horizontal spacing between lines for any counting grid. static DoubleProperty; gridSpacingYProperty(). Vertical spacing between lines for any counting grid. static DoubleProperty; gridStartXProperty(). Starting x coordinate for any counting grid (usually 0). static DoubleProperty; gridStartYProperty(). Starting y coordinate for any counting grid (usually 0). static boolean; hasJavaPreferences(). Attempt to load user JVM defaults - may fail ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:16089,avail,available,16089,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['avail'],['available']
Availability,"eight - input height; nChannels - input channel count; Returns:; Throws:; IOException - if an error occurs when loading the model. readPatch; public static Mat readPatch(ImageServer<BufferedImage> server,; ROI roi,; double downsample,; int width,; int height); throws IOException; Read an image patch, optionally with a fixed size and using zero-padding if required.; If the patch width and height are specified, these relate to the output (downsampled) image; and are centered on the ROI centroid. Otherwise the ROI bounds are used. Parameters:; server - the image server; roi - the ROI for which the patch should be extracted; downsample - the downsample value; width - the patch width, or -1 if the ROI bounds should be used; height - the patch height, or -1 if the ROI bounds should be used; Returns:; Throws:; IOException; See Also:. readPatch(ImageServer, ROI, double, int, int, int). readPatch; public static Mat readPatch(ImageServer<BufferedImage> server,; ROI roi,; double downsample,; int width,; int height,; int borderPadding); throws IOException; Read an image patch, optionally with a fixed size.; If the patch width and height are specified, these relate to the output (downsampled) image; and are centered on the ROI centroid. Otherwise the ROI bounds are used. Parameters:; server - the image server; roi - the ROI for which the patch should be extracted; downsample - the downsample value; width - the patch width, or -1 if the ROI bounds should be used; height - the patch height, or -1 if the ROI bounds should be used; borderPadding - the border padding for out-of-bounds requests, for use with OpenCV's copyMakeBorder; Returns:; Throws:; IOException; See Also:. readPatch(ImageServer, ROI, double, int, int). classify; public static boolean classify(ClassificationModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier,; String predictionMeasurement); throws IOException; Apply a classification model to a",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html:8703,down,downsample,8703,javadoc/docs/qupath/opencv/dnn/DnnTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html,1,['down'],['downsample']
Availability,"eight, constrained to fall within the provided mask region. Parameters:; mask - region defining the area in which the rectangle can be located, including the image plane information; width - width of the rectangle to create; height - height of the rectangle to create; Returns:; a rectangle with the specified width and height, covered by the mask; Throws:; IllegalArgumentException - if either the mask width or height is too small for the requested width and height. createRandomRectangle; public static ROI createRandomRectangle(ImageRegion mask,; double width,; double height,; Random random); throws IllegalArgumentException; Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. Parameters:; mask - region defining the area in which the rectangle can be located, including the image plane information; width - width of the rectangle to create; height - height of the rectangle to create; random - random number generator to use (may be null to use a default); Returns:; a rectangle with the specified width and height, covered by the mask; Throws:; IllegalArgumentException - if either the mask width or height is too small for the requested width and height. createRandomRectangle; public static ROI createRandomRectangle(ROI mask,; double width,; double height); throws IllegalArgumentException; Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI.; ; For greater control, see createRandomRectangle(ROI, double, double, int, boolean, Random). Parameters:; mask - region defining the area in which the rectangle can be located, including the image plane information; width - width of the rectangle to create; height - height of the rectangle to create; Returns:; a rectangle with the specified width and height and covered by the mask, or null if it was not possible to find a rectangle ; that meets this criterion; Throws:; IllegalArgumentExce",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:17976,mask,mask,17976,javadoc/docs/qupath/lib/roi/RoiTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html,3,['mask'],['mask']
Availability,"ej.images.servers.ImageJServerBuilder;  ; checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; checkImageSupport(URI, String...) - Method in interface qupath.lib.images.servers.ImageServerBuilder. Check whether a URI is supported by this builder. checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.JsonImageServerBuilder;  ; checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; checkMinVersion(String) - Static method in class qupath.lib.scripting.QP. Check whether the current QuPath version is ≥ the specified version. checkpoint() - Method in class qupath.lib.common.Timeit. Create a new checkpoint with a default name. checkpoint(String) - Method in class qupath.lib.common.Timeit. Create a new checkpoint with the specified name. checkpointAndRun(Runnable) - Method in class qupath.lib.common.Timeit. Create a checkpoint with the default name and immediately run the provided runnable. checkpointAndRun(String, Runnable) - Method in class qupath.lib.common.Timeit. Create a checkpoint and immediately run the provided Runnable. checkpointAndRun(String, Runnable, int) - Method in class qupath.lib.common.Timeit. Create a checkpoint and immediately run the provided Runnable nIterations times. checkType(URI) - Static method in class qupath.lib.images.servers.FileFormatInfo. Check the type of an image for a specified URI. checkVersionRange(String, String) - Static method in class qupath.lib.scripting.QP. Check whether the current QuPath version is ≥ the specified minimum version, and < the specified maximum. ChoiceParameter<S> - Class in qupath.lib.plugins.parameters. Parameter that supports a list of choices. choices - Variable in class qupath.lib.plugins.parameters.ChoiceParameter;  ; CIRCULARITY - Enum constant in enum class qupath.lib.analysis.features.ObjectMeasurements.ShapeFeatures. Circularity. CITE - Variable in class qupat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:99083,checkpoint,checkpoint,99083,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['checkpoint'],['checkpoint']
Availability,"el for RGB images. Method Details. getInstance; public static ImageChannel getInstance(String name,; Integer color); Get a channel instance with the specified name and color. Parameters:; name - Name for the channel - this must not be null.; color - Color as a packed (A)RGB value.; Returns:. getChannelList; public static List<ImageChannel> getChannelList(String... names); Convert an array of channel names into a list of ImageChannel using default colors. Parameters:; names - the names of the channels; Returns:; a list of ImageChannel, where channel names are taken from the input array. toString; public String toString(). Overrides:; toString in class Object. getDefaultChannelColor; public static Integer getDefaultChannelColor(int channel); Get the default color for a specified channel, for use when no channel colors are already known.; ; Note that the exact colors returned may differ in future releases, and it is not guaranteed that all colors ; will be unique. If the colors must be exactly reproducible then it is better to specify them rather than to; depend on this method. Parameters:; channel - ; Returns:. getDefaultRGBChannels; public static List<ImageChannel> getDefaultRGBChannels(); Get default channel list for RGB images. Returns:. getDefaultChannelList; public static List<ImageChannel> getDefaultChannelList(int nChannels); Get default channel list for an image with a specified number of channels.; This is useful whenever no further channel name or color information is available. Parameters:; nChannels - ; Returns:. isTransparent; public boolean isTransparent(); Check if the color is 'transparent'; this is used for background/ignored channels. Returns:. getName; public String getName(); Name of the output channel. Returns:. getColor; public Integer getColor(); Color used to display the output channel. Returns:. hashCode; public int hashCode(). Overrides:; hashCode in class Object. equals; public boolean equals(Object obj). Overrides:; equals in class Object. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageChannel.html:4004,avail,available,4004,javadoc/docs/qupath/lib/images/servers/ImageChannel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageChannel.html,1,['avail'],['available']
Availability,"el; public void setSwitchToGrayscaleChannel(ChannelDisplayInfo channel); Set the value of switchToGrayscaleChannelProperty(). Parameters:; channel - ; Since:; v0.5.0. getSwitchToGrayscaleChannel; public ChannelDisplayInfo getSwitchToGrayscaleChannel(); Get the value of switchToGrayscaleChannelProperty(). Returns:; Since:; v0.5.0. setMinMaxDisplay; public void setMinMaxDisplay(ChannelDisplayInfo info,; float minDisplay,; float maxDisplay); Set the min/max display values for a specified ChannelDisplayInfo.; ; The benefit of calling this method is that it will update the ImageData metadata if appropriate. Parameters:; info - ; minDisplay - ; maxDisplay - . saveChannelColorProperties; public void saveChannelColorProperties(); Save color channels in the ImageData properties. This lets them be deserialized later. selectedChannels; public ObservableList<ChannelDisplayInfo> selectedChannels(); ObservableList containing the channels currently selected for display. Returns:; See Also:. availableChannels(). availableChannels; public ObservableList<ChannelDisplayInfo> availableChannels(); ObservableList containing the channels currently available for display. Returns:; See Also:. selectedChannels(). setChannelSelected; public void setChannelSelected(ChannelDisplayInfo channel,; boolean selected); Set the selection of a channel on or off.; ; If a channel's isAdditive() method returns false, all other selected channels will be cleared.; Otherwise, other selected channels will be cleared if they are non-additive - but kept if they are additive; (and therefore can be sensibly displayed in combination with this channel). Parameters:; channel - ; selected - true if the channel should be selected, false if it should not. applyTransforms; public BufferedImage applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput); Apply the required transforms to a BufferedImage to get the appropriate display.; imgOutput should always be an RGB image (of some kind), or null if a new image sho",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html:11546,avail,availableChannels,11546,javadoc/docs/qupath/lib/display/ImageDisplay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html,1,['avail'],['availableChannels']
Availability,"elSize(double pixelSize). Set the requested pixel size to use with requesting image regions. PixelProcessor.Builder<S,T,U>; processor(Processor<S,T,U> processor). Set the processor. PixelProcessor.Builder<S,T,U>; tile(int tileWidth,; int tileHeight). Set a default tiler to use, with a specified tile size. PixelProcessor.Builder<S,T,U>; tiler(Tiler tiler). Set a tiler to use. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(). Method Details. imageSupplier; public PixelProcessor.Builder<S,T,U> imageSupplier(ImageSupplier<S> imageSupplier); Set the image supplier. This is required if the processor is to have access to pixels. Parameters:; imageSupplier - ; Returns:. maskSupplier; public PixelProcessor.Builder<S,T,U> maskSupplier(MaskSupplier<S,T> maskSupplier); Set the mask supplier. This is optional, but without it masks will be null. Parameters:; maskSupplier - ; Returns:. outputHandler; public PixelProcessor.Builder<S,T,U> outputHandler(OutputHandler<S,T,U> outputHandler); Set the output handler. This is optional, for cases where the processor does not make updates to the; parent object itself. Parameters:; outputHandler - ; Returns:. processor; public PixelProcessor.Builder<S,T,U> processor(Processor<S,T,U> processor); Set the processor. This is required to do any interesting work. Parameters:; processor - ; Returns:. padding; public PixelProcessor.Builder<S,T,U> padding(Padding padding); Set the padding to use when extracting regions.; Note that this is defined in pixels at the full image resolution, not the downsampled resolution. Parameters:; padding - ; Returns:. padding; public PixelProcessor.Builder<S,T,U> padding(int size); Set the padding to use when extracting regions, using a symmetric padding.; Note that this is defined in pixels at the full image resolution, not the downsampled resolution. Parameters:; size - ; Returns:",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html:2918,mask,maskSupplier,2918,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,1,['mask'],['maskSupplier']
Availability,"elected annotations to create a new annotation containing the union of their ROIs.; ; Note:; ; The existing annotations will be removed from the hierarchy if possible, therefore should be duplicated first ; if this is not desired.; The new object will be set to be the selected object in the hierarchy (which can be used to retrieve it if needed). Parameters:; hierarchy - ; Returns:. makeInverseAnnotation; public static boolean makeInverseAnnotation(PathObject pathObject); Make an annotation for the current ImageData, for which the ROI is obtained by subtracting ; the existing ROI from the ROI of its parent object (or entire image if no suitable parent object is available). Parameters:; pathObject - the existing object defining the ROI to invert; Returns:; true if an inverted annotation is added to the hierarchy, false otherwise. makeInverseAnnotation; public static boolean makeInverseAnnotation(ImageData<?> imageData,; PathObject pathObject); Make an annotation for the specified ImageData, for which the ROI is obtained by subtracting ; the existing ROI from the ROI of its parent object (or entire image if no suitable parent object is available). Parameters:; imageData - the imageData for which an inverted annotation should be created; pathObject - the existing object defining the ROI to invert; Returns:; true if an inverted annotation is added to the hierarchy, false otherwise. makeInverseAnnotation; public static boolean makeInverseAnnotation(); Make an inverse annotation using the current ImageData and its current selected objects. Returns:; true if an inverted annotation is added to the hierarchy, false otherwise. makeInverseAnnotation; public static boolean makeInverseAnnotation(ImageData<?> imageData); Make an inverse annotation using the specified ImageData and current selected objects. Parameters:; imageData - the imageData for which an inverted annotation should be created; Returns:; true if an inverted annotation is added to the hierarchy, false otherwise. ma",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:128891,avail,available,128891,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['avail'],['available']
Availability,"ementPreferences;  ; showMeasurementTableThumbnailsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Specify whether measurement tables should show thumbnail images by default or not. showMessageDialog(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a standard message dialog. showMessageDialog(String, Node) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. showMiniViewer(QuPathViewer) - Static method in class qupath.lib.gui.commands.Commands. Show a mini viewer window associated with a specific viewer. showNamesProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showNoImageError(String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message that no image is available. showNoImageError(String) - Static method in class qupath.lib.gui.tools.GuiTools. Show an error message that no image is available. showNoProjectError(String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message that no project is available. showNoProjectError(String) - Static method in class qupath.lib.gui.tools.GuiTools. Show an error message that no project is available. showOverviewProperty() - Method in class qupath.lib.gui.viewer.ViewerManager. Show the overview image. showOverviewProperty() - Method in class qupath.lib.gui.viewer.ViewerPlusDisplayOptions. Show the overview image. showParameterDialog(String, ParameterList) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show a (modal) dialog for a specified ParameterList. showParameterDialog(String, ParameterList) - Static method in class qupath.lib.gui.tools.GuiTools. Show a (modal) dialog for a specified ParameterList. showPixelClassificationProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showPlainMessage(String, String) - Static method in class qupa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:968597,error,error,968597,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,2,"['avail', 'error']","['available', 'error']"
Availability,"ence to the action as a property of the menu item. Parameters:; action - the action from which to construct the menu item; Returns:; a new MenuItem configured according to the action. createCheckBox; public static CheckBox createCheckBox(org.controlsfx.control.action.Action action); Create a checkbox from an action.; This stores a reference to the action as a property of the checkbox. Parameters:; action - the action from which to construct the checkbox; Returns:; a new CheckBox configured according to the action. createToggleButtonWithGraphicOnly; public static ToggleButton createToggleButtonWithGraphicOnly(org.controlsfx.control.action.Action action); Create a toggle button from an action, showing only the graphic and not any text.; This stores a reference to the action as a property of the toggle button. Parameters:; action - ; Returns:. createToggleButton; public static ToggleButton createToggleButton(org.controlsfx.control.action.Action action); Create a toggle button from an action, showing both the text and graphic if available.; This stores a reference to the action as a property of the toggle button. Parameters:; action - ; Returns:. createButton; public static Button createButton(org.controlsfx.control.action.Action action); Create a button from an action, showing both the text and graphic if available.; This stores a reference to the action as a property of the button. Parameters:; action - the action from which to construct the button; Returns:; a new Button configured according to the action. createButtonWithGraphicOnly; public static Button createButtonWithGraphicOnly(org.controlsfx.control.action.Action action); Create a button from an action, showing only the graphic and not any text.; This stores a reference to the action as a property of the button. Parameters:; action - the action from which to construct the button; Returns:; a new Button configured according to the action. createSelectableAction; public static org.controlsfx.control.action.Action",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html:12331,avail,available,12331,javadoc/docs/qupath/lib/gui/actions/ActionTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html,1,['avail'],['available']
Availability,"ences(OutputStream); then it may be worthwhile to resetPreferences() first to handle the fact that preferences may not have been; saved because their default values were unchanged. Parameters:; stream - ; Throws:; IOException; InvalidPreferencesFormatException; See Also:. exportPreferences(OutputStream). numCommandThreadsProperty; public static IntegerProperty numCommandThreadsProperty(); Property specifying the preferred number of threads QuPath should use for multithreaded commands. Returns:. showImageNameInTitleProperty; public static BooleanProperty showImageNameInTitleProperty(); Property specifying if QuPath should show the image title in the main window title.; For privacy reasons it may be desirable to turn this off in some cases. Returns:. autoUpdateCheckProperty; public static ObjectProperty<PathPrefs.AutoUpdateType> autoUpdateCheckProperty(); Check for updates when launching QuPath, if possible. Returns:. maskImageNamesProperty; public static BooleanProperty maskImageNamesProperty(); Request that image names are hidden within the user interface. Returns:. defaultLocaleProperty; public static ObjectProperty<Locale> defaultLocaleProperty(); Get a property for setting the default Locale.; Setting this locale impacts both Locale.Category.FORMAT and Locale.Category.DISPLAY, ; and may trigger an update to defaultLocaleDisplayProperty() and defaultLocaleFormatProperty() ; if these have been changed. Returns:; an object property to control the locale; Since:; v0.4.0. defaultLocaleFormatProperty; public static ObjectProperty<Locale> defaultLocaleFormatProperty(); Get a property for setting the default Locale for Locale.Category.FORMAT.; Setting this property also results in the Locale being changed to match. Returns:; an object property to control the display locale. defaultLocaleDisplayProperty; public static ObjectProperty<Locale> defaultLocaleDisplayProperty(); Get a property for setting the default Locale for Locale.Category.DISPLAY.; Setting this property also",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:43675,mask,maskImageNamesProperty,43675,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,2,['mask'],['maskImageNamesProperty']
Availability,"ensityMapImage, writeDensityMapImage, writeImage, writeImage, writeImageRegion, writePredictionImage, writePredictionImage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QPEx; public QPEx(). Method Details. getCoreClasses; public static Collection<Class<?>> getCoreClasses(); Get a list of core classes that are likely to be useful for scripting.; The purpose of this is to allow users to find classes they are likely to need, ; or to import these automatically at the beginning of scripts. Returns:. exportTMAData; public static void exportTMAData(String path,; double downsampleFactor); throws IOException; Export TMA summary data for the current image. Parameters:; path - path to the export directory; downsampleFactor - downsample applied to each TMA core image; Throws:; IOException. exportTMAData; public static void exportTMAData(ImageData<BufferedImage> imageData,; String path,; double downsampleFactor); throws IOException; Export TMA summary data for the specified image. Parameters:; imageData - the image containing TMA data to export; path - path to the export directory; downsampleFactor - downsample applied to each TMA core image; Throws:; IOException. getQuPath; public static QuPathGUI getQuPath(); Get the current QuPath instance. Returns:. getCurrentViewer; public static QuPathViewer getCurrentViewer(); Get the active viewer in the current QuPath instance. Returns:; an active viewer, or null if no viewer is active in QuPath currently. locateFile; public static String locateFile(String nameOrPath); throws IOException; Locate a specified file based upon its name or path, with a search depth of 4.; This first checks if the provided path is to a file that already exists.; If it is not, then it searches recursively within the current project or ; user directory (if available) up to a fixed search depth for a file with the same name. Parameters:; nameOrPath ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:12878,down,downsampleFactor,12878,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html,1,['down'],['downsampleFactor']
Availability,"ent image in the specified viewer. BufferedImageOverlay(QuPathViewer viewer,; Map<ImageRegion,BufferedImage> map). Create an overlay to show an image rescaled to overlay the entire current image in the specified viewer. BufferedImageOverlay(QuPathViewer viewer,; OverlayOptions options,; Map<? extends ImageRegion,BufferedImage> regions). Create an overlay to display multiple image regions. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; addAllRegions(ImageServer<BufferedImage> server,; int level). Add all regions for a specific level of an ImageServer. void; changed(ObservableValue<? extends ImageData<BufferedImage>> observable,; ImageData<BufferedImage> oldValue,; ImageData<BufferedImage> newValue);  ; ColorModel; getColorModel();  ; Map<ImageRegion,BufferedImage>; getRegionMap(). Get an unmodifiable Map containing image regions to paint on this overlay. void; paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. void; setColorModel(ColorModel colorModel). Optionally set a custom ColorModel. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractImageOverlay; getInterpolation, interpolationProperty, setInterpolation, setInterpolation. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, isVisible, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. BufferedImageOverlay; public BufferedImageOverlay(QuPathViewer viewer,; BufferedImage img); Create an overlay to show an image rescaled to overlay the entire current image in the specified vi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html:2847,down,downsampleFactor,2847,javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html,1,['down'],['downsampleFactor']
Availability,"enting regions from expanding to pixels below a specified minimum threshold. doWatershed(SimpleImage, SimpleModifiableImage, boolean) - Static method in class qupath.lib.analysis.algorithms.Watershed. Apply a 2D watershed transform. doWatershed(SimpleImage, SimpleModifiableImage, double, boolean) - Static method in class qupath.lib.analysis.algorithms.Watershed. Apply a 2D watershed transform, constraining region growing using an intensity threshold. DOWNLOAD - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; downsample(double) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set the downsample factor to use with requesting image regions. downsample(double) - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Specify downsample factor (defined in terms of the full resolution image space). downsample(double) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Specify downsample factor. downsample(double) - Method in class qupath.lib.images.writers.TileExporter. Define resolution as a downsample value. downsamples(double...) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify downsamples; this is especially important for 'thick' objects (annotations, TMA cores); because the downsamples define the resolutions at which these will be rendered. downsamples(double...) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify downsample factors to use in the final pyramid. DragDropImportListener - Class in qupath.lib.gui.viewer. Drag and drop support for main QuPath application, which can support a range of different object types (Files, URLs, Strings,..). DragDropImportListener(QuPathGUI) - Constructor for class qupath.lib.gui.viewer.DragDropImportListener. Constructor. DragDropImportListener.DropHandler<T> - Interface in qupath.lib.gui.viewer. Interface to define a new drop handler. DrawingPreferences() - Constructor for class qupath.lib",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:271488,down,downsample,271488,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['down'],['downsample']
Availability,"ents Serializable; ROI representing a collection of 2D points (distinct x,y coordinates). Author:; Pete Bankhead; See Also:. Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. double; getLength(). Get ROI length. Point2; getNearest(double x,; double y,; double maxDist). Identify the closest point within a specified distance to coordinates x,y - or null if no points are found. int; getNumPoints(). Default implementation, calls ROI.getAllPoints() and then caches the result. String; getRoiName(). Get a String representation of the kind of ROI we have, ; e.g. ROI.RoiType; getRoiType(). Get the RoiType, used to distinguish between points, lines and areas. double; getScaledArea(double pixelWidth,; double pixelHeight). Get scaled area of the ROI, for ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html:1520,avail,available,1520,javadoc/docs/qupath/lib/roi/PointsROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PointsROI.html,1,['avail'],['available']
Availability,"eplaced). Parameters:; name - ; value - ; Since:; v0.4.0. getOrDefault; default double getOrDefault(String name,; double defaultValue); Get the specified measurement, or the provided default value if it is not contained in the list.; ; This provides an alternative to get(String) which always uses a default of Double.NaN. Parameters:; name - ; defaultValue - ; Returns:; Since:; v0.4.0. containsNamedMeasurement; @Deprecated; default boolean containsNamedMeasurement(String name); Deprecated.; since v0.4.0; replaced by containsKey(String). Query if a value with the specified name is in the list. Parameters:; name - ; Returns:. values; default double[] values(); Get all measurement values as a double array. Returns:; Since:; v0.4.0. getMeasurementValue; @Deprecated; default double getMeasurementValue(String name); Deprecated.; since v0.4.0; use get(String) instead. Get the measurement with the specified name. Parameters:; name - ; Returns:; the value, or Double.NaN if no measurement is available with the specified name. putMeasurement; @Deprecated; default void putMeasurement(String name,; double value); Deprecated.; since v0.4.0; replaced by put(String, double). Alternative method to call putMeasurement(String, double). Parameters:; name - ; value - . remove; default double remove(String name); Remove a named measurement. Parameters:; name - ; Returns:; the value that was removed, or Double.NaN if the value was not in the list; Since:; v0.4.0. putAll; default void putAll(Map<String,? extends Number> map); Put all the values from the specified map into this list. Parameters:; map - ; Since:; v0.4.0. putAll; default void putAll(MeasurementList list); Put all the values from the specified list into this one. Parameters:; list - ; Since:; v0.4.0. keySet; default Set<String> keySet(); Get all available names as a set. Returns:. getMeasurementNames; List<String> getMeasurementNames(); Get the names of all measurements currently in the list. Returns:. getMeasurementName; @Depre",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.html:6486,avail,available,6486,javadoc/docs/qupath/lib/measurements/MeasurementList.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.html,1,['avail'],['available']
Availability,"eption - if there is an error reading the images. labelsToAnnotations; public static List<PathObject> labelsToAnnotations(Collection<Path> paths,; boolean mergeByLabel); throws IOException; Convert labeled images to annotation objects, determining the region from the filename if possible. Parameters:; paths - paths to image files (e.g. PNGs); mergeByLabel - if true, merge objects with the same ROI label; Returns:; a list of objects generated from the labels; Throws:; IOException - if there is an error reading the images. labelsToAnnotations; public static List<PathObject> labelsToAnnotations(Path path,; RegionRequest request); throws IOException; Convert a labeled image to annotation objects. Parameters:; path - path to labeled image file (e.g. PNGs); request - a RegionRequest representing the region or the full image, used to reposition and rescale ROIs.; If not provided, this will be extracted from the filename, if possible.; Returns:; a list of objects generated from the labels; Throws:; IOException - if there is an error reading the images. labelsToObjects; public static List<PathObject> labelsToObjects(Path path,; RegionRequest request,; BiFunction<ROI,Number,PathObject> creator); throws IOException; Convert a labeled image to objects. Parameters:; path - path to labeled image file (e.g. PNGs); request - a RegionRequest representing the region or the full image, used to reposition and rescale ROIs.; If not provided, this will be extracted from the filename, if possible.; creator - function used to convert a ROI and numeric label to an object; Returns:; a list of objects generated from the labels; Throws:; IOException - if there is an error reading the images. parseRegion; public static RegionRequest parseRegion(String name,; int width,; int height); Attempt to parse a RegionRequest corresponding to an image region from the file name.; ; This is used whenever a tile has been extracted from a larger image for further processing, ; and then there is a need to get ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html:9124,error,error,9124,javadoc/docs/qupath/lib/analysis/images/ContourTracing.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html,1,['error'],['error']
Availability,"equest(ImageServer<BufferedImage> server,; double x,; double y,; double downsampleFactor,; int zPosition,; int tPosition). Given an ImageServer, determine the boundaries of the image tile that contains specified x, y coordinates. static List<RegionRequest>; getTilesToRequest(ImageServer<?> server,; Shape clipShape,; double downsampleFactor,; int zPosition,; int tPosition,; List<RegionRequest> regions). Given ImageServer, determine the boundaries of the image tiles that would be needed to paint; a specified shape (defined by coordinates in the full-resolution image space). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageRegionStoreHelpers; public ImageRegionStoreHelpers(). Method Details. getTilesToRequest; public static List<RegionRequest> getTilesToRequest(ImageServer<?> server,; Shape clipShape,; double downsampleFactor,; int zPosition,; int tPosition,; List<RegionRequest> regions); Given ImageServer, determine the boundaries of the image tiles that would be needed to paint; a specified shape (defined by coordinates in the full-resolution image space).; The downsampleFactor is used to determine the resolution at which to request the tiles. Parameters:; server - The ImageServer from which the tiles would be requested; clipShape - The requested shape, defined in the full-resolution image space; downsampleFactor - The downsampleFactor determining the resolution at which tiles should be requested; zPosition - The zPosition from which to request tiles; tPosition - The tPosition from which to request tiles; regions - regions The list to which requests should be added, or null if a new list should be created; Returns:; The list of requests - identical to the one provided as an input parameter, unless this was null. getTileRequest; public static RegionRequest getTileRequest(ImageServer<BufferedImage> server,; double x,; double y,; double downsampleFactor,; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ImageRegionStoreHelpers.html:2019,down,downsampleFactor,2019,javadoc/docs/qupath/lib/gui/images/stores/ImageRegionStoreHelpers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ImageRegionStoreHelpers.html,1,['down'],['downsampleFactor']
Availability,"equested region coming from; imageData - this BufferedImage; Returns:; true if the memory is sufficient; Throws:; Exception - either the fact that ImageJ cannot handle the image size or that the memory is insufficient. extractHyperstack; public static ImagePlus extractHyperstack(ImageServer<BufferedImage> server,; RegionRequest request); throws IOException; Extract a full ImageJ hyperstack for a specific region, using all z-slices and time points. Parameters:; server - ; request - ; Returns:; Throws:; IOException. extractHyperstack; public static ImagePlus extractHyperstack(ImageServer<BufferedImage> server,; RegionRequest request,; int zStart,; int zEnd,; int tStart,; int tEnd); throws IOException; Extract a full ImageJ hyperstack for a specific region, for specified ranges of z-slices and time points. Parameters:; server - server from which to extract pixels; request - region and downsample value; if null, the entire image is used; zStart - starting z-slice index (0-based index); zEnd - ending z-slice index (exclusive); tStart - starting timepoint index (0-based index); tEnd - ending timepoint index (exclusive); Returns:; the ImageJ hyperstack; Throws:; IOException. convertToFloatProcessor; public static ImageProcessor convertToFloatProcessor(SimpleImage image); Convert a SimpleImage to an ImageProcessor. Parameters:; image - ; Returns:. setTitleFromObject; public static void setTitleFromObject(PathImage<ImagePlus> pathImage,; PathObject pathObject); Set the name of an image based on a PathObject.; ; Useful whenever the ROI for an object is being extracted for display separately. Parameters:; pathImage - ; pathObject - . calibrateImagePlus; public static void calibrateImagePlus(ImagePlus imp,; RegionRequest request,; ImageServer<BufferedImage> server); Set an ImagePlus's Calibration and FileInfo properties based on a RegionRequest and PathImageServer.; It is assumed at the image contained in the ImagePlus has been correctly read from the server. Parameters:; imp -",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:9684,down,downsample,9684,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,1,['down'],['downsample']
Availability,"er and Type; Field; Description; static final String; MICROMETER. String to represent 'micrometer' units. static final String; PIXEL. String to represent 'pixel' units. static final String; Z_SLICE. String to represent 'z-slice' units. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; PixelCalibration; createScaledInstance(double scaleX,; double scaleY). Get a scaled instance of this PixelCalibration, multiplying pixel sizes for x and y by the specified scale values. PixelCalibration; createScaledInstance(double scaleX,; double scaleY,; double scaleZ). Get a scaled instance of this PixelCalibration, multiplying pixel sizes for x, y and z by the specified scale values. boolean; equals(Object obj);  ; Number; getAveragedPixelSize(). Get an average of getPixelWidth() and getPixelHeight(). double; getAveragedPixelSizeMicrons(). Get the average of the pixel width and height in microns if possible, or Double.NaN if the pixel size is not available. static PixelCalibration; getDefaultInstance(). Get the default PixelCalibration. Number; getPixelHeight(). Get the numeric value representing the pixel height, in the stored units. double; getPixelHeightMicrons(). Get the pixel height in microns, or Double.NaN if this is unknown. String; getPixelHeightUnit(). Get a String representation of the preferred pixel height unit. Number; getPixelWidth(). Get the numeric value representing the pixel width, in the stored units. double; getPixelWidthMicrons(). Get the pixel width in microns, or Double.NaN if this is unknown. String; getPixelWidthUnit(). Get a String representation of the preferred pixel width unit. double; getTimepoint(int ind). Get the time for the specified time point, or Double.NaN if this is unknown. TimeUnit; getTimeUnit(). Get the time unit for a time series. Number; getZSpacing(). Get the numeric value representing the z-spacing, in the stored units. double; getZSpacingMicrons(). Get the z-spacing in mi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/PixelCalibration.html:1817,avail,available,1817,javadoc/docs/qupath/lib/images/servers/PixelCalibration.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/PixelCalibration.html,1,['avail'],['available']
Availability,"er,; long[] counts,; WritableRaster rasterMask). Create a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion. static long[]; computeArgMaxHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask,; Rectangle bounds). Create a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion, ; with an optional bounding rectangle. static long[]; computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask). Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values. static long[]; computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask,; Rectangle bounds). Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values, optionally restricted to a bounding rectangle. static BufferedImage; createROIMask(int width,; int height,; ROI roi,; double xOrigin,; double yOrigin,; double downsample). Create a grayscale BufferedImage representing a mask for a specified ROI. static BufferedImage; createROIMask(int width,; int height,; ROI roi,; RegionRequest request). Create a grayscale BufferedImage representing a mask for a specified ROI. static BufferedImage; createROIMask(Shape shape,; double downsample). Create a Shape mask using the minimal bounding box for the Shape. static BufferedImage; createROIMask(ROI roi,; double downsample). Create a ROI mask using the minimal bounding box for the ROI. static BufferedImage; createShapeMask(int width,; int height,; Shape shape,; double xOrigin,; double yOrigin,; double downsample). Create a grayscale BufferedImage representing a mask for a specified ROI. static BufferedImage; crop(BufferedImage img,; int x,; int y,; int width,; int height). Create a crop of the image using the specified bounding box. static BufferedImage; duplicate(BufferedImage img). Duplicate a BufferedImag",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:2286,down,downsample,2286,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,1,['down'],['downsample']
Availability,"er. fillAnnotations; public SvgTools.SvgBuilder fillAnnotations(boolean doFill); Request whether annotations are drawn as 'filled' shapes. Parameters:; doFill - ; Returns:; this builder. fillDetections; public SvgTools.SvgBuilder fillDetections(boolean doFill); Request whether detections are drawn as 'filled' shapes. Parameters:; doFill - ; Returns:; this builder. showSelection; public SvgTools.SvgBuilder showSelection(boolean doShow); Request whether selected objects are displayed. Parameters:; doShow - ; Returns:; this builder. region; public SvgTools.SvgBuilder region(ImageRegion region); Specify the region (in terms of the full resolution image space) for export.; If a RegionRequest is supplied, the downsample factor will be used if none has otherwise been set. Parameters:; region - ; Returns:; this builder. downsample; public SvgTools.SvgBuilder downsample(double downsample); Specify downsample factor (defined in terms of the full resolution image space). Parameters:; downsample - ; Returns:; this builder. width; public SvgTools.SvgBuilder width(int width); Export image width. Parameters:; width - width (in pixels) of the SVG image.; Returns:; this builder. height; public SvgTools.SvgBuilder height(int height); Export image height. Parameters:; height - height (in pixels) of the SVG image.; Returns:; this builder. size; public SvgTools.SvgBuilder size(int width,; int height); Export image size. Parameters:; width - width (in pixels) of the SVG image.; height - height (in pixels) of the SVG image.; Returns:; this builder. embedImages; public SvgTools.SvgBuilder embedImages(); Specify whether the underlying (raster) image should be embedded in any export.; This requires that the constructor with a QuPathViewer is called to supply the ; necessary rendering settings. Returns:; this builder; See Also:. linkImages(). linkImages; public SvgTools.SvgBuilder linkImages(); Specify whether the underlying (raster) image should be included in any export.; This requires that",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html:6181,down,downsample,6181,javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html,1,['down'],['downsample']
Availability,"er; See Also:. content(Node). owner; public Dialogs.Builder owner(Window owner); Deprecated.; Specify the dialog owner. Parameters:; owner - dialog title; Returns:; this builder. resizable; public Dialogs.Builder resizable(); Deprecated.; Make the dialog resizable (but default it is not). Returns:; this builder. nonModal; public Dialogs.Builder nonModal(); Deprecated.; Specify that the dialog should be non-modal.; By default, most dialogs are modal (and therefore block clicks to other windows). Returns:; this builder. modality; public Dialogs.Builder modality(Modality modality); Deprecated.; Specify the modality of the dialog. Parameters:; modality - requested modality; Returns:; this builder. alertType; public Dialogs.Builder alertType(Alert.AlertType type); Deprecated.; Create a dialog styled as a specified alert type. Parameters:; type - ; Returns:; this builder. warning; public Dialogs.Builder warning(); Deprecated.; Create a warning alert dialog. Returns:; this builder. error; public Dialogs.Builder error(); Deprecated.; Create an error alert dialog. Returns:; this builder. information; public Dialogs.Builder information(); Deprecated.; Create an information alert dialog. Returns:; this builder. confirmation; public Dialogs.Builder confirmation(); Deprecated.; Create an confirmation alert dialog. Returns:; this builder. buttons; public Dialogs.Builder buttons(ButtonType... buttonTypes); Deprecated.; Specify the buttons to display in the dialog. Parameters:; buttonTypes - buttons to use; Returns:; this builder. buttons; public Dialogs.Builder buttons(String... buttonNames); Deprecated.; Specify the buttons to display in the dialog. Parameters:; buttonNames - names of buttons to use; Returns:; this builder. width; public Dialogs.Builder width(double width); Deprecated.; Specify the dialog width. Parameters:; width - requested width; Returns:; this builder. height; public Dialogs.Builder height(double height); Deprecated.; Specify the dialog height. Parameters:; he",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.Builder.html:5269,error,error,5269,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.Builder.html,1,['error'],['error']
Availability,"er; protected ImageRenderer getRenderer(); Request a renderer that converts image tiles into RGB images.; ; By default, this returns getImageDisplay.; ; Subclasses might override this, e.g. to use custom image viewers that select transforms some ; other way. Returns:. getDisplayedRegionShape; public Shape getDisplayedRegionShape(); Get a shape corresponding to the region of the image currently visible in this viewer.; Coordinates are in the image space.; ; If no rotation is applied, the result will be an instance of java.awt.Rectangle.; Otherwise it will be a Path2D with the rotated rectangle vertices. Returns:. getDisplayedClipShape; protected Shape getDisplayedClipShape(Shape clip); Transform a clip shape into image coordinates for this viewer.; The resulting shape coordinates are in the image space. Parameters:; clip - The clip shape, or null if the entire width & height of the component should be used.; Returns:. zoomToFit; public void zoomToFit(); Request that the downsample is set to contain the entire image, and the image is centered in the viewer. getServer; public ImageServer<BufferedImage> getServer(); Get the ImageServer for the current image displayed within the viewer, or null if ; no image is displayed. Returns:. hasServer; public boolean hasServer(); Returns true if there is currently an ImageServer being displayed in this viewer. Returns:. setZPosition; public void setZPosition(int zPos); Set the requested z-slice to be visible. Parameters:; zPos - . getTPosition; public int getTPosition(); Get the currently-visible time point. Returns:. setTPosition; public void setTPosition(int tPosition); Set the requested time point to be visible. Parameters:; tPosition - . getZPosition; public int getZPosition(); Get the currently-visible z-slice. Returns:. getImagePlane; public ImagePlane getImagePlane(); Get the ImagePlane currently being displayed, including z and t positions. Channels are ignored. Returns:. isImageDataChanging; public boolean isImageDataChang",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:23350,down,downsample,23350,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,1,['down'],['downsample']
Availability,"er>; count. Read only property containing any count associated with the text (may be null). ReadOnlyStringProperty; text. Read only property containing the message text. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; InfoMessage.MessageType. The type of message, which can be used for styling. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<Number>; countProperty(). Read only property containing any count associated with the text (may be null). static InfoMessage; error(String text). Create an error message with static text. static InfoMessage; error(String text,; int count). Create an error message with static text and a count. static InfoMessage; error(ObservableNumberValue count). Create a error message to show a count of errors. static InfoMessage; error(ObservableValue<String> text). Create an error message. static InfoMessage; error(ObservableValue<String> text,; ObservableNumberValue count). Create an error message with a count. int; getCount(). Counts associated with the message, or -1 if the count is null. InfoMessage.MessageType; getMessageType(). Type of the message. String; getText(). Text of the message. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(String text,; int count). Create an information message with static text and a count. static InfoMessage; info(ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; info(ObservableValue<String> text). Create an information message. static InfoMessage; info(ObservableValue<String> text,; ObservableNumberValue count). Create an information message with a count. ReadOnlyStringProperty; textProperty(). Read only property containing the message text. static InfoMessage; warning(String text). Create a warning message with static text. static InfoMessage; warning(Stri",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:1594,error,error,1594,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,1,['error'],['error']
Availability,"erBuilder in class AbstractImageServer<BufferedImage>; Returns:. createID; protected String createID(); Returns a UUID. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Specified by:; readRegion in interface ImageServer<BufferedImage>; Overrides:; readRegion in class TransformingImageServer<BufferedImage>; Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; Throws:; IOException; See Also:. ImageServer.readRegion(double, int, int, int, int, int, int); ImageServer.readRegion(double, int, int, int, int); ImageServer.readBufferedImage(RegionRequest). getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Specified by:; getOr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ChannelTransformFeatureServer.html:3663,down,downsampling,3663,javadoc/docs/qupath/lib/images/servers/ChannelTransformFeatureServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ChannelTransformFeatureServer.html,1,['down'],['downsampling']
Availability,"erName,; String ext). Deprecated.; Prompt user to select a file path to save. static File; promptToSaveFile(String title,; File dirBase,; String defaultName,; Map<String,String> filters). Deprecated.; Prompt user to select a file path to save, providing zero or more file extensions as an option. static <T> T; showChoiceDialog(String title,; String message,; Collection<T> choices,; T defaultChoice). Deprecated.; Show a choice dialog with a collection of choices (selection from ComboBox or similar). static <T> T; showChoiceDialog(String title,; String message,; T[] choices,; T defaultChoice). Deprecated.; Show a choice dialog with an array of choices (selection from ComboBox or similar). static boolean; showConfirmDialog(String title,; String text). Deprecated.; Show a confirm dialog (OK/Cancel). static boolean; showConfirmDialog(String title,; Node node). Deprecated.; Show a confirm dialog (OK/Cancel). static void; showErrorMessage(String title,; String message). Deprecated.; Show an error message. static void; showErrorMessage(String title,; Throwable e). Deprecated.; Show an error message, displaying the localized message of a Throwable. static void; showErrorMessage(String title,; Node node). Deprecated.; Show an error message, with the content defined within a Node. static void; showErrorNotification(String title,; String message). Deprecated.; Show an error notification. static void; showErrorNotification(String title,; Throwable e). Deprecated.; Show an error notification, displaying the localized message of a Throwable. static void; showInfoNotification(String title,; String message). Deprecated.; Show an info notification. static Double; showInputDialog(String title,; String message,; Double initialInput). Deprecated.; Show an input dialog requesting a numeric value. static String; showInputDialog(String title,; String message,; String initialInput). Deprecated.; Show an input dialog requesting a String input. static boolean; showMessageDialog(String title,; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:3147,error,error,3147,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['error'],['error']
Availability,"eredImage>, ImageRegion) - Constructor for class qupath.lib.images.servers.CroppedImageServer. Create an ImageServer that represents a cropped region of another (larger) server. cropTiles(boolean) - Method in class qupath.lib.objects.utils.Tiler.Builder. Set whether the tiler is set to crop the output to the input parent. cross3(double[], double[]) - Static method in class qupath.lib.color.StainVector. Compute the cross product of two vectors. cssDirectoryProperty() - Method in class qupath.lib.gui.UserDirectoryManager. Read only property representing the css directory. CssLanguage - Class in qupath.lib.gui.scripting.languages. Class for representing CSS in QuPath. CssLanguage() - Constructor for class qupath.lib.gui.scripting.languages.CssLanguage. Constructor for JSON language. cuda() - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Request CUDA backend and target, if available. cuda16() - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Request CUDA backend and target, if available, with 16-bit floating point. currentChannelProperty() - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Get the currently-selected channel. currentChannelVisible() - Method in class qupath.lib.gui.commands.display.BrightnessContrastChannelPane. Read-only property indicating whether the currently-selected channel is visible,; i.e. currentLanguageProperty() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; currentSyntaxProperty() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; cursorTrackingProperty() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the cursorTracking property of this tracker. cut() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; cut() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Request cut the current selection. cut() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; cutAction - Variable in class qupath.lib.gui.s",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:238227,avail,available,238227,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"eredImage>> fun,; ImageRenderer renderer). Deprecated.; Use create(OverlayOptions, Function, ImageRenderer) instead. static String; getDefaultLocationString(ImageServer<BufferedImage> server,; double x,; double y,; int z,; int t). Default method for getting a location string from an ImageServer using cached tiles. boolean; getLivePrediction(). Query whether live prediction is turned on. String; getLocationString(ImageData<BufferedImage> imageData,; double x,; double y,; int z,; int t). Get a location string to display when showing a specified image. int; getMaxThreads(). Get the maximum number of threads that may be used during live prediction. ImageServer<BufferedImage>; getPixelClassificationServer(ImageData<BufferedImage> imageData). Get the ImageServer that would be used by this overlay for the specified ImageData. ImageRenderer; getRenderer(). Get the ImageRenderer used with this overlay, which may be null. void; paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. ObjectProperty<ImageRenderer>; rendererProperty(). Get the ImageRenderer property used with this overlay. void; setLivePrediction(boolean livePrediction). Turn on or off live prediction. void; setMaxThreads(int nThreads). Set the maximum number of threads that may be used during live prediction. void; setRenderer(ImageRenderer renderer). Set the ImageRenderer to be used with this overlay. void; stop(). Stop the overlap, halting any pending tile requests. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractImageOverlay; getInterpolation, interpolationProperty, setInterpolation, setInterpolation. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, isVisible, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html:3449,down,downsampleFactor,3449,javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,1,['down'],['downsampleFactor']
Availability,"eredImage> server,; RegionRequest request); throws IOException; Read a region from an ImageServer<BufferedImage as a PathImage<ImagePlus>.; ; The PathImage element wraps up handy metadata that can be used for translating ROIs. Parameters:; server - ; request - ; Returns:; Throws:; IOException. createPathImage; public static PathImage<ImagePlus> createPathImage(ImageServer<BufferedImage> server,; ImagePlus imp,; RegionRequest request); throws IOException; Create a PathImage from an ImagePlus and region.; If imp is null, it is read from the server. Parameters:; server - ; imp - ; request - ; Returns:; Throws:; IOException. convertToIJRoi; public static <T extends PathImage<ImagePlus>> Roi convertToIJRoi(ROI pathROI,; T pathImage); Create an ImageJ Roi from a ROI, suitable for displaying on the ImagePlus of an PathImage<ImagePlus>. Parameters:; pathROI - ; pathImage - ; Returns:. convertToIJRoi; public static <T extends PathImage<ImagePlus>> Roi convertToIJRoi(ROI pathROI,; Calibration cal,; double downsampleFactor); Convert a QuPath ROI to an ImageJ Roi for an image with the specified calibration. Type Parameters:; T - ; Parameters:; pathROI - ; cal - ; downsampleFactor - ; Returns:; See Also:. convertToIJRoi(ROI, double, double, double). convertToROI; public static ROI convertToROI(Roi roi,; Calibration cal,; double downsampleFactor,; ImagePlane plane); Create a ROI from an ImageJ Roi, using the Calibration object of an ImagePlus. Parameters:; roi - ImageJ Roi; cal - calibration object, including original information; downsampleFactor - the downsample factor of the original image; plane - plane defining c, z and t indices; Returns:. getImagePlane; public static ImagePlane getImagePlane(Roi roi,; ImagePlus imp); Get the ImagePlane of an ImageJ Roi, based upon its stored positions. Parameters:; roi - ImageJ roi that may have c, z, t or position properties set.; imp - associated image; if not null, this will be used to convert the Roi's 'position' property, if non-zero; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:23780,down,downsampleFactor,23780,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,1,['down'],['downsampleFactor']
Availability,"eredImageServer.Builder; renderer(ImageRenderer renderer). Specify the ImageRenderer that controls conversion to RGB. RenderedImageServer.Builder; settings(ImageDisplaySettings settings). Specify the ImageDisplaySettings that control conversion to RGB. RenderedImageServer.Builder; store(DefaultImageRegionStore store). Specify the region store used to paint the underlying image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(QuPathViewer viewer); Create a rendered image server build using viewer defaults. Parameters:; viewer - . Builder; public Builder(ImageData<BufferedImage> imageData); Create a rendered image server for the specified ImageData;. Parameters:; imageData - . Method Details. downsamples; public RenderedImageServer.Builder downsamples(double... downsamples); Specify downsamples; this is especially important for 'thick' objects (annotations, TMA cores); because the downsamples define the resolutions at which these will be rendered. Parameters:; downsamples - ; Returns:. display; @Deprecated; public RenderedImageServer.Builder display(ImageDisplay display); Deprecated.; use renderer(ImageRenderer) instead (since an ImageDisplay is also an ImageRenderer. Specify the ImageDisplay that controls conversion to RGB. Parameters:; display - ; Returns:. settings; public RenderedImageServer.Builder settings(ImageDisplaySettings settings); Specify the ImageDisplaySettings that control conversion to RGB.; This will only be applied if no renderer has been set. Parameters:; settings - ; Returns:; Since:; v0.5.0; See Also:. renderer(ImageRenderer). renderer; public RenderedImageServer.Builder renderer(ImageRenderer renderer); Specify the ImageRenderer that controls conversion to RGB. Parameters:; renderer - ; Returns:; See Also:. settings(ImageDisplaySettings). overlayOpacity; public RenderedImageServer.Builder overlayOpacity(double o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html:3076,down,downsamples,3076,javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html,3,['down'],['downsamples']
Availability,"erer renderer,; long timeoutMilliseconds). Similar to paintRegion(ImageServer, Graphics, Shape, int, int, double, BufferedImage, ImageObserver, ImageRenderer), ; but wait until all the tiles have arrived (or abort if it is taking too long). Method Details. paintRegionCompletely; void paintRegionCompletely(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; ImageObserver observer,; ImageRenderer renderer,; long timeoutMilliseconds); Similar to paintRegion(ImageServer, Graphics, Shape, int, int, double, BufferedImage, ImageObserver, ImageRenderer), ; but wait until all the tiles have arrived (or abort if it is taking too long). Parameters:; server - the server representing the image that shown be painted; g - the graphics object upon which to paint; clipShapeVisible - the visible shape representing the area of the graphics object that should be filled; zPosition - the z-stack position; tPosition - the timepoint position; downsampleFactor - the downsample factor; observer - an ImageObserver (often ignored); renderer - an ImageRenderer to convert images to RGB; timeoutMilliseconds - Timeout after which a request is made from the PathImageServer directly, rather than waiting for tile requests. paintRegion; void paintRegion(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; BufferedImage imgThumbnail,; ImageObserver observer,; ImageRenderer renderer); Paint an image region. Parameters:; server - the server representing the image that shown be painted; g - the graphics object upon which to paint; clipShapeVisible - the visible shape representing the area of the graphics object that should be filled; zPosition - the z-stack position; tPosition - the timepoint position; downsampleFactor - the downsample factor; imgThumbnail - a thumbnail image; if not null, this will be used to 'fill the gaps'; observer - an ImageObs",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ImageRegionRenderer.html:2156,down,downsampleFactor,2156,javadoc/docs/qupath/lib/gui/images/stores/ImageRegionRenderer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ImageRegionRenderer.html,2,['down'],"['downsample', 'downsampleFactor']"
Availability,"erfaces:; EventListener, EventHandler<MouseEvent>. Enclosing class:; MiniViewers. public static class MiniViewers.MiniViewerManager; extends Object; implements EventHandler<MouseEvent>; A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. Constructor Summary; Constructors. Constructor; Description; MiniViewerManager(QuPathViewer mainViewer,; Collection<? extends ChannelDisplayInfo> channels). Deprecated.; use MiniViewers.createManager(QuPathViewer, Collection) instead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getDownsample(). Get the downsample used within the mini viewers. GridPane; getPane(). Get the pane containing all mini viewers, which can be added to a scene for display. void; handle(MouseEvent event);  ; void; setDownsample(double downsample). Set the downsample to use within the mini viewers. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MiniViewerManager; @Deprecated; public MiniViewerManager(QuPathViewer mainViewer,; Collection<? extends ChannelDisplayInfo> channels); Deprecated.; use MiniViewers.createManager(QuPathViewer, Collection) instead. Constructor specifying a primary viewer and number of channels. Parameters:; mainViewer - the viewer that the mini viewers relate to (i.e. tracking the cursor location); channels - the channels to include. Method Details. getDownsample; public double getDownsample(); Get the downsample used within the mini viewers. Returns:. setDownsample; public void setDownsample(double downsample); Set the downsample to use within the mini viewers. Parameters:; downsample - . getPane; public GridPane getPane(); Get the pane containing all mini viewers, which can be added to a scene for display. Returns:. handle; public void handle(MouseEvent event). Specified by:; handle in interface EventHandler<MouseEvent>. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html:2077,down,downsample,2077,javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html,4,['down'],['downsample']
Availability,"ers. java.lang.Object; qupath.lib.gui.images.stores.ImageRegionStoreHelpers. public class ImageRegionStoreHelpers; extends Object; Helper methods related to image region storage.; ; Provides a standard method of tiling an image, which are used by the viewer.; ; In cases where viewing tiles are cached, this makes it possible to find out; what the tile boundaries are... and perhaps adjust requests accordingly to match with cached tiles. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ImageRegionStoreHelpers();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static RegionRequest; getTileRequest(ImageServer<BufferedImage> server,; double x,; double y,; double downsampleFactor,; int zPosition,; int tPosition). Given an ImageServer, determine the boundaries of the image tile that contains specified x, y coordinates. static List<RegionRequest>; getTilesToRequest(ImageServer<?> server,; Shape clipShape,; double downsampleFactor,; int zPosition,; int tPosition,; List<RegionRequest> regions). Given ImageServer, determine the boundaries of the image tiles that would be needed to paint; a specified shape (defined by coordinates in the full-resolution image space). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageRegionStoreHelpers; public ImageRegionStoreHelpers(). Method Details. getTilesToRequest; public static List<RegionRequest> getTilesToRequest(ImageServer<?> server,; Shape clipShape,; double downsampleFactor,; int zPosition,; int tPosition,; List<RegionRequest> regions); Given ImageServer, determine the boundaries of the image tiles that would be needed to paint; a specified shape (defined by coordinates in the full-resolution image space).; The downsampleFactor is used to determine the resolution at which to request the tiles. Parameters:; server - The ImageServer fr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ImageRegionStoreHelpers.html:1410,down,downsampleFactor,1410,javadoc/docs/qupath/lib/gui/images/stores/ImageRegionStoreHelpers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ImageRegionStoreHelpers.html,1,['down'],['downsampleFactor']
Availability,"ers.ChoiceParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; getDefaultValue() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; getDefaultValue() - Method in interface qupath.lib.plugins.parameters.Parameter. Get a default value to use if the Parameter has not been otherwise set. getDefaultWindowTitle() - Method in class qupath.lib.gui.charts.Charts.BarChartBuilder;  ; getDefaultWindowTitle() - Method in class qupath.lib.gui.charts.Charts.PieChartBuilder;  ; getDefaultWindowTitle() - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder;  ; getDefaultZoomFactor() - Method in class qupath.lib.gui.viewer.QuPathViewer. The amount by which the downsample factor is scaled for one increment of QuPathViewer.zoomIn() or ; QuPathViewer.zoomOut(). getDensityType() - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapParameters. Get the normalization type of the density map. getDerivedBoundaryStrategy(double) - Static method in class qupath.process.gui.commands.ml.BoundaryStrategy. Create a boundary strategy that trains a classifier for a PathClass derived from the original classification for annotation boundaries. getDerivedPathClass(PathClass, String) - Static method in class qupath.lib.scripting.QP. Get a PathClass with the specified name, derived from another PathClass. getDerivedPathClass(PathClass, String, Integer) - Static method in class qupath.lib.objects.classes.PathClassFactory. Deprecated.; since v0.4.0, use PathClass.getInstance(PathClass, String, Integer). getDerivedPathClass(PathClass, String, Integer) - Static method in class qupath.lib.scripting.QP. Get a PathClass with the specified name, derived from another PathCla",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:376477,down,downsample,376477,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['down'],['downsample']
Availability,"erty; alwaysPaintSelectedObjectsProperty(). Always paint selected objects in the viewer, even if the opacity setting is 0. static DoubleProperty; annotationStrokeThicknessProperty(). Preferred stroke thickness to use when drawing annotation ROIs. static DoubleProperty; autoBrightnessContrastSaturationPercentProperty(). Controls percentage of saturated pixels to apply when automatically setting brightness/contrast. static ObjectProperty<PathClass>; autoSetAnnotationClassProperty(). Classification that should automatically be applied to all new annotations. static ObjectProperty<PathPrefs.AutoUpdateType>; autoUpdateCheckProperty(). Check for updates when launching QuPath, if possible. static BooleanProperty; brushCreateNewObjectsProperty(). Create new objects by default when drawing with the Brush tool. static IntegerProperty; brushDiameterProperty(). Default brush tool diameter, in pixels. static BooleanProperty; brushScaleByMagProperty(). Optionally scale the default brush tool diameter by the viewer magnification (downsample value). static BooleanProperty; clipROIsForHierarchyProperty(). Request ROIs to be clipped and inserted as the right place in the hierarchy when drawing ; (to prevent overlapping ROIs being created accidentally). static IntegerProperty; colorDefaultObjectsProperty(). The default color used to display objects of any type, where a default has not otherwise been specified. static IntegerProperty; colorSelectedObjectProperty(). The default color used to display selected objects. static IntegerProperty; colorTileProperty(). The default color used to display tile objects. static IntegerProperty; colorTMAMissingProperty(). The default color used to display missing TMA core objects. static IntegerProperty; colorTMAProperty(). The default color used to display TMA core objects. static BooleanProperty; createPersistentPreference(String name,; boolean defaultValue). Create a persistent property, which is one that will be saved to/reloaded from the user pre",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:11735,down,downsample,11735,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['down'],['downsample']
Availability,"erty scrollSpeedProperty; Percentage to scale scroll speed for zooming etc.; Helps customize the viewer according to more/less enthusiastic input devices. See Also:. scrollSpeedProperty(). navigationSpeed; public static IntegerProperty navigationSpeedProperty; Percentage to scale navigation speed. See Also:. navigationSpeedProperty(). navigationAcceleration; public static BooleanProperty navigationAccelerationProperty; Apply acceleration/deceleration effects when holding and releasing navigation key. See Also:. navigationAccelerationProperty(). skipMissingCores; public static BooleanProperty skipMissingCoresProperty; Skip ('jump over') missing cores when navigating through TMA grids. See Also:. skipMissingCoresProperty(). scriptsPath; public static StringProperty scriptsPathProperty; Path to a directory containing scripts for quick-access through the user interface. See Also:. scriptsPathProperty(). useTileBrush; public static BooleanProperty useTileBrushProperty; Request that the brush tool automatically uses any available tiles, rather than creating 'circles' as normal. See Also:. useTileBrushProperty(). selectionMode; public static BooleanProperty selectionModeProperty; Convert drawing tools to select objects, rather than creating new objects. See Also:. selectionModeProperty(). clipROIsForHierarchy; public static BooleanProperty clipROIsForHierarchyProperty; Request ROIs to be clipped and inserted as the right place in the hierarchy when drawing ; (to prevent overlapping ROIs being created accidentally). See Also:. clipROIsForHierarchyProperty(). showExperimentalOptions; public static BooleanProperty showExperimentalOptionsProperty; Flag to indicate that menu items marked 'experimental' should be shown to the user. See Also:. showExperimentalOptionsProperty(). showTMAOptions; public static BooleanProperty showTMAOptionsProperty; Flag to indicate that the TMA menu should be shown to the user - only relevant when working with Tissue Microarrays. See Also:. showTMA",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:27955,avail,available,27955,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['avail'],['available']
Availability,"erver(ImageServer<BufferedImage> server); Optional server providing image labels.; These may be export as corresponding images alongside the 'original' pixels, e.g. to create ; training data for an AI algorithm. Parameters:; server - the labeled server; Returns:; this exporter. imageSubDir; public TileExporter imageSubDir(String subdir); Specify a subdirectory within which image tiles should be saved.; By default, tiles are written to the directory specified within writeTiles(String).; This option makes it possible to split images and labels into separate subdirectories. Parameters:; subdir - ; Returns:; this exporter. labeledImageSubDir; public TileExporter labeledImageSubDir(String subdir); Specify a subdirectory within which labeled image tiles should be saved.; By default, tile labels are written to the directory specified within writeTiles(String).; This option makes it possible to split images and labels into separate subdirectories.; ; Only relevant if labeledServer(ImageServer) is provided. Parameters:; subdir - ; Returns:; this exporter. labeledImageId; public TileExporter labeledImageId(String labelId); Specify an identifier appended to the filename for labeled images.; The labeled image name will be in the format imageName + labeledImageId + labeledImageExtension.; ; This can be used to avoid name clashes with export image tiles.; If not specified, QuPath will generate a default ID if required.; ; Only relevant if labeledServer(ImageServer) is provided. Parameters:; labelId - ; Returns:; this exporter. exportJson; public TileExporter exportJson(boolean exportJson); Optionally export a JSON file that includes label information and image/label pairs, where available. Parameters:; exportJson - ; Returns:; this exporter. writeTiles; public void writeTiles(String dirOutput); throws IOException; Export the image tiles to the specified directory. Parameters:; dirOutput - full path to the export directory; Throws:; IOException - if an error occurs during export. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/TileExporter.html:12437,avail,available,12437,javadoc/docs/qupath/lib/images/writers/TileExporter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/TileExporter.html,2,"['avail', 'error']","['available', 'error']"
Availability,"erver<BufferedImage>, RegionRequest) - Static method in class qupath.imagej.tools.IJTools. Extract a full ImageJ hyperstack for a specific region, using all z-slices and time points. extractHyperstack(ImageServer<BufferedImage>, RegionRequest, int, int, int, int) - Static method in class qupath.imagej.tools.IJTools. Extract a full ImageJ hyperstack for a specific region, for specified ranges of z-slices and time points. extractMaskedDoubles(Mat, Mat, int) - Static method in class qupath.opencv.tools.OpenCVTools. Extract pixels from an image using a mask, limited to the specified channel index. extractMaskedFloats(Mat, Mat, int) - Static method in class qupath.opencv.tools.OpenCVTools. Extract pixels from an image using a mask, limited to the specified channel index. extractMaskedPixels(Parameters<BufferedImage, BufferedImage>, int, Function<PathObject, ROI>) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. extractMaskedPixels(Parameters<BufferedImage, BufferedImage>, String, Function<PathObject, ROI>) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. extractMaskedPixels(Parameters<BufferedImage, BufferedImage>, ColorTransforms.ColorTransform, Function<PathObject, ROI>) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Extract the pixels from the image using the specified transform, and applying any ROI mask. extractOverlay(PathObjectHierarchy, RegionRequest, OverlayOptions, Predicate<PathObject>) - Static method in class qupath.imagej.gui.IJExtension. Extract an ImageJ overlay for the specified region. extractPixels(Mat, double[]) - Static method in class qupath.opencv.tools.OpenCVTools. Extract pixels as a double array. extractPixels(Mat, float[]) - Static method in class qupa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:295826,mask,mask,295826,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['mask'],['mask']
Availability,"es. labelsToDetections; public static List<PathObject> labelsToDetections(Path path,; RegionRequest request); throws IOException; Convert a labeled image to detection objects. Parameters:; path - path to labeled image file (e.g. PNGs); request - a RegionRequest representing the region or the full image, used to reposition and rescale ROIs.; If not provided, this will be extracted from the filename, if possible.; Returns:; a list of objects generated from the labels; Throws:; IOException - if there is an error reading the images. labelsToCells; public static List<PathObject> labelsToCells(Path path,; RegionRequest request); throws IOException; Convert a 2-channel labeled image to cell objects. Parameters:; path - path to labeled image file (e.g. PNGs); request - a RegionRequest representing the region or the full image, used to reposition and rescale ROIs.; If not provided, this will be extracted from the filename, if possible.; Returns:; a list of objects generated from the labels; Throws:; IOException - if there is an error reading the images. labelsToAnnotations; public static List<PathObject> labelsToAnnotations(Collection<Path> paths,; boolean mergeByLabel); throws IOException; Convert labeled images to annotation objects, determining the region from the filename if possible. Parameters:; paths - paths to image files (e.g. PNGs); mergeByLabel - if true, merge objects with the same ROI label; Returns:; a list of objects generated from the labels; Throws:; IOException - if there is an error reading the images. labelsToAnnotations; public static List<PathObject> labelsToAnnotations(Path path,; RegionRequest request); throws IOException; Convert a labeled image to annotation objects. Parameters:; path - path to labeled image file (e.g. PNGs); request - a RegionRequest representing the region or the full image, used to reposition and rescale ROIs.; If not provided, this will be extracted from the filename, if possible.; Returns:; a list of objects generated from the ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html:8113,error,error,8113,javadoc/docs/qupath/lib/analysis/images/ContourTracing.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html,1,['error'],['error']
Availability,"es.PreferencePane.ViewerPreferences;  ; autoSetAnnotationClassProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Classification that should automatically be applied to all new annotations. autoSetDisplayRange(ChannelDisplayInfo) - Method in class qupath.lib.display.ImageDisplay. Automatically set the display range for a channel, using the default saturation defined in PathPrefs.autoBrightnessContrastSaturationPercentProperty(). autoSetDisplayRange(ChannelDisplayInfo, double) - Method in class qupath.lib.display.ImageDisplay. Automatically set the display range for a channel. autoUnits() - Method in class qupath.lib.common.Timeit;  ; autoUpdate - Variable in class qupath.lib.gui.panes.PreferencePane.AppearancePreferences;  ; autoUpdate - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; autoUpdateCheckProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Check for updates when launching QuPath, if possible. availableChannels() - Method in class qupath.lib.display.ImageDisplay. ObservableList containing the channels currently available for display. availableFontsProperty() - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Get a list of available fonts. availableStylesProperty() - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Get the current available styles as an observable list. averageChannelProject() - Method in class qupath.lib.images.servers.TransformedServerBuilder. Perform an average (mean) projection of the channels. awaitCompletion() - Method in class qupath.lib.plugins.AbstractTaskRunner. Await the completion of currently-running tasks, notifying any listener if necessary. AwtTools - Class in qupath.lib.awt.common. A collection of static methods useful when working with AWT shapes and ImageRegions. B. backend(int) - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Specify the backend, e.g. backgroundColor - Variable in class qupath.lib.gui.panes.PreferencePane.Vie",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:51058,avail,availableChannels,51058,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['availableChannels']
Availability,"est that this tile represents. int; getT(). Get the time point index for this request. int; getTileHeight(). Get the height of the bounding box for this tile at the tile resolution. int; getTileWidth(). Get the width of the bounding box for this tile at the tile resolution. int; getTileX(). Get the x-coordinate of the bounding box for this tile at the tile resolution. int; getTileY(). Get the y-coordinate of the bounding box for this tile at the tile resolution. int; getZ(). Get the z-slice index for this request. int; hashCode();  ; String; toString();  . Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. createInstance; public static TileRequest createInstance(ImageServer<?> server,; int level,; ImageRegion tileRegion); Create a new tile request for a specified region and resolution level of an image.; ; Most of the time this should not be needed: use ImageServer.getTileRequestManager() instead ; to get the tiles that are actually available for an image. Parameters:; server - ; level - ; tileRegion - ; Returns:; See Also:. createInstance(ImageServer, int, ImageRegion). createInstance; public static TileRequest createInstance(String path,; int level,; double downsample,; ImageRegion tileRegion); Create a new tile request for a specified region, downsample and resolution level.; ; Most of the time this should not be needed: use ImageServer.getTileRequestManager() instead.; ; In cases where a new TileRequest is necessary, it is better to use createInstance(ImageServer, int, ImageRegion); where possible.; The current method exists for cases where a TileRequest is a useful data structure but it isn't ; associated with a specific image. Parameters:; path - ; level - ; downsample - ; tileRegion - ; Returns:; See Also:. createInstance(ImageServer, int, ImageRegion). getRegionRequest; public RegionRequest getRegionRequest(); Get the RegionRequest that this tile represents. Returns:. getDownsample; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TileRequest.html:3566,avail,available,3566,javadoc/docs/qupath/lib/images/servers/TileRequest.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TileRequest.html,1,['avail'],['available']
Availability,"et a packed ARGB representation of the (interpolated) color at the specified value,. getColorDeconvolutionStains() - Method in class qupath.lib.images.ImageData. Get the stains defined for this image, or null if this is not a brightfield image suitable for color deconvolution. getColorDeconvolutionStainsAsString(ColorDeconvolutionStains, int) - Static method in class qupath.lib.color.ColorDeconvolutionStains. Get a String representation of the stains and background. getColorForObject(PathObject) - Method in class qupath.lib.gui.tools.MeasurementMapper. Get the display color for a specified object, according to the settings of this mapper. getColorMap() - Method in class qupath.lib.gui.ColorMapCanvas. Return the currently displayed ColorMaps.ColorMap. getColorMapper() - Method in class qupath.lib.gui.tools.MeasurementMapper. Get the color mapper, which is effectively a lookup table. getColorMaps() - Static method in class qupath.lib.color.ColorMaps. Get an unmodifiable map representing all the currently-available colormaps. getColormapsDirectoryPath() - Method in class qupath.lib.gui.UserDirectoryManager. Get the path to where colormaps should be written. getColorModel() - Method in class qupath.lib.gui.images.stores.ColorModelRenderer. Get the ColorModel for this renderer (may be null). getColorModel() - Method in class qupath.lib.gui.viewer.overlays.BufferedImageOverlay;  ; getColorModel() - Method in class qupath.lib.images.servers.ChannelTransformFeatureServer;  ; getColorModel(ChannelDisplayMode) - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getColorRGB() - Method in class qupath.lib.objects.PathObject. Deprecated.; since v0.4.0, use PathObject.getColor() instead. getColorRGB(int...) - Static method in class qupath.lib.scripting.QP. Deprecated.; Use instead QP.makeRGB(int, int, int) or QP.makeARGB(int, int, int, int). getColors(ColorMaps.ColorMap, int, boolean) - Static method in class qupath.lib.color.ColorMaps. Get an array of packed RGB val",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:356835,avail,available,356835,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"et the annotations to be selected when they are created; Returns:; the annotations that were created, or an empty list if no image data was available; Since:; v0.4.0; See Also:. createAllFullImageAnnotations(ImageData, boolean). createAllFullImageAnnotations; public static List<PathObject> createAllFullImageAnnotations(ImageData<?> imageData,; boolean setSelected); Create annotation around the full image for the specified image, on all z-slices and timepoints. Parameters:; imageData - the image data; setSelected - if true, set the annotations to be selected when they are created; Returns:; the annotations that were created, or an empty list if no image data was available; Since:; v0.4.0. createFullImageAnnotation; public static PathObject createFullImageAnnotation(boolean setSelected); Create an annotation around the full image for the current image, on the default (first) z-slice and timepoint. Parameters:; setSelected - if true, set the annotation to be selected when it is created; Returns:; the annotation that was created, or null if no image data was available; Since:; v0.4.0; See Also:. createFullImageAnnotation(boolean, int, int); createFullImageAnnotation(ImageData, boolean). createFullImageAnnotation; public static PathObject createFullImageAnnotation(boolean setSelected,; int z,; int t); Create an annotation around the full image for the current image, on the specified z-slice and timepoint. Parameters:; setSelected - if true, set the annotation to be selected when it is created; z - z-slice (0-based index); t - timepoint (0-based index); Returns:; the annotation that was created, or null if no image data was available; Since:; v0.4.0; See Also:. createFullImageAnnotation(ImageData, boolean, int, int). createFullImageAnnotation; public static PathObject createFullImageAnnotation(ImageData<?> imageData,; boolean setSelected); Create an annotation around the full image for the specified image, on the default (first) z-slice and timepoint. Parameters:; imageDat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:71787,avail,available,71787,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['avail'],['available']
Availability,"etAcceleratorText(). See Also:. getAcceleratorText(); acceleratorTextProperty(). text; public ReadOnlyStringProperty textProperty; Property corresponding to getText(). See Also:. getText(); textProperty(). longText; public ReadOnlyStringProperty longTextProperty; Property corresponding to getLongText(). See Also:. getLongText(); longTextProperty(). menuPath; public ReadOnlyStringProperty menuPathProperty; Property corresponding to getMenuPath(). See Also:. getMenuPath(); menuPathProperty(). Method Details. getMenuItem; public MenuItem getMenuItem(); Get the menu item corresponding to this command. Returns:. getCommandPath; public String getCommandPath(); Get a string representation of the menu path for this command, including the menu path and the text. Returns:. getText; public String getText(); Get the name of the command. Returns:. getLongText; public String getLongText(); Get the long text (description) for the command, if available.; This assumes an action property has been set, see ActionTools.putActionProperty(MenuItem, org.controlsfx.control.action.Action). Returns:; the long text for the command, or null if no such text is available. getAcceleratorText; public String getAcceleratorText(); Get a String representation of any accelerator for the command. Returns:. getMenuPath; public String getMenuPath(); Get a String representation of the menu containing this command. Returns:. acceleratorTextProperty; public ReadOnlyStringProperty acceleratorTextProperty(); Property corresponding to getAcceleratorText(). Returns:; See Also:. getAcceleratorText(). textProperty; public ReadOnlyStringProperty textProperty(); Property corresponding to getText(). Returns:; See Also:. getText(). longTextProperty; public ReadOnlyStringProperty longTextProperty(); Property corresponding to getLongText(). Returns:; See Also:. getLongText(). menuPathProperty; public ReadOnlyStringProperty menuPathProperty(); Property corresponding to getMenuPath(). Returns:; See Also:. getMenuPath(). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandEntry.html:3401,avail,available,3401,javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandEntry.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/CommandFinderTools.CommandEntry.html,1,['avail'],['available']
Availability,"etCachedTilesForServer(ImageServer<BufferedImage> server). Get a map of all cached tiles pertaining to a specific ImageServer. BufferedImage; getThumbnail(ImageServer<BufferedImage> server,; int zPosition,; int tPosition,; boolean addToCache);  ; long; getTileCacheSize(). Get the tile cache size, in bytes. void; paintRegion(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; BufferedImage imgThumbnail,; ImageObserver observer,; ImageRenderer imageDisplay). Paint an image region. void; paintRegionCompletely(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; ImageObserver observer,; ImageRenderer imageDisplay,; long timeoutMilliseconds). Similar to paintRegion, but wait until all the tiles have arrived (or abort if it is taking too long). protected void; registerRequest(TileListener<BufferedImage> tileListener,; ImageServer<BufferedImage> server,; Shape clipShape,; double downsampleFactor,; int zPosition,; int tPosition). Register a request so that the tile request queue will be populated, including potentially for nearby tiles (i.e. protected void; registerRequest(TileListener<BufferedImage> tileListener,; ImageServer<BufferedImage> server,; RegionRequest region,; double downsampleFactor,; int zPosition,; int tPosition);  ; void; removeTileListener(TileListener<BufferedImage> listener);  ; protected Object; requestImageTile(ImageServer<BufferedImage> server,; RegionRequest request,; Map<RegionRequest,BufferedImage> cache,; boolean ensureTileReturned). Request an image tile. protected boolean; stopWaiting(RegionRequest request);  ; protected void; workerComplete(qupath.lib.gui.images.stores.TileWorker<BufferedImage> worker). Every TileWorker should call this when the task is done!. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html:3193,down,downsampleFactor,3193,javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,1,['down'],['downsampleFactor']
Availability,"etPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. HierarchyOverlay; public HierarchyOverlay(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions,; ImageData<BufferedImage> imageData); Constructor. Note that a HierarchyOverlay cannot adapt very efficient to changes in ImageData, and therefore ; should not be reused across viewers. Parameters:; regionStore - region store to cache image tiles; overlayOptions - overlay options to control display; imageData - current image data. Method Details. resetImageData; public void resetImageData(); Reset the last image data.; The hierarchy overlay stores the last-seen image data internally to assist with caching, but retaining a reference; too long could become a memory leak. paintOverlay; public void paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely); Description copied from interface: PathOverlay; Paint the overlay to a graphics object. The graphics object will have a transform applied to it, so the painting should; make use of coordinates in the original image space. Parameters:; g2d - Graphics2D object to which drawing should be performed. This should have any transform already applied to it.; imageRegion - The maximum image region that should be shown.; downsampleFactor - The downsample factor at which the overlay will be viewed. There is no need for rescaling according to; this value since it has already been applied to the Graphics2D as part of its AffineTransform, however; it may optionally be needed within the method e.g. to correct line thicknesses.; imageData - the ImageData associated with this overlay. If the overlay is being displayed on a viewer, this is the ImageData open ; within the viewer. Not all overlays require this, and it may be null.; paintCompletely - If true, the me",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html:2879,down,downsampleFactor,2879,javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html,1,['down'],['downsampleFactor']
Availability,"etThumbnail; public BufferedImage getThumbnail(); Get a thumbnail representing the image as displayed by this viewer. Returns:. getAllThumbnails; public List<BufferedImage> getAllThumbnails(); Get thumbnails for all z-slices & time points. Returns:. getRGBThumbnail; public BufferedImage getRGBThumbnail(); Get a thumbnail representing the image as displayed by this viewer.; ; Note: This will be a color (aRGB) image, with any color transforms applied -; therefore should not be used to extract 'original' pixel values. Returns:. setDownsampleFactor; public void setDownsampleFactor(double downsampleFactor,; double cx,; double cy); Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards.; The purpose is to make it possible to zoom in/out while keeping the cursor focussed on a particular location.; ; The specified downsample factor will automatically be clipped to the range getMinDownsample to getMaxDownsample. Parameters:; downsampleFactor - ; cx - ; cy - . setDownsampleFactor; public void setDownsampleFactor(double downsampleFactor,; double cx,; double cy,; boolean clipToMinMax); Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards.; The purpose is to make it possible to zoom in/out while keeping the cursor focused on a particular location. Parameters:; downsampleFactor - ; cx - ; cy - ; clipToMinMax - If true, the specified downsample factor will be clipped ; to the range getMinDownsample to getMaxDownsample. getZoomToFitDownsampleFactor; protected double getZoomToFitDownsampleFactor(). getServerWidth; public int getServerWidth(); Get the width in pixels of the full resolution of the current image, or 0 if no image is currently open. Returns:. getServerHeight; public int getServerHeight(); Get the height in pixels of the full resolution of the current image, or 0 if no image is currently open. Returns:. getServerBounds; public ImageRegion getServerBou",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:29592,down,downsampleFactor,29592,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,1,['down'],['downsampleFactor']
Availability,"etadata). Returns true if a specified ImageServerMetadata is compatible with this one, that is it has the same path and dimensions; (but possibly different pixel sizes, magnifications etc.). boolean; isRGB(). Returns true if the pixels are stored in (A)RGB form. int; nLevels(). Get the number of resolution levels. boolean; pixelSizeCalibrated(). Returns true if pixel width and height calibration information is available for the image. String; toString();  ; boolean; zSpacingCalibrated(). Returns true if z-spacing calibration information is available for the image. Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Field Details. DEFAULT_CLASSIFICATION_LABELS_CHANNEL; public static final ImageChannel DEFAULT_CLASSIFICATION_LABELS_CHANNEL; Default channel to use with images where the channel type is ImageServerMetadata.ChannelType.CLASSIFICATION. Method Details. getPreferredDownsamplesArray; public double[] getPreferredDownsamplesArray(); Request the preferred downsamples from the image metadata.; ; Note that this makes a defensive copy, and so should not be called often; it is generally preferably ; to request downsample values individually. Returns:. getLevels; public List<ImageServerMetadata.ImageResolutionLevel> getLevels(); Get an unmodifiable list containing the resolution levels. Returns:. getWidth; public int getWidth(); Get the full-resolution image width. Returns:. getHeight; public int getHeight(); Get the full-resolution image height. Returns:. nLevels; public int nLevels(); Get the number of resolution levels. For a non-pyramidal image, this is 1. Returns:. getPixelCalibration; public PixelCalibration getPixelCalibration(); Get a PixelCalibration object representing the pixel size information for this metadata object. Returns:. getDownsampleForLevel; public double getDownsampleForLevel(int level); Get the downsample factor for a specific resolution level. Parameters:; level - ; Returns:. getLevel;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html:5020,down,downsamples,5020,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html,1,['down'],['downsamples']
Availability,"etails. inputChannels; public PatchClassifierParams.Builder inputChannels(String... channels); Define the input channels using channel names. Parameters:; channels - ; Returns:; See Also:. inputChannels(int...). inputChannels; public PatchClassifierParams.Builder inputChannels(int... channels); Define the input channels using (zero-based) channel numbers. Parameters:; channels - ; Returns:; See Also:. inputChannels(String...). inputChannels; public PatchClassifierParams.Builder inputChannels(Collection<? extends ColorTransforms.ColorTransform> channels); Define the input channels from a collection of color transforms.; An ordered collection (e.g. list) should be used, since the iteration order ; is important. Parameters:; channels - ; Returns:. inputResolution; public PatchClassifierParams.Builder inputResolution(PixelCalibration cal,; double downsample); Define the input resolution using a pixel calibration and a scaling factor. Parameters:; cal - input calibration; if null, a default calibration will be used; downsample - scaling factor (1.0 to use the calibration directly); Returns:. inputResolution; public PatchClassifierParams.Builder inputResolution(PixelCalibration cal); Define the input resolution using a pixel calibration object. Parameters:; cal - ; Returns:. halo; public PatchClassifierParams.Builder halo(int padding); Define a halo that is symmetric in x and y. Parameters:; padding - padding value, to be added both before and after rows and columns.; Returns:; See Also:. halo(Padding). halo; public PatchClassifierParams.Builder halo(Padding halo); Define a halo using a padding object. Parameters:; halo - ; Returns:; See Also:. halo(int). patchSize; public PatchClassifierParams.Builder patchSize(int patchSize); Define the requested square patch size. Parameters:; patchSize - width and height of the patch; Returns:. patchSize; public PatchClassifierParams.Builder patchSize(int patchWidth,; int patchHeight); Define the requested patch size. Parameters:; patc",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:4683,down,downsample,4683,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,1,['down'],['downsample']
Availability,"eters:; path - ; downsample - ; region - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; int x,; int y,; int width,; int height,; int z,; int t); Create a request for a region specified in terms of its bounding box, z-slice and time point. Parameters:; path - ; downsample - ; x - ; y - ; width - ; height - ; z - ; t - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; int x,; int y,; int width,; int height,; ImagePlane plane); Create a request for a region specified in terms of its bounding box and ImagePlane. Parameters:; path - ; downsample - ; x - ; y - ; width - ; height - ; plane - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; int x,; int y,; int width,; int height); Create a request for a region specified in terms of its bounding box, using the first z-slice and time point. Parameters:; path - ; downsample - ; x - ; y - ; width - ; height - ; Returns:. overlapsRequest; public boolean overlapsRequest(RegionRequest request); Returns true if the region specified by this request overlaps with that of another request.; The test includes insuring that they refer to the same image by checking the paths are the same. Parameters:; request - ; Returns:. getPath; public String getPath(); Get the requested ImageServer path, used as an identifier. Returns:; See Also:. ImageServer.getPath(). getDownsample; public double getDownsample(); Get the requested downsample factor, defining the resolution at which pixels should be returned. Returns:. intersect2D; public RegionRequest intersect2D(ImageRegion region); Intersect to the specified 2D region, ignoring z and t. Parameters:; region - the region defining the x, y, width and height of the maximum permitted bounding box.; Returns:; the clipped RegionRequest, which may be this if no clipping is required. intersect2D; public RegionRequest intersect2D(int x,; int",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html:7723,down,downsample,7723,javadoc/docs/qupath/lib/regions/RegionRequest.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html,1,['down'],['downsample']
Availability,"eters:; scaleX - horizontal scale value; scaleY - vertical scale value; originX - value subtracted from each x-ordinate prior to scaling, and added back afterwards; originY - value subtracted from each y-ordinate prior to scaling, and added back afterwards; Returns:; See Also:. ROI.scale(double, double). getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Retur",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html:10782,avail,available,10782,javadoc/docs/qupath/lib/roi/LineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/LineROI.html,1,['avail'],['available']
Availability,"ethod Details. setCache; public static <T> void setCache(Map<RegionRequest,T> cache,; Class<T> cls); Set the cache to be used for image tiles of a specific type. Type Parameters:; T - ; Parameters:; cache - ; cls - . getCache; public static <T> Map<RegionRequest,T> getCache(Class<T> cls); Get the cache in use for image tiles of a specific type. Type Parameters:; T - ; Parameters:; cls - ; Returns:. setServiceLoader; public static void setServiceLoader(ServiceLoader<ImageServerBuilder> newLoader); Replace the default service loader with another.; ; This can be handy if the ServiceLoader should be using an alternative ClassLoader,; e.g. to auto-discover ImageServerBuilders in alternative directories. Parameters:; newLoader - . getInstalledImageServerBuilders; public static List<ImageServerBuilder<?>> getInstalledImageServerBuilders(); Request all available ImageServerBuilders. Returns:. getInstalledImageServerBuilders; public static <T> List<ImageServerBuilder<T>> getInstalledImageServerBuilders(Class<T> imageClass); Request all available ImageServerBuilders supporting a given image class. Type Parameters:; T - ; Parameters:; imageClass - ; Returns:. legacyPathToURI; public static URI legacyPathToURI(String path); throws IOException; Method to help with converting legacy image paths to URIs.; This is intended for compatibility with data files used in QuPath v0.1.2, where servers ; were represented using paths only (rather than JSON). Parameters:; path - ; Returns:; a URI parsed from a path, if possible; Throws:; IOException. getPreferredUriImageSupport; public static <T>; ImageServerBuilder.UriImageSupport<T> getPreferredUriImageSupport(Class<T> cls,; String path,; String... args); throws IOException; Get the preferred ImageServerBuilder.UriImageSupport for a specified image path. Type Parameters:; T - ; Parameters:; cls - ; path - ; args - ; Returns:; Throws:; IOException. buildServer; public static <T> ImageServer<T> buildServer(String path,; Class<T> cls,; String...",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerProvider.html:3322,avail,available,3322,javadoc/docs/qupath/lib/images/servers/ImageServerProvider.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerProvider.html,1,['avail'],['available']
Availability,"ethod. Detail:. Enum Constants; Field; Method. Summary: ; Nested | ; Enum Constants | ; Field | ; Method. Detail: ; Enum Constants | ; Field | ; Method. SEARCH. Package qupath.lib.gui.viewer; Enum Class OverlayOptions.DetectionDisplayMode. java.lang.Object; java.lang.Enum<OverlayOptions.DetectionDisplayMode>; qupath.lib.gui.viewer.OverlayOptions.DetectionDisplayMode. All Implemented Interfaces:; Serializable, Comparable<OverlayOptions.DetectionDisplayMode>, Constable. Enclosing class:; OverlayOptions. public static enum OverlayOptions.DetectionDisplayMode; extends Enum<OverlayOptions.DetectionDisplayMode>; Display modes for cells and other detections. Nested Class Summary. Nested classes/interfaces inherited from class java.lang.Enum; Enum.EnumDesc<E extends Enum<E>>. Enum Constant Summary; Enum Constants. Enum Constant; Description; BOUNDARIES_ONLY. Show only cell boundaries. CENTROIDS. Show only detection centroids, not boundaries. NUCLEI_AND_BOUNDARIES. Show both cell boundaries and cell nuclei, where available. NUCLEI_ONLY. Show only cell nuclei. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OverlayOptions.DetectionDisplayMode; valueOf(String name). Returns the enum constant of this class with the specified name. static OverlayOptions.DetectionDisplayMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. BOUNDARIES_ONLY; public static final OverlayOptions.DetectionDisplayMode BOUNDARIES_ONLY; Show only cell boundaries. NUCLEI_ONLY; public static final OverlayOptions.DetectionDisplayMode NUCLEI_ONLY; Show only cell nuclei. NUCLEI_AND_BOUNDARIES; public static final Overlay",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html:1241,avail,available,1241,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html,1,['avail'],['available']
Availability,"ethod. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.regions; Class RegionRequest. java.lang.Object; qupath.lib.regions.ImageRegion; qupath.lib.regions.RegionRequest. public class RegionRequest; extends ImageRegion; Class for defining an image region that can also be used to request these region from an ImageServer.; ; In addition to the information contained within an ImageRegion, also contains the path to the image; (and optionally an additional image name stored within it) and a downsample value. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static List<RegionRequest>; createAllRequests(ImageServer<?> server,; double downsample). Create requests for the full width and height of an ImageServer, for all planes (z-slices and time points). static RegionRequest; createInstance(String path,; double downsample,; int x,; int y,; int width,; int height). Create a request for a region specified in terms of its bounding box, using the first z-slice and time point. static RegionRequest; createInstance(String path,; double downsample,; int x,; int y,; int width,; int height,; int z,; int t). Create a request for a region specified in terms of its bounding box, z-slice and time point. static RegionRequest; createInstance(String path,; double downsample,; int x,; int y,; int width,; int height,; ImagePlane plane). Create a request for a region specified in terms of its bounding box and ImagePlane. static RegionRequest; createInstance(String path,; double downsample,; Collection<? extends ROI> rois). Create a request that contains the pixels of the specified ROIs. static RegionRequest; createInstance(String path,; double downsample,; ImageRegion region). Create a request corresponding to a specified ImageRegion. static RegionRequest; createInstance(String path,; double downsample,; ROI ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html:1194,down,downsample,1194,javadoc/docs/qupath/lib/regions/RegionRequest.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html,1,['down'],['downsample']
Availability,"ethod; Description; static ObservableList<QuPathStyleManager.Fonts>; availableFontsProperty(). Get a list of available fonts. static ObservableList<QuPathStyleManager.StyleOption>; availableStylesProperty(). Get the current available styles as an observable list. static ObjectProperty<QuPathStyleManager.Fonts>; fontProperty(). Get the current selected font. static boolean; installStyles(Collection<File> list). Handle installing CSS files (which can be used to style QuPath). static boolean; isDefaultStyle(). Check if the default JavaFX style is used. static void; refresh(). Refresh the current style. static ObjectProperty<QuPathStyleManager.StyleOption>; selectedStyleProperty(). Get the current selected style. static void; updateAvailableStyles(). Request that the list of available styles is updated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. availableStyles; public static ObservableList<QuPathStyleManager.StyleOption> availableStylesProperty; Get the current available styles as an observable list.; The list is unmodifiable, since any changes should be made via adding/removing files in UserDirectoryManager.getCssStylesPath(). See Also:. availableStylesProperty(). selectedStyle; public static ObjectProperty<QuPathStyleManager.StyleOption> selectedStyleProperty; Get the current selected style. See Also:. selectedStyleProperty(). availableFonts; public static ObservableList<QuPathStyleManager.Fonts> availableFontsProperty; Get a list of available fonts.; The list is unmodifiable, since this is primarily used to overcome issues with the default font on macOS ; by changing the font family. More fine-grained changes can be made via css. See Also:. availableFontsProperty(). font; public static ObjectProperty<QuPathStyleManager.Fonts> fontProperty; Get the current selected font. See Also:. fontProperty(). Constructor Details. QuPathStyleManager; public QuPathStyl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html:2531,avail,availableStyles,2531,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,1,['avail'],['availableStyles']
Availability,"eton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Returns:. readRegion; public T readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; Throws:; IOException; See Also:. ImageServer.readRegion(double, int, int, int, int, int, int); ImageServer.readRegion(double, int, int, int, int); ImageServer.readBufferedImage(RegionRequest). getOriginalMetadata; public ImageServerMetadata getOriginalMetadata(); Description copied from interface: ImageServer; Get the original metadata read during creation of the server. This may or may not be correct. Returns:; See Also:. ImageServer.getMetadata(). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TransformingImageServer.html:4222,down,downsampling,4222,javadoc/docs/qupath/lib/images/servers/TransformingImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TransformingImageServer.html,1,['down'],['downsampling']
Availability,"eturns:. getPixelType; public PixelType getPixelType(); Returns the bit-depth for individual pixels in the image. Returns:. getMinValue; public Number getMinValue(); Get the minimum value supported by this image.; By default, this is the lower bound of the PixelType unless otherwise specified. Returns:; See Also:. getPixelType(). getMaxValue; public Number getMaxValue(); Get the minimum value supported by this image.; By default, this is the lower bound of the PixelType unless otherwise specified.; This purpose of this method is to support other effective bit-depths (e.g. 12-bit, 14-bit). Returns:; See Also:. getPixelType(). pixelSizeCalibrated; public boolean pixelSizeCalibrated(); Returns true if pixel width and height calibration information is available for the image. Returns:. zSpacingCalibrated; public boolean zSpacingCalibrated(); Returns true if z-spacing calibration information is available for the image. Returns:. getAveragedPixelSize; public double getAveragedPixelSize(); Get the averaged pixel size in microns, if available - or Double.NaN otherwise. Returns:. getPixelWidthMicrons; public double getPixelWidthMicrons(); Get the pixel width in microns, if available - or Double.NaN otherwise. Returns:. getPixelHeightMicrons; public double getPixelHeightMicrons(); Get the pixel height in microns, if available - or Double.NaN otherwise. Returns:. getZSpacingMicrons; public double getZSpacingMicrons(); Get the z-spacing in microns, if available - or Double.NaN otherwise. Returns:. getTimeUnit; public TimeUnit getTimeUnit(); Get the time unit for a time series. Returns:. getTimepoint; public double getTimepoint(int ind); Get the time point, defined in getTimeUnit(), or Double.NaN if this is unknown. Parameters:; ind - ; Returns:. getSizeZ; public int getSizeZ(); Get the number of z-slices. Returns:. getSizeT; public int getSizeT(); Get the number of time points. Returns:. getSizeC; public int getSizeC(); Get the number of image channels. Returns:. getMagnificati",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html:7278,avail,available,7278,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html,1,['avail'],['available']
Availability,"eviation. meanFilter(Mat, int) - Static method in class qupath.opencv.tools.OpenCVTools. Apply a circular 2D mean filter to all channels of an image, with symmetric boundary padding. meanFilter(Mat, int, int) - Static method in class qupath.opencv.tools.OpenCVTools. Apply a circular 2D mean filter to all channels of an image. MEASURE - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; MEASURE_ANNOTATIONS - Variable in class qupath.lib.gui.actions.CommonActions;  ; MEASURE_DETECTIONS - Variable in class qupath.lib.gui.actions.CommonActions;  ; MEASURE_GRID_ANNOTATIONS - Variable in class qupath.lib.gui.actions.CommonActions;  ; MEASURE_GRID_TMA_CORES - Variable in class qupath.lib.gui.actions.CommonActions;  ; MEASURE_TMA - Variable in class qupath.lib.gui.actions.CommonActions;  ; measureHaralick(SimpleImage, SimpleImage, int, double, double, int) - Static method in class qupath.lib.analysis.features.HaralickFeatureComputer. Compute mean Haralick features from a SimpleImage, with optional masking. measurement(PathObject, String) - Static method in class qupath.lib.scripting.QP. Extract the specified measurement from a PathObject. Measurement - Interface in qupath.lib.measurements. Basic interface to define a measurement. MeasurementExportCommand - Class in qupath.lib.gui.commands. Dialog box to export measurements. MeasurementExportCommand(QuPathGUI) - Constructor for class qupath.lib.gui.commands.MeasurementExportCommand. Creates a simple GUI for MeasurementExporter. MeasurementExporter - Class in qupath.lib.gui.tools. Helper class for exporting the measurements of one or more entries in a project. MeasurementExporter() - Constructor for class qupath.lib.gui.tools.MeasurementExporter;  ; MeasurementFactory - Class in qupath.lib.measurements. Deprecated. MeasurementFactory() - Constructor for class qupath.lib.measurements.MeasurementFactory. Deprecated.;  ; MeasurementList - Interface in qupath.lib.measurements. Interface defining a feature ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:681821,mask,masking,681821,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['mask'],['masking']
Availability,"ew Timeit();; timeit.checkpoint(""First checkpoint"");; // Do something; timeit.checkpoint(""Second checkpoint"");; // Do something else; timeit.stop();; System.out.println(timeit);; ; . Finally, a Timeit can be used to repeatedly run the same code multiple times, and print the timings at the end.; ; ; var timeit = new Timeit(); .microseconds(); .checkpointAndRun(""Greeting"", () -> System.out.println(""Hello!""), 10); .summarizeCheckpoints(); .stop();; System.out.println(timeit);; ; . Since:; v0.4.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Timeit.Checkpoint. Class representing a named checkpoint with a timestamp in nanoseconds. Constructor Summary; Constructors. Constructor; Description; Timeit();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Timeit; autoUnits();  ; Timeit; checkpoint(). Create a new checkpoint with a default name. Timeit; checkpoint(String name). Create a new checkpoint with the specified name. Timeit; checkpointAndRun(Runnable runnable). Create a checkpoint with the default name and immediately run the provided runnable. Timeit; checkpointAndRun(String name,; Runnable runnable). Create a checkpoint and immediately run the provided Runnable. Timeit; checkpointAndRun(String name,; Runnable runnable,; int nIterations). Create a checkpoint and immediately run the provided Runnable nIterations times. List<Timeit.Checkpoint>; getCheckpoints(). Get an list of all the checkpoints. int; getMaxDecimalPlaces(). Get the maximum number of decimal places when reporting timings. static void; main(String[] args);  ; Timeit; maxDecimalPlaces(int maxDP). Set the maximum number of decimal places when reporting timings ; using seconds or minutes. Timeit; microseconds(). Report timings in microseconds. Timeit; milliseconds(). Report timings in milliseconds. Timeit; minutes(). Report timings in minutes. Timeit; nanoseconds(). Repor",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:1943,checkpoint,checkpoint,1943,javadoc/docs/qupath/lib/common/Timeit.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html,1,['checkpoint'],['checkpoint']
Availability,"ewer, or null if no viewer is active in QuPath currently. locateFile; public static String locateFile(String nameOrPath); throws IOException; Locate a specified file based upon its name or path, with a search depth of 4.; This first checks if the provided path is to a file that already exists.; If it is not, then it searches recursively within the current project or ; user directory (if available) up to a fixed search depth for a file with the same name. Parameters:; nameOrPath - the original name or path; Returns:; the identified file path, or the original file path if no update was found or required; Throws:; IOException; See Also:. UriUpdater.locateFile(String, int, Path...). locateFile; public static String locateFile(String nameOrPath,; int searchDepth); throws IOException; Locate a specified file based upon its name or path.; This first checks if the provided path is to a file that already exists.; If it is not, then it searches recursively within the current project or ; user directory (if available) up to a specified search depth for a file with the same name. Parameters:; nameOrPath - the original name or path; searchDepth - how deep to search subdirectories recursively; Returns:; the identified file path, or the original file path if no update was found or required; Throws:; IOException; See Also:. UriUpdater.locateFile(String, int, Path...). runPlugin; public static boolean runPlugin(String className,; ImageData<?> imageData,; String args); throws InterruptedException. Throws:; InterruptedException. runPlugin; public static boolean runPlugin(String className,; String args); throws InterruptedException. Throws:; InterruptedException. createTaskRunner; public static TaskRunner createTaskRunner(); Create a task runner with the default number of threads defined by ThreadTools.getParallelism().; This will either be interactive (if QuPath is running, and the current image is open or headless. Returns:. createTaskRunner; public static TaskRunner createTaskRunner",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:14397,avail,available,14397,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html,1,['avail'],['available']
Availability,"ewerManager. java.lang.Object; qupath.lib.gui.commands.MiniViewers.MiniViewerManager. All Implemented Interfaces:; EventListener, EventHandler<MouseEvent>. Enclosing class:; MiniViewers. public static class MiniViewers.MiniViewerManager; extends Object; implements EventHandler<MouseEvent>; A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. Constructor Summary; Constructors. Constructor; Description; MiniViewerManager(QuPathViewer mainViewer,; Collection<? extends ChannelDisplayInfo> channels). Deprecated.; use MiniViewers.createManager(QuPathViewer, Collection) instead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getDownsample(). Get the downsample used within the mini viewers. GridPane; getPane(). Get the pane containing all mini viewers, which can be added to a scene for display. void; handle(MouseEvent event);  ; void; setDownsample(double downsample). Set the downsample to use within the mini viewers. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MiniViewerManager; @Deprecated; public MiniViewerManager(QuPathViewer mainViewer,; Collection<? extends ChannelDisplayInfo> channels); Deprecated.; use MiniViewers.createManager(QuPathViewer, Collection) instead. Constructor specifying a primary viewer and number of channels. Parameters:; mainViewer - the viewer that the mini viewers relate to (i.e. tracking the cursor location); channels - the channels to include. Method Details. getDownsample; public double getDownsample(); Get the downsample used within the mini viewers. Returns:. setDownsample; public void setDownsample(double downsample); Set the downsample to use within the mini viewers. Parameters:; downsample - . getPane; public GridPane getPane(); Get the pane containing all mini viewers, which can be added to a scene for display. Returns:. han",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html:1385,down,downsample,1385,javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html,1,['down'],['downsample']
Availability,"extends Number, String>) - Static method in class qupath.lib.experimental.pixels.OpenCVProcessor. Create an OutputHandler.OutputToObjectConverter to convert Mat labeled images to; path objects, optionally setting the classification. createObjectDescriptionsDialog(QuPathGUI) - Static method in class qupath.lib.gui.commands.Commands. Create a stage to display object descriptions. createObjectFunction(Function<ROI, PathObject>, BiConsumer<PathObject, Number>) - Static method in class qupath.lib.analysis.images.ContourTracing. Create a (bi)function to generate an object from a ROI and a number. createObjectInputStream(InputStream) - Static method in class qupath.lib.io.PathIO. Create a new ObjectInputStream, setting the default ObjectInputFilter for core QuPath-related ; and Java classes only. createObjectOutputHandler(OutputHandler.OutputToObjectConverter<S, T, U>) - Static method in interface qupath.lib.experimental.pixels.OutputHandler. Create an output handler that can be used to add objects to the parent object, applying the ROI mask. createObjectRemovedEvent(Object, PathObjectHierarchy, PathObject, PathObject) - Static method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. Create a hierarchy event indicating objects were removed. createObjects(Raster, int, RegionRequest, int, int, BiFunction<ROI, Number, PathObject>) - Static method in class qupath.lib.analysis.images.ContourTracing. Create objects from one band of a raster containing integer labels. createObjects(Mat, RegionRequest, int, int, BiFunction<ROI, Number, PathObject>) - Static method in class qupath.opencv.tools.OpenCVTools. Create objects by tracing contours in a labelled image. createObjects(SimpleImage, RegionRequest, int, int, BiFunction<ROI, Number, PathObject>) - Static method in class qupath.lib.analysis.images.ContourTracing. Create objects from a labelled image. createObjects(ROI, Function<ROI, PathObject>) - Method in class qupath.lib.objects.utils.Tiler. Create a list ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:203059,mask,mask,203059,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['mask'],['mask']
Availability,"f columns to include in the export. getIndexColorModel(StainVector) - Static method in class qupath.lib.color.ColorToolsAwt. Create an IndexColorModel, ranging from white (low values) to a stain vector color (high values). getIndexColorModel(StainVector, boolean) - Static method in class qupath.lib.color.ColorToolsAwt. Get an IndexColorModel representing a color deconvolution stain. getIndexedClassificationColorModel(Map<Integer, PathClass>) - Static method in class qupath.lib.color.ColorModelFactory. Get a ColorModel suitable for showing output pixel classifications, using an 8-bit or 16-bit labeled image. getInds() - Method in class qupath.opencv.tools.OpenCVTools.IndexedPixel. Get the index array. getInfoMessage() - Method in class qupath.lib.gui.commands.ContextHelpViewer. Get a message that may be used to create a badge indicating that info or warning messages; are available. getInfoMessage() - Method in class qupath.lib.gui.commands.LogViewerCommand. Get a string expression to draw attention to error messages. getInputChannels() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the channels to extract from the image as input to the model. getInputHeight() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Requested height of input image, or -1 if the classifier is not fussy. getInputLength() - Method in class qupath.opencv.ml.FeaturePreprocessor. Get the number of features required of the input. getInputNumChannels() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Requested number of channels in input image; default is 3 (consistent with assuming RGB). getInputPadding() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Requested input padding (above, below, left and right). getInputResolution() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Requested pixel size for input. getInputResolution() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the r",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:412723,error,error,412723,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['error'],['error']
Availability,f no image is available. DoubleProperty; saturationPercent. Get the percentage of any non-8-bit image that should be saturated when applying auto contrast settings. Constructor Summary; Constructors. Constructor; Description; SimpleImageViewer(). Create a new simple image viewer. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<BufferedImage>; bufferedImageProperty(). Get a read-only property representing the buffered image. BooleanProperty; expandToWindowProperty(). Get the property indicating whether the image should grow to fill the window (while maintaining its; aspect ratio). BufferedImage; getBufferedImage(). Get the buffered image. boolean; getExpandToWindow(). Query whether the image is allowed to expand beyond its preferred width and height to fill the window. Image; getImage(). Get the JavaFX image. String; getName(). Get the name of the image. String; getPlaceholderText(). Get the placeholder text to show if no image is available. double; getSaturationPercent(). Get the percentage of pixels to use when applying auto contrast settings to a non-8-bit image. Stage; getStage(). Get the stage used to display the image. ReadOnlyObjectProperty<String>; imageNameProperty(). Get a read-only property indicating the name of the image. ReadOnlyObjectProperty<Image>; imageProperty(). Get a read-only property representing the JavaFX image. StringProperty; placeholderTextProperty(). Get the placeholder text to show if no image is available. void; resetImage(). Remove the image. DoubleProperty; saturationPercentProperty(). Get the percentage of any non-8-bit image that should be saturated when applying auto contrast settings. void; setExpandToWindow(boolean limit). Control whether the image should be allowed to expand beyond its preferred width and height to fill the window. void; setPlaceholderText(String placeholder). Set the placeholder text to show if no image is available. void; setSaturationP,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html:2472,avail,available,2472,javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html,1,['avail'],['available']
Availability,"f switchToGrayscaleChannelProperty(). Parameters:; channel - ; Since:; v0.5.0. getSwitchToGrayscaleChannel; public ChannelDisplayInfo getSwitchToGrayscaleChannel(); Get the value of switchToGrayscaleChannelProperty(). Returns:; Since:; v0.5.0. setMinMaxDisplay; public void setMinMaxDisplay(ChannelDisplayInfo info,; float minDisplay,; float maxDisplay); Set the min/max display values for a specified ChannelDisplayInfo.; ; The benefit of calling this method is that it will update the ImageData metadata if appropriate. Parameters:; info - ; minDisplay - ; maxDisplay - . saveChannelColorProperties; public void saveChannelColorProperties(); Save color channels in the ImageData properties. This lets them be deserialized later. selectedChannels; public ObservableList<ChannelDisplayInfo> selectedChannels(); ObservableList containing the channels currently selected for display. Returns:; See Also:. availableChannels(). availableChannels; public ObservableList<ChannelDisplayInfo> availableChannels(); ObservableList containing the channels currently available for display. Returns:; See Also:. selectedChannels(). setChannelSelected; public void setChannelSelected(ChannelDisplayInfo channel,; boolean selected); Set the selection of a channel on or off.; ; If a channel's isAdditive() method returns false, all other selected channels will be cleared.; Otherwise, other selected channels will be cleared if they are non-additive - but kept if they are additive; (and therefore can be sensibly displayed in combination with this channel). Parameters:; channel - ; selected - true if the channel should be selected, false if it should not. applyTransforms; public BufferedImage applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput); Apply the required transforms to a BufferedImage to get the appropriate display.; imgOutput should always be an RGB image (of some kind), or null if a new image should be created.; ; imgInput should always be an image of the kind that matches the imgD",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html:11567,avail,availableChannels,11567,javadoc/docs/qupath/lib/display/ImageDisplay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html,3,['avail'],"['available', 'availableChannels']"
Availability,"faces.ROI. Returns a java.awt.Shape representing this ROI, if possible. getShape() - Method in class qupath.lib.roi.LineROI;  ; getShape() - Method in class qupath.lib.roi.PointsROI. It is not possible to convert a PointROI to a java.awt.Shape. getShape() - Method in class qupath.lib.roi.PolygonROI;  ; getShape() - Method in class qupath.lib.roi.PolylineROI;  ; getShape() - Method in class qupath.lib.roi.RectangleROI;  ; getShape() - Method in class qupath.opencv.dnn.DnnShape. Get a copy of the internal dimensions array. getShape(ROI) - Static method in class qupath.lib.roi.RoiTools. Get a Shape object representing a ROI. getShapeROI(Area, ImagePlane) - Static method in class qupath.lib.roi.RoiTools. Create a ROI from an Shape. getShapeROI(Shape, ImagePlane, double) - Static method in class qupath.lib.roi.RoiTools. Create a ROI from an Shape with a specified 'flatness'. getShowAllRGBTransforms() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request that all available color transforms are shown for RGB images. getShowAnnotations() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; getShowCellBoundaries() - Method in class qupath.lib.gui.viewer.OverlayOptions. Query the current OverlayOptions.DetectionDisplayMode to see if cell boundary ROIs should be drawn. getShowCellNuclei() - Method in class qupath.lib.gui.viewer.OverlayOptions. Query the current OverlayOptions.DetectionDisplayMode to see if nuclei ROIs should be drawn. getShowConnections() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; getShowDetections() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; getShowGrid() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; getShowLocation() - Method in class qupath.lib.gui.viewer.ViewerPlusDisplayOptions. Get the value of ViewerPlusDisplayOptions.showLocationProperty(). getShowNames() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; getShowOverview() - Method in class qupath.lib.gui.viewer.ViewerPlusDisplayOpti",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:514815,avail,available,514815,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"fault PathClass that represents no classification.; Usually no classification is represented by null, so this is not normally ; needed; however, sometimes it is required in contexts where a null is not permitted ; (e.g. some collections). Method Details. getParentClass; public PathClass getParentClass(); Get the parent classification, or null if this classification has no parent. Returns:. isDerivedClass; public boolean isDerivedClass(); Returns true if #getParentClass() != null. Returns:. isDerivedFrom; public boolean isDerivedFrom(PathClass parentClass); Returns true if this class, or any ancestor class, is equal to the specified parent class. Parameters:; parentClass - ; Returns:. isAncestorOf; public boolean isAncestorOf(PathClass childClass); Returns true if this class is equal to the specified child class, ; or an ancestor of that class. Parameters:; childClass - ; Returns:. getBaseClass; public PathClass getBaseClass(); Get the 'base' class, i.e. trace back through getParentClass() until no parent is available.; ; For a PathClass with no parent, this just returns itself. Returns:. setColor; public void setColor(Integer colorRGB); Set the color that should be used to display objects with this classification. Parameters:; colorRGB - color, as a packed (A)RGB value. setColor; public void setColor(int red,; int green,; int blue); Set the color as 8-bit RGB values. Parameters:; red - ; green - ; blue - ; Since:; v0.4.0. getColor; public Integer getColor(); Get the color that should be used to display objects with this classification. Returns:; packed (A)RGB value representing the classification color. getName; public String getName(); Get the name of this classification. ; Note that this does not incorporate information from any parent classifications; to access this, ; use toString() instead. Returns:. toString; public String toString(). Overrides:; toString in class Object. toString; public String toString(String delimiter); Create a string representation, using",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClass.html:8158,avail,available,8158,javadoc/docs/qupath/lib/objects/classes/PathClass.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/classes/PathClass.html,1,['avail'],['available']
Availability,"fferedImage> imageDataNew). fireVisibleRegionChangedEvent; protected void fireVisibleRegionChangedEvent(Shape shape). repaintEntireImage; public void repaintEntireImage(); Request that the entire image is repainted, including the thumbnail.; This should be called whenever a major change in display is triggered, such as ; changing the brightness/contrast or lookup table.; Otherwise, repaint() is preferable. See Also:. repaint(). getMagnification; public double getMagnification(); Get the magnification for the image within this viewer, or Double.NaN if no image is present.; This is mostly for display; getDownsampleFactor() is more meaningful.; The actual value of the magnification depends upon whether any magnification value is available ; within the image metadata. Returns:. getFullMagnification; public double getFullMagnification(); Get the full magnification for the image.; This is either the magnification value stored within the current image metadata, ; or 1.0 if no suitable image or metadata is available. Returns:. setMagnification; public void setMagnification(double magnification); Set the downsample factor based upon magnification values.; In general, setDownsampleFactor(double) should be used directly in preference to this method. Parameters:; magnification - . closeViewer; public void closeViewer(); Request that this viewer is closed.; This unbinds the viewer from any properties it may be observing,; and also triggers QuPathViewerListener.viewerClosed(QuPathViewer) calls for ; any viewer listeners. paintComponent; protected void paintComponent(Graphics g). paintViewer; protected void paintViewer(Graphics g,; int w,; int h). getMaxROIHandleSize; public double getMaxROIHandleSize(); Get the maximum size for which ROI handles may be drawn. Returns:. repaintTimestamp; public ReadOnlyLongProperty repaintTimestamp(); Get the timestamp referring to the last time this viewer was repainted. Returns:. getOverlayLayers; public List<PathOverlay> getOverlayLayers(); Get",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:26020,avail,available,26020,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,1,['avail'],['available']
Availability,"fication (by name) for objects for which the specified measurement has a value exactly equal to the threshold. equalTo(PathClass) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification for objects for which the specified measurement has a value exactly equal to the threshold. error() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create an error alert dialog. error(String) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text. error(String, int) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text and a count. error(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a error message to show a count of errors. error(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message. error(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with a count. ERROR - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Error or exception. ERROR - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Error logging (only if something goes recognizably wrong). escapeFilePath(String) - Static method in class qupath.lib.common.GeneralTools. Escape backslashes in an absolute file path - useful when scripting. estimateAvailableMemory() - Static method in class qupath.lib.common.GeneralTools. Estimate the current available memory in bytes, based upon the JVM max and the memory currently used. estimateCellBoundary(Geometry, double, double) - Static method in class qupath.lib.objects.CellTools. Estimate a cell boundary using Geometry objects. estimateDownsampleFactor(ImagePlus, ImageServer<?>) - Static method in class qupath.imagej.tools.IJTools. Estimate the downsample factor for an image region extra",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:283648,error,error,283648,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['error'],['error']
Availability,"fication of the image currently in the viewer. getMainObjectFilter() - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapParameters. Get the primary object filter. getMajor() - Method in class qupath.lib.common.Version. Get the major version number (X.0.0). getManager() - Method in class qupath.lib.images.servers.SparseImageServer. Get the manager, which defines from whence the regions originate. getMask() - Method in class qupath.lib.experimental.pixels.Parameters. Get the mask associated with the main ROI or the parent object, or null if no mask is available. getMask(Parameters<S, T>, ROI) - Method in interface qupath.lib.experimental.pixels.MaskSupplier. Get a mask corresponding to the image, depicting a specified ROI. getMask(ROI) - Method in class qupath.lib.experimental.pixels.Parameters. Get the mask associated with any ROI, or null if no mask is available. getMaskedPixels(Mat, Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Extract all the masked pixels within an image. getMaskImageNames() - Method in interface qupath.lib.projects.Project. Query whether 'true' or masked image names are being returned. getMatrixInverse() - Method in class qupath.lib.color.ColorDeconvolutionStains. Get matrix inverse, as useful for color deconvolution. getMax() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the maximum non-NaN value added. getMaxAllowed() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getMaxAllowed() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the max allowed display value. getMaxBlue() - Method in class qupath.lib.color.ColorDeconvolutionStains. Get the maximum value for the blue channel (default = 255). getMaxCount() - Method in class qupath.lib.analysis.stats.Histogram. Get the highest count found for any bin. getMaxDecimalPlaces() - Method in class qupath.lib.common.Timeit. Get the maximum number of decimal places when reporting timings. getMaxDisplay() - Method in cl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:432763,mask,masked,432763,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['mask'],['masked']
Availability,"fied pyramidal level. Parameters:; level - ; Returns:. isRGB; public boolean isRGB(); Returns true if the pixels are stored in (A)RGB form. Returns:. getPixelType; public PixelType getPixelType(); Returns the bit-depth for individual pixels in the image. Returns:. getMinValue; public Number getMinValue(); Get the minimum value supported by this image.; By default, this is the lower bound of the PixelType unless otherwise specified. Returns:; See Also:. getPixelType(). getMaxValue; public Number getMaxValue(); Get the minimum value supported by this image.; By default, this is the lower bound of the PixelType unless otherwise specified.; This purpose of this method is to support other effective bit-depths (e.g. 12-bit, 14-bit). Returns:; See Also:. getPixelType(). pixelSizeCalibrated; public boolean pixelSizeCalibrated(); Returns true if pixel width and height calibration information is available for the image. Returns:. zSpacingCalibrated; public boolean zSpacingCalibrated(); Returns true if z-spacing calibration information is available for the image. Returns:. getAveragedPixelSize; public double getAveragedPixelSize(); Get the averaged pixel size in microns, if available - or Double.NaN otherwise. Returns:. getPixelWidthMicrons; public double getPixelWidthMicrons(); Get the pixel width in microns, if available - or Double.NaN otherwise. Returns:. getPixelHeightMicrons; public double getPixelHeightMicrons(); Get the pixel height in microns, if available - or Double.NaN otherwise. Returns:. getZSpacingMicrons; public double getZSpacingMicrons(); Get the z-spacing in microns, if available - or Double.NaN otherwise. Returns:. getTimeUnit; public TimeUnit getTimeUnit(); Get the time unit for a time series. Returns:. getTimepoint; public double getTimepoint(int ind); Get the time point, defined in getTimeUnit(), or Double.NaN if this is unknown. Parameters:; ind - ; Returns:. getSizeZ; public int getSizeZ(); Get the number of z-slices. Returns:. getSizeT; public int getS",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html:7140,avail,available,7140,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html,1,['avail'],['available']
Availability,"fied. Returns:; See Also:. getPixelType(). getMaxValue; public Number getMaxValue(); Get the minimum value supported by this image.; By default, this is the lower bound of the PixelType unless otherwise specified.; This purpose of this method is to support other effective bit-depths (e.g. 12-bit, 14-bit). Returns:; See Also:. getPixelType(). pixelSizeCalibrated; public boolean pixelSizeCalibrated(); Returns true if pixel width and height calibration information is available for the image. Returns:. zSpacingCalibrated; public boolean zSpacingCalibrated(); Returns true if z-spacing calibration information is available for the image. Returns:. getAveragedPixelSize; public double getAveragedPixelSize(); Get the averaged pixel size in microns, if available - or Double.NaN otherwise. Returns:. getPixelWidthMicrons; public double getPixelWidthMicrons(); Get the pixel width in microns, if available - or Double.NaN otherwise. Returns:. getPixelHeightMicrons; public double getPixelHeightMicrons(); Get the pixel height in microns, if available - or Double.NaN otherwise. Returns:. getZSpacingMicrons; public double getZSpacingMicrons(); Get the z-spacing in microns, if available - or Double.NaN otherwise. Returns:. getTimeUnit; public TimeUnit getTimeUnit(); Get the time unit for a time series. Returns:. getTimepoint; public double getTimepoint(int ind); Get the time point, defined in getTimeUnit(), or Double.NaN if this is unknown. Parameters:; ind - ; Returns:. getSizeZ; public int getSizeZ(); Get the number of z-slices. Returns:. getSizeT; public int getSizeT(); Get the number of time points. Returns:. getSizeC; public int getSizeC(); Get the number of image channels. Returns:. getMagnification; public double getMagnification(); Get the magnification value, or Double.NaN if this is unavailable. Returns:. getPreferredTileWidth; public int getPreferredTileWidth(); Get the preferred tile width, which can be used to optimize pixel requests for large images. Returns:. getPreferredT",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html:7565,avail,available,7565,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html,1,['avail'],['available']
Availability,"file). Check whether a file is likely to contain an ImageJ ROI, based upon its extension ; or .zip file contents. static SortedMap<Number,PathObject>; convertLabelsToCells(ImageProcessor ipNuclei,; ImageProcessor ipCells,; double xOrigin,; double yOrigin,; double downsample,; ImagePlane plane). Convert integer labeled images into cell objects. static SortedMap<Number,PathObject>; convertLabelsToCells(ImageProcessor ipNuclei,; ImageProcessor ipCells,; Calibration cal,; double downsample,; ImagePlane plane). Convert integer labeled images into cell objects. static PathObject; convertToAnnotation(Roi roi,; double xOrigin,; double yOrigin,; double downsampleFactor,; ImagePlane plane). Create an annotation object for a specific ImageJ Roi, using an ImagePlus to help set properties. static PathObject; convertToAnnotation(Roi roi,; double downsampleFactor,; ImagePlus imp). Create an annotation object for a specific ImageJ Roi. static PathObject; convertToAnnotation(ImagePlus imp,; ImageServer<?> server,; Roi roi,; double downsampleFactor,; ImagePlane plane). Deprecated.; use instead convertToAnnotation(Roi, double, double, double, ImagePlane). static PathObject; convertToDetection(Roi roi,; double xOrigin,; double yOrigin,; double downsampleFactor,; ImagePlane plane). Create a detection object for a specific ImageJ Roi, using an ImagePlus to help set properties. static PathObject; convertToDetection(Roi roi,; double downsampleFactor,; ImagePlus imp). Create a detection object for a specific ImageJ Roi. static PathObject; convertToDetection(ImagePlus imp,; ImageServer<?> server,; Roi roi,; double downsampleFactor,; ImagePlane plane). Deprecated.; use instead convertToDetection(Roi, double, double, double, ImagePlane). static ImageProcessor; convertToFloatProcessor(SimpleImage image). Convert a SimpleImage to an ImageProcessor. static <T extends PathImage<ImagePlus>>Roi; convertToIJRoi(ROI pathROI,; double xOrigin,; double yOrigin,; double downsampleFactor). Convert a QuPath",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:2328,down,downsampleFactor,2328,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,1,['down'],['downsampleFactor']
Availability,"foMessage. Create an error message with static text and a count. error(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a error message to show a count of errors. error(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message. error(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with a count. ERROR - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Error or exception. ERROR - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Error logging (only if something goes recognizably wrong). escapeFilePath(String) - Static method in class qupath.lib.common.GeneralTools. Escape backslashes in an absolute file path - useful when scripting. estimateAvailableMemory() - Static method in class qupath.lib.common.GeneralTools. Estimate the current available memory in bytes, based upon the JVM max and the memory currently used. estimateCellBoundary(Geometry, double, double) - Static method in class qupath.lib.objects.CellTools. Estimate a cell boundary using Geometry objects. estimateDownsampleFactor(ImagePlus, ImageServer<?>) - Static method in class qupath.imagej.tools.IJTools. Estimate the downsample factor for an image region extracted from an image server, based upon ; the ratio of pixel sizes if possible or ratio of dimensions if necessary. estimateImageType(ImageServer<BufferedImage>, BufferedImage) - Static method in class qupath.lib.gui.tools.GuiTools. Make a semi-educated guess at the image type of a PathImageServer. estimateStains(int[], float[], float[], float[], ColorDeconvolutionStains, double, double, double, boolean) - Static method in class qupath.lib.analysis.algorithms.EstimateStainVectors. Check colors only currently applies to H&E. estimateStains(BufferedImage, ColorDeconvolutionStains, boolean) - Static method in class qupath.lib.analys",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:284297,avail,available,284297,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"for a specific ImageJ Roi. Parameters:; roi - the ImageJ ROI; xOrigin - the x-origin to translate the Roi; should be Calibration.xOrigin if available, or 0 otherwise; yOrigin - the y-origin to translate the Roi; should be Calibration.yOrigin if available, or 0 otherwise; downsampleFactor - the downsample factor used for rescaling (or 1.0 for no rescaling); creator - a function; plane - the specific plane to use for the QuPath ROI; if null, the ImageJ Roi position properties will be used instead, where possible; Returns:; a PathObject or null if no object could be created (e.g. the ImageJ roi is null or incompatible); Since:; v0.4.0; See Also:. convertToPathObject(Roi, double, Function, ImagePlus). convertToPathObject; public static PathObject convertToPathObject(Roi roi,; double downsampleFactor,; Function<ROI,PathObject> creator,; ImagePlus imp); Create a PathObject for a specific ImageJ Roi, using an ImagePlus to help set properties. Parameters:; roi - the ImageJ ROI; downsampleFactor - the downsample factor used for rescaling (or 1.0 for no rescaling); creator - a function; imp - the ImagePlus associated with this Roi; it is used to determine the xOrigin, yOrigin and image plane; Returns:; a PathObject or null if no object could be created (e.g. the ImageJ roi is null or incompatible); Since:; v0.4.0; See Also:. convertToPathObject(Roi, double, double, double, Function, ImagePlane). convertToAnnotation; public static PathObject convertToAnnotation(Roi roi,; double xOrigin,; double yOrigin,; double downsampleFactor,; ImagePlane plane); Create an annotation object for a specific ImageJ Roi, using an ImagePlus to help set properties. Parameters:; roi - the ImageJ ROI; xOrigin - the x-origin to translate the Roi; should be Calibration.xOrigin if available, or 0 otherwise; yOrigin - the y-origin to translate the Roi; should be Calibration.yOrigin if available, or 0 otherwise; downsampleFactor - the downsample factor used for rescaling (or 1.0 for no rescaling); plane ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:12969,down,downsampleFactor,12969,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,2,['down'],"['downsample', 'downsampleFactor']"
Availability,"for an object is being extracted for display separately. Parameters:; pathImage - ; pathObject - . calibrateImagePlus; public static void calibrateImagePlus(ImagePlus imp,; RegionRequest request,; ImageServer<BufferedImage> server); Set an ImagePlus's Calibration and FileInfo properties based on a RegionRequest and PathImageServer.; It is assumed at the image contained in the ImagePlus has been correctly read from the server. Parameters:; imp - ; request - ; server - . estimateDownsampleFactor; public static double estimateDownsampleFactor(ImagePlus imp,; ImageServer<?> server); Estimate the downsample factor for an image region extracted from an image server, based upon ; the ratio of pixel sizes if possible or ratio of dimensions if necessary.; ; Note that the ratio of dimensions is only suitable if the full image has been extracted!. Parameters:; imp - ; server - ; Returns:. convertToPathObject; @Deprecated; public static PathObject convertToPathObject(ImagePlus imp,; ImageServer<?> server,; Roi roi,; double downsampleFactor,; Function<ROI,PathObject> creator,; ImagePlane plane); Deprecated.; use instead convertToPathObject(Roi, double, double, double, Function, ImagePlane). Create a PathObject for a specific ImageJ Roi.; This method has been deprecated, since its signature was misleading (the server was not used). Parameters:; imp - ; server - ; roi - ; downsampleFactor - ; creator - ; plane - ; Returns:. convertToPathObject; public static PathObject convertToPathObject(Roi roi,; double xOrigin,; double yOrigin,; double downsampleFactor,; Function<ROI,PathObject> creator,; ImagePlane plane); Create a PathObject for a specific ImageJ Roi. Parameters:; roi - the ImageJ ROI; xOrigin - the x-origin to translate the Roi; should be Calibration.xOrigin if available, or 0 otherwise; yOrigin - the y-origin to translate the Roi; should be Calibration.yOrigin if available, or 0 otherwise; downsampleFactor - the downsample factor used for rescaling (or 1.0 for no rescaling);",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:11368,down,downsampleFactor,11368,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,1,['down'],['downsampleFactor']
Availability,"for exporting TMA data, optionally with small images. TMADataIO() - Constructor for class qupath.lib.gui.tma.TMADataIO;  ; TMADearrayer - Class in qupath.imagej.detect.dearray. Static methods used by the TMA dearrayer plugin. TMADearrayer() - Constructor for class qupath.imagej.detect.dearray.TMADearrayer;  ; TMADearrayerPluginIJ - Class in qupath.imagej.detect.dearray. Plugin for automatically dearraying tissue microarrays (TMAs). TMADearrayerPluginIJ() - Constructor for class qupath.imagej.detect.dearray.TMADearrayerPluginIJ. Default constructor. TMAExplorer - Class in qupath.lib.gui.tma. The aim of this is to enable the exploration of TMA data from multiple images in a project. TMAExplorer(QuPathGUI) - Constructor for class qupath.lib.gui.tma.TMAExplorer. Constructor. tmaExportDownsample - Variable in class qupath.lib.gui.panes.PreferencePane.InputOutputPreferences;  ; tmaExportDownsampleProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Default downsample factor to use when exporting TMA cores. TMAGrid - Interface in qupath.lib.objects.hierarchy. Interface defining a (rectangular) TMA grid. TMAGridOverlay - Class in qupath.lib.gui.viewer.overlays. An overlay capable of painting a TMA Grid. TMAGridOverlay(OverlayOptions) - Constructor for class qupath.lib.gui.viewer.overlays.TMAGridOverlay. Constructor. TMAMenuActions - Class in qupath.lib.gui.actions.menus;  ; TMAMenuActions.Actions - Class in qupath.lib.gui.actions.menus;  ; TMAMenuActions.Actions.AddActions - Class in qupath.lib.gui.actions.menus;  ; TMAMenuActions.Actions.RemoveActions - Class in qupath.lib.gui.actions.menus;  ; tmaMissingColor - Variable in class qupath.lib.gui.panes.PreferencePane.ObjectPreferences;  ; TMAScoreImporter - Class in qupath.lib.io. Helper class for importing data in connection with TMA slides. TMAScoreImporter() - Constructor for class qupath.lib.io.TMAScoreImporter;  ; TMASummaryViewer - Class in qupath.lib.gui.tma. Deprecated.; since v0.4.0. TMASummaryViewer(S",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1032635,down,downsample,1032635,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['down'],['downsample']
Availability,"for the main QuPath stage.; This should be bound bidirectionally to the corresponding property of any menubars created. See Also:. useSystemMenubarProperty(). numCommandThreads; public static IntegerProperty numCommandThreadsProperty; Property specifying the preferred number of threads QuPath should use for multithreaded commands. See Also:. numCommandThreadsProperty(). showImageNameInTitle; public static BooleanProperty showImageNameInTitleProperty; Property specifying if QuPath should show the image title in the main window title.; For privacy reasons it may be desirable to turn this off in some cases. See Also:. showImageNameInTitleProperty(). autoUpdateCheck; public static ObjectProperty<PathPrefs.AutoUpdateType> autoUpdateCheckProperty; Check for updates when launching QuPath, if possible. See Also:. autoUpdateCheckProperty(). maskImageNames; public static BooleanProperty maskImageNamesProperty; Request that image names are hidden within the user interface. See Also:. maskImageNamesProperty(). defaultLocale; public static ObjectProperty<Locale> defaultLocaleProperty; Get a property for setting the default Locale.; Setting this locale impacts both Locale.Category.FORMAT and Locale.Category.DISPLAY, ; and may trigger an update to defaultLocaleDisplayProperty() and defaultLocaleFormatProperty() ; if these have been changed. Since:; v0.4.0; See Also:. defaultLocaleProperty(). defaultLocaleFormat; public static ObjectProperty<Locale> defaultLocaleFormatProperty; Get a property for setting the default Locale for Locale.Category.FORMAT.; Setting this property also results in the Locale being changed to match. See Also:. defaultLocaleFormatProperty(). defaultLocaleDisplay; public static ObjectProperty<Locale> defaultLocaleDisplayProperty; Get a property for setting the default Locale for Locale.Category.DISPLAY.; Setting this property also results in the Locale being changed to match. See Also:. defaultLocaleDisplayProperty(). showStartupMessage; public static BooleanP",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:24976,mask,maskImageNamesProperty,24976,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['mask'],['maskImageNamesProperty']
Availability,"further analysis elsewhere or for training up an AI algorithm. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TileExporter(ImageData<BufferedImage> imageData). Create a builder to export tiles. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TileExporter; annotatedCentroidTilesOnly(boolean annotatedCentroidTilesOnly). Specify whether tiles without any annotations over the tile centroid should be included. TileExporter; annotatedTilesOnly(boolean annotatedTilesOnly). Specify whether tiles that do not overlap with any annotations should be included. TileExporter; channels(int... channels). Export only specified channels. TileExporter; channels(String... channelNames). Export only specified channels, identified by name. TileExporter; downsample(double downsample). Define resolution as a downsample value. TileExporter; exportJson(boolean exportJson). Optionally export a JSON file that includes label information and image/label pairs, where available. TileExporter; fullImageTile(). Specify that a single tile should be generated corresponding to the full image. TileExporter; imageExtension(String ext). Specify a file extension for the original pixels, which determines the export file format. TileExporter; imageSubDir(String subdir). Specify a subdirectory within which image tiles should be saved. TileExporter; includePartialTiles(boolean includePartialTiles). Specify whether incomplete tiles at image boundaries should be included. TileExporter; labeledImageExtension(String ext). Specify a file extension for the labelled image, which determines the export file format. TileExporter; labeledImageId(String labelId). Specify an identifier appended to the filename for labeled images. TileExporter; labeledImageSubDir(String subdir). Specify a subdirectory within which labeled image tiles should be saved. TileExporter; labeledServer(ImageServer<BufferedImage> server). Optional server provid",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/TileExporter.html:1578,avail,available,1578,javadoc/docs/qupath/lib/images/writers/TileExporter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/TileExporter.html,1,['avail'],['available']
Availability,"g.Object; qupath.lib.gui.panes.ProjectBrowser. All Implemented Interfaces:; ChangeListener<ImageData<BufferedImage>>. public class ProjectBrowser; extends Object; implements ChangeListener<ImageData<BufferedImage>>; Component for previewing and selecting images within a project. Author:; Pete Bankhead, Melvin Gelbard. Constructor Summary; Constructors. Constructor; Description; ProjectBrowser(QuPathGUI qupath). Constructor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; changed(ObservableValue<? extends ImageData<BufferedImage>> source,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew);  ; Pane; getPane(). Get the Pane component for addition to a scene. void; refreshProject(). Refresh the current project, updating the displayed entries. boolean; setProject(Project<BufferedImage> project). Set the project. static boolean; syncProject(Project<?> project). Try to save a project, showing an error message if this fails. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProjectBrowser; public ProjectBrowser(QuPathGUI qupath); Constructor. Parameters:; qupath - the current QuPath instance. Method Details. syncProject; public static boolean syncProject(Project<?> project); Try to save a project, showing an error message if this fails. Parameters:; project - ; Returns:. getPane; public Pane getPane(); Get the Pane component for addition to a scene. Returns:. setProject; public boolean setProject(Project<BufferedImage> project); Set the project. Parameters:; project - ; Returns:; true if the project is now set (even if unchanged), false if the project change was thwarted or cancelled. refreshProject; public void refreshProject(); Refresh the current project, updating the displayed entries.; Note that this must be called on the JavaFX Application thread.; If it is not",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ProjectBrowser.html:1393,error,error,1393,javadoc/docs/qupath/lib/gui/panes/ProjectBrowser.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/ProjectBrowser.html,1,['error'],['error']
Availability,"gBuilder. Enclosing class:; SvgTools. public static class SvgTools.SvgBuilder; extends Object; Builder class to enable the export of rendered QuPath objects as SVG images.; This can be useful to generate high-quality figures using a vector representation of objects, ; which may be further customized in other applications (e.g. to change line thickness, color). Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; SvgTools.SvgBuilder.ImageIncludeType. Enum defining ways in which raster images may be included in the SVG file. Constructor Summary; Constructors. Constructor; Description; SvgBuilder(). Create a new builder, which will later be customized. SvgBuilder(QuPathViewer viewer). Create a builder initialized according to the current viewer. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; createDocument(). Create a String representation of the SVG document. SvgTools.SvgBuilder; downsample(double downsample). Specify downsample factor (defined in terms of the full resolution image space). SvgTools.SvgBuilder; embedImages(). Specify whether the underlying (raster) image should be embedded in any export. SvgTools.SvgBuilder; fillAnnotations(boolean doFill). Request whether annotations are drawn as 'filled' shapes. SvgTools.SvgBuilder; fillDetections(boolean doFill). Request whether detections are drawn as 'filled' shapes. SvgTools.SvgBuilder; height(int height). Export image height. SvgTools.SvgBuilder; hierarchy(PathObjectHierarchy hierarchy). Specify the PathObjectHierarchy. SvgTools.SvgBuilder; imageData(ImageData<BufferedImage> imageData). Specify the ImageData. SvgTools.SvgBuilder; images(SvgTools.SvgBuilder.ImageIncludeType include). Specify if/how raster images should be included in the SVG. SvgTools.SvgBuilder; includeOverlays(boolean doInclude). Specify whether overlays should be included. SvgTools.SvgBuilder; linkImages(). Specify whether the underlying (raster",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html:1440,down,downsample,1440,javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html,2,['down'],['downsample']
Availability,"ge tiles that would be needed to paint; a specified shape (defined by coordinates in the full-resolution image space). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageRegionStoreHelpers; public ImageRegionStoreHelpers(). Method Details. getTilesToRequest; public static List<RegionRequest> getTilesToRequest(ImageServer<?> server,; Shape clipShape,; double downsampleFactor,; int zPosition,; int tPosition,; List<RegionRequest> regions); Given ImageServer, determine the boundaries of the image tiles that would be needed to paint; a specified shape (defined by coordinates in the full-resolution image space).; The downsampleFactor is used to determine the resolution at which to request the tiles. Parameters:; server - The ImageServer from which the tiles would be requested; clipShape - The requested shape, defined in the full-resolution image space; downsampleFactor - The downsampleFactor determining the resolution at which tiles should be requested; zPosition - The zPosition from which to request tiles; tPosition - The tPosition from which to request tiles; regions - regions The list to which requests should be added, or null if a new list should be created; Returns:; The list of requests - identical to the one provided as an input parameter, unless this was null. getTileRequest; public static RegionRequest getTileRequest(ImageServer<BufferedImage> server,; double x,; double y,; double downsampleFactor,; int zPosition,; int tPosition); Given an ImageServer, determine the boundaries of the image tile that contains specified x, y coordinates.; The downsampleFactor is used to determine the resolution at which to request the tiles. Parameters:; server - the ImageServer from which the tiles would be requested; x - ; y - ; downsampleFactor - the downsampleFactor determining the resolution at which tiles should be requested; zPosition - ; tPosition - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ImageRegionStoreHelpers.html:2518,down,downsampleFactor,2518,javadoc/docs/qupath/lib/gui/images/stores/ImageRegionStoreHelpers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/ImageRegionStoreHelpers.html,6,['down'],['downsampleFactor']
Availability,"ge); Deprecated.; Show an info notification. Parameters:; title - ; message - . showPlainNotification; public static void showPlainNotification(String title,; String message); Deprecated.; Show a plain notification. Parameters:; title - ; message - . showNoImageError; public static void showNoImageError(String title); Deprecated.; Show an error message that no image is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Deprecated.; Show an error message that no project is available. This is included to help ; standardize the message throughout the software. Parameters:; title - . showErrorMessage; public static void showErrorMessage(String title,; String message); Deprecated.; Show an error message. Parameters:; title - ; message - . showErrorMessage; public static void showErrorMessage(String title,; Node node); Deprecated.; Show an error message, with the content defined within a Node. Parameters:; title - ; node - . showPlainMessage; public static void showPlainMessage(String title,; String message); Deprecated.; Show a plain message. Parameters:; title - ; message - . showTextWindow; public static void showTextWindow(Window owner,; String title,; String contents,; Modality modality,; boolean isEditable); Deprecated.; Show a window containing plain text, with the specified properties. Parameters:; owner - ; title - ; contents - ; modality - ; isEditable - . promptForMultipleFiles; public static List<File> promptForMultipleFiles(String title,; File dirBase,; String filterDescription,; String... exts); Deprecated.; Prompt to open a list of files. Parameters:; title - ; dirBase - ; filterDescription - ; exts - ; Returns:. promptForDirectory; public static File promptForDirectory(File dirBase); Deprecated.; Prompt user to select a directory. Parameters:; dirBase - base directory to display; if null or not an existing directory, the value",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:10526,error,error,10526,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['error'],['error']
Availability,"ge. Parameters:; mat - input image; must be single-channel; mask - mask of the same size as mat; Returns:; list of pixels, including their indices and values. extractMaskedFloats; public static float[] extractMaskedFloats(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pixels should be extracted; mask - the mask to apply to the input; channel - the channel index (zero-based) to consider; Returns:; a float array containing the values of the input filtered by the mask; Throws:; IllegalArgumentException - when the input and the mask don't have the same dimensions. extractMaskedDoubles; public static double[] extractMaskedDoubles(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pixels should be extracted; mask - the mask to apply to the input; channel - the channel index (zero-based) to consider; Returns:; a double array containing the values of the input filtered by the mask; Throws:; IllegalArgumentException - when the input and the mask don't have the same dimensions. shrinkLabels; public static Mat shrinkLabels(Mat mat); Shrink labels to a single point.; This works by effectively iterating through each label, and retaining only the labeled pixel that is closest to the centroid ; of all pixels with the same label - setting all other pixels within the component to zero. Parameters:; mat - label mat (mu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:44933,mask,mask,44933,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html,2,['mask'],['mask']
Availability,"ge<ImagePlus>>Roi; convertToIJRoi(ROI pathROI,; T pathImage). Create an ImageJ Roi from a ROI, suitable for displaying on the ImagePlus of an PathImage<ImagePlus>. static PathImage<ImagePlus>; convertToImagePlus(String title,; ImageServer<BufferedImage> server,; BufferedImage img,; RegionRequest request). Convert a BufferedImage into a PathImage<ImagePlus>. static PathImage<ImagePlus>; convertToImagePlus(ImageServer<BufferedImage> server,; RegionRequest request). Read a region from an ImageServer<BufferedImage as a PathImage<ImagePlus>. static ImageProcessor; convertToImageProcessor(BufferedImage img,; int band). Extract pixels as an an ImageProcessor from a single band of a BufferedImage. static FloatProcessor; convertToOpticalDensitySum(ColorProcessor cp,; double maxRed,; double maxGreen,; double maxBlue). Calculate optical density values for the red, green and blue channels, then add these all together. static PathObject; convertToPathObject(Roi roi,; double xOrigin,; double yOrigin,; double downsampleFactor,; Function<ROI,PathObject> creator,; ImagePlane plane). Create a PathObject for a specific ImageJ Roi. static PathObject; convertToPathObject(Roi roi,; double downsampleFactor,; Function<ROI,PathObject> creator,; ImagePlus imp). Create a PathObject for a specific ImageJ Roi, using an ImagePlus to help set properties. static PathObject; convertToPathObject(ImagePlus imp,; ImageServer<?> server,; Roi roi,; double downsampleFactor,; Function<ROI,PathObject> creator,; ImagePlane plane). Deprecated.; use instead convertToPathObject(Roi, double, double, double, Function, ImagePlane). static PolygonROI; convertToPolygonROI(PolygonRoi roi,; Calibration cal,; double downsampleFactor,; ImagePlane plane). Convert an ImageJ PolygonRoi to a QuPath PolygonROI. static ROI; convertToROI(Roi roi,; double xOrigin,; double yOrigin,; double downsampleFactor,; ImagePlane plane). Create a ROI from an ImageJ Roi. static ROI; convertToROI(Roi roi,; Calibration cal,; double downsample",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:4556,down,downsampleFactor,4556,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,1,['down'],['downsampleFactor']
Availability,"geJ with QuPath. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; IJTools();  . Method Summary. All MethodsStatic MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static void; calibrateImagePlus(ImagePlus imp,; RegionRequest request,; ImageServer<BufferedImage> server). Set an ImagePlus's Calibration and FileInfo properties based on a RegionRequest and PathImageServer. static void; calibrateObject(PathObject pathObject,; Roi roi). Set the properties of a PathObject based upon an ImageJ Roi. static FloatProcessor[]; colorDeconvolve(ColorProcessor cp,; ColorDeconvolutionStains stains). Apply color deconvolution, outputting 3 'stain' images in the same order as the stain vectors. static boolean; containsImageJRois(File file). Check whether a file is likely to contain an ImageJ ROI, based upon its extension ; or .zip file contents. static SortedMap<Number,PathObject>; convertLabelsToCells(ImageProcessor ipNuclei,; ImageProcessor ipCells,; double xOrigin,; double yOrigin,; double downsample,; ImagePlane plane). Convert integer labeled images into cell objects. static SortedMap<Number,PathObject>; convertLabelsToCells(ImageProcessor ipNuclei,; ImageProcessor ipCells,; Calibration cal,; double downsample,; ImagePlane plane). Convert integer labeled images into cell objects. static PathObject; convertToAnnotation(Roi roi,; double xOrigin,; double yOrigin,; double downsampleFactor,; ImagePlane plane). Create an annotation object for a specific ImageJ Roi, using an ImagePlus to help set properties. static PathObject; convertToAnnotation(Roi roi,; double downsampleFactor,; ImagePlus imp). Create an annotation object for a specific ImageJ Roi. static PathObject; convertToAnnotation(ImagePlus imp,; ImageServer<?> server,; Roi roi,; double downsampleFactor,; ImagePlane plane). Deprecated.; use instead convertToAnnotation(Roi, double, double, double, ImagePlane). static PathObject; convertToDetection(Roi roi,; d",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:1562,down,downsample,1562,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,1,['down'],['downsample']
Availability,"gePlane, getMaxX, getMaxY, getMinX, getMinY, getPlane, getT, getWidth, getX, getY, getZ, intersects, intersects. Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. toString; public String toString(). Overrides:; toString in class ImageRegion. createInstance; public static RegionRequest createInstance(ImageServer<?> server); Create a request for the full width and height of an ImageServer, for the default plane (first z-slice, time point) ; and first resolution level downsample (usually 1, but not always). Parameters:; server - ; Returns:. createInstance; public static RegionRequest createInstance(ImageServer<?> server,; double downsample); Create a request for the full width and height of an ImageServer, for the default plane (first z-slice, time point). Parameters:; server - ; downsample - ; Returns:. createAllRequests; public static List<RegionRequest> createAllRequests(ImageServer<?> server,; double downsample); Create requests for the full width and height of an ImageServer, for all planes (z-slices and time points). Parameters:; server - ; downsample - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; ROI roi); Create a request that contains the pixels of the specified ROI.; This is calculated using the ROI bounding box. Parameters:; path - ; downsample - ; roi - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; Collection<? extends ROI> rois); Create a request that contains the pixels of the specified ROIs.; This is calculated using the ROI bounding boxes. Parameters:; path - ; downsample - ; rois - ; Returns:; Throws:; IllegalArgumentException - if the ROIs do not all fall on the same ImagePlane. createInstance; public static RegionRequest createInstance(String path,; RegionRequest request); Create a request that matches another request but with a different path. Parameters:; p",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html:5403,down,downsample,5403,javadoc/docs/qupath/lib/regions/RegionRequest.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html,1,['down'],['downsample']
Availability,"gePlus, ImageServer, Roi, double, Function, ImagePlane); convertToDetection(Roi, double, ImagePlus). convertToAnnotation; public static PathObject convertToAnnotation(Roi roi,; double downsampleFactor,; ImagePlus imp); Create an annotation object for a specific ImageJ Roi. Parameters:; roi - the ImageJ ROI; downsampleFactor - the downsample factor used for rescaling (or 1.0 for no rescaling); imp - the ImagePlus associated with this Roi; it is used to determine the xOrigin, yOrigin and image plane; Returns:; a PathObject or null if no object could be created (e.g. the ImageJ roi is null or incompatible); Since:; v0.4.0; See Also:. convertToPathObject(ImagePlus, ImageServer, Roi, double, Function, ImagePlane); convertToAnnotation(Roi, double, double, double, ImagePlane). convertToDetection; public static PathObject convertToDetection(Roi roi,; double downsampleFactor,; ImagePlus imp); Create a detection object for a specific ImageJ Roi. Parameters:; roi - the ImageJ ROI; downsampleFactor - the downsample factor used for rescaling (or 1.0 for no rescaling); imp - the ImagePlus associated with this Roi; it is used to determine the xOrigin, yOrigin and image plane; Returns:; a PathObject or null if no object could be created (e.g. the ImageJ roi is null or incompatible); Since:; v0.4.0; See Also:. convertToPathObject(ImagePlus, ImageServer, Roi, double, Function, ImagePlane); convertToDetection(Roi, double, double, double, ImagePlane). readImageJRois; public static List<Roi> readImageJRois(File file); Read ImageJ Rois from a .roi or a RoiSet.zip file. Parameters:; file - ; Returns:. containsImageJRois; public static boolean containsImageJRois(File file); Check whether a file is likely to contain an ImageJ ROI, based upon its extension ; or .zip file contents. Parameters:; file - ; Returns:; true if the file seems to contain ImageJ ROIs, false otherwise. calibrateObject; public static void calibrateObject(PathObject pathObject,; Roi roi); Set the properties of a PathObje",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:16234,down,downsampleFactor,16234,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,2,['down'],"['downsample', 'downsampleFactor']"
Availability,"geServer; Get the original metadata read during creation of the server. This may or may not be correct. Returns:; See Also:. ImageServer.getMetadata(). setMetadata; public void setMetadata(ImageServerMetadata metadata); throws UnsupportedOperationException; Not allowed - throws an UnsupportedOperationException. Specified by:; setMetadata in interface ImageServer<BufferedImage>; Overrides:; setMetadata in class AbstractImageServer<BufferedImage>; Parameters:; metadata - ; Throws:; UnsupportedOperationException. getCachedTile; public BufferedImage getCachedTile(TileRequest tile); Description copied from class: AbstractImageServer; Get a cached tile, or null if the tile has not been cached.; ; This is useful whenever it is important to return quickly rather than wait for a tile to be fetched or generated.; ; Warning! The cached tile is returned directly (with no defensive copying) for performance.; This means that it must not be modified by the code that requests it.; If there is any chance the tile may be modified (or passed to untrusted code), then make sure to ; make a defensive copy, e.g. using BufferedImageTools.duplicate(java.awt.image.BufferedImage) ; if using a buffered image. Specified by:; getCachedTile in interface ImageServer<BufferedImage>; Overrides:; getCachedTile in class AbstractImageServer<BufferedImage>; Parameters:; tile - ; Returns:; the tile if it has been cached, or null if no cached tile is available for the request. readTile; protected BufferedImage readTile(TileRequest tileRequest); throws IOException; Description copied from class: AbstractTileableImageServer; Read a single image tile. Specified by:; readTile in class AbstractTileableImageServer; Parameters:; tileRequest - ; Returns:; Throws:; IOException. createServerBuilder; protected ImageServerBuilder.ServerBuilder<BufferedImage> createServerBuilder(); Returns null (does not support ServerBuilders). Specified by:; createServerBuilder in class AbstractImageServer<BufferedImage>; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html:7785,avail,available,7785,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassificationImageServer.html,1,['avail'],['available']
Availability,"geWriter implementation to write TIFF images using ImageJ. TiffWriterIJ() - Constructor for class qupath.imagej.images.writers.TiffWriterIJ;  ; tile(int, int) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set a default tiler to use, with a specified tile size. tile(TileRequest) - Method in class qupath.lib.experimental.pixels.Parameters.Builder. Specify the tile relevant for processing. tileAvailable(String, ImageRegion, BufferedImage) - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; tileAvailable(String, ImageRegion, T) - Method in interface qupath.lib.gui.images.stores.TileListener. Notify a listener that an image tile has been received read & is available. tileBrush - Variable in class qupath.lib.gui.panes.PreferencePane.DrawingPreferences;  ; tileCache - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; tileCachePercentageProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Requested percentage of available memory to use for tile caching. TileClassificationsToAnnotationsPlugin<T> - Class in qupath.lib.plugins.objects. Plugin to merge classified tiles into annotation objects. TileClassificationsToAnnotationsPlugin() - Constructor for class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; TileExporter - Class in qupath.lib.images.writers. Helper class for exporting image tiles, typically for further analysis elsewhere or for training up an AI algorithm. TileExporter(ImageData<BufferedImage>) - Constructor for class qupath.lib.images.writers.TileExporter. Create a builder to export tiles. tileHeight(int) - Method in class qupath.lib.objects.utils.Tiler.Builder. Change the height of output tiles. TileListener<T> - Interface in qupath.lib.gui.images.stores. Interface for anything that needs to know when image tiles become available. tileListeners - Variable in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; tiler(Tiler) - Method in class qupath.lib.experim",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1025148,avail,available,1025148,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"generated; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. stop; public Timeit stop(); throws UnsupportedOperationException; Stop the Timeit. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit hasn't been started, or has already been stopped. autoUnits; public Timeit autoUnits(). nanoseconds; public Timeit nanoseconds(); Report timings in nanoseconds. Returns:; this instance. milliseconds; public Timeit milliseconds(); Report timings in milliseconds. Returns:; this instance. microseconds; public Timeit microseconds(); Report timings in microseconds. Returns:; this instance. seconds; public Timeit seconds(); Report timings in seconds. Returns:; this instance. minutes; public Timeit minutes(); Report timings in minutes. Returns:; this instance. summarizeCheckpoints; public Timeit summarizeCheckpoints(); Request that checkpoints are summarized in the toString() method.; Currently, this means simply reporting the mean time per checkpoint. Returns:; this instance; See Also:. summarizeCheckpoints(boolean). summarizeCheckpoints; public Timeit summarizeCheckpoints(boolean summarize); Optionally request that checkpoints are summarized in the toString() method.; Currently, this means simply reporting the mean time per checkpoint. Parameters:; summarize - whether to summarize or not; Returns:; this instance; See Also:. summarizeCheckpoints(boolean). getMaxDecimalPlaces; public int getMaxDecimalPlaces(); Get the maximum number of decimal places when reporting timings. Returns:; See Also:. maxDecimalPlaces(int). maxDecimalPlaces; public Timeit maxDecimalPlaces(int maxDP); Set the maximum number of decimal places when reporting timings ; using seconds or minutes. Parameters:; maxDP - ; Returns:; this instance. getCheckpoints; public List<Timeit.Checkpoint> getCheckpoints(); Get an list of all the checkpoints. Returns:. toString; public String toString(); Returns a snapshot string representation",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:8012,checkpoint,checkpoint,8012,javadoc/docs/qupath/lib/common/Timeit.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html,1,['checkpoint'],['checkpoint']
Availability,"ges.servers.ImageServerMetadata. Get a PixelCalibration object representing the pixel size information for this metadata object. getPixelCalibration() - Method in class qupath.process.gui.commands.ml.ClassificationResolution. Get the PixelCalibration used to apply this resolution. getPixelClassificationRegionFilter() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; getPixelClassificationServer(ImageData<BufferedImage>) - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Get the ImageServer that would be used by this overlay for the specified ImageData. getPixelClassifiers() - Method in interface qupath.lib.projects.Project. Get a manager for pixel classifiers saved within this project. getPixelHeight() - Method in class qupath.lib.images.servers.PixelCalibration. Get the numeric value representing the pixel height, in the stored units. getPixelHeightMicrons() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the pixel height in microns, if available - or Double.NaN otherwise. getPixelHeightMicrons() - Method in class qupath.lib.images.servers.PixelCalibration. Get the pixel height in microns, or Double.NaN if this is unknown. getPixelHeightUnit() - Method in class qupath.lib.images.servers.PixelCalibration. Get a String representation of the preferred pixel height unit. getPixelLayer(ImageData<?>) - Static method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Request the pixel layer from an ImageData. getPixels(SimpleImage, boolean) - Static method in class qupath.lib.analysis.images.SimpleImages. Get the pixel values for the image. getPixelSize() - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapParameters. Get the requested pixel size for the density map. getPixelType() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getPixelType() - Method in interface qupath.lib.images.servers.ImageServer. The bit-depth and type of the image. getPixelType() - Method in cl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:483174,avail,available,483174,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"ges.servers.RenderedImageServer. Create an ImageServer that returns tiles based on how approximately they would appear within the viewer. createRenderedServer(ImageServer<BufferedImage>, ImageRenderer) - Static method in class qupath.lib.gui.images.servers.RenderedImageServer. Create an ImageServer that converts the image to RGB using the specified ImageRenderer. createROIIcon(ROI, int, int, Color) - Static method in class qupath.lib.gui.tools.IconFactory. Create an icon depicting a ROI. createROIMask(int, int, ROI, double, double, double) - Static method in class qupath.lib.awt.common.BufferedImageTools. Create a grayscale BufferedImage representing a mask for a specified ROI. createROIMask(int, int, ROI, RegionRequest) - Static method in class qupath.lib.awt.common.BufferedImageTools. Create a grayscale BufferedImage representing a mask for a specified ROI. createROIMask(Shape, double) - Static method in class qupath.lib.awt.common.BufferedImageTools. Create a Shape mask using the minimal bounding box for the Shape. createROIMask(ROI, double) - Static method in class qupath.lib.awt.common.BufferedImageTools. Create a ROI mask using the minimal bounding box for the ROI. createROIs(Raster, int, RegionRequest, int, int) - Static method in class qupath.lib.analysis.images.ContourTracing. Create ROIs from one band of a raster containing integer label values. createROIs(Mat, RegionRequest, int, int) - Static method in class qupath.opencv.tools.OpenCVTools. Convert integer labels into ROIs. createROIs(SimpleImage, RegionRequest, int, int) - Static method in class qupath.lib.analysis.images.ContourTracing. Create ROIs from a labelled image containing integer labels. createROIs(ROI) - Method in class qupath.lib.objects.utils.Tiler. Create a list of ROI tiles from the input. createRotateImageDialog(QuPathGUI) - Static method in class qupath.lib.gui.commands.Commands. Create a dialog for rotating the image in the current viewer (for display only). createRowGrid(Node...) - St",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:216878,mask,mask,216878,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['mask'],['mask']
Availability,"getPlaceholderText(). Get the placeholder text to show if no image is available. double; getSaturationPercent(). Get the percentage of pixels to use when applying auto contrast settings to a non-8-bit image. Stage; getStage(). Get the stage used to display the image. ReadOnlyObjectProperty<String>; imageNameProperty(). Get a read-only property indicating the name of the image. ReadOnlyObjectProperty<Image>; imageProperty(). Get a read-only property representing the JavaFX image. StringProperty; placeholderTextProperty(). Get the placeholder text to show if no image is available. void; resetImage(). Remove the image. DoubleProperty; saturationPercentProperty(). Get the percentage of any non-8-bit image that should be saturated when applying auto contrast settings. void; setExpandToWindow(boolean limit). Control whether the image should be allowed to expand beyond its preferred width and height to fill the window. void; setPlaceholderText(String placeholder). Set the placeholder text to show if no image is available. void; setSaturationPercent(double percent). Set the percentage of pixels to use when applying auto contrast settings to a non-8-bit image. void; updateImage(String name,; BufferedImage img). Update the image using a buffered image. void; updateImage(String name,; Image image). Update the image using a JavaFX image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. placeholderText; public StringProperty placeholderTextProperty; Get the placeholder text to show if no image is available. See Also:. getPlaceholderText(); setPlaceholderText(String); placeholderTextProperty(). saturationPercent; public DoubleProperty saturationPercentProperty; Get the percentage of any non-8-bit image that should be saturated when applying auto contrast settings. See Also:. getSaturationPercent(); setSaturationPercent(double); saturationPercentProperty(). expandToWindow; pu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html:3422,avail,available,3422,javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html,1,['avail'],['available']
Availability,"getProject; public static Project<BufferedImage> getProject(); Get the current project.; ; This returns getBatchProject() if it is not null; otherwise, it returns ; the default project last set through setDefaultProject(Project). Returns:; See Also:. getBatchProject(). resolvePath; public static String resolvePath(String path); throws IllegalArgumentException; Resolve a path, replacing any placeholders. Currently, this means only PROJECT_BASE_DIR. Parameters:; path - ; Returns:; Throws:; IllegalArgumentException - if PROJECT_BASE_DIR is used but no project is available. buildFilePath; public static String buildFilePath(String first,; String... more); throws IllegalArgumentException; Build a file path from multiple components.; A common use of this is; ; String path = buildFilePath(PROJECT_BASE_DIR, ""export"");; ; although that can now be replaced by buildPathInProject(String...). Parameters:; first - the first component of the file path; more - additional path components to append; Returns:; Throws:; IllegalArgumentException - if PROJECT_BASE_DIR is used but no project is available; See Also:. buildPathInProject(String...); makePathInProject(String...); makeFileInProject(String...). buildPathInProject; public static String buildPathInProject(String... more); throws IllegalArgumentException; Build a file or directory path relative to the current project, but do not make ; any changes on the file system.; This is equivalent to calling; ; String path = buildFilePath(PROJECT_BASE_DIR, more);; . If you want to additionally create the directory, see makePathInProject(String...). Parameters:; more - additional path components to append; Returns:; Throws:; IllegalArgumentException - if no project path is available; Since:; v0.4.0; See Also:. makePathInProject(String...); makeFileInProject(String...). makePathInProject; public static String makePathInProject(String... more); throws IllegalArgumentException; Build a file or directory path relative to the current project, and e",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:52209,avail,available,52209,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['avail'],['available']
Availability,"ge img); Create an overlay to display one specified image region. Parameters:; options - ; region - ; img - . BufferedImageOverlay; public BufferedImageOverlay(OverlayOptions options,; Map<? extends ImageRegion,BufferedImage> regions); Create an overlay to display multiple image regions. Parameters:; options - ; regions - . BufferedImageOverlay; public BufferedImageOverlay(QuPathViewer viewer,; OverlayOptions options,; Map<? extends ImageRegion,BufferedImage> regions); Create an overlay to display multiple image regions. Parameters:; viewer - ; options - ; regions - . Method Details. addAllRegions; public void addAllRegions(ImageServer<BufferedImage> server,; int level); throws IOException; Add all regions for a specific level of an ImageServer.; Note that this results in all regions being read immediately.; Therefore it should only be used for 'small' images that can be held in main memory. Parameters:; server - the server whose tiles should be drawn on the overlay; level - the level from which to request regions; for the highest available resolution, use 0; Throws:; IOException. setColorModel; public void setColorModel(ColorModel colorModel); Optionally set a custom ColorModel.; This makes it possible to display the BufferedImage with a different color model than its ; original model. Parameters:; colorModel - . getColorModel; public ColorModel getColorModel(). Returns:; the custom color model, if any is found. changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> observable,; ImageData<BufferedImage> oldValue,; ImageData<BufferedImage> newValue). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. getRegionMap; public Map<ImageRegion,BufferedImage> getRegionMap(); Get an unmodifiable Map containing image regions to paint on this overlay. Returns:. paintOverlay; public void paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletel",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html:5446,avail,available,5446,javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html,1,['avail'],['available']
Availability,"gin,; double downsampleFactor,; ImagePlane plane); Create an annotation object for a specific ImageJ Roi, using an ImagePlus to help set properties. Parameters:; roi - the ImageJ ROI; xOrigin - the x-origin to translate the Roi; should be Calibration.xOrigin if available, or 0 otherwise; yOrigin - the y-origin to translate the Roi; should be Calibration.yOrigin if available, or 0 otherwise; downsampleFactor - the downsample factor used for rescaling (or 1.0 for no rescaling); plane - the specific plane to use for the QuPath ROI; if null, the ImageJ Roi position properties will be used instead, where possible; Returns:; a PathObject or null if no object could be created (e.g. the ImageJ roi is null or incompatible); Since:; v0.4.0; See Also:. convertToPathObject(ImagePlus, ImageServer, Roi, double, Function, ImagePlane); convertToAnnotation(Roi, double, ImagePlus). convertToDetection; public static PathObject convertToDetection(Roi roi,; double xOrigin,; double yOrigin,; double downsampleFactor,; ImagePlane plane); Create a detection object for a specific ImageJ Roi, using an ImagePlus to help set properties. Parameters:; roi - the ImageJ ROI; xOrigin - the x-origin to translate the Roi; should be Calibration.xOrigin if available, or 0 otherwise; yOrigin - the y-origin to translate the Roi; should be Calibration.yOrigin if available, or 0 otherwise; downsampleFactor - the downsample factor used for rescaling (or 1.0 for no rescaling); plane - the specific plane to use for the QuPath ROI; if null, the ImageJ Roi position properties will be used instead, where possible; Returns:; a PathObject or null if no object could be created (e.g. the ImageJ roi is null or incompatible); Since:; v0.4.0; See Also:. convertToPathObject(ImagePlus, ImageServer, Roi, double, Function, ImagePlane); convertToDetection(Roi, double, ImagePlus). convertToAnnotation; public static PathObject convertToAnnotation(Roi roi,; double downsampleFactor,; ImagePlus imp); Create an annotation object fo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:14489,down,downsampleFactor,14489,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,1,['down'],['downsampleFactor']
Availability,"ging if required. Returns:; See Also:. physicalMemory(); memoryReport(CharSequence). memoryReport; public static String memoryReport(CharSequence delimiter); Create a brief report on memory use, based on JavaCPP's Pointer class. Parameters:; delimiter - delimiter to use between elements of the report, e.g. "", "" or ""\n""; Returns:; See Also:. trackedMemory(); physicalMemory(). findMaxima; public static Collection<OpenCVTools.IndexedPixel> findMaxima(Mat mat,; Mat mask); Find maxima within an image. Parameters:; mat - image containing maxima; must be 2D and single-channel; mask - optional mask; Returns:. getMaskedPixels; public static List<OpenCVTools.IndexedPixel> getMaskedPixels(Mat mat,; Mat mask); Extract all the masked pixels within an image. Parameters:; mat - input image; must be single-channel; mask - mask of the same size as mat; Returns:; list of pixels, including their indices and values. extractMaskedFloats; public static float[] extractMaskedFloats(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pixels should be extracted; mask - the mask to apply to the input; channel - the channel index (zero-based) to consider; Returns:; a float array containing the values of the input filtered by the mask; Throws:; IllegalArgumentException - when the input and the mask don't have the same dimensions. extractMaskedDoubles; public static double[] extractMaskedDoubles(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified chann",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:44181,mask,mask,44181,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html,2,['mask'],['mask']
Availability,"gion; qupath.lib.regions.RegionRequest. public class RegionRequest; extends ImageRegion; Class for defining an image region that can also be used to request these region from an ImageServer.; ; In addition to the information contained within an ImageRegion, also contains the path to the image; (and optionally an additional image name stored within it) and a downsample value. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static List<RegionRequest>; createAllRequests(ImageServer<?> server,; double downsample). Create requests for the full width and height of an ImageServer, for all planes (z-slices and time points). static RegionRequest; createInstance(String path,; double downsample,; int x,; int y,; int width,; int height). Create a request for a region specified in terms of its bounding box, using the first z-slice and time point. static RegionRequest; createInstance(String path,; double downsample,; int x,; int y,; int width,; int height,; int z,; int t). Create a request for a region specified in terms of its bounding box, z-slice and time point. static RegionRequest; createInstance(String path,; double downsample,; int x,; int y,; int width,; int height,; ImagePlane plane). Create a request for a region specified in terms of its bounding box and ImagePlane. static RegionRequest; createInstance(String path,; double downsample,; Collection<? extends ROI> rois). Create a request that contains the pixels of the specified ROIs. static RegionRequest; createInstance(String path,; double downsample,; ImageRegion region). Create a request corresponding to a specified ImageRegion. static RegionRequest; createInstance(String path,; double downsample,; ROI roi). Create a request that contains the pixels of the specified ROI. static RegionRequest; createInstance(String path,; RegionRequest request). Create a request that matches another request but with a different path. static Regio",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html:1416,down,downsample,1416,javadoc/docs/qupath/lib/regions/RegionRequest.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html,1,['down'],['downsample']
Availability,"gle band of a BufferedImage. static FloatProcessor; convertToOpticalDensitySum(ColorProcessor cp,; double maxRed,; double maxGreen,; double maxBlue). Calculate optical density values for the red, green and blue channels, then add these all together. static PathObject; convertToPathObject(Roi roi,; double xOrigin,; double yOrigin,; double downsampleFactor,; Function<ROI,PathObject> creator,; ImagePlane plane). Create a PathObject for a specific ImageJ Roi. static PathObject; convertToPathObject(Roi roi,; double downsampleFactor,; Function<ROI,PathObject> creator,; ImagePlus imp). Create a PathObject for a specific ImageJ Roi, using an ImagePlus to help set properties. static PathObject; convertToPathObject(ImagePlus imp,; ImageServer<?> server,; Roi roi,; double downsampleFactor,; Function<ROI,PathObject> creator,; ImagePlane plane). Deprecated.; use instead convertToPathObject(Roi, double, double, double, Function, ImagePlane). static PolygonROI; convertToPolygonROI(PolygonRoi roi,; Calibration cal,; double downsampleFactor,; ImagePlane plane). Convert an ImageJ PolygonRoi to a QuPath PolygonROI. static ROI; convertToROI(Roi roi,; double xOrigin,; double yOrigin,; double downsampleFactor,; ImagePlane plane). Create a ROI from an ImageJ Roi. static ROI; convertToROI(Roi roi,; Calibration cal,; double downsampleFactor,; ImagePlane plane). Create a ROI from an ImageJ Roi, using the Calibration object of an ImagePlus. static <T extends PathImage<? extends ImagePlus>>ROI; convertToROI(Roi roi,; T pathImage). Create a ROI from an ImageJ Roi. static ImagePlus; convertToUncalibratedImagePlus(String title,; BufferedImage img). Convert a BufferedImage to an ImagePlus, without pixel size information or other calibration. static ImageStack; createImageStack(ImageProcessor... ips). Create an ImageStack containing the specified ImageProcessors. static PathImage<ImagePlus>; createPathImage(ImageServer<BufferedImage> server,; ImagePlus imp,; RegionRequest request). Create a PathImag",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:5239,down,downsampleFactor,5239,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,1,['down'],['downsampleFactor']
Availability,"gle-channel; Returns:. physicalMemory; public static String physicalMemory(); Get a brief, one-line report on current physical memory use, based on JavaCPP's Pointer class.; This is suitable for logging if required. Returns:; See Also:. trackedMemory(); memoryReport(CharSequence). trackedMemory; public static String trackedMemory(); Get a brief, one-line report on tracked memory use, based on JavaCPP's Pointer class.; This is suitable for logging if required. Returns:; See Also:. physicalMemory(); memoryReport(CharSequence). memoryReport; public static String memoryReport(CharSequence delimiter); Create a brief report on memory use, based on JavaCPP's Pointer class. Parameters:; delimiter - delimiter to use between elements of the report, e.g. "", "" or ""\n""; Returns:; See Also:. trackedMemory(); physicalMemory(). findMaxima; public static Collection<OpenCVTools.IndexedPixel> findMaxima(Mat mat,; Mat mask); Find maxima within an image. Parameters:; mat - image containing maxima; must be 2D and single-channel; mask - optional mask; Returns:. getMaskedPixels; public static List<OpenCVTools.IndexedPixel> getMaskedPixels(Mat mat,; Mat mask); Extract all the masked pixels within an image. Parameters:; mat - input image; must be single-channel; mask - mask of the same size as mat; Returns:; list of pixels, including their indices and values. extractMaskedFloats; public static float[] extractMaskedFloats(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pixels should be extracted; mask - the mask to apply to the input; channel - the channel index (zero-based) to consider; Returns:; a float array containing the values of the input filtered by th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:43769,mask,mask,43769,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html,2,['mask'],['mask']
Availability,"gui.extensions.UpdateChecker. Query the latest release from a GitHub repo. checkImageSupport(URI, String...) - Method in class qupath.imagej.images.servers.ImageJServerBuilder;  ; checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; checkImageSupport(URI, String...) - Method in interface qupath.lib.images.servers.ImageServerBuilder. Check whether a URI is supported by this builder. checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.JsonImageServerBuilder;  ; checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; checkMinVersion(String) - Static method in class qupath.lib.scripting.QP. Check whether the current QuPath version is ≥ the specified version. checkpoint() - Method in class qupath.lib.common.Timeit. Create a new checkpoint with a default name. checkpoint(String) - Method in class qupath.lib.common.Timeit. Create a new checkpoint with the specified name. checkpointAndRun(Runnable) - Method in class qupath.lib.common.Timeit. Create a checkpoint with the default name and immediately run the provided runnable. checkpointAndRun(String, Runnable) - Method in class qupath.lib.common.Timeit. Create a checkpoint and immediately run the provided Runnable. checkpointAndRun(String, Runnable, int) - Method in class qupath.lib.common.Timeit. Create a checkpoint and immediately run the provided Runnable nIterations times. checkType(URI) - Static method in class qupath.lib.images.servers.FileFormatInfo. Check the type of an image for a specified URI. checkVersionRange(String, String) - Static method in class qupath.lib.scripting.QP. Check whether the current QuPath version is ≥ the specified minimum version, and < the specified maximum. ChoiceParameter<S> - Class in qupath.lib.plugins.parameters. Parameter that supports a list of choices. choices - Variable in class qupath.lib.plugins.parameters.ChoiceParameter;  ; CIRCULARIT",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:98967,checkpoint,checkpoint,98967,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['checkpoint'],['checkpoint']
Availability,"gui.scripting.languages.JsonLanguage. Get the static instance of this class. getInstance() - Static method in class qupath.lib.gui.scripting.languages.MarkdownLanguage. Get the static instance of this class. getInstance() - Static method in class qupath.lib.gui.scripting.languages.PlainLanguage. Get the static instance of this class. getInstance() - Static method in class qupath.lib.gui.scripting.languages.PropertiesLanguage. Get the static instance of this class. getInstance() - Static method in class qupath.lib.gui.scripting.languages.XmlLanguage. Get the static instance of this class. getInstance() - Static method in class qupath.lib.gui.scripting.languages.YamlLanguage. Get the static instance of this class. getInstance() - Static method in class qupath.lib.gui.UserDirectoryManager. Get the singleton instance of the UserDirectoryManager. getInstance() - Static method in class qupath.lib.images.servers.bioformats.BioFormatsServerOptions. Get the static instance of BioFormatsServerOptions, available to servers being constructed. getInstance() - Static method in class qupath.lib.io.GsonTools. Get default Gson, capable of serializing/deserializing some key QuPath classes. getInstance() - Static method in class qupath.lib.objects.DefaultPathObjectComparator. Get shared comparator instance to sort PathObjects repeatably. getInstance() - Static method in class qupath.lib.roi.DefaultROIComparator. Get a static instance of this comparator, to avoid needing to construct it. getInstance(boolean) - Static method in class qupath.lib.io.GsonTools. Get default Gson, optionally with pretty printing enabled. getInstance(int, int) - Static method in class qupath.lib.geom.ImmutableDimension. Get an ImmutableDimension representing the specified width and height. getInstance(String) - Static method in class qupath.lib.objects.classes.PathClass;  ; getInstance(String, Integer) - Static method in class qupath.lib.images.servers.ImageChannel. Get a channel instance with the specified n",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:416646,avail,available,416646,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"h and height information in microns is known. hasPointROI(PathObject) - Static method in class qupath.lib.objects.PathObjectTools. Returns true if a PathObject has a Point ROI. hasROI() - Method in class qupath.lib.objects.PathObject. Returns true if this object has a ROI. hasROI() - Method in class qupath.lib.roi.RoiEditor. Returns true if this editor currently has a ROI. hasServer() - Method in class qupath.lib.gui.viewer.QuPathViewer. Returns true if there is currently an ImageServer being displayed in this viewer. hasString(String) - Static method in class qupath.lib.gui.localization.QuPathResources;  ; hasString(String, String) - Static method in class qupath.lib.gui.localization.QuPathResources;  ; hasSuffix() - Method in class qupath.lib.common.Version. Returns true if the version has a suffix, which typically indicates that it ; does not refer to a final stable version. hasUnseenErrors() - Method in class qupath.lib.gui.commands.LogViewerCommand. Boolean binding indicating whether there are any unseen errors. hasUpperBound() - Method in class qupath.lib.plugins.parameters.NumericParameter. Returns true if the parameter has a valid upper bound. hasZAndT() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return whether this ViewTracker has Z and T information. hasZSpacingMicrons() - Method in class qupath.lib.images.servers.PixelCalibration. Returns true if the z-spacing is known in microns. hConcat(Collection<? extends Mat>, Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Horizontal concatenation for a Mat. headerText(String) - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Specify the dialog header text. height - Variable in class qupath.lib.geom.ImmutableDimension. Height of the ImmutableDimension. height - Variable in class qupath.lib.gui.charts.Charts.BarChartBuilder;  ; height - Variable in class qupath.lib.gui.charts.Charts.PieChartBuilder;  ; height - Variable in class qupath.lib.gui.charts.Charts.Scat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:573543,error,errors,573543,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['error'],['errors']
Availability,"h the specified name. Parameters:; name - name of the checkpoint; if null, a default name will be generated; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. stop; public Timeit stop(); throws UnsupportedOperationException; Stop the Timeit. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit hasn't been started, or has already been stopped. autoUnits; public Timeit autoUnits(). nanoseconds; public Timeit nanoseconds(); Report timings in nanoseconds. Returns:; this instance. milliseconds; public Timeit milliseconds(); Report timings in milliseconds. Returns:; this instance. microseconds; public Timeit microseconds(); Report timings in microseconds. Returns:; this instance. seconds; public Timeit seconds(); Report timings in seconds. Returns:; this instance. minutes; public Timeit minutes(); Report timings in minutes. Returns:; this instance. summarizeCheckpoints; public Timeit summarizeCheckpoints(); Request that checkpoints are summarized in the toString() method.; Currently, this means simply reporting the mean time per checkpoint. Returns:; this instance; See Also:. summarizeCheckpoints(boolean). summarizeCheckpoints; public Timeit summarizeCheckpoints(boolean summarize); Optionally request that checkpoints are summarized in the toString() method.; Currently, this means simply reporting the mean time per checkpoint. Parameters:; summarize - whether to summarize or not; Returns:; this instance; See Also:. summarizeCheckpoints(boolean). getMaxDecimalPlaces; public int getMaxDecimalPlaces(); Get the maximum number of decimal places when reporting timings. Returns:; See Also:. maxDecimalPlaces(int). maxDecimalPlaces; public Timeit maxDecimalPlaces(int maxDP); Set the maximum number of decimal places when reporting timings ; using seconds or minutes. Parameters:; maxDP - ; Returns:; this instance. getCheckpoints; public List<Timeit.Checkpoint> getCheckpoints(); Get an list of all the c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:7901,checkpoint,checkpoints,7901,javadoc/docs/qupath/lib/common/Timeit.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html,1,['checkpoint'],['checkpoints']
Availability,"h); Create a new instance. Parameters:; qupath - ; Returns:. refreshTitles; public void refreshTitles(); Request that viewers refresh their titles.; This is only really needed for detached viewers, so that they are notified of any changes to the image name. getAllViewers; public ObservableList<QuPathViewer> getAllViewers(); Get an observable list of viewers.; Note that the list is unmodifiable; viewers should be added or removed through other ; methods in thie class. Returns:. getOverlayOptions; public OverlayOptions getOverlayOptions(); Get the overlay options shared by all viewers created by this manager. Returns:. showOverviewProperty; public BooleanProperty showOverviewProperty(); Show the overview image. Returns:. showLocationProperty; public BooleanProperty showLocationProperty(); Show the cursor location. Returns:. showScalebarProperty; public BooleanProperty showScalebarProperty(); Show the scalebar. Returns:. matchResolutions; public void matchResolutions(); Match the display resolutions (downsamples) of all viewers to match the current viewer.; This uses calibrated pixel size information if available. setActiveViewer; public void setActiveViewer(QuPathViewer viewer); Sets the value of the activeViewer property. Property description:; Get a read-only property representing the currently active viewer.; Only one viewer can be active, and this should not be null (i.e. the list of getAllViewers() ; should never be empty).; Parameters:; viewer - the value for the activeViewer property; See Also:. getActiveViewer(); activeViewerProperty(). imageDataProperty; public ReadOnlyObjectProperty<ImageData<BufferedImage>> imageDataProperty(); Read-only property containing the image open within the currently-active viewer.; To change the open image data, you should do so directly within the viewer. Returns:. getActiveViewer; public QuPathViewer getActiveViewer(); Get the value of activeViewerProperty(). Returns:. activeViewerProperty; public ReadOnlyObjectProperty<QuPathVi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html:6973,down,downsamples,6973,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,1,['down'],['downsamples']
Availability,"h, which can be used to optimize pixel requests for large images. int; getSizeC(). Get the number of image channels. int; getSizeT(). Get the number of time points. int; getSizeZ(). Get the number of z-slices. double; getTimepoint(int ind). Get the time point, defined in getTimeUnit(), or Double.NaN if this is unknown. TimeUnit; getTimeUnit(). Get the time unit for a time series. int; getWidth(). Get the full-resolution image width. double; getZSpacingMicrons(). Get the z-spacing in microns, if available - or Double.NaN otherwise. int; hashCode();  ; boolean; isCompatibleMetadata(ImageServerMetadata metadata). Returns true if a specified ImageServerMetadata is compatible with this one, that is it has the same path and dimensions; (but possibly different pixel sizes, magnifications etc.). boolean; isRGB(). Returns true if the pixels are stored in (A)RGB form. int; nLevels(). Get the number of resolution levels. boolean; pixelSizeCalibrated(). Returns true if pixel width and height calibration information is available for the image. String; toString();  ; boolean; zSpacingCalibrated(). Returns true if z-spacing calibration information is available for the image. Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Field Details. DEFAULT_CLASSIFICATION_LABELS_CHANNEL; public static final ImageChannel DEFAULT_CLASSIFICATION_LABELS_CHANNEL; Default channel to use with images where the channel type is ImageServerMetadata.ChannelType.CLASSIFICATION. Method Details. getPreferredDownsamplesArray; public double[] getPreferredDownsamplesArray(); Request the preferred downsamples from the image metadata.; ; Note that this makes a defensive copy, and so should not be called often; it is generally preferably ; to request downsample values individually. Returns:. getLevels; public List<ImageServerMetadata.ImageResolutionLevel> getLevels(); Get an unmodifiable list containing the resolution levels. Returns:. getWidth; public ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html:4401,avail,available,4401,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html,1,['avail'],['available']
Availability,"h.lib.gui.viewer.overlays.AbstractOverlay;  ; getLogDirectoryPath() - Method in class qupath.lib.gui.UserDirectoryManager. Get the path to where log files should be written. getLoggableParameters(ImageData<T>) - Method in class qupath.lib.plugins.AbstractInteractivePlugin. Get a copy of the current parameter list (with empty parameters removed) suitable for logging. getLogger() - Static method in class qupath.lib.scripting.QP. Get the logger associated with this class. getLogMessageCounts() - Method in class qupath.lib.gui.commands.LogViewerCommand. Get the counts of all messages logged by the log viewer. getLogStyling(String) - Static method in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Get styling for use with a logger. getLogViewerCommand() - Method in class qupath.lib.gui.QuPathGUI. Get the log viewer associated with this QuPath instance. getLongText() - Method in class qupath.lib.gui.tools.CommandFinderTools.CommandEntry. Get the long text (description) for the command, if available. getLowerBound() - Method in enum class qupath.lib.images.servers.PixelType. Get a number representing the minimum value permitted by this type (may be negative). getLowerBound() - Method in class qupath.lib.plugins.parameters.NumericParameter. Retrieve the lower bound. getMagnification() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the magnification for the image within this viewer, or Double.NaN if no image is present. getMagnification() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the magnification value, or Double.NaN if this is unavailable. getMagnificationString(QuPathViewer) - Static method in class qupath.lib.gui.tools.GuiTools. Get an appropriate String to represent the magnification of the image currently in the viewer. getMainObjectFilter() - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapParameters. Get the primary object filter. getMajor() - Method in class qupath.lib.common.Version. Ge",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:431029,avail,available,431029,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"hObjectSelectionModel selectionModel,; double downsample); Paint the specified tissue microarray grid. Parameters:; g2d - the graphics object on which the objects should be painted; tmaGrid - the TMA grid; overlayOptions - the overlay options defining how objects should be painted; selectionModel - the selection model used to determine the selection status of each object; downsample - the downsample factor; this should already be applied to the graphics object, but is needed to determine some line thicknesses. paintObject; public static boolean paintObject(PathObject pathObject,; Graphics2D g,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample); Paint an object (or, more precisely, its ROI).; ; This is subject to the OverlayOptions, and therefore may not actually end up painting anything; (if the settings are such that objects of the class provided are not to be displayed). Parameters:; pathObject - ; g - ; overlayOptions - ; selectionModel - ; downsample - ; Returns:; true if anything was painted, false otherwise. paintShape; public static void paintShape(Shape shape,; Graphics2D g2d,; Color colorStroke,; Stroke stroke,; Color colorFill); Paint the specified shape with specified stroke and fill colors. Parameters:; shape - shape to paint; g2d - graphics object; colorStroke - stroke color (may be null); stroke - stroke (may be null); colorFill - fill color (may be null). getCachedStroke; public static Stroke getCachedStroke(double thickness); Get a BasicStroke with the specified thickness. Parameters:; thickness - ; Returns:. paintHandles; public static void paintHandles(RoiEditor roiEditor,; Graphics2D g2d,; double minHandleSize,; double maxHandleSize,; Color colorStroke,; Color colorFill); Paint the handles onto a Graphics object, if we have a suitable (non-point) ROI.; ; The minimum and maximum handle size can be specified; if the same, all handles will have the same size. If different, ; then the distance between consecu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html:4194,down,downsample,4194,javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html,1,['down'],['downsample']
Availability,"hannels (bands) of an image with the maximum values according to the argmax criterion, ; with an optional bounding rectangle. static long[]; computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask). Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values. static long[]; computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask,; Rectangle bounds). Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values, optionally restricted to a bounding rectangle. static BufferedImage; createROIMask(int width,; int height,; ROI roi,; double xOrigin,; double yOrigin,; double downsample). Create a grayscale BufferedImage representing a mask for a specified ROI. static BufferedImage; createROIMask(int width,; int height,; ROI roi,; RegionRequest request). Create a grayscale BufferedImage representing a mask for a specified ROI. static BufferedImage; createROIMask(Shape shape,; double downsample). Create a Shape mask using the minimal bounding box for the Shape. static BufferedImage; createROIMask(ROI roi,; double downsample). Create a ROI mask using the minimal bounding box for the ROI. static BufferedImage; createShapeMask(int width,; int height,; Shape shape,; double xOrigin,; double yOrigin,; double downsample). Create a grayscale BufferedImage representing a mask for a specified ROI. static BufferedImage; crop(BufferedImage img,; int x,; int y,; int width,; int height). Create a crop of the image using the specified bounding box. static BufferedImage; duplicate(BufferedImage img). Duplicate a BufferedImage. static BufferedImage; ensureBufferedImage(Image image). Convert an Image to a BufferedImage if necessary, or return the original image unchanged ; if it is already a BufferedImage. static BufferedImage; ensureBufferedImageType(BufferedImage img,; int requestedType). Convert a BufferedImage to have a specified type. static boolean; is8b",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:2599,down,downsample,2599,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,1,['down'],['downsample']
Availability,"he metadata needs to be adjusted (e.g. to correct erroneous pixel sizes). Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; ImageServerMetadata.Builder. Builder to create a new ImageServerMetadata object. static enum ; ImageServerMetadata.ChannelType. Enum representing possible channel (band) types for an image. static class ; ImageServerMetadata.ImageResolutionLevel. Width and height of each resolution in a multi-level image pyramid. Field Summary; Fields. Modifier and Type; Field; Description; static final ImageChannel; DEFAULT_CLASSIFICATION_LABELS_CHANNEL. Default channel to use with images where the channel type is ImageServerMetadata.ChannelType.CLASSIFICATION. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ImageServerMetadata; duplicate(). Duplicate this metatadata. boolean; equals(Object obj);  ; double; getAveragedPixelSize(). Get the averaged pixel size in microns, if available - or Double.NaN otherwise. ImageChannel; getChannel(int n). Get the specified channel. List<ImageChannel>; getChannels(). Get an unmodifiable list of all channels. ImageServerMetadata.ChannelType; getChannelType(). Get the channel type, which can be used to interpret the channels. Map<Integer,PathClass>; getClassificationLabels(). Get map between labels and classification names. double; getDownsampleForLevel(int level). Get the downsample factor for a specific resolution level. int; getHeight(). Get the full-resolution image height. ImageServerMetadata.ImageResolutionLevel; getLevel(int level). Get resolution information for a specified pyramidal level. List<ImageServerMetadata.ImageResolutionLevel>; getLevels(). Get an unmodifiable list containing the resolution levels. double; getMagnification(). Get the magnification value, or Double.NaN if this is unavailable. Number; getMaxValue(). Get the minimum value supported by this image. Number; getMinValue(). Get the m",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html:1598,avail,available,1598,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html,1,['avail'],['available']
Availability,"he mouse (rather than requiring a double-click). Returns:. getSerializationExtension; public static String getSerializationExtension(); File extension used for serialization of ImageData (without the dot). Returns:. useZoomGesturesProperty; public static BooleanProperty useZoomGesturesProperty(); Support zoom gestures for touchscreens and trackpads. Returns:. useRotateGesturesProperty; public static BooleanProperty useRotateGesturesProperty(); Support rotate gestures for touchscreens and trackpads. Returns:. useScrollGesturesProperty; public static BooleanProperty useScrollGesturesProperty(); Support scroll gestures for touchscreens and trackpads. Returns:. brushCreateNewObjectsProperty; public static BooleanProperty brushCreateNewObjectsProperty(); Create new objects by default when drawing with the Brush tool. The alternative is to append (discontinuous) regions to existing annotations. Returns:. brushScaleByMagProperty; public static BooleanProperty brushScaleByMagProperty(); Optionally scale the default brush tool diameter by the viewer magnification (downsample value). Returns:. brushDiameterProperty; public static IntegerProperty brushDiameterProperty(); Default brush tool diameter, in pixels. Returns:. returnToMoveModeProperty; public static BooleanProperty returnToMoveModeProperty(); Request that the GUI returns to using the PAN tool after a ROI is drawn.; This helps keep errant clicking under control, but not permitting new ROIs to be made without; explicitly activating a ROI too. Returns:. tileCachePercentageProperty; public static DoubleProperty tileCachePercentageProperty(); Requested percentage of available memory to use for tile caching. Returns:. useCalibratedLocationStringProperty; public static BooleanProperty useCalibratedLocationStringProperty(); Show the cursor location on a viewer in calibrated units, rather than pixels. Returns:. useSelectedColorProperty; public static BooleanProperty useSelectedColorProperty(); Use a specified color for highlig",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:55814,down,downsample,55814,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['down'],['downsample']
Availability,"he number of time points. int; getSizeZ(). Get the number of z-slices. double; getTimepoint(int ind). Get the time point, defined in getTimeUnit(), or Double.NaN if this is unknown. TimeUnit; getTimeUnit(). Get the time unit for a time series. int; getWidth(). Get the full-resolution image width. double; getZSpacingMicrons(). Get the z-spacing in microns, if available - or Double.NaN otherwise. int; hashCode();  ; boolean; isCompatibleMetadata(ImageServerMetadata metadata). Returns true if a specified ImageServerMetadata is compatible with this one, that is it has the same path and dimensions; (but possibly different pixel sizes, magnifications etc.). boolean; isRGB(). Returns true if the pixels are stored in (A)RGB form. int; nLevels(). Get the number of resolution levels. boolean; pixelSizeCalibrated(). Returns true if pixel width and height calibration information is available for the image. String; toString();  ; boolean; zSpacingCalibrated(). Returns true if z-spacing calibration information is available for the image. Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Field Details. DEFAULT_CLASSIFICATION_LABELS_CHANNEL; public static final ImageChannel DEFAULT_CLASSIFICATION_LABELS_CHANNEL; Default channel to use with images where the channel type is ImageServerMetadata.ChannelType.CLASSIFICATION. Method Details. getPreferredDownsamplesArray; public double[] getPreferredDownsamplesArray(); Request the preferred downsamples from the image metadata.; ; Note that this makes a defensive copy, and so should not be called often; it is generally preferably ; to request downsample values individually. Returns:. getLevels; public List<ImageServerMetadata.ImageResolutionLevel> getLevels(); Get an unmodifiable list containing the resolution levels. Returns:. getWidth; public int getWidth(); Get the full-resolution image width. Returns:. getHeight; public int getHeight(); Get the full-resolution image height. Re",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html:4533,avail,available,4533,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html,1,['avail'],['available']
Availability,"he width of the largest image, if known. boolean; isBigTiff(). Returns true if URI is for a local file known/expected to be a BigTIFF image. boolean; isNotRGB(). Returns true if we can say with reasonable confidence that the image is not RGB. boolean; isTiff(). Returns true if URI is for a local file known/expected to be a TIFF image. boolean; isURL(). Return true if URI has a scheme beginning with http. int; nImages(). Return an estimate of the number of images if known, or -1 if unknown. int; nImagesLargest(). Return the number of images with the largest image size, if known, or -1 if unknown. Method Details. isURL; boolean isURL(); Return true if URI has a scheme beginning with http. Returns:. isTiff; boolean isTiff(); Returns true if URI is for a local file known/expected to be a TIFF image. Returns:. isBigTiff; boolean isBigTiff(); Returns true if URI is for a local file known/expected to be a BigTIFF image. Returns:. getDescription; String getDescription(); Get the image description, as stored in a TIFF, or null if no description is available. Returns:. getFile; File getFile(); Get a File object representing the local image file - or null if no file could be found. Returns:. nImages; int nImages(); Return an estimate of the number of images if known, or -1 if unknown.; ; Note that the maximum value returned may be less than the total number of images, if scanning the full ; file risks being prohibitively expensive (this has been found to be the case with some non-standard TIFF ; images). Returns:. nImagesLargest; int nImagesLargest(); Return the number of images with the largest image size, if known, or -1 if unknown.; ; This can be used to help distinguish images that contain multiple images where each image is really ; another z-slice, channel or time point - rather than a macro or label, for example. Returns:. isNotRGB; boolean isNotRGB(); Returns true if we can say with reasonable confidence that the image is not RGB.; ; This information can be used to prev",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/FileFormatInfo.ImageCheckType.html:2149,avail,available,2149,javadoc/docs/qupath/lib/images/servers/FileFormatInfo.ImageCheckType.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/FileFormatInfo.ImageCheckType.html,1,['avail'],['available']
Availability,"hed transform, constraining region growing using an intensity threshold. DOWNLOAD - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; downsample(double) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set the downsample factor to use with requesting image regions. downsample(double) - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Specify downsample factor (defined in terms of the full resolution image space). downsample(double) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Specify downsample factor. downsample(double) - Method in class qupath.lib.images.writers.TileExporter. Define resolution as a downsample value. downsamples(double...) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify downsamples; this is especially important for 'thick' objects (annotations, TMA cores); because the downsamples define the resolutions at which these will be rendered. downsamples(double...) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify downsample factors to use in the final pyramid. DragDropImportListener - Class in qupath.lib.gui.viewer. Drag and drop support for main QuPath application, which can support a range of different object types (Files, URLs, Strings,..). DragDropImportListener(QuPathGUI) - Constructor for class qupath.lib.gui.viewer.DragDropImportListener. Constructor. DragDropImportListener.DropHandler<T> - Interface in qupath.lib.gui.viewer. Interface to define a new drop handler. DrawingPreferences() - Constructor for class qupath.lib.gui.panes.PreferencePane.DrawingPreferences;  ; dumpMetadata() - Method in class qupath.imagej.images.servers.ImageJServer. Get a String representing the image metadata. dumpMetadata() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer. Retrieve a string representation of the metadata OME-XML. dumpMetadata() - Method in class qupath.lib.images.servers.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:271882,down,downsamples,271882,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['down'],['downsamples']
Availability,"height); Define the region to export based on a bounding box. Parameters:; x - ; y - ; width - ; height - ; Returns:; this builder. region; public OMEPyramidWriter.Builder region(ImageRegion region); Define the region to export, including the z-slice and time point. Parameters:; region - ; Returns:; this builder; See Also:. region(int, int, int, int); timePoint(int); zSlice(int); zSlices(int, int). tileSize; public OMEPyramidWriter.Builder tileSize(int tileSize); Define the requested tile size (width == height).; ; This is only a suggestion, and the OME reader may override it if the value is unsupported. Parameters:; tileSize - ; Returns:; this builder. tileSize; public OMEPyramidWriter.Builder tileSize(int tileWidth,; int tileHeight); Define the requested tile width and height.; ; This is only a suggestion, and the OME reader may override it if the value is unsupported. Parameters:; tileWidth - ; tileHeight - ; Returns:; this builder. downsamples; public OMEPyramidWriter.Builder downsamples(double... downsamples); Specify downsample factors to use in the final pyramid.; ; Note that the downsample values provided will be sorted in ascending order. Parameters:; downsamples - ; Returns:; this builder. dyadicDownsampling; public OMEPyramidWriter.Builder dyadicDownsampling(); Downsample by factors of 2.; ; Note that the highest downsample value will depend on the tile size, ; so the tile size should be set first. Returns:; this builder; See Also:. scaledDownsampling(double). scaledDownsampling; public OMEPyramidWriter.Builder scaledDownsampling(double scale); Downsample by specific increasing factor each time (e.g. if scale == 2, then downsamples will be 1, 2, 4, 8...).; ; Note that the highest downsample value will depend on the tile size, ; so the tile size should be set first. Parameters:; scale - ; Returns:; this builder; See Also:. scaledDownsampling(double). scaledDownsampling; public OMEPyramidWriter.Builder scaledDownsampling(double minDownsample,; double scale);",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html:9736,down,downsamples,9736,javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html,1,['down'],['downsamples']
Availability,"herwise; downsampleFactor - the downsample factor used for rescaling (or 1.0 for no rescaling); plane - the specific plane to use for the QuPath ROI; if null, the ImageJ Roi position properties will be used instead, where possible; Returns:; a PathObject or null if no object could be created (e.g. the ImageJ roi is null or incompatible); Since:; v0.4.0; See Also:. convertToPathObject(ImagePlus, ImageServer, Roi, double, Function, ImagePlane); convertToAnnotation(Roi, double, ImagePlus). convertToDetection; public static PathObject convertToDetection(Roi roi,; double xOrigin,; double yOrigin,; double downsampleFactor,; ImagePlane plane); Create a detection object for a specific ImageJ Roi, using an ImagePlus to help set properties. Parameters:; roi - the ImageJ ROI; xOrigin - the x-origin to translate the Roi; should be Calibration.xOrigin if available, or 0 otherwise; yOrigin - the y-origin to translate the Roi; should be Calibration.yOrigin if available, or 0 otherwise; downsampleFactor - the downsample factor used for rescaling (or 1.0 for no rescaling); plane - the specific plane to use for the QuPath ROI; if null, the ImageJ Roi position properties will be used instead, where possible; Returns:; a PathObject or null if no object could be created (e.g. the ImageJ roi is null or incompatible); Since:; v0.4.0; See Also:. convertToPathObject(ImagePlus, ImageServer, Roi, double, Function, ImagePlane); convertToDetection(Roi, double, ImagePlus). convertToAnnotation; public static PathObject convertToAnnotation(Roi roi,; double downsampleFactor,; ImagePlus imp); Create an annotation object for a specific ImageJ Roi. Parameters:; roi - the ImageJ ROI; downsampleFactor - the downsample factor used for rescaling (or 1.0 for no rescaling); imp - the ImagePlus associated with this Roi; it is used to determine the xOrigin, yOrigin and image plane; Returns:; a PathObject or null if no object could be created (e.g. the ImageJ roi is null or incompatible); Since:; v0.4.0; See A",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:14841,avail,available,14841,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,3,"['avail', 'down']","['available', 'downsample', 'downsampleFactor']"
Availability,"herwise; yOrigin - the y-origin to translate the Roi; should be Calibration.yOrigin if available, or 0 otherwise; downsampleFactor - the downsample factor used for rescaling (or 1.0 for no rescaling); plane - the specific plane to use for the QuPath ROI; if null, the ImageJ Roi position properties will be used instead, where possible; Returns:; a PathObject or null if no object could be created (e.g. the ImageJ roi is null or incompatible); Since:; v0.4.0; See Also:. convertToPathObject(ImagePlus, ImageServer, Roi, double, Function, ImagePlane); convertToAnnotation(Roi, double, ImagePlus). convertToDetection; public static PathObject convertToDetection(Roi roi,; double xOrigin,; double yOrigin,; double downsampleFactor,; ImagePlane plane); Create a detection object for a specific ImageJ Roi, using an ImagePlus to help set properties. Parameters:; roi - the ImageJ ROI; xOrigin - the x-origin to translate the Roi; should be Calibration.xOrigin if available, or 0 otherwise; yOrigin - the y-origin to translate the Roi; should be Calibration.yOrigin if available, or 0 otherwise; downsampleFactor - the downsample factor used for rescaling (or 1.0 for no rescaling); plane - the specific plane to use for the QuPath ROI; if null, the ImageJ Roi position properties will be used instead, where possible; Returns:; a PathObject or null if no object could be created (e.g. the ImageJ roi is null or incompatible); Since:; v0.4.0; See Also:. convertToPathObject(ImagePlus, ImageServer, Roi, double, Function, ImagePlane); convertToDetection(Roi, double, ImagePlus). convertToAnnotation; public static PathObject convertToAnnotation(Roi roi,; double downsampleFactor,; ImagePlus imp); Create an annotation object for a specific ImageJ Roi. Parameters:; roi - the ImageJ ROI; downsampleFactor - the downsample factor used for rescaling (or 1.0 for no rescaling); imp - the ImagePlus associated with this Roi; it is used to determine the xOrigin, yOrigin and image plane; Returns:; a PathObject or",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:14736,avail,available,14736,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,1,['avail'],['available']
Availability,"hin this project. URI; getPreviousURI(). Sometimes projects move (unfortunately). default <S,; R extends S>ResourceManager.Manager<R>; getResources(String location,; Class<S> cls,; String ext). Get a manager for objects of a specified class within this project. default ResourceManager.Manager<String>; getScripts(). Get a manager for scripts saved within this project. URI; getURI(). Get a URI that can be used when saving/reloading this project. String; getVersion(). The version string for this project, which can be used to distinguish new and older project ; (which may contain different information). boolean; isEmpty(). Test if the project contains any images. void; removeAllImages(Collection<ProjectImageEntry<T>> entries,; boolean removeAllData). Remove multiple images from the project, optionally including associated data. void; removeImage(ProjectImageEntry<?> entry,; boolean removeAllData). Remove an image from the project, optionally including associated data. void; setMaskImageNames(boolean maskNames). Request that entries return masked image names, rather than the 'true' image names. boolean; setPathClasses(Collection<? extends PathClass> pathClasses). Update the available PathClasses. void; syncChanges(). Save the project. Method Details. getPathClasses; List<PathClass> getPathClasses(); Get an unmodifiable list representing the PathClasses associated with this project. Returns:. getMaskImageNames; boolean getMaskImageNames(); Query whether 'true' or masked image names are being returned. Returns:; See Also:. setMaskImageNames(boolean). setMaskImageNames; void setMaskImageNames(boolean maskNames); Request that entries return masked image names, rather than the 'true' image names.; ; The purpose of this is to support studies where the user ought not to see the image names during analysis, ; reducing the potential for user bias. Parameters:; maskNames - ; See Also:. getMaskImageNames(). setPathClasses; boolean setPathClasses(Collection<? extends PathClass> path",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/projects/Project.html:3146,mask,maskNames,3146,javadoc/docs/qupath/lib/projects/Project.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/Project.html,1,['mask'],['maskNames']
Availability,"his language's auto-completion. getAutomateActions() - Method in class qupath.lib.gui.QuPathGUI. Get the automated actions associated with this QuPath instance. getAvailableFeatures(Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Get a set containing the names of all measurements found in the measurement lists of a specified object collection. getAvailableLanguages() - Static method in class qupath.lib.gui.scripting.languages.ScriptLanguageProvider. Get the available script languages. getAvailablePathClasses() - Method in class qupath.lib.gui.QuPathGUI. Get an observable list of available PathClasses. getAvailableSyntaxes() - Static method in class qupath.lib.gui.scripting.syntax.ScriptSyntaxProvider. Get the available script syntaxes. getAvailableTools() - Method in class qupath.lib.gui.viewer.tools.ExtendedPathTool;  ; getAveragedPixelSize() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the averaged pixel size in microns, if available - or Double.NaN otherwise. getAveragedPixelSize() - Method in class qupath.lib.images.servers.PixelCalibration. Get an average of PixelCalibration.getPixelWidth() and PixelCalibration.getPixelHeight(). getAveragedPixelSizeMicrons() - Method in class qupath.lib.images.servers.PixelCalibration. Get the average of the pixel width and height in microns if possible, or Double.NaN if the pixel size is not available. getBackingListEntries() - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Access the underlying entries, for which getEntries provides a filtered view. getBaseClass() - Method in class qupath.lib.objects.classes.PathClass. Get the 'base' class, i.e. getBaseDirectory(Project<?>) - Static method in class qupath.lib.projects.Projects. Get the base directory of a project stored on the local file system. getBasePathClass(PathObject) - Static method in class qupath.lib.scripting.QP. Get a base class - which is either a valid PathClass which i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:333606,avail,available,333606,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"histogram. Pane; getPane(). Get the pane containing the histogram and associated UI components, for addition to a scene. void; parameterChanged(ParameterList parameterList,; String key,; boolean isAdjusting). Notify listener that a parameter value has changed. void; refreshCombo(). Refresh the available measurements. void; refreshHistogram(). Refresh the currently-displayed histogram (e.g. void; setNumBins(int nBins). Set the number of bins for the histogram. void; showHistogram(String column). Show the histogram for a specified data column. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. HistogramDisplay; public HistogramDisplay(PathTableData<?> model,; boolean showTable); Constructor. Parameters:; model - the table data for histogramming; showTable - if true, include a measurement summary table along with the histogram. Method Details. refreshCombo; public void refreshCombo(); Refresh the available measurements. setNumBins; public void setNumBins(int nBins); Set the number of bins for the histogram. Parameters:; nBins - the number of bins to use. getNumBins; public int getNumBins(); Get the requested number of bins used for the histogram. Returns:. getPane; public Pane getPane(); Get the pane containing the histogram and associated UI components, for addition to a scene. Returns:. refreshHistogram; public void refreshHistogram(); Refresh the currently-displayed histogram (e.g. because underlying data has changed). showHistogram; public void showHistogram(String column); Show the histogram for a specified data column. Parameters:; column - the name of the column to show. parameterChanged; public void parameterChanged(ParameterList parameterList,; String key,; boolean isAdjusting); Description copied from interface: ParameterChangeListener; Notify listener that a parameter value has changed. Specified by:; parameterChanged in interface ParameterChangeListe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramDisplay.html:2121,avail,available,2121,javadoc/docs/qupath/lib/gui/charts/HistogramDisplay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/charts/HistogramDisplay.html,1,['avail'],['available']
Availability,"hod Details. calibration; public DelaunayTools.Builder calibration(PixelCalibration cal); Specify pixel calibration, which is used to calibrate the x and y coordinates. Parameters:; cal - the calibration to use; Returns:; this builder. centroids; public DelaunayTools.Builder centroids(); Specify that the triangulation should be based on ROI centroids. Returns:; this builder. roiBounds; public DelaunayTools.Builder roiBounds(); Specify that the triangulation should be based on ROI boundary coordinates with the default densify factor. Returns:; this builder. roiBounds; public DelaunayTools.Builder roiBounds(double densify,; double erosion); Specify that the triangulation should be based on ROI boundary coordinates with a specified densify factor. Parameters:; densify - how much to 'densify' the coordinates; recommended default value is 4.0 (assuming uncalibrated pixels).; Decreasing the value will give a denser (and slower) triangulation; this can achieve more accuracy but ; also lead to numerical problems. Try adjusting this value only if the default results in errors.; erosion - amount to erode each Geometry in pixels. If non-zero, this can fix artifacts occurring at shared boundaries.; Returns:; this builder. preferNucleus; public DelaunayTools.Builder preferNucleus(boolean prefer); Specify that the triangulation should be based on nucleus ROIs where possible (only affects cell objects). Parameters:; prefer - if true, use the nucleus ROI for cell objects where possible; Returns:; this builder. coordinateExtractor; public DelaunayTools.Builder coordinateExtractor(Function<PathObject,Collection<Coordinate>> coordinateExtractor); Specify a default method of extracting coordinates for triangulation from an object, rather than centroids or the ROI boundary. Parameters:; coordinateExtractor - the custom coordinate extractor; Returns:; this builder. build; public DelaunayTools.Subdivision build(); Build the DelaunayTools.Subdivision with the current parameters. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DelaunayTools.Builder.html:3008,error,errors,3008,javadoc/docs/qupath/lib/analysis/DelaunayTools.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/DelaunayTools.Builder.html,1,['error'],['errors']
Availability,"hod in class qupath.lib.awt.common.BufferedImageTools. Create a grayscale BufferedImage representing a mask for a specified ROI. createSharedClassificationMerger() - Static method in class qupath.lib.objects.utils.ObjectMerger. Create an object merger that can merge together any objects with similar ROIs (e.g. createSharedPoolCompletionService(Class<V>) - Method in class qupath.lib.gui.QuPathGUI. Deprecated.; since v0.5.0; use QuPathGUI.getThreadPoolManager(). createSharedPoolCompletionService(Class<V>) - Method in class qupath.lib.gui.SharedThreadPoolManager. Create a completion service that uses a shared threadpool for the application. createSharedTileBoundaryMerger(double) - Static method in class qupath.lib.objects.utils.ObjectMerger. Create an object merger that uses a shared boundary IoU criterion and default overlap tolerance. createSharedTileBoundaryMerger(double, double) - Static method in class qupath.lib.objects.utils.ObjectMerger. Create an object merger that uses a shared boundary IoU criterion and overlap tolerance. createShowSystemInfoDialog(QuPathGUI) - Static method in class qupath.lib.gui.commands.Commands. Create a window summarizing key system information relevant for QuPath. createSingleStageAction(Supplier<Stage>) - Static method in class qupath.lib.gui.commands.Commands. Create a command that generates a persistent single dialog on demand. createSingleStageAction(Supplier<Stage>, String) - Static method in class qupath.lib.gui.commands.Commands. Create a named command that generates a persistent single dialog on demand. createSingleThreadExecutor(Object) - Method in class qupath.lib.gui.QuPathGUI. Deprecated.; since v0.5.0; use QuPathGUI.getThreadPoolManager(). createSpecifyAnnotationDialog(QuPathGUI) - Static method in class qupath.lib.gui.commands.Commands. Create a stage to prompt the user to specify an annotation to add. createStainVector(String, double, double, double) - Static method in class qupath.lib.color.StainVector. Create a stain v",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:225102,toler,tolerance,225102,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['toler'],['tolerance']
Availability,"hod in class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; getDoubleValues(String) - Method in interface qupath.lib.gui.measure.PathTableData. Get all double values for all items. getDownsample() - Method in class qupath.lib.gui.commands.MiniViewers.MiniViewerManager. Get the downsample used within the mini viewers. getDownsample() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel. Get the downsample factor for this level. getDownsample() - Method in class qupath.lib.images.servers.TileRequest. Get the downsample value for this tile. getDownsample() - Method in class qupath.lib.regions.RegionRequest. Get the requested downsample factor, defining the resolution at which pixels should be returned. getDownsampleFactor() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the current downsample factor. getDownsampleFactor() - Method in interface qupath.lib.images.PathImage. Get the downsample factor originally used when obtaining the image from an ImageServer; will be 1 if the image is full-resolution. getDownsampleFactor(ImageServer<?>, double) - Static method in class qupath.lib.images.servers.ServerTools. Calculate a downsample factor for a server given a preferred pixel size. getDownsampleForLevel(int) - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the downsample factor for a specific resolution level. getDownsampleForResolution(int) - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getDownsampleForResolution(int) - Method in interface qupath.lib.images.servers.ImageServer. Get the downsample factor for a specified resolution level, where level 0 is the full resolution image ; and nResolutions() - 1 is the lowest resolution available. getDummyColorModel(int) - Static method in class qupath.lib.color.ColorModelFactory. Get a dummy ColorModel instance. getEdgeMax() - Method in class qupath.lib.analysis.stats.Histogram. Get the maximum edge of the histogram. getEdgeMin() - Metho",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:386282,down,downsample,386282,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['down'],['downsample']
Availability,"hod in class qupath.lib.plugins.parameters.ParameterList. Get a double parameter value (or its default) for the specified key. getDoubleValues(String) - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; getDoubleValues(String) - Method in interface qupath.lib.gui.measure.PathTableData. Get all double values for all items. getDownsample() - Method in class qupath.lib.gui.commands.MiniViewers.MiniViewerManager. Get the downsample used within the mini viewers. getDownsample() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel. Get the downsample factor for this level. getDownsample() - Method in class qupath.lib.images.servers.TileRequest. Get the downsample value for this tile. getDownsample() - Method in class qupath.lib.regions.RegionRequest. Get the requested downsample factor, defining the resolution at which pixels should be returned. getDownsampleFactor() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the current downsample factor. getDownsampleFactor() - Method in interface qupath.lib.images.PathImage. Get the downsample factor originally used when obtaining the image from an ImageServer; will be 1 if the image is full-resolution. getDownsampleFactor(ImageServer<?>, double) - Static method in class qupath.lib.images.servers.ServerTools. Calculate a downsample factor for a server given a preferred pixel size. getDownsampleForLevel(int) - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the downsample factor for a specific resolution level. getDownsampleForResolution(int) - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getDownsampleForResolution(int) - Method in interface qupath.lib.images.servers.ImageServer. Get the downsample factor for a specified resolution level, where level 0 is the full resolution image ; and nResolutions() - 1 is the lowest resolution available. getDummyColorModel(int) - Static method in class qupath.lib.color.ColorModelFactory. Get ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:386182,down,downsample,386182,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['down'],['downsample']
Availability,"hod; Description; BufferedImage; applyClassification(ImageData<BufferedImage> server,; RegionRequest request). Apply pixel classifier to a specified region of an image. PixelClassifierMetadata; getMetadata(). Get metadata that describes how the classifier should be called, and the kind of output it provides. boolean; supportsImage(ImageData<BufferedImage> imageData). Query whether the classifier supports a particular image. Field Details. PROJECT_LOCATION; static final String PROJECT_LOCATION; Default location to use when storing object classifiers in a project. See Also:. Project.getResources(String, Class, String); Constant Field Values. Method Details. supportsImage; boolean supportsImage(ImageData<BufferedImage> imageData); Query whether the classifier supports a particular image.; It may not if the number of channels (for example) is incompatible. Parameters:; imageData - ; Returns:. applyClassification; BufferedImage applyClassification(ImageData<BufferedImage> server,; RegionRequest request); throws IOException; Apply pixel classifier to a specified region of an image.; ; An ImageData and RegionRequest are supplied, rather ; than a BufferedImage directly, because there may be a need to adapt ; to the image resolution and/or incorporate padding to reduce boundary effects.; ; There is no guarantee that the returned BufferedImage will be the same size ; as the input region (after downsampling), but rather that it should contain the full ; classification information for the specified region.; ; Practically, this means that there may be fewer pixels in the output because the classification ; inherently involves downsampling. Parameters:; server - ; request - ; Returns:; a BufferedImage representing the pixel classifications as separate bands.; Throws:; IOException - if unable to read pixels from server. getMetadata; PixelClassifierMetadata getMetadata(); Get metadata that describes how the classifier should be called, and the kind of output it provides. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifier.html:2248,down,downsampling,2248,javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/classifiers/pixel/PixelClassifier.html,2,['down'],['downsampling']
Availability,"hodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; String; toString();  ; static ObjectMeasurements.ShapeFeatures; valueOf(String name). Returns the enum constant of this class with the specified name. static ObjectMeasurements.ShapeFeatures[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. AREA; public static final ObjectMeasurements.ShapeFeatures AREA; Area of the shape. LENGTH; public static final ObjectMeasurements.ShapeFeatures LENGTH; Length of the shape; for area geometries, this provides the perimeter. CIRCULARITY; public static final ObjectMeasurements.ShapeFeatures CIRCULARITY; Circularity. This is available only for single-part polygonal shapes; holes are ignored. SOLIDITY; public static final ObjectMeasurements.ShapeFeatures SOLIDITY; Ratio of the area to the convex area. MAX_DIAMETER; public static final ObjectMeasurements.ShapeFeatures MAX_DIAMETER; Maximum diameter; this is equivalent to the diameter of the minimum bounding circle. MIN_DIAMETER; public static final ObjectMeasurements.ShapeFeatures MIN_DIAMETER; Minimum diameter. NUCLEUS_CELL_RATIO; public static final ObjectMeasurements.ShapeFeatures NUCLEUS_CELL_RATIO; Nucleus/cell area ratio (only relevant to cell objects). Method Details. values; public static ObjectMeasurements.ShapeFeatures[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static ObjectMeasurements.ShapeFeatures valueOf(String name); Returns the enum constant of this class with the specified name.; The string must m",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.ShapeFeatures.html:2468,avail,available,2468,javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.ShapeFeatures.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/features/ObjectMeasurements.ShapeFeatures.html,1,['avail'],['available']
Availability,"hould be used if ImageDisplay.useGrayscaleLutProperty() is turned on. SYMBOL_MICROMETER - Static variable in class qupath.lib.common.GeneralTools. String to represent um (but with the proper 'mu' symbol). SYMBOL_MU - Static variable in class qupath.lib.common.GeneralTools. Small Greek mu (useful for micrometers). SYMBOL_SIGMA - Static variable in class qupath.lib.common.GeneralTools. Small Greek sigma (useful for Gaussian filter sizes, standard deviations). symDifference(ROI, ROI) - Static method in class qupath.lib.roi.RoiTools. Compute the symmetric difference between two ROIs (XOR). symmetric(int) - Static method in class qupath.lib.regions.Padding. Get a padding object with 'pad' pixels on all sides. syncChanges() - Method in interface qupath.lib.projects.Project. Save the project. synchronizeViewersProperty() - Method in class qupath.lib.gui.viewer.ViewerManager;  ; syncProject(Project<?>) - Static method in class qupath.lib.gui.panes.ProjectBrowser. Try to save a project, showing an error message if this fails. systemMenubar - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; SystemMenuBar - Class in qupath.lib.gui.prefs. Helper class for managing MenuBar.useSystemMenuBarProperty() values based upon a property value. SystemMenuBar() - Constructor for class qupath.lib.gui.prefs.SystemMenuBar;  ; SystemMenuBar.SystemMenuBarOption - Enum Class in qupath.lib.gui.prefs. Enum specifying when and where the system menubar should be used. systemMenubarProperty() - Static method in class qupath.lib.gui.prefs.SystemMenuBar. Property used to specify whether the system menubar should be used for the main QuPath stage. T. TABLE - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; tableDelimiterProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Delimiter to use when exporting tables. target(int) - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Specify the target, e.g. taskComplete(boolean) - Method in i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1016597,error,error,1016597,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['error'],['error']
Availability,"hrows IOException; Read a single image tile. Parameters:; tileRequest - ; Returns:; Throws:; IOException. getTile; protected BufferedImage getTile(TileRequest tileRequest); throws IOException; Get a tile for the request - ideally from the cache, but otherwise read it and ; then add it to the cache. Parameters:; tileRequest - ; Returns:; Throws:; IOException. createDefaultRGBImage; protected BufferedImage createDefaultRGBImage(int width,; int height); Create the default (blank) RGB image for this server.; ; By default this will have TYPE_INT_RGB but a subclass may change this if necessary ; (e.g. to incorporate an alpha channel). Parameters:; width - ; height - ; Returns:. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; Throws:; IOException; See Also:. ImageServer.readRegion(double, int, int, int, int,",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractTileableImageServer.html:5225,down,downsample,5225,javadoc/docs/qupath/lib/images/servers/AbstractTileableImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractTileableImageServer.html,1,['down'],['downsample']
Availability,"hrows:; IOException. convertToFloatProcessor; public static ImageProcessor convertToFloatProcessor(SimpleImage image); Convert a SimpleImage to an ImageProcessor. Parameters:; image - ; Returns:. setTitleFromObject; public static void setTitleFromObject(PathImage<ImagePlus> pathImage,; PathObject pathObject); Set the name of an image based on a PathObject.; ; Useful whenever the ROI for an object is being extracted for display separately. Parameters:; pathImage - ; pathObject - . calibrateImagePlus; public static void calibrateImagePlus(ImagePlus imp,; RegionRequest request,; ImageServer<BufferedImage> server); Set an ImagePlus's Calibration and FileInfo properties based on a RegionRequest and PathImageServer.; It is assumed at the image contained in the ImagePlus has been correctly read from the server. Parameters:; imp - ; request - ; server - . estimateDownsampleFactor; public static double estimateDownsampleFactor(ImagePlus imp,; ImageServer<?> server); Estimate the downsample factor for an image region extracted from an image server, based upon ; the ratio of pixel sizes if possible or ratio of dimensions if necessary.; ; Note that the ratio of dimensions is only suitable if the full image has been extracted!. Parameters:; imp - ; server - ; Returns:. convertToPathObject; @Deprecated; public static PathObject convertToPathObject(ImagePlus imp,; ImageServer<?> server,; Roi roi,; double downsampleFactor,; Function<ROI,PathObject> creator,; ImagePlane plane); Deprecated.; use instead convertToPathObject(Roi, double, double, double, Function, ImagePlane). Create a PathObject for a specific ImageJ Roi.; This method has been deprecated, since its signature was misleading (the server was not used). Parameters:; imp - ; server - ; roi - ; downsampleFactor - ; creator - ; plane - ; Returns:. convertToPathObject; public static PathObject convertToPathObject(Roi roi,; double xOrigin,; double yOrigin,; double downsampleFactor,; Function<ROI,PathObject> creator,; ImagePlane",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:10940,down,downsample,10940,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,1,['down'],['downsample']
Availability,"ht be too computationally expensive.; By consciously having to make changes via a RoiEditor, it is hoped that programmers will remember inform the PathObjectHierarchy; whenever an object has been changed (note that this does not happen automatically - the RoiEditor knows nothing of PathObjects; and hierarchies... only ROIs of various flavors).; ; Where any other ROI processing is required, the 'correct' approach is to create a new PathObject as required. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static RoiEditor; createInstance(). Create a new RoiEditor. void; ensureHandlesUpdated(). In the event that the current ROI has been modified elsewhere (which generally it shouldn't be); request the handles to be recomputed to avoid inconsistency. boolean; finishTranslation(). Notify the editor that translation should end. List<Point2>; getHandles(). Get all the handles for the current ROI being edited, or an empty list if no handles are available. ROI; getROI(). Retrieve the ROI currently being edited (may be null). boolean; grabHandle(double x,; double y,; double maxDist,; boolean shiftDown). Try to grab a ROI handle. boolean; hasActiveHandle(). Returns true if a handle is currently active, for example being reposition. boolean; hasROI(). Returns true if this editor currently has a ROI. boolean; isTranslating(). Query if a ROI is currently being translated through this editor. ROI; requestNewHandle(double x,; double y). Request an updated ROI with a new handle inserted - useful e.g. void; resetActiveHandle(). Ensure that no handle is active. ROI; setActiveHandlePosition(double x,; double y,; double minDisplacement,; boolean shiftDown). If a handle has been grabbed, update its displacement. void; setROI(ROI roi). Set the active ROI, stopping any ROI translation currently in progress. void; setROI(ROI roi,; boolean stopTranslating). Set the active ROI, optionally stopping any ROI",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiEditor.html:2034,avail,available,2034,javadoc/docs/qupath/lib/roi/RoiEditor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiEditor.html,1,['avail'],['available']
Availability,"iTools. Open the directory containing a file for browsing. browseURI(URI) - Static method in class qupath.lib.gui.tools.GuiTools. Try to open a URI in a web browser. BRUSH - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Brush drawing tool. BRUSH_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; BRUSH_TOOL - Variable in class qupath.lib.gui.ToolManager;  ; brushCreateNewObjectsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Create new objects by default when drawing with the Brush tool. brushDiameter - Variable in class qupath.lib.gui.panes.PreferencePane.DrawingPreferences;  ; brushDiameterProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Default brush tool diameter, in pixels. brushScaleByMag - Variable in class qupath.lib.gui.panes.PreferencePane.DrawingPreferences;  ; brushScaleByMagProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Optionally scale the default brush tool diameter by the viewer magnification (downsample value). BrushToolEventHandler - Class in qupath.lib.gui.viewer.tools.handlers. Tool for drawing (and subtract from) freehand regions, optionally adapting brush size to magnification. BrushToolEventHandler() - Constructor for class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler;  ; buffer(ROI, double) - Static method in class qupath.lib.roi.RoiTools. Buffer the specified ROI, dilating (or eroding) by the specified distance. BufferedImageOverlay - Class in qupath.lib.gui.viewer.overlays. An overlay used to display one or more BufferedImage objects on top of a primary image shown in a viewer. BufferedImageOverlay(OverlayOptions) - Constructor for class qupath.lib.gui.viewer.overlays.BufferedImageOverlay. Create an empty overlay without any images to display. BufferedImageOverlay(OverlayOptions, Map<? extends ImageRegion, BufferedImage>) - Constructor for class qupath.lib.gui.viewer.overlays.BufferedImageOverlay. Create an overlay to dis",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:65403,down,downsample,65403,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['down'],['downsample']
Availability,"iable in class qupath.lib.common.ColorTools. Mask for use when extracting the blue component from a packed (A)RGB int value. MASK_GREEN - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the green component from a packed (A)RGB int value. MASK_RED - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the red component from a packed (A)RGB int value. maskFunction(MaskSupplier<S, T>) - Method in class qupath.lib.experimental.pixels.Parameters.Builder. Function used to lazily create a mask corresponding to the image for a specified ROI. maskImageNames - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; maskImageNamesProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request that image names are hidden within the user interface. maskObject(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. maskObjectAndSplit(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. maskSupplier(MaskSupplier<S, T>) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set the mask supplier. MaskSupplier<S,T> - Interface in qupath.lib.experimental.pixels. A functional interface for supplying a mask corresponding to an image. MATCH_VIEWER_RESOLUTIONS - Variable in class qupath.lib.gui.actions.ViewerActions;  ; matchByID(Collection<? extends PathObject>, Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Match objects according to their IDs. matchClassName(String...) - Method in class qupath.imagej.images.servers.ImageJServerBuilder;  ; matchClassNa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:673051,mask,mask,673051,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,2,['mask'],['mask']
Availability,"ialog to monitor memory usage. Parameters:; qupath - ; Returns:. showMiniViewer; public static void showMiniViewer(QuPathViewer viewer); Show a mini viewer window associated with a specific viewer. Parameters:; viewer - the viewer with which to associate this window. showChannelViewer; public static void showChannelViewer(QuPathViewer viewer); Show a channel viewer window associated with a specific viewer. Parameters:; viewer - the viewer with which to associate this window. refreshObjectIDs; public static void refreshObjectIDs(ImageData<?> imageData,; boolean duplicatesOnly); Refresh object IDs to ensure uniqueness. Parameters:; imageData - ; duplicatesOnly - only refresh IDs that are duplicates of other IDs. runObjectImport; public static void runObjectImport(QuPathGUI qupath,; ImageData<BufferedImage> imageData); Show a dialog to import object(s) from a file. Parameters:; qupath - ; imageData - . copySelectedObjectsToClipboard; public static void copySelectedObjectsToClipboard(ImageData<BufferedImage> imageData); Attempt to copy selected objects to the system clipboard, if available. Parameters:; imageData - . copyAnnotationsToClipboard; public static void copyAnnotationsToClipboard(ImageData<BufferedImage> imageData); Attempt to annotation objects to the system clipboard, if available. Parameters:; imageData - . pasteFromClipboard; public static void pasteFromClipboard(QuPathGUI qupath,; boolean addToCurrentPlane); Attempt to paste objects from the system clipboard to the current image, if available; ; otherwise, check for text on the clipboard and paste it into a new script editor tab. Parameters:; qupath - ; addToCurrentPlane - if true, add the objects to the plane currently visible in the viewer ; (and don't show any text if objects can't be found). runGeoJsonObjectExport; public static void runGeoJsonObjectExport(QuPathGUI qupath,; ImageData<BufferedImage> imageData); Show a dialog to export object(s) to a GeoJSON file. Parameters:; qupath - ; imageData - . ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:27403,avail,available,27403,javadoc/docs/qupath/lib/gui/commands/Commands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html,3,['avail'],['available']
Availability,"ic method in class qupath.lib.gui.prefs.PathPrefs. Use a specified color for highlighting selected objects in the viewer. useSystemMenubarProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Deprecated. useTileBrushProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request that the brush tool automatically uses any available tiles, rather than creating 'circles' as normal. useUniqueLabels() - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Deprecated.; in favor of LabeledImageServer.Builder.useInstanceLabels(). useZoomGestures - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; useZoomGesturesProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Support zoom gestures for touchscreens and trackpads. V. validateMarkerMask(ImageProcessor, ImageProcessor) - Static method in class qupath.imagej.processing.MorphologicalReconstruction. Check that marker and mask images have the same size, and ensure that marker pixels are <= mask pixels, ; making this if necessary. value() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionAccelerator. String form of an accelerator, compatible with KeyCombination.valueOf(String). value() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionConfig. Key to external properties file. value() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionIcon. Icon to associate with the action's graphic property. value() - Element in annotation interface qupath.lib.gui.actions.annotations.ActionMenu. Menu path, in the form ""Menu>Submenu>Command name"". VALUE_NONE - Static variable in class qupath.process.gui.commands.SplitProjectTrainingCommand. Metadata value for unassigned images. VALUE_TEST - Static variable in class qupath.process.gui.commands.SplitProjectTrainingCommand. Metadata value for test images. VALUE_TRAINING - Static variable in class qupath.process.gui.commands.SplitProjectTraining",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1076253,mask,mask,1076253,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,2,['mask'],['mask']
Availability,"ic org.controlsfx.control.action.Action; createSelectableCommandAction(ObservableBooleanValue value);  ; static <T> org.controlsfx.control.action.Action; createSelectableCommandAction(SelectableItem<T> command);  ; static <T> org.controlsfx.control.action.Action; createSelectableCommandAction(SelectableItem<T> command,; String name). Create an action from a selectable icon. static <T> org.controlsfx.control.action.Action; createSelectableCommandAction(SelectableItem<T> command,; String name,; Node icon,; KeyCombination accelerator);  ; static <T> org.controlsfx.control.action.Action; createSelectableCommandAction(SelectableItem<T> command,; ObservableValue<String> name,; ObservableValue<Node> icon,; KeyCombination accelerator);  ; static org.controlsfx.control.action.Action; createSeparator(). Create an action indicating that a separator should be added (e.g. static ToggleButton; createToggleButton(org.controlsfx.control.action.Action action). Create a toggle button from an action, showing both the text and graphic if available. static ToggleButton; createToggleButtonWithGraphicOnly(org.controlsfx.control.action.Action action). Create a toggle button from an action, showing only the graphic and not any text. static org.controlsfx.control.action.Action; getActionProperty(MenuItem item). Retrieve an Action stored within the properties of a menu item, or null if no action is found. static org.controlsfx.control.action.Action; getActionProperty(Node node). Retrieve an Action stored within the properties of a node, or null if no action is found. static List<org.controlsfx.control.action.Action>; getAnnotatedActions(Object obj). Actions can be parsed from the accessible (usually public) fields of any object, as well as methods annotated with ActionMethod. static void; installInfoMessage(org.controlsfx.control.action.Action action,; ObjectExpression<InfoMessage> message). Install an optional info message to the action. static boolean; isSelectable(org.controlsfx.control.act",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html:4395,avail,available,4395,javadoc/docs/qupath/lib/gui/actions/ActionTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/ActionTools.html,1,['avail'],['available']
Availability,"ic static PathObject convertToPathObject(ImagePlus imp,; ImageServer<?> server,; Roi roi,; double downsampleFactor,; Function<ROI,PathObject> creator,; ImagePlane plane); Deprecated.; use instead convertToPathObject(Roi, double, double, double, Function, ImagePlane). Create a PathObject for a specific ImageJ Roi.; This method has been deprecated, since its signature was misleading (the server was not used). Parameters:; imp - ; server - ; roi - ; downsampleFactor - ; creator - ; plane - ; Returns:. convertToPathObject; public static PathObject convertToPathObject(Roi roi,; double xOrigin,; double yOrigin,; double downsampleFactor,; Function<ROI,PathObject> creator,; ImagePlane plane); Create a PathObject for a specific ImageJ Roi. Parameters:; roi - the ImageJ ROI; xOrigin - the x-origin to translate the Roi; should be Calibration.xOrigin if available, or 0 otherwise; yOrigin - the y-origin to translate the Roi; should be Calibration.yOrigin if available, or 0 otherwise; downsampleFactor - the downsample factor used for rescaling (or 1.0 for no rescaling); creator - a function; plane - the specific plane to use for the QuPath ROI; if null, the ImageJ Roi position properties will be used instead, where possible; Returns:; a PathObject or null if no object could be created (e.g. the ImageJ roi is null or incompatible); Since:; v0.4.0; See Also:. convertToPathObject(Roi, double, Function, ImagePlus). convertToPathObject; public static PathObject convertToPathObject(Roi roi,; double downsampleFactor,; Function<ROI,PathObject> creator,; ImagePlus imp); Create a PathObject for a specific ImageJ Roi, using an ImagePlus to help set properties. Parameters:; roi - the ImageJ ROI; downsampleFactor - the downsample factor used for rescaling (or 1.0 for no rescaling); creator - a function; imp - the ImagePlus associated with this Roi; it is used to determine the xOrigin, yOrigin and image plane; Returns:; a PathObject or null if no object could be created (e.g. the ImageJ roi is",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:12229,avail,available,12229,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,3,"['avail', 'down']","['available', 'downsample', 'downsampleFactor']"
Availability,"icating that rebuilding the server is not supported. Specified by:; getBuilder in interface ImageServer<T>; Returns:. getDownsampleForResolution; public double getDownsampleForResolution(int level); Description copied from interface: ImageServer; Get the downsample factor for a specified resolution level, where level 0 is the full resolution image ; and nResolutions() - 1 is the lowest resolution available. Specified by:; getDownsampleForResolution in interface ImageServer<T>; Parameters:; level - Resolution level, should be 0 <= level < nResolutions().; Returns:. close; public void close(); throws Exception. Specified by:; close in interface AutoCloseable; Throws:; Exception. nResolutions; public int nResolutions(); Description copied from interface: ImageServer; Number of resolutions for the image.; ; This is equivalent to getPreferredDownsamples().length. Specified by:; nResolutions in interface ImageServer<T>; Returns:. getPreferredDownsamples; public double[] getPreferredDownsamples(); Request the preferred downsamples from the image metadata.; ; Note that this makes a defensive copy of the array, so it is generally preferable to use ; #getDownsampleForResolution(int) where possible. Specified by:; getPreferredDownsamples in interface ImageServer<T>; Returns:; See Also:. getDownsampleForResolution(int). isRGB; public boolean isRGB(); Description copied from interface: ImageServer; True if the image has 8-bit red, green & blue channels (and nothing else), false otherwise. Specified by:; isRGB in interface ImageServer<T>; Returns:. getPixelType; public PixelType getPixelType(); Description copied from interface: ImageServer; The bit-depth and type of the image. This refers to a single channel, e.g. an ; 8-bit RGB image will have a type of PixelType.UINT8. Specified by:; getPixelType in interface ImageServer<T>; Returns:. finalize; protected void finalize(); throws Throwable; Attempt to close the server. While not at all a good idea to rely on this, it may help cle",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html:6367,down,downsamples,6367,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,1,['down'],['downsamples']
Availability,"ice index for the region. getZ() - Method in class qupath.lib.roi.AreaROI;  ; getZ() - Method in class qupath.lib.roi.EllipseROI;  ; getZ() - Method in class qupath.lib.roi.GeometryROI;  ; getZ() - Method in class qupath.lib.roi.LineROI;  ; getZ() - Method in class qupath.lib.roi.PointsROI;  ; getZ() - Method in class qupath.lib.roi.PolygonROI;  ; getZ() - Method in class qupath.lib.roi.PolylineROI;  ; getZ() - Method in class qupath.lib.roi.RectangleROI;  ; getZ() - Method in interface qupath.lib.roi.interfaces.ROI. Get z-stack slice index. getZoomToFitDownsampleFactor() - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; getZPosition() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the currently-visible z-slice. getZSpacing() - Method in class qupath.lib.images.servers.PixelCalibration. Get the numeric value representing the z-spacing, in the stored units. getZSpacingMicrons() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the z-spacing in microns, if available - or Double.NaN otherwise. getZSpacingMicrons() - Method in class qupath.lib.images.servers.PixelCalibration. Get the z-spacing in microns, or Double.NaN if this is unknown. getZSpacingUnit() - Method in class qupath.lib.images.servers.PixelCalibration. Get a String representation of the preferred z-spacing unit. GITHUB - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; GitHubProject - Interface in qupath.lib.gui.extensions. Helper class to represent a project hosted on GitHub. GitHubProject.GitHubRepo - Class in qupath.lib.gui.extensions. Helper class to represent a GitHub repository. grabHandle(double, double, double, boolean) - Method in class qupath.lib.roi.RoiEditor. Try to grab a ROI handle. GRADIENT_MAGNITUDE - Enum constant in enum class qupath.opencv.tools.MultiscaleFeatures.MultiscaleFeature. Gradient magnitude. gradientMagnitude(boolean) - Method in class qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder. Calculate the ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:556746,avail,available,556746,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"id; showErrorNotification(String title,; String message). Deprecated.; Show an error notification. static void; showErrorNotification(String title,; Throwable e). Deprecated.; Show an error notification, displaying the localized message of a Throwable. static void; showInfoNotification(String title,; String message). Deprecated.; Show an info notification. static Double; showInputDialog(String title,; String message,; Double initialInput). Deprecated.; Show an input dialog requesting a numeric value. static String; showInputDialog(String title,; String message,; String initialInput). Deprecated.; Show an input dialog requesting a String input. static boolean; showMessageDialog(String title,; String message). Deprecated.; Show a standard message dialog. static boolean; showMessageDialog(String title,; Node node). Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. static void; showNoImageError(String title). Deprecated.; Show an error message that no image is available. static void; showNoProjectError(String title). Deprecated.; Show an error message that no project is available. static boolean; showParameterDialog(String title,; ParameterList params). Deprecated.; Show a (modal) dialog for a specified ParameterList. static void; showPlainMessage(String title,; String message). Deprecated.; Show a plain message. static void; showPlainNotification(String title,; String message). Deprecated.; Show a plain notification. static void; showTextWindow(Window owner,; String title,; String contents,; Modality modality,; boolean isEditable). Deprecated.; Show a window containing plain text, with the specified properties. static void; showWarningNotification(String title,; String message). Deprecated.; Show a warning notification. static Dialogs.DialogButton; showYesNoCancelDialog(String title,; String text). Deprecated.; Show a Yes/No/Cancel dialog. static boolean; showYesNoDialog(String title,; String text). Deprecated.; Show a Yes/No",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:4433,error,error,4433,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,2,"['avail', 'error']","['available', 'error']"
Availability,"idDistances(boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list for the current ImageData. detectionCentroidDistances(ImageData<?>, boolean) - Static method in class qupath.lib.analysis.DistanceTools. Compute the distance for all detection object centroids to the closest annotation with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionCentroidDistances(ImageData<?>, boolean) - Static method in class qupath.lib.scripting.QP. Compute the distance for all detection object centroids to the closest detection with each valid, not-ignored classification and add ; the result to the detection measurement list. detectionCentroidDistances2D(ImageData<?>) - Static method in class qupath.lib.gui.commands.Commands. Compute the distance between the centroids of all detections, for all available classifications. detectionDisplayModeProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions. Property representing the current OverlayOptions.DetectionDisplayMode. DetectionPluginTools - Class in qupath.lib.plugins. Helper methods to convert ObjectDetectors into runnable tasks, which take care of resolving ; overlaps when using ParallelTileObjects after the detection is complete and firing notification ; events in a PathObjectHierarchy. DetectionPluginTools() - Constructor for class qupath.lib.plugins.DetectionPluginTools;  ; detections() - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the filter to accept all detection objects only. DETECTIONS - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; DETECTIONS - Enum constant in enum class qupath.lib.objects.PathObjectFilter. Accept detection objects (no subtypes, e.g. DETECTIONS - Variable in class qupath.lib.gui.actions",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:253980,avail,available,253980,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"idea is that the Processor is the only component that needs to be written for a specific task...; and it is usually the fun bit to work on.; ; The other components are often very tedious to write and hard to get working correctly; also, there is much; overlap in the functionality required for different tasks.; For these reasons, we provide several default implementations here, written to support different image; representations.; . Since:; v0.5.0. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; PixelProcessor.Builder<S,T,U>. Builder class for a PixelProcessor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static <S,; T,; U> PixelProcessor.Builder<S,T,U>; builder(). Create a new builder to construct a PixelProcessor. void; processObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects). Process objects using the default TaskRunner. void; processObjects(TaskRunner runner,; ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects). Process objects using the specified TaskRunner. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. processObjects; public void processObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects); Process objects using the default TaskRunner. Parameters:; imageData - ; pathObjects - . processObjects; public void processObjects(TaskRunner runner,; ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects); Process objects using the specified TaskRunner. Parameters:; runner - ; imageData - ; pathObjects - . builder; public static <S,; T,; U>; PixelProcessor.Builder<S,T,U> builder(); Create a new builder to construct a PixelProcessor. Type Parameters:; S - the image type; T - the mask type; U - the output type; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.html:3096,mask,mask,3096,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.html,1,['mask'],['mask']
Availability,"id calibrateObject(PathObject pathObject,; Roi roi); Set the properties of a PathObject based upon an ImageJ Roi.; This attempts to extract as much useful information as is relevant, including name, color and group. Parameters:; pathObject - ; roi - . convertToAnnotation; @Deprecated; public static PathObject convertToAnnotation(ImagePlus imp,; ImageServer<?> server,; Roi roi,; double downsampleFactor,; ImagePlane plane); Deprecated.; use instead convertToAnnotation(Roi, double, double, double, ImagePlane). Create an annotation object for a specific ImageJ Roi. Parameters:; imp - ; server - ; roi - ; downsampleFactor - ; plane - ; Returns:. convertToDetection; @Deprecated; public static PathObject convertToDetection(ImagePlus imp,; ImageServer<?> server,; Roi roi,; double downsampleFactor,; ImagePlane plane); Deprecated.; use instead convertToDetection(Roi, double, double, double, ImagePlane). Create an detection object for a specific ImageJ Roi. Parameters:; imp - ; server - ; roi - ; downsampleFactor - ; plane - ; Returns:. convertLabelsToCells; public static SortedMap<Number,PathObject> convertLabelsToCells(ImageProcessor ipNuclei,; ImageProcessor ipCells,; Calibration cal,; double downsample,; ImagePlane plane); Convert integer labeled images into cell objects. Parameters:; ipNuclei - labels corresponding to cell nuclei; non-zero values here must be identical to the values in ipCells; ipCells - labels corresponding to full cell areas; cal - a Calibration object used to aid conversion between ImageJ and QuPath ROIs; downsample - the downsample value for the ImageProcessors, used to aid conversion between ImageJ and QuPath ROIs; plane - the ImagePlane defining where ROIs should be added; Returns:; a SortedMap containing integer labels from the original labeled images mapped to the corresponding cells that have been created. convertLabelsToCells; public static SortedMap<Number,PathObject> convertLabelsToCells(ImageProcessor ipNuclei,; ImageProcessor ipCells,; double",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:18165,down,downsampleFactor,18165,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,1,['down'],['downsampleFactor']
Availability,"ield; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.dialogs; Class ProjectDialogs. java.lang.Object; qupath.lib.gui.dialogs.ProjectDialogs. public class ProjectDialogs; extends Object; Dialogs specifically related to managing projects. Constructor Summary; Constructors. Constructor; Description; ProjectDialogs();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static org.controlsfx.control.ListSelectionView<ProjectImageEntry<BufferedImage>>; createImageChoicePane(QuPathGUI qupath,; List<ProjectImageEntry<BufferedImage>> availableImages,; List<ProjectImageEntry<BufferedImage>> selectedImages,; String openImageWarning). Populates a given ListSelectionView with all the project entries. static Collection<ProjectImageEntry<BufferedImage>>; getCurrentImages(QuPathGUI qupath). Get the ProjectImageEntry for each of the current images open in QuPath, if available. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ProjectDialogs; public ProjectDialogs(). Method Details. createImageChoicePane; public static org.controlsfx.control.ListSelectionView<ProjectImageEntry<BufferedImage>> createImageChoicePane(QuPathGUI qupath,; List<ProjectImageEntry<BufferedImage>> availableImages,; List<ProjectImageEntry<BufferedImage>> selectedImages,; String openImageWarning); Populates a given ListSelectionView with all the project entries. Parameters:; qupath - variable used to understand which image(s) is/are opened in viewer(s).; availableImages - all available images; selectedImages - set some images to be selected initially (optional; can be null); openImageWarning - warning shown if image(s) to process is/are currently opened in viewer(s).; Returns:; a ListSelectionView suitable for selecting entries. getCurr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/ProjectDialogs.html:1211,avail,available,1211,javadoc/docs/qupath/lib/gui/dialogs/ProjectDialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/ProjectDialogs.html,1,['avail'],['available']
Availability,"ield | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class PixelProcessor.Builder<S,T,U>. java.lang.Object; qupath.lib.experimental.pixels.PixelProcessor.Builder<S,T,U>. Type Parameters:; S - the image type; T - the mask type; U - the output type. Enclosing class:; PixelProcessor<S,T,U>. public static class PixelProcessor.Builder<S,T,U>; extends Object; Builder class for a PixelProcessor. Constructor Summary; Constructors. Constructor; Description; Builder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; PixelProcessor<S,T,U>; build(). Build a PixelProcessor from the current state of the builder. PixelProcessor.Builder<S,T,U>; downsample(double downsample). Set the downsample factor to use with requesting image regions. PixelProcessor.Builder<S,T,U>; imageSupplier(ImageSupplier<S> imageSupplier). Set the image supplier. PixelProcessor.Builder<S,T,U>; maskSupplier(MaskSupplier<S,T> maskSupplier). Set the mask supplier. PixelProcessor.Builder<S,T,U>; merger(ObjectMerger merger). Set a merger to use. PixelProcessor.Builder<S,T,U>; mergeSharedBoundaries(double threshold). Convenience method to set a merger that merges objects based on their shared boundary. PixelProcessor.Builder<S,T,U>; outputHandler(OutputHandler<S,T,U> outputHandler). Set the output handler. PixelProcessor.Builder<S,T,U>; padding(int size). Set the padding to use when extracting regions, using a symmetric padding. PixelProcessor.Builder<S,T,U>; padding(Padding padding). Set the padding to use when extracting regions. PixelProcessor.Builder<S,T,U>; pixelSize(double pixelSize). Set the requested pixel size to use with requesting image regions. PixelProcessor.Builder<S,T,U>; processor(Processor<S,T,U> processor). Set the processor. PixelProcessor.Builder<S,T,U>; tile(int tileWidth,; int tileHeight). Set a default tiler to use, with a specified tile size. PixelProcessor.Builder<S,T,U>; tiler(Tiler tiler). Set a tiler to use. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html:1299,mask,mask,1299,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,1,['mask'],['mask']
Availability,"iewer; gamma, imageData, rotation, tPosition, zPosition. Field Summary. Fields inherited from class qupath.lib.gui.viewer.QuPathViewer; imageUpdated, locationUpdated. Constructor Summary; Constructors. Constructor; Description; QuPathViewerPlus(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions,; ViewerPlusDisplayOptions viewerDisplayOptions). Create a new viewer. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; closeViewer(). Request that this viewer is closed. void; initializeForServer(ImageServer<BufferedImage> server);  ; boolean; isLocationVisible(). Returns true if the cursor location is visible, false otherwise. boolean; isOverviewVisible(). Returns true if the image overview is visible, false otherwise. boolean; isScalebarVisible(). Returns true if the scalebar is visible, false otherwise. void; repaintEntireImage(). Request that the entire image is repainted, including the thumbnail. void; setSlidersPosition(boolean down). Sets the Z and T sliders' position to allow space for command bar. protected void; updateAffineTransform();  . Methods inherited from class qupath.lib.gui.viewer.QuPathViewer; addViewerListener, centerImage, centerROI, componentContains, componentPointToImagePoint, componentPointToImagePoint, fireImageDataChanged, fireVisibleRegionChangedEvent, forceOverlayUpdate, gammaProperty, getActiveTool, getAllSelectedObjects, getAllThumbnails, getBorderColor, getCenterPixelX, getCenterPixelY, getCurrentROI, getCursor, getCustomOverlayLayers, getCustomPixelLayerOverlay, getDefaultZoomFactor, getDisplayedClipShape, getDisplayedRegionShape, getDownsampleFactor, getFullLocationString, getFullMagnification, getGamma, getGammaOp, getHierarchy, getImageData, getImageDisplay, getImageObjectClassificationString, getImagePlane, getImageRegionStore, getMagnification, getMaxDownsample, getMaxROIHandleSize, getMinDownsample, getMousePosition, getObjectClassificationString, getOverlayLaye",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html:1873,down,down,1873,javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html,1,['down'],['down']
Availability,"if available; Returns:; Throws:; IllegalStateException - if an instance of QuPath is already running (i.e. getInstance() is not null); See Also:. createInstance(Stage); launchInstanceFromSwing(). createHiddenInstance; public static QuPathGUI createHiddenInstance(); throws IllegalStateException; Create a new QuPath instance that is not visible (i.e. its stage is not shown). Returns:; Throws:; IllegalStateException. launchInstanceFromSwing; public static void launchInstanceFromSwing(); Static method to launch QuPath from within a Swing/AWT application.; ; This aims to handle several things:; ; initializing JavaFX in the appropriate thread; flagging that shutting down QuPath should not terminate the JVM; showing the QuPath UI window. This can potentially be used from other environments (e.g. MATLAB, Fiji, Python).; Afterwards, calls to getInstance() will return the QuPath instance as soon as it is available.; However, note that depending upon the thread from which this method is called, the QuPath instance may not ; be available until some time after the method returns.; ; If there is already an instance of QuPath running, this requests that it is made visible - but otherwise does nothing. requestAutomaticUpdateCheck; public void requestAutomaticUpdateCheck(); Request an automated update check in a background thread.; This will use the user preferences to determine whether or how to check for updates ; (i.e. if the preferences have disabled an update check, then it will not be run). See Also:. requestFullUpdateCheck(). requestFullUpdateCheck; public void requestFullUpdateCheck(); Request a manual update check in a background thread.; This should perform the check if possible, regardless of the user preferences. See Also:. requestAutomaticUpdateCheck(). showAnalysisPaneProperty; public BooleanProperty showAnalysisPaneProperty(). Returns:; the showAnalysisPane property. uiBlocked; public ObservableValue<Boolean> uiBlocked(); Observable value indicating that the user inter",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:14574,avail,available,14574,javadoc/docs/qupath/lib/gui/QuPathGUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html,1,['avail'],['available']
Availability,"if no project path is available; Since:; v0.4.0; See Also:. buildPathInProject(String...); makeFileInProject(String...). makeFileInProject; public static File makeFileInProject(String... more); throws IllegalArgumentException; Build a file path relative to the current project, and create a File object.; An attempt will be made to create any required directories needed to create the file. ; ; The purpose is to reduce the lines of code needed to build a usable file in a QuPath ; script. ; A Groovy script showing this method in action:; ; File file = makeFileInProject(""export"", ""file.txt""); file.text = ""Some text here""; . Note that, if the file does not already exist, it will not be created by this method - ; only the directories leading to it.; Additionally, if the file refers to an existing directory then the directory will be ; returned - and will not be writable as a file. Parameters:; more - additional path components to append; Returns:; the file object, which may or may not refer to a file or directory that exists; Throws:; IllegalArgumentException - if no project path is available; Since:; v0.4.0; See Also:. makePathInProject(String...); buildPathInProject(String...). mkdirs; public static boolean mkdirs(String path); Ensure directories exist for the specified path, calling file.mkdirs() if not. Parameters:; path - the directory path; Returns:; true if a directory was created, false otherwise. fileExists; public static boolean fileExists(String path); Query if a file exists. Parameters:; path - full file path; Returns:; true if the file exists, false otherwise. isDirectory; public static boolean isDirectory(String path); Query if a file path corresponds to a directory. Parameters:; path - full file path; Returns:; true if the file exists and is a directory, false otherwise. getProjectEntry; public static ProjectImageEntry<BufferedImage> getProjectEntry(); Get the project entry for the currently-open image within the current project, ; or null if no project/image",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:54664,avail,available,54664,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['avail'],['available']
Availability,"ification() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the magnification value, or Double.NaN if this is unavailable. getMagnificationString(QuPathViewer) - Static method in class qupath.lib.gui.tools.GuiTools. Get an appropriate String to represent the magnification of the image currently in the viewer. getMainObjectFilter() - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapParameters. Get the primary object filter. getMajor() - Method in class qupath.lib.common.Version. Get the major version number (X.0.0). getManager() - Method in class qupath.lib.images.servers.SparseImageServer. Get the manager, which defines from whence the regions originate. getMask() - Method in class qupath.lib.experimental.pixels.Parameters. Get the mask associated with the main ROI or the parent object, or null if no mask is available. getMask(Parameters<S, T>, ROI) - Method in interface qupath.lib.experimental.pixels.MaskSupplier. Get a mask corresponding to the image, depicting a specified ROI. getMask(ROI) - Method in class qupath.lib.experimental.pixels.Parameters. Get the mask associated with any ROI, or null if no mask is available. getMaskedPixels(Mat, Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Extract all the masked pixels within an image. getMaskImageNames() - Method in interface qupath.lib.projects.Project. Query whether 'true' or masked image names are being returned. getMatrixInverse() - Method in class qupath.lib.color.ColorDeconvolutionStains. Get matrix inverse, as useful for color deconvolution. getMax() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the maximum non-NaN value added. getMaxAllowed() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getMaxAllowed() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the max allowed display value. getMaxBlue() - Method in class qupath.lib.color.ColorDeconvolutionStains. Get the maximum value for the blue channel (d",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:432458,mask,mask,432458,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['mask'],['mask']
Availability,"ified maximum value. getRegion() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; getRegion() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Get the region representing this control, so it may be added to a scene. getRegion() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; getRegion() - Method in class qupath.lib.gui.viewer.ViewerManager. Get the region node that can be added to a scene graph to display the viewers. getRegionMap() - Method in class qupath.lib.gui.viewer.overlays.BufferedImageOverlay. Get an unmodifiable Map containing image regions to paint on this overlay. getRegionRequest() - Method in class qupath.lib.experimental.pixels.Parameters. Get the region request. getRegionRequest() - Method in class qupath.lib.images.servers.TileRequest. Get the RegionRequest that this tile represents. getRegions() - Method in class qupath.lib.images.servers.SparseImageServer.SparseImageServerManager. Get an unmodifiable collection for all available regions. getRelativePathOrNull(String) - Method in class qupath.lib.gui.UserDirectoryManager;  ; getRenderer() - Method in class qupath.lib.gui.viewer.overlays.PixelClassificationOverlay. Get the ImageRenderer used with this overlay, which may be null. getRenderer() - Method in class qupath.lib.gui.viewer.QuPathViewer. Request a renderer that converts image tiles into RGB images. getReplacements() - Method in class qupath.lib.io.UriUpdater. Get a map of all replacements. getRepo() - Method in class qupath.lib.gui.extensions.GitHubProject.GitHubRepo. Get the repo. getRepository() - Method in interface qupath.lib.gui.extensions.GitHubProject. Get the GitHub repository associated with the project. getRepresentedPathClasses(PathObjectHierarchy, Class<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Get a set of the represented path classes, i.e. getRequestedCursor() - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEvent",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:498023,avail,available,498023,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"ightly more if the error introduced; would be very small, i.e. if 4 is requested and 4.0001 is available, 4.0001 would be returned). Parameters:; server - ; requestedDownsample - ; Returns:; See Also:. getPreferredResolutionLevel(ImageServer, double). getDisplayableImageName; public static String getDisplayableImageName(ImageServer<?> server); Get an ImageServer name suitable for displaying.; If the server is null, ""No image"" is returned. Otherwise, the name ; stored in the metadata is returned if not null, otherwise server.getShortServerName() is used. Parameters:; server - ; Returns:. setImageName; public static boolean setImageName(ImageServer<?> server,; String name); Set the name property of the metadata for an ImageServer. Parameters:; server - the server to update; name - the new name to use; Returns:; true if the metadata was updated, false otherwise (i.e. if the name is unchanged). getDownsampleFactor; public static double getDownsampleFactor(ImageServer<?> server,; double preferredPixelSizeMicrons); Calculate a downsample factor for a server given a preferred pixel size. Parameters:; server - ; preferredPixelSizeMicrons - ; Returns:. getPaddedRequest; public static BufferedImage getPaddedRequest(ImageServer<BufferedImage> server,; RegionRequest request,; Padding padding); throws IOException; Get a raster, padded by the specified amount, to the left, right, above and below.; ; Note that the padding is defined in terms of the destination pixels.; ; In other words, a specified padding of 5 should actually result in 20 pixels being added in each dimension ; if the request.getDownsample() == 4. Parameters:; server - ; request - ; padding - ; Returns:; Throws:; IOException. classificationLabelsToChannels; public static List<ImageChannel> classificationLabelsToChannels(Map<Integer,PathClass> classificationLabels,; boolean ignoredTransparent); Create a list of channels from classification labels.; Note that the labels must be ≥ 0 or else an IllegalArgumentExceptio",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ServerTools.html:4606,down,downsample,4606,javadoc/docs/qupath/lib/images/servers/ServerTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ServerTools.html,1,['down'],['downsample']
Availability,"igin (x & y) and downsample factor to use.; Returns:. createROIMask; public static BufferedImage createROIMask(ROI roi,; double downsample); Create a ROI mask using the minimal bounding box for the ROI. Parameters:; roi - ; downsample - ; Returns:. createROIMask; public static BufferedImage createROIMask(int width,; int height,; ROI roi,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for mask; xOrigin - pixel x coordinate of the top left of the region to include in the mask.; yOrigin - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i.e. the amount to scale.; Returns:. createROIMask; public static BufferedImage createROIMask(Shape shape,; double downsample); Create a Shape mask using the minimal bounding box for the Shape. Parameters:; shape - ; downsample - ; Returns:. createShapeMask; public static BufferedImage createShapeMask(int width,; int height,; Shape shape,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; shape - Shape for mask; xOrigin - pixel x coordinate of the top left of the region to include in the mask.; yOrigin - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i.e. the amount to scale.; Returns:. ensureBufferedImageType; public static BufferedImage ensureBufferedImageType(BufferedImage img,; int requestedType); Convert a BufferedImage to have a specified type.; ; This makes use of",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:5674,down,downsample,5674,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,2,"['down', 'mask']","['downsample', 'mask']"
Availability,"igin,; double yOrigin,; double downsampleFactor,; Function<ROI,PathObject> creator,; ImagePlane plane). Create a PathObject for a specific ImageJ Roi. static PathObject; convertToPathObject(Roi roi,; double downsampleFactor,; Function<ROI,PathObject> creator,; ImagePlus imp). Create a PathObject for a specific ImageJ Roi, using an ImagePlus to help set properties. static PathObject; convertToPathObject(ImagePlus imp,; ImageServer<?> server,; Roi roi,; double downsampleFactor,; Function<ROI,PathObject> creator,; ImagePlane plane). Deprecated.; use instead convertToPathObject(Roi, double, double, double, Function, ImagePlane). static PolygonROI; convertToPolygonROI(PolygonRoi roi,; Calibration cal,; double downsampleFactor,; ImagePlane plane). Convert an ImageJ PolygonRoi to a QuPath PolygonROI. static ROI; convertToROI(Roi roi,; double xOrigin,; double yOrigin,; double downsampleFactor,; ImagePlane plane). Create a ROI from an ImageJ Roi. static ROI; convertToROI(Roi roi,; Calibration cal,; double downsampleFactor,; ImagePlane plane). Create a ROI from an ImageJ Roi, using the Calibration object of an ImagePlus. static <T extends PathImage<? extends ImagePlus>>ROI; convertToROI(Roi roi,; T pathImage). Create a ROI from an ImageJ Roi. static ImagePlus; convertToUncalibratedImagePlus(String title,; BufferedImage img). Convert a BufferedImage to an ImagePlus, without pixel size information or other calibration. static ImageStack; createImageStack(ImageProcessor... ips). Create an ImageStack containing the specified ImageProcessors. static PathImage<ImagePlus>; createPathImage(ImageServer<BufferedImage> server,; ImagePlus imp,; RegionRequest request). Create a PathImage from an ImagePlus and region. static double; estimateDownsampleFactor(ImagePlus imp,; ImageServer<?> server). Estimate the downsample factor for an image region extracted from an image server, based upon ; the ratio of pixel sizes if possible or ratio of dimensions if necessary. static ImagePlus; extractH",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:5537,down,downsampleFactor,5537,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,1,['down'],['downsampleFactor']
Availability,"il:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.viewer.overlays; Class TMAGridOverlay. java.lang.Object; qupath.lib.gui.viewer.overlays.AbstractOverlay; qupath.lib.gui.viewer.overlays.TMAGridOverlay. All Implemented Interfaces:; PathOverlay. public class TMAGridOverlay; extends AbstractOverlay; An overlay capable of painting a TMA Grid. Author:; Pete Bankhead; See Also:. HierarchyOverlay. Nested Class Summary. Nested classes/interfaces inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; AbstractOverlay.LocationStringFunction. Constructor Summary; Constructors. Constructor; Description; TMAGridOverlay(OverlayOptions overlayOptions). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; boolean; isVisible(). Check overlay visibility status. void; paintOverlay(Graphics2D g,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TMAGridOverlay; public TMAGridOverlay(OverlayOptions overlayOptions); Constructor. Parameters:; overlayOptions - overlay options to control the display of this overlay. Method Details. isVisible; public boolean isVisible(); Description copied from class: AbstractOverlay; Check overlay visibility status. If isVisible() returns false,; then calls to paintOverlay() will not do anything. Overrides:; isVisible in class AbstractOverlay; Returns",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/TMAGridOverlay.html:1197,down,downsampleFactor,1197,javadoc/docs/qupath/lib/gui/viewer/overlays/TMAGridOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/TMAGridOverlay.html,1,['down'],['downsampleFactor']
Availability,"ilable - or Double.NaN otherwise. PixelType; getPixelType(). Returns the bit-depth for individual pixels in the image. double; getPixelWidthMicrons(). Get the pixel width in microns, if available - or Double.NaN otherwise. double[]; getPreferredDownsamplesArray(). Request the preferred downsamples from the image metadata. int; getPreferredTileHeight(). Get the preferred tile height, which can be used to optimize pixel requests for large images. int; getPreferredTileWidth(). Get the preferred tile width, which can be used to optimize pixel requests for large images. int; getSizeC(). Get the number of image channels. int; getSizeT(). Get the number of time points. int; getSizeZ(). Get the number of z-slices. double; getTimepoint(int ind). Get the time point, defined in getTimeUnit(), or Double.NaN if this is unknown. TimeUnit; getTimeUnit(). Get the time unit for a time series. int; getWidth(). Get the full-resolution image width. double; getZSpacingMicrons(). Get the z-spacing in microns, if available - or Double.NaN otherwise. int; hashCode();  ; boolean; isCompatibleMetadata(ImageServerMetadata metadata). Returns true if a specified ImageServerMetadata is compatible with this one, that is it has the same path and dimensions; (but possibly different pixel sizes, magnifications etc.). boolean; isRGB(). Returns true if the pixels are stored in (A)RGB form. int; nLevels(). Get the number of resolution levels. boolean; pixelSizeCalibrated(). Returns true if pixel width and height calibration information is available for the image. String; toString();  ; boolean; zSpacingCalibrated(). Returns true if z-spacing calibration information is available for the image. Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Field Details. DEFAULT_CLASSIFICATION_LABELS_CHANNEL; public static final ImageChannel DEFAULT_CLASSIFICATION_LABELS_CHANNEL; Default channel to use with images where the channel type is ImageServerMetada",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html:3879,avail,available,3879,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html,1,['avail'],['available']
Availability,"ilder. region; public OMEPyramidWriter.Builder region(ImageRegion region); Define the region to export, including the z-slice and time point. Parameters:; region - ; Returns:; this builder; See Also:. region(int, int, int, int); timePoint(int); zSlice(int); zSlices(int, int). tileSize; public OMEPyramidWriter.Builder tileSize(int tileSize); Define the requested tile size (width == height).; ; This is only a suggestion, and the OME reader may override it if the value is unsupported. Parameters:; tileSize - ; Returns:; this builder. tileSize; public OMEPyramidWriter.Builder tileSize(int tileWidth,; int tileHeight); Define the requested tile width and height.; ; This is only a suggestion, and the OME reader may override it if the value is unsupported. Parameters:; tileWidth - ; tileHeight - ; Returns:; this builder. downsamples; public OMEPyramidWriter.Builder downsamples(double... downsamples); Specify downsample factors to use in the final pyramid.; ; Note that the downsample values provided will be sorted in ascending order. Parameters:; downsamples - ; Returns:; this builder. dyadicDownsampling; public OMEPyramidWriter.Builder dyadicDownsampling(); Downsample by factors of 2.; ; Note that the highest downsample value will depend on the tile size, ; so the tile size should be set first. Returns:; this builder; See Also:. scaledDownsampling(double). scaledDownsampling; public OMEPyramidWriter.Builder scaledDownsampling(double scale); Downsample by specific increasing factor each time (e.g. if scale == 2, then downsamples will be 1, 2, 4, 8...).; ; Note that the highest downsample value will depend on the tile size, ; so the tile size should be set first. Parameters:; scale - ; Returns:; this builder; See Also:. scaledDownsampling(double). scaledDownsampling; public OMEPyramidWriter.Builder scaledDownsampling(double minDownsample,; double scale); Downsample by specific increasing factor each time, with a specified initial downsample value ; (e.g. if scale == 2, then do",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html:9845,down,downsample,9845,javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html,1,['down'],['downsample']
Availability,"ile paths to a classifier to load from disk.; If more than one name is provided, a composite classifier is created (applying each classifier in sequence).; Returns:; the requested ObjectClassifier; Throws:; IllegalArgumentException - if the classifier cannot be found. loadDensityMap; public static DensityMaps.DensityMapBuilder loadDensityMap(String name); throws IllegalArgumentException; Load a density map for a project or file path. Parameters:; name - the name of the density map within the current project, or file path to a density map to load from disk.; Returns:; the requested DensityMaps.DensityMapBuilder; Throws:; IllegalArgumentException - if the density map cannot be found. locateFile; public static String locateFile(String nameOrPath); throws IOException; Locate a specified file based upon its name or path, with a search depth of 4.; This first checks if the provided path is to a file that already exists.; If it is not, then it searches recursively within the current project (if available) ; up to a fixed search depth for a file with the same name. Parameters:; nameOrPath - the original name or path; Returns:; the identified file path, or the original file path if no update was found or required; Throws:; IOException; See Also:. UriUpdater.locateFile(String, int, Path...). locateFile; public static String locateFile(String nameOrPath,; int searchDepth); throws IOException; Locate a specified file based upon its name or path.; This first checks if the provided path is to a file that already exists.; If it is not, then it searches recursively within the current project (if available) ; up to a specified search depth for a file with the same name. Parameters:; nameOrPath - the original name or path; searchDepth - how deep to search subdirectories recursively; Returns:; the identified file path, or the original file path if no update was found or required; Throws:; IOException; See Also:. UriUpdater.locateFile(String, int, Path...). findDensityMapHotspots; publ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:132687,avail,available,132687,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['avail'],['available']
Availability,"ill be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for mask; xOrigin - pixel x coordinate of the top left of the region to include in the mask.; yOrigin - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i.e. the amount to scale.; Returns:. createROIMask; public static BufferedImage createROIMask(Shape shape,; double downsample); Create a Shape mask using the minimal bounding box for the Shape. Parameters:; shape - ; downsample - ; Returns:. createShapeMask; public static BufferedImage createShapeMask(int width,; int height,; Shape shape,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; shape - Shape for mask; xOrigin - pixel x coordinate of the top left of the region to include in the mask.; yOrigin - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i.e. the amount to scale.; Returns:. ensureBufferedImageType; public static BufferedImage ensureBufferedImageType(BufferedImage img,; int requestedType); Convert a BufferedImage to have a specified type.; ; This makes use of Graphics2D.drawImage, which imposes limits on supported types ; (i.e. RGB or 8-bit grayscale), and is therefore not suitable for arbitrary type conversion.; ; A possible use is to ensure that a BGR/RGB/ARGB image is converted to the same representation, ; for example to allow packed int arrays to be treated in the same way.; ; Images that already have the same type are returned unchanged. Parameters:; img - the input image; requestedType - the type to which the image should be converted; Returns:; the (possibly-new)",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:6137,mask,mask,6137,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,4,['mask'],['mask']
Availability,"illHeight(Node, Boolean) property for specified nodes. static void; setFillWidth(Boolean doFill,; Node... nodes). Deprecated.; Set the GridPane.setFillWidth(Node, Boolean) property for specified nodes. static void; setHGrowPriority(Priority priority,; Node... nodes). Deprecated.; Set the GridPane.setHgrow(Node, Priority) property for specified nodes. static void; setMaxHeight(double height,; Region... regions). Deprecated.; Set the max height property for the specified regions. static void; setMaxWidth(double width,; Region... regions). Deprecated.; Set the max width property for the specified regions. static void; setMinHeight(double height,; Region... regions). Deprecated.; Set the min height property for the specified regions. static void; setMinWidth(double width,; Region... regions). Deprecated.; Set the min width property for the specified regions. static void; setToExpandGridPaneHeight(Node... nodes). Deprecated.; Set constraints and max width values (where possible) so that the specified nodes ; fill all available vertical space in a GridPane. static void; setToExpandGridPaneWidth(Node... nodes). Deprecated.; Set constraints and max width values (where possible) so that the specified nodes ; fill all available horizontal space in a GridPane. static void; setVGrowPriority(Priority priority,; Node... nodes). Deprecated.; Set the GridPane.setVgrow(Node, Priority) property for specified nodes. static void; simplifyTitledPane(TitledPane pane,; boolean boldTitle). Deprecated.; Simplify the appearance of a TitledPane using CSS. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PaneTools; public PaneTools(); Deprecated. Method Details. addGridRow; public static void addGridRow(GridPane pane,; int row,; int col,; String tooltipText,; Node... nodes); Deprecated.; Add a row of nodes. The rowspan is always 1. The colspan is 1 by default, ; unless a Node is added",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PaneTools.html:3402,avail,available,3402,javadoc/docs/qupath/lib/gui/tools/PaneTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PaneTools.html,1,['avail'],['available']
Availability,"image space is not shifted in the viewer afterwards.; The purpose is to make it possible to zoom in/out while keeping the cursor focused on a particular location. Parameters:; downsampleFactor - ; cx - ; cy - ; clipToMinMax - If true, the specified downsample factor will be clipped ; to the range getMinDownsample to getMaxDownsample. getZoomToFitDownsampleFactor; protected double getZoomToFitDownsampleFactor(). getServerWidth; public int getServerWidth(); Get the width in pixels of the full resolution of the current image, or 0 if no image is currently open. Returns:. getServerHeight; public int getServerHeight(); Get the height in pixels of the full resolution of the current image, or 0 if no image is currently open. Returns:. getServerBounds; public ImageRegion getServerBounds(); Get an ImageRegion representing the full width and height of the current image.; The ImagePlane is set according to the z and t position of the viewer. Returns:. getDownsampleFactor; public double getDownsampleFactor(); Get the current downsample factor. Returns:. componentPointToImagePoint; public Point2D componentPointToImagePoint(Point2D point,; Point2D pointDest,; boolean constrainToBounds); Convert a coordinate from the viewer into the corresponding pixel coordinate in the full-resolution image - optionally constraining it to any server bounds.; A point object can optionally be provided into which the location is written (may be the same as the component point object). Parameters:; point - ; pointDest - ; constrainToBounds - ; Returns:. componentPointToImagePoint; public Point2D componentPointToImagePoint(double x,; double y,; Point2D pointDest,; boolean constrainToBounds); Convert x and y coordinates from the component space to the image space. Parameters:; x - x coordinate, related to getView(); y - y coordinate, related to getView(); pointDest - object in which to store the corresponding image point (will be set and returned if non-null); constrainToBounds - if true, clip the image",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:30845,down,downsample,30845,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,1,['down'],['downsample']
Availability,"imagej.superpixels.DoGSuperpixelsPlugin;  ; getName() - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getName() - Method in class qupath.lib.algorithms.CoherenceFeaturePlugin;  ; getName() - Method in class qupath.lib.algorithms.HaralickFeaturesPlugin;  ; getName() - Method in class qupath.lib.algorithms.IntensityFeaturesPlugin;  ; getName() - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getName() - Method in class qupath.lib.algorithms.TilerPlugin;  ; getName() - Method in class qupath.lib.analysis.stats.survival.KaplanMeierData. Get the name of this data, generally used for display. getName() - Method in class qupath.lib.color.ColorDeconvolutionStains. Get the stains name. getName() - Method in interface qupath.lib.color.ColorMaps.ColorMap. Get the name of the colormap. getName() - Method in class qupath.lib.color.StainVector. Returns the name of the stain vector. getName() - Method in class qupath.lib.common.Timeit.Checkpoint. Get the checkpoint name. getName() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the channel name. getName() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getName() - Method in class qupath.lib.display.settings.ChannelSettings. Get the name of the channel. getName() - Method in class qupath.lib.display.settings.ImageDisplaySettings. Get the name of the settings. getName() - Method in interface qupath.lib.experimental.pixels.MeasurementProcessor.CustomMeasurement;  ; getName() - Method in class qupath.lib.extension.svg.SvgExtension;  ; getName() - Method in class qupath.lib.gui.actions.menus.AnalyzeMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.AutomateMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.ClassifyMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.EditMenuActions;  ; getName() - Method in class qupath.lib.gui.actions.menus.ExtensionsMenuActions;  ; getName() - Method in class qup",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:448955,checkpoint,checkpoint,448955,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['checkpoint'],['checkpoint']
Availability,"implementing classes may need to parse this. boolean; setValue(S value). Set the Parameter to have a specified value. Method Details. getDefaultValue; S getDefaultValue(); Get a default value to use if the Parameter has not been otherwise set. Returns:. setValue; boolean setValue(S value); Set the Parameter to have a specified value. Parameters:; value - ; Returns:. setStringLastValue; boolean setStringLastValue(Locale locale,; String value); Set last value using a string; implementing classes may need to parse this. Parameters:; locale - ; value - ; Returns:. resetValue; void resetValue(); Set last value to null (so default can be used). getValue; S getValue(); Get the current set value (may be null). Returns:; See Also:. setValue(S); getValueOrDefault(). getValueOrDefault; S getValueOrDefault(); Get the current set value, or any default if no value has been set. Returns:; See Also:. setValue(S); getValue(). getPrompt; String getPrompt(); Get some prompt text that may be displayed to a user. Returns:. isValidInput; boolean isValidInput(S value); Query if a specified value would be valid for this parameter. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. setHidden; void setHidden(boolean hidden); Mark that a parameter should not be displayed to a user.; This is useful, for example, if a parameter list changes the parameters to be displayed depending upon; the image available or current settings, e.g. using different parameters when the pixel size is known in microns. Parameters:; hidden - . isHidden; boolean isHidden(); Test is the 'hidden' flag is set for the parameter. Returns:. duplicate; Parameter<S> duplicate(); Create a new Parameter with the same text and value. Returns:. hasHelpText; boolean hasHelpText(); Query whether getHelpText() returns a meaningful String (as opposed to null). Returns:. getHelpText; String getHelpText(); Get a description of the meaning of the Parameter; may be displayed e.g. as a tooltip. Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/Parameter.html:3296,avail,available,3296,javadoc/docs/qupath/lib/plugins/parameters/Parameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/Parameter.html,1,['avail'],['available']
Availability,"in (A)RGB form. Parameters:; isRGB - ; Returns:. pixelType; public ImageServerMetadata.Builder pixelType(PixelType pixelType); Specify the bit-depth of the image. Parameters:; pixelType - ; Returns:. levelsFromDownsamples; public ImageServerMetadata.Builder levelsFromDownsamples(double... downsamples); Specify downsample values for pyramidal levels.; The appropriate image sizes will be computed based upon these. Parameters:; downsamples - ; Returns:; See Also:. levels(Collection). levels; public ImageServerMetadata.Builder levels(Collection<ImageServerMetadata.ImageResolutionLevel> levels); Specify resolution levels, where the largest image should come first.; ; Normally level[0].width == width && level[0].height == height, but this is not ; strictly required; for example, it is permissible for the server to supply only resolutions lower than ; the full image if these ought to be upsampled elsewhere.; ; In other words, the width and height encode the size of the image as it should be ; interpreted, while the levels refer to the size of the rasters actually available here. Parameters:; levels - ; Returns:. sizeZ; public ImageServerMetadata.Builder sizeZ(int sizeZ); Specify the number of z-slices. Parameters:; sizeZ - ; Returns:. sizeT; public ImageServerMetadata.Builder sizeT(int sizeT); Specify the number of time points. Parameters:; sizeT - ; Returns:. pixelSizeMicrons; public ImageServerMetadata.Builder pixelSizeMicrons(Number pixelWidthMicrons,; Number pixelHeightMicrons); Specify the pixel sizes, in microns. Parameters:; pixelWidthMicrons - ; pixelHeightMicrons - ; Returns:. zSpacingMicrons; public ImageServerMetadata.Builder zSpacingMicrons(Number zSpacingMicrons); Specify the spacing between z-slices, in microns. Parameters:; zSpacingMicrons - ; Returns:. timepoints; public ImageServerMetadata.Builder timepoints(TimeUnit timeUnit,; double... timepoints); Specify the time unit and individual time points. Parameters:; timeUnit - ; timepoints - time points, define",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.Builder.html:7022,avail,available,7022,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.Builder.html,1,['avail'],['available']
Availability,"in a multi-level image pyramid. Field Summary; Fields. Modifier and Type; Field; Description; static final ImageChannel; DEFAULT_CLASSIFICATION_LABELS_CHANNEL. Default channel to use with images where the channel type is ImageServerMetadata.ChannelType.CLASSIFICATION. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ImageServerMetadata; duplicate(). Duplicate this metatadata. boolean; equals(Object obj);  ; double; getAveragedPixelSize(). Get the averaged pixel size in microns, if available - or Double.NaN otherwise. ImageChannel; getChannel(int n). Get the specified channel. List<ImageChannel>; getChannels(). Get an unmodifiable list of all channels. ImageServerMetadata.ChannelType; getChannelType(). Get the channel type, which can be used to interpret the channels. Map<Integer,PathClass>; getClassificationLabels(). Get map between labels and classification names. double; getDownsampleForLevel(int level). Get the downsample factor for a specific resolution level. int; getHeight(). Get the full-resolution image height. ImageServerMetadata.ImageResolutionLevel; getLevel(int level). Get resolution information for a specified pyramidal level. List<ImageServerMetadata.ImageResolutionLevel>; getLevels(). Get an unmodifiable list containing the resolution levels. double; getMagnification(). Get the magnification value, or Double.NaN if this is unavailable. Number; getMaxValue(). Get the minimum value supported by this image. Number; getMinValue(). Get the minimum value supported by this image. String; getName(). Get the image name. PixelCalibration; getPixelCalibration(). Get a PixelCalibration object representing the pixel size information for this metadata object. double; getPixelHeightMicrons(). Get the pixel height in microns, if available - or Double.NaN otherwise. PixelType; getPixelType(). Returns the bit-depth for individual pixels in the image. double; getPixelWidthMicrons(). Get the pixel width in microns, if av",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html:2040,down,downsample,2040,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html,1,['down'],['downsample']
Availability,"in class qupath.imagej.tools.IJTools. Extract a full ImageJ hyperstack for a specific region, for specified ranges of z-slices and time points. extractMaskedDoubles(Mat, Mat, int) - Static method in class qupath.opencv.tools.OpenCVTools. Extract pixels from an image using a mask, limited to the specified channel index. extractMaskedFloats(Mat, Mat, int) - Static method in class qupath.opencv.tools.OpenCVTools. Extract pixels from an image using a mask, limited to the specified channel index. extractMaskedPixels(Parameters<BufferedImage, BufferedImage>, int, Function<PathObject, ROI>) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. extractMaskedPixels(Parameters<BufferedImage, BufferedImage>, String, Function<PathObject, ROI>) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. extractMaskedPixels(Parameters<BufferedImage, BufferedImage>, ColorTransforms.ColorTransform, Function<PathObject, ROI>) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Extract the pixels from the image using the specified transform, and applying any ROI mask. extractOverlay(PathObjectHierarchy, RegionRequest, OverlayOptions, Predicate<PathObject>) - Static method in class qupath.imagej.gui.IJExtension. Extract an ImageJ overlay for the specified region. extractPixels(Mat, double[]) - Static method in class qupath.opencv.tools.OpenCVTools. Extract pixels as a double array. extractPixels(Mat, float[]) - Static method in class qupath.opencv.tools.OpenCVTools. Extract pixels as a float[] array. extractROI(ImageServer<BufferedImage>, PathObject, RegionRequest, boolean) - Static method in class qupath.imagej.gui.IJExtension. Similar to IJExtension.extractROI(ImageServer, ROI, RegionRequest, boolean), except t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:296106,mask,mask,296106,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['mask'],['mask']
Availability,"in class qupath.lib.regions.RegionRequest. Create a request for a region specified in terms of its bounding box, z-slice and time point. createInstance(String, double, int, int, int, int, ImagePlane) - Static method in class qupath.lib.regions.RegionRequest. Create a request for a region specified in terms of its bounding box and ImagePlane. createInstance(String, double, Collection<? extends ROI>) - Static method in class qupath.lib.regions.RegionRequest. Create a request that contains the pixels of the specified ROIs. createInstance(String, double, ImageRegion) - Static method in class qupath.lib.regions.RegionRequest. Create a request corresponding to a specified ImageRegion. createInstance(String, double, ROI) - Static method in class qupath.lib.regions.RegionRequest. Create a request that contains the pixels of the specified ROI. createInstance(String, int, double, ImageRegion) - Static method in class qupath.lib.images.servers.TileRequest. Create a new tile request for a specified region, downsample and resolution level. createInstance(String, RegionRequest) - Static method in class qupath.lib.regions.RegionRequest. Create a request that matches another request but with a different path. createInstance(Collection<? extends ROI>) - Static method in class qupath.lib.regions.ImageRegion. Create the smallest region that completely contains the specified ROIs. createInstance(Stage) - Static method in class qupath.lib.gui.QuPathGUI. Static method to launch QuPath on the JavaFX Application thread. createInstance(Stage, HostServices) - Static method in class qupath.lib.gui.QuPathGUI. Static method to launch QuPath from a JavaFX application. createInstance(ImageServer<?>) - Static method in class qupath.lib.regions.RegionRequest. Create a request for the full width and height of an ImageServer, for the default plane (first z-slice, time point) ; and first resolution level downsample (usually 1, but not always). createInstance(ImageServer<?>, double) - Static method in c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:189909,down,downsample,189909,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['down'],['downsample']
Availability,"ing class:; SparseImageServer. public static class SparseImageServer.Builder; extends Object; Builder to create a new SparseImageServer. Constructor Summary; Constructors. Constructor; Description; Builder();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; SparseImageServer; build(). Build a new SparseImageServer. SparseImageServer.Builder; jsonRegion(ImageRegion region,; double downsample,; ImageServerBuilder.ServerBuilder<BufferedImage> builder). Add a region based on a JSON representation of an ImageServer. SparseImageServer.Builder; serverRegion(ImageRegion region,; double downsample,; ImageServer<BufferedImage> server). Add a region based on an existing ImageServer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(). Method Details. jsonRegion; public SparseImageServer.Builder jsonRegion(ImageRegion region,; double downsample,; ImageServerBuilder.ServerBuilder<BufferedImage> builder); Add a region based on a JSON representation of an ImageServer. Parameters:; region - the region within this image where the pixels requested from the server should be positioned; downsample - the downsample value for the represented region; builder - the ServerBuilder representation of the server to include; Returns:; See Also:. ImageServers. serverRegion; public SparseImageServer.Builder serverRegion(ImageRegion region,; double downsample,; ImageServer<BufferedImage> server); Add a region based on an existing ImageServer. Parameters:; region - the region within this image where the pixels requested from the server should be positioned; downsample - the downsample value for the represented region; server - the server to include, supplying pixels for the region; Returns:. build; public SparseImageServer build(); throws IOException; Build a new SparseImageServer. Returns:; Throws:; IOException. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/SparseImageServer.Builder.html:1508,down,downsample,1508,javadoc/docs/qupath/lib/images/servers/SparseImageServer.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/SparseImageServer.Builder.html,6,['down'],['downsample']
Availability,"ing regions. PixelProcessor.Builder<S,T,U>; pixelSize(double pixelSize). Set the requested pixel size to use with requesting image regions. PixelProcessor.Builder<S,T,U>; processor(Processor<S,T,U> processor). Set the processor. PixelProcessor.Builder<S,T,U>; tile(int tileWidth,; int tileHeight). Set a default tiler to use, with a specified tile size. PixelProcessor.Builder<S,T,U>; tiler(Tiler tiler). Set a tiler to use. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(). Method Details. imageSupplier; public PixelProcessor.Builder<S,T,U> imageSupplier(ImageSupplier<S> imageSupplier); Set the image supplier. This is required if the processor is to have access to pixels. Parameters:; imageSupplier - ; Returns:. maskSupplier; public PixelProcessor.Builder<S,T,U> maskSupplier(MaskSupplier<S,T> maskSupplier); Set the mask supplier. This is optional, but without it masks will be null. Parameters:; maskSupplier - ; Returns:. outputHandler; public PixelProcessor.Builder<S,T,U> outputHandler(OutputHandler<S,T,U> outputHandler); Set the output handler. This is optional, for cases where the processor does not make updates to the; parent object itself. Parameters:; outputHandler - ; Returns:. processor; public PixelProcessor.Builder<S,T,U> processor(Processor<S,T,U> processor); Set the processor. This is required to do any interesting work. Parameters:; processor - ; Returns:. padding; public PixelProcessor.Builder<S,T,U> padding(Padding padding); Set the padding to use when extracting regions.; Note that this is defined in pixels at the full image resolution, not the downsampled resolution. Parameters:; padding - ; Returns:. padding; public PixelProcessor.Builder<S,T,U> padding(int size); Set the padding to use when extracting regions, using a symmetric padding.; Note that this is defined in pixels at the full image resolution, not the downsamp",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html:2885,mask,masks,2885,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,1,['mask'],['masks']
Availability,"ing steps that should be applied after prediction. getPredictionFunction() - Method in class qupath.opencv.dnn.AbstractDnnModel. Get the prediction function that can apply a prediction with one or more blobs as input. getPredictionFunction() - Method in class qupath.opencv.dnn.OpenCVDnn;  ; getPredictionOp() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the image op used for prediction only. getPreferencePane() - Method in class qupath.lib.gui.QuPathGUI. Get a reference to the PreferencePane. getPreferredDownsampleFactor(ImageServer<?>, double) - Static method in class qupath.lib.images.servers.ServerTools. Get the downsample factor supported by the server that is the best match for the requested downsample. getPreferredDownsamples() - Method in class qupath.lib.images.servers.AbstractImageServer. Request the preferred downsamples from the image metadata. getPreferredDownsamples() - Method in interface qupath.lib.images.servers.ImageServer. Get an array of downsample factors supported by the server. getPreferredDownsamplesArray() - Method in class qupath.lib.images.servers.ImageServerMetadata. Request the preferred downsamples from the image metadata. getPreferredOverlayColor() - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay. Return the preferred overlay color. getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.opencv.CellCountsCV",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:488767,down,downsample,488767,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['down'],['downsample']
Availability,"ing the image plane information; width - width of the rectangle to create; height - height of the rectangle to create; random - random number generator to use (may be null to use a default); Returns:; a rectangle with the specified width and height, covered by the mask; Throws:; IllegalArgumentException - if either the mask width or height is too small for the requested width and height. createRandomRectangle; public static ROI createRandomRectangle(ROI mask,; double width,; double height); throws IllegalArgumentException; Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI.; ; For greater control, see createRandomRectangle(ROI, double, double, int, boolean, Random). Parameters:; mask - region defining the area in which the rectangle can be located, including the image plane information; width - width of the rectangle to create; height - height of the rectangle to create; Returns:; a rectangle with the specified width and height and covered by the mask, or null if it was not possible to find a rectangle ; that meets this criterion; Throws:; IllegalArgumentException - if either the mask width or height is too small for the requested width and height; See Also:. createRandomRectangle(ROI, double, double, int, boolean, Random). createRandomRectangle; public static ROI createRandomRectangle(ROI mask,; double width,; double height,; int maxAttempts,; boolean permitErosion,; Random random); throws IllegalArgumentException; Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI, ; using a specified maximum number of attempts. Parameters:; mask - region defining the area in which the rectangle can be located, including the image plane information; width - width of the rectangle to create; height - height of the rectangle to create; maxAttempts - the maximum number of attempts to make when attempting to fit the rectangle within the R",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:18816,mask,mask,18816,javadoc/docs/qupath/lib/roi/RoiTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html,3,['mask'],['mask']
Availability,"ing) - Method in interface qupath.lib.projects.ProjectImageEntry. Request a metadata value. getMethod() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the ColorTransformer.ColorTransformMethod associated with this channel, or null; if no method is relevant. getMin() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the minimum non-NaN value added. getMinAllowed() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getMinAllowed() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the min allowed display value. getMinDisplay() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getMinDisplay() - Method in interface qupath.lib.display.ChannelDisplayInfo. Get the min display value. getMinDisplay() - Method in class qupath.lib.display.settings.ChannelSettings. Get the requested minimum display value for the channel. getMinDownsample() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the minimum downsample value supported by this viewer. getMinFeatures() - Method in class qupath.lib.analysis.features.CoocurranceMatrices. Compute minimum features from all four rotations. getMinor() - Method in class qupath.lib.common.Version. Get the minor version number (0.X.0). getMinSizeForTiling() - Static method in class qupath.lib.images.writers.ome.OMEPyramidWriterCommand. Query the default minimum image size when writing OME-TIFF images. getMinThreshold() - Method in class qupath.lib.analysis.images.ContourTracing.ChannelThreshold. Get the minimum threshold value. getMinValue() - Method in class qupath.lib.analysis.stats.Histogram. Get the minimum of all the values being histogrammed. getMinValue() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the minimum value supported by this image. getMinX() - Method in class qupath.lib.regions.ImageRegion. Get the x coordinate of the top left of the region bounding box. getMinY() - Method in class qupath.lib.regions.ImageRegion. Get the y",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:443813,down,downsample,443813,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['down'],['downsample']
Availability,"inks. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class PixelProcessorUtils. java.lang.Object; qupath.lib.experimental.pixels.PixelProcessorUtils. public class PixelProcessorUtils; extends Object; Utility functions to help with the PixelProcessor class. Since:; v0.5.0. Constructor Summary; Constructors. Constructor; Description; PixelProcessorUtils();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static boolean; containsCentroid(ROI roi,; PathObject child). Check whether a child object's centroid is contained within a ROI. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; int channel,; Function<PathObject,ROI> roiFunction). Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; String channelName,; Function<PathObject,ROI> roiFunction). Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; ColorTransforms.ColorTransform transform,; Function<PathObject,ROI> roiFunction). Extract the pixels from the image using the specified transform, and applying any ROI mask. static List<PathObject>; maskObject(ROI parentROI,; PathObject child). Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. static List<PathObject>; maskObjectAndSplit(ROI parentROI,; PathObject child). Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains di",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html:1148,mask,mask,1148,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html,1,['mask'],['mask']
Availability,"int value. MASK_RED - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the red component from a packed (A)RGB int value. maskFunction(MaskSupplier<S, T>) - Method in class qupath.lib.experimental.pixels.Parameters.Builder. Function used to lazily create a mask corresponding to the image for a specified ROI. maskImageNames - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; maskImageNamesProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request that image names are hidden within the user interface. maskObject(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. maskObjectAndSplit(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. maskSupplier(MaskSupplier<S, T>) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set the mask supplier. MaskSupplier<S,T> - Interface in qupath.lib.experimental.pixels. A functional interface for supplying a mask corresponding to an image. MATCH_VIEWER_RESOLUTIONS - Variable in class qupath.lib.gui.actions.ViewerActions;  ; matchByID(Collection<? extends PathObject>, Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Match objects according to their IDs. matchClassName(String...) - Method in class qupath.imagej.images.servers.ImageJServerBuilder;  ; matchClassName(String...) - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; matchClassName(String...) - Method in interface qupath.lib.images.servers.ImageServerBuilder. Check if this provider matches one or more specified classnames. matchCl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:673265,mask,mask,673265,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,2,['mask'],['mask']
Availability,"int x,; int y,; int width,; int height); Define the region to export based on a bounding box. Parameters:; x - ; y - ; width - ; height - ; Returns:; this builder. region; public OMEPyramidWriter.Builder region(ImageRegion region); Define the region to export, including the z-slice and time point. Parameters:; region - ; Returns:; this builder; See Also:. region(int, int, int, int); timePoint(int); zSlice(int); zSlices(int, int). tileSize; public OMEPyramidWriter.Builder tileSize(int tileSize); Define the requested tile size (width == height).; ; This is only a suggestion, and the OME reader may override it if the value is unsupported. Parameters:; tileSize - ; Returns:; this builder. tileSize; public OMEPyramidWriter.Builder tileSize(int tileWidth,; int tileHeight); Define the requested tile width and height.; ; This is only a suggestion, and the OME reader may override it if the value is unsupported. Parameters:; tileWidth - ; tileHeight - ; Returns:; this builder. downsamples; public OMEPyramidWriter.Builder downsamples(double... downsamples); Specify downsample factors to use in the final pyramid.; ; Note that the downsample values provided will be sorted in ascending order. Parameters:; downsamples - ; Returns:; this builder. dyadicDownsampling; public OMEPyramidWriter.Builder dyadicDownsampling(); Downsample by factors of 2.; ; Note that the highest downsample value will depend on the tile size, ; so the tile size should be set first. Returns:; this builder; See Also:. scaledDownsampling(double). scaledDownsampling; public OMEPyramidWriter.Builder scaledDownsampling(double scale); Downsample by specific increasing factor each time (e.g. if scale == 2, then downsamples will be 1, 2, 4, 8...).; ; Note that the highest downsample value will depend on the tile size, ; so the tile size should be set first. Parameters:; scale - ; Returns:; this builder; See Also:. scaledDownsampling(double). scaledDownsampling; public OMEPyramidWriter.Builder scaledDownsampling(doub",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html:9691,down,downsamples,9691,javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html,1,['down'],['downsamples']
Availability,"ion as is relevant, including name, color and group. Parameters:; pathObject - ; roi - . convertToAnnotation; @Deprecated; public static PathObject convertToAnnotation(ImagePlus imp,; ImageServer<?> server,; Roi roi,; double downsampleFactor,; ImagePlane plane); Deprecated.; use instead convertToAnnotation(Roi, double, double, double, ImagePlane). Create an annotation object for a specific ImageJ Roi. Parameters:; imp - ; server - ; roi - ; downsampleFactor - ; plane - ; Returns:. convertToDetection; @Deprecated; public static PathObject convertToDetection(ImagePlus imp,; ImageServer<?> server,; Roi roi,; double downsampleFactor,; ImagePlane plane); Deprecated.; use instead convertToDetection(Roi, double, double, double, ImagePlane). Create an detection object for a specific ImageJ Roi. Parameters:; imp - ; server - ; roi - ; downsampleFactor - ; plane - ; Returns:. convertLabelsToCells; public static SortedMap<Number,PathObject> convertLabelsToCells(ImageProcessor ipNuclei,; ImageProcessor ipCells,; Calibration cal,; double downsample,; ImagePlane plane); Convert integer labeled images into cell objects. Parameters:; ipNuclei - labels corresponding to cell nuclei; non-zero values here must be identical to the values in ipCells; ipCells - labels corresponding to full cell areas; cal - a Calibration object used to aid conversion between ImageJ and QuPath ROIs; downsample - the downsample value for the ImageProcessors, used to aid conversion between ImageJ and QuPath ROIs; plane - the ImagePlane defining where ROIs should be added; Returns:; a SortedMap containing integer labels from the original labeled images mapped to the corresponding cells that have been created. convertLabelsToCells; public static SortedMap<Number,PathObject> convertLabelsToCells(ImageProcessor ipNuclei,; ImageProcessor ipCells,; double xOrigin,; double yOrigin,; double downsample,; ImagePlane plane); Convert integer labeled images into cell objects. Parameters:; ipNuclei - labels corresponding ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:18368,down,downsample,18368,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,1,['down'],['downsample']
Availability,"ion from a Mat by stripping off padding, returning a new image (not a subregion). static Mat; ensureContinuous(Mat mat,; boolean inPlace). Ensure a Mat is continuous, creating a copy of the data if necessary. static double[]; extractDoubles(Mat mat). Extract pixels as a double array. static float[]; extractFloats(Mat mat). Extract pixels as a float array. static double[]; extractMaskedDoubles(Mat input,; Mat mask,; int channel). Extract pixels from an image using a mask, limited to the specified channel index. static float[]; extractMaskedFloats(Mat input,; Mat mask,; int channel). Extract pixels from an image using a mask, limited to the specified channel index. static double[]; extractPixels(Mat mat,; double[] pixels). Extract pixels as a double array. static float[]; extractPixels(Mat mat,; float[] pixels). Extract pixels as a float[] array. static List<Mat>; extractZStack(ImageServer<BufferedImage> server,; RegionRequest request). Extract a list of Mats, where each Mat corresponds to a z-slice, for all available z-slices of a region. static List<Mat>; extractZStack(ImageServer<BufferedImage> server,; RegionRequest request,; int zMin,; int zMax). Extract a list of Mats, where each Mat corresponds to a z-slice. static void; fill(Mat mat,; double value). Fill the pixels of an image with a specific value. static void; fill(Mat mat,; Mat mask,; double value). Fill the pixels of an image with a specific value, corresponding to a mask. static void; fillSmallHoles(Mat matBinary,; double maxArea). Fill holes in a binary image (1-channel, 8-bit unsigned) with an area <= maxArea. static void; filter2D(Mat mat,; Mat kernel). Apply a 2D filter to all channels of an image, with symmetric boundary padding. static void; filter2D(Mat mat,; Mat kernel,; int borderType). Apply a 2D filter to all channels of an image. static Mat; filterSingleZ(List<Mat> mats,; double[] kernel,; int ind3D,; int border). Apply a filter along the 'list' dimension for a list of Mats, computing the value",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:4740,avail,available,4740,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html,1,['avail'],['available']
Availability,"ion. Get the text that should be displayed for this completion. getDocsUrl() - Static method in class qupath.lib.gui.Urls. Get the base URL for the QuPath documentation (independent of version). getDouble(int) - Method in interface qupath.lib.analysis.stats.ArrayWrappers.ArrayWrapper. Extract one entry from the array, converting to double as necessary. getDoubleParameterValue(String) - Method in class qupath.lib.plugins.parameters.ParameterList. Get a double parameter value (or its default) for the specified key. getDoubleValues(String) - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData;  ; getDoubleValues(String) - Method in interface qupath.lib.gui.measure.PathTableData. Get all double values for all items. getDownsample() - Method in class qupath.lib.gui.commands.MiniViewers.MiniViewerManager. Get the downsample used within the mini viewers. getDownsample() - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel. Get the downsample factor for this level. getDownsample() - Method in class qupath.lib.images.servers.TileRequest. Get the downsample value for this tile. getDownsample() - Method in class qupath.lib.regions.RegionRequest. Get the requested downsample factor, defining the resolution at which pixels should be returned. getDownsampleFactor() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the current downsample factor. getDownsampleFactor() - Method in interface qupath.lib.images.PathImage. Get the downsample factor originally used when obtaining the image from an ImageServer; will be 1 if the image is full-resolution. getDownsampleFactor(ImageServer<?>, double) - Static method in class qupath.lib.images.servers.ServerTools. Calculate a downsample factor for a server given a preferred pixel size. getDownsampleForLevel(int) - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the downsample factor for a specific resolution level. getDownsampleForResolution(int) - Method in class qup",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:385778,down,downsample,385778,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['down'],['downsample']
Availability,"ion. If true, include child objects nested within the output. getIncludeColumns() - Method in class qupath.lib.gui.tools.MeasurementExporter. Returns the list of columns to include in the export. getIndexColorModel(StainVector) - Static method in class qupath.lib.color.ColorToolsAwt. Create an IndexColorModel, ranging from white (low values) to a stain vector color (high values). getIndexColorModel(StainVector, boolean) - Static method in class qupath.lib.color.ColorToolsAwt. Get an IndexColorModel representing a color deconvolution stain. getIndexedClassificationColorModel(Map<Integer, PathClass>) - Static method in class qupath.lib.color.ColorModelFactory. Get a ColorModel suitable for showing output pixel classifications, using an 8-bit or 16-bit labeled image. getInds() - Method in class qupath.opencv.tools.OpenCVTools.IndexedPixel. Get the index array. getInfoMessage() - Method in class qupath.lib.gui.commands.ContextHelpViewer. Get a message that may be used to create a badge indicating that info or warning messages; are available. getInfoMessage() - Method in class qupath.lib.gui.commands.LogViewerCommand. Get a string expression to draw attention to error messages. getInputChannels() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the channels to extract from the image as input to the model. getInputHeight() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Requested height of input image, or -1 if the classifier is not fussy. getInputLength() - Method in class qupath.opencv.ml.FeaturePreprocessor. Get the number of features required of the input. getInputNumChannels() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Requested number of channels in input image; default is 3 (consistent with assuming RGB). getInputPadding() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Requested input padding (above, below, left and right). getInputResolution() - Method in class qupath.lib.cl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:412590,avail,available,412590,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"ion.SmoothingScale;  ; equals(Object) - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; equals(Object) - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; equalTo(String) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification (by name) for objects for which the specified measurement has a value exactly equal to the threshold. equalTo(PathClass) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification for objects for which the specified measurement has a value exactly equal to the threshold. error() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create an error alert dialog. error(String) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text. error(String, int) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text and a count. error(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a error message to show a count of errors. error(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message. error(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with a count. ERROR - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Error or exception. ERROR - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Error logging (only if something goes recognizably wrong). escapeFilePath(String) - Static method in class qupath.lib.common.GeneralTools. Escape backslashes in an absolute file path - useful when scripting. estimateAvailableMemory() - Static method in class qupath.lib.common.GeneralTools. Estimate the current available memory in bytes, based upon the JVM max and the memory c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:283347,error,error,283347,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['error'],['error']
Availability,"ion<? extends PathObject> pathObjects,; boolean resetExistingClass); Description copied from interface: ObjectClassifier; Classify the objects in the specified collection.; This provides a means to specify exactly which objects should be classified, avoiding reliance on ObjectClassifier.getCompatibleObjects(ImageData).; ; Note: this method does not typically fire any hierarchy change/object classification events.; It is up to the caller to fire these events if required. Specified by:; classifyObjects in interface ObjectClassifier<BufferedImage>; Parameters:; imageData - data that may or may not be required for classification depending upon how features are extracted; pathObjects - the objects to classify; resetExistingClass - ; Returns:; the number of objects whose classification was changed.; See Also:. ObjectClassifier.classifyObjects(ImageData, boolean); ObjectClassifier.getCompatibleObjects(ImageData). tryToClassify; protected boolean tryToClassify(PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier). tryToClassify; protected int tryToClassify(List<? extends PathObject> pathObjects,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier); Try to classify a batch of objects. Parameters:; pathObjects - ; server - ; downsample - ; classifier - ; Returns:; number of classified objects. getMissingFeatures; public Map<String,Integer> getMissingFeatures(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects); Description copied from interface: ObjectClassifier; Check for missing features, returning the names and number of input objects missing the specified features.; This is useful as a warning that the input for the classifier may not be valid.; Default implementation returns an empty map; however, implementations should attempt to provide a meaningful ; output if possible. Features that are not missing should not be included in the output. Spec",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html:4695,down,downsample,4695,javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,1,['down'],['downsample']
Availability,"ionFilter) - Method in class qupath.lib.gui.viewer.OverlayOptions. Control where pixel classifications should be calculated during live prediction. setPixelLayer(ImageData<BufferedImage>, ImageServer<BufferedImage>) - Static method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Set an ImageServer as a property in the ImageData. setPixelSizeMicrons(Number, Number) - Static method in class qupath.lib.scripting.QP. Set the metadata for the current ImageData to have the required pixel sizes. setPixelSizeMicrons(Number, Number, Number) - Static method in class qupath.lib.scripting.QP. Set the metadata for the current ImageData to have the required pixel sizes and z-spacing. setPixelSizeMicrons(ImageData<?>, Number, Number, Number) - Static method in class qupath.lib.scripting.QP. Set the metadata for an ImageServer to have the required pixel sizes and z-spacing. setPlaceholderText(String) - Method in class qupath.lib.gui.panes.SimpleImageViewer. Set the placeholder text to show if no image is available. setPredicate(Predicate<? super PathObject>) - Method in class qupath.lib.gui.measure.ObservableMeasurementTableData. Set a predicate used to filter the rows of the table. setPreferredOverlayColor(Color) - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay. Set a preferred overlay color, which the overlay may or may not make use of. setProject(Project<?>) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the current project for the script. setProject(Project<BufferedImage>) - Method in class qupath.lib.gui.panes.ProjectBrowser. Set the project. setProject(Project<BufferedImage>) - Method in class qupath.lib.gui.QuPathGUI. Set the active project, triggering any necessary GUI updates. setProperty(String, Object) - Method in class qupath.lib.images.ImageData. Set a property. setRange(double, double) - Method in class qupath.lib.plugins.parameters.NumericParameter. Set the upper and lower bounds. setReaderOptions(Map<String, Strin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:941934,avail,available,941934,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"ionStore getImageRegionStore(); Get the region store used by this viewer for tile caching and painting. Returns:. setDoFasterRepaint; public void setDoFasterRepaint(boolean fasterRepaint); Set flag to indicate that repaints should prefer speed over accuracy. This is useful when scrolling quickly, or rapidly changing; the image zoom.; ; Note: Previously, this would drop the downsample level - but this produced visual artifacts too often. ; Currently it only impacts interpolation used. Parameters:; fasterRepaint - . getMousePosition; public Point2D getMousePosition(); Get the current cursor position within this viewer, or null if the cursor is outside the viewer.; This is provided in the component space. Returns:. isShowing; public boolean isShowing(); Returns true if the viewer is visible, and attached to a scene. Returns:. initializeForServer; protected void initializeForServer(ImageServer<BufferedImage> server). isSpaceDown; public boolean isSpaceDown(); Returns true if the spacebar was pressed when this component was focussed, and is still being held down. Returns:. setSpaceDown; public void setSpaceDown(boolean spaceDown); Notify this viewer that the isSpaceDown status should be changed.; ; This is useful whenever another component might have received the event,; but the viewer needs to 'know' when it receives the focus. Parameters:; spaceDown - . getCenterPixelX; public double getCenterPixelX(); Get the x-coordinate of the pixel currently centered in the viewer, in the full size image space. Returns:. getCenterPixelY; public double getCenterPixelY(); Get the y-coordinate of the pixel currently centered in the viewer, in the full size image space. Returns:. setActiveTool; public void setActiveTool(PathTool tool); Set the active PathTool for input to this viewer. Parameters:; tool - . getActiveTool; public PathTool getActiveTool(); Get the active PathTool for this viewer.; Note that this is not necessarily identical to the result of the last call to setActiveTool(",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:19623,down,down,19623,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,1,['down'],['down']
Availability,"ionally set a custom ColorModel.; This makes it possible to display the BufferedImage with a different color model than its ; original model. Parameters:; colorModel - . getColorModel; public ColorModel getColorModel(). Returns:; the custom color model, if any is found. changed; public void changed(ObservableValue<? extends ImageData<BufferedImage>> observable,; ImageData<BufferedImage> oldValue,; ImageData<BufferedImage> newValue). Specified by:; changed in interface ChangeListener<ImageData<BufferedImage>>. getRegionMap; public Map<ImageRegion,BufferedImage> getRegionMap(); Get an unmodifiable Map containing image regions to paint on this overlay. Returns:. paintOverlay; public void paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely); Description copied from interface: PathOverlay; Paint the overlay to a graphics object. The graphics object will have a transform applied to it, so the painting should; make use of coordinates in the original image space. Specified by:; paintOverlay in interface PathOverlay; Overrides:; paintOverlay in class AbstractImageOverlay; Parameters:; g2d - Graphics2D object to which drawing should be performed. This should have any transform already applied to it.; imageRegion - The maximum image region that should be shown.; downsampleFactor - The downsample factor at which the overlay will be viewed. There is no need for rescaling according to; this value since it has already been applied to the Graphics2D as part of its AffineTransform, however; it may optionally be needed within the method e.g. to correct line thicknesses.; imageData - the ImageData associated with this overlay. If the overlay is being displayed on a viewer, this is the ImageData open ; within the viewer. Not all overlays require this, and it may be null.; paintCompletely - If true, the method is permitted to return without completely painting everything, for performance reasons. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html:6928,down,downsampleFactor,6928,javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/BufferedImageOverlay.html,2,['down'],"['downsample', 'downsampleFactor']"
Availability,"ions times. List<Timeit.Checkpoint>; getCheckpoints(). Get an list of all the checkpoints. int; getMaxDecimalPlaces(). Get the maximum number of decimal places when reporting timings. static void; main(String[] args);  ; Timeit; maxDecimalPlaces(int maxDP). Set the maximum number of decimal places when reporting timings ; using seconds or minutes. Timeit; microseconds(). Report timings in microseconds. Timeit; milliseconds(). Report timings in milliseconds. Timeit; minutes(). Report timings in minutes. Timeit; nanoseconds(). Report timings in nanoseconds. Timeit; seconds(). Report timings in seconds. Timeit; start(). Start the Timeit and create a checkpoint with the default name. Timeit; start(String name). Start the Timeit and create a checkpoint with the specified name. Timeit; stop(). Stop the Timeit. Timeit; summarizeCheckpoints(). Request that checkpoints are summarized in the toString() method. Timeit; summarizeCheckpoints(boolean summarize). Optionally request that checkpoints are summarized in the toString() method. String; toString(). Returns a snapshot string representation of the Timeit's status. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Constructor Details. Timeit; public Timeit(). Method Details. start; public Timeit start(); throws UnsupportedOperationException; Start the Timeit and create a checkpoint with the default name.; ; Note that calling this method is not essential, because the Timeit will automatically ; be started when the first checkpoint is created. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has previously been started; See Also:. start(String); checkpoint(). start; public Timeit start(String name); throws UnsupportedOperationException; Start the Timeit and create a checkpoint with the specified name.; ; Note that calling this method is not essential, because the Timeit will automatically ; be started when the first ch",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:3402,checkpoint,checkpoints,3402,javadoc/docs/qupath/lib/common/Timeit.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html,1,['checkpoint'],['checkpoints']
Availability,"ions.InfoMessage. public class InfoMessage; extends Object; An informative message that should be shown to the user. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<Number>; count. Read only property containing any count associated with the text (may be null). ReadOnlyStringProperty; text. Read only property containing the message text. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; InfoMessage.MessageType. The type of message, which can be used for styling. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<Number>; countProperty(). Read only property containing any count associated with the text (may be null). static InfoMessage; error(String text). Create an error message with static text. static InfoMessage; error(String text,; int count). Create an error message with static text and a count. static InfoMessage; error(ObservableNumberValue count). Create a error message to show a count of errors. static InfoMessage; error(ObservableValue<String> text). Create an error message. static InfoMessage; error(ObservableValue<String> text,; ObservableNumberValue count). Create an error message with a count. int; getCount(). Counts associated with the message, or -1 if the count is null. InfoMessage.MessageType; getMessageType(). Type of the message. String; getText(). Text of the message. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(String text,; int count). Create an information message with static text and a count. static InfoMessage; info(ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; info(ObservableValue<String> text). Create an information message. static InfoMessage; info(ObservableValue<String> text,; ObservableNumberValue count). Create an information message with a count. R",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:1406,error,error,1406,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,1,['error'],['error']
Availability,"ious customizations added to the builder. Parameters:; options - ; Returns:; this builder. fillAnnotations; public SvgTools.SvgBuilder fillAnnotations(boolean doFill); Request whether annotations are drawn as 'filled' shapes. Parameters:; doFill - ; Returns:; this builder. fillDetections; public SvgTools.SvgBuilder fillDetections(boolean doFill); Request whether detections are drawn as 'filled' shapes. Parameters:; doFill - ; Returns:; this builder. showSelection; public SvgTools.SvgBuilder showSelection(boolean doShow); Request whether selected objects are displayed. Parameters:; doShow - ; Returns:; this builder. region; public SvgTools.SvgBuilder region(ImageRegion region); Specify the region (in terms of the full resolution image space) for export.; If a RegionRequest is supplied, the downsample factor will be used if none has otherwise been set. Parameters:; region - ; Returns:; this builder. downsample; public SvgTools.SvgBuilder downsample(double downsample); Specify downsample factor (defined in terms of the full resolution image space). Parameters:; downsample - ; Returns:; this builder. width; public SvgTools.SvgBuilder width(int width); Export image width. Parameters:; width - width (in pixels) of the SVG image.; Returns:; this builder. height; public SvgTools.SvgBuilder height(int height); Export image height. Parameters:; height - height (in pixels) of the SVG image.; Returns:; this builder. size; public SvgTools.SvgBuilder size(int width,; int height); Export image size. Parameters:; width - width (in pixels) of the SVG image.; height - height (in pixels) of the SVG image.; Returns:; this builder. embedImages; public SvgTools.SvgBuilder embedImages(); Specify whether the underlying (raster) image should be embedded in any export.; This requires that the constructor with a QuPathViewer is called to supply the ; necessary rendering settings. Returns:; this builder; See Also:. linkImages(). linkImages; public SvgTools.SvgBuilder linkImages(); Specify whet",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html:6056,down,downsample,6056,javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/extension/svg/SvgTools.SvgBuilder.html,3,['down'],['downsample']
Availability,"iptParameters.Builder; setDefaultImports(Collection<Class<?>> imports);  ; ScriptParameters.Builder; setDefaultStaticImports(Collection<Class<?>> imports);  ; ScriptParameters.Builder; setErrorWriter(Writer writer). Set the main error writer. ScriptParameters.Builder; setFile(File file);  ; ScriptParameters.Builder; setImageData(ImageData<?> imageData). Set the current image data for the script. ScriptParameters.Builder; setProject(Project<?> project). Set the current project for the script. ScriptParameters.Builder; setScript(String script);  ; ScriptParameters.Builder; setSystemWriters(). Set the output and error writers to use System.out and System.err. ScriptParameters.Builder; setWriter(Writer writer). Set the main output writer. ScriptParameters.Builder; useCompiled(boolean useCompiled). Request that the script is compiled before being evaluated, ; or a previously compiled version is used where available. ScriptParameters.Builder; useLogWriters(). Set the output and error writers to append to the default logger. ScriptParameters.Builder; useLogWriters(org.slf4j.Logger logger). Set the output and error writers to append to the specified logger. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. setDefaultImports; public ScriptParameters.Builder setDefaultImports(Collection<Class<?>> imports). setDefaultStaticImports; public ScriptParameters.Builder setDefaultStaticImports(Collection<Class<?>> imports). setFile; public ScriptParameters.Builder setFile(File file). setScript; public ScriptParameters.Builder setScript(String script). setSystemWriters; public ScriptParameters.Builder setSystemWriters(); Set the output and error writers to use System.out and System.err. Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(org.slf4j.Logger logger); Set the output and error writers to append to the specified logger. Parameters:; logger - ; Returns:.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html:2418,error,error,2418,javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,1,['error'],['error']
Availability,"is is based upon userDirectoryProperty and DIR_SCRIPTS. Returns:. colormapsDirectoryProperty; public ReadOnlyObjectProperty<Path> colormapsDirectoryProperty(); Read only property representing the custom colormaps directory.; This is based upon userDirectoryProperty and DIR_COLORMAPS. Returns:. getUserPath; public Path getUserPath(); Get the user path where additional files may be stored. Returns:. getRelativePathOrNull; public Path getRelativePathOrNull(String other). setUserPath; public void setUserPath(Path path); throws IllegalArgumentException; Set the user path where additional files may be stored.; Note that the specified path must exist and must represent a directory. Parameters:; path - ; Throws:; IllegalArgumentException - if the path is not null, but does not represent a valid, existing directory. getExtensionsPath; public Path getExtensionsPath(); Get the path to where extensions should be stored. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getCssStylesPath; public Path getCssStylesPath(); Get the path to where user directory for storing CSS styles. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null; Since:; v0.4.0. getLogDirectoryPath; public Path getLogDirectoryPath(); Get the path to where log files should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getLocalizationDirectoryPath; public Path getLocalizationDirectoryPath(); Get the path to where localization property files should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getColormapsDirectoryPath; public Path getColormapsDirectoryPath(); Get the path to where colormaps should be written. This depends upon userDirectoryProperty(). Returns:; the path if available, or null if getUserPath() returns null. getScri",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html:9195,avail,available,9195,javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/UserDirectoryManager.html,1,['avail'],['available']
Availability,"ise. getShowCellBoundaries; public boolean getShowCellBoundaries(); Query the current OverlayOptions.DetectionDisplayMode to see if cell boundary ROIs should be drawn. Returns:; true if nuclei should be drawn, false otherwise. setDetectionDisplayMode; public void setDetectionDisplayMode(OverlayOptions.DetectionDisplayMode mode); Set the current OverlayOptions.DetectionDisplayMode. Parameters:; mode - the requested mode to set. detectionDisplayModeProperty; public ObjectProperty<OverlayOptions.DetectionDisplayMode> detectionDisplayModeProperty(); Property representing the current OverlayOptions.DetectionDisplayMode. Returns:; See Also:. getDetectionDisplayMode(); setDetectionDisplayMode(OverlayOptions.DetectionDisplayMode). getThickStrokeWidth; public float getThickStrokeWidth(double downsample); Get the requested stroke thickness to use when drawing ROIs that should be represented with 'thick' lines (annotations, TMA cores). Parameters:; downsample - downsample at which the annotations should be drawn; Returns:; preferred stroke thickness to use. setShowTMAGrid; public void setShowTMAGrid(boolean show); Show the TMA grid on the image, if present. Parameters:; show - . setShowAnnotations; public void setShowAnnotations(boolean show); Show the annotations on the image. Parameters:; show - . setShowNames; public void setShowNames(boolean show); Show the object names on the image. Parameters:; show - . setFontSize; public void setFontSize(float size); Set the requested font size for the 'Show names' option. Parameters:; size - . setShowDetections; public void setShowDetections(boolean show); Show the objects as an overlay on the image. Parameters:; show - . setShowPixelClassification; public void setShowPixelClassification(boolean show); Show pixel classification overlays. Parameters:; show - . setFillDetections; public void setFillDetections(boolean fill); Show detection objects 'filled' in viewers. Parameters:; fill - . setFillAnnotations; public void setFillAnnotatio",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html:11533,down,downsample,11533,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.html,2,['down'],['downsample']
Availability,"it, and then restores the previous maximum dimensions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GuiTools; public GuiTools(). Method Details. createMoreButton; public static Button createMoreButton(ContextMenu menu,; Side side); Create a Button with a standardized icon and tooltip text to indicate 'More', ; which triggers a ContextMenu when clicked. Parameters:; menu - context menu to display on click; side - preferred side at which the context menu should be displayed; Returns:; an initialized button with icon, tooltip and onAction event to trigger the context menu. showParameterDialog; public static boolean showParameterDialog(String title,; ParameterList params); Show a (modal) dialog for a specified ParameterList. Parameters:; title - ; params - ; Returns:; False if the user pressed 'cancel', true otherwise. showNoImageError; public static void showNoImageError(String title); Show an error message that no image is available. This is included to help; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Show an error message that no project is available. This is included to help; standardize the message throughout the software. Parameters:; title - . browseDirectory; public static boolean browseDirectory(File file); Open the directory containing a file for browsing. Parameters:; file - ; Returns:. createListSelectionView; public static <T>; org.controlsfx.control.ListSelectionView<T> createListSelectionView(); Create a new ListSelectionView.; This should be used instead of simply calling the constructor whenever the ListSelectionView; is expected to respond well to styles, since ControlsFX's default will stubbornly use black arrows ; to move between source and target lists. Type Parameters:; T - ; Returns:; Since:; v0.4.0; See Also:. ensureDuplicatableGlyph(",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html:7500,error,error,7500,javadoc/docs/qupath/lib/gui/tools/GuiTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html,2,"['avail', 'error']","['available', 'error']"
Availability,"it, wait. Constructor Details. QuPathViewerPlus; public QuPathViewerPlus(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions,; ViewerPlusDisplayOptions viewerDisplayOptions); Create a new viewer. Parameters:; regionStore - store used to tile caching; overlayOptions - overlay options to control the viewer display; viewerDisplayOptions - viewer options to control additional panes and labels. Method Details. initializeForServer; public void initializeForServer(ImageServer<BufferedImage> server). Overrides:; initializeForServer in class QuPathViewer. isLocationVisible; public boolean isLocationVisible(); Returns true if the cursor location is visible, false otherwise. Returns:. isScalebarVisible; public boolean isScalebarVisible(); Returns true if the scalebar is visible, false otherwise. Returns:. isOverviewVisible; public boolean isOverviewVisible(); Returns true if the image overview is visible, false otherwise. Returns:. setSlidersPosition; public void setSlidersPosition(boolean down); Sets the Z and T sliders' position to allow space for command bar. Parameters:; down - . closeViewer; public void closeViewer(); Description copied from class: QuPathViewer; Request that this viewer is closed.; This unbinds the viewer from any properties it may be observing,; and also triggers QuPathViewerListener.viewerClosed(QuPathViewer) calls for ; any viewer listeners. Overrides:; closeViewer in class QuPathViewer. updateAffineTransform; protected void updateAffineTransform(). Overrides:; updateAffineTransform in class QuPathViewer. repaintEntireImage; public void repaintEntireImage(); Description copied from class: QuPathViewer; Request that the entire image is repainted, including the thumbnail.; This should be called whenever a major change in display is triggered, such as ; changing the brightness/contrast or lookup table.; Otherwise, QuPathViewer.repaint() is preferable. Overrides:; repaintEntireImage in class QuPathViewer; See Also:. QuPathViewer.repaint(). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html:5132,down,down,5132,javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewerPlus.html,2,['down'],['down']
Availability,"iter;  ; getExtensions() - Method in class qupath.lib.images.writers.PngWriter;  ; getExtensions() - Method in class qupath.lib.scripting.languages.ScriptLanguage. Get an unmodifiable set containing the possible extensions for this language. getExtensionsDirectory() - Method in class qupath.lib.gui.ExtensionClassLoader. Directory containing extensions. getExtensionsPath() - Method in class qupath.lib.gui.UserDirectoryManager. Get the path to where extensions should be stored. getEyeFixatedIfRequired() - Method in class qupath.lib.gui.viewer.recording.ViewTracker;  ; getEyePointIfRequired() - Method in class qupath.lib.gui.viewer.recording.ViewTracker;  ; getFailedExtensions() - Method in class qupath.lib.gui.ExtensionManager;  ; getFeature(int) - Method in class qupath.lib.analysis.features.HaralickFeatures. Get the value of the specified feature. getFeatureImportance() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier. Request the variable importance values from the last trained RTrees classifier, if available. getFeatureName(int) - Method in class qupath.lib.analysis.features.HaralickFeatures. Get the name of the specified feature. getFeatureNames() - Method in interface qupath.opencv.ml.objects.features.FeatureExtractor;  ; getFeatureOp() - Method in class qupath.process.gui.commands.ml.PixelClassifierTraining. Get an ImageDataOp used for feature calculation. getFile() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the file associated with this ViewTracker. getFile() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer. Get the underlying file. getFile() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Get a File object representing the local image file - or null if no file could be found. getFile() - Method in class qupath.lib.scripting.ScriptParameters. Get the file where the script is located. getFilesOnly() - Method in class qupath.lib.images.servers.bioformats.Bi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:391870,avail,available,391870,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"ith the same number or fewer than the input. createSharedTileBoundaryMerger; public static ObjectMerger createSharedTileBoundaryMerger(double sharedBoundaryThreshold); Create an object merger that uses a shared boundary IoU criterion and default overlap tolerance.; ; Objects will be merged if they a common boundary and have the same classification.; A small overlap tolerance is used to compensate for sub-pixel misalignment of tiles.; ; This is intended for post-processing a tile-based segmentation, where the tiling has been strictly enforced; (i.e. any objects have been clipped to non-overlapping tile boundaries). Parameters:; sharedBoundaryThreshold - minimum intersection-over-union (IoU) proportion of the possibly-clipped boundary; for merging; Returns:; an object merger that uses a shared boundary criterion; See Also:. createSharedTileBoundaryMerger(double, double). createSharedTileBoundaryMerger; public static ObjectMerger createSharedTileBoundaryMerger(double sharedBoundaryThreshold,; double overlapTolerance); Create an object merger that uses a shared boundary IoU criterion and overlap tolerance.; ; Objects will be merged if they share a common boundary and have the same classification.; A small overlap tolerance can be used to compensate for slight misalignment of tiles.; ; After identifying a common boundary line between ROIs, the ROI boundaries are intersected with the line,; and the two intersections are subsequently intersected with each other to determine the shared intersection.; The length of the shared intersection is then used to compute the intersection over union.; ; This is intended for post-processing a tile-based segmentation, where the tiling has been strictly enforced; (i.e. any objects have been clipped to non-overlapping tile boundaries). Parameters:; sharedBoundaryThreshold - minimum intersection-over-union (IoU) proportion of the possibly-clipped boundary; * for merging; overlapTolerance - amount of overlap allowed between objects, in pixe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/utils/ObjectMerger.html:3524,toler,tolerance,3524,javadoc/docs/qupath/lib/objects/utils/ObjectMerger.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/utils/ObjectMerger.html,1,['toler'],['tolerance']
Availability,"ithin an image. Parameters:; mat - image containing maxima; must be 2D and single-channel; mask - optional mask; Returns:. getMaskedPixels; public static List<OpenCVTools.IndexedPixel> getMaskedPixels(Mat mat,; Mat mask); Extract all the masked pixels within an image. Parameters:; mat - input image; must be single-channel; mask - mask of the same size as mat; Returns:; list of pixels, including their indices and values. extractMaskedFloats; public static float[] extractMaskedFloats(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pixels should be extracted; mask - the mask to apply to the input; channel - the channel index (zero-based) to consider; Returns:; a float array containing the values of the input filtered by the mask; Throws:; IllegalArgumentException - when the input and the mask don't have the same dimensions. extractMaskedDoubles; public static double[] extractMaskedDoubles(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pixels should be extracted; mask - the mask to apply to the input; channel - the channel index (zero-based) to consider; Returns:; a double array containing the values of the input filtered by the mask; Throws:; IllegalArgumentException - when the input and the mask don't have the same dimensions. shrinkLabels; public static Mat shrinkLabels(Mat mat); Shrink labels to a ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:44581,mask,mask,44581,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html,4,['mask'],['mask']
Availability,"ixelProcessor (QuPath 0.5.0). JavaScript is disabled on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.experimental.pixels; Class PixelProcessor<S,T,U>. java.lang.Object; qupath.lib.experimental.pixels.PixelProcessor<S,T,U>. Type Parameters:; S - The type of image to process; T - The type of mask to use; often the same as S; U - The type of output to generate. public class PixelProcessor<S,T,U>; extends Object; A class for tiled image processing.; ; The aim of this class is to make it easy to write pixel-based processing algorithms using a variety; of different image representations, and also to run these in parallel.; . There are four main components:; ; An ImageSupplier that provides the image data; A MaskSupplier that can generate binary masks that correspond to the image; A Processor that processes the image data; An OutputHandler that handles the output of the Processor. The idea is that the Processor is the only component that needs to be written for a specific task...; and it is usually the fun bit to work on.; ; The other components are often very tedious to write and hard to get working correctly; also, there is much; overlap in the functionality required for different tasks.; For these reasons, we provide several default implementations here, written to support different image; representations.; . Since:; v0.5.0. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; PixelProcessor.Builder<S,T,U>. Builder class for a PixelProcessor. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static <S,; T,; U> PixelProcessor.Builder<S,T,U>; builder(). Create a new builder to construct a PixelProcessor. void; processObjects(Image",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.html:996,mask,masks,996,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.html,1,['mask'],['masks']
Availability,"ixelSize). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; classifyObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass). Classify the objects in the specified collection. Map<String,Integer>; getMissingFeatures(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects). Check for missing features, returning the names and number of input objects missing the specified features. Collection<PathClass>; getPathClasses(). Get the classifications set by this classifier. Collection<URI>; getURIs(). Get all the URIs required for this resource. protected int; tryToClassify(List<? extends PathObject> pathObjects,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier). Try to classify a batch of objects. protected boolean; tryToClassify(PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier);  ; boolean; updateURIs(Map<URI,URI> replacements). Update the specified URIs. Methods inherited from class qupath.lib.classifiers.object.AbstractObjectClassifier; classifyObjects, getCompatibleObjects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. DnnObjectClassifier; public DnnObjectClassifier(PathObjectFilter filter,; DnnModel model,; List<PathClass> pathClasses,; int width,; int height,; double requestedPixelSize); Constructor. Parameters:; filter - filter to select compatible options; model - wrapper for the DNN model, including optional preprocessing; pathClasses - ordered list of classifications, corresponding to the predicted labels; width - patch width, in pixels, at the classification size; height - patch height, in pixels, at the class",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html:2188,down,downsample,2188,javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,1,['down'],['downsample']
Availability,"j.gui.IJExtension. Similar to IJExtension.extractROI(ImageServer, ROI, RegionRequest, boolean), except that the title of the ImagePlus is set according to the parent object type (which is used to get the ROI). extractROI(ImageServer<BufferedImage>, ROI, RegionRequest, boolean) - Static method in class qupath.imagej.gui.IJExtension. Extract a region of interest from an image as an ImageJ ImagePlus. extractROIWithOverlay(ImageServer<BufferedImage>, PathObject, PathObjectHierarchy, RegionRequest, boolean, OverlayOptions) - Static method in class qupath.imagej.gui.IJExtension. Extract an image region as an ImagePlus, optionally setting ImageJ Rois corresponding to QuPath objects. extractServerBuilder(Path) - Static method in class qupath.lib.io.PathIO. Extract a ImageServerBuilder.ServerBuilder from a serialized .qpdata file. extractZStack(ImageServer<BufferedImage>, RegionRequest) - Static method in class qupath.opencv.tools.OpenCVTools. Extract a list of Mats, where each Mat corresponds to a z-slice, for all available z-slices of a region. extractZStack(ImageServer<BufferedImage>, RegionRequest, int, int) - Static method in class qupath.opencv.tools.OpenCVTools. Extract a list of Mats, where each Mat corresponds to a z-slice. eyeTrackingProperty() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the eyeTracking property of this tracker. F. factory(GeometryFactory) - Method in class qupath.lib.roi.GeometryTools.GeometryConverter.Builder. Specify the GeometryFactory, which can define a precision model in JTS. FEATURE - Enum constant in enum class qupath.lib.images.servers.ImageServerMetadata.ChannelType. Each channel represents a feature for a pixel classifier. FEATURE_COLLECTION - Enum constant in enum class qupath.lib.io.PathIO.GeoJsonExportOptions. Request that objects are export as a FeatureCollection. FeatureCollection - Class in qupath.lib.io. Class to wrap a collection of objects to indicate they should be export as a GeoJSON ""FeatureCollectio",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:297976,avail,available,297976,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"ject contains any images. void; removeAllImages(Collection<ProjectImageEntry<T>> entries,; boolean removeAllData). Remove multiple images from the project, optionally including associated data. void; removeImage(ProjectImageEntry<?> entry,; boolean removeAllData). Remove an image from the project, optionally including associated data. void; setMaskImageNames(boolean maskNames). Request that entries return masked image names, rather than the 'true' image names. boolean; setPathClasses(Collection<? extends PathClass> pathClasses). Update the available PathClasses. void; syncChanges(). Save the project. Method Details. getPathClasses; List<PathClass> getPathClasses(); Get an unmodifiable list representing the PathClasses associated with this project. Returns:. getMaskImageNames; boolean getMaskImageNames(); Query whether 'true' or masked image names are being returned. Returns:; See Also:. setMaskImageNames(boolean). setMaskImageNames; void setMaskImageNames(boolean maskNames); Request that entries return masked image names, rather than the 'true' image names.; ; The purpose of this is to support studies where the user ought not to see the image names during analysis, ; reducing the potential for user bias. Parameters:; maskNames - ; See Also:. getMaskImageNames(). setPathClasses; boolean setPathClasses(Collection<? extends PathClass> pathClasses); Update the available PathClasses. Parameters:; pathClasses - ; Returns:; true if the stored values changed, false otherwise. getURI; URI getURI(); Get a URI that can be used when saving/reloading this project. Returns:. getPreviousURI; URI getPreviousURI(); Sometimes projects move (unfortunately). This returns the previous URI, if known - ; which can be helpful for resolving relative paths to images in the event that ; both project and images have moved together. Returns:. getNameFromURI; static String getNameFromURI(URI uri); Extract a usable project name from a URI. Parameters:; uri - ; Returns:. getVersion; String getVers",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/projects/Project.html:3755,mask,maskNames,3755,javadoc/docs/qupath/lib/projects/Project.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/Project.html,2,['mask'],"['maskNames', 'masked']"
Availability,"ject, including original information; downsampleFactor - the downsample factor of the original image; plane - plane defining c, z and t indices; Returns:. getImagePlane; public static ImagePlane getImagePlane(Roi roi,; ImagePlus imp); Get the ImagePlane of an ImageJ Roi, based upon its stored positions. Parameters:; roi - ImageJ roi that may have c, z, t or position properties set.; imp - associated image; if not null, this will be used to convert the Roi's 'position' property, if non-zero; Returns:; the ImagePlane that is the best approximation of this Roi's position. convertToROI; public static <T extends PathImage<? extends ImagePlus>>; ROI convertToROI(Roi roi,; T pathImage); Create a ROI from an ImageJ Roi. Parameters:; roi - ; pathImage - ; Returns:. convertToPolygonROI; public static PolygonROI convertToPolygonROI(PolygonRoi roi,; Calibration cal,; double downsampleFactor,; ImagePlane plane); Convert an ImageJ PolygonRoi to a QuPath PolygonROI. Parameters:; roi - ; cal - ; downsampleFactor - ; plane - ; Returns:. convertToIJRoi; public static <T extends PathImage<ImagePlus>> Roi convertToIJRoi(ROI pathROI,; double xOrigin,; double yOrigin,; double downsampleFactor); Convert a QuPath ROI to an ImageJ Roi. Type Parameters:; T - ; Parameters:; pathROI - ; xOrigin - x-origin indicating relationship of ImagePlus to the original image, as stored in ImageJ Calibration object; yOrigin - y-origin indicating relationship of ImagePlus to the original image, as stored in ImageJ Calibration object; downsampleFactor - downsample factor at which the ImagePlus was extracted from the full-resolution image; Returns:. convertToROI; public static ROI convertToROI(Roi roi,; double xOrigin,; double yOrigin,; double downsampleFactor,; ImagePlane plane); Create a ROI from an ImageJ Roi. Parameters:; roi - ImageJ Roi; xOrigin - x-origin, as stored in an ImageJ Calibration object; yOrigin - y-origin, as stored in an ImageJ Calibration object; downsampleFactor - ; plane - plane definin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:25269,down,downsampleFactor,25269,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,1,['down'],['downsampleFactor']
Availability,"ject; implements Serializable; ROI representing an arbitrary closed polygon. Author:; Pete Bankhead; See Also:. PolylineROI; Serialized Form. Nested Class Summary. Nested classes/interfaces inherited from interface qupath.lib.roi.interfaces.ROI; ROI.RoiType. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid. ROI; getConvexHull(). Default implementation using JTS. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. double; getLength(). Get ROI length. int; getNumPoints(). Default implementation, calls ROI.getAllPoints() and then caches the result. String; getRoiName(). Get a String representation of the kind of ROI we have, ; e.g. ROI.RoiType; getRoiType(). Get the RoiType, used to distinguish between points, lines and areas. double; getScaledArea(double pixelWidth,; double pixelHeight). Get scaled area of the ROI, for use with calibrated pixel sizes. double; getScaledLength(double pixelWidth,; double pixelHeight). Get the scaled length, for use with calibrated pixel sizes. Shape; g",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html:1512,avail,available,1512,javadoc/docs/qupath/lib/roi/PolygonROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolygonROI.html,1,['avail'],['available']
Availability,"jects.PathObject. Get a defensive copy of child objects as an array. getChoiceParameterValue(String) - Method in class qupath.lib.plugins.parameters.ParameterList. Get a choice parameter value (or its default) for the specified key. getChoices() - Method in class qupath.lib.plugins.parameters.ChoiceParameter. Get a list of available choices. getChooser(Window) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Get a QuPathChooser instance linked to a specific window. getCircularity(ROI) - Static method in class qupath.lib.roi.RoiTools. Get circularity measurement for Area ROIs, calculated as 4 * PI * (area / perimeter^2). getCircularity(ROI, double, double) - Static method in class qupath.lib.roi.RoiTools. Get circularity measurement for area ROIs, with optional pixel calibration, calculated as 4 * PI * (area / perimeter^2). getCircularStructuringElement(int) - Static method in class qupath.opencv.tools.OpenCVTools. Deprecated.; OpenCVTools.createDisk(int, boolean) gives more reliable shapes. getCitationUrl() - Static method in class qupath.lib.gui.Urls. Get a URL pointing to a page that explains how to cite this version of QuPath in a publication. getClassification(ImageServer<BufferedImage>, int, int, int, int) - Static method in class qupath.opencv.ml.pixel.PixelClassifierTools. Request the classification for a specific pixel. getClassificationLabels() - Method in class qupath.lib.classifiers.pixel.PixelClassifierMetadata. Map between integer labels and classifications. getClassificationLabels() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get map between labels and classification names. getClassifications() - Method in class qupath.lib.objects.PathObject. Get the components of the PathClass as an unmodifiable set. getClassifier() - Method in class qupath.lib.classifiers.pixel.PixelClassificationImageServer. Get the PixelClassifier performing the classification. getClassifyBoundaryStrategy(PathClass, double) - Static method ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:353040,reliab,reliable,353040,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['reliab'],['reliable']
Availability,"jects.Projects. Create a new project using the local file system. createProjectAction(Consumer<Project<BufferedImage>>) - Method in class qupath.lib.gui.QuPathGUI. Create an Action that depends upon a Project. createPropertySheetItem(Property<T>, Class<? extends T>) - Static method in class qupath.lib.gui.panes.PreferencePane. Deprecated.; use PropertyItemBuilder instead. createRandomRectangle(ImageRegion, double, double) - Static method in class qupath.lib.roi.RoiTools. Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. createRandomRectangle(ImageRegion, double, double, Random) - Static method in class qupath.lib.roi.RoiTools. Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. createRandomRectangle(ROI, double, double) - Static method in class qupath.lib.roi.RoiTools. Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI. createRandomRectangle(ROI, double, double, int, boolean, Random) - Static method in class qupath.lib.roi.RoiTools. Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI, ; using a specified maximum number of attempts. createRecentCommandsDialog(QuPathGUI) - Static method in class qupath.lib.gui.tools.CommandFinderTools. Create a dialog showing a filtered list of recently-used commands, for fast selection. createRecentItemsMenu(String, ObservableList<URI>, Consumer<URI>) - Static method in class qupath.lib.gui.tools.GuiTools. Create a menu that displays recent items, stored in the form of URIs, using default text to show for the menu item. createRecentItemsMenu(String, ObservableList<URI>, Consumer<URI>, Function<URI, String>) - Static method in class qupath.lib.gui.tools.GuiTools. Create a menu that displays recent items, stored in the form of URIs, cu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:213565,mask,mask,213565,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['mask'],['mask']
Availability,"k - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; Returns:; See Also:. computeArgMaxHistogram(WritableRaster, long[], WritableRaster, Rectangle). computeArgMaxHistogram; public static long[] computeArgMaxHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask,; Rectangle bounds); Create a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion, ; with an optional bounding rectangle. Parameters:; raster - the multi-band raster containing values to check; counts - existing histogram if it should be updated, or null if a new histogram should be created. The length should ; match the number of bands in the raster.; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; bounds - optional rectangle defining the bounds of the raster to search.; If not null, this is used with the (also optional) mask to restrict the pixels that are used.; This can give substantial performance improvements for small masked regions embedded in larger images.; Returns:; See Also:. computeArgMaxHistogram(WritableRaster, long[], WritableRaster). computeAboveThresholdCounts; public static long computeAboveThresholdCounts(WritableRaster raster,; int band,; double threshold,; WritableRaster rasterMask); Count the number of above-threshold pixels in a specified band of a raster, with optional mask. Parameters:; raster - the multi-band raster containing values to check; band - the band (channel) to consider; threshold - threshold value; pixels with values > threshold this will be counted; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; Returns:; See Also:. computeAboveThresholdCounts(WritableRaster, int, double, WritableRaster, Rectangle). computeAboveThresholdCounts; public static long computeAboveThresholdCounts(WritableRaste",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:13307,mask,mask,13307,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,1,['mask'],['mask']
Availability,"k supplier. MaskSupplier<S,T> - Interface in qupath.lib.experimental.pixels. A functional interface for supplying a mask corresponding to an image. MATCH_VIEWER_RESOLUTIONS - Variable in class qupath.lib.gui.actions.ViewerActions;  ; matchByID(Collection<? extends PathObject>, Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Match objects according to their IDs. matchClassName(String...) - Method in class qupath.imagej.images.servers.ImageJServerBuilder;  ; matchClassName(String...) - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; matchClassName(String...) - Method in interface qupath.lib.images.servers.ImageServerBuilder. Check if this provider matches one or more specified classnames. matchClassName(String...) - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; matchResolutions() - Method in class qupath.lib.gui.viewer.ViewerManager. Match the display resolutions (downsamples) of all viewers to match the current viewer. matToBufferedImage(Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Convert a Mat to a BufferedImage. matToBufferedImage(Mat, ColorModel) - Static method in class qupath.opencv.tools.OpenCVTools. Convert a Mat to a BufferedImage. matToImagePlus(String, Mat...) - Static method in class qupath.opencv.tools.OpenCVTools. Convert an OpenCV MatVector into an ImageJ ImagePlus. matToImagePlus(Mat, String) - Static method in class qupath.opencv.tools.OpenCVTools. Convert an OpenCV Mat into an ImageJ ImagePlus. matToImageProcessor(Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Convert a single-channel OpenCV Mat into an ImageJ ImageProcessor. matToSimpleImage(Mat, int) - Static method in class qupath.opencv.tools.OpenCVTools. Convert a Mat to a SimpleImage. max() - Static method in class qupath.lib.experimental.pixels.MeasurementProcessor.Functions. Create a function to calculate the maximum value of an array. max(Mat) - ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:674557,down,downsamples,674557,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['down'],['downsamples']
Availability,"l be used to convert the Roi's 'position' property, if non-zero; Returns:; the ImagePlane that is the best approximation of this Roi's position. convertToROI; public static <T extends PathImage<? extends ImagePlus>>; ROI convertToROI(Roi roi,; T pathImage); Create a ROI from an ImageJ Roi. Parameters:; roi - ; pathImage - ; Returns:. convertToPolygonROI; public static PolygonROI convertToPolygonROI(PolygonRoi roi,; Calibration cal,; double downsampleFactor,; ImagePlane plane); Convert an ImageJ PolygonRoi to a QuPath PolygonROI. Parameters:; roi - ; cal - ; downsampleFactor - ; plane - ; Returns:. convertToIJRoi; public static <T extends PathImage<ImagePlus>> Roi convertToIJRoi(ROI pathROI,; double xOrigin,; double yOrigin,; double downsampleFactor); Convert a QuPath ROI to an ImageJ Roi. Type Parameters:; T - ; Parameters:; pathROI - ; xOrigin - x-origin indicating relationship of ImagePlus to the original image, as stored in ImageJ Calibration object; yOrigin - y-origin indicating relationship of ImagePlus to the original image, as stored in ImageJ Calibration object; downsampleFactor - downsample factor at which the ImagePlus was extracted from the full-resolution image; Returns:. convertToROI; public static ROI convertToROI(Roi roi,; double xOrigin,; double yOrigin,; double downsampleFactor,; ImagePlane plane); Create a ROI from an ImageJ Roi. Parameters:; roi - ImageJ Roi; xOrigin - x-origin, as stored in an ImageJ Calibration object; yOrigin - y-origin, as stored in an ImageJ Calibration object; downsampleFactor - ; plane - plane defining c, z and t indices; Returns:. convertToOpticalDensitySum; public static FloatProcessor convertToOpticalDensitySum(ColorProcessor cp,; double maxRed,; double maxGreen,; double maxBlue); Calculate optical density values for the red, green and blue channels, then add these all together. Parameters:; cp - ; maxRed - ; maxGreen - ; maxBlue - ; Returns:. colorDeconvolve; public static FloatProcessor[] colorDeconvolve(ColorProcessor ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:25792,down,downsampleFactor,25792,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,2,['down'],"['downsample', 'downsampleFactor']"
Availability,"l if a new histogram should be created. The length should ; match the number of bands in the raster.; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; bounds - optional rectangle defining the bounds of the raster to search.; If not null, this is used with the (also optional) mask to restrict the pixels that are used.; This can give substantial performance improvements for small masked regions embedded in larger images.; Returns:; See Also:. computeArgMaxHistogram(WritableRaster, long[], WritableRaster). computeAboveThresholdCounts; public static long computeAboveThresholdCounts(WritableRaster raster,; int band,; double threshold,; WritableRaster rasterMask); Count the number of above-threshold pixels in a specified band of a raster, with optional mask. Parameters:; raster - the multi-band raster containing values to check; band - the band (channel) to consider; threshold - threshold value; pixels with values > threshold this will be counted; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; Returns:; See Also:. computeAboveThresholdCounts(WritableRaster, int, double, WritableRaster, Rectangle). computeAboveThresholdCounts; public static long computeAboveThresholdCounts(WritableRaster raster,; int band,; double threshold,; WritableRaster rasterMask,; Rectangle bounds); Count the number of above-threshold pixels in a specified band of a raster, with optional mask and/or bounding rectangle. Parameters:; raster - the multi-band raster containing values to check; band - the band (channel) to consider; threshold - threshold value; pixels with values > threshold this will be counted; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; bounds - optional rectangle defining the bounds of the raster to search.; If not null, this is used with the (also optional) mask to re",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:14024,mask,mask,14024,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,2,['mask'],['mask']
Availability,"l layer overlay, or null if it has not be set. double; getDefaultZoomFactor(). The amount by which the downsample factor is scaled for one increment of zoomIn() or ; zoomOut(). protected Shape; getDisplayedClipShape(Shape clip). Transform a clip shape into image coordinates for this viewer. Shape; getDisplayedRegionShape(). Get a shape corresponding to the region of the image currently visible in this viewer. double; getDownsampleFactor(). Get the current downsample factor. protected String; getFullLocationString(boolean useCalibratedUnits). Get a string to summarize the pixel found below the most recent known mouse location, ; or """" if the mouse is outside this viewer. double; getFullMagnification(). Get the full magnification for the image. double; getGamma(). Get the gamma value used for this viewer. LookupOp; getGammaOp(). Get a LookupOp that can perform any requested gamma correction in this viewer. PathObjectHierarchy; getHierarchy(). Get the object hierarchy for the current image data, or null if no image data is available. ImageData<BufferedImage>; getImageData(). Get the image data currently being displayed within thie viewer. ImageDisplay; getImageDisplay(). Get the ImageDisplay object used to determine how the image is converted to RGB for display. String; getImageObjectClassificationString(double x,; double y). Get a string representing the object classification x & y location in the viewer component,; or an empty String if no object is found. ImagePlane; getImagePlane(). Get the ImagePlane currently being displayed, including z and t positions. DefaultImageRegionStore; getImageRegionStore(). Get the region store used by this viewer for tile caching and painting. double; getMagnification(). Get the magnification for the image within this viewer, or Double.NaN if no image is present. double; getMaxDownsample(). Get the maximum downsample value supported by this viewer. double; getMaxROIHandleSize(). Get the maximum size for which ROI handles may be drawn.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:5013,avail,available,5013,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,1,['avail'],['available']
Availability,"l to the threshold. equalTo(PathClass) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification for objects for which the specified measurement has a value exactly equal to the threshold. error() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create an error alert dialog. error(String) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text. error(String, int) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text and a count. error(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a error message to show a count of errors. error(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message. error(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with a count. ERROR - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Error or exception. ERROR - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Error logging (only if something goes recognizably wrong). escapeFilePath(String) - Static method in class qupath.lib.common.GeneralTools. Escape backslashes in an absolute file path - useful when scripting. estimateAvailableMemory() - Static method in class qupath.lib.common.GeneralTools. Estimate the current available memory in bytes, based upon the JVM max and the memory currently used. estimateCellBoundary(Geometry, double, double) - Static method in class qupath.lib.objects.CellTools. Estimate a cell boundary using Geometry objects. estimateDownsampleFactor(ImagePlus, ImageServer<?>) - Static method in class qupath.imagej.tools.IJTools. Estimate the downsample factor for an image region extracted from an image server, based upon ; the ratio of pixel sizes if possible or ratio of d",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:283773,error,error,283773,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['error'],['error']
Availability,"l) mat; fun - the consumer to apply. matToBufferedImage; public static BufferedImage matToBufferedImage(Mat mat); Convert a Mat to a BufferedImage.; ; This is equivalent to matToBufferedImage(mat, null);; As such, the ColorModel may or may not end up being something useful. Parameters:; mat - ; Returns:; See Also:. matToBufferedImage(org.bytedeco.opencv.opencv_core.Mat). matToBufferedImage; public static BufferedImage matToBufferedImage(Mat mat,; ColorModel colorModel); Convert a Mat to a BufferedImage.; ; If no ColorModel is specified, a grayscale model will be used for single-channel 8-bit ; images and RGB/ARGB for 3/4 channel 8-bit images.; ; For all other cases a ColorModel should be specified for meaningful display. Parameters:; mat - ; colorModel - ; Returns:. imageToMatRGB; public static Mat imageToMatRGB(BufferedImage img,; boolean includeAlpha); Extract 8-bit unsigned pixels from a BufferedImage as a multichannel RGB(A) Mat. Parameters:; img - input image; includeAlpha - if true, return any available alpha data as a 4th channel.; Returns:. imageToMatBGR; public static Mat imageToMatBGR(BufferedImage img,; boolean includeAlpha); Extract 8-bit unsigned pixels from a BufferedImage as a multichannel BGR(A) Mat. Parameters:; img - input image; includeAlpha - if true, return any available alpha data as a 4th channel.; Returns:. labelImage; @Deprecated; public static void labelImage(Mat matBinary,; Mat matLabels,; int contourRetrievalMode); Deprecated.; Use label(Mat, Mat, int) instead. Create a labelled image from a binary image using findContours and drawContours. Parameters:; matBinary - ; matLabels - ; contourRetrievalMode - defined within OpenCV findContours. addNoise; public static void addNoise(Mat mat,; double mean,; double stdDev); Add Gaussian noise with specified mean and standard deviation to all channels of a Mat.; This is similar to opencv_core.randn(Mat, Mat, Mat), but supports any number of channels. Parameters:; mat - image to which noise should b",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:20777,avail,available,20777,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html,1,['avail'],['available']
Availability,"lArgumentException; Build a file path from multiple components.; A common use of this is; ; String path = buildFilePath(PROJECT_BASE_DIR, ""export"");; ; although that can now be replaced by buildPathInProject(String...). Parameters:; first - the first component of the file path; more - additional path components to append; Returns:; Throws:; IllegalArgumentException - if PROJECT_BASE_DIR is used but no project is available; See Also:. buildPathInProject(String...); makePathInProject(String...); makeFileInProject(String...). buildPathInProject; public static String buildPathInProject(String... more); throws IllegalArgumentException; Build a file or directory path relative to the current project, but do not make ; any changes on the file system.; This is equivalent to calling; ; String path = buildFilePath(PROJECT_BASE_DIR, more);; . If you want to additionally create the directory, see makePathInProject(String...). Parameters:; more - additional path components to append; Returns:; Throws:; IllegalArgumentException - if no project path is available; Since:; v0.4.0; See Also:. makePathInProject(String...); makeFileInProject(String...). makePathInProject; public static String makePathInProject(String... more); throws IllegalArgumentException; Build a file or directory path relative to the current project, and ensure that it exists.; If it does not, an attempt will be made to create a directory with the specified name, ; and all necessary parent directories.; ; This is equivalent to calling; ; String path = buildPathInProject(PROJECT_BASE_DIR, more);; mkdirs(path);; . Note that if you need a file and not a directory, see makeFileInProject(String...). Parameters:; more - additional path components to append; Returns:; Throws:; IllegalArgumentException - if no project path is available; Since:; v0.4.0; See Also:. buildPathInProject(String...); makeFileInProject(String...). makeFileInProject; public static File makeFileInProject(String... more); throws IllegalArgumentExcepti",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:52846,avail,available,52846,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['avail'],['available']
Availability,"lLocation; public void setCenterPixelLocation(double x,; double y); Set the image pixel to display in the center of the viewer (using image pixel coordinates at the full-resolution). Parameters:; x - ; y - . centerROI; public void centerROI(ROI roi); Center the specified ROI in the viewer. Parameters:; roi - . updateAffineTransform; protected void updateAffineTransform(). setRotation; public void setRotation(double theta); Set the rotation; angle in radians. Parameters:; theta - . isRotated; public boolean isRotated(); Returns true if viewer.getRotation() != 0. Returns:; isRotated. getRotation; public double getRotation(); Get the current rotation; angle in radians. Returns:; rotation in radians. rotationProperty; public DoubleProperty rotationProperty(); Return the rotation property of this viewer. Returns:; rotation property; See Also:. getRotation(); setRotation(double). tileAvailable; public void tileAvailable(String serverPath,; ImageRegion region,; BufferedImage tile); Description copied from interface: TileListener; Notify a listener that an image tile has been received read & is available. Specified by:; tileAvailable in interface TileListener<BufferedImage>; Parameters:; serverPath - ; region - ; tile - . forceOverlayUpdate; public void forceOverlayUpdate(); Force the overlay displaying detections and annotations to be repainted. Any cached versions will be thrown away, so this is useful when; some aspect of the display has changed, e.g. objects colors or fill/outline status. Due to the usefulness of caching for performance, it should; not be called too often. hierarchyChanged; public void hierarchyChanged(PathObjectHierarchyEvent event); Description copied from interface: PathObjectHierarchyListener; Notify listeners of a change in the hierarchy or its objects. Specified by:; hierarchyChanged in interface PathObjectHierarchyListener; Parameters:; event - . selectedPathObjectChanged; public void selectedPathObjectChanged(PathObject pathObjectSelected,; Path",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:35440,avail,available,35440,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,1,['avail'],['available']
Availability,"lParams.Builder - Class in qupath.opencv.dnn. Builder for DnnModelParams. DnnModels - Class in qupath.opencv.dnn. Helper class for building new DnnModels. DnnModels() - Constructor for class qupath.opencv.dnn.DnnModels;  ; DnnObjectClassifier - Class in qupath.opencv.dnn. Initial implementation of a patch-based ObjectClassifier using an OpenCV-compatible DNN. DnnObjectClassifier(PathObjectFilter, DnnModel, List<PathClass>, int, int, double) - Constructor for class qupath.opencv.dnn.DnnObjectClassifier. Constructor. DnnShape - Class in qupath.opencv.dnn. Helper class to represent input and output shapes associated with PredictionFunction. DnnTools - Class in qupath.opencv.dnn. Tools for working with OpenCV's DNN module. DnnTools() - Constructor for class qupath.opencv.dnn.DnnTools;  ; DnnTools.DNNLayer - Class in qupath.opencv.dnn. Helper class to summarize a DNN layer. do8BitRangeCheck(double) - Static method in class qupath.lib.common.ColorTools. Clip an input value to be an integer in the range 0-255 (with rounding down). do8BitRangeCheck(float) - Static method in class qupath.lib.common.ColorTools. Clip an input value to be an integer in the range 0-255 (with rounding down). do8BitRangeCheck(int) - Static method in class qupath.lib.common.ColorTools. Clip an input value to be an integer in the range 0-255. DocGenerator - Class in qupath.lib.gui.tools. Command line tool to export icons and markdown documentation for QuPath commands. DocGenerator() - Constructor for class qupath.lib.gui.tools.DocGenerator;  ; doCopy() - Method in class qupath.lib.gui.FileCopier. Perform the copying. doCreateLogFilesProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request a log file to be generated. DOCS - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; doesFeatureTransform() - Method in class qupath.opencv.ml.FeaturePreprocessor. Returns true if this preprocessor transforms the features beyond a simple normalization. doesSomething() - M",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:267017,down,down,267017,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['down'],['down']
Availability,"labels. This is the default. Returns:; See Also:. useDetections(). useFilter; public LabeledImageServer.Builder useFilter(Predicate<PathObject> filter); Use a custom method of selecting objects for inclusion.; The default is to use annotations. Parameters:; filter - the filter that determines whether an object will be included or not; Returns:; See Also:. useAnnotations(). grayscale; public LabeledImageServer.Builder grayscale(); Use grayscale LUT, rather than deriving colors from classifications.; This can streamline import in software that automatically converts paletted images to RGB. Returns:; Since:; v0.4.0; See Also:. grayscale(boolean). grayscale; public LabeledImageServer.Builder grayscale(boolean grayscaleLut); Optionally use grayscale LUT, rather than deriving colors from classifications.; This can streamline import in software that automatically converts paletted images to RGB. Parameters:; grayscaleLut - ; Returns:; Since:; v0.4.0; See Also:. grayscale(). downsample; public LabeledImageServer.Builder downsample(double downsample); Specify downsample factor. This is very important because it defines ; the resolution at which shapes will be drawn and the line thickness is determined. Parameters:; downsample - ; Returns:. tileSize; public LabeledImageServer.Builder tileSize(int tileSize); Set tile width and height (square tiles). Parameters:; tileSize - ; Returns:. tileSize; public LabeledImageServer.Builder tileSize(int tileWidth,; int tileHeight); Set tile width and height. Parameters:; tileWidth - ; tileHeight - ; Returns:. lineThickness; public LabeledImageServer.Builder lineThickness(float thickness); Thickness of boundary lines and line annotations, defined in terms of pixels at the ; resolution specified by the downsample value of the server. Parameters:; thickness - ; Returns:. useUniqueLabels; @Deprecated; public LabeledImageServer.Builder useUniqueLabels(); Deprecated.; in favor of useInstanceLabels(). Returns:. useInstanceLabels; public LabeledIma",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.Builder.html:7826,down,downsample,7826,javadoc/docs/qupath/lib/images/servers/LabeledImageServer.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.Builder.html,1,['down'],['downsample']
Availability,"lable and requested. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. DnnTools; public DnnTools(). Method Details. registerDnnModel; @Deprecated; public static <T extends DnnModel> void registerDnnModel(Class<T> subtype,; String name); Deprecated.; since v0.4.0; use DnnModels.registerDnnModel(Class, String) instead. Register a new DnnModel class for JSON serialization/deserialization. Type Parameters:; T - ; Parameters:; subtype - ; name - . builder; public static OpenCVDnn.Builder builder(String modelPath); Initiative building and configuring an OpenCVDnn.; ; Note that DnnModels.buildModel(DnnModelParams) should generally be used instead ; to create an arbitrary DnnModel, since it can potentially use different libraries ; or frameworks. Parameters:; modelPath - ; Returns:; See Also:. DnnModels.buildModel(DnnModelParams). isCudaAvailable; public static boolean isCudaAvailable(); Query whether CUDA is reported as available by OpenCV.; If it is, it will be used by default until setUseCuda(boolean) is used to turn if off. Returns:. setUseCuda; public static void setUseCuda(boolean requestUseCuda); Request that CUDA is used.; This will be ignored if isCudaAvailable() returns false, therefore the main purpose of ; this method is to disable the use of CUDA if it would otherwise be employed. Parameters:; requestUseCuda - . useCuda; public static boolean useCuda(); Returns true if CUDA is available and requested.; Classes that could potentially use CUDA should query this request before attempting to use it. Returns:; true if CUDA should be used, false otherwise. getOutputLayerNames; public static List<String> getOutputLayerNames(Net net); Get the names of all unconnected output layers. Parameters:; net - ; Returns:. getOutputLayers; public static Map<String,DnnShape> getOutputLayers(Net net,; DnnShape... inputShape); Get the names of all unconnected output layers. P",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html:5792,avail,available,5792,javadoc/docs/qupath/opencv/dnn/DnnTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html,1,['avail'],['available']
Availability,"lable for an image. Parameters:; server - ; level - ; tileRegion - ; Returns:; See Also:. createInstance(ImageServer, int, ImageRegion). createInstance; public static TileRequest createInstance(String path,; int level,; double downsample,; ImageRegion tileRegion); Create a new tile request for a specified region, downsample and resolution level.; ; Most of the time this should not be needed: use ImageServer.getTileRequestManager() instead.; ; In cases where a new TileRequest is necessary, it is better to use createInstance(ImageServer, int, ImageRegion); where possible.; The current method exists for cases where a TileRequest is a useful data structure but it isn't ; associated with a specific image. Parameters:; path - ; level - ; downsample - ; tileRegion - ; Returns:; See Also:. createInstance(ImageServer, int, ImageRegion). getRegionRequest; public RegionRequest getRegionRequest(); Get the RegionRequest that this tile represents. Returns:. getDownsample; public double getDownsample(); Get the downsample value for this tile. Returns:. getLevel; public int getLevel(); Get the resolution level. Returns:. getImageX; public int getImageX(); Get the x-coordinate of the bounding box for this tile in the full resolution image. Returns:. getImageY; public int getImageY(); Get the y-coordinate of the bounding box for this tile in the full resolution image. Returns:. getImageWidth; public int getImageWidth(); Get the width of the bounding box for this tile in the full resolution image. Returns:. getImageHeight; public int getImageHeight(); Get the height of the bounding box for this tile in the full resolution image. Returns:. getTileX; public int getTileX(); Get the x-coordinate of the bounding box for this tile at the tile resolution. Returns:. getTileY; public int getTileY(); Get the y-coordinate of the bounding box for this tile at the tile resolution. Returns:. getTileWidth; public int getTileWidth(); Get the width of the bounding box for this tile at the tile resolut",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TileRequest.html:4582,down,downsample,4582,javadoc/docs/qupath/lib/images/servers/TileRequest.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TileRequest.html,1,['down'],['downsample']
Availability,"laced by addChildObject(PathObject). void; addPathObjects(Collection<? extends PathObject> pathObjects). Deprecated.; since v0.4.0, replaced by addChildObjects(Collection). void; clearChildObjects(). Remove all child objects. protected void; clearMetadataMap(). Remove all stored metadata values. void; clearPathObjects(). Deprecated.; since v0.4.0, replaced by clearChildObjects(). protected MeasurementList; createEmptyMeasurementList(). Create a new MeasurementList of the preferred type for this object. Collection<PathObject>; getChildObjects(). Get a collection of child objects. Collection<PathObject>; getChildObjects(Collection<PathObject> children). Get a collection containing all child objects. PathObject[]; getChildObjectsAsArray(). Get a defensive copy of child objects as an array. Set<String>; getClassifications(). Get the components of the PathClass as an unmodifiable set. abstract double; getClassProbability(). Request the classification probability, or Double.NaN if no probability is available. Integer; getColor(). Return any stored color as a packed RGB value. Integer; getColorRGB(). Deprecated.; since v0.4.0, use getColor() instead. Collection<PathObject>; getDescendantObjects(Collection<PathObject> descendants). Get a collection containing all descendant objects. String; getDisplayedName(). Request an object name in a form suitable for displaying. UUID; getID(). Get the ID for this object. int; getLevel(). The level of the object in a hierarchy. MeasurementList; getMeasurementList(). Retrieve the list stored measurements for the object. Map<String,Number>; getMeasurements(). Get a map-based view on getMeasurementList(). Map<String,String>; getMetadata(). Get a key/value pair map for object metadata. String; getName(). Request the stored object name. PathObject; getParent(). Request the parent object. abstract PathClass; getPathClass(). Get the classification of the object. abstract ROI; getROI(). Get the region of interest (ROI) for the object. protected ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html:2420,avail,available,2420,javadoc/docs/qupath/lib/objects/PathObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObject.html,1,['avail'],['available']
Availability,"lap). Create a collection of tiled ROIs corresponding to a specified parentROI if it is larger than sizeMax, with optional overlaps. static ROI; createRandomRectangle(ImageRegion mask,; double width,; double height). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. static ROI; createRandomRectangle(ImageRegion mask,; double width,; double height,; Random random). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. static ROI; createRandomRectangle(ROI mask,; double width,; double height). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI. static ROI; createRandomRectangle(ROI mask,; double width,; double height,; int maxAttempts,; boolean permitErosion,; Random random). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI, ; using a specified maximum number of attempts. static ROI; difference(ROI roi1,; ROI roi2). Compute the difference between two ROIs. static ROI; fillHoles(ROI roi). Fill the holes of an Area ROI, or return the ROI unchanged if it contains no holes. static Area; getArea(ROI roi). Get an Area object representing a ROI. static double; getBoundaryDistance(ROI roi1,; ROI roi2). Get the Euclidean distance between the boundaries of two ROIs. static double; getBoundaryDistance(ROI roi1,; ROI roi2,; double pixelWidth,; double pixelHeight). Get the calibrated Euclidean distance between the boundaries of two ROIs using specified pixel sizes. static double; getCentroidDistance(ROI roi1,; ROI roi2). Get the Euclidean distance between the centroids of two ROIs. static double; getCentroidDistance(ROI roi1,; ROI roi2,; double pixelWidth,; double pixelHeight). Get the calibrated Euclidean distance between the centroids of two ROIs using specified pixel sizes. st",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:2569,mask,mask,2569,javadoc/docs/qupath/lib/roi/RoiTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html,1,['mask'],['mask']
Availability,"laplacianOfGaussian; public MultiscaleFeatures.MultiscaleResultsBuilder laplacianOfGaussian(boolean calculate); Calculate the Laplacian of Gaussian image. Parameters:; calculate - ; Returns:. hessianEigenvalues; public MultiscaleFeatures.MultiscaleResultsBuilder hessianEigenvalues(boolean calculate); Calculate the eigenvalues of the Hessian matrix per pixel. Parameters:; calculate - ; Returns:. retainHessian; public MultiscaleFeatures.MultiscaleResultsBuilder retainHessian(boolean retain); Optionally retain the Hessian matrix per pixel.; This provides an opportunity to request eigenvectors, and/or to sort ; eigenvalues by absolute value. Parameters:; retain - ; Returns:. hessianDeterminant; public MultiscaleFeatures.MultiscaleResultsBuilder hessianDeterminant(boolean calculate); Calculate the determinant of the Hessian matrix per pixel. Parameters:; calculate - ; Returns:. pixelCalibration; public MultiscaleFeatures.MultiscaleResultsBuilder pixelCalibration(PixelCalibration cal,; double downsampleXY); Set the pixel calibration, with optional x,y scaling.; ; If available, this will convert the units in which Gaussian sigma values are applied.; This helps apply an isotropic filtering more easily, by specifying a single sigma value ; and supplying the pixel calibration so that any differences in pixel dimensions is ; automatically adjusted for.; ; DownsampleXY may be further used to scale the pixel units, meaning that even when working ; with a downsampled image it is possible to pass the original PixelCalibration object ; and specify the level of downsampling (rather than need to create a new scaled PixelCalibration). Parameters:; cal - ; downsampleXY - ; Returns:; See Also:. sigmaXY(double); sigmaX(double); sigmaY(double); sigmaZ(double). sigmaXY; public MultiscaleFeatures.MultiscaleResultsBuilder sigmaXY(double sigma); Set all Gaussian sigma values (x, y) to the same value.; ; Note that this value is in pixels by default, or may be microns is supported ; by setting ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.html:6163,down,downsampleXY,6163,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.html,1,['down'],['downsampleXY']
Availability,"lass qupath.imagej.detect.cells.WatershedCellDetection;  ; getTileOverlap(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; getTileOverlap(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getTileOverlap(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getTileOverlap(ImageData<BufferedImage>, ParameterList) - Method in class qupath.opencv.CellCountsCV. Returns zero - indicating no overlap... getTileOverlap(ImageData<BufferedImage>, ParameterList) - Method in class qupath.opencv.WatershedNucleiCV;  ; getTileOverlap(ImageData<T>, ParameterList) - Method in class qupath.lib.plugins.AbstractTileableDetectionPlugin. Get an appropriate overlap, in pixels, if analysis of the specified ImageData will be tiled. getTileRequest() - Method in class qupath.lib.experimental.pixels.Parameters. Get the tile request, if available. getTileRequest(int, int, int, int, int) - Method in interface qupath.lib.images.servers.TileRequestManager. Get the single TileRequest containing a specified pixel, or null if no such request exists. getTileRequest(ImageServer<BufferedImage>, double, double, double, int, int) - Static method in class qupath.lib.gui.images.stores.ImageRegionStoreHelpers. Given an ImageServer, determine the boundaries of the image tile that contains specified x, y coordinates. getTileRequestManager() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getTileRequestManager() - Method in interface qupath.lib.images.servers.ImageServer. Get a TileRequestManager that can be used to identify image tiles that may be efficiently requested; from this ImageServer. getTileRequests(RegionRequest) - Method in interface qupath.lib.images.servers.TileRequestManager. Get a collection of TileRequest objects necessary to fulfil a specific RegionRequest. getTileRequestsForLevel(int) - M",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:534451,avail,available,534451,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"lass qupath.opencv.ml.OpenCVClassifiers.EMClusterer;  ; createTrainData(Mat, Mat, Mat, boolean) - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV;  ; createTrainData(Mat, Mat, Mat, boolean) - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier;  ; createTrainData(Mat, Mat, Mat, boolean) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV;  ; createTrainData(Mat, Mat, Mat, boolean) - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV;  ; createTrainData(Mat, Mat, Mat, boolean) - Method in class qupath.opencv.ml.OpenCVClassifiers.LogisticRegressionClassifier;  ; createTrainData(Mat, Mat, Mat, boolean) - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. Create training data in the format required by this classifier. createTrainingData(Collection<ImageData<BufferedImage>>) - Method in class qupath.process.gui.commands.ml.PixelClassifierTraining. Create training data, using a label map automatically generated from the available classifications. createTrainingData(ImageData<BufferedImage>) - Method in class qupath.process.gui.commands.ml.PixelClassifierTraining. Create training data, using a label map automatically generated from the available classifications. createTrainingDataForLabelMap(Collection<ImageData<BufferedImage>>, Map<PathClass, Integer>) - Method in class qupath.process.gui.commands.ml.PixelClassifierTraining. Get a classifier training map, using a predefined label map (which determines which classifications to use). CreateTrainingImageCommand - Class in qupath.process.gui.commands. Command to generate a SparseImageServer from multiple image regions across a project. CreateTrainingImageCommand() - Constructor for class qupath.process.gui.commands.CreateTrainingImageCommand;  ; createTreeCell() - Static method in class qupath.lib.gui.tools.PathObjectLabels. Create a TreeCell for displaying a PathObject using the default PathObject.toString() method. createTreeCell",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:233823,avail,available,233823,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"lasses); Select objects by classification, logging the step (if performed) in the history workflow. Parameters:; imageData - the ImageData containing objects to be selected; pathClasses - classifications that will result in an object being selected; Returns:; true if a selection command was run, false otherwise (e.g. if no pathClasses were specified). promptToDeleteObjects; public static void promptToDeleteObjects(ImageData<?> imageData,; Class<? extends PathObject> cls); Prompt to delete objects of a specified type, or all objects. Parameters:; imageData - ; cls - . promptToResetPreferences; public static boolean promptToResetPreferences(); Reset QuPath's preferences, after confirming with the user.; QuPath needs to be restarted for this to take effect. Returns:; true if the preferences were reset, false otherwise. setViewerDownsample; public static void setViewerDownsample(QuPathViewer viewer,; double downsample); Set the downsample factor for the specified viewer. Parameters:; viewer - ; downsample - . closeProject; public static void closeProject(QuPathGUI qupath); Close the current project open in the QuPathGUI. Parameters:; qupath - . promptToCreateProject; public static boolean promptToCreateProject(QuPathGUI qupath); Prompt the user to select an empty directory, and use this to create a new project and set it as active. Parameters:; qupath - the QuPathGUI instance for which the project should be created.; Returns:; true if a project was created, false otherwise (e.g. the user cancelled). promptToOpenProject; public static boolean promptToOpenProject(QuPathGUI qupath); Prompt the user to open an existing project and set it as active. Parameters:; qupath - the QuPathGUI instance for which the project should be opened.; Returns:; true if a project was opened, false otherwise (e.g. the user cancelled). launchTMADataViewer; public static void launchTMADataViewer(QuPathGUI qupath); Open new window with the TMA data viewer. Parameters:; qupath - current QuPathGUI in",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:21321,down,downsample,21321,javadoc/docs/qupath/lib/gui/commands/Commands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html,1,['down'],['downsample']
Availability,"lator - . Method Details. getFeatureOp; public ImageDataOp getFeatureOp(); Get an ImageDataOp used for feature calculation. Returns:. getResolution; public PixelCalibration getResolution(); Get the resolution at which the training should occur. Returns:. setResolution; public void setResolution(PixelCalibration cal); Set the resolution at which the training should occur. Parameters:; cal - . setFeatureOp; public void setFeatureOp(ImageDataOp featureOp); Set the ImageDataOp used to calculate features. Parameters:; featureOp - . setBoundaryStrategy; public void setBoundaryStrategy(BoundaryStrategy strategy); Set the strategy for handling the boundaries of area annotations. Parameters:; strategy - . getBoundaryStrategy; public BoundaryStrategy getBoundaryStrategy(); Get the strategy for handling the boundaries of area annotations. Returns:. createTrainingData; public PixelClassifierTraining.ClassifierTrainingData createTrainingData(ImageData<BufferedImage> imageData); throws IOException; Create training data, using a label map automatically generated from the available classifications. Parameters:; imageData - ; Returns:; Throws:; IOException. createTrainingData; public PixelClassifierTraining.ClassifierTrainingData createTrainingData(Collection<ImageData<BufferedImage>> imageData); throws IOException; Create training data, using a label map automatically generated from the available classifications. Parameters:; imageData - ; Returns:; Throws:; IOException. createTrainingDataForLabelMap; public PixelClassifierTraining.ClassifierTrainingData createTrainingDataForLabelMap(Collection<ImageData<BufferedImage>> imageData,; Map<PathClass,Integer> labels); throws IOException; Get a classifier training map, using a predefined label map (which determines which classifications to use). Parameters:; imageData - collection of ImageData used for training; labels - map linking classifications to labels in the output; may be null, in which case a label map will be generated from the",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.html:3760,avail,available,3760,javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.html,1,['avail'],['available']
Availability,"lculate the Laplacian of Gaussian image. Parameters:; calculate - ; Returns:. hessianEigenvalues; public MultiscaleFeatures.MultiscaleResultsBuilder hessianEigenvalues(boolean calculate); Calculate the eigenvalues of the Hessian matrix per pixel. Parameters:; calculate - ; Returns:. retainHessian; public MultiscaleFeatures.MultiscaleResultsBuilder retainHessian(boolean retain); Optionally retain the Hessian matrix per pixel.; This provides an opportunity to request eigenvectors, and/or to sort ; eigenvalues by absolute value. Parameters:; retain - ; Returns:. hessianDeterminant; public MultiscaleFeatures.MultiscaleResultsBuilder hessianDeterminant(boolean calculate); Calculate the determinant of the Hessian matrix per pixel. Parameters:; calculate - ; Returns:. pixelCalibration; public MultiscaleFeatures.MultiscaleResultsBuilder pixelCalibration(PixelCalibration cal,; double downsampleXY); Set the pixel calibration, with optional x,y scaling.; ; If available, this will convert the units in which Gaussian sigma values are applied.; This helps apply an isotropic filtering more easily, by specifying a single sigma value ; and supplying the pixel calibration so that any differences in pixel dimensions is ; automatically adjusted for.; ; DownsampleXY may be further used to scale the pixel units, meaning that even when working ; with a downsampled image it is possible to pass the original PixelCalibration object ; and specify the level of downsampling (rather than need to create a new scaled PixelCalibration). Parameters:; cal - ; downsampleXY - ; Returns:; See Also:. sigmaXY(double); sigmaX(double); sigmaY(double); sigmaZ(double). sigmaXY; public MultiscaleFeatures.MultiscaleResultsBuilder sigmaXY(double sigma); Set all Gaussian sigma values (x, y) to the same value.; ; Note that this value is in pixels by default, or may be microns is supported ; by setting the pixel calibration. Parameters:; sigma - ; Returns:; See Also:. pixelCalibration(PixelCalibration, double); sigm",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.html:6238,avail,available,6238,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.html,1,['avail'],['available']
Availability,"ld of view or overlay, but not for ; large changes that require any cached thumbnail to also be updated (e.g. changing the ; brightness/contrast or lookup table). In such cases repaintEntireImage() is required. See Also:. repaintEntireImage(). getMinDownsample; public double getMinDownsample(); Get the minimum downsample value supported by this viewer.; This prevents zooming in by an unreasonably large amount. Returns:. getMaxDownsample; public double getMaxDownsample(); Get the maximum downsample value supported by this viewer.; This prevents zooming out by an unreasonably large amount. Returns:. zoomOut; public void zoomOut(int nSteps); Zoom out by a specified number of steps, where one 'step' indicates a minimal zoom increment. Parameters:; nSteps - . zoomIn; public void zoomIn(int nSteps); Zoom in by a specified number of steps, where one 'step' indicates a minimal zoom increment. Parameters:; nSteps - . getDefaultZoomFactor; public double getDefaultZoomFactor(); The amount by which the downsample factor is scaled for one increment of zoomIn() or ; zoomOut(). Controls zoom speed. Returns:. zoomOut; public void zoomOut(); Zoom out by one step. See Also:. zoomOut(int); getDefaultZoomFactor(). zoomIn; public void zoomIn(); Zoom in by one step. See Also:. zoomIn(int); getDefaultZoomFactor(). imageDataProperty; public ReadOnlyObjectProperty<ImageData<BufferedImage>> imageDataProperty(); Property for the image data currently being displayed within this viewer. Returns:; See Also:. getImageData(); setImageData(ImageData). getImageData; public ImageData<BufferedImage> getImageData(); Get the image data currently being displayed within thie viewer. Returns:. getOverlayOptions; public OverlayOptions getOverlayOptions(); Get the overlay options that control the viewer display. Returns:. getImageRegionStore; public DefaultImageRegionStore getImageRegionStore(); Get the region store used by this viewer for tile caching and painting. Returns:. setDoFasterRepaint; public void ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:17706,down,downsample,17706,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,1,['down'],['downsample']
Availability,"ldObject - ; Returns:. isAncestor; public static boolean isAncestor(PathObject pathObject,; PathObject possibleAncestor); Query if one object is the ancestor of another. Parameters:; pathObject - ; possibleAncestor - ; Returns:. getTMACoreObjects; public static List<TMACoreObject> getTMACoreObjects(PathObjectHierarchy hierarchy,; boolean includeMissingCores); Extract a list of TMA cores from an object hierarchy. If no cores are present, an empty list is returned. Parameters:; hierarchy - ; includeMissingCores - ; Returns:. getAncestorTMACore; public static TMACoreObject getAncestorTMACore(PathObject pathObject); Get the TMA core object that contains a specified PathObject, or null if the object is not contained within a TMA core.; ; If the passed object already is a TMACore, it is returned directly. Otherwise, all ancestors are checked. Parameters:; pathObject - ; Returns:. getTMACoreForPixel; public static TMACoreObject getTMACoreForPixel(TMAGrid tmaGrid,; double x,; double y); Get the TMA core that contains the specified x & y coordinate, or null if no core is available for the coordinates give. Parameters:; tmaGrid - ; x - ; y - ; Returns:. addTMAGrid; public static void addTMAGrid(ImageData<?> imageData,; String hLabels,; String vLabels,; boolean rowFirst,; double diameterCalibrated); Create a new regular TMAGrid and set it as active on the hierarchy for an image.; ; For the label string format, see see parseTMALabelString(String). Parameters:; imageData - the image to which the TMA grid should be added. This is used to determine ; dimensions and pixel calibration. If there is a ROI selected, it will be used ; to define the bounding box for the grid.; hLabels - a String representing horizontal labels; vLabels - a String representing vertical labels; rowFirst - true if the horizontal label should be added before the vertical label, false otherwise; diameterCalibrated - the diameter of each core, in calibrated units. createTMAGrid; public static TMAGrid createTMAG",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:24613,avail,available,24613,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['avail'],['available']
Availability,"lder owner(Window owner); Deprecated.; Specify the dialog owner. Parameters:; owner - dialog title; Returns:; this builder. resizable; public Dialogs.Builder resizable(); Deprecated.; Make the dialog resizable (but default it is not). Returns:; this builder. nonModal; public Dialogs.Builder nonModal(); Deprecated.; Specify that the dialog should be non-modal.; By default, most dialogs are modal (and therefore block clicks to other windows). Returns:; this builder. modality; public Dialogs.Builder modality(Modality modality); Deprecated.; Specify the modality of the dialog. Parameters:; modality - requested modality; Returns:; this builder. alertType; public Dialogs.Builder alertType(Alert.AlertType type); Deprecated.; Create a dialog styled as a specified alert type. Parameters:; type - ; Returns:; this builder. warning; public Dialogs.Builder warning(); Deprecated.; Create a warning alert dialog. Returns:; this builder. error; public Dialogs.Builder error(); Deprecated.; Create an error alert dialog. Returns:; this builder. information; public Dialogs.Builder information(); Deprecated.; Create an information alert dialog. Returns:; this builder. confirmation; public Dialogs.Builder confirmation(); Deprecated.; Create an confirmation alert dialog. Returns:; this builder. buttons; public Dialogs.Builder buttons(ButtonType... buttonTypes); Deprecated.; Specify the buttons to display in the dialog. Parameters:; buttonTypes - buttons to use; Returns:; this builder. buttons; public Dialogs.Builder buttons(String... buttonNames); Deprecated.; Specify the buttons to display in the dialog. Parameters:; buttonNames - names of buttons to use; Returns:; this builder. width; public Dialogs.Builder width(double width); Deprecated.; Specify the dialog width. Parameters:; width - requested width; Returns:; this builder. height; public Dialogs.Builder height(double height); Deprecated.; Specify the dialog height. Parameters:; height - requested height; Returns:; this builder. prefWi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.Builder.html:5331,error,error,5331,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.Builder.html,1,['error'],['error']
Availability,"le collection of the metadata map's keys. Map<String,String>; getMetadataMap(). Get an unmodifiable view of the underlying metadata map. default String; getMetadataSummaryString(). Get a formatted string representation of the metadata map's contents. String; getMetadataValue(String key). Request a metadata value. String; getOriginalImageName(). Get the original image name, without any randomization. ImageServerBuilder.ServerBuilder<T>; getServerBuilder(). Get a ImageServerBuilder.ServerBuilder that can be used to open this image. default Collection<URI>; getServerURIs(). Deprecated.; use instead UriResource.getURIs(). String; getSummary(). Get a summary string representing this image entry. T; getThumbnail(). Request a thumbnail for the image. boolean; hasImageData(). Check if this entry has saved ImageData already available. String; putMetadataValue(String key,; String value). Store a metadata value. PathObjectHierarchy; readHierarchy(). Read the PathObjectHierarchy for this entry, or return an empty hierarchy if none is available. ImageData<T>; readImageData(). Read the ImageData associated with this entry, or create a new ImageData if none is currently present. String; removeMetadataValue(String key). Remove a metadata value. void; saveImageData(ImageData<T> imageData). Save the ImageData for this entry using the default storage location for the project. void; setDescription(String description). Set the description. void; setImageName(String name). Set the image name for this project entry. void; setThumbnail(T img). Set a thumbnail for the image. default boolean; updateServerURIs(Map<URI,URI> replacements). Deprecated.; use instead UriResource.updateURIs(Map). Methods inherited from interface qupath.lib.io.UriResource; getUris, getURIs, updateUris, updateURIs. Method Details. getID; String getID(); Get a unique ID to represent this entry. Returns:. setImageName; void setImageName(String name); Set the image name for this project entry. Parameters:; name - . getI",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/projects/ProjectImageEntry.html:2549,avail,available,2549,javadoc/docs/qupath/lib/projects/ProjectImageEntry.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/ProjectImageEntry.html,1,['avail'],['available']
Availability,"le) - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; setDoubleLastValue(double) - Method in class qupath.lib.plugins.parameters.IntParameter;  ; setDoubleLastValue(double) - Method in class qupath.lib.plugins.parameters.NumericParameter. A class for setting the numeric value as a double (subclasses should convert this as needed). setDownsample(double) - Method in class qupath.lib.gui.commands.MiniViewers.MiniViewerManager. Set the downsample to use within the mini viewers. setDownsampleFactor(double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set the downsample factor for this viewer. setDownsampleFactor(double, double, double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards. setDownsampleFactor(double, double, double, boolean) - Method in class qupath.lib.gui.viewer.QuPathViewer. Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards. setError() - Static method in class qupath.lib.gui.logging.LogManager. Set the root log level to LogLevel.ERROR. setErrorWriter(Writer) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the main error writer. setExcludeOutsideRange(boolean) - Method in class qupath.lib.gui.tools.MeasurementMapper. Specify whether out-of-range values should be excluded. setExpandToWindow(boolean) - Method in class qupath.lib.gui.panes.SimpleImageViewer. Control whether the image should be allowed to expand beyond its preferred width and height to fill the window. setFeatureOp(ImageDataOp) - Method in class qupath.process.gui.commands.ml.PixelClassifierTraining. Set the ImageDataOp used to calculate features. setFile(File) - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Set the file for this ViewTracker. setFile(File) - Method in class qupath.lib.scripting.ScriptParameters.Builder;  ; setFilesOnly(boolean) - Meth",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:924955,down,downsample,924955,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['down'],['downsample']
Availability,"leList<QuPathStyleManager.Fonts>; availableFonts. Get a list of available fonts. static ObservableList<QuPathStyleManager.StyleOption>; availableStyles. Get the current available styles as an observable list. static ObjectProperty<QuPathStyleManager.Fonts>; font. Get the current selected font. static ObjectProperty<QuPathStyleManager.StyleOption>; selectedStyle. Get the current selected style. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; QuPathStyleManager.Fonts. Available font families. static interface ; QuPathStyleManager.StyleOption. Interface defining a style that may be applied to QuPath. Constructor Summary; Constructors. Constructor; Description; QuPathStyleManager();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ObservableList<QuPathStyleManager.Fonts>; availableFontsProperty(). Get a list of available fonts. static ObservableList<QuPathStyleManager.StyleOption>; availableStylesProperty(). Get the current available styles as an observable list. static ObjectProperty<QuPathStyleManager.Fonts>; fontProperty(). Get the current selected font. static boolean; installStyles(Collection<File> list). Handle installing CSS files (which can be used to style QuPath). static boolean; isDefaultStyle(). Check if the default JavaFX style is used. static void; refresh(). Refresh the current style. static ObjectProperty<QuPathStyleManager.StyleOption>; selectedStyleProperty(). Get the current selected style. static void; updateAvailableStyles(). Request that the list of available styles is updated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. availableStyles; public static ObservableList<QuPathStyleManager.StyleOption> availableStylesProperty; Get the current available styles as an observable list.; The list is unmodifiable, since any changes should be made ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html:1744,avail,availableStylesProperty,1744,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,1,['avail'],['availableStylesProperty']
Availability,"leMenuActions - Class in qupath.lib.gui.actions.menus;  ; FileMenuActions(QuPathGUI) - Constructor for class qupath.lib.gui.actions.menus.FileMenuActions;  ; FileMenuActions.Actions - Class in qupath.lib.gui.actions.menus;  ; FileMenuActions.ExportImageActions - Class in qupath.lib.gui.actions.menus;  ; FileMenuActions.ExportSnapshotActions - Class in qupath.lib.gui.actions.menus;  ; FileMenuActions.ProjectActions - Class in qupath.lib.gui.actions.menus;  ; FileMenuActions.TmaActions - Class in qupath.lib.gui.actions.menus;  ; files(File...) - Method in class qupath.opencv.dnn.DnnModelParams.Builder. Specify the URIs as files. filesOnly - Variable in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension.BioFormatsPreferences;  ; fill(Mat, double) - Static method in class qupath.opencv.tools.OpenCVTools. Fill the pixels of an image with a specific value. fill(Mat, Mat, double) - Static method in class qupath.opencv.tools.OpenCVTools. Fill the pixels of an image with a specific value, corresponding to a mask. FILL_ANNOTATIONS - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Actions;  ; FILL_ANNOTATIONS - Variable in class qupath.lib.gui.actions.OverlayActions;  ; FILL_DETECTIONS - Variable in class qupath.lib.gui.actions.menus.ViewMenuActions.Actions;  ; FILL_DETECTIONS - Variable in class qupath.lib.gui.actions.OverlayActions;  ; FILL_HOLES - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.AnnotationActions;  ; FillAnnotationHolesPlugin<T> - Class in qupath.lib.plugins.objects. Plugin to create new annotations by expanding the size of existing annotations. FillAnnotationHolesPlugin() - Constructor for class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; fillAnnotations(boolean) - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Request whether annotations are drawn as 'filled' shapes. fillAnnotationsProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; fillDetections(boolean) - M",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:301864,mask,mask,301864,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['mask'],['mask']
Availability,"leModifiableImage, boolean) - Static method in class qupath.lib.analysis.algorithms.Watershed. Apply a 2D watershed transform. doWatershed(SimpleImage, SimpleModifiableImage, double, boolean) - Static method in class qupath.lib.analysis.algorithms.Watershed. Apply a 2D watershed transform, constraining region growing using an intensity threshold. DOWNLOAD - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; downsample(double) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set the downsample factor to use with requesting image regions. downsample(double) - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Specify downsample factor (defined in terms of the full resolution image space). downsample(double) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Specify downsample factor. downsample(double) - Method in class qupath.lib.images.writers.TileExporter. Define resolution as a downsample value. downsamples(double...) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify downsamples; this is especially important for 'thick' objects (annotations, TMA cores); because the downsamples define the resolutions at which these will be rendered. downsamples(double...) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify downsample factors to use in the final pyramid. DragDropImportListener - Class in qupath.lib.gui.viewer. Drag and drop support for main QuPath application, which can support a range of different object types (Files, URLs, Strings,..). DragDropImportListener(QuPathGUI) - Constructor for class qupath.lib.gui.viewer.DragDropImportListener. Constructor. DragDropImportListener.DropHandler<T> - Interface in qupath.lib.gui.viewer. Interface to define a new drop handler. DrawingPreferences() - Constructor for class qupath.lib.gui.panes.PreferencePane.DrawingPreferences;  ; dumpMetadata() - Method in class qupath.imagej.images.se",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:271606,down,downsamples,271606,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['down'],['downsamples']
Availability,"leSize; public OMEPyramidWriter.Builder tileSize(int tileWidth,; int tileHeight); Define the requested tile width and height.; ; This is only a suggestion, and the OME reader may override it if the value is unsupported. Parameters:; tileWidth - ; tileHeight - ; Returns:; this builder. downsamples; public OMEPyramidWriter.Builder downsamples(double... downsamples); Specify downsample factors to use in the final pyramid.; ; Note that the downsample values provided will be sorted in ascending order. Parameters:; downsamples - ; Returns:; this builder. dyadicDownsampling; public OMEPyramidWriter.Builder dyadicDownsampling(); Downsample by factors of 2.; ; Note that the highest downsample value will depend on the tile size, ; so the tile size should be set first. Returns:; this builder; See Also:. scaledDownsampling(double). scaledDownsampling; public OMEPyramidWriter.Builder scaledDownsampling(double scale); Downsample by specific increasing factor each time (e.g. if scale == 2, then downsamples will be 1, 2, 4, 8...).; ; Note that the highest downsample value will depend on the tile size, ; so the tile size should be set first. Parameters:; scale - ; Returns:; this builder; See Also:. scaledDownsampling(double). scaledDownsampling; public OMEPyramidWriter.Builder scaledDownsampling(double minDownsample,; double scale); Downsample by specific increasing factor each time, with a specified initial downsample value ; (e.g. if scale == 2, then downsamples will be minDownsample, minDownsample*2, minDownsample*4...).; ; Note that the highest downsample value will depend on the tile size, ; so the tile size should be set first. Parameters:; minDownsample - the starting downsample, defining the highest-resolution image (usually 1.0); scale - the scale used to define successive downsamples; Returns:; this builder; See Also:. scaledDownsampling(double). channels; public OMEPyramidWriter.Builder channels(int... channels); Override default of writing all channels in their original ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html:10400,down,downsamples,10400,javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html,1,['down'],['downsamples']
Availability,"led on your browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.scripting.languages; Class ScriptLanguageProvider. java.lang.Object; qupath.lib.gui.scripting.languages.ScriptLanguageProvider. public class ScriptLanguageProvider; extends Object; Class with static methods to fetch all the available ScriptLanguages. Since:; v0.4.0; Author:; Melvin Gelbard, Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ScriptLanguageProvider();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ScriptLanguage; fromString(String languageString). Get the ScriptLanguage object corresponding to the specified String. static Collection<ScriptLanguage>; getAvailableLanguages(). Get the available script languages. static ScriptEngine; getEngineByName(String languageName). Get the ScriptEngine based on its name. static ScriptLanguage; getLanguageFromExtension(String ext). Return the first ScriptLanguage compatible with the specified extension (can be runnable or not). static ScriptLanguage; getLanguageFromName(String name). Given a file name, determine the associated language - or null if no suitable (supported) language can be found. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ScriptLanguageProvider; public ScriptLanguageProvider(). Method Details. getAvailableLanguages; public static Collection<ScriptLanguage> getAvailableLanguages(); Get the available script languages. Returns:. getLanguageFromName; public static ScriptLanguage getLanguageFromName(String name); Given a file name, determine the associated language - or null if no suitable (supported) language ca",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/ScriptLanguageProvider.html:1051,avail,available,1051,javadoc/docs/qupath/lib/gui/scripting/languages/ScriptLanguageProvider.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/languages/ScriptLanguageProvider.html,1,['avail'],['available']
Availability,"ledNavigationSpeed(); Get navigation speed scaled as a proportion and forced to be in the range 0-1. For example, 100% becomes 1. Returns:; speed. navigationAccelerationProperty; public static BooleanProperty navigationAccelerationProperty(); Apply acceleration/deceleration effects when holding and releasing navigation key. Returns:; navigationAccelerationProperty. getNavigationAccelerationProperty; public static boolean getNavigationAccelerationProperty(); Get whether to apply the navigation acceleration (& deceleration) effects or not. Returns:. skipMissingCoresProperty; public static BooleanProperty skipMissingCoresProperty(); Skip ('jump over') missing cores when navigating through TMA grids. Returns:; skipMissingCoresProperty. getSkipMissingCoresProperty; public static boolean getSkipMissingCoresProperty(); Return whether the viewer skips missing TMA cores when navigating TMA grids ; with arrow keys. Returns:. getShowAllRGBTransforms; public static boolean getShowAllRGBTransforms(); Request that all available color transforms are shown for RGB images. Returns:. scriptsPathProperty; public static StringProperty scriptsPathProperty(); Path to a directory containing scripts for quick-access through the user interface. Returns:. useTileBrushProperty; public static BooleanProperty useTileBrushProperty(); Request that the brush tool automatically uses any available tiles, rather than creating 'circles' as normal. Returns:. selectionModeProperty; public static BooleanProperty selectionModeProperty(); Convert drawing tools to select objects, rather than creating new objects. Returns:. clipROIsForHierarchyProperty; public static BooleanProperty clipROIsForHierarchyProperty(); Request ROIs to be clipped and inserted as the right place in the hierarchy when drawing ; (to prevent overlapping ROIs being created accidentally). Returns:. showExperimentalOptionsProperty; public static BooleanProperty showExperimentalOptionsProperty(); Flag to indicate that menu items marked 'e",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:48646,avail,available,48646,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['avail'],['available']
Availability,"les is updated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. availableStyles; public static ObservableList<QuPathStyleManager.StyleOption> availableStylesProperty; Get the current available styles as an observable list.; The list is unmodifiable, since any changes should be made via adding/removing files in UserDirectoryManager.getCssStylesPath(). See Also:. availableStylesProperty(). selectedStyle; public static ObjectProperty<QuPathStyleManager.StyleOption> selectedStyleProperty; Get the current selected style. See Also:. selectedStyleProperty(). availableFonts; public static ObservableList<QuPathStyleManager.Fonts> availableFontsProperty; Get a list of available fonts.; The list is unmodifiable, since this is primarily used to overcome issues with the default font on macOS ; by changing the font family. More fine-grained changes can be made via css. See Also:. availableFontsProperty(). font; public static ObjectProperty<QuPathStyleManager.Fonts> fontProperty; Get the current selected font. See Also:. fontProperty(). Constructor Details. QuPathStyleManager; public QuPathStyleManager(). Method Details. updateAvailableStyles; public static void updateAvailableStyles(); Request that the list of available styles is updated.; It makes sense to call this when a new user directory has been set, so that a check for CSS files ; can be performed. installStyles; public static boolean installStyles(Collection<File> list); Handle installing CSS files (which can be used to style QuPath). Parameters:; list - list of css files; Returns:. refresh; public static void refresh(); Refresh the current style.; This should not normally be required, but may be useful during startup to ensure ; that the style is properly set at the appropriate time. isDefaultStyle; public static boolean isDefaultStyle(); Check if the default JavaFX style is used. Returns:; true if the default sty",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html:3346,avail,availableFontsProperty,3346,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,1,['avail'],['availableFontsProperty']
Availability,"les(); Request that viewers refresh their titles.; This is only really needed for detached viewers, so that they are notified of any changes to the image name. getAllViewers; public ObservableList<QuPathViewer> getAllViewers(); Get an observable list of viewers.; Note that the list is unmodifiable; viewers should be added or removed through other ; methods in thie class. Returns:. getOverlayOptions; public OverlayOptions getOverlayOptions(); Get the overlay options shared by all viewers created by this manager. Returns:. showOverviewProperty; public BooleanProperty showOverviewProperty(); Show the overview image. Returns:. showLocationProperty; public BooleanProperty showLocationProperty(); Show the cursor location. Returns:. showScalebarProperty; public BooleanProperty showScalebarProperty(); Show the scalebar. Returns:. matchResolutions; public void matchResolutions(); Match the display resolutions (downsamples) of all viewers to match the current viewer.; This uses calibrated pixel size information if available. setActiveViewer; public void setActiveViewer(QuPathViewer viewer); Sets the value of the activeViewer property. Property description:; Get a read-only property representing the currently active viewer.; Only one viewer can be active, and this should not be null (i.e. the list of getAllViewers() ; should never be empty).; Parameters:; viewer - the value for the activeViewer property; See Also:. getActiveViewer(); activeViewerProperty(). imageDataProperty; public ReadOnlyObjectProperty<ImageData<BufferedImage>> imageDataProperty(); Read-only property containing the image open within the currently-active viewer.; To change the open image data, you should do so directly within the viewer. Returns:. getActiveViewer; public QuPathViewer getActiveViewer(); Get the value of activeViewerProperty(). Returns:. activeViewerProperty; public ReadOnlyObjectProperty<QuPathViewer> activeViewerProperty(); Get a read-only property representing the currently active viewer.; O",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html:7078,avail,available,7078,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,1,['avail'],['available']
Availability,"le downsample). Create a RegionRequest equivalent to this one with the updated downsample value. RegionRequest; updatePath(String path). Create a RegionRequest equivalent to this one with the updated path. RegionRequest; updateT(int t). Create a RegionRequest equivalent to this one with the updated t value. RegionRequest; updateZ(int z). Create a RegionRequest equivalent to this one with the updated z value. Methods inherited from class qupath.lib.regions.ImageRegion; contains, createInstance, createInstance, createInstance, getHeight, getImagePlane, getMaxX, getMaxY, getMinX, getMinY, getPlane, getT, getWidth, getX, getY, getZ, intersects, intersects. Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. toString; public String toString(). Overrides:; toString in class ImageRegion. createInstance; public static RegionRequest createInstance(ImageServer<?> server); Create a request for the full width and height of an ImageServer, for the default plane (first z-slice, time point) ; and first resolution level downsample (usually 1, but not always). Parameters:; server - ; Returns:. createInstance; public static RegionRequest createInstance(ImageServer<?> server,; double downsample); Create a request for the full width and height of an ImageServer, for the default plane (first z-slice, time point). Parameters:; server - ; downsample - ; Returns:. createAllRequests; public static List<RegionRequest> createAllRequests(ImageServer<?> server,; double downsample); Create requests for the full width and height of an ImageServer, for all planes (z-slices and time points). Parameters:; server - ; downsample - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; ROI roi); Create a request that contains the pixels of the specified ROI.; This is calculated using the ROI bounding box. Parameters:; path - ; downsample - ; roi - ; Returns:. createInstance; publ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html:4958,down,downsample,4958,javadoc/docs/qupath/lib/regions/RegionRequest.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html,1,['down'],['downsample']
Availability,"le scaleY,; double scaleZ); Get a scaled instance of this PixelCalibration, multiplying pixel sizes for x, y and z by the specified scale values.; Units are kept the same. Parameters:; scaleX - ; scaleY - ; scaleZ - ; Returns:. getTimeUnit; public TimeUnit getTimeUnit(); Get the time unit for a time series. Returns:. nTimepoints; public int nTimepoints(); Get the number of known time points. Returns:. getTimepoint; public double getTimepoint(int ind); Get the time for the specified time point, or Double.NaN if this is unknown. Parameters:; ind - ; Returns:. hasPixelSizeMicrons; public boolean hasPixelSizeMicrons(); Returns true if the pixel width and height information in microns is known. Returns:. hasZSpacingMicrons; public boolean hasZSpacingMicrons(); Returns true if the z-spacing is known in microns. Returns:. getAveragedPixelSizeMicrons; public double getAveragedPixelSizeMicrons(); Get the average of the pixel width and height in microns if possible, or Double.NaN if the pixel size is not available. Returns:. getZSpacingMicrons; public double getZSpacingMicrons(); Get the z-spacing in microns, or Double.NaN if this is unknown. Returns:. getPixelWidthMicrons; public double getPixelWidthMicrons(); Get the pixel width in microns, or Double.NaN if this is unknown. Returns:. getPixelHeightMicrons; public double getPixelHeightMicrons(); Get the pixel height in microns, or Double.NaN if this is unknown. Returns:. getPixelWidthUnit; public String getPixelWidthUnit(); Get a String representation of the preferred pixel width unit. Returns:; See Also:. getPixelWidthMicrons(); PIXEL; MICROMETER. unitsMatch2D; public boolean unitsMatch2D(); Returns true if the units for pixel width and height are the same. Returns:. unitsMatch3D; public boolean unitsMatch3D(); Returns true if the units for pixel width, height and z-spacing are the same. Returns:. getPixelHeightUnit; public String getPixelHeightUnit(); Get a String representation of the preferred pixel height unit. Returns:;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/PixelCalibration.html:5324,avail,available,5324,javadoc/docs/qupath/lib/images/servers/PixelCalibration.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/PixelCalibration.html,1,['avail'],['available']
Availability,"le x,; double y); Description copied from interface: ROI; Test is the ROI contains specified x, y coordinates.; Only Area ROIs can return true, i.e. where ROI.isArea() returns true. ; All other ROIs (points, lines) return false. Specified by:; contains in interface ROI; Parameters:; x - ; y - ; Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. isEmpty; public boolean isEmpty(); True if the bounding box has zero area. Specified by:; isEmpty in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. getNumPoints; public int getNumPoints(); Default implementation, calls ROI.getAllPoints() and then caches the result.; Subclasses may override for efficiency. Specified by:; getNumPoints in interface ROI; Returns:. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Desc",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html:9790,avail,available,9790,javadoc/docs/qupath/lib/roi/PolylineROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/PolylineROI.html,1,['avail'],['available']
Availability,"lib.display.ImageDisplay. Automatically set the display range for a channel, using the default saturation defined in PathPrefs.autoBrightnessContrastSaturationPercentProperty(). autoSetDisplayRange(ChannelDisplayInfo, double) - Method in class qupath.lib.display.ImageDisplay. Automatically set the display range for a channel. autoUnits() - Method in class qupath.lib.common.Timeit;  ; autoUpdate - Variable in class qupath.lib.gui.panes.PreferencePane.AppearancePreferences;  ; autoUpdate - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; autoUpdateCheckProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Check for updates when launching QuPath, if possible. availableChannels() - Method in class qupath.lib.display.ImageDisplay. ObservableList containing the channels currently available for display. availableFontsProperty() - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Get a list of available fonts. availableStylesProperty() - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Get the current available styles as an observable list. averageChannelProject() - Method in class qupath.lib.images.servers.TransformedServerBuilder. Perform an average (mean) projection of the channels. awaitCompletion() - Method in class qupath.lib.plugins.AbstractTaskRunner. Await the completion of currently-running tasks, notifying any listener if necessary. AwtTools - Class in qupath.lib.awt.common. A collection of static methods useful when working with AWT shapes and ImageRegions. B. backend(int) - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Specify the backend, e.g. backgroundColor - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; backgroundColor(int, boolean) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify a base color. backgroundColor(Color) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify a base color. ba",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:51323,avail,availableStylesProperty,51323,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['availableStylesProperty']
Availability,"lic static RegionRequest createInstance(String path,; RegionRequest request); Create a request that matches another request but with a different path. Parameters:; path - ; request - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; ImageRegion region); Create a request corresponding to a specified ImageRegion.; This may also be used to construct a request based on an existing request, but changing either the path or downsample. Parameters:; path - ; downsample - ; region - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; int x,; int y,; int width,; int height,; int z,; int t); Create a request for a region specified in terms of its bounding box, z-slice and time point. Parameters:; path - ; downsample - ; x - ; y - ; width - ; height - ; z - ; t - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; int x,; int y,; int width,; int height,; ImagePlane plane); Create a request for a region specified in terms of its bounding box and ImagePlane. Parameters:; path - ; downsample - ; x - ; y - ; width - ; height - ; plane - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; int x,; int y,; int width,; int height); Create a request for a region specified in terms of its bounding box, using the first z-slice and time point. Parameters:; path - ; downsample - ; x - ; y - ; width - ; height - ; Returns:. overlapsRequest; public boolean overlapsRequest(RegionRequest request); Returns true if the region specified by this request overlaps with that of another request.; The test includes insuring that they refer to the same image by checking the paths are the same. Parameters:; request - ; Returns:. getPath; public String getPath(); Get the requested ImageServer path, used as an identifier. Returns:; See Also:. ImageServer.getPath(). getDownsample; public double get",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html:7209,down,downsample,7209,javadoc/docs/qupath/lib/regions/RegionRequest.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html,1,['down'],['downsample']
Availability,"lines for any counting grid. static DoubleProperty; gridSpacingY. Vertical spacing between lines for any counting grid. static DoubleProperty; gridStartX. Starting x coordinate for any counting grid (usually 0). static DoubleProperty; gridStartY. Starting y coordinate for any counting grid (usually 0). static ObjectProperty<PathPrefs.ImageTypeSetting>; imageTypeSetting. Specify how setting the image type should be handled for images when they are opened for the first time. static BooleanProperty; invertScrolling. Invert the scrolling direction of the mouse applied to the viewer. static BooleanProperty; invertZSlider. Invert the z-slider for the viewer. static BooleanProperty; keepDisplaySettings. Retain display settings (channel colors, brightness/contrast) when opening new images ; that have the same properties (channels, channel names, bit-depths). static ObjectProperty<PathPrefs.FontSize>; locationFontSize. Preferred font size for the location text in the viewer. static BooleanProperty; maskImageNames. Request that image names are hidden within the user interface. static IntegerProperty; maxMemoryMB. Get property representing the maximum memory for the Java Virtual Machine, ; applied after restarting the application. static IntegerProperty; maxObjectsToClipboard. The maximum number of objects that can be copied to the system clipboard. static IntegerProperty; maxUndoHierarchySize. The requested maximum number of objects in a hierarchy for which QuPath should support undo/redo. static IntegerProperty; maxUndoLevels. The requested maximum number of undo levels that QuPath should support. static IntegerProperty; minPyramidDimension. Minimum image width or height before pyramidalizing (if required). static BooleanProperty; multipointTool. Create multiple points within the same annotation when using the counting tool. static BooleanProperty; navigationAcceleration. Apply acceleration/deceleration effects when holding and releasing navigation key. static IntegerPropert",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:4770,mask,maskImageNames,4770,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['mask'],['maskImageNames']
Availability,"list contains a measurement with the specified name. default boolean; containsNamedMeasurement(String name). Deprecated.; since v0.4.0; replaced by containsKey(String). double; get(String name). Get value for the measurement with the specified name. String; getMeasurementName(int ind). Deprecated.; since v0.4.0; using names is preferred over indexing but getMeasurementNames() can still be used. List<String>; getMeasurementNames(). Get the names of all measurements currently in the list. double; getMeasurementValue(int ind). Deprecated.; since v0.4.0; using get(String) is preferred over using an index. default double; getMeasurementValue(String name). Deprecated.; since v0.4.0; use get(String) instead. default double; getOrDefault(String name,; double defaultValue). Get the specified measurement, or the provided default value if it is not contained in the list. boolean; isEmpty(). Returns true if the list does not contain any measurements. default Set<String>; keySet(). Get all available names as a set. void; put(String name,; double value). Put a measurement value into the list, replacing any previous measurement with the same name. default void; putAll(Map<String,? extends Number> map). Put all the values from the specified map into this list. default void; putAll(MeasurementList list). Put all the values from the specified list into this one. default void; putMeasurement(String name,; double value). Deprecated.; since v0.4.0; replaced by put(String, double). Measurement; putMeasurement(Measurement measurement). Deprecated.; since v0.4.0, since there is no real need to create a Measurement object and ; we don't currently use dynamic measurements. default double; remove(String name). Remove a named measurement. void; removeMeasurements(String... measurementNames). Remove all the measurements with the specified names. int; size(). Returns the number of measurements in the list. boolean; supportsDynamicMeasurements(). Deprecated.; since v0.4.0; the initial implementat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.html:2911,avail,available,2911,javadoc/docs/qupath/lib/measurements/MeasurementList.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/measurements/MeasurementList.html,1,['avail'],['available']
Availability,"list. Parameters:; roi - ; Returns:. splitAreaToPolygons; public static PolygonROI[][] splitAreaToPolygons(Area area,; int c,; int z,; int t); Split Area into PolygonROIs for the exterior and the holes.; ; The first array returned gives the holes and the second the positive regions (admittedly, it might have ; been more logical the other way around).; ; ; ; var polygons = splitAreaToPolygons(area, -1, 0, 0);; var holes = polygons[0];; var regions = polygons[1];; ; . Parameters:; area - ; c - ; z - ; t - ; Returns:. createRandomRectangle; public static ROI createRandomRectangle(ImageRegion mask,; double width,; double height); throws IllegalArgumentException; Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. Parameters:; mask - region defining the area in which the rectangle can be located, including the image plane information; width - width of the rectangle to create; height - height of the rectangle to create; Returns:; a rectangle with the specified width and height, covered by the mask; Throws:; IllegalArgumentException - if either the mask width or height is too small for the requested width and height. createRandomRectangle; public static ROI createRandomRectangle(ImageRegion mask,; double width,; double height,; Random random); throws IllegalArgumentException; Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. Parameters:; mask - region defining the area in which the rectangle can be located, including the image plane information; width - width of the rectangle to create; height - height of the rectangle to create; random - random number generator to use (may be null to use a default); Returns:; a rectangle with the specified width and height, covered by the mask; Throws:; IllegalArgumentException - if either the mask width or height is too small for the requested width and height. createRandomRectangle;",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:17275,mask,mask,17275,javadoc/docs/qupath/lib/roi/RoiTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html,3,['mask'],['mask']
Availability,"litAnnotationsPlugin;  ; getLastResultsDescription() - Method in class qupath.lib.plugins.objects.TileClassificationsToAnnotationsPlugin;  ; getLastResultsDescription() - Method in interface qupath.lib.plugins.PathPlugin. (Optional) short one-line description of the results, e.g. getLastResultsDescription() - Method in interface qupath.lib.plugins.PathTask. Get a description of the results from running this task, which may be used e.g. getLastResultsDescription() - Method in class qupath.opencv.CellCountsCV;  ; getLastResultsDescription() - Method in class qupath.opencv.DetectCytokeratinCV;  ; getLastResultsDescription() - Method in class qupath.opencv.features.DelaunayClusteringPlugin;  ; getLastResultsDescription() - Method in class qupath.opencv.WatershedNucleiCV;  ; getLastSavedPath() - Method in class qupath.lib.images.ImageData. Get the last path used to save this object;. getLastStep() - Method in class qupath.lib.plugins.workflow.Workflow. Get the last WorkflowStep in the workflow, or null if no steps are available. getLastTime() - Method in class qupath.lib.gui.viewer.recording.ViewTracker. Return the time associated with the last recorded frame. getLatestCommit() - Method in class qupath.lib.gui.BuildInfo. Get reference to the latest git commit, if known, or null if this has not be preserved. getLayout() - Method in class qupath.opencv.dnn.DnnModelParams. Get a string representing the axes layout that the model expects as input. getLength() - Method in class qupath.lib.roi.EllipseROI;  ; getLength() - Method in class qupath.lib.roi.RectangleROI;  ; getLength() - Method in class qupath.lib.roi.AreaROI;  ; getLength() - Method in class qupath.lib.roi.GeometryROI;  ; getLength() - Method in interface qupath.lib.roi.interfaces.ROI. Get ROI length. getLength() - Method in class qupath.lib.roi.LineROI;  ; getLength() - Method in class qupath.lib.roi.PointsROI;  ; getLength() - Method in class qupath.lib.roi.PolygonROI;  ; getLength() - Method in class qupath.lib",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:425923,avail,available,425923,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"lize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QPEx; public QPEx(). Method Details. getCoreClasses; public static Collection<Class<?>> getCoreClasses(); Get a list of core classes that are likely to be useful for scripting.; The purpose of this is to allow users to find classes they are likely to need, ; or to import these automatically at the beginning of scripts. Returns:. exportTMAData; public static void exportTMAData(String path,; double downsampleFactor); throws IOException; Export TMA summary data for the current image. Parameters:; path - path to the export directory; downsampleFactor - downsample applied to each TMA core image; Throws:; IOException. exportTMAData; public static void exportTMAData(ImageData<BufferedImage> imageData,; String path,; double downsampleFactor); throws IOException; Export TMA summary data for the specified image. Parameters:; imageData - the image containing TMA data to export; path - path to the export directory; downsampleFactor - downsample applied to each TMA core image; Throws:; IOException. getQuPath; public static QuPathGUI getQuPath(); Get the current QuPath instance. Returns:. getCurrentViewer; public static QuPathViewer getCurrentViewer(); Get the active viewer in the current QuPath instance. Returns:; an active viewer, or null if no viewer is active in QuPath currently. locateFile; public static String locateFile(String nameOrPath); throws IOException; Locate a specified file based upon its name or path, with a search depth of 4.; This first checks if the provided path is to a file that already exists.; If it is not, then it searches recursively within the current project or ; user directory (if available) up to a fixed search depth for a file with the same name. Parameters:; nameOrPath - the original name or path; Returns:; the identified file path, or the original file path if no update was found or required; Throws:; IOException; See Also:. UriUpdater.locateFile(String, i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:13069,down,downsampleFactor,13069,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html,2,['down'],"['downsample', 'downsampleFactor']"
Availability,"ll); Paint the specified shape with specified stroke and fill colors. Parameters:; shape - shape to paint; g2d - graphics object; colorStroke - stroke color (may be null); stroke - stroke (may be null); colorFill - fill color (may be null). getCachedStroke; public static Stroke getCachedStroke(double thickness); Get a BasicStroke with the specified thickness. Parameters:; thickness - ; Returns:. paintHandles; public static void paintHandles(RoiEditor roiEditor,; Graphics2D g2d,; double minHandleSize,; double maxHandleSize,; Color colorStroke,; Color colorFill); Paint the handles onto a Graphics object, if we have a suitable (non-point) ROI.; ; The minimum and maximum handle size can be specified; if the same, all handles will have the same size. If different, ; then the distance between consecutive handles will be used to influence the actual handle size. This is helpful ; when handles are densely packed. Parameters:; roiEditor - ; g2d - ; minHandleSize - ; maxHandleSize - ; colorStroke - ; colorFill - . paintHandles; public static void paintHandles(List<Point2> handles,; Graphics2D g2d,; double minHandleSize,; double maxHandleSize,; Color colorStroke,; Color colorFill); Paint the handles onto a Graphics object, if we have a suitable (non-point) ROI.; ; The minimum and maximum handle size can be specified; if the same, all handles will have the same size. If different, ; then the distance between consecutive handles will be used to influence the actual handle size. This is helpful ; when handles are densely packed. Parameters:; handles - ; g2d - ; minHandleSize - ; maxHandleSize - ; colorStroke - ; colorFill - . paintConnections; public static void paintConnections(PathObjectConnections connections,; PathObjectHierarchy hierarchy,; Graphics2D g2d,; Color color,; double downsampleFactor,; ImagePlane plane); Paint connections between objects (e.g. from Delaunay triangulation). Parameters:; connections - ; hierarchy - ; g2d - ; color - ; downsampleFactor - ; plane - . ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html:6188,down,downsampleFactor,6188,javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html,2,['down'],['downsampleFactor']
Availability,"lls,; double xOrigin,; double yOrigin,; double downsample,; ImagePlane plane). Convert integer labeled images into cell objects. static SortedMap<Number,PathObject>; convertLabelsToCells(ImageProcessor ipNuclei,; ImageProcessor ipCells,; Calibration cal,; double downsample,; ImagePlane plane). Convert integer labeled images into cell objects. static PathObject; convertToAnnotation(Roi roi,; double xOrigin,; double yOrigin,; double downsampleFactor,; ImagePlane plane). Create an annotation object for a specific ImageJ Roi, using an ImagePlus to help set properties. static PathObject; convertToAnnotation(Roi roi,; double downsampleFactor,; ImagePlus imp). Create an annotation object for a specific ImageJ Roi. static PathObject; convertToAnnotation(ImagePlus imp,; ImageServer<?> server,; Roi roi,; double downsampleFactor,; ImagePlane plane). Deprecated.; use instead convertToAnnotation(Roi, double, double, double, ImagePlane). static PathObject; convertToDetection(Roi roi,; double xOrigin,; double yOrigin,; double downsampleFactor,; ImagePlane plane). Create a detection object for a specific ImageJ Roi, using an ImagePlus to help set properties. static PathObject; convertToDetection(Roi roi,; double downsampleFactor,; ImagePlus imp). Create a detection object for a specific ImageJ Roi. static PathObject; convertToDetection(ImagePlus imp,; ImageServer<?> server,; Roi roi,; double downsampleFactor,; ImagePlane plane). Deprecated.; use instead convertToDetection(Roi, double, double, double, ImagePlane). static ImageProcessor; convertToFloatProcessor(SimpleImage image). Convert a SimpleImage to an ImageProcessor. static <T extends PathImage<ImagePlus>>Roi; convertToIJRoi(ROI pathROI,; double xOrigin,; double yOrigin,; double downsampleFactor). Convert a QuPath ROI to an ImageJ Roi. static <T extends PathImage<ImagePlus>>Roi; convertToIJRoi(ROI pathROI,; Calibration cal,; double downsampleFactor). Convert a QuPath ROI to an ImageJ Roi for an image with the specified calibrat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:2542,down,downsampleFactor,2542,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,1,['down'],['downsampleFactor']
Availability,"lobFromImages(Mat... mats). Create an OpenCV blob from one or more mats. static Mat; blobFromImages(Mat mat,; double scaleFactor,; Size size,; Scalar mean,; boolean swapRB,; boolean crop). Create an OpenCV blob from a Mat with optional scaling, resizing and cropping. static OpenCVDnn.Builder; builder(String modelPath). Initiative building and configuring an OpenCVDnn. static boolean; classify(ClassificationModel model,; PathObject pathObject,; Mat input,; IntFunction<PathClass> classifier,; String predictionMeasurement). Apply a classification model to an existing image patch to classify an object. static boolean; classify(ClassificationModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; int width,; int height,; IntFunction<PathClass> classifier,; String predictionMeasurement). Apply a classification model to an image patch to classify an object. static boolean; classify(ClassificationModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier,; String predictionMeasurement). Apply a classification model to an image patch to classify an object. static List<PathObject>; detect(DetectionModel model,; Mat mat,; RegionRequest request,; IntFunction<PathClass> classifier,; Function<ROI,PathObject> creator). Apply a detection model to generate rectangles surrounding distinct structures. static List<PathObject>; detect(DetectionModel model,; ImageServer<BufferedImage> server,; RegionRequest request,; IntFunction<PathClass> classifier,; Function<ROI,PathObject> creator). Apply a detection model to generate rectangles surrounding distinct structures. static List<String>; getOutputLayerNames(Net net). Get the names of all unconnected output layers. static Map<String,DnnShape>; getOutputLayers(Net net,; DnnShape... inputShape). Get the names of all unconnected output layers. static List<Mat>; imagesFromBlob(Mat blob). Extract images from an OpenCV blob. static boolean; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html:2206,down,downsample,2206,javadoc/docs/qupath/opencv/dnn/DnnTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html,1,['down'],['downsample']
Availability,"lt Methods. Modifier and Type; Method; Description; default String; getLocationString(ImageData<BufferedImage> imageData,; double x,; double y,; int z,; int t). Get a location string to display when showing a specified image. void; paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. Method Details. paintOverlay; void paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely); Paint the overlay to a graphics object. The graphics object will have a transform applied to it, so the painting should; make use of coordinates in the original image space. Parameters:; g2d - Graphics2D object to which drawing should be performed. This should have any transform already applied to it.; imageRegion - The maximum image region that should be shown.; downsampleFactor - The downsample factor at which the overlay will be viewed. There is no need for rescaling according to; this value since it has already been applied to the Graphics2D as part of its AffineTransform, however; it may optionally be needed within the method e.g. to correct line thicknesses.; imageData - the ImageData associated with this overlay. If the overlay is being displayed on a viewer, this is the ImageData open ; within the viewer. Not all overlays require this, and it may be null.; paintCompletely - If true, the method is permitted to return without completely painting everything, for performance reasons. getLocationString; default String getLocationString(ImageData<BufferedImage> imageData,; double x,; double y,; int z,; int t); Get a location string to display when showing a specified image.; ; The default implementation returns null.; If subclasses override this method, they must return quickly, as it may be used to determine text to display as the mouse ; moves over an image. Parameters:; imageD",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PathOverlay.html:1698,down,downsampleFactor,1698,javadoc/docs/qupath/lib/gui/viewer/overlays/PathOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PathOverlay.html,2,['down'],"['downsample', 'downsampleFactor']"
Availability,"lt colors. getChannels() - Method in class qupath.lib.display.settings.ImageDisplaySettings. Get all the available channels. getChannels() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get an unmodifiable list of all channels. getChannels(List<ImageChannel>) - Method in interface qupath.opencv.ops.ImageOp. Get appropriate channels to reflect the output of this transform. getChannels(ImageData<BufferedImage>) - Method in interface qupath.opencv.ops.ImageDataOp. Get appropriate channels to reflect the output of this transform, given the input. getChannelType() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the channel type, which can be used to interpret the channels. getChartDataAsString(XYChart<Number, Number>) - Static method in class qupath.lib.gui.charts.ChartTools. Get a string representation of chart data, in such a way that it could be pasted into a spreadsheet. getCheckpoints() - Method in class qupath.lib.common.Timeit. Get an list of all the checkpoints. getChildObjects() - Method in class qupath.lib.objects.PathObject. Get a collection of child objects. getChildObjects(Collection<PathObject>) - Method in class qupath.lib.objects.PathObject. Get a collection containing all child objects. getChildObjectsAsArray() - Method in class qupath.lib.objects.PathObject. Get a defensive copy of child objects as an array. getChoiceParameterValue(String) - Method in class qupath.lib.plugins.parameters.ParameterList. Get a choice parameter value (or its default) for the specified key. getChoices() - Method in class qupath.lib.plugins.parameters.ChoiceParameter. Get a list of available choices. getChooser(Window) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Get a QuPathChooser instance linked to a specific window. getCircularity(ROI) - Static method in class qupath.lib.roi.RoiTools. Get circularity measurement for Area ROIs, calculated as 4 * PI * (area / perimeter^2). getCircularity(ROI, double, double) - ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:351723,checkpoint,checkpoints,351723,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['checkpoint'],['checkpoints']
Availability,"lt, this is the lower bound of the PixelType unless otherwise specified.; This purpose of this method is to support other effective bit-depths (e.g. 12-bit, 14-bit). Returns:; See Also:. getPixelType(). pixelSizeCalibrated; public boolean pixelSizeCalibrated(); Returns true if pixel width and height calibration information is available for the image. Returns:. zSpacingCalibrated; public boolean zSpacingCalibrated(); Returns true if z-spacing calibration information is available for the image. Returns:. getAveragedPixelSize; public double getAveragedPixelSize(); Get the averaged pixel size in microns, if available - or Double.NaN otherwise. Returns:. getPixelWidthMicrons; public double getPixelWidthMicrons(); Get the pixel width in microns, if available - or Double.NaN otherwise. Returns:. getPixelHeightMicrons; public double getPixelHeightMicrons(); Get the pixel height in microns, if available - or Double.NaN otherwise. Returns:. getZSpacingMicrons; public double getZSpacingMicrons(); Get the z-spacing in microns, if available - or Double.NaN otherwise. Returns:. getTimeUnit; public TimeUnit getTimeUnit(); Get the time unit for a time series. Returns:. getTimepoint; public double getTimepoint(int ind); Get the time point, defined in getTimeUnit(), or Double.NaN if this is unknown. Parameters:; ind - ; Returns:. getSizeZ; public int getSizeZ(); Get the number of z-slices. Returns:. getSizeT; public int getSizeT(); Get the number of time points. Returns:. getSizeC; public int getSizeC(); Get the number of image channels. Returns:. getMagnification; public double getMagnification(); Get the magnification value, or Double.NaN if this is unavailable. Returns:. getPreferredTileWidth; public int getPreferredTileWidth(); Get the preferred tile width, which can be used to optimize pixel requests for large images. Returns:. getPreferredTileHeight; public int getPreferredTileHeight(); Get the preferred tile height, which can be used to optimize pixel requests for large images",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html:7701,avail,available,7701,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html,1,['avail'],['available']
Availability,"lues. Returns:. getLowerBound; public double getLowerBound(); Retrieve the lower bound. May be Double.NEGATIVE_INFINITY if the parameter has no lower bound. Returns:. getUpperBound; public double getUpperBound(); Retrieve the upper bound. May be Double.POSITIVE_INFINITY if the parameter has no upper bound. Returns:. setRange; public void setRange(double minValue,; double maxValue); Set the upper and lower bounds.; ; Note: depending on how the parameter is displayed (or if it is displayed) this might not appear; to make a difference. If shown through a ParameterPanel (in QuPath's JavaFX GUI) it is better to; set limits via the panel rather than directly using this method. Parameters:; minValue - ; maxValue - . hasLowerBound; public boolean hasLowerBound(); Returns true if the parameter has a valid lower bound. Returns:. hasUpperBound; public boolean hasUpperBound(); Returns true if the parameter has a valid upper bound. Returns:. getUnit; public String getUnit(); Get the unit to display for this parameter (may be null if no unit is available). Returns:. setValueWithBoundsCheck; public abstract boolean setValueWithBoundsCheck(S lastValue); Set the value of this parameter, constraining it to be within any lower and upper bounds if necessary. Parameters:; lastValue - ; Returns:. setDoubleLastValue; public abstract boolean setDoubleLastValue(double val); A class for setting the numeric value as a double (subclasses should convert this as needed). Parameters:; val - ; Returns:. isValidInput; public boolean isValidInput(S value); Numbers are considered valid if they are not NaN. Parameters:; value - ; Returns:; true if the value would be valid, false otherwise. setStringLastValue; public boolean setStringLastValue(Locale locale,; String value); Description copied from interface: Parameter; Set last value using a string; implementing classes may need to parse this. Parameters:; locale - ; value - ; Returns:. setHidden; public void setHidden(boolean hidden); Description copi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html:4700,avail,available,4700,javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/parameters/NumericParameter.html,1,['avail'],['available']
Availability,"lus has been correctly read from the server. Parameters:; imp - ; request - ; server - . estimateDownsampleFactor; public static double estimateDownsampleFactor(ImagePlus imp,; ImageServer<?> server); Estimate the downsample factor for an image region extracted from an image server, based upon ; the ratio of pixel sizes if possible or ratio of dimensions if necessary.; ; Note that the ratio of dimensions is only suitable if the full image has been extracted!. Parameters:; imp - ; server - ; Returns:. convertToPathObject; @Deprecated; public static PathObject convertToPathObject(ImagePlus imp,; ImageServer<?> server,; Roi roi,; double downsampleFactor,; Function<ROI,PathObject> creator,; ImagePlane plane); Deprecated.; use instead convertToPathObject(Roi, double, double, double, Function, ImagePlane). Create a PathObject for a specific ImageJ Roi.; This method has been deprecated, since its signature was misleading (the server was not used). Parameters:; imp - ; server - ; roi - ; downsampleFactor - ; creator - ; plane - ; Returns:. convertToPathObject; public static PathObject convertToPathObject(Roi roi,; double xOrigin,; double yOrigin,; double downsampleFactor,; Function<ROI,PathObject> creator,; ImagePlane plane); Create a PathObject for a specific ImageJ Roi. Parameters:; roi - the ImageJ ROI; xOrigin - the x-origin to translate the Roi; should be Calibration.xOrigin if available, or 0 otherwise; yOrigin - the y-origin to translate the Roi; should be Calibration.yOrigin if available, or 0 otherwise; downsampleFactor - the downsample factor used for rescaling (or 1.0 for no rescaling); creator - a function; plane - the specific plane to use for the QuPath ROI; if null, the ImageJ Roi position properties will be used instead, where possible; Returns:; a PathObject or null if no object could be created (e.g. the ImageJ roi is null or incompatible); Since:; v0.4.0; See Also:. convertToPathObject(Roi, double, Function, ImagePlus). convertToPathObject; public static P",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:11721,down,downsampleFactor,11721,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,1,['down'],['downsampleFactor']
Availability,"ly different pixel sizes, magnifications etc.). boolean; isRGB(). Returns true if the pixels are stored in (A)RGB form. int; nLevels(). Get the number of resolution levels. boolean; pixelSizeCalibrated(). Returns true if pixel width and height calibration information is available for the image. String; toString();  ; boolean; zSpacingCalibrated(). Returns true if z-spacing calibration information is available for the image. Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Field Details. DEFAULT_CLASSIFICATION_LABELS_CHANNEL; public static final ImageChannel DEFAULT_CLASSIFICATION_LABELS_CHANNEL; Default channel to use with images where the channel type is ImageServerMetadata.ChannelType.CLASSIFICATION. Method Details. getPreferredDownsamplesArray; public double[] getPreferredDownsamplesArray(); Request the preferred downsamples from the image metadata.; ; Note that this makes a defensive copy, and so should not be called often; it is generally preferably ; to request downsample values individually. Returns:. getLevels; public List<ImageServerMetadata.ImageResolutionLevel> getLevels(); Get an unmodifiable list containing the resolution levels. Returns:. getWidth; public int getWidth(); Get the full-resolution image width. Returns:. getHeight; public int getHeight(); Get the full-resolution image height. Returns:. nLevels; public int nLevels(); Get the number of resolution levels. For a non-pyramidal image, this is 1. Returns:. getPixelCalibration; public PixelCalibration getPixelCalibration(); Get a PixelCalibration object representing the pixel size information for this metadata object. Returns:. getDownsampleForLevel; public double getDownsampleForLevel(int level); Get the downsample factor for a specific resolution level. Parameters:; level - ; Returns:. getLevel; public ImageServerMetadata.ImageResolutionLevel getLevel(int level); Get resolution information for a specified pyramidal level. Parameters:; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html:5174,down,downsample,5174,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html,1,['down'],['downsample']
Availability,"ly retain the Hessian matrix per pixel.; This provides an opportunity to request eigenvectors, and/or to sort ; eigenvalues by absolute value. Parameters:; retain - ; Returns:. hessianDeterminant; public MultiscaleFeatures.MultiscaleResultsBuilder hessianDeterminant(boolean calculate); Calculate the determinant of the Hessian matrix per pixel. Parameters:; calculate - ; Returns:. pixelCalibration; public MultiscaleFeatures.MultiscaleResultsBuilder pixelCalibration(PixelCalibration cal,; double downsampleXY); Set the pixel calibration, with optional x,y scaling.; ; If available, this will convert the units in which Gaussian sigma values are applied.; This helps apply an isotropic filtering more easily, by specifying a single sigma value ; and supplying the pixel calibration so that any differences in pixel dimensions is ; automatically adjusted for.; ; DownsampleXY may be further used to scale the pixel units, meaning that even when working ; with a downsampled image it is possible to pass the original PixelCalibration object ; and specify the level of downsampling (rather than need to create a new scaled PixelCalibration). Parameters:; cal - ; downsampleXY - ; Returns:; See Also:. sigmaXY(double); sigmaX(double); sigmaY(double); sigmaZ(double). sigmaXY; public MultiscaleFeatures.MultiscaleResultsBuilder sigmaXY(double sigma); Set all Gaussian sigma values (x, y) to the same value.; ; Note that this value is in pixels by default, or may be microns is supported ; by setting the pixel calibration. Parameters:; sigma - ; Returns:; See Also:. pixelCalibration(PixelCalibration, double); sigmaX(double); sigmaY(double). sigmaX; public MultiscaleFeatures.MultiscaleResultsBuilder sigmaX(double sigma); Set all Gaussian sigma values for the horizontal filter.; ; Note that this value is in pixels by default, or may be microns is supported ; by setting the pixel calibration. Parameters:; sigma - ; Returns:; See Also:. pixelCalibration(PixelCalibration, double); sigmaXY(double); s",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.html:6627,down,downsampled,6627,javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/MultiscaleFeatures.MultiscaleResultsBuilder.html,2,['down'],"['downsampled', 'downsampling']"
Availability,"m if it should be updated, or null if a new histogram should be created. The length should ; match the number of bands in the raster.; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; Returns:; See Also:. computeArgMaxHistogram(WritableRaster, long[], WritableRaster, Rectangle). computeArgMaxHistogram; public static long[] computeArgMaxHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask,; Rectangle bounds); Create a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion, ; with an optional bounding rectangle. Parameters:; raster - the multi-band raster containing values to check; counts - existing histogram if it should be updated, or null if a new histogram should be created. The length should ; match the number of bands in the raster.; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; bounds - optional rectangle defining the bounds of the raster to search.; If not null, this is used with the (also optional) mask to restrict the pixels that are used.; This can give substantial performance improvements for small masked regions embedded in larger images.; Returns:; See Also:. computeArgMaxHistogram(WritableRaster, long[], WritableRaster). computeAboveThresholdCounts; public static long computeAboveThresholdCounts(WritableRaster raster,; int band,; double threshold,; WritableRaster rasterMask); Count the number of above-threshold pixels in a specified band of a raster, with optional mask. Parameters:; raster - the multi-band raster containing values to check; band - the band (channel) to consider; threshold - threshold value; pixels with values > threshold this will be counted; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; Returns:; See Also:. computeAboveThresholdCounts(W",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:13099,mask,mask,13099,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,2,['mask'],['mask']
Availability,"made automatically after completion, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; name - the name of the checkpoint to create; runnable - the runnable to run; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpointAndRun; public Timeit checkpointAndRun(String name,; Runnable runnable,; int nIterations); throws UnsupportedOperationException; Create a checkpoint and immediately run the provided Runnable nIterations times.; The purpose of this is to get better insights into the time required to run a self-contained block of code.; ; Note that no checkpoint is made automatically after completion of the final iteration, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; name - base name of the checkpoint to create; the iteration number will be appended if nIterations > 1; runnable - the runnable to run; nIterations - the number of times to run the runnable; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpoint; public Timeit checkpoint(); throws UnsupportedOperationException; Create a new checkpoint with a default name. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpoint; public Timeit checkpoint(String name); throws UnsupportedOperationException; Create a new checkpoint with the specified name. Parameters:; name - name of the checkpoint; if null, a default name will be generated; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. stop; public Timeit stop(); throws UnsupportedOperationException; Stop the Timeit. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit hasn't been started, or has already been stopped. autoUnits; public Timeit autoUnits(). nanoseconds; public Timeit nanose",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:6272,checkpoint,checkpoint,6272,javadoc/docs/qupath/lib/common/Timeit.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html,1,['checkpoint'],['checkpoint']
Availability,"mage; getCachedRegion(ImageServer<BufferedImage> server,; RegionRequest request);  ; BufferedImage; getCachedThumbnail(ImageServer<BufferedImage> server,; int zPosition,; int tPosition);  ; BufferedImage; getCachedTile(ImageServer<BufferedImage> server,; RegionRequest request);  ; Map<RegionRequest,BufferedImage>; getCachedTilesForServer(ImageServer<BufferedImage> server). Get a map of all cached tiles pertaining to a specific ImageServer. BufferedImage; getThumbnail(ImageServer<BufferedImage> server,; int zPosition,; int tPosition,; boolean addToCache);  ; long; getTileCacheSize(). Get the tile cache size, in bytes. void; paintRegion(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; BufferedImage imgThumbnail,; ImageObserver observer,; ImageRenderer imageDisplay). Paint an image region. void; paintRegionCompletely(ImageServer<BufferedImage> server,; Graphics g,; Shape clipShapeVisible,; int zPosition,; int tPosition,; double downsampleFactor,; ImageObserver observer,; ImageRenderer imageDisplay,; long timeoutMilliseconds). Similar to paintRegion, but wait until all the tiles have arrived (or abort if it is taking too long). protected void; registerRequest(TileListener<BufferedImage> tileListener,; ImageServer<BufferedImage> server,; Shape clipShape,; double downsampleFactor,; int zPosition,; int tPosition). Register a request so that the tile request queue will be populated, including potentially for nearby tiles (i.e. protected void; registerRequest(TileListener<BufferedImage> tileListener,; ImageServer<BufferedImage> server,; RegionRequest region,; double downsampleFactor,; int zPosition,; int tPosition);  ; void; removeTileListener(TileListener<BufferedImage> listener);  ; protected Object; requestImageTile(ImageServer<BufferedImage> server,; RegionRequest request,; Map<RegionRequest,BufferedImage> cache,; boolean ensureTileReturned). Request an image tile. protected boolean; stopWa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html:2854,down,downsampleFactor,2854,javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/stores/DefaultImageRegionStore.html,1,['down'],['downsampleFactor']
Availability,"mage> server,; RegionRequest request). Read a region from an ImageServer<BufferedImage as a PathImage<ImagePlus>. static ImageProcessor; convertToImageProcessor(BufferedImage img,; int band). Extract pixels as an an ImageProcessor from a single band of a BufferedImage. static FloatProcessor; convertToOpticalDensitySum(ColorProcessor cp,; double maxRed,; double maxGreen,; double maxBlue). Calculate optical density values for the red, green and blue channels, then add these all together. static PathObject; convertToPathObject(Roi roi,; double xOrigin,; double yOrigin,; double downsampleFactor,; Function<ROI,PathObject> creator,; ImagePlane plane). Create a PathObject for a specific ImageJ Roi. static PathObject; convertToPathObject(Roi roi,; double downsampleFactor,; Function<ROI,PathObject> creator,; ImagePlus imp). Create a PathObject for a specific ImageJ Roi, using an ImagePlus to help set properties. static PathObject; convertToPathObject(ImagePlus imp,; ImageServer<?> server,; Roi roi,; double downsampleFactor,; Function<ROI,PathObject> creator,; ImagePlane plane). Deprecated.; use instead convertToPathObject(Roi, double, double, double, Function, ImagePlane). static PolygonROI; convertToPolygonROI(PolygonRoi roi,; Calibration cal,; double downsampleFactor,; ImagePlane plane). Convert an ImageJ PolygonRoi to a QuPath PolygonROI. static ROI; convertToROI(Roi roi,; double xOrigin,; double yOrigin,; double downsampleFactor,; ImagePlane plane). Create a ROI from an ImageJ Roi. static ROI; convertToROI(Roi roi,; Calibration cal,; double downsampleFactor,; ImagePlane plane). Create a ROI from an ImageJ Roi, using the Calibration object of an ImagePlus. static <T extends PathImage<? extends ImagePlus>>ROI; convertToROI(Roi roi,; T pathImage). Create a ROI from an ImageJ Roi. static ImagePlus; convertToUncalibratedImagePlus(String title,; BufferedImage img). Convert a BufferedImage to an ImagePlus, without pixel size information or other calibration. static ImageStack; c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:4988,down,downsampleFactor,4988,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,1,['down'],['downsampleFactor']
Availability,"mageProcessor ipMarker,; ImageProcessor ipMask); Apply morphological operation using marker and mask images. The marker image is changed. Parameters:; ipMarker - ; ipMask - ; Returns:. validateMarkerMask; public static boolean validateMarkerMask(ImageProcessor ipMarker,; ImageProcessor ipMask); Check that marker and mask images have the same size, and ensure that marker pixels are <= mask pixels, ; making this if necessary. Parameters:; ipMarker - ; ipMask - ; Returns:. openingByReconstruction; public static ImageProcessor openingByReconstruction(ImageProcessor ip,; double radius); Apply opening by reconstruction, with the specified minimum filter radius. Parameters:; ip - ; radius - ; Returns:. closingByReconstruction; public static ImageProcessor closingByReconstruction(ImageProcessor ip,; double radius); Apply a morphological closing by reconstruction. Parameters:; ip - ImageProcessor to process; radius - minimum filter radius; Returns:; processed image. imposeMinima; public static void imposeMinima(FloatProcessor fp,; Roi roi); Ensure that a FloatProcessor only has region minima within a specified Roi, using morphological reconstruction. Parameters:; fp - ; roi - . imposeMaxima; public static void imposeMaxima(FloatProcessor fp,; Roi roi); Ensure that a FloatProcessor only has region maxima within a specified Roi, using morphological reconstruction. Parameters:; fp - ; roi - . imposeMaxima; public static void imposeMaxima(FloatProcessor fp,; ImageProcessor ipMask); Ensure that a FloatProcessor only has region maxima within a specified mask, using morphological reconstruction. Parameters:; fp - ; ipMask - . findRegionalMaxima; public static ImageProcessor findRegionalMaxima(ImageProcessor ip,; float threshold,; boolean outputBinary); Find regional maxima using morphological reconstruction. Parameters:; ip - input image; threshold - the extent to which a maximum must be greater than its surroundings; outputBinary - if true, the output is a binary image; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/MorphologicalReconstruction.html:4593,mask,mask,4593,javadoc/docs/qupath/imagej/processing/MorphologicalReconstruction.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/processing/MorphologicalReconstruction.html,1,['mask'],['mask']
Availability,"magej.superpixels; Class SLICSuperpixelsPlugin. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.plugins.AbstractDetectionPlugin<BufferedImage>; qupath.lib.plugins.AbstractTileableDetectionPlugin<BufferedImage>; qupath.imagej.superpixels.SLICSuperpixelsPlugin. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class SLICSuperpixelsPlugin; extends AbstractTileableDetectionPlugin<BufferedImage>; An implementation of SLIC superpixels, as described at http://ivrl.epfl.ch/research/superpixels; ; This largely follows the description at:; ; Radhakrishna Achanta, Appu Shaji, Kevin Smith, Aurelien Lucchi, Pascal Fua, and Sabine Süsstrunk ; SLIC Superpixels Compared to State-of-the-art Superpixel Methods ; IEEE Transactions on Pattern Analysis and Machine Intelligence, vol. 34, num. 11, p. 2274 - 2282, May 2012.; ; ; It doesn't follow the code made available by the authors, and differs in some details. ; ; For example, the 'spacing' parameter is also used to determine the resolution at which the superpixel computation ; is performed, and a Gaussian filter is used to help reduce textures in advance.; It is also possible to use color deconvolved images, rather than transforming RGB to CIELAB. Author:; Pete Bankhead. Field Summary. Fields inherited from class qupath.lib.plugins.AbstractInteractivePlugin; params. Constructor Summary; Constructors. Constructor; Description; SLICSuperpixelsPlugin();  . Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ObjectDetector<BufferedImage>; createDetector(ImageData<BufferedImage> imageData,; ParameterList params). Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any informatio",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html:1344,avail,available,1344,javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/superpixels/SLICSuperpixelsPlugin.html,1,['avail'],['available']
Availability,"mall JavaFX pane to support saving object/pixel classifiers and density maps within a project in a standardized way. ScriptableWorkflowStep. A WorkflowStep that can also return some Javascript that, if run, would perform the step. ScriptAttributes. Default attributes that can be set when running scripts. ScriptAutoCompletor. Interface for classes that implement auto-completion (e.g. ScriptEditor. Minimal interface for a script editor that the GUI can call. ScriptEditorControl<T>. Basic script editor control using JavaFX. ScriptLanguage. Abstract class to represent languages supported by the script editor. ScriptLanguageProvider. Class with static methods to fetch all the available ScriptLanguages. ScriptParameters. Class that stores key information that is useful for running scripts. ScriptParameters.Builder. Builder class for ScriptParameters. ScriptStyler. Interface for classes that apply some styling to a RichTextFX's CodeArea. ScriptStylerProvider. Class with static methods to fetch all the available ScriptStylers. ScriptSyntax. Interface for classes that apply some syntax formatting to an EditableText. ScriptSyntaxProvider. Class with static methods to fetch all the available ScriptSyntaxes. ScriptTab. Class representing a script tab (e.g. SelectableItem<T>. Helper class for managing items when only one of them may be selected. SelectedMeasurementTableView. Component to show measurements for a currently-selected object. ServerSelector. Helper class for selecting one image server out of a collection. ServerTools. Static methods helpful when dealing with ImageServers. ShapeFeaturesPlugin<T>. Add shape measurements. ShapeSimplifier. Helper methods for simplifying shapes, such removing polygon points while retaining the a similar overall ; shape at a coarser level. SharedThreadPoolManager. Manager to simplify submitting short tasks in background threads using a shared ExecutorService. SimpleImage. A minimal interface for accessing pixel values in a single-channel i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:51763,avail,available,51763,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['avail'],['available']
Availability,"mask image; height - height of the requested mask image; roi - ROI for mask; request - region that the mask should correspond to, including the origin (x & y) and downsample factor to use.; Returns:. createROIMask; public static BufferedImage createROIMask(ROI roi,; double downsample); Create a ROI mask using the minimal bounding box for the ROI. Parameters:; roi - ; downsample - ; Returns:. createROIMask; public static BufferedImage createROIMask(int width,; int height,; ROI roi,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; roi - ROI for mask; xOrigin - pixel x coordinate of the top left of the region to include in the mask.; yOrigin - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i.e. the amount to scale.; Returns:. createROIMask; public static BufferedImage createROIMask(Shape shape,; double downsample); Create a Shape mask using the minimal bounding box for the Shape. Parameters:; shape - ; downsample - ; Returns:. createShapeMask; public static BufferedImage createShapeMask(int width,; int height,; Shape shape,; double xOrigin,; double yOrigin,; double downsample); Create a grayscale BufferedImage representing a mask for a specified ROI.; ; Pixels inside the ROI will be 255, pixels outside will be 0. Parameters:; width - width of the requested mask image; height - height of the requested mask image; shape - Shape for mask; xOrigin - pixel x coordinate of the top left of the region to include in the mask.; yOrigin - pixel y coordinate of the top left of the region to include in the mask.; downsample - downsample factor to use when generating the mask, i.e. the amount to scale.; Returns:. ensureBufferedImageType; public static B",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:5495,down,downsample,5495,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,3,"['down', 'mask']","['downsample', 'mask']"
Availability,"mat - ; Returns:; See Also:. matToBufferedImage(org.bytedeco.opencv.opencv_core.Mat). matToBufferedImage; public static BufferedImage matToBufferedImage(Mat mat,; ColorModel colorModel); Convert a Mat to a BufferedImage.; ; If no ColorModel is specified, a grayscale model will be used for single-channel 8-bit ; images and RGB/ARGB for 3/4 channel 8-bit images.; ; For all other cases a ColorModel should be specified for meaningful display. Parameters:; mat - ; colorModel - ; Returns:. imageToMatRGB; public static Mat imageToMatRGB(BufferedImage img,; boolean includeAlpha); Extract 8-bit unsigned pixels from a BufferedImage as a multichannel RGB(A) Mat. Parameters:; img - input image; includeAlpha - if true, return any available alpha data as a 4th channel.; Returns:. imageToMatBGR; public static Mat imageToMatBGR(BufferedImage img,; boolean includeAlpha); Extract 8-bit unsigned pixels from a BufferedImage as a multichannel BGR(A) Mat. Parameters:; img - input image; includeAlpha - if true, return any available alpha data as a 4th channel.; Returns:. labelImage; @Deprecated; public static void labelImage(Mat matBinary,; Mat matLabels,; int contourRetrievalMode); Deprecated.; Use label(Mat, Mat, int) instead. Create a labelled image from a binary image using findContours and drawContours. Parameters:; matBinary - ; matLabels - ; contourRetrievalMode - defined within OpenCV findContours. addNoise; public static void addNoise(Mat mat,; double mean,; double stdDev); Add Gaussian noise with specified mean and standard deviation to all channels of a Mat.; This is similar to opencv_core.randn(Mat, Mat, Mat), but supports any number of channels. Parameters:; mat - image to which noise should be added; mean - noise mean; stdDev - noise standard deviation. median; public static double median(Mat mat); Get the median pixel value in a Mat, ignoring NaNs.; This does not distinguish between channels. Parameters:; mat - ; Returns:. percentiles; public static double[] percentiles(Mat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:21065,avail,available,21065,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html,1,['avail'],['available']
Availability,"mber getMinValue(); Get the minimum value supported by this image.; By default, this is the lower bound of the PixelType unless otherwise specified. Returns:; See Also:. getPixelType(). getMaxValue; public Number getMaxValue(); Get the minimum value supported by this image.; By default, this is the lower bound of the PixelType unless otherwise specified.; This purpose of this method is to support other effective bit-depths (e.g. 12-bit, 14-bit). Returns:; See Also:. getPixelType(). pixelSizeCalibrated; public boolean pixelSizeCalibrated(); Returns true if pixel width and height calibration information is available for the image. Returns:. zSpacingCalibrated; public boolean zSpacingCalibrated(); Returns true if z-spacing calibration information is available for the image. Returns:. getAveragedPixelSize; public double getAveragedPixelSize(); Get the averaged pixel size in microns, if available - or Double.NaN otherwise. Returns:. getPixelWidthMicrons; public double getPixelWidthMicrons(); Get the pixel width in microns, if available - or Double.NaN otherwise. Returns:. getPixelHeightMicrons; public double getPixelHeightMicrons(); Get the pixel height in microns, if available - or Double.NaN otherwise. Returns:. getZSpacingMicrons; public double getZSpacingMicrons(); Get the z-spacing in microns, if available - or Double.NaN otherwise. Returns:. getTimeUnit; public TimeUnit getTimeUnit(); Get the time unit for a time series. Returns:. getTimepoint; public double getTimepoint(int ind); Get the time point, defined in getTimeUnit(), or Double.NaN if this is unknown. Parameters:; ind - ; Returns:. getSizeZ; public int getSizeZ(); Get the number of z-slices. Returns:. getSizeT; public int getSizeT(); Get the number of time points. Returns:. getSizeC; public int getSizeC(); Get the number of image channels. Returns:. getMagnification; public double getMagnification(); Get the magnification value, or Double.NaN if this is unavailable. Returns:. getPreferredTileWidth; public i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html:7420,avail,available,7420,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html,1,['avail'],['available']
Availability,"mbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelType, getPreferredDownsamples, getThumbnailDownsampleFactor, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, setMetadata, toString. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. RearrangeRGBImageServer; protected RearrangeRGBImageServer(ImageServer<BufferedImage> server,; String order). Method Details. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Specified by:; readRegion in interface ImageServer<BufferedImage>; Overrides:; readRegion in class TransformingImageServer<BufferedImage>; Parameters:; request - the region for which pixels are requ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RearrangeRGBImageServer.html:3314,down,downsample,3314,javadoc/docs/qupath/lib/images/servers/RearrangeRGBImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RearrangeRGBImageServer.html,1,['down'],['downsample']
Availability,"me of the output directory. FileCopier; outputPath(Path name). Path representing the output directory. FileCopier; relativeToUserDirectory(). Specify that the copying is relative to the QuPath user directory. FileCopier; title(String title). Title for any dialog. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. FileCopier; public FileCopier(). Method Details. title; public FileCopier title(String title); Title for any dialog. Parameters:; title - ; Returns:. relativeToUserDirectory; public FileCopier relativeToUserDirectory(); Specify that the copying is relative to the QuPath user directory.; This is useful if copying files to the user directory itself, or a subdirectory.; If this method is called, then the user will be prompted to create a user directory ; if one does not already exist. Returns:. outputPath; public FileCopier outputPath(String name); Name of the output directory.; If relativeToUserDirectory() is selected, this should be given ; relative to the QuPath user directory; otherwise, it should be an absolute path. Parameters:; name - ; Returns:; See Also:. outputPath(Path). outputPath; public FileCopier outputPath(Path name); Path representing the output directory.; If relativeToUserDirectory() is selected, this should be given ; relative to the QuPath user directory; otherwise, it should be an absolute path. Parameters:; name - ; Returns:; See Also:. outputPath(String). inputFiles; public FileCopier inputFiles(Collection<File> files); Collection of files to copy. Parameters:; files - ; Returns:; See Also:. inputPaths(Collection). inputPaths; public FileCopier inputPaths(Collection<Path> paths); Collection of paths representing files to copy. Parameters:; paths - ; Returns:; See Also:. inputFiles(Collection). doCopy; public void doCopy(); Perform the copying.; Note that any exceptions will be caught and displayed to the user in an error dialog. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/FileCopier.html:3101,error,error,3101,javadoc/docs/qupath/lib/gui/FileCopier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/FileCopier.html,1,['error'],['error']
Availability,"med than RenderedImageServer.createRenderedServer(QuPathViewer). Constructor Summary; Constructors. Constructor; Description; Builder(QuPathViewer viewer). Create a rendered image server build using viewer defaults. Builder(ImageData<BufferedImage> imageData). Create a rendered image server for the specified ImageData;. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; RenderedImageServer.Builder; backgroundColor(int rgb,; boolean keepAlpha). Specify a base color. RenderedImageServer.Builder; backgroundColor(Color color). Specify a base color. ImageServer<BufferedImage>; build(). Create the rendered image server. RenderedImageServer.Builder; display(ImageDisplay display). Deprecated.; use renderer(ImageRenderer) instead (since an ImageDisplay is also an ImageRenderer. RenderedImageServer.Builder; downsamples(double... downsamples). Specify downsamples; this is especially important for 'thick' objects (annotations, TMA cores); because the downsamples define the resolutions at which these will be rendered. RenderedImageServer.Builder; layers(Collection<PathOverlay> layers). Specify one or more overlay layers as a collection. RenderedImageServer.Builder; layers(PathOverlay... layers). Specify one or more overlay layers. RenderedImageServer.Builder; overlayOpacity(double opacity). Specify the opacity for overlay layers. RenderedImageServer.Builder; renderer(ImageRenderer renderer). Specify the ImageRenderer that controls conversion to RGB. RenderedImageServer.Builder; settings(ImageDisplaySettings settings). Specify the ImageDisplaySettings that control conversion to RGB. RenderedImageServer.Builder; store(DefaultImageRegionStore store). Specify the region store used to paint the underlying image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(QuPathViewer viewer); Cr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html:1680,down,downsamples,1680,javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html,2,['down'],['downsamples']
Availability,"meters; channel - number of the channel to extract (0-based index); roiFunction - the function used to select a ROI from an object (generally the main ROI or nucleus),; or null to use no ROI at all; Returns:; Throws:; IOException. extractMaskedPixels; public static double[] extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; String channelName,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. Parameters:; params - processor parameters; channelName - name of the channel to extract; roiFunction - the function used to select a ROI from an object (generally the main ROI or nucleus),; or null to use no ROI at all; Returns:; Throws:; IOException. extractMaskedPixels; public static double[] extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; ColorTransforms.ColorTransform transform,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from the image using the specified transform, and applying any ROI mask. Parameters:; params - processor parameters; transform - transform to extract single-channel pixels; roiFunction - the function used to select a ROI from an object (generally the main ROI or nucleus),; or null to use no ROI at all; Returns:; Throws:; IOException. maskObject; public static List<PathObject> maskObject(ROI parentROI,; PathObject child); Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. Parameters:; parentROI - ; child - ; Returns:; either an empty or singleton list, depending upon whether the child object has a non-empty; ROI after the masking is applied. maskObjectAndSplit; public static List<PathObject> maskObjectAndSplit(ROI parentROI,; PathObject child); Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html:3755,mask,mask,3755,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html,1,['mask'],['mask']
Availability,"mon boundary and have the same classification.; A small overlap tolerance can be used to compensate for slight misalignment of tiles.; ; After identifying a common boundary line between ROIs, the ROI boundaries are intersected with the line,; and the two intersections are subsequently intersected with each other to determine the shared intersection.; The length of the shared intersection is then used to compute the intersection over union.; ; This is intended for post-processing a tile-based segmentation, where the tiling has been strictly enforced; (i.e. any objects have been clipped to non-overlapping tile boundaries). Parameters:; sharedBoundaryThreshold - minimum intersection-over-union (IoU) proportion of the possibly-clipped boundary; * for merging; overlapTolerance - amount of overlap allowed between objects, in pixels. If zero, the boundary must be; shared exactly. A typical value is 0.125, which allows for a small, sub-pixel overlap.; Returns:; an object merger that uses a shared boundary criterion and overlap tolerance. createSharedClassificationMerger; public static ObjectMerger createSharedClassificationMerger(); Create an object merger that can merge together any objects with similar ROIs (e.g. points, areas), the same; classification, and are on the same image plane.; ; The ROIs to not need to be touching; the resulting merged objects can have discontinuous ROIs. Returns:; an object merger that can merge together any objects with similar ROIs and the same classification. createTouchingMerger; public static ObjectMerger createTouchingMerger(); Create an object merger that can merge together any objects with similar ROIs (e.g. points, areas) that also; touch one another.; ; Objects must also have the same classification and be on the same image plane to be mergeable.; ; Note that this is a strict criterion following the Java Topology Suite definition of touching, which requires; that the boundaries of the geometries intersect, but the interiors do not int",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/utils/ObjectMerger.html:4615,toler,tolerance,4615,javadoc/docs/qupath/lib/objects/utils/ObjectMerger.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/utils/ObjectMerger.html,1,['toler'],['tolerance']
Availability,"mponent from a packed (A)RGB int value. MASK_GREEN - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the green component from a packed (A)RGB int value. MASK_RED - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the red component from a packed (A)RGB int value. maskFunction(MaskSupplier<S, T>) - Method in class qupath.lib.experimental.pixels.Parameters.Builder. Function used to lazily create a mask corresponding to the image for a specified ROI. maskImageNames - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; maskImageNamesProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request that image names are hidden within the user interface. maskObject(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. maskObjectAndSplit(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. maskSupplier(MaskSupplier<S, T>) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set the mask supplier. MaskSupplier<S,T> - Interface in qupath.lib.experimental.pixels. A functional interface for supplying a mask corresponding to an image. MATCH_VIEWER_RESOLUTIONS - Variable in class qupath.lib.gui.actions.ViewerActions;  ; matchByID(Collection<? extends PathObject>, Collection<? extends PathObject>) - Static method in class qupath.lib.objects.PathObjectTools. Match objects according to their IDs. matchClassName(String...) - Method in class qupath.imagej.images.servers.ImageJServerBuilder;  ; matchClassName(String...) - Method in class qupath.lib.images.servers.bioformats.BioFormatsServer",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:673140,mask,maskObjectAndSplit,673140,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['mask'],['maskObjectAndSplit']
Availability,"mptForParentObjects(String name,; ImageData<?> imageData,; boolean includeSelected,; Collection<Class<? extends PathObject>> supportedParents). Get the parent objects to use when running the plugin, or null if no suitable parent objects are found. static boolean; promptForSliderRange(Slider slider). Prompt the user to input min/max values for a slider. static boolean; promptToClearAllSelectedObjects(ImageData<?> imageData). Prompt user to select all currently-selected objects (except TMA core objects). static boolean; promptToRemoveSelectedObject(PathObject pathObjectSelected,; PathObjectHierarchy hierarchy). Prompt to remove a single, specified selected object. static boolean; promptToSetActiveAnnotationProperties(PathObjectHierarchy hierarchy). Prompt the user to set properties for the currently-selected annotation(s). static <T> void; refreshList(ListView<T> listView). Refresh a ListView in the Application thread. static void; showNoImageError(String title). Show an error message that no image is available. static void; showNoProjectError(String title). Show an error message that no project is available. static boolean; showParameterDialog(String title,; ParameterList params). Show a (modal) dialog for a specified ParameterList. static void; showWithScreenSizeConstraints(Stage stage,; double proportion). Show a stage, while ensuring that it cannot be larger than the screen size. static void; showWithSizeConstraints(Stage stage,; double maxWidth,; double maxHeight). Show a stage, while ensuring that it cannot be larger the maximum dimensions provided; This effectively sets the maximum dimensions of the stage, shows it, and then restores the previous maximum dimensions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GuiTools; public GuiTools(). Method Details. createMoreButton; public static Button createMoreButton(ContextMenu menu,; Side side); Create a",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html:5820,error,error,5820,javadoc/docs/qupath/lib/gui/tools/GuiTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html,2,"['avail', 'error']","['available', 'error']"
Availability,"mputeUnsignedIntHistogram(WritableRaster, long[], WritableRaster, Rectangle). computeUnsignedIntHistogram; public static long[] computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask,; Rectangle bounds); Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values, optionally restricted to a bounding rectangle. Parameters:; raster - the raster containing the data for the histogram; if not TYPE_BYTE or TYPE_USHORT an IllegalArgumentException will be thrown; counts - histogram counts; if null, a new array will be created. Its must be sufficient for the data type, i.e. 256 or 65536.; No size checking is performed, therefore if non-null it must be sufficiently large for the data type.; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped.; bounds - optional rectangle defining the bounds of the raster to search.; If not null, this is used with the (also optional) mask to restrict the pixels that are used.; This can give substantial performance improvements for small masked regions embedded in larger images.; Returns:; the updated histogram counts; See Also:. computeUnsignedIntHistogram(WritableRaster, long[], WritableRaster). computeArgMaxHistogram; public static long[] computeArgMaxHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask); Create a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion. Parameters:; raster - the multi-band raster containing values to check; counts - existing histogram if it should be updated, or null if a new histogram should be created. The length should ; match the number of bands in the raster.; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; Returns:; See Also:. computeArgMaxHistogram(WritableRaster, long[], WritableRaster, Rectangle). computeArgMaxHi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:11528,mask,mask,11528,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,1,['mask'],['mask']
Availability,"ms.IntensityFeaturesPlugin;  ; getDescription() - Method in class qupath.lib.algorithms.LocalBinaryPatternsPlugin;  ; getDescription() - Method in class qupath.lib.algorithms.TilerPlugin;  ; getDescription() - Method in class qupath.lib.extension.svg.SvgExtension;  ; getDescription() - Method in interface qupath.lib.gui.extensions.QuPathExtension. A short description of the extension for displaying in the main GUI. getDescription() - Method in interface qupath.lib.gui.prefs.QuPathStyleManager.StyleOption. Get a user-friendly description of the style. getDescription() - Method in class qupath.lib.gui.scripting.richtextfx.RichScriptEditorExtension;  ; getDescription() - Method in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension;  ; getDescription() - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; getDescription() - Method in interface qupath.lib.images.servers.FileFormatInfo.ImageCheckType. Get the image description, as stored in a TIFF, or null if no description is available. getDescription() - Method in interface qupath.lib.images.servers.ImageServerBuilder. Get a short, human-readable description for display in a GUI. getDescription() - Method in class qupath.lib.images.servers.JsonImageServerBuilder;  ; getDescription() - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; getDescription() - Method in class qupath.lib.objects.PathAnnotationObject. Get a free text description previously set for this annotation. getDescription() - Method in class qupath.lib.plugins.objects.DilateAnnotationPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.FillAnnotationHolesPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.FindConvexHullDetectionsPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.RefineAnnotationsPlugin;  ; getDescription() - Method in class qupath.lib.plugins.objects.ShapeFeaturesPlugin;  ; getDescription() - Method in",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:380125,avail,available,380125,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"n - if the PixelType is unknown. apply; public static void apply(Mat mat,; DoubleUnaryOperator operator); Apply an operation to the pixels of an image.; ; No type conversion is applied; it is recommended to use floating point images, or otherwise check ; that clipping, rounding and non-finite values are handled as expected. Parameters:; mat - image; operator - operator to apply to pixels of the image, in-place. createMask; public static Mat createMask(Mat mat,; DoublePredicate predicate,; double trueValue,; double falseValue); Create a mask by applying a predicate to pixel values. Parameters:; mat - the input image; predicate - the predicate to apply to each pixel; trueValue - the value to include in the mask for pixels that match the predicate; falseValue - the value to include in the mask for pixels that do not match the predicate; Returns:; the mask; See Also:. createBinaryMask(Mat, DoublePredicate). createBinaryMask; public static Mat createBinaryMask(Mat mat,; DoublePredicate predicate); Create a binary mask (0, 255 values) by applying a predicate to pixel values. Parameters:; mat - the input image; predicate - the predicate to apply to each pixel; Returns:; the mask; See Also:. createMask(Mat, DoublePredicate, double, double). replaceValues; public static void replaceValues(Mat mat,; double originalValue,; double newValue); Replace a specific value in an array.; ; If the value to replace is NaN, use instead replaceNaNs(Mat, double). Parameters:; mat - array; originalValue - value to replace; newValue - value to include in the output; See Also:. replaceNaNs(Mat, double); fill(Mat, Mat, double). replaceNaNs; public static void replaceNaNs(Mat mat,; double newValue); Replace NaNs in a floating point array. Parameters:; mat - array; newValue - replacement value. fill; public static void fill(Mat mat,; Mat mask,; double value); Fill the pixels of an image with a specific value, corresponding to a mask. Parameters:; mat - input image; mask - binary mask; value - repl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:15522,mask,mask,15522,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html,1,['mask'],['mask']
Availability,"n RGB image determined by transforming the input image using the specified channels. getTransformedValueAsString; public String getTransformedValueAsString(BufferedImage img,; int x,; int y); Get a string representation of a transformed pixel value, using the currently-selected channels. Parameters:; img - image providing the value; x - x-coordinate of the pixel; y - y-coordinate of the pixels; Returns:; a String representation of the pixel's transformed value. autoSetDisplayRange; public void autoSetDisplayRange(ChannelDisplayInfo info); Automatically set the display range for a channel, using the default saturation defined in PathPrefs.autoBrightnessContrastSaturationPercentProperty(). Parameters:; info - channel to update. autoSetDisplayRange; public void autoSetDisplayRange(ChannelDisplayInfo info,; double saturation); Automatically set the display range for a channel. Parameters:; info - channel to update; saturation - proportion of pixels that may be saturated, i.e. have the max/min display values (between 0.0 and 1.0). getHistogram; public Histogram getHistogram(ChannelDisplayInfo info); Returns a histogram for a ChannelInfo, or none if no histogram is available (e.g. the channel is RGB). Parameters:; info - ; Returns:. toJSON; public String toJSON(boolean prettyPrint); Create a JSON representation of the main components of the current display. Parameters:; prettyPrint - ; Returns:. isCompatible; public boolean isCompatible(ImageDisplay display); Check if an image display is 'compatible' with this one.; Compatible means that they have the same number of channels, and the same channel names.; This may be used p. Parameters:; display - ; Returns:. updateFromDisplay; public boolean updateFromDisplay(ImageDisplay display); Update the current display based upon a different display.; This only makes changes if isCompatible(ImageDisplay) returns true.; ; This method exists to make it easier to sync display settings across viewers. Parameters:; display - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html:15028,avail,available,15028,javadoc/docs/qupath/lib/display/ImageDisplay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html,1,['avail'],['available']
Availability,"n class qupath.lib.gui.actions.InfoMessage. Create an error message with a count. ERROR - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Error or exception. ERROR - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Error logging (only if something goes recognizably wrong). escapeFilePath(String) - Static method in class qupath.lib.common.GeneralTools. Escape backslashes in an absolute file path - useful when scripting. estimateAvailableMemory() - Static method in class qupath.lib.common.GeneralTools. Estimate the current available memory in bytes, based upon the JVM max and the memory currently used. estimateCellBoundary(Geometry, double, double) - Static method in class qupath.lib.objects.CellTools. Estimate a cell boundary using Geometry objects. estimateDownsampleFactor(ImagePlus, ImageServer<?>) - Static method in class qupath.imagej.tools.IJTools. Estimate the downsample factor for an image region extracted from an image server, based upon ; the ratio of pixel sizes if possible or ratio of dimensions if necessary. estimateImageType(ImageServer<BufferedImage>, BufferedImage) - Static method in class qupath.lib.gui.tools.GuiTools. Make a semi-educated guess at the image type of a PathImageServer. estimateStains(int[], float[], float[], float[], ColorDeconvolutionStains, double, double, double, boolean) - Static method in class qupath.lib.analysis.algorithms.EstimateStainVectors. Check colors only currently applies to H&E. estimateStains(BufferedImage, ColorDeconvolutionStains, boolean) - Static method in class qupath.lib.analysis.algorithms.EstimateStainVectors. Estimate two stains from a BufferedImage, with default parameter settings. estimateStains(BufferedImage, ColorDeconvolutionStains, double, double, double, boolean) - Static method in class qupath.lib.analysis.algorithms.EstimateStainVectors. Estimate two stains from a BufferedImage. EstimateStainVectors - Class in qupath.lib.analysis.algorithms. Code for ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:284648,down,downsample,284648,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['down'],['downsample']
Availability,"n class qupath.lib.gui.commands.Commands. Show a simple dialog for viewing (and optionally removing) detection measurements. showDetectionMeasurementTable(QuPathGUI, ImageData<BufferedImage>) - Static method in class qupath.lib.gui.commands.Commands. Show a measurement table for all detection objects. showDetectionsProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showEditor() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; showEditor() - Method in interface qupath.lib.gui.scripting.ScriptEditor. Show the script editor. showErrorMessage(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message. showErrorMessage(String, Throwable) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message, displaying the localized message of a Throwable. showErrorMessage(String, Node) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message, with the content defined within a Node. showErrorNotification(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error notification. showErrorNotification(String, Throwable) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error notification, displaying the localized message of a Throwable. showExperimentalCommands - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; showExperimentalOptionsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Flag to indicate that menu items marked 'experimental' should be shown to the user. showGridProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showHistogram(String) - Method in class qupath.lib.gui.charts.HistogramDisplay. Show the histogram for a specified data column. showImageNameInTitle - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; showImageNameInTitleProperty() - Static method in class qu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:964790,error,error,964790,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['error'],['error']
Availability,"n contained within an ImageRegion, also contains the path to the image; (and optionally an additional image name stored within it) and a downsample value. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static List<RegionRequest>; createAllRequests(ImageServer<?> server,; double downsample). Create requests for the full width and height of an ImageServer, for all planes (z-slices and time points). static RegionRequest; createInstance(String path,; double downsample,; int x,; int y,; int width,; int height). Create a request for a region specified in terms of its bounding box, using the first z-slice and time point. static RegionRequest; createInstance(String path,; double downsample,; int x,; int y,; int width,; int height,; int z,; int t). Create a request for a region specified in terms of its bounding box, z-slice and time point. static RegionRequest; createInstance(String path,; double downsample,; int x,; int y,; int width,; int height,; ImagePlane plane). Create a request for a region specified in terms of its bounding box and ImagePlane. static RegionRequest; createInstance(String path,; double downsample,; Collection<? extends ROI> rois). Create a request that contains the pixels of the specified ROIs. static RegionRequest; createInstance(String path,; double downsample,; ImageRegion region). Create a request corresponding to a specified ImageRegion. static RegionRequest; createInstance(String path,; double downsample,; ROI roi). Create a request that contains the pixels of the specified ROI. static RegionRequest; createInstance(String path,; RegionRequest request). Create a request that matches another request but with a different path. static RegionRequest; createInstance(ImageServer<?> server). Create a request for the full width and height of an ImageServer, for the default plane (first z-slice, time point) ; and first resolution level downsample (usually 1, but not",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html:1638,down,downsample,1638,javadoc/docs/qupath/lib/regions/RegionRequest.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html,1,['down'],['downsample']
Availability,"n image.; ; No type conversion is applied; it is recommended to use floating point images, or otherwise check ; that clipping, rounding and non-finite values are handled as expected. Parameters:; mat - image; operator - operator to apply to pixels of the image, in-place. createMask; public static Mat createMask(Mat mat,; DoublePredicate predicate,; double trueValue,; double falseValue); Create a mask by applying a predicate to pixel values. Parameters:; mat - the input image; predicate - the predicate to apply to each pixel; trueValue - the value to include in the mask for pixels that match the predicate; falseValue - the value to include in the mask for pixels that do not match the predicate; Returns:; the mask; See Also:. createBinaryMask(Mat, DoublePredicate). createBinaryMask; public static Mat createBinaryMask(Mat mat,; DoublePredicate predicate); Create a binary mask (0, 255 values) by applying a predicate to pixel values. Parameters:; mat - the input image; predicate - the predicate to apply to each pixel; Returns:; the mask; See Also:. createMask(Mat, DoublePredicate, double, double). replaceValues; public static void replaceValues(Mat mat,; double originalValue,; double newValue); Replace a specific value in an array.; ; If the value to replace is NaN, use instead replaceNaNs(Mat, double). Parameters:; mat - array; originalValue - value to replace; newValue - value to include in the output; See Also:. replaceNaNs(Mat, double); fill(Mat, Mat, double). replaceNaNs; public static void replaceNaNs(Mat mat,; double newValue); Replace NaNs in a floating point array. Parameters:; mat - array; newValue - replacement value. fill; public static void fill(Mat mat,; Mat mask,; double value); Fill the pixels of an image with a specific value, corresponding to a mask. Parameters:; mat - input image; mask - binary mask; value - replacement value; See Also:. fill(Mat, double). fill; public static void fill(Mat mat,; double value); Fill the pixels of an image with a specific",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:15684,mask,mask,15684,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html,1,['mask'],['mask']
Availability,"n links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui; Class ExtensionClassLoader. java.lang.Object; java.lang.ClassLoader; java.security.SecureClassLoader; java.net.URLClassLoader; qupath.lib.gui.ExtensionClassLoader. All Implemented Interfaces:; Closeable, AutoCloseable. public class ExtensionClassLoader; extends URLClassLoader; ClassLoader for loading QuPath extensions and other jars from the user directory. Author:; Pete Bankhead. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; Path; getExtensionsDirectory(). Directory containing extensions. static ExtensionClassLoader; getInstance(). Get a singleton instance of the ExtensionClassLoader. void; refresh(). Ensure all Jars in the extensions directory (and one subdirectory down) are available. Methods inherited from class java.net.URLClassLoader; addURL, definePackage, findClass, findResource, findResources, getPermissions, getResourceAsStream, getURLs, newInstance, newInstance. Methods inherited from class java.security.SecureClassLoader; defineClass, defineClass. Methods inherited from class java.lang.ClassLoader; clearAssertionStatus, defineClass, defineClass, defineClass, defineClass, definePackage, findClass, findLibrary, findLoadedClass, findResource, findSystemClass, getClassLoadingLock, getDefinedPackage, getDefinedPackages, getName, getPackage, getPackages, getParent, getPlatformClassLoader, getResource, getResources, getSystemClassLoader, getSystemResource, getSystemResourceAsStream, getSystemResources, getUnnamedModule, isRegisteredAsParallelCapable, loadClass, loadClass, registerAsParallelCapable, resolveClass, resources, setClassAssertionStatus, setDefaultAssertionStatus, setPackageAssertionStatus, setSigners. Methods ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html:1122,down,down,1122,javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html,2,"['avail', 'down']","['available', 'down']"
Availability,"n that can apply a prediction with one or more blobs as input. getPredictionFunction() - Method in class qupath.opencv.dnn.OpenCVDnn;  ; getPredictionOp() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the image op used for prediction only. getPreferencePane() - Method in class qupath.lib.gui.QuPathGUI. Get a reference to the PreferencePane. getPreferredDownsampleFactor(ImageServer<?>, double) - Static method in class qupath.lib.images.servers.ServerTools. Get the downsample factor supported by the server that is the best match for the requested downsample. getPreferredDownsamples() - Method in class qupath.lib.images.servers.AbstractImageServer. Request the preferred downsamples from the image metadata. getPreferredDownsamples() - Method in interface qupath.lib.images.servers.ImageServer. Get an array of downsample factors supported by the server. getPreferredDownsamplesArray() - Method in class qupath.lib.images.servers.ImageServerMetadata. Request the preferred downsamples from the image metadata. getPreferredOverlayColor() - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay. Return the preferred overlay color. getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.opencv.CellCountsCV;  ; getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.opencv.WatershedNucleiCV;  ; getPreferredPixelSizeMicron",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:488929,down,downsamples,488929,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['down'],['downsamples']
Availability,"n) - Static method in class qupath.opencv.tools.ProcessingCV. Apply an intensity-constrained watershed transform, preventing regions from expanding to pixels below a specified minimum threshold. doWatershed(SimpleImage, SimpleModifiableImage, boolean) - Static method in class qupath.lib.analysis.algorithms.Watershed. Apply a 2D watershed transform. doWatershed(SimpleImage, SimpleModifiableImage, double, boolean) - Static method in class qupath.lib.analysis.algorithms.Watershed. Apply a 2D watershed transform, constraining region growing using an intensity threshold. DOWNLOAD - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; downsample(double) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set the downsample factor to use with requesting image regions. downsample(double) - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Specify downsample factor (defined in terms of the full resolution image space). downsample(double) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Specify downsample factor. downsample(double) - Method in class qupath.lib.images.writers.TileExporter. Define resolution as a downsample value. downsamples(double...) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify downsamples; this is especially important for 'thick' objects (annotations, TMA cores); because the downsamples define the resolutions at which these will be rendered. downsamples(double...) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify downsample factors to use in the final pyramid. DragDropImportListener - Class in qupath.lib.gui.viewer. Drag and drop support for main QuPath application, which can support a range of different object types (Files, URLs, Strings,..). DragDropImportListener(QuPathGUI) - Constructor for class qupath.lib.gui.viewer.DragDropImportListener. Constructor. DragDropImportListener.DropHandler<T> - Interface in ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:271370,down,downsample,271370,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['down'],['downsample']
Availability,"n); Create an ImageServer that represents a cropped region of another (larger) server. Parameters:; server - the 'base' server to be cropped; region - the region within the 'base' server that should be cropped. Method Details. createID; protected String createID(); Description copied from class: AbstractImageServer; Create a unique ID for the server, which can be returned as the default value of AbstractImageServer.getPath().; A suggested implementation is; . getClass().getName() + "": "" + URI + parameters; ; This will be called on demand whenever AbstractImageServer.getPath() is first required. Specified by:; createID in class AbstractImageServer<BufferedImage>; Returns:. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Specified by:; readRegion in interface ImageServer<BufferedImage>; Overrides:; readRegion in class TransformingImageServer<BufferedImage>; Parameters:; request - the region for which pixels are requ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/CroppedImageServer.html:3991,down,downsample,3991,javadoc/docs/qupath/lib/images/servers/CroppedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/CroppedImageServer.html,1,['down'],['downsample']
Availability,"n<ROI,PathObject> creator,; ImagePlus imp); Create a PathObject for a specific ImageJ Roi, using an ImagePlus to help set properties. Parameters:; roi - the ImageJ ROI; downsampleFactor - the downsample factor used for rescaling (or 1.0 for no rescaling); creator - a function; imp - the ImagePlus associated with this Roi; it is used to determine the xOrigin, yOrigin and image plane; Returns:; a PathObject or null if no object could be created (e.g. the ImageJ roi is null or incompatible); Since:; v0.4.0; See Also:. convertToPathObject(Roi, double, double, double, Function, ImagePlane). convertToAnnotation; public static PathObject convertToAnnotation(Roi roi,; double xOrigin,; double yOrigin,; double downsampleFactor,; ImagePlane plane); Create an annotation object for a specific ImageJ Roi, using an ImagePlus to help set properties. Parameters:; roi - the ImageJ ROI; xOrigin - the x-origin to translate the Roi; should be Calibration.xOrigin if available, or 0 otherwise; yOrigin - the y-origin to translate the Roi; should be Calibration.yOrigin if available, or 0 otherwise; downsampleFactor - the downsample factor used for rescaling (or 1.0 for no rescaling); plane - the specific plane to use for the QuPath ROI; if null, the ImageJ Roi position properties will be used instead, where possible; Returns:; a PathObject or null if no object could be created (e.g. the ImageJ roi is null or incompatible); Since:; v0.4.0; See Also:. convertToPathObject(ImagePlus, ImageServer, Roi, double, Function, ImagePlane); convertToAnnotation(Roi, double, ImagePlus). convertToDetection; public static PathObject convertToDetection(Roi roi,; double xOrigin,; double yOrigin,; double downsampleFactor,; ImagePlane plane); Create a detection object for a specific ImageJ Roi, using an ImagePlus to help set properties. Parameters:; roi - the ImageJ ROI; xOrigin - the x-origin to translate the Roi; should be Calibration.xOrigin if available, or 0 otherwise; yOrigin - the y-origin to translate th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:13759,avail,available,13759,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,1,['avail'],['available']
Availability,"nModels() - Constructor for class qupath.opencv.dnn.DnnModels;  ; DnnObjectClassifier - Class in qupath.opencv.dnn. Initial implementation of a patch-based ObjectClassifier using an OpenCV-compatible DNN. DnnObjectClassifier(PathObjectFilter, DnnModel, List<PathClass>, int, int, double) - Constructor for class qupath.opencv.dnn.DnnObjectClassifier. Constructor. DnnShape - Class in qupath.opencv.dnn. Helper class to represent input and output shapes associated with PredictionFunction. DnnTools - Class in qupath.opencv.dnn. Tools for working with OpenCV's DNN module. DnnTools() - Constructor for class qupath.opencv.dnn.DnnTools;  ; DnnTools.DNNLayer - Class in qupath.opencv.dnn. Helper class to summarize a DNN layer. do8BitRangeCheck(double) - Static method in class qupath.lib.common.ColorTools. Clip an input value to be an integer in the range 0-255 (with rounding down). do8BitRangeCheck(float) - Static method in class qupath.lib.common.ColorTools. Clip an input value to be an integer in the range 0-255 (with rounding down). do8BitRangeCheck(int) - Static method in class qupath.lib.common.ColorTools. Clip an input value to be an integer in the range 0-255. DocGenerator - Class in qupath.lib.gui.tools. Command line tool to export icons and markdown documentation for QuPath commands. DocGenerator() - Constructor for class qupath.lib.gui.tools.DocGenerator;  ; doCopy() - Method in class qupath.lib.gui.FileCopier. Perform the copying. doCreateLogFilesProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request a log file to be generated. DOCS - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; doesFeatureTransform() - Method in class qupath.opencv.ml.FeaturePreprocessor. Returns true if this preprocessor transforms the features beyond a simple normalization. doesSomething() - Method in interface qupath.lib.display.ChannelDisplayInfo. Returns true if this does something - anything - and false otherwise. doesSomething() - Method in c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:267174,down,down,267174,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['down'],['down']
Availability,"nRequest;  ; equals(Object) - Method in class qupath.opencv.tools.LocalNormalization.SmoothingScale;  ; equals(Object) - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; equals(Object) - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; equalTo(String) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification (by name) for objects for which the specified measurement has a value exactly equal to the threshold. equalTo(PathClass) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification for objects for which the specified measurement has a value exactly equal to the threshold. error() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create an error alert dialog. error(String) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text. error(String, int) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text and a count. error(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a error message to show a count of errors. error(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message. error(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with a count. ERROR - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Error or exception. ERROR - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Error logging (only if something goes recognizably wrong). escapeFilePath(String) - Static method in class qupath.lib.common.GeneralTools. Escape backslashes in an absolute file path - useful when scripting. estimateAvailableMemory() - Static method in class qupath.lib.common.GeneralTools. Estima",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:283257,error,error,283257,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['error'],['error']
Availability,"nString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TMAGridOverlay; public TMAGridOverlay(OverlayOptions overlayOptions); Constructor. Parameters:; overlayOptions - overlay options to control the display of this overlay. Method Details. isVisible; public boolean isVisible(); Description copied from class: AbstractOverlay; Check overlay visibility status. If isVisible() returns false,; then calls to paintOverlay() will not do anything. Overrides:; isVisible in class AbstractOverlay; Returns:. paintOverlay; public void paintOverlay(Graphics2D g,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely); Description copied from interface: PathOverlay; Paint the overlay to a graphics object. The graphics object will have a transform applied to it, so the painting should; make use of coordinates in the original image space. Parameters:; g - Graphics2D object to which drawing should be performed. This should have any transform already applied to it.; imageRegion - The maximum image region that should be shown.; downsampleFactor - The downsample factor at which the overlay will be viewed. There is no need for rescaling according to; this value since it has already been applied to the Graphics2D as part of its AffineTransform, however; it may optionally be needed within the method e.g. to correct line thicknesses.; imageData - the ImageData associated with this overlay. If the overlay is being displayed on a viewer, this is the ImageData open ; within the viewer. Not all overlays require this, and it may be null.; paintCompletely - If true, the method is permitted to return without completely painting everything, for performance reasons. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/TMAGridOverlay.html:2788,down,downsampleFactor,2788,javadoc/docs/qupath/lib/gui/viewer/overlays/TMAGridOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/TMAGridOverlay.html,2,['down'],"['downsample', 'downsampleFactor']"
Availability,"nalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ContourTracing; public ContourTracing(). Method Details. labelsToDetections; public static List<PathObject> labelsToDetections(Collection<Path> paths,; boolean mergeByLabel); throws IOException; Convert labeled images to detection objects, determining the region from the filename if possible. Parameters:; paths - paths to image files (e.g. PNGs); mergeByLabel - if true, merge objects with the same ROI label; Returns:; a list of objects generated from the labels; Throws:; IOException - if there is an error reading the images. labelsToCells; public static List<PathObject> labelsToCells(Collection<Path> paths,; boolean mergeByLabel); throws IOException; Convert 2-channel labeled images to cell objects, determining the region from the filename if possible. Parameters:; paths - paths to image files (e.g. PNGs); mergeByLabel - if true, merge objects with the same ROI label; Returns:; a list of objects generated from the labels; Throws:; IOException - if there is an error reading the images. labelsToDetections; public static List<PathObject> labelsToDetections(Path path,; RegionRequest request); throws IOException; Convert a labeled image to detection objects. Parameters:; path - path to labeled image file (e.g. PNGs); request - a RegionRequest representing the region or the full image, used to reposition and rescale ROIs.; If not provided, this will be extracted from the filename, if possible.; Returns:; a list of objects generated from the labels; Throws:; IOException - if there is an error reading the images. labelsToCells; public static List<PathObject> labelsToCells(Path path,; RegionRequest request); throws IOException; Convert a 2-channel labeled image to cell objects. Parameters:; path - path to labeled image file (e.g. PNGs); request - a RegionRequest representing the region or the full image, used to reposition and rescale ROIs.; If not provided, this will be extracted ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html:7056,error,error,7056,javadoc/docs/qupath/lib/analysis/images/ContourTracing.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html,1,['error'],['error']
Availability,"nate from the viewer into the corresponding pixel coordinate in the full-resolution image - optionally constraining it to any server bounds. compress(String) - Method in interface qupath.lib.gui.scripting.syntax.ScriptSyntax. Compresses the specified text by removing extra space, according to the syntax. compression(OMEPyramidWriter.CompressionType) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Request the output compression type. compressSourceAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; computeAboveThresholdCounts(WritableRaster, int, double, WritableRaster) - Static method in class qupath.lib.awt.common.BufferedImageTools. Count the number of above-threshold pixels in a specified band of a raster, with optional mask. computeAboveThresholdCounts(WritableRaster, int, double, WritableRaster, Rectangle) - Static method in class qupath.lib.awt.common.BufferedImageTools. Count the number of above-threshold pixels in a specified band of a raster, with optional mask and/or bounding rectangle. computeAngle(StainVector, StainVector) - Static method in class qupath.lib.color.StainVector. Calculate the angle between two stain vectors, in degrees. computeArgMaxHistogram(WritableRaster, long[], WritableRaster) - Static method in class qupath.lib.awt.common.BufferedImageTools. Create a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion. computeArgMaxHistogram(WritableRaster, long[], WritableRaster, Rectangle) - Static method in class qupath.lib.awt.common.BufferedImageTools. Create a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion, ; with an optional bounding rectangle. computeConsoleStyles(String, boolean) - Method in class qupath.lib.gui.scripting.richtextfx.stylers.GroovyStyler;  ; computeConsoleStyles(String, boolean) - Method in class qupath.lib.gui.scripting.richtextfx.stylers.Prop",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:129562,mask,mask,129562,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['mask'],['mask']
Availability,"nce v0.4.0, use PathClass.getPositive(PathClass). getPostprocessing() - Method in class qupath.opencv.ml.PatchClassifierParams. Get any postprocessing steps that should be applied after prediction. getPredictionFunction() - Method in class qupath.opencv.dnn.AbstractDnnModel. Get the prediction function that can apply a prediction with one or more blobs as input. getPredictionFunction() - Method in class qupath.opencv.dnn.OpenCVDnn;  ; getPredictionOp() - Method in class qupath.opencv.ml.PatchClassifierParams. Get the image op used for prediction only. getPreferencePane() - Method in class qupath.lib.gui.QuPathGUI. Get a reference to the PreferencePane. getPreferredDownsampleFactor(ImageServer<?>, double) - Static method in class qupath.lib.images.servers.ServerTools. Get the downsample factor supported by the server that is the best match for the requested downsample. getPreferredDownsamples() - Method in class qupath.lib.images.servers.AbstractImageServer. Request the preferred downsamples from the image metadata. getPreferredDownsamples() - Method in interface qupath.lib.images.servers.ImageServer. Get an array of downsample factors supported by the server. getPreferredDownsamplesArray() - Method in class qupath.lib.images.servers.ImageServerMetadata. Request the preferred downsamples from the image metadata. getPreferredOverlayColor() - Method in class qupath.lib.gui.viewer.overlays.AbstractOverlay. Return the preferred overlay color. getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.WatershedCellDetection;  ; getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.superp",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:488627,down,downsamples,488627,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['down'],['downsamples']
Availability,"nceLabels). Optionally request that unique labels are used for all objects, rather than classifications. LabeledImageServer.Builder; useUniqueLabels(). Deprecated.; in favor of useInstanceLabels(). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(ImageData<BufferedImage> imageData); Create a Builder for a LabeledImageServer for the specified ImageData. Parameters:; imageData - . Method Details. useDetections; public LabeledImageServer.Builder useDetections(); Use detections rather than annotations for labels.; The default is to use annotations. Returns:; See Also:. useAnnotations(). useCells; public LabeledImageServer.Builder useCells(); Use cells rather than annotations for labels.; The default is to use annotations. Returns:; See Also:. useAnnotations(). useCellNuclei; public LabeledImageServer.Builder useCellNuclei(); Use cells rather than annotations for labels, requesting the nucleus ROI where available.; The default is to use annotations. Returns:; See Also:. useAnnotations(). useAnnotations; public LabeledImageServer.Builder useAnnotations(); Use annotations for labels. This is the default. Returns:; See Also:. useDetections(). useFilter; public LabeledImageServer.Builder useFilter(Predicate<PathObject> filter); Use a custom method of selecting objects for inclusion.; The default is to use annotations. Parameters:; filter - the filter that determines whether an object will be included or not; Returns:; See Also:. useAnnotations(). grayscale; public LabeledImageServer.Builder grayscale(); Use grayscale LUT, rather than deriving colors from classifications.; This can streamline import in software that automatically converts paletted images to RGB. Returns:; Since:; v0.4.0; See Also:. grayscale(boolean). grayscale; public LabeledImageServer.Builder grayscale(boolean grayscaleLut); Optionally use grayscale LUT, rather than derivin",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.Builder.html:6670,avail,available,6670,javadoc/docs/qupath/lib/images/servers/LabeledImageServer.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.Builder.html,1,['avail'],['available']
Availability,"nd Type; Method; Description; static List<PathObject>; createObjectsFromROIs(ImagePlus imp,; Collection<? extends Roi> rois,; double downsample,; boolean asDetection,; boolean includeMeasurements,; ImagePlane plane). Turn an array of ImageJ ROIs into a list of QuPath PathObjects, optionally adding measurements as well. static List<PathObject>; createPathObjectsFromROIs(ImagePlus imp,; Roi[] rois,; ImageServer<?> server,; double downsample,; boolean asDetection,; boolean includeMeasurements,; ImagePlane plane). Deprecated.; use instead createObjectsFromROIs(ImagePlus, Collection, double, boolean, boolean, ImagePlane). void; run(String arg);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QuPath_Send_Overlay_to_QuPath; public QuPath_Send_Overlay_to_QuPath(). Method Details. run; public void run(String arg). Specified by:; run in interface PlugIn. createPathObjectsFromROIs; @Deprecated; public static List<PathObject> createPathObjectsFromROIs(ImagePlus imp,; Roi[] rois,; ImageServer<?> server,; double downsample,; boolean asDetection,; boolean includeMeasurements,; ImagePlane plane); Deprecated.; use instead createObjectsFromROIs(ImagePlus, Collection, double, boolean, boolean, ImagePlane). Legacy method to turn an array of ImageJ ROIs into a list of QuPath PathObjects, optionally adding measurements as well. Parameters:; imp - ; rois - ; server - ; downsample - ; asDetection - ; includeMeasurements - ; plane - ; Returns:. createObjectsFromROIs; public static List<PathObject> createObjectsFromROIs(ImagePlus imp,; Collection<? extends Roi> rois,; double downsample,; boolean asDetection,; boolean includeMeasurements,; ImagePlane plane); Turn an array of ImageJ ROIs into a list of QuPath PathObjects, optionally adding measurements as well. Parameters:; imp - ; rois - ; downsample - ; asDetection - ; includeMeasurements - ; plane - ; Returns:; Since:; v0.4.0. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupathj/QuPath_Send_Overlay_to_QuPath.html:2080,down,downsample,2080,javadoc/docs/qupathj/QuPath_Send_Overlay_to_QuPath.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupathj/QuPath_Send_Overlay_to_QuPath.html,4,['down'],['downsample']
Availability,"nd region. static double; estimateDownsampleFactor(ImagePlus imp,; ImageServer<?> server). Estimate the downsample factor for an image region extracted from an image server, based upon ; the ratio of pixel sizes if possible or ratio of dimensions if necessary. static ImagePlus; extractHyperstack(ImageServer<BufferedImage> server,; RegionRequest request). Extract a full ImageJ hyperstack for a specific region, using all z-slices and time points. static ImagePlus; extractHyperstack(ImageServer<BufferedImage> server,; RegionRequest request,; int zStart,; int zEnd,; int tStart,; int tEnd). Extract a full ImageJ hyperstack for a specific region, for specified ranges of z-slices and time points. static ImagePlane; getImagePlane(Roi roi,; ImagePlus imp). Get the ImagePlane of an ImageJ Roi, based upon its stored positions. static boolean; isMemorySufficient(RegionRequest region,; ImageData<BufferedImage> imageData). Check if sufficient memory is available to request pixels for a specific region, and the number ; of pixels is less than the maximum length of a Java array. static void; quickShowImage(String name,; Roi roi,; ImageProcessor... ips). Show an ImageProcessor (or array of similar ImageProcessors as a stack). static void; quickShowImage(String name,; ImageProcessor... ips). Show an ImageProcessor (or array of similar ImageProcessors as a stack). static List<Roi>; readImageJRois(File file). Read ImageJ Rois from a .roi or a RoiSet.zip file. static void; setMemoryThreshold(double threshold);  ; static void; setTitleFromObject(PathImage<ImagePlus> pathImage,; PathObject pathObject). Set the name of an image based on a PathObject. static double; tryToParseMicrons(double value,; String unit). Based on a value and its units, try to get something suitable in microns. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. IJTools; public IJTools(). Method Details. setMemo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:7191,avail,available,7191,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,1,['avail'],['available']
Availability,"ndRun(""Greeting"", () -> System.out.println(""Hello!""), 10); .summarizeCheckpoints(); .stop();; System.out.println(timeit);; ; . Since:; v0.4.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Timeit.Checkpoint. Class representing a named checkpoint with a timestamp in nanoseconds. Constructor Summary; Constructors. Constructor; Description; Timeit();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Timeit; autoUnits();  ; Timeit; checkpoint(). Create a new checkpoint with a default name. Timeit; checkpoint(String name). Create a new checkpoint with the specified name. Timeit; checkpointAndRun(Runnable runnable). Create a checkpoint with the default name and immediately run the provided runnable. Timeit; checkpointAndRun(String name,; Runnable runnable). Create a checkpoint and immediately run the provided Runnable. Timeit; checkpointAndRun(String name,; Runnable runnable,; int nIterations). Create a checkpoint and immediately run the provided Runnable nIterations times. List<Timeit.Checkpoint>; getCheckpoints(). Get an list of all the checkpoints. int; getMaxDecimalPlaces(). Get the maximum number of decimal places when reporting timings. static void; main(String[] args);  ; Timeit; maxDecimalPlaces(int maxDP). Set the maximum number of decimal places when reporting timings ; using seconds or minutes. Timeit; microseconds(). Report timings in microseconds. Timeit; milliseconds(). Report timings in milliseconds. Timeit; minutes(). Report timings in minutes. Timeit; nanoseconds(). Report timings in nanoseconds. Timeit; seconds(). Report timings in seconds. Timeit; start(). Start the Timeit and create a checkpoint with the default name. Timeit; start(String name). Start the Timeit and create a checkpoint with the specified name. Timeit; stop(). Stop the Timeit. Timeit; summarizeCheckpoints(). Request that checkpoints are summarized in t",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:2277,checkpoint,checkpointAndRun,2277,javadoc/docs/qupath/lib/common/Timeit.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html,1,['checkpoint'],['checkpointAndRun']
Availability,"nding box. Parameters:; x - ; y - ; width - ; height - ; Returns:; this builder. region; public OMEPyramidWriter.Builder region(ImageRegion region); Define the region to export, including the z-slice and time point. Parameters:; region - ; Returns:; this builder; See Also:. region(int, int, int, int); timePoint(int); zSlice(int); zSlices(int, int). tileSize; public OMEPyramidWriter.Builder tileSize(int tileSize); Define the requested tile size (width == height).; ; This is only a suggestion, and the OME reader may override it if the value is unsupported. Parameters:; tileSize - ; Returns:; this builder. tileSize; public OMEPyramidWriter.Builder tileSize(int tileWidth,; int tileHeight); Define the requested tile width and height.; ; This is only a suggestion, and the OME reader may override it if the value is unsupported. Parameters:; tileWidth - ; tileHeight - ; Returns:; this builder. downsamples; public OMEPyramidWriter.Builder downsamples(double... downsamples); Specify downsample factors to use in the final pyramid.; ; Note that the downsample values provided will be sorted in ascending order. Parameters:; downsamples - ; Returns:; this builder. dyadicDownsampling; public OMEPyramidWriter.Builder dyadicDownsampling(); Downsample by factors of 2.; ; Note that the highest downsample value will depend on the tile size, ; so the tile size should be set first. Returns:; this builder; See Also:. scaledDownsampling(double). scaledDownsampling; public OMEPyramidWriter.Builder scaledDownsampling(double scale); Downsample by specific increasing factor each time (e.g. if scale == 2, then downsamples will be 1, 2, 4, 8...).; ; Note that the highest downsample value will depend on the tile size, ; so the tile size should be set first. Parameters:; scale - ; Returns:; this builder; See Also:. scaledDownsampling(double). scaledDownsampling; public OMEPyramidWriter.Builder scaledDownsampling(double minDownsample,; double scale); Downsample by specific increasing factor each tim",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html:9758,down,downsamples,9758,javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html,2,['down'],"['downsample', 'downsamples']"
Availability,"nding box. Returns:. getBoundsWidth; public double getBoundsWidth(); Description copied from interface: ROI; Returns the width of the ROI bounding box. Returns:. getBoundsHeight; public double getBoundsHeight(); Description copied from interface: ROI; Returns the height of the ROI bounding box. Returns:. getImagePlane; public ImagePlane getImagePlane(); Description copied from interface: ROI; Get the ImagePlane, which contains the values for c, z and t in a single object. Specified by:; getImagePlane in interface ROI; Returns:. getZ; public int getZ(); Description copied from interface: ROI; Get z-stack slice index.; ; Default is 0 if the image it relates to is not a z-stack. Specified by:; getZ in interface ROI; Returns:. getT; public int getT(); Description copied from interface: ROI; Get time point index.; ; Default is 0 if the image it relates to is not a time series. Specified by:; getT in interface ROI; Returns:. getC; public int getC(); Description copied from interface: ROI; Get channel index, or -1 if the ROI relates to all available channels.; ; (This is not currently used, but may be in the future). Specified by:; getC in interface ROI; Returns:. toString; public String toString(). Overrides:; toString in class Object. isLine; public boolean isLine(); Description copied from interface: ROI; Returns true if this ROI consists of line segments and does not enclose an area. Specified by:; isLine in interface ROI; Returns:. isArea; public boolean isArea(); Description copied from interface: ROI; Returns true if this ROI encloses an area. Specified by:; isArea in interface ROI; Returns:. isPoint; public boolean isPoint(); Description copied from interface: ROI; Returns true if this ROI represents distinct (unconnected) points. Specified by:; isPoint in interface ROI; Returns:. getGeometry; public Geometry getGeometry(); Description copied from interface: ROI; Returns a org.locationtech.jts.geom.Geometry object. Specified by:; getGeometry in interface ROI; Retur",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html:10275,avail,available,10275,javadoc/docs/qupath/lib/roi/EllipseROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/EllipseROI.html,2,['avail'],['available']
Availability,"nds) of an image with the maximum values according to the argmax criterion. static long[]; computeArgMaxHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask,; Rectangle bounds). Create a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion, ; with an optional bounding rectangle. static long[]; computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask). Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values. static long[]; computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask,; Rectangle bounds). Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values, optionally restricted to a bounding rectangle. static BufferedImage; createROIMask(int width,; int height,; ROI roi,; double xOrigin,; double yOrigin,; double downsample). Create a grayscale BufferedImage representing a mask for a specified ROI. static BufferedImage; createROIMask(int width,; int height,; ROI roi,; RegionRequest request). Create a grayscale BufferedImage representing a mask for a specified ROI. static BufferedImage; createROIMask(Shape shape,; double downsample). Create a Shape mask using the minimal bounding box for the Shape. static BufferedImage; createROIMask(ROI roi,; double downsample). Create a ROI mask using the minimal bounding box for the ROI. static BufferedImage; createShapeMask(int width,; int height,; Shape shape,; double xOrigin,; double yOrigin,; double downsample). Create a grayscale BufferedImage representing a mask for a specified ROI. static BufferedImage; crop(BufferedImage img,; int x,; int y,; int width,; int height). Create a crop of the image using the specified bounding box. static BufferedImage; duplicate(BufferedImage img). Duplicate a BufferedImage. static BufferedImage; ensureBufferedImage(Image image). Convert an Image to a BufferedImage if n",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:2347,mask,mask,2347,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,1,['mask'],['mask']
Availability,"ne the requested tile width and height.; ; This is only a suggestion, and the OME reader may override it if the value is unsupported. Parameters:; tileWidth - ; tileHeight - ; Returns:; this builder. downsamples; public OMEPyramidWriter.Builder downsamples(double... downsamples); Specify downsample factors to use in the final pyramid.; ; Note that the downsample values provided will be sorted in ascending order. Parameters:; downsamples - ; Returns:; this builder. dyadicDownsampling; public OMEPyramidWriter.Builder dyadicDownsampling(); Downsample by factors of 2.; ; Note that the highest downsample value will depend on the tile size, ; so the tile size should be set first. Returns:; this builder; See Also:. scaledDownsampling(double). scaledDownsampling; public OMEPyramidWriter.Builder scaledDownsampling(double scale); Downsample by specific increasing factor each time (e.g. if scale == 2, then downsamples will be 1, 2, 4, 8...).; ; Note that the highest downsample value will depend on the tile size, ; so the tile size should be set first. Parameters:; scale - ; Returns:; this builder; See Also:. scaledDownsampling(double). scaledDownsampling; public OMEPyramidWriter.Builder scaledDownsampling(double minDownsample,; double scale); Downsample by specific increasing factor each time, with a specified initial downsample value ; (e.g. if scale == 2, then downsamples will be minDownsample, minDownsample*2, minDownsample*4...).; ; Note that the highest downsample value will depend on the tile size, ; so the tile size should be set first. Parameters:; minDownsample - the starting downsample, defining the highest-resolution image (usually 1.0); scale - the scale used to define successive downsamples; Returns:; this builder; See Also:. scaledDownsampling(double). channels; public OMEPyramidWriter.Builder channels(int... channels); Override default of writing all channels in their original order to be able to specify which ; channels are output, and in which order. Parameter",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html:10461,down,downsample,10461,javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html,1,['down'],['downsample']
Availability,"ne); Create a ROI from an ImageJ Roi, using the Calibration object of an ImagePlus. Parameters:; roi - ImageJ Roi; cal - calibration object, including original information; downsampleFactor - the downsample factor of the original image; plane - plane defining c, z and t indices; Returns:. getImagePlane; public static ImagePlane getImagePlane(Roi roi,; ImagePlus imp); Get the ImagePlane of an ImageJ Roi, based upon its stored positions. Parameters:; roi - ImageJ roi that may have c, z, t or position properties set.; imp - associated image; if not null, this will be used to convert the Roi's 'position' property, if non-zero; Returns:; the ImagePlane that is the best approximation of this Roi's position. convertToROI; public static <T extends PathImage<? extends ImagePlus>>; ROI convertToROI(Roi roi,; T pathImage); Create a ROI from an ImageJ Roi. Parameters:; roi - ; pathImage - ; Returns:. convertToPolygonROI; public static PolygonROI convertToPolygonROI(PolygonRoi roi,; Calibration cal,; double downsampleFactor,; ImagePlane plane); Convert an ImageJ PolygonRoi to a QuPath PolygonROI. Parameters:; roi - ; cal - ; downsampleFactor - ; plane - ; Returns:. convertToIJRoi; public static <T extends PathImage<ImagePlus>> Roi convertToIJRoi(ROI pathROI,; double xOrigin,; double yOrigin,; double downsampleFactor); Convert a QuPath ROI to an ImageJ Roi. Type Parameters:; T - ; Parameters:; pathROI - ; xOrigin - x-origin indicating relationship of ImagePlus to the original image, as stored in ImageJ Calibration object; yOrigin - y-origin indicating relationship of ImagePlus to the original image, as stored in ImageJ Calibration object; downsampleFactor - downsample factor at which the ImagePlus was extracted from the full-resolution image; Returns:. convertToROI; public static ROI convertToROI(Roi roi,; double xOrigin,; double yOrigin,; double downsampleFactor,; ImagePlane plane); Create a ROI from an ImageJ Roi. Parameters:; roi - ImageJ Roi; xOrigin - x-origin, as stored in a",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:25149,down,downsampleFactor,25149,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,1,['down'],['downsampleFactor']
Availability,"nelType.CLASSIFICATION. Method Details. getPreferredDownsamplesArray; public double[] getPreferredDownsamplesArray(); Request the preferred downsamples from the image metadata.; ; Note that this makes a defensive copy, and so should not be called often; it is generally preferably ; to request downsample values individually. Returns:. getLevels; public List<ImageServerMetadata.ImageResolutionLevel> getLevels(); Get an unmodifiable list containing the resolution levels. Returns:. getWidth; public int getWidth(); Get the full-resolution image width. Returns:. getHeight; public int getHeight(); Get the full-resolution image height. Returns:. nLevels; public int nLevels(); Get the number of resolution levels. For a non-pyramidal image, this is 1. Returns:. getPixelCalibration; public PixelCalibration getPixelCalibration(); Get a PixelCalibration object representing the pixel size information for this metadata object. Returns:. getDownsampleForLevel; public double getDownsampleForLevel(int level); Get the downsample factor for a specific resolution level. Parameters:; level - ; Returns:. getLevel; public ImageServerMetadata.ImageResolutionLevel getLevel(int level); Get resolution information for a specified pyramidal level. Parameters:; level - ; Returns:. isRGB; public boolean isRGB(); Returns true if the pixels are stored in (A)RGB form. Returns:. getPixelType; public PixelType getPixelType(); Returns the bit-depth for individual pixels in the image. Returns:. getMinValue; public Number getMinValue(); Get the minimum value supported by this image.; By default, this is the lower bound of the PixelType unless otherwise specified. Returns:; See Also:. getPixelType(). getMaxValue; public Number getMaxValue(); Get the minimum value supported by this image.; By default, this is the lower bound of the PixelType unless otherwise specified.; This purpose of this method is to support other effective bit-depths (e.g. 12-bit, 14-bit). Returns:; See Also:. getPixelType(). pixelSizeC",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html:5895,down,downsample,5895,javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServerMetadata.html,1,['down'],['downsample']
Availability,"ner,; ImageData<T> imageData,; String arg); Description copied from interface: PathPlugin; Run the plugin. A PluginRunner may be provided that this plugin can use to update; the user on its progress.; ; Note: This command should block until it has completed processing. Specified by:; runPlugin in interface PathPlugin<T>; Parameters:; taskRunner - ; arg - ; Returns:. preprocess; protected void preprocess(TaskRunner taskRunner,; ImageData<T> imageData); Called after parsing the argument String, and immediately before creating & running any generated tasks.; ; Does nothing by default. Parameters:; taskRunner - ; imageData - . postprocess; protected void postprocess(TaskRunner taskRunner,; ImageData<T> imageData); Called immediately after running any generated tasks.; ; Does nothing by default. Parameters:; taskRunner - ; imageData - . addWorkflowStep; protected void addWorkflowStep(ImageData<T> imageData,; String arg); Add a workflow step to the ImageData indicating the argument that this plugin was run with.; ; Subclasses may override this if a better workflow step should be logged.; ; A subclass may also override this to avoid adding a workflow step at all. Parameters:; imageData - ; arg - . rearrangeByStride; protected static <T> boolean rearrangeByStride(Collection<T> input,; T[] output,; int stride); Test method for rearranging a collection so that entries are interleaved with a regularity given by stride.; ; It can be used to rearrange tasks to try to make better use of cached image regions, by helping to ensure that; all available processors are operating on distinct parts of the image - rather than all in the same region,; where image tile requests could become a bottleneck.; ; Intended use would be something like the following:; ; int n = tasks.size();; Runnable[] tasks2 = new Runnable[n];; if (rearrangeByStride(tasks, tasks2, Runtime.getRuntime().availableProcessors())); tasks = Arrays.asList(tasks2);; . Parameters:; input - ; output - ; stride - ; Returns:. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html:6782,avail,available,6782,javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractPlugin.html,2,['avail'],"['available', 'availableProcessors']"
Availability,"ng of the Parameter; may be displayed e.g. getHessian() - Method in class qupath.opencv.tools.MultiscaleFeatures.MultiscaleResultsBuilder.FeatureMap. Get the MultiscaleFeatures.Hessian associated with these features. getHideIfEmpty() - Method in class qupath.lib.gui.charts.HistogramChart. Query whether the chart is automatically hidden (visibility set to false) when there is no data. getHierarchy() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the object hierarchy for the current image data, or null if no image data is available. getHierarchy() - Method in class qupath.lib.images.ImageData. Get the object hierarchy. getHierarchy() - Method in class qupath.lib.objects.hierarchy.events.PathObjectHierarchyEvent. The hierarchy to which this event refers. getHistogram() - Method in class qupath.lib.gui.charts.HistogramChart.HistogramData. Get the histogram. getHistogram(ChannelDisplayInfo) - Method in class qupath.lib.display.ImageDisplay. Returns a histogram for a ChannelInfo, or none if no histogram is available (e.g. getHistogramData() - Method in class qupath.lib.gui.charts.HistogramChart. Get all histogram data objects. getHistoryWorkflow() - Method in class qupath.lib.images.ImageData. Get a workflow representing a history of the processing steps applied to the ImageData. getICCProfileBytes() - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Request the bytes for an ICC profile. getIcon() - Method in interface qupath.lib.gui.viewer.tools.PathTool. Get the icon of the tool. getID() - Method in class qupath.lib.objects.PathObject. Get the ID for this object. getID() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a unique ID to represent this entry. getID() - Method in class qupath.opencv.dnn.DnnTools.DNNLayer. Layer ID. getImage() - Method in class qupath.lib.experimental.pixels.Parameters. Get the image to process. getImage() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the JavaFX image. getImage() - ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:402639,avail,available,402639,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"ng positions accordingly. insertText(int, String) - Method in interface qupath.lib.gui.scripting.EditableText. Request inserting the specified text. insertText(int, String) - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; insertText(int, String) - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; installActions(Collection<? extends Action>) - Method in class qupath.lib.gui.QuPathGUI. Install the specified actions. installColorMaps(Path...) - Static method in class qupath.lib.color.ColorMaps. Install colormaps from the specified paths. installColorMaps(ColorMaps.ColorMap...) - Static method in class qupath.lib.color.ColorMaps. Install colormaps. installCommand(String, Runnable) - Method in class qupath.lib.gui.QuPathGUI. Install a new command in QuPath. installDefaultFeatureClassificationBuilder(ImageDataTransformerBuilder) - Static method in class qupath.process.gui.commands.ml.PixelClassifierPane. Add to the list of default feature calculator builders that will be available when ; this pane is opened. installDragAndDropHandler(QuPathGUI) - Static method in class qupath.lib.gui.commands.TMACommands. Command to install a drag and drop file handler for exported TMA data. installExtension(QuPathGUI) - Method in class qupath.ext.openslide.OpenSlideExtension;  ; installExtension(QuPathGUI) - Method in class qupath.imagej.gui.IJExtension;  ; installExtension(QuPathGUI) - Method in class qupath.lib.extension.svg.SvgExtension;  ; installExtension(QuPathGUI) - Method in interface qupath.lib.gui.extensions.QuPathExtension. Install the extension for a QuPathGUI instance. installExtension(QuPathGUI) - Method in class qupath.lib.gui.scripting.richtextfx.RichScriptEditorExtension;  ; installExtension(QuPathGUI) - Method in class qupath.lib.images.servers.bioformats.BioFormatsOptionsExtension;  ; installExtension(QuPathGUI) - Method in class qupath.process.gui.ProcessingExtension;  ; installGroovyCommand(String, File) - Method in class qupath.li",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:607488,avail,available,607488,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"ng the ROI bounding box. Parameters:; path - ; downsample - ; roi - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; Collection<? extends ROI> rois); Create a request that contains the pixels of the specified ROIs.; This is calculated using the ROI bounding boxes. Parameters:; path - ; downsample - ; rois - ; Returns:; Throws:; IllegalArgumentException - if the ROIs do not all fall on the same ImagePlane. createInstance; public static RegionRequest createInstance(String path,; RegionRequest request); Create a request that matches another request but with a different path. Parameters:; path - ; request - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; ImageRegion region); Create a request corresponding to a specified ImageRegion.; This may also be used to construct a request based on an existing request, but changing either the path or downsample. Parameters:; path - ; downsample - ; region - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; int x,; int y,; int width,; int height,; int z,; int t); Create a request for a region specified in terms of its bounding box, z-slice and time point. Parameters:; path - ; downsample - ; x - ; y - ; width - ; height - ; z - ; t - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; int x,; int y,; int width,; int height,; ImagePlane plane); Create a request for a region specified in terms of its bounding box and ImagePlane. Parameters:; path - ; downsample - ; x - ; y - ; width - ; height - ; plane - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; int x,; int y,; int width,; int height); Create a request for a region specified in terms of its bounding box, using the first z-slice and time point. Parameters:; path - ; downsample - ; x - ; y - ; width - ; hei",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html:6757,down,downsample,6757,javadoc/docs/qupath/lib/regions/RegionRequest.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html,1,['down'],['downsample']
Availability,"ng();  ; void; train(TrainData trainData). Train the classifier using data in an appropriate format. void; trainWithLock(TrainData trainData). Implement trainWithLock rather than train directly to ensure a lock is set ; when training, which can be used to prevent prediction occurring simultaneously. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Method Details. train; public void train(TrainData trainData); Description copied from class: OpenCVClassifiers.OpenCVStatModel; Train the classifier using data in an appropriate format. Parameters:; trainData - ; See Also:. OpenCVClassifiers.OpenCVStatModel.createTrainData(Mat, Mat, Mat, boolean). hasFeatureImportance; public boolean hasFeatureImportance(); Check if the last time train was called, variable (feature) importance was calculated. Returns:; See Also:. getFeatureImportance(). getFeatureImportance; public double[] getFeatureImportance(); Request the variable importance values from the last trained RTrees classifier, if available. Returns:; the ordered array of importance values, or null if this is unavailable; See Also:. hasFeatureImportance(). predictWithLock; public void predictWithLock(Mat samples,; Mat results,; Mat probabilities); Implement predictWithLock rather than predict to ensure predict is not called while ; training. Parameters:; samples - ; results - ; probabilities - ; See Also:. trainWithLock(org.bytedeco.opencv.opencv_ml.TrainData). supportsMulticlass; public boolean supportsMulticlass(); Returns false (the default value). Specified by:; supportsMulticlass in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if multiclass classification is supported, false otherwise. supportsAutoUpdate; public boolean supportsAutoUpdate(); Returns true (the default value). Specified by:; supportsAutoUpdate in class OpenCVClassifiers.OpenCVStatModel; Returns:; true if interactive classification is supported, false otherwise. sup",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html:3242,avail,available,3242,javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/OpenCVClassifiers.RTreesClassifier.html,1,['avail'],['available']
Availability,"ng.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Measurements; public Measurements(). Method Details. multiChannel; public static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage> multiChannel(String name,; List<ColorTransforms.ColorTransform> transforms,; Function<double[][],Double> function,; Function<PathObject,ROI> roiFunction); Create a new object measurement that requires multiple channels as input. Parameters:; name - name of the measurement; transforms - transforms to extract the channels; function - function to calculate the measurement from the pixels; roiFunction - function to select a ROI from an object (generally the main ROI or nucleus); Returns:. multiChannel; public static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage> multiChannel(String name,; List<ColorTransforms.ColorTransform> transforms,; Function<double[][],Double> function); Create a new object measurement that requires multiple channels as input, using the main ROI of the object; as a mask. Parameters:; name - name of the measurement; transforms - transforms to extract the channels; function - function to calculate the measurement from the pixels; Returns:. singleChannel; public static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage> singleChannel(String name,; ColorTransforms.ColorTransform transform,; Function<double[],Double> function,; Function<PathObject,ROI> roiFunction); Create a new object measurement that requires one channel as input. Parameters:; name - name of the measurement; transform - transform to extract the channel; function - function to calculate the measurement from the pixels; roiFunction - function to select a ROI from an object (generally the main ROI or nucleus); Returns:. singleChannel; public static MeasurementProcessor.CustomMeasurement<BufferedImage,BufferedImage> singleChannel(String name,; ColorTransforms.ColorTransform transform,",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Measurements.html:3170,mask,mask,3170,javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Measurements.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/MeasurementProcessor.Measurements.html,1,['mask'],['mask']
Availability,"ngImageServer(ImageServer<T> server). Method Details. getWrappedServer; protected ImageServer<T> getWrappedServer(); Get underlying ImageServer, i.e. the one that is being wrapped. Returns:. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an associated URI at all, whereas others ; may depend upon multiple URIs (e.g. if concatenating images).; ; Note: A URI alone may not be sufficient to recreate even a simple ImageServer; see ImageServer.getBuilder(). Returns:. readRegion; public T readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; Throws:; IOException; See Also:. ImageServer.readRegion(double, int, int, int, int,",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TransformingImageServer.html:3708,down,downsample,3708,javadoc/docs/qupath/lib/images/servers/TransformingImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TransformingImageServer.html,1,['down'],['downsample']
Availability,"ngMillis(). resetMinimumRepaintSpacingMillis; public void resetMinimumRepaintSpacingMillis(); Return to processing all repainting requests.; ; Note: calling this command triggers a repaint itself. setBorderColor; public void setBorderColor(Color color); Set the border color for this viewer.; This can be used to indicate (for example) that a particular viewer is active. Parameters:; color - . getBorderColor; public Color getBorderColor(); Get the border color set for this viewer. Returns:. repaint; public void repaint(); Request that the viewer is repainted.; The repaint is not triggered immediately, but rather enqueued for future processing.; ; Note that this can be used for changes in the field of view or overlay, but not for ; large changes that require any cached thumbnail to also be updated (e.g. changing the ; brightness/contrast or lookup table). In such cases repaintEntireImage() is required. See Also:. repaintEntireImage(). getMinDownsample; public double getMinDownsample(); Get the minimum downsample value supported by this viewer.; This prevents zooming in by an unreasonably large amount. Returns:. getMaxDownsample; public double getMaxDownsample(); Get the maximum downsample value supported by this viewer.; This prevents zooming out by an unreasonably large amount. Returns:. zoomOut; public void zoomOut(int nSteps); Zoom out by a specified number of steps, where one 'step' indicates a minimal zoom increment. Parameters:; nSteps - . zoomIn; public void zoomIn(int nSteps); Zoom in by a specified number of steps, where one 'step' indicates a minimal zoom increment. Parameters:; nSteps - . getDefaultZoomFactor; public double getDefaultZoomFactor(); The amount by which the downsample factor is scaled for one increment of zoomIn() or ; zoomOut(). Controls zoom speed. Returns:. zoomOut; public void zoomOut(); Zoom out by one step. See Also:. zoomOut(int); getDefaultZoomFactor(). zoomIn; public void zoomIn(); Zoom in by one step. See Also:. zoomIn(int); getDefault",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:17012,down,downsample,17012,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,1,['down'],['downsample']
Availability,"nification). Set the downsample factor based upon magnification values. void; setMinimumRepaintSpacingMillis(long repaintSpacingMillis). Prevent frequent repaints (temporarily) by setting a minimum time that must have elapsed; after the previous repaint for a new one to be triggered. void; setRotation(double theta). Set the rotation; angle in radians. void; setSelectedObject(PathObject pathObject). Set selected object in the current hierarchy, without centering the viewer. void; setSelectedObject(PathObject pathObject,; boolean addToSelected). Set selected object in the current hierarchy, without centering the viewer. void; setSpaceDown(boolean spaceDown). Notify this viewer that the isSpaceDown status should be changed. void; setTPosition(int tPosition). Set the requested time point to be visible. void; setZPosition(int zPos). Set the requested z-slice to be visible. void; tileAvailable(String serverPath,; ImageRegion region,; BufferedImage tile). Notify a listener that an image tile has been received read & is available. String; toString();  ; IntegerProperty; tPositionProperty(). Current t-position for the timepoint currently visible in the viewer. protected void; updateAffineTransform();  ; protected void; updateCursor();  ; void; zoomIn(). Zoom in by one step. void; zoomIn(int nSteps). Zoom in by a specified number of steps, where one 'step' indicates a minimal zoom increment. void; zoomOut(). Zoom out by one step. void; zoomOut(int nSteps). Zoom out by a specified number of steps, where one 'step' indicates a minimal zoom increment. void; zoomToFit(). Request that the downsample is set to contain the entire image, and the image is centered in the viewer. IntegerProperty; zPositionProperty(). Current z-position for the z-slice currently visible in the viewer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait. Property Details. imageData; public ReadOnlyObjectProperty<ImageData<Buffere",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:12848,avail,available,12848,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,1,['avail'],['available']
Availability,"nks. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.imagej.detect.cells; Class WatershedCellMembraneDetection. java.lang.Object; qupath.lib.plugins.AbstractPlugin<BufferedImage>; qupath.lib.plugins.AbstractInteractivePlugin<BufferedImage>; qupath.lib.plugins.AbstractDetectionPlugin<BufferedImage>; qupath.lib.plugins.AbstractTileableDetectionPlugin<BufferedImage>; qupath.imagej.detect.cells.WatershedCellMembraneDetection. All Implemented Interfaces:; PathInteractivePlugin<BufferedImage>, PathPlugin<BufferedImage>. public class WatershedCellMembraneDetection; extends AbstractTileableDetectionPlugin<BufferedImage>; Cell detection that takes into consideration membrane staining.; ; This command only works (somewhat) for hematoxylin and DAB staining.; If membrane quantification is not required, WatershedCellDetection is more robust and versatile. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; WatershedCellMembraneDetection(). Default constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; protected ObjectDetector<BufferedImage>; createDetector(ImageData<BufferedImage> imageData,; ParameterList params). Create a new ObjectDetector, compatible with the specified ImageData and ParameterList. ParameterList; getDefaultParameterList(ImageData<BufferedImage> imageData). This should return a default ParameterList containing any information that is needed to repeat the task exactly. String; getDescription(). Get a brief description of the plugin's purpose & operation. String; getLastResultsDescription(). (Optional) short one-line description of the results, e.g. String; getName(). Get the name of the plugin for display. protected double; getPreferredPixelSizeMicrons(ImageData<BufferedImage> im",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html:1140,robust,robust,1140,javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/detect/cells/WatershedCellMembraneDetection.html,1,['robust'],['robust']
Availability,"nnelName); Get the index of the first channel of a server with a specified channel name. Parameters:; server - ; channelName - ; Returns:; index (0-based) of the first channel with a name matching channelName, or -1 if no channel is found. getPreferredResolutionLevel; public static int getPreferredResolutionLevel(ImageServer<?> server,; double requestedDownsample); Get the preferred resolution level to request regions from an ImageServer at a specified downsample level. Parameters:; server - ; requestedDownsample - ; Returns:; See Also:. getPreferredDownsampleFactor(ImageServer, double). getPreferredDownsampleFactor; public static double getPreferredDownsampleFactor(ImageServer<?> server,; double requestedDownsample); Get the downsample factor supported by the server that is the best match for the requested downsample.; ; Generally, this will be <= the requested downsample (but it may be slightly more if the error introduced; would be very small, i.e. if 4 is requested and 4.0001 is available, 4.0001 would be returned). Parameters:; server - ; requestedDownsample - ; Returns:; See Also:. getPreferredResolutionLevel(ImageServer, double). getDisplayableImageName; public static String getDisplayableImageName(ImageServer<?> server); Get an ImageServer name suitable for displaying.; If the server is null, ""No image"" is returned. Otherwise, the name ; stored in the metadata is returned if not null, otherwise server.getShortServerName() is used. Parameters:; server - ; Returns:. setImageName; public static boolean setImageName(ImageServer<?> server,; String name); Set the name property of the metadata for an ImageServer. Parameters:; server - the server to update; name - the new name to use; Returns:; true if the metadata was updated, false otherwise (i.e. if the name is unchanged). getDownsampleFactor; public static double getDownsampleFactor(ImageServer<?> server,; double preferredPixelSizeMicrons); Calculate a downsample factor for a server given a preferred pixel size. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ServerTools.html:3664,avail,available,3664,javadoc/docs/qupath/lib/images/servers/ServerTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ServerTools.html,1,['avail'],['available']
Availability,"notations can be constrained while they are being drawn, to avoid overlaps with existing annotations; or to ensure they are drawn within a parent annotation. updatingConstrainingObjects(QuPathViewer, double, double, Collection<PathObject>) - Method in class qupath.process.gui.WandToolEventHandler. New annotations can be constrained while they are being drawn, to avoid overlaps with existing annotations; or to ensure they are drawn within a parent annotation. UriResource - Interface in qupath.lib.io. Interface for objects that depend upon URIs. URIs(URI...) - Method in class qupath.opencv.dnn.DnnModelParams.Builder. Specify the URIs. URIs(Collection<URI>) - Method in class qupath.opencv.dnn.DnnModelParams.Builder. Specify the URIs as a collection. UriUpdater<T> - Class in qupath.lib.io. Helper class for updating URIs, for example whenever files have moved or projects have been transferred between computers. UriUpdater.SingleUriItem - Class in qupath.lib.io. Wrapper for a URI, providing access to a Path if available. UriUpdater.UriStatus - Enum Class in qupath.lib.io. Enum representing the status of a URI, i.e. Urls - Class in qupath.lib.gui. Class to return core QuPath URLs centrally. Urls() - Constructor for class qupath.lib.gui.Urls;  ; useAnnotations() - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Use annotations for labels. useCalibratedLocationStringProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Show the cursor location on a viewer in calibrated units, rather than pixels. useCellNuclei() - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Use cells rather than annotations for labels, requesting the nucleus ROI where available. useCells() - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Use cells rather than annotations for labels. useColorLUTs() - Method in class qupath.lib.display.ImageDisplay. The opposite of ImageDisplay.useGrayscaleLuts(). useCompiled() - Method in clas",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:1070427,avail,available,1070427,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"notify, notifyAll, toString, wait, wait, wait. Constructor Details. OpenSlideLoader; public OpenSlideLoader(). Method Details. tryToLoadQuietly; public static boolean tryToLoadQuietly(String... searchPath); Try to load OpenSlide, but don't throw an exception if it fails. Parameters:; searchPath - optional search paths that may be provided to assist with finding the preferred library.; Returns:; true if OpenSlide was loaded successfully, false otherwise. tryToLoad; public static boolean tryToLoad(String... searchPath); throws UnsatisfiedLinkError; Try to load OpenSlide. This is liable to throw an exception if the library cannot be loaded. Parameters:; searchPath - optional search paths that may be provided to assist with finding the preferred library.; Returns:; true if OpenSlide was loaded successfully, false otherwise.; Throws:; UnsatisfiedLinkError. getLibraryVersion; public static String getLibraryVersion(); Get the version of the OpenSlide library.; This will attempt to load OpenSlide if it is not already available. Returns:; a version string for the library, or null if the library is not available. isOpenSlideAvailable; public static boolean isOpenSlideAvailable(); Query whether OpenSlide has already been loaded.; This will not attempt to load the library; for that, use #tryToLoadQuietly(), getLibraryVersion() ; or tryToLoad(String...). Returns:; true if OpenSlide has been loaded successfully, false otherwise. openImage; public static OpenSlide openImage(String path); throws IOException; Open an image using OpenSlide, returning an OpenSlide instance to access pixels and metadata.; ; This will attempt to load OpenSlide if it has not already been loaded, throwing an IOException if; this fails.; Use isOpenSlideAvailable() to check whether OpenSlide is available before calling this. Parameters:; path - the image path (usually an absolute file path); Returns:; an OpenSlide instance; Throws:; IOException - if OpenSlide could not be loaded failed to open the file. dete",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html:2482,avail,available,2482,javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/openslide/jna/OpenSlideLoader.html,1,['avail'],['available']
Availability,"ns based upon pixel values. refineGeometryByParent(Geometry) - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler;  ; refineGeometryByParent(Geometry) - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler;  ; refineGeometryByParent(Geometry) - Method in class qupath.process.gui.WandToolEventHandler;  ; refineROIByParent(ROI) - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler. Apply clipping based on the current parent object. refineROIByParent(ROI) - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler. Apply clipping based on the current parent object. refineROIByParent(ROI) - Method in class qupath.process.gui.WandToolEventHandler. Apply clipping based on the current parent object. refresh() - Method in class qupath.lib.gui.commands.PathObjectGridView. Refresh the data in the grid view. refresh() - Method in class qupath.lib.gui.ExtensionClassLoader. Ensure all Jars in the extensions directory (and one subdirectory down) are available. refresh() - Static method in class qupath.lib.gui.prefs.QuPathStyleManager. Refresh the current style. REFRESH - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; REFRESH_DUPLICATE_OBJECT_IDS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.Actions;  ; REFRESH_OBJECT_IDS - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.Actions;  ; refreshAllEditors() - Method in class qupath.lib.gui.panes.PreferencePane. Request that all the property editors are regenerated. refreshChannelOptions() - Method in class qupath.lib.display.ImageDisplay. Refresh the channel options. refreshCombo() - Method in class qupath.lib.gui.charts.HistogramDisplay. Refresh the available measurements. refreshDuplicateIDs() - Static method in class qupath.lib.scripting.QP. Refresh all object IDs for the current hierarchy to ensure there are no duplicates,; retaining the original IDs where possible. refreshDuplicateI",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:834729,down,down,834729,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,2,"['avail', 'down']","['available', 'down']"
Availability,"ns:. setSelectedObject; public void setSelectedObject(PathObject pathObject,; boolean addToSelection); Select the specified object to be the primary selected object, optionally retaining the ; existing selected objects. Parameters:; pathObject - ; addToSelection - add to the existing selection, rather than allowing only the specified object to be selected; See Also:. setSelectedObject(PathObject). deselectObject; public void deselectObject(PathObject pathObject); Ensure that the specified object is removed from the selection. Parameters:; pathObject - . deselectObjects; public void deselectObjects(Collection<? extends PathObject> pathObjects); Ensure the specified objects are deselected.; ; The selection state of other objects will not be modified. Parameters:; pathObjects - . selectObjects; public void selectObjects(Collection<? extends PathObject> pathObjects); Ensure the specified objects are selected.; ; The selection state of other objects will not be modified. Parameters:; pathObjects - . setSelectedObject; public void setSelectedObject(PathObject pathObject); Set the specified object to be selected, deselecting all others. Parameters:; pathObject - . getSelectedObject; public PathObject getSelectedObject(); Get the current primary selected object. Returns:. isSelected; public boolean isSelected(PathObject pathObject); Query whether a specific object is selected. Parameters:; pathObject - ; Returns:. getSelectedROI; public ROI getSelectedROI(); Get the ROI of the selected object, if available, or null. Returns:. clearSelection; public void clearSelection(); Clear selection so that no objects are selected. addPathObjectSelectionListener; public void addPathObjectSelectionListener(PathObjectSelectionListener listener); Add listener for selection changes. Parameters:; listener - . removePathObjectSelectionListener; public void removePathObjectSelectionListener(PathObjectSelectionListener listener); Remove listener for selection changes. Parameters:; listener - . ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectSelectionModel.html:4988,avail,available,4988,javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectSelectionModel.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/hierarchy/events/PathObjectSelectionModel.html,1,['avail'],['available']
Availability,"nsity values for the red, green and blue channels, then add these all together. static PathObject; convertToPathObject(Roi roi,; double xOrigin,; double yOrigin,; double downsampleFactor,; Function<ROI,PathObject> creator,; ImagePlane plane). Create a PathObject for a specific ImageJ Roi. static PathObject; convertToPathObject(Roi roi,; double downsampleFactor,; Function<ROI,PathObject> creator,; ImagePlus imp). Create a PathObject for a specific ImageJ Roi, using an ImagePlus to help set properties. static PathObject; convertToPathObject(ImagePlus imp,; ImageServer<?> server,; Roi roi,; double downsampleFactor,; Function<ROI,PathObject> creator,; ImagePlane plane). Deprecated.; use instead convertToPathObject(Roi, double, double, double, Function, ImagePlane). static PolygonROI; convertToPolygonROI(PolygonRoi roi,; Calibration cal,; double downsampleFactor,; ImagePlane plane). Convert an ImageJ PolygonRoi to a QuPath PolygonROI. static ROI; convertToROI(Roi roi,; double xOrigin,; double yOrigin,; double downsampleFactor,; ImagePlane plane). Create a ROI from an ImageJ Roi. static ROI; convertToROI(Roi roi,; Calibration cal,; double downsampleFactor,; ImagePlane plane). Create a ROI from an ImageJ Roi, using the Calibration object of an ImagePlus. static <T extends PathImage<? extends ImagePlus>>ROI; convertToROI(Roi roi,; T pathImage). Create a ROI from an ImageJ Roi. static ImagePlus; convertToUncalibratedImagePlus(String title,; BufferedImage img). Convert a BufferedImage to an ImagePlus, without pixel size information or other calibration. static ImageStack; createImageStack(ImageProcessor... ips). Create an ImageStack containing the specified ImageProcessors. static PathImage<ImagePlus>; createPathImage(ImageServer<BufferedImage> server,; ImagePlus imp,; RegionRequest request). Create a PathImage from an ImagePlus and region. static double; estimateDownsampleFactor(ImagePlus imp,; ImageServer<?> server). Estimate the downsample factor for an image region extrac",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:5406,down,downsampleFactor,5406,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,1,['down'],['downsampleFactor']
Availability,"nt tables should show object IDs by default or not. static BooleanProperty; showMeasurementTableThumbnails. Specify whether measurement tables should show thumbnail images by default or not. static BooleanProperty; showPointHulls. Show the convex hull for point annotations within the viewer. static BooleanProperty; showStartupMessage. Show a startup message when QuPath is launched. static BooleanProperty; showTMAOptions. Flag to indicate that the TMA menu should be shown to the user - only relevant when working with Tissue Microarrays. static BooleanProperty; showToolBarBadges. Show badges on the toolbar, e.g. static BooleanProperty; skipMissingCores. Skip ('jump over') missing cores when navigating through TMA grids. static StringProperty; startupScript. Path to a startup script that should be run immediately after QuPath's launch. static StringProperty; tableDelimiter. Delimiter to use when exporting tables. static DoubleProperty; tileCachePercentage. Requested percentage of available memory to use for tile caching. static DoubleProperty; tmaExportDownsample. Default downsample factor to use when exporting TMA cores. static BooleanProperty; useCalibratedLocationString. Show the cursor location on a viewer in calibrated units, rather than pixels. static BooleanProperty; usePixelSnapping. If true, pixels should be snapped to integer coordinates when using the drawing tools. static BooleanProperty; useRotateGestures. Support rotate gestures for touchscreens and trackpads. static ObjectProperty<String>; userPath. A path where additional files may be stored, such as extensions and log files. static BooleanProperty; useScrollGestures. Support scroll gestures for touchscreens and trackpads. static BooleanProperty; useSelectedColor. Use a specified color for highlighting selected objects in the viewer. static BooleanProperty; useSystemMenubar. Deprecated. static BooleanProperty; useTileBrush. Request that the brush tool automatically uses any available tiles, rather than ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:8400,avail,available,8400,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['avail'],['available']
Availability,"nt wraps up handy metadata that can be used for translating ROIs. Parameters:; server - ; request - ; Returns:; Throws:; IOException. createPathImage; public static PathImage<ImagePlus> createPathImage(ImageServer<BufferedImage> server,; ImagePlus imp,; RegionRequest request); throws IOException; Create a PathImage from an ImagePlus and region.; If imp is null, it is read from the server. Parameters:; server - ; imp - ; request - ; Returns:; Throws:; IOException. convertToIJRoi; public static <T extends PathImage<ImagePlus>> Roi convertToIJRoi(ROI pathROI,; T pathImage); Create an ImageJ Roi from a ROI, suitable for displaying on the ImagePlus of an PathImage<ImagePlus>. Parameters:; pathROI - ; pathImage - ; Returns:. convertToIJRoi; public static <T extends PathImage<ImagePlus>> Roi convertToIJRoi(ROI pathROI,; Calibration cal,; double downsampleFactor); Convert a QuPath ROI to an ImageJ Roi for an image with the specified calibration. Type Parameters:; T - ; Parameters:; pathROI - ; cal - ; downsampleFactor - ; Returns:; See Also:. convertToIJRoi(ROI, double, double, double). convertToROI; public static ROI convertToROI(Roi roi,; Calibration cal,; double downsampleFactor,; ImagePlane plane); Create a ROI from an ImageJ Roi, using the Calibration object of an ImagePlus. Parameters:; roi - ImageJ Roi; cal - calibration object, including original information; downsampleFactor - the downsample factor of the original image; plane - plane defining c, z and t indices; Returns:. getImagePlane; public static ImagePlane getImagePlane(Roi roi,; ImagePlus imp); Get the ImagePlane of an ImageJ Roi, based upon its stored positions. Parameters:; roi - ImageJ roi that may have c, z, t or position properties set.; imp - associated image; if not null, this will be used to convert the Roi's 'position' property, if non-zero; Returns:; the ImagePlane that is the best approximation of this Roi's position. convertToROI; public static <T extends PathImage<? extends ImagePlus>>; ROI conve",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:23939,down,downsampleFactor,23939,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,1,['down'],['downsampleFactor']
Availability,"nuclei. Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static OverlayOptions.DetectionDisplayMode; valueOf(String name). Returns the enum constant of this class with the specified name. static OverlayOptions.DetectionDisplayMode[]; values(). Returns an array containing the constants of this enum class, in; the order they are declared. Methods inherited from class java.lang.Enum; clone, compareTo, describeConstable, equals, finalize, getDeclaringClass, hashCode, name, ordinal, toString, valueOf. Methods inherited from class java.lang.Object; getClass, notify, notifyAll, wait, wait, wait. Enum Constant Details. BOUNDARIES_ONLY; public static final OverlayOptions.DetectionDisplayMode BOUNDARIES_ONLY; Show only cell boundaries. NUCLEI_ONLY; public static final OverlayOptions.DetectionDisplayMode NUCLEI_ONLY; Show only cell nuclei. NUCLEI_AND_BOUNDARIES; public static final OverlayOptions.DetectionDisplayMode NUCLEI_AND_BOUNDARIES; Show both cell boundaries and cell nuclei, where available. CENTROIDS; public static final OverlayOptions.DetectionDisplayMode CENTROIDS; Show only detection centroids, not boundaries. Method Details. values; public static OverlayOptions.DetectionDisplayMode[] values(); Returns an array containing the constants of this enum class, in; the order they are declared. Returns:; an array containing the constants of this enum class, in the order they are declared. valueOf; public static OverlayOptions.DetectionDisplayMode valueOf(String name); Returns the enum constant of this class with the specified name.; The string must match exactly an identifier used to declare an; enum constant in this class. (Extraneous whitespace characters are ; not permitted.). Parameters:; name - the name of the enum constant to be returned.; Returns:; the enum constant with the specified name; Throws:; IllegalArgumentException - if this enum class has no constant with the specified name; NullPointerException - if the arg",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html:2322,avail,available,2322,javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/OverlayOptions.DetectionDisplayMode.html,1,['avail'],['available']
Availability,"n isLocked(); Query the locked status for the object, indicating whether it should be editable or not. Overrides:; isLocked in class PathObject; Returns:. isEditable; @Deprecated; public boolean isEditable(); Deprecated.; since v0.4.0. Return true if isLocked() is false, otherwise returns false.; ; This method existed before isLocked() to try to automatically determine whether ; an object should be locked or not. Now the isLocked() flag should be used instead. Specified by:; isEditable in class PathObject; Returns:. setPathClass; public void setPathClass(PathClass pathClass,; double classProbability); Description copied from class: PathObject; Set the classification of the object, specifying a classification probability.; ; The probability is expected to be between 0 and 1, or Double.NaN if no probability should be set. Specified by:; setPathClass in class PathObject; Parameters:; pathClass - ; classProbability - . getClassProbability; public double getClassProbability(); Description copied from class: PathObject; Request the classification probability, or Double.NaN if no probability is available. Specified by:; getClassProbability in class PathObject; Returns:. getPathClass; public PathClass getPathClass(); Description copied from class: PathObject; Get the classification of the object. Specified by:; getPathClass in class PathObject; Returns:. getROI; public ROI getROI(); Description copied from class: PathObject; Get the region of interest (ROI) for the object. Specified by:; getROI in class PathObject; Returns:. writeExternal; public void writeExternal(ObjectOutput out); throws IOException. Specified by:; writeExternal in interface Externalizable; Overrides:; writeExternal in class PathObject; Throws:; IOException. readExternal; public void readExternal(ObjectInput in); throws IOException,; ClassNotFoundException. Specified by:; readExternal in interface Externalizable; Overrides:; readExternal in class PathObject; Throws:; IOException; ClassNotFoundException. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathROIObject.html:4607,avail,available,4607,javadoc/docs/qupath/lib/objects/PathROIObject.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathROIObject.html,1,['avail'],['available']
Availability,"o a BufferedImage to get the appropriate display. static BufferedImage; applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput,; List<? extends ChannelDisplayInfo> selectedChannels,; boolean useGrayscaleLuts). Deprecated.; use instead applyTransforms(BufferedImage, BufferedImage, List, ChannelDisplayMode). static BufferedImage; applyTransforms(BufferedImage imgInput,; BufferedImage imgOutput,; List<? extends ChannelDisplayInfo> selectedChannels,; ChannelDisplayMode mode). Convert an image to RGB by applying the specified ChannelDisplayInfos and ChannelDisplayMode. void; autoSetDisplayRange(ChannelDisplayInfo info). Automatically set the display range for a channel, using the default saturation defined in PathPrefs.autoBrightnessContrastSaturationPercentProperty(). void; autoSetDisplayRange(ChannelDisplayInfo info,; double saturation). Automatically set the display range for a channel. ObservableList<ChannelDisplayInfo>; availableChannels(). ObservableList containing the channels currently available for display. LongProperty; changeTimestampProperty(). Timestamp for the most recent change. static ImageDisplay; create(ImageData<BufferedImage> imageData). Create a new image display, and set the specified image data. ObjectBinding<ChannelDisplayMode>; displayMode(). Get the value of useInvertedBackgroundProperty(). Histogram; getHistogram(ChannelDisplayInfo info). Returns a histogram for a ChannelInfo, or none if no histogram is available (e.g. ImageData<BufferedImage>; getImageData(). Get the current image data. long; getLastChangeTimestamp(). Get a timestamp the last known changes for the object. ChannelDisplayInfo; getSwitchToGrayscaleChannel(). Get the value of switchToGrayscaleChannelProperty(). String; getTransformedValueAsString(BufferedImage img,; int x,; int y). Get a string representation of a transformed pixel value, using the currently-selected channels. boolean; isCompatible(ImageDisplay display). Check if an image display is 'compatible' with thi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html:2781,avail,available,2781,javadoc/docs/qupath/lib/display/ImageDisplay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html,1,['avail'],['available']
Availability,"o or more file extensions as an option. static <T> T; showChoiceDialog(String title,; String message,; Collection<T> choices,; T defaultChoice). Deprecated.; Show a choice dialog with a collection of choices (selection from ComboBox or similar). static <T> T; showChoiceDialog(String title,; String message,; T[] choices,; T defaultChoice). Deprecated.; Show a choice dialog with an array of choices (selection from ComboBox or similar). static boolean; showConfirmDialog(String title,; String text). Deprecated.; Show a confirm dialog (OK/Cancel). static boolean; showConfirmDialog(String title,; Node node). Deprecated.; Show a confirm dialog (OK/Cancel). static void; showErrorMessage(String title,; String message). Deprecated.; Show an error message. static void; showErrorMessage(String title,; Throwable e). Deprecated.; Show an error message, displaying the localized message of a Throwable. static void; showErrorMessage(String title,; Node node). Deprecated.; Show an error message, with the content defined within a Node. static void; showErrorNotification(String title,; String message). Deprecated.; Show an error notification. static void; showErrorNotification(String title,; Throwable e). Deprecated.; Show an error notification, displaying the localized message of a Throwable. static void; showInfoNotification(String title,; String message). Deprecated.; Show an info notification. static Double; showInputDialog(String title,; String message,; Double initialInput). Deprecated.; Show an input dialog requesting a numeric value. static String; showInputDialog(String title,; String message,; String initialInput). Deprecated.; Show an input dialog requesting a String input. static boolean; showMessageDialog(String title,; String message). Deprecated.; Show a standard message dialog. static boolean; showMessageDialog(String title,; Node node). Deprecated.; Show a message dialog (OK button only), with the content contained within a Node. static void; showNoImageError(String ti",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:3384,error,error,3384,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['error'],['error']
Availability,"objects.features.FeatureExtractor. Extract features from a collection of objects, adding the corresponding values to a FloatBuffer. extractFloats(Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Extract pixels as a float array. extractHyperstack(ImageServer<BufferedImage>, RegionRequest) - Static method in class qupath.imagej.tools.IJTools. Extract a full ImageJ hyperstack for a specific region, using all z-slices and time points. extractHyperstack(ImageServer<BufferedImage>, RegionRequest, int, int, int, int) - Static method in class qupath.imagej.tools.IJTools. Extract a full ImageJ hyperstack for a specific region, for specified ranges of z-slices and time points. extractMaskedDoubles(Mat, Mat, int) - Static method in class qupath.opencv.tools.OpenCVTools. Extract pixels from an image using a mask, limited to the specified channel index. extractMaskedFloats(Mat, Mat, int) - Static method in class qupath.opencv.tools.OpenCVTools. Extract pixels from an image using a mask, limited to the specified channel index. extractMaskedPixels(Parameters<BufferedImage, BufferedImage>, int, Function<PathObject, ROI>) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. extractMaskedPixels(Parameters<BufferedImage, BufferedImage>, String, Function<PathObject, ROI>) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. extractMaskedPixels(Parameters<BufferedImage, BufferedImage>, ColorTransforms.ColorTransform, Function<PathObject, ROI>) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Extract the pixels from the image using the specified transform, and applying any ROI mask. extractOverlay(PathObjectHierarchy, RegionRequest, OverlayOptions, Predicate<PathObject>) - Static method in cl",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:295509,mask,mask,295509,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['mask'],['mask']
Availability,"observable list of available PathClasses. Returns:. getDefaultDragDropListener; public DragDropImportListener getDefaultDragDropListener(); Get a reference to the default drag & drop listener, so this may be added to additional windows if needed. Returns:. resetAvailablePathClasses; public boolean resetAvailablePathClasses(); Populate the availablePathClasses with a default list. Returns:; true if changes were mad to the available classes, false otherwise. getAnalysisTabPane; public TabPane getAnalysisTabPane(); Access the main tab pane shown in the QuPath window.; This enables extensions to add or remove tabs - but be cautious!; ; Removing tabs can impact other functionality; If adding a tab, it is usually best to apply FXUtils.makeTabUndockable(Tab). Returns:. isStandalone; public boolean isStandalone(); Query whether this is a standalone QuPathGUI instance, as flagged during startup.; It can be important to know this so as to avoid calling System.exit(0) or similar, ; and bringing down some other application entirely. Returns:; true if this is a standalone QuPathGUI instance, false otherwise. getAllViewers; public ObservableList<QuPathViewer> getAllViewers(); Get an unmodifiable observable list of all viewers. Returns:; See Also:. ViewerManager.getAllViewers(). getViewer; public QuPathViewer getViewer(); Get the currently active viewer. Returns:. getInstance; public static QuPathGUI getInstance(); Get the static instance of the current QuPath GUI. Returns:. openSavedData; public boolean openSavedData(QuPathViewer viewer,; File file,; boolean keepExistingServer,; boolean promptToSaveChanges); throws IOException; Open a saved data file within a particular viewer, optionally keeping the same ImageServer as is currently open.; The purpose of this is to make it possible for a project (for example) to open the correct server prior to; opening the data file, enabling it to make use of relative path names and not have to rely on the absolute path; encoded within the Imag",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:17739,down,down,17739,javadoc/docs/qupath/lib/gui/QuPathGUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html,1,['down'],['down']
Availability,"ocale, String) - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; setStringLastValue(Locale, String) - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; setStringLastValue(Locale, String) - Method in interface qupath.lib.plugins.parameters.Parameter. Set last value using a string; implementing classes may need to parse this. setStringLastValue(Locale, String) - Method in class qupath.lib.plugins.parameters.StringParameter;  ; setStyle() - Method in interface qupath.lib.gui.prefs.QuPathStyleManager.StyleOption. Set the style for the QuPath application. setSwitchToGrayscaleChannel(ChannelDisplayInfo) - Method in class qupath.lib.display.ImageDisplay. Set the value of ImageDisplay.switchToGrayscaleChannelProperty(). setSynchronizeViewers(boolean) - Method in class qupath.lib.gui.viewer.ViewerManager. Sets the value of the synchronizeViewers property. setSystemWriters() - Method in class qupath.lib.scripting.ScriptParameters.Builder. Set the output and error writers to use System.out and System.err. setText(String) - Method in interface qupath.lib.gui.scripting.EditableText. Set all the text in the editor. setText(String) - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl. Sets the value of the text property. setText(String) - Method in class qupath.lib.gui.scripting.TextAreaControl. Sets the value of the text property. setTextFieldFromNumber(TextField, Number, String) - Static method in class qupath.lib.gui.dialogs.ParameterPanelFX;  ; setThickness(BoundaryStrategy, double) - Static method in class qupath.process.gui.commands.ml.BoundaryStrategy. Create a boundary strategy with the specified thickness. setThresholdColor(ObservableNumberValue, Color) - Method in class qupath.lib.gui.charts.ChartThresholdPane. Set the color of a specified threshold line. setThresholds(Color, double...) - Method in class qupath.lib.gui.charts.ChartThresholdPane. Set thresholds, which are visualized as vertical lines. setThumbnail(T) - Me",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:950181,error,error,950181,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['error'],['error']
Availability,"ocess.gui.commands.ml.PixelClassifierTraining. public class PixelClassifierTraining; extends Object; Helper class for training a pixel classifier. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; PixelClassifierTraining.ClassifierTrainingData. Wrapper for training data. Constructor Summary; Constructors. Constructor; Description; PixelClassifierTraining(ImageDataOp featureCalculator). Create a new pixel classifier helper, to support generating training data. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; PixelClassifierTraining.ClassifierTrainingData; createTrainingData(Collection<ImageData<BufferedImage>> imageData). Create training data, using a label map automatically generated from the available classifications. PixelClassifierTraining.ClassifierTrainingData; createTrainingData(ImageData<BufferedImage> imageData). Create training data, using a label map automatically generated from the available classifications. PixelClassifierTraining.ClassifierTrainingData; createTrainingDataForLabelMap(Collection<ImageData<BufferedImage>> imageData,; Map<PathClass,Integer> labels). Get a classifier training map, using a predefined label map (which determines which classifications to use). BoundaryStrategy; getBoundaryStrategy(). Get the strategy for handling the boundaries of area annotations. ImageDataOp; getFeatureOp(). Get an ImageDataOp used for feature calculation. PixelCalibration; getResolution(). Get the resolution at which the training should occur. void; setBoundaryStrategy(BoundaryStrategy strategy). Set the strategy for handling the boundaries of area annotations. void; setFeatureOp(ImageDataOp featureOp). Set the ImageDataOp used to calculate features. void; setResolution(PixelCalibration cal). Set the resolution at which the training should occur. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notif",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.html:1460,avail,available,1460,javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/process/gui/commands/ml/PixelClassifierTraining.html,1,['avail'],['available']
Availability,"ocessor); Set the processor. This is required to do any interesting work. Parameters:; processor - ; Returns:. padding; public PixelProcessor.Builder<S,T,U> padding(Padding padding); Set the padding to use when extracting regions.; Note that this is defined in pixels at the full image resolution, not the downsampled resolution. Parameters:; padding - ; Returns:. padding; public PixelProcessor.Builder<S,T,U> padding(int size); Set the padding to use when extracting regions, using a symmetric padding.; Note that this is defined in pixels at the full image resolution, not the downsampled resolution. Parameters:; size - ; Returns:. downsample; public PixelProcessor.Builder<S,T,U> downsample(double downsample); Set the downsample factor to use with requesting image regions. Parameters:; downsample - ; Returns:. pixelSize; public PixelProcessor.Builder<S,T,U> pixelSize(double pixelSize); Set the requested pixel size to use with requesting image regions.; This will be converted to a downsample factor based on the image calibration. Parameters:; pixelSize - ; Returns:. tiler; public PixelProcessor.Builder<S,T,U> tiler(Tiler tiler); Set a tiler to use. This is required for large regions, so that the image can be processed in tiles. Parameters:; tiler - ; Returns:. tile; public PixelProcessor.Builder<S,T,U> tile(int tileWidth,; int tileHeight); Set a default tiler to use, with a specified tile size. Parameters:; tileWidth - ; tileHeight - ; Returns:. merger; public PixelProcessor.Builder<S,T,U> merger(ObjectMerger merger); Set a merger to use. This is currently only relevant when using a tiler. Parameters:; merger - ; Returns:; See Also:. mergeSharedBoundaries(double). mergeSharedBoundaries; public PixelProcessor.Builder<S,T,U> mergeSharedBoundaries(double threshold); Convenience method to set a merger that merges objects based on their shared boundary. Parameters:; threshold - the shared boundary threshold; see ObjectMerger.createSharedTileBoundaryMerger(double); for more inf",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html:4281,down,downsample,4281,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,1,['down'],['downsample']
Availability,"ociated with any ROI, or null if no mask is available. PathObject; getParent(). Get the parent object. PathObject; getParentOrProxy(). Get the parent, or a proxy parent if one has been specified. RegionRequest; getRegionRequest(). Get the region request. ImageServer<BufferedImage>; getServer(). Get the server. TileRequest; getTileRequest(). Get the tile request, if available. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getImageData; public ImageData<BufferedImage> getImageData(); Get the image data. Returns:. getServer; public ImageServer<BufferedImage> getServer(); Get the server. This is often the accessed from getImageData(), but in some cases it may be different; (e.g. if the processing should be applied to a transformed image). Returns:. getRegionRequest; public RegionRequest getRegionRequest(); Get the region request. Returns:. getTileRequest; public TileRequest getTileRequest(); Get the tile request, if available.; This should be used when the region request is derived at a specific tile resolution, because it is able to; provide more accurate tile coordinates without rounding errors. Returns:. getImage; public S getImage(); throws IOException; Get the image to process.; This may return a cached value, so it is important that it is not modified; by the caller. Returns:; Throws:; IOException. getMask; public T getMask(); throws IOException; Get the mask associated with the main ROI or the parent object, or null if no mask is available.; Note that the mask returned should correspond to the same region as getImage() - and not; the bounds of the ROI. Returns:; Throws:; IOException. getMask; public T getMask(ROI roi); throws IOException; Get the mask associated with any ROI, or null if no mask is available.; Note that the mask returned should correspond to the same region as getImage() - and not; the bounds of the ROI. Parameters:; roi - ; Returns:; Throws",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html:2251,avail,available,2251,javadoc/docs/qupath/lib/experimental/pixels/Parameters.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/Parameters.html,1,['avail'],['available']
Availability,"od in class qupath.lib.gui.charts.Charts.PieChartBuilder. Specify the marker opacity. markerOpacity(double) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Specify the marker opacity. MASK_ALPHA - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the alpha component from a packed ARGB int value. MASK_BLUE - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the blue component from a packed (A)RGB int value. MASK_GREEN - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the green component from a packed (A)RGB int value. MASK_RED - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the red component from a packed (A)RGB int value. maskFunction(MaskSupplier<S, T>) - Method in class qupath.lib.experimental.pixels.Parameters.Builder. Function used to lazily create a mask corresponding to the image for a specified ROI. maskImageNames - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; maskImageNamesProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request that image names are hidden within the user interface. maskObject(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. maskObjectAndSplit(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. maskSupplier(MaskSupplier<S, T>) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set the mask supplier. MaskSupplier<S,T> - Interface in qupath.lib.experimental.pixels. A functional interface for supplying a mask corresponding to an image.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:672695,mask,maskImageNames,672695,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['mask'],['maskImageNames']
Availability,"odel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier,; String predictionMeasurement); throws IOException; Apply a classification model to an image patch to classify an object. Parameters:; model - the model for prediction; pathObject - the object to classify; server - the image supplying the patch; downsample - the requested downsample at which classification should be applied; classifier - function to convert the classification label into a PathClass; predictionMeasurement - optional measurement name for storing the prediction value (often treated as a probability) ; in the measurement list of the object.; Returns:; true if the classification of the object has changed, false otherwise; Throws:; IOException - if the patch cannot be read. classify; public static boolean classify(ClassificationModel model,; PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; int width,; int height,; IntFunction<PathClass> classifier,; String predictionMeasurement); throws IOException,; IllegalArgumentException; Apply a classification model to an image patch to classify an object.; If a patch width and height both > 0, the patch is cropped around the ROI centroid and padded if necessary.; If a patch width and height both < 0, the bounding box of hte ROI is used directly and the model is assumed able to ; resize if needed.; If the patch width and height are anything else, an IllegalArgumentException is thrown. Parameters:; model - the model for prediction; pathObject - the object to classify; server - the image supplying the patch; downsample - the requested downsample at which classification should be applied; width - the fixed input size; height - the fixed input size; classifier - function to convert the classification label into a PathClass; predictionMeasurement - optional measurement name for storing the prediction value (often treated as a probability) ; in the measurement list o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html:10466,down,downsample,10466,javadoc/docs/qupath/opencv/dnn/DnnTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnTools.html,1,['down'],['downsample']
Availability,"odsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; static List<RegionRequest>; createAllRequests(ImageServer<?> server,; double downsample). Create requests for the full width and height of an ImageServer, for all planes (z-slices and time points). static RegionRequest; createInstance(String path,; double downsample,; int x,; int y,; int width,; int height). Create a request for a region specified in terms of its bounding box, using the first z-slice and time point. static RegionRequest; createInstance(String path,; double downsample,; int x,; int y,; int width,; int height,; int z,; int t). Create a request for a region specified in terms of its bounding box, z-slice and time point. static RegionRequest; createInstance(String path,; double downsample,; int x,; int y,; int width,; int height,; ImagePlane plane). Create a request for a region specified in terms of its bounding box and ImagePlane. static RegionRequest; createInstance(String path,; double downsample,; Collection<? extends ROI> rois). Create a request that contains the pixels of the specified ROIs. static RegionRequest; createInstance(String path,; double downsample,; ImageRegion region). Create a request corresponding to a specified ImageRegion. static RegionRequest; createInstance(String path,; double downsample,; ROI roi). Create a request that contains the pixels of the specified ROI. static RegionRequest; createInstance(String path,; RegionRequest request). Create a request that matches another request but with a different path. static RegionRequest; createInstance(ImageServer<?> server). Create a request for the full width and height of an ImageServer, for the default plane (first z-slice, time point) ; and first resolution level downsample (usually 1, but not always). static RegionRequest; createInstance(ImageServer<?> server,; double downsample). Create a request for the full width and height of an ImageServer, for the default plane (first z-slice, time po",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html:1854,down,downsample,1854,javadoc/docs/qupath/lib/regions/RegionRequest.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html,1,['down'],['downsample']
Availability,"of pixels ; from the top left of the full-resolution image. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Interface; Description; static enum ; ROI.RoiType. Enum representing the major different types of ROI. Method Summary. All MethodsInstance MethodsAbstract MethodsDefault MethodsDeprecated Methods. Modifier and Type; Method; Description; boolean; contains(double x,; double y). Test is the ROI contains specified x, y coordinates. ROI; duplicate(). Deprecated. List<Point2>; getAllPoints(). Get a list of points representing the vertices of the ROI. double; getArea(). Get the area of this ROI. double; getBoundsHeight(). Returns the height of the ROI bounding box. double; getBoundsWidth(). Returns the width of the ROI bounding box. double; getBoundsX(). Returns the x coordinate for the top left of the ROI bounding box. double; getBoundsY(). Returns the y coordinate for the top left of the ROI bounding box. int; getC(). Get channel index, or -1 if the ROI relates to all available channels. double; getCentroidX(). Returns the x coordinate for the ROI centroid. double; getCentroidY(). Returns the y coordinate for the ROI centroid. ROI; getConvexHull(). Get a ROI representing the convex hull of this ROI. Geometry; getGeometry(). Returns a org.locationtech.jts.geom.Geometry object. ImagePlane; getImagePlane(). Get the ImagePlane, which contains the values for c, z and t in a single object. double; getLength(). Get ROI length. int; getNumPoints(). Get the number of points, as would be returned by getAllPoints(). String; getRoiName(). Get a String representation of the kind of ROI we have, ; e.g. ROI.RoiType; getRoiType(). Get the RoiType, used to distinguish between points, lines and areas. double; getScaledArea(double pixelWidth,; double pixelHeight). Get scaled area of the ROI, for use with calibrated pixel sizes. double; getScaledLength(double pixelWidth,; double pixelHeight). Get the scaled length, for use with calibrated pixel sizes. S",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/interfaces/ROI.html:1680,avail,available,1680,javadoc/docs/qupath/lib/roi/interfaces/ROI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/interfaces/ROI.html,1,['avail'],['available']
Availability,"of time points in a time series. int; nZSlices(). Number of slices in a z-stack. void; setMetadata(ImageServerMetadata metadata). Set the metadata to use, e.g. String; toString();  . Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getOriginalMetadata, getPixelCalibration, getServerType, getURIs, readBufferedImage, readRegion, readRegion, readRegion. Constructor Details. AbstractImageServer; protected AbstractImageServer(Class<T> imageClass). Method Details. getImageClass; public Class<T> getImageClass(); Description copied from interface: ImageServer; Get the class of the image representation returned by this ImageServer. Specified by:; getImageClass in interface ImageServer<T>; Returns:. getCache; protected Map<RegionRequest,T> getCache(); Get the internal cache. This may be useful to check for the existence of a cached tile any time ; when speed is of the essence, and if no cached tile is available a request will not be made. Returns:. getThumbnailDownsampleFactor; protected double getThumbnailDownsampleFactor(int maxWidth,; int maxHeight). createServerBuilder; protected abstract ImageServerBuilder.ServerBuilder<T> createServerBuilder(); Create a ServerBuilder, which can be used to construct an identical ImageServer.; This should also include the current metadata.; It is permissible to return null for an ImageServer that cannot be recreated ; via a ImageServerBuilder.ServerBuilder. Returns:. getBuilder; public ImageServerBuilder.ServerBuilder<T> getBuilder(); Description copied from interface: ImageServer; Get a ServerBuilder capable of building a server the same as this one.; ; The purpose of this is to aid serialization of servers by switching to a simpler representation.; ; The default implementation returns null, indicating that rebuilding the server is not supported. Specified by:; getBuilder in interface ImageServer<T>",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html:4491,avail,available,4491,javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/AbstractImageServer.html,1,['avail'],['available']
Availability,"ogger logger). Set the output and error writers to append to the specified logger. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. setDefaultImports; public ScriptParameters.Builder setDefaultImports(Collection<Class<?>> imports). setDefaultStaticImports; public ScriptParameters.Builder setDefaultStaticImports(Collection<Class<?>> imports). setFile; public ScriptParameters.Builder setFile(File file). setScript; public ScriptParameters.Builder setScript(String script). setSystemWriters; public ScriptParameters.Builder setSystemWriters(); Set the output and error writers to use System.out and System.err. Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(org.slf4j.Logger logger); Set the output and error writers to append to the specified logger. Parameters:; logger - ; Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(); Set the output and error writers to append to the default logger. Returns:. setWriter; public ScriptParameters.Builder setWriter(Writer writer); Set the main output writer. Parameters:; writer - ; Returns:. setErrorWriter; public ScriptParameters.Builder setErrorWriter(Writer writer); Set the main error writer. Parameters:; writer - ; Returns:. setBatchSize; public ScriptParameters.Builder setBatchSize(int batch); Set the batch size for batch processing (default is 1). Parameters:; batch - ; Returns:. setBatchIndex; public ScriptParameters.Builder setBatchIndex(int ind); Set the current image index for batch processing (default is 0). Parameters:; ind - ; Returns:. setBatchSaveResult; public ScriptParameters.Builder setBatchSaveResult(boolean doSave); Specify whether the script that is running should save results or not. Parameters:; doSave - ; Returns:. setArgs; public ScriptParameters.Builder setArgs(String[] args); Set optional string args to pass to the script. Parameters:; args - ; Returns:. setProje",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html:3515,error,error,3515,javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,1,['error'],['error']
Availability,"ogram; public static long[] computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask,; Rectangle bounds); Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values, optionally restricted to a bounding rectangle. Parameters:; raster - the raster containing the data for the histogram; if not TYPE_BYTE or TYPE_USHORT an IllegalArgumentException will be thrown; counts - histogram counts; if null, a new array will be created. Its must be sufficient for the data type, i.e. 256 or 65536.; No size checking is performed, therefore if non-null it must be sufficiently large for the data type.; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped.; bounds - optional rectangle defining the bounds of the raster to search.; If not null, this is used with the (also optional) mask to restrict the pixels that are used.; This can give substantial performance improvements for small masked regions embedded in larger images.; Returns:; the updated histogram counts; See Also:. computeUnsignedIntHistogram(WritableRaster, long[], WritableRaster). computeArgMaxHistogram; public static long[] computeArgMaxHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask); Create a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion. Parameters:; raster - the multi-band raster containing values to check; counts - existing histogram if it should be updated, or null if a new histogram should be created. The length should ; match the number of bands in the raster.; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; Returns:; See Also:. computeArgMaxHistogram(WritableRaster, long[], WritableRaster, Rectangle). computeArgMaxHistogram; public static long[] computeArgMaxHistogram(WritableRaster raster,; long[] counts,; Writab",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:11633,mask,masked,11633,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,1,['mask'],['masked']
Availability,"ogs.Dialogs. Deprecated.; Show a confirm dialog (OK/Cancel). showConnectionsProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showDeprecatedCommands - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; showDetectionMeasurementManager(QuPathGUI, ImageData<?>) - Static method in class qupath.lib.gui.commands.Commands. Show a simple dialog for viewing (and optionally removing) detection measurements. showDetectionMeasurementTable(QuPathGUI, ImageData<BufferedImage>) - Static method in class qupath.lib.gui.commands.Commands. Show a measurement table for all detection objects. showDetectionsProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showEditor() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; showEditor() - Method in interface qupath.lib.gui.scripting.ScriptEditor. Show the script editor. showErrorMessage(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message. showErrorMessage(String, Throwable) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message, displaying the localized message of a Throwable. showErrorMessage(String, Node) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message, with the content defined within a Node. showErrorNotification(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error notification. showErrorNotification(String, Throwable) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error notification, displaying the localized message of a Throwable. showExperimentalCommands - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; showExperimentalOptionsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Flag to indicate that menu items marked 'experimental' should be shown to the user. showGridProperty() - Method in class qupat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:964488,error,error,964488,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['error'],['error']
Availability,"oi is null or incompatible); Since:; v0.4.0; See Also:. convertToPathObject(ImagePlus, ImageServer, Roi, double, Function, ImagePlane); convertToDetection(Roi, double, double, double, ImagePlane). readImageJRois; public static List<Roi> readImageJRois(File file); Read ImageJ Rois from a .roi or a RoiSet.zip file. Parameters:; file - ; Returns:. containsImageJRois; public static boolean containsImageJRois(File file); Check whether a file is likely to contain an ImageJ ROI, based upon its extension ; or .zip file contents. Parameters:; file - ; Returns:; true if the file seems to contain ImageJ ROIs, false otherwise. calibrateObject; public static void calibrateObject(PathObject pathObject,; Roi roi); Set the properties of a PathObject based upon an ImageJ Roi.; This attempts to extract as much useful information as is relevant, including name, color and group. Parameters:; pathObject - ; roi - . convertToAnnotation; @Deprecated; public static PathObject convertToAnnotation(ImagePlus imp,; ImageServer<?> server,; Roi roi,; double downsampleFactor,; ImagePlane plane); Deprecated.; use instead convertToAnnotation(Roi, double, double, double, ImagePlane). Create an annotation object for a specific ImageJ Roi. Parameters:; imp - ; server - ; roi - ; downsampleFactor - ; plane - ; Returns:. convertToDetection; @Deprecated; public static PathObject convertToDetection(ImagePlus imp,; ImageServer<?> server,; Roi roi,; double downsampleFactor,; ImagePlane plane); Deprecated.; use instead convertToDetection(Roi, double, double, double, ImagePlane). Create an detection object for a specific ImageJ Roi. Parameters:; imp - ; server - ; roi - ; downsampleFactor - ; plane - ; Returns:. convertLabelsToCells; public static SortedMap<Number,PathObject> convertLabelsToCells(ImageProcessor ipNuclei,; ImageProcessor ipCells,; Calibration cal,; double downsample,; ImagePlane plane); Convert integer labeled images into cell objects. Parameters:; ipNuclei - labels corresponding to cell nucle",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:17552,down,downsampleFactor,17552,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,1,['down'],['downsampleFactor']
Availability,ojectIO. Get the default extension for a QuPath project file. getPrompt() - Method in class qupath.lib.plugins.parameters.BooleanParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.ChoiceParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.DoubleParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.EmptyParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.IntParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.NumericParameter;  ; getPrompt() - Method in class qupath.lib.plugins.parameters.StringParameter;  ; getPrompt() - Method in interface qupath.lib.plugins.parameters.Parameter. Get some prompt text that may be displayed to a user. getProperties() - Method in class qupath.lib.images.ImageData. Get an unmodifiable map representing all known properties for this ImageData. getProperties() - Method in class qupath.lib.images.servers.openslide.jna.OpenSlide. Get an unmodifiable map of all available properties. getProperty(String) - Method in class qupath.lib.images.ImageData. Get a specified property. getPropertySheet() - Method in class qupath.lib.gui.panes.PreferencePane. Get the property sheet for this PreferencePane. getProviderClass() - Method in class qupath.lib.images.servers.ImageServerBuilder.UriImageSupport. Get the class of the associated ImageServerBuilder. getPValue() - Method in class qupath.lib.analysis.stats.survival.LogRankTest.LogRankResult. Get the calculated p-value. getQuartiles(double[]) - Static method in class qupath.lib.analysis.stats.StatisticsHelper. Determine thresholds for dividing an array of double values into quartiles. getQuPath() - Method in class qupath.lib.gui.actions.CommonActions. Get the QuPath instance associated with these actions. getQuPath() - Static method in class qupath.lib.gui.scripting.QPEx. Get the current QuPath instance. getQuPathVersion() - Method in class qupath.imagej.gui.IJExtension. Returns the version stored ,MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:494012,avail,available,494012,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"olation. Parameters:; img - input image to be resized; finalWidth - target output width; finalHeight - target output height; smoothInterpolate - if true, the resize method is permitted to use a smooth interpolation method.; If false, nearest-neighbor interpolation is used.; Returns:; resized image. computeUnsignedIntHistogram; public static long[] computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask); Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values. Parameters:; raster - the raster containing the data for the histogram; if not TYPE_BYTE or TYPE_USHORT an IllegalArgumentException will be thrown; counts - histogram counts; if null, a new array will be created. Its must be sufficient for the data type, i.e. 256 or 65536.; No size checking is performed, therefore if non-null it must be sufficiently large for the data type.; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped; Returns:; the updated histogram counts; See Also:. computeUnsignedIntHistogram(WritableRaster, long[], WritableRaster, Rectangle). computeUnsignedIntHistogram; public static long[] computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask,; Rectangle bounds); Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values, optionally restricted to a bounding rectangle. Parameters:; raster - the raster containing the data for the histogram; if not TYPE_BYTE or TYPE_USHORT an IllegalArgumentException will be thrown; counts - histogram counts; if null, a new array will be created. Its must be sufficient for the data type, i.e. 256 or 65536.; No size checking is performed, therefore if non-null it must be sufficiently large for the data type.; rasterMask - optional single-channel mask; if not null, corresponding pixels with 0 values in the mask will be skipped.; bounds - optional rectangle de",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:10386,mask,mask,10386,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,2,['mask'],['mask']
Availability,"ollection<PathObject> pathObjects,; Class<? extends PathObject> cls). Get the PathObjects in a collection that are instances of a specified class. static <T extends PathObject>List<T>; getPointObjects(Collection<T> pathObjects). Get a list of objects with point ROIs from a collection of objects. static Set<PathClass>; getRepresentedPathClasses(PathObjectHierarchy hierarchy,; Class<? extends PathObject> cls). Get a set of the represented path classes, i.e. static ROI; getROI(PathObject pathObject,; boolean preferNucleus). Get the ROI for a PathObject, with a preference for the nucleus ROI of a cell. static String; getSuitableName(Class<? extends PathObject> cls,; boolean makePlural). Get a user-friendly name for a specific type of PathObject, based on its Java class. static Collection<? extends PathObject>; getSupportedObjects(Collection<? extends PathObject> availableObjects,; Collection<Class<? extends PathObject>> supportedClasses). From a collection of available objects, extract those that are instances of specified supported classes. static TMACoreObject; getTMACoreForPixel(TMAGrid tmaGrid,; double x,; double y). Get the TMA core that contains the specified x & y coordinate, or null if no core is available for the coordinates give. static List<TMACoreObject>; getTMACoreObjects(PathObjectHierarchy hierarchy,; boolean includeMissingCores). Extract a list of TMA cores from an object hierarchy. static boolean; hasPointROI(PathObject pathObject). Returns true if a PathObject has a Point ROI. static boolean; hierarchyContainsObject(PathObjectHierarchy hierarchy,; PathObject pathObject). Check if a hierarchy contains a specified PathObject. static boolean; isAncestor(PathObject pathObject,; PathObject possibleAncestor). Query if one object is the ancestor of another. static void; lockObjects(PathObjectHierarchy hierarchy,; Collection<? extends PathObject> pathObjects). Set specified objects to be 'locked'. static void; lockSelectedObjects(PathObjectHierarchy hierarchy).",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html:7405,avail,available,7405,javadoc/docs/qupath/lib/objects/PathObjectTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/PathObjectTools.html,1,['avail'],['available']
Availability,"olorDeconvolutionStains stains). Apply color deconvolution, outputting 3 'stain' images in the same order as the stain vectors. static boolean; containsImageJRois(File file). Check whether a file is likely to contain an ImageJ ROI, based upon its extension ; or .zip file contents. static SortedMap<Number,PathObject>; convertLabelsToCells(ImageProcessor ipNuclei,; ImageProcessor ipCells,; double xOrigin,; double yOrigin,; double downsample,; ImagePlane plane). Convert integer labeled images into cell objects. static SortedMap<Number,PathObject>; convertLabelsToCells(ImageProcessor ipNuclei,; ImageProcessor ipCells,; Calibration cal,; double downsample,; ImagePlane plane). Convert integer labeled images into cell objects. static PathObject; convertToAnnotation(Roi roi,; double xOrigin,; double yOrigin,; double downsampleFactor,; ImagePlane plane). Create an annotation object for a specific ImageJ Roi, using an ImagePlus to help set properties. static PathObject; convertToAnnotation(Roi roi,; double downsampleFactor,; ImagePlus imp). Create an annotation object for a specific ImageJ Roi. static PathObject; convertToAnnotation(ImagePlus imp,; ImageServer<?> server,; Roi roi,; double downsampleFactor,; ImagePlane plane). Deprecated.; use instead convertToAnnotation(Roi, double, double, double, ImagePlane). static PathObject; convertToDetection(Roi roi,; double xOrigin,; double yOrigin,; double downsampleFactor,; ImagePlane plane). Create a detection object for a specific ImageJ Roi, using an ImagePlus to help set properties. static PathObject; convertToDetection(Roi roi,; double downsampleFactor,; ImagePlus imp). Create a detection object for a specific ImageJ Roi. static PathObject; convertToDetection(ImagePlus imp,; ImageServer<?> server,; Roi roi,; double downsampleFactor,; ImagePlane plane). Deprecated.; use instead convertToDetection(Roi, double, double, double, ImagePlane). static ImageProcessor; convertToFloatProcessor(SimpleImage image). Convert a SimpleImage to a",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:2142,down,downsampleFactor,2142,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,1,['down'],['downsampleFactor']
Availability,"olorMaps.ColorMap. colormap, which acts as an interpolating lookup table with an arbitrary range. Constructor Summary; Constructors. Constructor; Description; ColorMaps();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static ColorMaps.ColorMap; createColorMap(String name,; double[] r,; double[] g,; double[] b). Create a colormap using floating point values for red, green and blue. static ColorMaps.ColorMap; createColorMap(String name,; int[] r,; int[] g,; int[] b). Create a colormap using integer values for red, green and blue. static ColorMaps.ColorMap; createColorMap(String name,; int r,; int g,; int b). Create a colormap using int values for red, green and blue corresponding to the maximum value; ; the minimum color will be black. static ColorMaps.ColorMap; gammaColorMap(ColorMaps.ColorMap map,; double gamma). Apply gamma to a colormap. static Map<String,ColorMaps.ColorMap>; getColorMaps(). Get an unmodifiable map representing all the currently-available colormaps. static int[]; getColors(ColorMaps.ColorMap map,; int nValues,; boolean doInvert). Get an array of packed RGB values for a specific colormap. static ColorMaps.ColorMap; getDefaultColorMap(). Get a default, general-purpose ColorMaps.ColorMap. static boolean; installColorMaps(Path... paths). Install colormaps from the specified paths. static boolean; installColorMaps(ColorMaps.ColorMap... colorMaps). Install colormaps. static void; setDefaultColorMap(ColorMaps.ColorMap colorMap). Set the default ColorMaps.ColorMap. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ColorMaps; public ColorMaps(). Method Details. installColorMaps; public static boolean installColorMaps(Path... paths); Install colormaps from the specified paths. Parameters:; paths - optional paths containing either .tsv files containing colormaps, or directories that contain such",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorMaps.html:1696,avail,available,1696,javadoc/docs/qupath/lib/color/ColorMaps.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorMaps.html,1,['avail'],['available']
Availability,"ols; public GuiTools(). Method Details. createMoreButton; public static Button createMoreButton(ContextMenu menu,; Side side); Create a Button with a standardized icon and tooltip text to indicate 'More', ; which triggers a ContextMenu when clicked. Parameters:; menu - context menu to display on click; side - preferred side at which the context menu should be displayed; Returns:; an initialized button with icon, tooltip and onAction event to trigger the context menu. showParameterDialog; public static boolean showParameterDialog(String title,; ParameterList params); Show a (modal) dialog for a specified ParameterList. Parameters:; title - ; params - ; Returns:; False if the user pressed 'cancel', true otherwise. showNoImageError; public static void showNoImageError(String title); Show an error message that no image is available. This is included to help; standardize the message throughout the software. Parameters:; title - . showNoProjectError; public static void showNoProjectError(String title); Show an error message that no project is available. This is included to help; standardize the message throughout the software. Parameters:; title - . browseDirectory; public static boolean browseDirectory(File file); Open the directory containing a file for browsing. Parameters:; file - ; Returns:. createListSelectionView; public static <T>; org.controlsfx.control.ListSelectionView<T> createListSelectionView(); Create a new ListSelectionView.; This should be used instead of simply calling the constructor whenever the ListSelectionView; is expected to respond well to styles, since ControlsFX's default will stubbornly use black arrows ; to move between source and target lists. Type Parameters:; T - ; Returns:; Since:; v0.4.0; See Also:. ensureDuplicatableGlyph(Glyph). ensureDuplicatableGlyph; public static org.controlsfx.glyphfont.Glyph ensureDuplicatableGlyph(org.controlsfx.glyphfont.Glyph glyph); Ensure that a Glyph is 'duplicatable', without losing its key properties.; This",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html:7721,error,error,7721,javadoc/docs/qupath/lib/gui/tools/GuiTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/GuiTools.html,2,"['avail', 'error']","['available', 'error']"
Availability,"om a PixelClassificationMeasurementManager. Parameters:; objectsToMeasure - the objects to measure.; manager - the manager used to generate measurements; measurementID - identifier that is prepended to measurement names, to make these identifiable later (optional; may be null); Returns:; true if measurements were added, false otherwise. classifyObjectsByCentroid; public static void classifyObjectsByCentroid(ImageServer<BufferedImage> classifierServer,; Collection<PathObject> pathObjects,; boolean preferNucleusROI); Apply classification from a server to a collection of objects. Parameters:; classifierServer - an ImageServer with output type; pathObjects - ; preferNucleusROI - . getClassification; public static int getClassification(ImageServer<BufferedImage> server,; int x,; int y,; int z,; int t); throws IOException; Request the classification for a specific pixel.; ; If the output for the server is ImageServerMetadata.ChannelType.PROBABILITY and only one channel is available, ; the return value will be -1 if the probability is less than 0.5 (or 127.5 if 8-bit). Parameters:; server - ; x - ; y - ; z - ; t - ; Returns:; Throws:; IOException. classifyCellsByCentroid; public static void classifyCellsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier,; boolean preferNucleusROI); Classify cells according to the prediction of the pixel corresponding to the cell centroid using a PixelClassifier. Parameters:; imageData - the ImageData containing the cells; classifier - the classifier; preferNucleusROI - whether to use the nucleus ROI (if available) rather than the cell ROI. classifyDetectionsByCentroid; public static void classifyDetectionsByCentroid(ImageData<BufferedImage> imageData,; PixelClassifier classifier); Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier.; If the detections are cells, the nucleus ROI is used where possible. Parameters:; imageData - the ImageData conta",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html:17775,avail,available,17775,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,1,['avail'],['available']
Availability,"omMeasurement<S, T>>) - Static method in class qupath.lib.experimental.pixels.MeasurementProcessor. Create a processor that can make custom measurements for an image object. createProcessor(MeasurementProcessor.CustomMeasurement<S, T>...) - Static method in class qupath.lib.experimental.pixels.MeasurementProcessor. Create a processor that can make custom measurements for an image object. createProject(File, Class<T>) - Static method in class qupath.lib.projects.Projects. Create a new project using the local file system. createProjectAction(Consumer<Project<BufferedImage>>) - Method in class qupath.lib.gui.QuPathGUI. Create an Action that depends upon a Project. createPropertySheetItem(Property<T>, Class<? extends T>) - Static method in class qupath.lib.gui.panes.PreferencePane. Deprecated.; use PropertyItemBuilder instead. createRandomRectangle(ImageRegion, double, double) - Static method in class qupath.lib.roi.RoiTools. Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. createRandomRectangle(ImageRegion, double, double, Random) - Static method in class qupath.lib.roi.RoiTools. Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. createRandomRectangle(ROI, double, double) - Static method in class qupath.lib.roi.RoiTools. Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI. createRandomRectangle(ROI, double, double, int, boolean, Random) - Static method in class qupath.lib.roi.RoiTools. Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI, ; using a specified maximum number of attempts. createRecentCommandsDialog(QuPathGUI) - Static method in class qupath.lib.gui.tools.CommandFinderTools. Create a dialog showing a filtered list of recently-used commands, for fast selec",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:213103,mask,mask,213103,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['mask'],['mask']
Availability,"omatically ; be started when the first checkpoint is created. Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has previously been started; See Also:. start(String); checkpoint(). start; public Timeit start(String name); throws UnsupportedOperationException; Start the Timeit and create a checkpoint with the specified name.; ; Note that calling this method is not essential, because the Timeit will automatically ; be started when the first checkpoint is created. Parameters:; name - of the checkpoint; if null, a default name will be generated; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has previously been started; See Also:. start(); checkpoint(String). checkpointAndRun; public Timeit checkpointAndRun(Runnable runnable); throws UnsupportedOperationException; Create a checkpoint with the default name and immediately run the provided runnable.; ; Note that no checkpoint is made automatically after completion, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; runnable - the runnable to run; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpointAndRun; public Timeit checkpointAndRun(String name,; Runnable runnable); throws UnsupportedOperationException; Create a checkpoint and immediately run the provided Runnable.; ; Note that no checkpoint is made automatically after completion, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; name - the name of the checkpoint to create; runnable - the runnable to run; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpointAndRun; public Timeit checkpointAndRun(String name,; Runnable runnable,; int nIterations); throws UnsupportedOperationException; Create a checkpoint and immediately run the provided Runnable nIterations times.; T",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:4876,checkpoint,checkpoint,4876,javadoc/docs/qupath/lib/common/Timeit.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html,2,['checkpoint'],['checkpoint']
Availability,"on of QuPath to preserve image type. Parameters:; channels - channels to export (0-based indexing); Returns:; this exporter. channels; public TileExporter channels(String... channelNames); Export only specified channels, identified by name.; ; Note: currently, this always involved conversion to 32-bit.; This behavior may change in a future version of QuPath to preserve image type. Parameters:; channelNames - channels to export; Returns:; this exporter. overlap; public TileExporter overlap(int overlap); Define tile overlap (both x and y) in pixel units at the export resolution.; This is ignored if 'parentObjects' are specified. Parameters:; overlap - ; Returns:; this exporter. overlap; public TileExporter overlap(int overlapX,; int overlapY); Define tile overlap (x and y separately) in pixel units at the export resolution.; This is ignored if 'parentObjects' are specified. Parameters:; overlapX - ; overlapY - ; Returns:; this exporter. downsample; public TileExporter downsample(double downsample); Define resolution as a downsample value. Parameters:; downsample - ; Returns:; this exporter; See Also:. requestedPixelSize(double). requestedPixelSize; public TileExporter requestedPixelSize(double pixelSize); Define resolution as a pixel size in calibrated units. The actual units depend upon those stored within the server. Parameters:; pixelSize - ; Returns:; this exporter. includePartialTiles; public TileExporter includePartialTiles(boolean includePartialTiles); Specify whether incomplete tiles at image boundaries should be included.; ; If true, then when tiling the entire image some tiles may not have the specified tile width or height, ; or alternatively when creating tiles based upon object centroids then some zero-padding may be required ; to ensure the center is preserved along with the tile dimensions.; Default is false. Parameters:; includePartialTiles - ; Returns:; this exporter; See Also:. tileSize(int, int); parentObjects(Predicate); parentObjects(Collection); ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/TileExporter.html:7163,down,downsample,7163,javadoc/docs/qupath/lib/images/writers/TileExporter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/TileExporter.html,4,['down'],['downsample']
Availability,"on(). The version string for this project, which can be used to distinguish new and older project ; (which may contain different information). boolean; isEmpty(). Test if the project contains any images. void; removeAllImages(Collection<ProjectImageEntry<T>> entries,; boolean removeAllData). Remove multiple images from the project, optionally including associated data. void; removeImage(ProjectImageEntry<?> entry,; boolean removeAllData). Remove an image from the project, optionally including associated data. void; setMaskImageNames(boolean maskNames). Request that entries return masked image names, rather than the 'true' image names. boolean; setPathClasses(Collection<? extends PathClass> pathClasses). Update the available PathClasses. void; syncChanges(). Save the project. Method Details. getPathClasses; List<PathClass> getPathClasses(); Get an unmodifiable list representing the PathClasses associated with this project. Returns:. getMaskImageNames; boolean getMaskImageNames(); Query whether 'true' or masked image names are being returned. Returns:; See Also:. setMaskImageNames(boolean). setMaskImageNames; void setMaskImageNames(boolean maskNames); Request that entries return masked image names, rather than the 'true' image names.; ; The purpose of this is to support studies where the user ought not to see the image names during analysis, ; reducing the potential for user bias. Parameters:; maskNames - ; See Also:. getMaskImageNames(). setPathClasses; boolean setPathClasses(Collection<? extends PathClass> pathClasses); Update the available PathClasses. Parameters:; pathClasses - ; Returns:; true if the stored values changed, false otherwise. getURI; URI getURI(); Get a URI that can be used when saving/reloading this project. Returns:. getPreviousURI; URI getPreviousURI(); Sometimes projects move (unfortunately). This returns the previous URI, if known - ; which can be helpful for resolving relative paths to images in the event that ; both project and images have mov",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/projects/Project.html:3617,mask,masked,3617,javadoc/docs/qupath/lib/projects/Project.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/Project.html,1,['mask'],['masked']
Availability,"on(Roi roi,; double xOrigin,; double yOrigin,; double downsampleFactor,; ImagePlane plane); Create a detection object for a specific ImageJ Roi, using an ImagePlus to help set properties. Parameters:; roi - the ImageJ ROI; xOrigin - the x-origin to translate the Roi; should be Calibration.xOrigin if available, or 0 otherwise; yOrigin - the y-origin to translate the Roi; should be Calibration.yOrigin if available, or 0 otherwise; downsampleFactor - the downsample factor used for rescaling (or 1.0 for no rescaling); plane - the specific plane to use for the QuPath ROI; if null, the ImageJ Roi position properties will be used instead, where possible; Returns:; a PathObject or null if no object could be created (e.g. the ImageJ roi is null or incompatible); Since:; v0.4.0; See Also:. convertToPathObject(ImagePlus, ImageServer, Roi, double, Function, ImagePlane); convertToDetection(Roi, double, ImagePlus). convertToAnnotation; public static PathObject convertToAnnotation(Roi roi,; double downsampleFactor,; ImagePlus imp); Create an annotation object for a specific ImageJ Roi. Parameters:; roi - the ImageJ ROI; downsampleFactor - the downsample factor used for rescaling (or 1.0 for no rescaling); imp - the ImagePlus associated with this Roi; it is used to determine the xOrigin, yOrigin and image plane; Returns:; a PathObject or null if no object could be created (e.g. the ImageJ roi is null or incompatible); Since:; v0.4.0; See Also:. convertToPathObject(ImagePlus, ImageServer, Roi, double, Function, ImagePlane); convertToAnnotation(Roi, double, double, double, ImagePlane). convertToDetection; public static PathObject convertToDetection(Roi roi,; double downsampleFactor,; ImagePlus imp); Create a detection object for a specific ImageJ Roi. Parameters:; roi - the ImageJ ROI; downsampleFactor - the downsample factor used for rescaling (or 1.0 for no rescaling); imp - the ImagePlus associated with this Roi; it is used to determine the xOrigin, yOrigin and image plane; Returns",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:15433,down,downsampleFactor,15433,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,1,['down'],['downsampleFactor']
Availability,"on<? extends ROI> rois). Intersect a collection of ROIs with a single parent ROI, returning all results that are valid. static ROI; combineROIs(ROI shape1,; ROI shape2,; RoiTools.CombineOp op). Combine two shape ROIs together. static Collection<? extends ROI>; computeTiledROIs(ROI parentROI,; ImmutableDimension sizePreferred,; ImmutableDimension sizeMax,; boolean fixedSize,; int overlap). Create a collection of tiled ROIs corresponding to a specified parentROI if it is larger than sizeMax, with optional overlaps. static ROI; createRandomRectangle(ImageRegion mask,; double width,; double height). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. static ROI; createRandomRectangle(ImageRegion mask,; double width,; double height,; Random random). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask region. static ROI; createRandomRectangle(ROI mask,; double width,; double height). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI. static ROI; createRandomRectangle(ROI mask,; double width,; double height,; int maxAttempts,; boolean permitErosion,; Random random). Create a randomly-located rectangle ROI with the specified width and height, constrained to fall within the provided mask ROI, ; using a specified maximum number of attempts. static ROI; difference(ROI roi1,; ROI roi2). Compute the difference between two ROIs. static ROI; fillHoles(ROI roi). Fill the holes of an Area ROI, or return the ROI unchanged if it contains no holes. static Area; getArea(ROI roi). Get an Area object representing a ROI. static double; getBoundaryDistance(ROI roi1,; ROI roi2). Get the Euclidean distance between the boundaries of two ROIs. static double; getBoundaryDistance(ROI roi1,; ROI roi2,; double pixelWidth,; double pixelHeight). Get the calibrated Euclidean distan",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html:2153,mask,mask,2153,javadoc/docs/qupath/lib/roi/RoiTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/roi/RoiTools.html,1,['mask'],['mask']
Availability,"on<Class<?>> imports);  ; ScriptParameters.Builder; setErrorWriter(Writer writer). Set the main error writer. ScriptParameters.Builder; setFile(File file);  ; ScriptParameters.Builder; setImageData(ImageData<?> imageData). Set the current image data for the script. ScriptParameters.Builder; setProject(Project<?> project). Set the current project for the script. ScriptParameters.Builder; setScript(String script);  ; ScriptParameters.Builder; setSystemWriters(). Set the output and error writers to use System.out and System.err. ScriptParameters.Builder; setWriter(Writer writer). Set the main output writer. ScriptParameters.Builder; useCompiled(boolean useCompiled). Request that the script is compiled before being evaluated, ; or a previously compiled version is used where available. ScriptParameters.Builder; useLogWriters(). Set the output and error writers to append to the default logger. ScriptParameters.Builder; useLogWriters(org.slf4j.Logger logger). Set the output and error writers to append to the specified logger. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. setDefaultImports; public ScriptParameters.Builder setDefaultImports(Collection<Class<?>> imports). setDefaultStaticImports; public ScriptParameters.Builder setDefaultStaticImports(Collection<Class<?>> imports). setFile; public ScriptParameters.Builder setFile(File file). setScript; public ScriptParameters.Builder setScript(String script). setSystemWriters; public ScriptParameters.Builder setSystemWriters(); Set the output and error writers to use System.out and System.err. Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(org.slf4j.Logger logger); Set the output and error writers to append to the specified logger. Parameters:; logger - ; Returns:. useLogWriters; public ScriptParameters.Builder useLogWriters(); Set the output and error writers to append to the default logger. Re",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html:2550,error,error,2550,javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,1,['error'],['error']
Availability,"on<PathObject,ROI> roiFunction). Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; String channelName,; Function<PathObject,ROI> roiFunction). Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. static double[]; extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; ColorTransforms.ColorTransform transform,; Function<PathObject,ROI> roiFunction). Extract the pixels from the image using the specified transform, and applying any ROI mask. static List<PathObject>; maskObject(ROI parentROI,; PathObject child). Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. static List<PathObject>; maskObjectAndSplit(ROI parentROI,; PathObject child). Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. PixelProcessorUtils; public PixelProcessorUtils(). Method Details. extractMaskedPixels; public static double[] extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; int channel,; Function<PathObject,ROI> roiFunction); throws IOException; Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. Parameters:; params - processor parameters; channel - number of the channel to extract (0-based index); roiFunction - the function used to select a ROI from an object (generally the main ROI or nucleus),; or null to use no ROI at all; Returns:; Throws:; IOException. extractMaskedPixels; public static double[] extractMaskedPixels(Parameters<BufferedImage,BufferedImage> params,; S",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html:1929,mask,mask,1929,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessorUtils.html,2,['mask'],['mask']
Availability,"onding ; stored and classified annotations.; ; Warning! This is intend for temporary use when exporting labelled images. No attempt is made to ; respond to changes within the hierarchy. For consistent results, the hierarchy must remain static for the ; time in which this server is being used. Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; LabeledImageServer.Builder. Helper class for building a LabeledImageServer. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; close();  ; protected BufferedImage; createDefaultRGBImage(int width,; int height). Create the default (blank) RGB image for this server. protected String; createID(). Returns a UUID. protected ImageServerBuilder.ServerBuilder<BufferedImage>; createServerBuilder(). Returns null (does not support ServerBuilders). Map<PathClass,Integer>; getBoundaryLabels(). Get an unmodifiable map of classifications and their corresponding boundary labels, if available. Map<PathObject,Integer>; getInstanceLabels(). Get a mapping between objects and instance labels. Map<PathClass,Integer>; getLabels(). Get an unmodifiable map of classifications and their corresponding labels. List<PathObject>; getObjectsForRegion(ImageRegion region). Get the objects to be painted that fall within a specified region. ImageServerMetadata; getOriginalMetadata(). Get the original metadata read during creation of the server. String; getServerType(). A string describing the type of server, for example the name of the library used (Openslide, Bioformats...). Collection<URI>; getURIs(). Get the URIs for images required for this server. boolean; isEmptyRegion(RegionRequest request). Returns true if there are no objects to be painted within the requested region. protected BufferedImage; readTile(TileRequest tileRequest). Read a single image tile. void; setMetadata(ImageServerMetadata metadata). Throws an exception - metadata shou",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html:2016,avail,available,2016,javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.html,1,['avail'],['available']
Availability,"onding to the detection centroid using a PixelClassifier.; If the detections are cells, the nucleus ROI is used where possible. Parameters:; classifier - the pixel classifier. classifyDetectionsByCentroid; public static void classifyDetectionsByCentroid(String classifierName); Classify detections according to the prediction of the pixel corresponding to the detection centroid using a PixelClassifier.; If the detections are cells, the nucleus ROI is used where possible. Parameters:; classifierName - name of the pixel classifier. checkMinVersion; public static void checkMinVersion(String version); throws UnsupportedOperationException; Check whether the current QuPath version is ≥ the specified version.; This can be added at the beginning of a script to prevent the script running if it is known to be incompatible.; ; It throws an exception if the test is failed so that it can be added in a single line, with the script stopping ; if the criterion is not met.; ; Using this successfully depends upon VERSION being available.; To avoid an exception if it is not, use; ; if (VERSION != null); checkMinVersion(""0.4.0"");; ; . Parameters:; version - last known compatible version (inclusive); Throws:; UnsupportedOperationException - if the version test is not passed, of version information is unavailable; Since:; v0.4.0; See Also:. checkVersionRange(String, String). checkVersionRange; public static void checkVersionRange(String minVersion,; String maxVersion); throws UnsupportedOperationException; Check whether the current QuPath version is ≥ the specified minimum version, and < the specified maximum.; This can be added at the beginning of a script to prevent the script running if it is known to be incompatible.; ; The minimum is inclusive and maximum is exclusive so that the maximum can be given as the first version known to ; introduce a breaking change.; ; Using this successfully depends upon VERSION being available.; To avoid an exception if it is not, use; ; if (VERSION != nul",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:143556,avail,available,143556,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['avail'],['available']
Availability,"ong[]; computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask). Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values. static long[]; computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask,; Rectangle bounds). Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values, optionally restricted to a bounding rectangle. static BufferedImage; createROIMask(int width,; int height,; ROI roi,; double xOrigin,; double yOrigin,; double downsample). Create a grayscale BufferedImage representing a mask for a specified ROI. static BufferedImage; createROIMask(int width,; int height,; ROI roi,; RegionRequest request). Create a grayscale BufferedImage representing a mask for a specified ROI. static BufferedImage; createROIMask(Shape shape,; double downsample). Create a Shape mask using the minimal bounding box for the Shape. static BufferedImage; createROIMask(ROI roi,; double downsample). Create a ROI mask using the minimal bounding box for the ROI. static BufferedImage; createShapeMask(int width,; int height,; Shape shape,; double xOrigin,; double yOrigin,; double downsample). Create a grayscale BufferedImage representing a mask for a specified ROI. static BufferedImage; crop(BufferedImage img,; int x,; int y,; int width,; int height). Create a crop of the image using the specified bounding box. static BufferedImage; duplicate(BufferedImage img). Duplicate a BufferedImage. static BufferedImage; ensureBufferedImage(Image image). Convert an Image to a BufferedImage if necessary, or return the original image unchanged ; if it is already a BufferedImage. static BufferedImage; ensureBufferedImageType(BufferedImage img,; int requestedType). Convert a BufferedImage to have a specified type. static boolean; is8bitColorType(int type). Returns true if a BufferedImage type represents an 8-bit color image. static BufferedImage; resize(BufferedImag",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:2731,down,downsample,2731,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,1,['down'],['downsample']
Availability,"ong[] counts,; WritableRaster rasterMask,; Rectangle bounds). Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values, optionally restricted to a bounding rectangle. static BufferedImage; createROIMask(int width,; int height,; ROI roi,; double xOrigin,; double yOrigin,; double downsample). Create a grayscale BufferedImage representing a mask for a specified ROI. static BufferedImage; createROIMask(int width,; int height,; ROI roi,; RegionRequest request). Create a grayscale BufferedImage representing a mask for a specified ROI. static BufferedImage; createROIMask(Shape shape,; double downsample). Create a Shape mask using the minimal bounding box for the Shape. static BufferedImage; createROIMask(ROI roi,; double downsample). Create a ROI mask using the minimal bounding box for the ROI. static BufferedImage; createShapeMask(int width,; int height,; Shape shape,; double xOrigin,; double yOrigin,; double downsample). Create a grayscale BufferedImage representing a mask for a specified ROI. static BufferedImage; crop(BufferedImage img,; int x,; int y,; int width,; int height). Create a crop of the image using the specified bounding box. static BufferedImage; duplicate(BufferedImage img). Duplicate a BufferedImage. static BufferedImage; ensureBufferedImage(Image image). Convert an Image to a BufferedImage if necessary, or return the original image unchanged ; if it is already a BufferedImage. static BufferedImage; ensureBufferedImageType(BufferedImage img,; int requestedType). Convert a BufferedImage to have a specified type. static boolean; is8bitColorType(int type). Returns true if a BufferedImage type represents an 8-bit color image. static BufferedImage; resize(BufferedImage img,; int finalWidth,; int finalHeight,; boolean smoothInterpolate). Resize the image to have the requested width/height, using area averaging and bilinear interpolation. static void; setValues(DataBuffer buffer,; double val). Set all values in a DataBuffer. st",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:2985,mask,mask,2985,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,1,['mask'],['mask']
Availability,"ons to be selected when they are created; Returns:; the annotations that were created, or an empty list if no image data was available; Since:; v0.4.0. createFullImageAnnotation; public static PathObject createFullImageAnnotation(boolean setSelected); Create an annotation around the full image for the current image, on the default (first) z-slice and timepoint. Parameters:; setSelected - if true, set the annotation to be selected when it is created; Returns:; the annotation that was created, or null if no image data was available; Since:; v0.4.0; See Also:. createFullImageAnnotation(boolean, int, int); createFullImageAnnotation(ImageData, boolean). createFullImageAnnotation; public static PathObject createFullImageAnnotation(boolean setSelected,; int z,; int t); Create an annotation around the full image for the current image, on the specified z-slice and timepoint. Parameters:; setSelected - if true, set the annotation to be selected when it is created; z - z-slice (0-based index); t - timepoint (0-based index); Returns:; the annotation that was created, or null if no image data was available; Since:; v0.4.0; See Also:. createFullImageAnnotation(ImageData, boolean, int, int). createFullImageAnnotation; public static PathObject createFullImageAnnotation(ImageData<?> imageData,; boolean setSelected); Create an annotation around the full image for the specified image, on the default (first) z-slice and timepoint. Parameters:; imageData - the image data for which the annotation should be added; setSelected - if true, set the annotation to be selected when it is created; Returns:; the annotation that was created, or null if no image data was available; Since:; v0.4.0. createFullImageAnnotation; public static PathObject createFullImageAnnotation(ImageData<?> imageData,; boolean setSelected,; int z,; int t); Create an annotation around the full image for the specified image, on the specified z-slice and timepoint. Parameters:; imageData - the image data for which the annot",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:72362,avail,available,72362,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['avail'],['available']
Availability,"ons(Path path,; RegionRequest request); throws IOException; Convert a labeled image to annotation objects. Parameters:; path - path to labeled image file (e.g. PNGs); request - a RegionRequest representing the region or the full image, used to reposition and rescale ROIs.; If not provided, this will be extracted from the filename, if possible.; Returns:; a list of objects generated from the labels; Throws:; IOException - if there is an error reading the images. labelsToObjects; public static List<PathObject> labelsToObjects(Path path,; RegionRequest request,; BiFunction<ROI,Number,PathObject> creator); throws IOException; Convert a labeled image to objects. Parameters:; path - path to labeled image file (e.g. PNGs); request - a RegionRequest representing the region or the full image, used to reposition and rescale ROIs.; If not provided, this will be extracted from the filename, if possible.; creator - function used to convert a ROI and numeric label to an object; Returns:; a list of objects generated from the labels; Throws:; IOException - if there is an error reading the images. parseRegion; public static RegionRequest parseRegion(String name,; int width,; int height); Attempt to parse a RegionRequest corresponding to an image region from the file name.; ; This is used whenever a tile has been extracted from a larger image for further processing, ; and then there is a need to get the information back to the full-resolution image later. Parameters:; name - file name; width - labeled image width, used to calculate the downsample if required; use -1 to ignore this; height - labeled image height, used to calculate the downsample if required; use -1 to ignore this; Returns:; a RegionRequest that may be used to transform ROIs. createObjects; public static List<PathObject> createObjects(Raster raster,; int band,; RegionRequest region,; int minLabel,; int maxLabel,; BiFunction<ROI,Number,PathObject> creator); Create objects from one band of a raster containing integer labe",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html:9756,error,error,9756,javadoc/docs/qupath/lib/analysis/images/ContourTracing.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html,1,['error'],['error']
Availability,"ons, add measurements, or add child objects. Parameters:; params - the processing parameters; output - the generated output. andThen; default OutputHandler<S,T,U> andThen(OutputHandler<S,T,U> after); Append a second output handler to this one.; Both are called, and return true if either returns true. Parameters:; after - ; Returns:. orElse; default OutputHandler<S,T,U> orElse(OutputHandler<S,T,U> after); Append a second output handler to this one, but only call it if this one returns false.; The return value of the handler is then true if either returns true. Parameters:; after - ; Returns:. createUnmaskedObjectOutputHandler; static <S,; T,; U> OutputHandler<S,T,U> createUnmaskedObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter); Create an output handler that can be used to add objects to the parent object.; This requires an OutputHandler.OutputToObjectConverter to convert the output to a list of objects.; ; This method does not apply any masking to the parent ROI, but assumed this has already been applied; elsewhere. Consequently, it can result in objects being created that extend beyond the ROI.; To avoid this, use createMaskAndSplitObjectOutputHandler(OutputToObjectConverter) or; #createMaskedObjectOutputHandler(OutputToObjectConverter)}. Type Parameters:; S - the image type; T - the mask type; U - the output type; Parameters:; converter - ; Returns:. createObjectOutputHandler; static <S,; T,; U> OutputHandler<S,T,U> createObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter); Create an output handler that can be used to add objects to the parent object, applying the ROI mask.; This can result in objects with discontinuous ROIs.; This requires an OutputHandler.OutputToObjectConverter to convert the output to a list of objects. Type Parameters:; S - the image type; T - the mask type; U - the output type; Parameters:; converter - ; Returns:; See Also:. createMaskAndSplitObjectOutputHandler(OutputToObjectConverter). crea",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html:4185,mask,masking,4185,javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html,1,['mask'],['masking']
Availability,"onstrained watershed transform, preventing regions from expanding to pixels below a specified minimum threshold. doWatershed(SimpleImage, SimpleModifiableImage, boolean) - Static method in class qupath.lib.analysis.algorithms.Watershed. Apply a 2D watershed transform. doWatershed(SimpleImage, SimpleModifiableImage, double, boolean) - Static method in class qupath.lib.analysis.algorithms.Watershed. Apply a 2D watershed transform, constraining region growing using an intensity threshold. DOWNLOAD - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; downsample(double) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set the downsample factor to use with requesting image regions. downsample(double) - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Specify downsample factor (defined in terms of the full resolution image space). downsample(double) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Specify downsample factor. downsample(double) - Method in class qupath.lib.images.writers.TileExporter. Define resolution as a downsample value. downsamples(double...) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify downsamples; this is especially important for 'thick' objects (annotations, TMA cores); because the downsamples define the resolutions at which these will be rendered. downsamples(double...) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify downsample factors to use in the final pyramid. DragDropImportListener - Class in qupath.lib.gui.viewer. Drag and drop support for main QuPath application, which can support a range of different object types (Files, URLs, Strings,..). DragDropImportListener(QuPathGUI) - Constructor for class qupath.lib.gui.viewer.DragDropImportListener. Constructor. DragDropImportListener.DropHandler<T> - Interface in qupath.lib.gui.viewer. Interface to define a new drop handler. DrawingPreferences(",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:271469,down,downsample,271469,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['down'],['downsample']
Availability,"ontsProperty(). Get a list of available fonts. static ObservableList<QuPathStyleManager.StyleOption>; availableStylesProperty(). Get the current available styles as an observable list. static ObjectProperty<QuPathStyleManager.Fonts>; fontProperty(). Get the current selected font. static boolean; installStyles(Collection<File> list). Handle installing CSS files (which can be used to style QuPath). static boolean; isDefaultStyle(). Check if the default JavaFX style is used. static void; refresh(). Refresh the current style. static ObjectProperty<QuPathStyleManager.StyleOption>; selectedStyleProperty(). Get the current selected style. static void; updateAvailableStyles(). Request that the list of available styles is updated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. availableStyles; public static ObservableList<QuPathStyleManager.StyleOption> availableStylesProperty; Get the current available styles as an observable list.; The list is unmodifiable, since any changes should be made via adding/removing files in UserDirectoryManager.getCssStylesPath(). See Also:. availableStylesProperty(). selectedStyle; public static ObjectProperty<QuPathStyleManager.StyleOption> selectedStyleProperty; Get the current selected style. See Also:. selectedStyleProperty(). availableFonts; public static ObservableList<QuPathStyleManager.Fonts> availableFontsProperty; Get a list of available fonts.; The list is unmodifiable, since this is primarily used to overcome issues with the default font on macOS ; by changing the font family. More fine-grained changes can be made via css. See Also:. availableFontsProperty(). font; public static ObjectProperty<QuPathStyleManager.Fonts> fontProperty; Get the current selected font. See Also:. fontProperty(). Constructor Details. QuPathStyleManager; public QuPathStyleManager(). Method Details. updateAvailableStyles; public static void updateAvai",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html:2609,avail,availableStylesProperty,2609,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,2,['avail'],"['available', 'availableStylesProperty']"
Availability,"oo fuzzy a way to refer to a specific rectangle of pixels from a specific pyramid level. ; Rounding errors can easily occur, and different image readers might respond differently to the same request.; ; Consequently, TileRequests provide a means to reproducibly define coordinates at pyramid levels and not only ; the full resolution image space. They wrap a RegionRequest, because this is still used for caching purposes. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; static TileRequest; createInstance(String path,; int level,; double downsample,; ImageRegion tileRegion). Create a new tile request for a specified region, downsample and resolution level. static TileRequest; createInstance(ImageServer<?> server,; int level,; ImageRegion tileRegion). Create a new tile request for a specified region and resolution level of an image. boolean; equals(Object obj);  ; double; getDownsample(). Get the downsample value for this tile. int; getImageHeight(). Get the height of the bounding box for this tile in the full resolution image. ImagePlane; getImagePlane(). Get the ImagePlane for this request. int; getImageWidth(). Get the width of the bounding box for this tile in the full resolution image. int; getImageX(). Get the x-coordinate of the bounding box for this tile in the full resolution image. int; getImageY(). Get the y-coordinate of the bounding box for this tile in the full resolution image. int; getLevel(). Get the resolution level. ImagePlane; getPlane(). Deprecated.; v0.4.0 use getImagePlane() instead (changed for better consistency with other classes). RegionRequest; getRegionRequest(). Get the RegionRequest that this tile represents. int; getT(). Get the time point index for this request. int; getTileHeight(). Get the height of the bounding box for this tile at the tile resolution. int; getTileWidth(). Get the width of the bounding box for this tile at the tile resolution. int; getT",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TileRequest.html:1816,down,downsample,1816,javadoc/docs/qupath/lib/images/servers/TileRequest.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/TileRequest.html,1,['down'],['downsample']
Availability,"oo. Returns:. tileCachePercentageProperty; public static DoubleProperty tileCachePercentageProperty(); Requested percentage of available memory to use for tile caching. Returns:. useCalibratedLocationStringProperty; public static BooleanProperty useCalibratedLocationStringProperty(); Show the cursor location on a viewer in calibrated units, rather than pixels. Returns:. useSelectedColorProperty; public static BooleanProperty useSelectedColorProperty(); Use a specified color for highlighting selected objects in the viewer. Returns:. showPointHullsProperty; public static BooleanProperty showPointHullsProperty(); Show the convex hull for point annotations within the viewer. Returns:. multipointToolProperty; public static BooleanProperty multipointToolProperty(); Create multiple points within the same annotation when using the counting tool.; The alternative is to create a new annotation for each new point. Returns:. tmaExportDownsampleProperty; public static DoubleProperty tmaExportDownsampleProperty(); Default downsample factor to use when exporting TMA cores. Returns:. viewerGammaProperty; public static DoubleProperty viewerGammaProperty(); Requested gamma value applied to the image in each viewer (for display only). Returns:. viewerBackgroundColorProperty; public static IntegerProperty viewerBackgroundColorProperty(); Color to paint behind any image. Returns:. colorDefaultObjectsProperty; public static IntegerProperty colorDefaultObjectsProperty(); The default color used to display objects of any type, where a default has not otherwise been specified. Returns:. colorSelectedObjectProperty; public static IntegerProperty colorSelectedObjectProperty(); The default color used to display selected objects. Returns:. colorTMAProperty; public static IntegerProperty colorTMAProperty(); The default color used to display TMA core objects. Returns:. colorTMAMissingProperty; public static IntegerProperty colorTMAMissingProperty(); The default color used to display missing TMA co",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:57277,down,downsample,57277,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['down'],['downsample']
Availability,"ooleanProperty; expandToWindowProperty(). Get the property indicating whether the image should grow to fill the window (while maintaining its; aspect ratio). BufferedImage; getBufferedImage(). Get the buffered image. boolean; getExpandToWindow(). Query whether the image is allowed to expand beyond its preferred width and height to fill the window. Image; getImage(). Get the JavaFX image. String; getName(). Get the name of the image. String; getPlaceholderText(). Get the placeholder text to show if no image is available. double; getSaturationPercent(). Get the percentage of pixels to use when applying auto contrast settings to a non-8-bit image. Stage; getStage(). Get the stage used to display the image. ReadOnlyObjectProperty<String>; imageNameProperty(). Get a read-only property indicating the name of the image. ReadOnlyObjectProperty<Image>; imageProperty(). Get a read-only property representing the JavaFX image. StringProperty; placeholderTextProperty(). Get the placeholder text to show if no image is available. void; resetImage(). Remove the image. DoubleProperty; saturationPercentProperty(). Get the percentage of any non-8-bit image that should be saturated when applying auto contrast settings. void; setExpandToWindow(boolean limit). Control whether the image should be allowed to expand beyond its preferred width and height to fill the window. void; setPlaceholderText(String placeholder). Set the placeholder text to show if no image is available. void; setSaturationPercent(double percent). Set the percentage of pixels to use when applying auto contrast settings to a non-8-bit image. void; updateImage(String name,; BufferedImage img). Update the image using a buffered image. void; updateImage(String name,; Image image). Update the image using a JavaFX image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. placeholderText; public StringProperty placeholderT",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html:2977,avail,available,2977,javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html,1,['avail'],['available']
Availability,"oolean removeAllData). Remove an image from the project, optionally including associated data. void; setMaskImageNames(boolean maskNames). Request that entries return masked image names, rather than the 'true' image names. boolean; setPathClasses(Collection<? extends PathClass> pathClasses). Update the available PathClasses. void; syncChanges(). Save the project. Method Details. getPathClasses; List<PathClass> getPathClasses(); Get an unmodifiable list representing the PathClasses associated with this project. Returns:. getMaskImageNames; boolean getMaskImageNames(); Query whether 'true' or masked image names are being returned. Returns:; See Also:. setMaskImageNames(boolean). setMaskImageNames; void setMaskImageNames(boolean maskNames); Request that entries return masked image names, rather than the 'true' image names.; ; The purpose of this is to support studies where the user ought not to see the image names during analysis, ; reducing the potential for user bias. Parameters:; maskNames - ; See Also:. getMaskImageNames(). setPathClasses; boolean setPathClasses(Collection<? extends PathClass> pathClasses); Update the available PathClasses. Parameters:; pathClasses - ; Returns:; true if the stored values changed, false otherwise. getURI; URI getURI(); Get a URI that can be used when saving/reloading this project. Returns:. getPreviousURI; URI getPreviousURI(); Sometimes projects move (unfortunately). This returns the previous URI, if known - ; which can be helpful for resolving relative paths to images in the event that ; both project and images have moved together. Returns:. getNameFromURI; static String getNameFromURI(URI uri); Extract a usable project name from a URI. Parameters:; uri - ; Returns:. getVersion; String getVersion(); The version string for this project, which can be used to distinguish new and older project ; (which may contain different information).; ; This may be null if the version information is not stored. Returns:. getPath; Path getPath(); G",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/projects/Project.html:4014,mask,maskNames,4014,javadoc/docs/qupath/lib/projects/Project.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/projects/Project.html,1,['mask'],['maskNames']
Availability,"opencv.tools.OpenCVTools. Extract pixels as a double array. extractFeatures(ImageData<T>, Collection<? extends PathObject>, FloatBuffer) - Method in interface qupath.opencv.ml.objects.features.FeatureExtractor. Extract features from a collection of objects, adding the corresponding values to a FloatBuffer. extractFloats(Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Extract pixels as a float array. extractHyperstack(ImageServer<BufferedImage>, RegionRequest) - Static method in class qupath.imagej.tools.IJTools. Extract a full ImageJ hyperstack for a specific region, using all z-slices and time points. extractHyperstack(ImageServer<BufferedImage>, RegionRequest, int, int, int, int) - Static method in class qupath.imagej.tools.IJTools. Extract a full ImageJ hyperstack for a specific region, for specified ranges of z-slices and time points. extractMaskedDoubles(Mat, Mat, int) - Static method in class qupath.opencv.tools.OpenCVTools. Extract pixels from an image using a mask, limited to the specified channel index. extractMaskedFloats(Mat, Mat, int) - Static method in class qupath.opencv.tools.OpenCVTools. Extract pixels from an image using a mask, limited to the specified channel index. extractMaskedPixels(Parameters<BufferedImage, BufferedImage>, int, Function<PathObject, ROI>) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. extractMaskedPixels(Parameters<BufferedImage, BufferedImage>, String, Function<PathObject, ROI>) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. extractMaskedPixels(Parameters<BufferedImage, BufferedImage>, ColorTransforms.ColorTransform, Function<PathObject, ROI>) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Extract the pixels from the",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:295333,mask,mask,295333,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['mask'],['mask']
Availability,"operty for this viewer. PathTool; getActiveTool(). Get the active PathTool for this viewer. Collection<PathObject>; getAllSelectedObjects(). Get all currently-selected objects from the hierarchy. List<BufferedImage>; getAllThumbnails(). Get thumbnails for all z-slices & time points. Color; getBorderColor(). Get the border color set for this viewer. double; getCenterPixelX(). Get the x-coordinate of the pixel currently centered in the viewer, in the full size image space. double; getCenterPixelY(). Get the y-coordinate of the pixel currently centered in the viewer, in the full size image space. ROI; getCurrentROI(). Get the current ROI, i.e. Cursor; getCursor(). Get the current cursor for this viewer. ObservableList<PathOverlay>; getCustomOverlayLayers(). Get direct access to the custom overlay list. PathOverlay; getCustomPixelLayerOverlay(). Get the custom pixel layer overlay, or null if it has not be set. double; getDefaultZoomFactor(). The amount by which the downsample factor is scaled for one increment of zoomIn() or ; zoomOut(). protected Shape; getDisplayedClipShape(Shape clip). Transform a clip shape into image coordinates for this viewer. Shape; getDisplayedRegionShape(). Get a shape corresponding to the region of the image currently visible in this viewer. double; getDownsampleFactor(). Get the current downsample factor. protected String; getFullLocationString(boolean useCalibratedUnits). Get a string to summarize the pixel found below the most recent known mouse location, ; or """" if the mouse is outside this viewer. double; getFullMagnification(). Get the full magnification for the image. double; getGamma(). Get the gamma value used for this viewer. LookupOp; getGammaOp(). Get a LookupOp that can perform any requested gamma correction in this viewer. PathObjectHierarchy; getHierarchy(). Get the object hierarchy for the current image data, or null if no image data is available. ImageData<BufferedImage>; getImageData(). Get the image data currently being dis",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:4080,down,downsample,4080,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,1,['down'],['downsample']
Availability,"optionally displayed on viewers. static void; promptToSimplifySelectedAnnotations(ImageData<?> imageData,; double altitudeThreshold). Show a prompt to selected annotations in a hierarchy. static void; refreshObjectIDs(ImageData<?> imageData,; boolean duplicatesOnly). Refresh object IDs to ensure uniqueness. static void; reloadImageData(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Reload the specified image data from a previously saved version,if available. static File; requestUserDirectory(boolean promptIfMissing). Request the current user directory, optionally prompting the user to request a directory if none is available. static void; resetClassifications(ImageData<?> imageData,; Class<? extends PathObject> cls). Select objects that are instances of a specified class, logging an appropriate method in the workflow. static void; resetSelection(ImageData<?> imageData). Reset the selection for an image. static boolean; resetTMAMetadata(ImageData<?> imageData). Reset TMA metadata, if available. static void; runGeoJsonObjectExport(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a dialog to export object(s) to a GeoJSON file. static void; runObjectImport(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a dialog to import object(s) from a file. static boolean; saveSnapshot(QuPathGUI qupath,; GuiTools.SnapshotType type). Save an image snapshot, prompting the user to select the output file. static void; selectAllObjects(ImageData<?> imageData). Select all objects (excluding the root object) in the imageData. static void; selectObjectsByClass(ImageData<?> imageData,; Class<? extends PathObject> cls). Select objects that are instances of a specified class, logging an appropriate method in the workflow. static boolean; selectObjectsByClassification(ImageData<?> imageData,; PathClass... pathClasses). Select objects by classification, logging the step (if performed) in the history workflow. static void; selectObjectsOnCurrentPlane(QuPathViewer",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:7386,avail,available,7386,javadoc/docs/qupath/lib/gui/commands/Commands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html,1,['avail'],['available']
Availability,"or 16-bit unsigned integer values. static long[]; computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask,; Rectangle bounds). Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values, optionally restricted to a bounding rectangle. static BufferedImage; createROIMask(int width,; int height,; ROI roi,; double xOrigin,; double yOrigin,; double downsample). Create a grayscale BufferedImage representing a mask for a specified ROI. static BufferedImage; createROIMask(int width,; int height,; ROI roi,; RegionRequest request). Create a grayscale BufferedImage representing a mask for a specified ROI. static BufferedImage; createROIMask(Shape shape,; double downsample). Create a Shape mask using the minimal bounding box for the Shape. static BufferedImage; createROIMask(ROI roi,; double downsample). Create a ROI mask using the minimal bounding box for the ROI. static BufferedImage; createShapeMask(int width,; int height,; Shape shape,; double xOrigin,; double yOrigin,; double downsample). Create a grayscale BufferedImage representing a mask for a specified ROI. static BufferedImage; crop(BufferedImage img,; int x,; int y,; int width,; int height). Create a crop of the image using the specified bounding box. static BufferedImage; duplicate(BufferedImage img). Duplicate a BufferedImage. static BufferedImage; ensureBufferedImage(Image image). Convert an Image to a BufferedImage if necessary, or return the original image unchanged ; if it is already a BufferedImage. static BufferedImage; ensureBufferedImageType(BufferedImage img,; int requestedType). Convert a BufferedImage to have a specified type. static boolean; is8bitColorType(int type). Returns true if a BufferedImage type represents an 8-bit color image. static BufferedImage; resize(BufferedImage img,; int finalWidth,; int finalHeight,; boolean smoothInterpolate). Resize the image to have the requested width/height, using area averaging and bilinear int",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:2924,down,downsample,2924,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,1,['down'],['downsample']
Availability,"or ; annotations with the given classification. addLabel(PathClass, int, Integer) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Add a single label by PathClass, where the label represents the integer label used for ; annotations with the given classification. addLabels(Map<PathClass, Integer>) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Add multiple labels by PathClass, where the key represents a PathClass and the value ; represents the integer label that should be used for annotations of the given class. addLabelsByName(Map<String, Integer>) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Add multiple labels by classname, where the key represents a classname and the value ; represents the integer label that should be used for annotations of the given class. addLevel(double, int, int) - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel.Builder. Add a new level by providing a downsample value, width and height. addLevel(int, int) - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel.Builder. Add a new level based on level dimensions, estimating the corresponding downsample value as required. addLevel(ImageServerMetadata.ImageResolutionLevel) - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel.Builder. Add a new level directly. addLevelByDownsample(double) - Method in class qupath.lib.images.servers.ImageServerMetadata.ImageResolutionLevel.Builder. Add a new level, calculating dimensions using a downsample factor applied to the full-resolution image. addListener(PathObjectHierarchyListener) - Method in class qupath.lib.objects.hierarchy.PathObjectHierarchy. Add a hierarchy change listener. addMeasurement(String, double) - Method in interface qupath.lib.measurements.MeasurementList. Deprecated.; v0.4.0 use MeasurementList.put(String, double) instead. addMeasurements(Collection<? extends PathObject>",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:19724,down,downsample,19724,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['down'],['downsample']
Availability,"or Summary; Constructors. Constructor; Description; Commands();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static void; closeProject(QuPathGUI qupath). Close the current project open in the QuPathGUI. static boolean; combineSelectedAnnotations(ImageData<?> imageData,; RoiTools.CombineOp op). Combine the selected annotations for the specified hierarchy. static void; convertDetectionsToPoints(ImageData<?> imageData,; boolean preferNucleus). Convert detection objects to point annotations based upon their ROI centroids. static void; copyAnnotationsToClipboard(ImageData<BufferedImage> imageData). Attempt to annotation objects to the system clipboard, if available. static void; copySelectedAnnotationsToCurrentPlane(QuPathViewer viewer). Copy the selected objects and add them to the plane currently active in the viewer. static void; copySelectedObjectsToClipboard(ImageData<BufferedImage> imageData). Attempt to copy selected objects to the system clipboard, if available. static void; createFullImageAnnotation(QuPathViewer viewer). Create a full image annotation for the image in the specified viewer. static Stage; createLicensesWindow(QuPathGUI qupath). Create a window summarizing license information for QuPath and its third party dependencies. static Stage; createMeasurementMapDialog(QuPathGUI qupath). Create a dialog for displaying measurement maps. static Stage; createMemoryMonitorDialog(QuPathGUI qupath). Create a dialog to monitor memory usage. static Stage; createObjectDescriptionsDialog(QuPathGUI qupath). Create a stage to display object descriptions. static Stage; createPreferencesDialog(QuPathGUI qupath). Show a dialog to adjust QuPath preferences. static void; createRotateImageDialog(QuPathGUI qupath). Create a dialog for rotating the image in the current viewer (for display only). static Stage; createShowSystemInfoDialog(QuPathGUI qupath). Create a window summarizing key system information relevant for QuP",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:1611,avail,available,1611,javadoc/docs/qupath/lib/gui/commands/Commands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html,1,['avail'],['available']
Availability,"or classified areas. LabeledImageServer.Builder; setBoundaryLabel(String pathClassName,; int label,; Integer color). Set the classification and label to use for boundaries for classified areas. LabeledImageServer.Builder; setBoundaryLabel(PathClass pathClass,; int label). Set the classification and label to use for boundaries for classified areas. LabeledImageServer.Builder; setBoundaryLabel(PathClass pathClass,; int label,; Integer color). Set the classification and label to use for boundaries for classified areas. LabeledImageServer.Builder; shuffleInstanceLabels(boolean doShuffle). Optionally request that instance labels are shuffled. LabeledImageServer.Builder; tileSize(int tileSize). Set tile width and height (square tiles). LabeledImageServer.Builder; tileSize(int tileWidth,; int tileHeight). Set tile width and height. LabeledImageServer.Builder; useAnnotations(). Use annotations for labels. LabeledImageServer.Builder; useCellNuclei(). Use cells rather than annotations for labels, requesting the nucleus ROI where available. LabeledImageServer.Builder; useCells(). Use cells rather than annotations for labels. LabeledImageServer.Builder; useDetections(). Use detections rather than annotations for labels. LabeledImageServer.Builder; useFilter(Predicate<PathObject> filter). Use a custom method of selecting objects for inclusion. LabeledImageServer.Builder; useInstanceLabels(). Request that unique labels are used for all objects, rather than classifications. LabeledImageServer.Builder; useInstanceLabels(boolean instanceLabels). Optionally request that unique labels are used for all objects, rather than classifications. LabeledImageServer.Builder; useUniqueLabels(). Deprecated.; in favor of useInstanceLabels(). Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(ImageData<BufferedImage> imageData); Create a Builder for a LabeledImageSer",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.Builder.html:5115,avail,available,5115,javadoc/docs/qupath/lib/images/servers/LabeledImageServer.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/LabeledImageServer.Builder.html,1,['avail'],['available']
Availability,"or individual stages:; ; var timeit = new Timeit();; timeit.checkpoint(""First checkpoint"");; // Do something; timeit.checkpoint(""Second checkpoint"");; // Do something else; timeit.stop();; System.out.println(timeit);; ; . Finally, a Timeit can be used to repeatedly run the same code multiple times, and print the timings at the end.; ; ; var timeit = new Timeit(); .microseconds(); .checkpointAndRun(""Greeting"", () -> System.out.println(""Hello!""), 10); .summarizeCheckpoints(); .stop();; System.out.println(timeit);; ; . Since:; v0.4.0; Author:; Pete Bankhead. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static class ; Timeit.Checkpoint. Class representing a named checkpoint with a timestamp in nanoseconds. Constructor Summary; Constructors. Constructor; Description; Timeit();  . Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; Timeit; autoUnits();  ; Timeit; checkpoint(). Create a new checkpoint with a default name. Timeit; checkpoint(String name). Create a new checkpoint with the specified name. Timeit; checkpointAndRun(Runnable runnable). Create a checkpoint with the default name and immediately run the provided runnable. Timeit; checkpointAndRun(String name,; Runnable runnable). Create a checkpoint and immediately run the provided Runnable. Timeit; checkpointAndRun(String name,; Runnable runnable,; int nIterations). Create a checkpoint and immediately run the provided Runnable nIterations times. List<Timeit.Checkpoint>; getCheckpoints(). Get an list of all the checkpoints. int; getMaxDecimalPlaces(). Get the maximum number of decimal places when reporting timings. static void; main(String[] args);  ; Timeit; maxDecimalPlaces(int maxDP). Set the maximum number of decimal places when reporting timings ; using seconds or minutes. Timeit; microseconds(). Report timings in microseconds. Timeit; milliseconds(). Report timings in milliseconds. Timeit; minutes(). Report timings i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:1903,checkpoint,checkpoint,1903,javadoc/docs/qupath/lib/common/Timeit.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html,1,['checkpoint'],['checkpoint']
Availability,"or this viewer. Returns:. setGamma; public void setGamma(double gamma); Set the gamma value for this viewer.; Note that if the property is bound (as it is by default, the method does not; change the gamma value but rather logs a warning that viewer.gammaProperty().unbind(); should be called first. Parameters:; gamma - . gammaProperty; public DoubleProperty gammaProperty(); Get the gamma property for this viewer.; By default, this is bound to PathPrefs.viewerGammaProperty(). Returns:; See Also:. getGamma(); setGamma(double). getROIEditor; public RoiEditor getROIEditor(); Get the RoiEditor used by this viewer. Returns:. getImageDisplay; public ImageDisplay getImageDisplay(); Get the ImageDisplay object used to determine how the image is converted to RGB for display. Returns:. componentContains; protected boolean componentContains(double x,; double y). setDownsampleFactor; public void setDownsampleFactor(double downsampleFactor); Set the downsample factor for this viewer. Parameters:; downsampleFactor - . getThumbnail; public BufferedImage getThumbnail(); Get a thumbnail representing the image as displayed by this viewer. Returns:. getAllThumbnails; public List<BufferedImage> getAllThumbnails(); Get thumbnails for all z-slices & time points. Returns:. getRGBThumbnail; public BufferedImage getRGBThumbnail(); Get a thumbnail representing the image as displayed by this viewer.; ; Note: This will be a color (aRGB) image, with any color transforms applied -; therefore should not be used to extract 'original' pixel values. Returns:. setDownsampleFactor; public void setDownsampleFactor(double downsampleFactor,; double cx,; double cy); Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards.; The purpose is to make it possible to zoom in/out while keeping the cursor focussed on a particular location.; ; The specified downsample factor will automatically be clipped to the range getMinDownsample to getMaxDownsample. Para",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:28580,down,downsampleFactor,28580,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,1,['down'],['downsampleFactor']
Availability,"or; #createMaskedObjectOutputHandler(OutputToObjectConverter)}. Type Parameters:; S - the image type; T - the mask type; U - the output type; Parameters:; converter - ; Returns:. createObjectOutputHandler; static <S,; T,; U> OutputHandler<S,T,U> createObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter); Create an output handler that can be used to add objects to the parent object, applying the ROI mask.; This can result in objects with discontinuous ROIs.; This requires an OutputHandler.OutputToObjectConverter to convert the output to a list of objects. Type Parameters:; S - the image type; T - the mask type; U - the output type; Parameters:; converter - ; Returns:; See Also:. createMaskAndSplitObjectOutputHandler(OutputToObjectConverter). createMaskAndSplitObjectOutputHandler; static <S,; T,; U> OutputHandler<S,T,U> createMaskAndSplitObjectOutputHandler(OutputHandler.OutputToObjectConverter<S,T,U> converter); Create an output handler that can be used to add objects to the parent object, applying the ROI mask and; splitting objects with discontinuous ROIs.; This requires an OutputHandler.OutputToObjectConverter to convert the output to a list of objects. Type Parameters:; S - the image type; T - the mask type; U - the output type; Parameters:; converter - ; Returns:; See Also:. createObjectOutputHandler(OutputToObjectConverter). consumeOutput; static <S,; T,; U> OutputHandler<S,T,U> consumeOutput(); Create a basic do-nothing output handler that consumes the output with no changes.; This returns true regardless of input, without doing anything further. Type Parameters:; S - ; T - ; U - ; Returns:. handleOutputMeasurements; static boolean handleOutputMeasurements(Parameters<?,?> params,; Map<String,? extends Number> output); Handle the output of a pixel processor by adding measurements to the path object. Parameters:; params - ; output - . handleOutputClassification; static boolean handleOutputClassification(Parameters<?,?> params,; PathClass ou",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html:5474,mask,mask,5474,javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/OutputHandler.html,1,['mask'],['mask']
Availability,"orFill). Paint the handles onto a Graphics object, if we have a suitable (non-point) ROI. static void; paintHandles(RoiEditor roiEditor,; Graphics2D g2d,; double minHandleSize,; double maxHandleSize,; Color colorStroke,; Color colorFill). Paint the handles onto a Graphics object, if we have a suitable (non-point) ROI. static boolean; paintObject(PathObject pathObject,; Graphics2D g,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample). Paint an object (or, more precisely, its ROI). static void; paintShape(Shape shape,; Graphics2D g2d,; Color colorStroke,; Stroke stroke,; Color colorFill). Paint the specified shape with specified stroke and fill colors. static void; paintSpecifiedObjects(Graphics2D g2d,; Collection<? extends PathObject> pathObjects,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample). Paint the specified objects. static void; paintTMAGrid(Graphics2D g2d,; TMAGrid tmaGrid,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample). Paint the specified tissue microarray grid. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. paintSpecifiedObjects; public static void paintSpecifiedObjects(Graphics2D g2d,; Collection<? extends PathObject> pathObjects,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample); Paint the specified objects. Parameters:; g2d - the graphics object on which the objects should be painted; pathObjects - the objects to paint; overlayOptions - the overlay options defining how objects should be painted; selectionModel - the selection model used to determine the selection status of each object; downsample - the downsample factor; this should already be applied to the graphics object, but is needed to determine some line thicknesses. paintTMAGrid; public static void paintTMAGrid(G",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html:2189,down,downsample,2189,javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html,1,['down'],['downsample']
Availability,"ore should not be used to extract 'original' pixel values. Returns:. setDownsampleFactor; public void setDownsampleFactor(double downsampleFactor,; double cx,; double cy); Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards.; The purpose is to make it possible to zoom in/out while keeping the cursor focussed on a particular location.; ; The specified downsample factor will automatically be clipped to the range getMinDownsample to getMaxDownsample. Parameters:; downsampleFactor - ; cx - ; cy - . setDownsampleFactor; public void setDownsampleFactor(double downsampleFactor,; double cx,; double cy,; boolean clipToMinMax); Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards.; The purpose is to make it possible to zoom in/out while keeping the cursor focused on a particular location. Parameters:; downsampleFactor - ; cx - ; cy - ; clipToMinMax - If true, the specified downsample factor will be clipped ; to the range getMinDownsample to getMaxDownsample. getZoomToFitDownsampleFactor; protected double getZoomToFitDownsampleFactor(). getServerWidth; public int getServerWidth(); Get the width in pixels of the full resolution of the current image, or 0 if no image is currently open. Returns:. getServerHeight; public int getServerHeight(); Get the height in pixels of the full resolution of the current image, or 0 if no image is currently open. Returns:. getServerBounds; public ImageRegion getServerBounds(); Get an ImageRegion representing the full width and height of the current image.; The ImagePlane is set according to the z and t position of the viewer. Returns:. getDownsampleFactor; public double getDownsampleFactor(); Get the current downsample factor. Returns:. componentPointToImagePoint; public Point2D componentPointToImagePoint(Point2D point,; Point2D pointDest,; boolean constrainToBounds); Convert a coordinate from the viewer into the correspondi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:29992,down,downsampleFactor,29992,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,2,['down'],"['downsample', 'downsampleFactor']"
Availability,"ors. Get the TypeAdapterFactory default used for FeatureExtractor objects. getTypeAdapterFactory() - Static method in class qupath.opencv.ml.pixel.PixelClassifiers. Get the TypeAdapterFactory default used for PixelClassifier objects. getTypeAdaptor(Class<T>) - Static method in class qupath.opencv.io.OpenCVTypeAdapters. Get a TypeAdapter to pass to a GsonBuilder for a specific supported OpenCV class, ; i.e. getUndoRedoManager() - Method in class qupath.lib.gui.QuPathGUI. Get the UndoRedoManager, which can be useful if needing to clear it in cases where available memory is low. getUniqueID() - Method in class qupath.lib.gui.images.stores.AbstractImageRenderer;  ; getUniqueID() - Method in class qupath.lib.gui.images.stores.ColorModelRenderer;  ; getUniqueID() - Method in interface qupath.lib.gui.images.stores.ImageRenderer. Get a unique key, which will be used for caching. getUnit() - Method in class qupath.lib.plugins.parameters.NumericParameter. Get the unit to display for this parameter (may be null if no unit is available). getUnmodifiableMetadataMap() - Method in class qupath.lib.objects.PathObject. Get an unmodifiable map of the metadata. getUpperBound() - Method in enum class qupath.lib.images.servers.PixelType. Get a number representing the maximum value permitted by this type. getUpperBound() - Method in class qupath.lib.plugins.parameters.NumericParameter. Retrieve the upper bound. getUri() - Method in class qupath.lib.gui.extensions.UpdateChecker.ReleaseVersion. Get a URI to download the release (may be null if no URI is available). getURI() - Method in class qupath.lib.images.servers.ImageServerBuilder.DefaultImageServerBuilder. Get the URI used by this builder. getURI() - Method in class qupath.lib.io.UriUpdater.SingleUriItem. Get the URI. getURI() - Method in interface qupath.lib.projects.Project. Get a URI that can be used when saving/reloading this project. getUris() - Method in interface qupath.lib.io.UriResource;  ; getURIs() - Method in class qupath",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:542922,avail,available,542922,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"osite, getLocationString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. GridOverlay; public GridOverlay(OverlayOptions overlayOptions); Constructor. Parameters:; overlayOptions - overlay options to control the grid display. Method Details. isVisible; public boolean isVisible(); Description copied from class: AbstractOverlay; Check overlay visibility status. If isVisible() returns false,; then calls to paintOverlay() will not do anything. Overrides:; isVisible in class AbstractOverlay; Returns:. paintOverlay; public void paintOverlay(Graphics2D g,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely); Description copied from interface: PathOverlay; Paint the overlay to a graphics object. The graphics object will have a transform applied to it, so the painting should; make use of coordinates in the original image space. Parameters:; g - Graphics2D object to which drawing should be performed. This should have any transform already applied to it.; imageRegion - The maximum image region that should be shown.; downsampleFactor - The downsample factor at which the overlay will be viewed. There is no need for rescaling according to; this value since it has already been applied to the Graphics2D as part of its AffineTransform, however; it may optionally be needed within the method e.g. to correct line thicknesses.; imageData - the ImageData associated with this overlay. If the overlay is being displayed on a viewer, this is the ImageData open ; within the viewer. Not all overlays require this, and it may be null.; paintCompletely - If true, the method is permitted to return without completely painting everything, for performance reasons. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/GridOverlay.html:2746,down,downsampleFactor,2746,javadoc/docs/qupath/lib/gui/viewer/overlays/GridOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/GridOverlay.html,2,['down'],"['downsample', 'downsampleFactor']"
Availability,"otation(). Make an inverse annotation using the current ImageData and its current selected objects. static boolean; makeInverseAnnotation(ImageData<?> imageData). Make an inverse annotation using the specified ImageData and current selected objects. static boolean; makeInverseAnnotation(ImageData<?> imageData,; Collection<PathObject> pathObjects). Make an annotation, for which the ROI is obtained by subtracting the ROIs of the specified objects from the closest ; common ancestor ROI (or entire image if the closest ancestor is the root). static boolean; makeInverseAnnotation(ImageData<?> imageData,; PathObject pathObject). Make an annotation for the specified ImageData, for which the ROI is obtained by subtracting ; the existing ROI from the ROI of its parent object (or entire image if no suitable parent object is available). static boolean; makeInverseAnnotation(PathObject pathObject). Make an annotation for the current ImageData, for which the ROI is obtained by subtracting ; the existing ROI from the ROI of its parent object (or entire image if no suitable parent object is available). static String; makePathInProject(String... more). Build a file or directory path relative to the current project, and ensure that it exists. static Integer; makeRGB(int r,; int g,; int b). Make a packed int representation of an RGB color. static double; measurement(PathObject pathObject,; String measurementName). Extract the specified measurement from a PathObject. static boolean; mergeAnnotations(Collection<PathObject> annotations). Merge annotations for the current hierarchy. static boolean; mergeAnnotations(PathObjectHierarchy hierarchy,; Collection<PathObject> annotations). Merge the specified annotations to create a new annotation containing the union of their ROIs. static boolean; mergePointsForAllClasses(). Merge point annotations sharing the same PathClass and ImagePlane as the selected annotations; of the current hierarchy, creating multi-point annotations for all matching po",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html:23665,avail,available,23665,javadoc/docs/qupath/lib/scripting/QP.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/QP.html,1,['avail'],['available']
Availability,"ouble) - Method in class qupath.lib.roi.EllipseROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.GeometryROI;  ; getScaledLength(double, double) - Method in interface qupath.lib.roi.interfaces.ROI. Get the scaled length, for use with calibrated pixel sizes. getScaledLength(double, double) - Method in class qupath.lib.roi.LineROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.PointsROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.PolygonROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.PolylineROI;  ; getScaledLength(double, double) - Method in class qupath.lib.roi.RectangleROI;  ; getScaledNavigationSpeed() - Static method in class qupath.lib.gui.prefs.PathPrefs. Get navigation speed scaled as a proportion and forced to be in the range 0-1. getScaledRGBInstance(BufferedImage, int, int) - Static method in class qupath.lib.gui.tools.GuiTools. Get a scaled (RGB or ARGB) image, achieving reasonable quality even when scaling down by a considerably amount. getScaledScrollSpeed() - Static method in class qupath.lib.gui.prefs.PathPrefs. Get scroll speed scaled as a proportion and forced to be in the range 0-1. getScript() - Method in class qupath.lib.plugins.workflow.DefaultScriptableWorkflowStep;  ; getScript() - Method in class qupath.lib.plugins.workflow.RunSavedClassifierWorkflowStep;  ; getScript() - Method in interface qupath.lib.plugins.workflow.ScriptableWorkflowStep. Get one or more script lines that may be used to apply the step. getScript() - Method in class qupath.lib.plugins.workflow.SimplePluginWorkflowStep;  ; getScript() - Method in class qupath.lib.scripting.ScriptParameters. Get the text of the script. getScriptEditor() - Method in class qupath.lib.gui.QuPathGUI. Get a reference to the current ScriptEditor (which may or may not be open at the moment). getScripts() - Method in interface qupath.lib.projects.Project. Get a manager for scripts saved within this project.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:505766,down,down,505766,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['down'],['down']
Availability,"oublePredicate predicate); Create a binary mask (0, 255 values) by applying a predicate to pixel values. Parameters:; mat - the input image; predicate - the predicate to apply to each pixel; Returns:; the mask; See Also:. createMask(Mat, DoublePredicate, double, double). replaceValues; public static void replaceValues(Mat mat,; double originalValue,; double newValue); Replace a specific value in an array.; ; If the value to replace is NaN, use instead replaceNaNs(Mat, double). Parameters:; mat - array; originalValue - value to replace; newValue - value to include in the output; See Also:. replaceNaNs(Mat, double); fill(Mat, Mat, double). replaceNaNs; public static void replaceNaNs(Mat mat,; double newValue); Replace NaNs in a floating point array. Parameters:; mat - array; newValue - replacement value. fill; public static void fill(Mat mat,; Mat mask,; double value); Fill the pixels of an image with a specific value, corresponding to a mask. Parameters:; mat - input image; mask - binary mask; value - replacement value; See Also:. fill(Mat, double). fill; public static void fill(Mat mat,; double value); Fill the pixels of an image with a specific value. Parameters:; mat - input image; value - fill value; See Also:. fill(Mat, Mat, double). splitChannels; public static List<Mat> splitChannels(Mat mat); Split channels from a Mat.; May be more convenient than OpenCV's built-in approach. Parameters:; mat - ; Returns:; a list of Mat, containing each split channel in order. mergeChannels; public static Mat mergeChannels(Collection<? extends Mat> channels,; Mat dest); throws IllegalArgumentException; Merge channels from a multichannel Mat.; May be more convenient than OpenCV's built-in approach. Parameters:; channels - separate channels; dest - optional destination (may be null); Returns:; merged Mat, which will be the same as dest if provided; Throws:; IllegalArgumentException - if the number of channels in the output would be greater than opencv_core.CV_CN_MAX. isFloat; pu",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:16467,mask,mask,16467,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html,2,['mask'],['mask']
Availability,"ould be applied. requestPixelSnapping() - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler. Returns true if the tool requests that pixel coordinates be snapped to integer values. requestPixelSnapping() - Method in class qupath.lib.gui.viewer.tools.handlers.MoveToolEventHandler. Returns true if the tool requests that pixel coordinates be snapped to integer values. requestPixelSnapping() - Method in class qupath.process.gui.WandToolEventHandler. Returns true if the tool requests that pixel coordinates be snapped to integer values. requestStartMoving(double, double) - Method in class qupath.lib.gui.viewer.QuPathViewer. Request that the viewer start panning with a velocity determined by dx and dy. requestStopMoving() - Method in class qupath.lib.gui.viewer.QuPathViewer. Request that the viewer stop any panning immediately. requestUserDirectory(boolean) - Static method in class qupath.lib.gui.commands.Commands. Request the current user directory, optionally prompting the user to request a directory if none is available. requiresTileRegion(String, ImageRegion) - Method in interface qupath.lib.gui.images.stores.TileListener. Check if the listener requires a particular tile. requiresTileRegion(String, ImageRegion) - Method in class qupath.lib.gui.viewer.QuPathViewer;  ; RESET_DETECTION_CLASSIFICATIONS - Variable in class qupath.lib.gui.actions.menus.ClassifyMenuActions.Actions;  ; RESET_METADATA - Variable in class qupath.lib.gui.actions.menus.TMAMenuActions.Actions;  ; RESET_PREFERENCES - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.Actions;  ; RESET_SELECTION - Variable in class qupath.lib.gui.actions.menus.ObjectsMenuActions.SelectActions;  ; resetActiveHandle() - Method in class qupath.lib.roi.RoiEditor. Ensure that no handle is active. resetAllSliders() - Method in class qupath.lib.gui.commands.display.BrightnessContrastSliderPane. Reset all sliders to their default values. resetAvailablePathClasses() - Method in class qupath.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:859905,avail,available,859905,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"ould save results or not. ScriptParameters.Builder; setBatchSize(int batch). Set the batch size for batch processing (default is 1). ScriptParameters.Builder; setDefaultImports(Collection<Class<?>> imports);  ; ScriptParameters.Builder; setDefaultStaticImports(Collection<Class<?>> imports);  ; ScriptParameters.Builder; setErrorWriter(Writer writer). Set the main error writer. ScriptParameters.Builder; setFile(File file);  ; ScriptParameters.Builder; setImageData(ImageData<?> imageData). Set the current image data for the script. ScriptParameters.Builder; setProject(Project<?> project). Set the current project for the script. ScriptParameters.Builder; setScript(String script);  ; ScriptParameters.Builder; setSystemWriters(). Set the output and error writers to use System.out and System.err. ScriptParameters.Builder; setWriter(Writer writer). Set the main output writer. ScriptParameters.Builder; useCompiled(boolean useCompiled). Request that the script is compiled before being evaluated, ; or a previously compiled version is used where available. ScriptParameters.Builder; useLogWriters(). Set the output and error writers to append to the default logger. ScriptParameters.Builder; useLogWriters(org.slf4j.Logger logger). Set the output and error writers to append to the specified logger. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. setDefaultImports; public ScriptParameters.Builder setDefaultImports(Collection<Class<?>> imports). setDefaultStaticImports; public ScriptParameters.Builder setDefaultStaticImports(Collection<Class<?>> imports). setFile; public ScriptParameters.Builder setFile(File file). setScript; public ScriptParameters.Builder setScript(String script). setSystemWriters; public ScriptParameters.Builder setSystemWriters(); Set the output and error writers to use System.out and System.err. Returns:. useLogWriters; public ScriptParameters.Builder useLo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html:2345,avail,available,2345,javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/scripting/ScriptParameters.Builder.html,1,['avail'],['available']
Availability,"ound. getMagnification() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the magnification for the image within this viewer, or Double.NaN if no image is present. getMagnification() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the magnification value, or Double.NaN if this is unavailable. getMagnificationString(QuPathViewer) - Static method in class qupath.lib.gui.tools.GuiTools. Get an appropriate String to represent the magnification of the image currently in the viewer. getMainObjectFilter() - Method in class qupath.lib.analysis.heatmaps.DensityMaps.DensityMapParameters. Get the primary object filter. getMajor() - Method in class qupath.lib.common.Version. Get the major version number (X.0.0). getManager() - Method in class qupath.lib.images.servers.SparseImageServer. Get the manager, which defines from whence the regions originate. getMask() - Method in class qupath.lib.experimental.pixels.Parameters. Get the mask associated with the main ROI or the parent object, or null if no mask is available. getMask(Parameters<S, T>, ROI) - Method in interface qupath.lib.experimental.pixels.MaskSupplier. Get a mask corresponding to the image, depicting a specified ROI. getMask(ROI) - Method in class qupath.lib.experimental.pixels.Parameters. Get the mask associated with any ROI, or null if no mask is available. getMaskedPixels(Mat, Mat) - Static method in class qupath.opencv.tools.OpenCVTools. Extract all the masked pixels within an image. getMaskImageNames() - Method in interface qupath.lib.projects.Project. Query whether 'true' or masked image names are being returned. getMatrixInverse() - Method in class qupath.lib.color.ColorDeconvolutionStains. Get matrix inverse, as useful for color deconvolution. getMax() - Method in class qupath.lib.analysis.stats.RunningStatistics. Get the maximum non-NaN value added. getMaxAllowed() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; getMaxAllowed() - Method in interface qupath.lib.dis",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:432265,mask,mask,432265,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,3,"['avail', 'mask']","['available', 'mask']"
Availability,"oundsY() - Method in class qupath.lib.roi.PolygonROI;  ; getBoundsY() - Method in class qupath.lib.roi.PolylineROI;  ; getBrushDiameter() - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler;  ; getBrushDiameter() - Method in class qupath.process.gui.WandToolEventHandler. Don't actually need the diameter for calculations here, but it's helpful for setting the cursor. getBufferedImage() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the buffered image. getBuilder() - Method in class qupath.lib.images.servers.AbstractImageServer;  ; getBuilder() - Method in interface qupath.lib.images.servers.ImageServer. Get a ServerBuilder capable of building a server the same as this one. getBuilders() - Method in class qupath.lib.images.servers.ImageServerBuilder.UriImageSupport. Get a list of ServerBuilders, one for each image that can be read based on the specified URI. getBuildString() - Method in class qupath.lib.gui.BuildInfo. Get the build String, or null if no build String is available. getBuildString() - Static method in class qupath.lib.gui.QuPathGUI. Get a String representing the QuPath version & build time. getBytesPerPixel() - Method in enum class qupath.lib.images.servers.PixelType. Number of bytes per pixel. getC() - Method in class qupath.lib.regions.ImagePlane. Get the channel index. getC() - Method in class qupath.lib.roi.AreaROI;  ; getC() - Method in class qupath.lib.roi.EllipseROI;  ; getC() - Method in class qupath.lib.roi.GeometryROI;  ; getC() - Method in class qupath.lib.roi.LineROI;  ; getC() - Method in class qupath.lib.roi.PointsROI;  ; getC() - Method in class qupath.lib.roi.PolygonROI;  ; getC() - Method in class qupath.lib.roi.PolylineROI;  ; getC() - Method in class qupath.lib.roi.RectangleROI;  ; getC() - Method in interface qupath.lib.roi.interfaces.ROI. Get channel index, or -1 if the ROI relates to all available channels. getC() - Method in class qupath.opencv.tools.OpenCVTools.IndexedPixel. Get channel index",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:342573,avail,available,342573,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample). Paint an object (or, more precisely, its ROI). static void; paintShape(Shape shape,; Graphics2D g2d,; Color colorStroke,; Stroke stroke,; Color colorFill). Paint the specified shape with specified stroke and fill colors. static void; paintSpecifiedObjects(Graphics2D g2d,; Collection<? extends PathObject> pathObjects,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample). Paint the specified objects. static void; paintTMAGrid(Graphics2D g2d,; TMAGrid tmaGrid,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample). Paint the specified tissue microarray grid. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. paintSpecifiedObjects; public static void paintSpecifiedObjects(Graphics2D g2d,; Collection<? extends PathObject> pathObjects,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample); Paint the specified objects. Parameters:; g2d - the graphics object on which the objects should be painted; pathObjects - the objects to paint; overlayOptions - the overlay options defining how objects should be painted; selectionModel - the selection model used to determine the selection status of each object; downsample - the downsample factor; this should already be applied to the graphics object, but is needed to determine some line thicknesses. paintTMAGrid; public static void paintTMAGrid(Graphics2D g2d,; TMAGrid tmaGrid,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample); Paint the specified tissue microarray grid. Parameters:; g2d - the graphics object on which the objects should be painted; tmaGrid - the TMA grid; overlayOptions - the overlay options defining how objects should be painted; selectionModel - the selection model used to deter",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html:2610,down,downsample,2610,javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html,1,['down'],['downsample']
Availability,"ow-resolution requests. However, tile caching means that after tiles have been accessed once perceived ; performance can be considerably improved. Parameters:; server - the server to wrap (typically having only one resolution level); downsamples - optional array giving the downsamples of the new pyramid. If not provided,; Returns:. pyramidalizeTiled; public static ImageServer<BufferedImage> pyramidalizeTiled(ImageServer<BufferedImage> server,; int tileWidth,; int tileHeight,; double... downsamples); Wrap an ImageServer to dynamically generate a pyramid, using specified tile sizes.; This does not involve writing any new image, and may be rather processor and memory-intensive as high-resolution ; tiles must be accessed to fulfil low-resolution requests.; However, tile caching means that after tiles have been accessed once perceived ; performance can be considerably improved. Parameters:; server - the server to wrap (typically having only one resolution level); tileWidth - requested tile height; tileHeight - requested tile height; downsamples - optional array giving the downsamples of the new pyramid. If not provided,; Returns:. buildServer; public static ImageServer<BufferedImage> buildServer(String path,; String... args); throws IOException; Build a ImageServer for the specified URI path and optional args.; ; See buildServer(URI, String...) for more information about how args are applied. Parameters:; path - path for the image; it should be possible to convert this to a URI; args - ; Returns:; Throws:; IOException. buildServer; public static ImageServer<BufferedImage> buildServer(URI uri,; String... args); throws IOException; Build a ImageServer for the specified URI and optional args.; This differs from ImageServerProvider.buildServer(String, Class, String...) in two main ways:; ; it always uses BufferedImage as the server class; where possible, args that request a transformed server are applied. ; Supported arguments include; ; --classname to request an image provi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServers.html:4267,down,downsamples,4267,javadoc/docs/qupath/lib/images/servers/ImageServers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServers.html,2,['down'],['downsamples']
Availability,"ows:; IOException - if there is an error reading the images. labelsToCells; public static List<PathObject> labelsToCells(Collection<Path> paths,; boolean mergeByLabel); throws IOException; Convert 2-channel labeled images to cell objects, determining the region from the filename if possible. Parameters:; paths - paths to image files (e.g. PNGs); mergeByLabel - if true, merge objects with the same ROI label; Returns:; a list of objects generated from the labels; Throws:; IOException - if there is an error reading the images. labelsToDetections; public static List<PathObject> labelsToDetections(Path path,; RegionRequest request); throws IOException; Convert a labeled image to detection objects. Parameters:; path - path to labeled image file (e.g. PNGs); request - a RegionRequest representing the region or the full image, used to reposition and rescale ROIs.; If not provided, this will be extracted from the filename, if possible.; Returns:; a list of objects generated from the labels; Throws:; IOException - if there is an error reading the images. labelsToCells; public static List<PathObject> labelsToCells(Path path,; RegionRequest request); throws IOException; Convert a 2-channel labeled image to cell objects. Parameters:; path - path to labeled image file (e.g. PNGs); request - a RegionRequest representing the region or the full image, used to reposition and rescale ROIs.; If not provided, this will be extracted from the filename, if possible.; Returns:; a list of objects generated from the labels; Throws:; IOException - if there is an error reading the images. labelsToAnnotations; public static List<PathObject> labelsToAnnotations(Collection<Path> paths,; boolean mergeByLabel); throws IOException; Convert labeled images to annotation objects, determining the region from the filename if possible. Parameters:; paths - paths to image files (e.g. PNGs); mergeByLabel - if true, merge objects with the same ROI label; Returns:; a list of objects generated from the labels; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html:7587,error,error,7587,javadoc/docs/qupath/lib/analysis/images/ContourTracing.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html,1,['error'],['error']
Availability,"p. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.commands; Class MiniViewers.MiniViewerManager. java.lang.Object; qupath.lib.gui.commands.MiniViewers.MiniViewerManager. All Implemented Interfaces:; EventListener, EventHandler<MouseEvent>. Enclosing class:; MiniViewers. public static class MiniViewers.MiniViewerManager; extends Object; implements EventHandler<MouseEvent>; A manager for one or more mini-viewers, where the 'more' means a separate viewer per channel. Constructor Summary; Constructors. Constructor; Description; MiniViewerManager(QuPathViewer mainViewer,; Collection<? extends ChannelDisplayInfo> channels). Deprecated.; use MiniViewers.createManager(QuPathViewer, Collection) instead. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; double; getDownsample(). Get the downsample used within the mini viewers. GridPane; getPane(). Get the pane containing all mini viewers, which can be added to a scene for display. void; handle(MouseEvent event);  ; void; setDownsample(double downsample). Set the downsample to use within the mini viewers. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. MiniViewerManager; @Deprecated; public MiniViewerManager(QuPathViewer mainViewer,; Collection<? extends ChannelDisplayInfo> channels); Deprecated.; use MiniViewers.createManager(QuPathViewer, Collection) instead. Constructor specifying a primary viewer and number of channels. Parameters:; mainViewer - the viewer that the mini viewers relate to (i.e. tracking the cursor location); channels - the channels to include. Method Details. getDownsample; public double getDownsample(); Get the downsample used within the mini viewers. Returns:. setDownsample; public void setDownsample(do",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html:1155,down,downsample,1155,javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/MiniViewers.MiniViewerManager.html,1,['down'],['downsample']
Availability,"path - ; request - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; ImageRegion region); Create a request corresponding to a specified ImageRegion.; This may also be used to construct a request based on an existing request, but changing either the path or downsample. Parameters:; path - ; downsample - ; region - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; int x,; int y,; int width,; int height,; int z,; int t); Create a request for a region specified in terms of its bounding box, z-slice and time point. Parameters:; path - ; downsample - ; x - ; y - ; width - ; height - ; z - ; t - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; int x,; int y,; int width,; int height,; ImagePlane plane); Create a request for a region specified in terms of its bounding box and ImagePlane. Parameters:; path - ; downsample - ; x - ; y - ; width - ; height - ; plane - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; int x,; int y,; int width,; int height); Create a request for a region specified in terms of its bounding box, using the first z-slice and time point. Parameters:; path - ; downsample - ; x - ; y - ; width - ; height - ; Returns:. overlapsRequest; public boolean overlapsRequest(RegionRequest request); Returns true if the region specified by this request overlaps with that of another request.; The test includes insuring that they refer to the same image by checking the paths are the same. Parameters:; request - ; Returns:. getPath; public String getPath(); Get the requested ImageServer path, used as an identifier. Returns:; See Also:. ImageServer.getPath(). getDownsample; public double getDownsample(); Get the requested downsample factor, defining the resolution at which pixels should be returned. Returns:. intersect2D; public RegionRequest intersect",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html:7389,down,downsample,7389,javadoc/docs/qupath/lib/regions/RegionRequest.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html,1,['down'],['downsample']
Availability,"path.lib.images.servers.openslide.OpenslideImageServer;  ; createServerBuilder() - Method in class qupath.lib.images.servers.RearrangeRGBImageServer;  ; createServerBuilder() - Method in class qupath.lib.images.servers.RotatedImageServer;  ; createServerBuilder() - Method in class qupath.lib.images.servers.SparseImageServer;  ; createServerBuilder() - Method in class qupath.lib.images.servers.WrappedBufferedImageServer. Returns null (does not support ServerBuilders). createShape(MouseEvent, double, double, boolean, Geometry) - Method in class qupath.lib.gui.viewer.tools.handlers.BrushToolEventHandler. Create a new Geometry using the specified tool, assuming a user click/drag at the provided x & y coordinates. createShape(MouseEvent, double, double, boolean, Geometry) - Method in class qupath.process.gui.WandToolEventHandler;  ; createShapeMask(int, int, Shape, double, double, double) - Static method in class qupath.lib.awt.common.BufferedImageTools. Create a grayscale BufferedImage representing a mask for a specified ROI. createSharedClassificationMerger() - Static method in class qupath.lib.objects.utils.ObjectMerger. Create an object merger that can merge together any objects with similar ROIs (e.g. createSharedPoolCompletionService(Class<V>) - Method in class qupath.lib.gui.QuPathGUI. Deprecated.; since v0.5.0; use QuPathGUI.getThreadPoolManager(). createSharedPoolCompletionService(Class<V>) - Method in class qupath.lib.gui.SharedThreadPoolManager. Create a completion service that uses a shared threadpool for the application. createSharedTileBoundaryMerger(double) - Static method in class qupath.lib.objects.utils.ObjectMerger. Create an object merger that uses a shared boundary IoU criterion and default overlap tolerance. createSharedTileBoundaryMerger(double, double) - Static method in class qupath.lib.objects.utils.ObjectMerger. Create an object merger that uses a shared boundary IoU criterion and overlap tolerance. createShowSystemInfoDialog(QuPathGUI) - Stati",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:224170,mask,mask,224170,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['mask'],['mask']
Availability,"path.lib.roi.PolylineROI;  ; isLine() - Method in class qupath.lib.roi.RectangleROI;  ; isLine() - Method in interface qupath.lib.roi.interfaces.ROI. Returns true if this ROI consists of line segments and does not enclose an area. isLinux() - Static method in class qupath.lib.common.GeneralTools. Return true if running on Linux. isLocationVisible() - Method in class qupath.lib.gui.viewer.QuPathViewerPlus. Returns true if the cursor location is visible, false otherwise. isLocked() - Method in class qupath.lib.objects.PathObject. Query the locked status. isLocked() - Method in class qupath.lib.objects.PathROIObject. Query the locked status for the object, indicating whether it should be editable or not. isMac() - Static method in class qupath.lib.common.GeneralTools. Return true if running on macOS. isMemorySufficient(RegionRequest, ImageData<BufferedImage>) - Static method in class qupath.imagej.tools.IJTools. Check if sufficient memory is available to request pixels for a specific region, and the number ; of pixels is less than the maximum length of a Java array. isMissing() - Method in class qupath.lib.objects.TMACoreObject. Query the 'missing' flag for this core. isModified() - Method in class qupath.lib.gui.scripting.ScriptTab. Return. isModifiedProperty() - Method in class qupath.lib.gui.scripting.ScriptTab. Return the isModifiedProperty of this script tab (true if the ; script is modified, i.e. isMultipartExtension(String) - Static method in class qupath.lib.common.GeneralTools. Returns true for file extensions containing multiple parts (or 'dots'). isMutable() - Method in class qupath.lib.display.DirectServerChannelInfo;  ; isMutable() - Method in interface qupath.lib.display.SingleChannelDisplayInfo. Check if SingleChannelDisplayInfo.getValue(BufferedImage, int, int) returns fixed values, or if they are dependent on ; other properties of the ImageData. isNegativeClass(PathClass) - Static method in class qupath.lib.objects.classes.PathClassTools. Return true if",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:626578,avail,available,626578,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"path.process.gui.commands.ml.BoundaryStrategy;  ; equals(Object) - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; equalTo(String) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification (by name) for objects for which the specified measurement has a value exactly equal to the threshold. equalTo(PathClass) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification for objects for which the specified measurement has a value exactly equal to the threshold. error() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create an error alert dialog. error(String) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text. error(String, int) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text and a count. error(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a error message to show a count of errors. error(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message. error(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with a count. ERROR - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Error or exception. ERROR - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Error logging (only if something goes recognizably wrong). escapeFilePath(String) - Static method in class qupath.lib.common.GeneralTools. Escape backslashes in an absolute file path - useful when scripting. estimateAvailableMemory() - Static method in class qupath.lib.common.GeneralTools. Estimate the current available memory in bytes, based upon the JVM max and the memory currently used. estimateCellBoundary(Geometry, double, doub",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:283391,error,error,283391,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['error'],['error']
Availability,"pe() - Method in interface qupath.lib.images.servers.ImageServer. The bit-depth and type of the image. getPixelType() - Method in class qupath.lib.images.servers.ImageServerMetadata. Returns the bit-depth for individual pixels in the image. getPixelValue(int, ColorTransformer.ColorTransformMethod) - Static method in class qupath.lib.color.ColorTransformer. Get the value of a single packed RGB pixel after applying a specified color transform method. getPixelValue(int, ColorTransformer.ColorTransformMethod, ColorDeconvolutionStains) - Static method in class qupath.lib.color.ColorTransformer. Get the value of a single packed RGB pixel after applying a specified color transform method, with color deconvolution stains provided. getPixelWidth() - Method in class qupath.lib.images.servers.PixelCalibration. Get the numeric value representing the pixel width, in the stored units. getPixelWidthMicrons() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the pixel width in microns, if available - or Double.NaN otherwise. getPixelWidthMicrons() - Method in class qupath.lib.images.servers.PixelCalibration. Get the pixel width in microns, or Double.NaN if this is unknown. getPixelWidthUnit() - Method in class qupath.lib.images.servers.PixelCalibration. Get a String representation of the preferred pixel width unit. getPlaceholderText() - Method in class qupath.lib.gui.panes.SimpleImageViewer. Get the placeholder text to show if no image is available. getPlainStyling(String) - Static method in class qupath.lib.gui.scripting.richtextfx.stylers.ScriptStylerProvider. Get simple styling that does not apply any classes. getPlane() - Method in class qupath.lib.images.servers.TileRequest. Deprecated.; v0.4.0 use TileRequest.getImagePlane() instead (changed for better consistency with other classes). getPlane() - Method in class qupath.lib.regions.ImageRegion. Deprecated.; v0.4.0 use ImageRegion.getImagePlane() instead (changed for better consistency with other classes). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:485042,avail,available,485042,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"pecified channel index. extractMaskedFloats(Mat, Mat, int) - Static method in class qupath.opencv.tools.OpenCVTools. Extract pixels from an image using a mask, limited to the specified channel index. extractMaskedPixels(Parameters<BufferedImage, BufferedImage>, int, Function<PathObject, ROI>) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. extractMaskedPixels(Parameters<BufferedImage, BufferedImage>, String, Function<PathObject, ROI>) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Extract the pixels from one channel of an image using the specified transform, and applying any ROI mask. extractMaskedPixels(Parameters<BufferedImage, BufferedImage>, ColorTransforms.ColorTransform, Function<PathObject, ROI>) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Extract the pixels from the image using the specified transform, and applying any ROI mask. extractOverlay(PathObjectHierarchy, RegionRequest, OverlayOptions, Predicate<PathObject>) - Static method in class qupath.imagej.gui.IJExtension. Extract an ImageJ overlay for the specified region. extractPixels(Mat, double[]) - Static method in class qupath.opencv.tools.OpenCVTools. Extract pixels as a double array. extractPixels(Mat, float[]) - Static method in class qupath.opencv.tools.OpenCVTools. Extract pixels as a float[] array. extractROI(ImageServer<BufferedImage>, PathObject, RegionRequest, boolean) - Static method in class qupath.imagej.gui.IJExtension. Similar to IJExtension.extractROI(ImageServer, ROI, RegionRequest, boolean), except that the title of the ImagePlus is set according to the parent object type (which is used to get the ROI). extractROI(ImageServer<BufferedImage>, ROI, RegionRequest, boolean) - Static method in class qupath.imagej.gui.IJExtension. Extract a region of interest from an image as an ImageJ ImagePlus. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:296396,mask,mask,296396,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['mask'],['mask']
Availability,"pecifiedAreasByLines, transformAllObjects, transformAllObjects, transformSelectedObjects, transformSelectedObjects, translateAllObjects, translateAllObjects, writeDensityMapImage, writeDensityMapImage, writeImage, writeImage, writeImageRegion, writePredictionImage, writePredictionImage. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. QPEx; public QPEx(). Method Details. getCoreClasses; public static Collection<Class<?>> getCoreClasses(); Get a list of core classes that are likely to be useful for scripting.; The purpose of this is to allow users to find classes they are likely to need, ; or to import these automatically at the beginning of scripts. Returns:. exportTMAData; public static void exportTMAData(String path,; double downsampleFactor); throws IOException; Export TMA summary data for the current image. Parameters:; path - path to the export directory; downsampleFactor - downsample applied to each TMA core image; Throws:; IOException. exportTMAData; public static void exportTMAData(ImageData<BufferedImage> imageData,; String path,; double downsampleFactor); throws IOException; Export TMA summary data for the specified image. Parameters:; imageData - the image containing TMA data to export; path - path to the export directory; downsampleFactor - downsample applied to each TMA core image; Throws:; IOException. getQuPath; public static QuPathGUI getQuPath(); Get the current QuPath instance. Returns:. getCurrentViewer; public static QuPathViewer getCurrentViewer(); Get the active viewer in the current QuPath instance. Returns:; an active viewer, or null if no viewer is active in QuPath currently. locateFile; public static String locateFile(String nameOrPath); throws IOException; Locate a specified file based upon its name or path, with a search depth of 4.; This first checks if the provided path is to a file that already exists.; If it is not, then it s",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html:12688,down,downsampleFactor,12688,javadoc/docs/qupath/lib/gui/scripting/QPEx.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/scripting/QPEx.html,2,['down'],"['downsample', 'downsampleFactor']"
Availability,"penCVClassifiers.LogisticRegressionClassifier;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.NormalBayesClassifierCV;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.RTreesClassifier;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMClassifierCV;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.SVMSGDClassifierCV;  ; getName() - Method in class qupath.opencv.ml.OpenCVClassifiers.OpenCVStatModel. User-friendly, readable name for the classifier. getName() - Method in class qupath.opencv.WatershedNucleiCV;  ; getName() - Method in class qupath.process.gui.commands.ml.ClassificationResolution. Get the simple name for this resolution. getName() - Method in class qupath.process.gui.ProcessingExtension;  ; getNameFromURI(URI) - Static method in interface qupath.lib.projects.Project. Extract a usable project name from a URI. getNames() - Method in interface qupath.lib.projects.ResourceManager.Manager. Get a list of the available resources. getNameWithoutExtension(File) - Static method in class qupath.lib.common.GeneralTools. Get the file name with extension removed. getNameWithoutExtension(String) - Static method in class qupath.lib.common.GeneralTools. Deprecated.; v0.5.0 in favor of GeneralTools.stripExtension(String), which does the same thing but has; a more descriptive name. See https://github.com/qupath/qupath/pull/1275 for details. getNanoseconds() - Method in class qupath.lib.common.Timeit.Checkpoint. Get the checkpoint timestamp in nanoseconds. getNavigationAccelerationProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Get whether to apply the navigation acceleration (& deceleration) effects or not. getNearest(double, double, double) - Method in class qupath.lib.roi.PointsROI. Identify the closest point within a specified distance to coordinates x,y - or null if no points are found. getNearestNeighbor(PathObject) - Method in class qupath.lib.analysis.DelaunayTools.Subdivision",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:455837,avail,available,455837,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"perty<QuPathStyleManager.Fonts>; fontProperty(). Get the current selected font. static boolean; installStyles(Collection<File> list). Handle installing CSS files (which can be used to style QuPath). static boolean; isDefaultStyle(). Check if the default JavaFX style is used. static void; refresh(). Refresh the current style. static ObjectProperty<QuPathStyleManager.StyleOption>; selectedStyleProperty(). Get the current selected style. static void; updateAvailableStyles(). Request that the list of available styles is updated. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Property Details. availableStyles; public static ObservableList<QuPathStyleManager.StyleOption> availableStylesProperty; Get the current available styles as an observable list.; The list is unmodifiable, since any changes should be made via adding/removing files in UserDirectoryManager.getCssStylesPath(). See Also:. availableStylesProperty(). selectedStyle; public static ObjectProperty<QuPathStyleManager.StyleOption> selectedStyleProperty; Get the current selected style. See Also:. selectedStyleProperty(). availableFonts; public static ObservableList<QuPathStyleManager.Fonts> availableFontsProperty; Get a list of available fonts.; The list is unmodifiable, since this is primarily used to overcome issues with the default font on macOS ; by changing the font family. More fine-grained changes can be made via css. See Also:. availableFontsProperty(). font; public static ObjectProperty<QuPathStyleManager.Fonts> fontProperty; Get the current selected font. See Also:. fontProperty(). Constructor Details. QuPathStyleManager; public QuPathStyleManager(). Method Details. updateAvailableStyles; public static void updateAvailableStyles(); Request that the list of available styles is updated.; It makes sense to call this when a new user directory has been set, so that a check for CSS files ; can be performed. installStyles",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html:2831,avail,availableStylesProperty,2831,javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/QuPathStyleManager.html,1,['avail'],['availableStylesProperty']
Availability,"phics2D g2d,; Collection<? extends PathObject> pathObjects,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample). Paint the specified objects. static void; paintTMAGrid(Graphics2D g2d,; TMAGrid tmaGrid,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample). Paint the specified tissue microarray grid. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. paintSpecifiedObjects; public static void paintSpecifiedObjects(Graphics2D g2d,; Collection<? extends PathObject> pathObjects,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample); Paint the specified objects. Parameters:; g2d - the graphics object on which the objects should be painted; pathObjects - the objects to paint; overlayOptions - the overlay options defining how objects should be painted; selectionModel - the selection model used to determine the selection status of each object; downsample - the downsample factor; this should already be applied to the graphics object, but is needed to determine some line thicknesses. paintTMAGrid; public static void paintTMAGrid(Graphics2D g2d,; TMAGrid tmaGrid,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionModel,; double downsample); Paint the specified tissue microarray grid. Parameters:; g2d - the graphics object on which the objects should be painted; tmaGrid - the TMA grid; overlayOptions - the overlay options defining how objects should be painted; selectionModel - the selection model used to determine the selection status of each object; downsample - the downsample factor; this should already be applied to the graphics object, but is needed to determine some line thicknesses. paintObject; public static boolean paintObject(PathObject pathObject,; Graphics2D g,; OverlayOptions overlayOptions,; PathObjectSelectionModel selectionMod",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html:2936,down,downsample,2936,javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/PathObjectPainter.html,2,['down'],['downsample']
Availability,"play in this viewer. void; setCustomPixelLayerOverlay(PathOverlay pathOverlay). Optionally set a custom overlay to use for the pixel layer. void; setDoFasterRepaint(boolean fasterRepaint). Set flag to indicate that repaints should prefer speed over accuracy. void; setDownsampleFactor(double downsampleFactor). Set the downsample factor for this viewer. void; setDownsampleFactor(double downsampleFactor,; double cx,; double cy). Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards. void; setDownsampleFactor(double downsampleFactor,; double cx,; double cy,; boolean clipToMinMax). Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards. void; setGamma(double gamma). Set the gamma value for this viewer. void; setImageData(ImageData<BufferedImage> imageDataNew). Set the current image for this viewer. void; setMagnification(double magnification). Set the downsample factor based upon magnification values. void; setMinimumRepaintSpacingMillis(long repaintSpacingMillis). Prevent frequent repaints (temporarily) by setting a minimum time that must have elapsed; after the previous repaint for a new one to be triggered. void; setRotation(double theta). Set the rotation; angle in radians. void; setSelectedObject(PathObject pathObject). Set selected object in the current hierarchy, without centering the viewer. void; setSelectedObject(PathObject pathObject,; boolean addToSelected). Set selected object in the current hierarchy, without centering the viewer. void; setSpaceDown(boolean spaceDown). Notify this viewer that the isSpaceDown status should be changed. void; setTPosition(int tPosition). Set the requested time point to be visible. void; setZPosition(int zPos). Set the requested z-slice to be visible. void; tileAvailable(String serverPath,; ImageRegion region,; BufferedImage tile). Notify a listener that an image tile has been received read & is available. Str",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:11841,down,downsample,11841,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,1,['down'],['downsample']
Availability,"playInfo> selectedChannels,; ChannelDisplayMode mode). Convert an image to RGB by applying the specified ChannelDisplayInfos and ChannelDisplayMode. void; autoSetDisplayRange(ChannelDisplayInfo info). Automatically set the display range for a channel, using the default saturation defined in PathPrefs.autoBrightnessContrastSaturationPercentProperty(). void; autoSetDisplayRange(ChannelDisplayInfo info,; double saturation). Automatically set the display range for a channel. ObservableList<ChannelDisplayInfo>; availableChannels(). ObservableList containing the channels currently available for display. LongProperty; changeTimestampProperty(). Timestamp for the most recent change. static ImageDisplay; create(ImageData<BufferedImage> imageData). Create a new image display, and set the specified image data. ObjectBinding<ChannelDisplayMode>; displayMode(). Get the value of useInvertedBackgroundProperty(). Histogram; getHistogram(ChannelDisplayInfo info). Returns a histogram for a ChannelInfo, or none if no histogram is available (e.g. ImageData<BufferedImage>; getImageData(). Get the current image data. long; getLastChangeTimestamp(). Get a timestamp the last known changes for the object. ChannelDisplayInfo; getSwitchToGrayscaleChannel(). Get the value of switchToGrayscaleChannelProperty(). String; getTransformedValueAsString(BufferedImage img,; int x,; int y). Get a string representation of a transformed pixel value, using the currently-selected channels. boolean; isCompatible(ImageDisplay display). Check if an image display is 'compatible' with this one. void; refreshChannelOptions(). Refresh the channel options. void; saveChannelColorProperties(). Save color channels in the ImageData properties. ObservableList<ChannelDisplayInfo>; selectedChannels(). ObservableList containing the channels currently selected for display. void; setChannelSelected(ChannelDisplayInfo channel,; boolean selected). Set the selection of a channel on or off. void; setImageData(ImageData<BufferedI",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html:3226,avail,available,3226,javadoc/docs/qupath/lib/display/ImageDisplay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/display/ImageDisplay.html,1,['avail'],['available']
Availability,"play getImageDisplay(); Get the ImageDisplay object used to determine how the image is converted to RGB for display. Returns:. componentContains; protected boolean componentContains(double x,; double y). setDownsampleFactor; public void setDownsampleFactor(double downsampleFactor); Set the downsample factor for this viewer. Parameters:; downsampleFactor - . getThumbnail; public BufferedImage getThumbnail(); Get a thumbnail representing the image as displayed by this viewer. Returns:. getAllThumbnails; public List<BufferedImage> getAllThumbnails(); Get thumbnails for all z-slices & time points. Returns:. getRGBThumbnail; public BufferedImage getRGBThumbnail(); Get a thumbnail representing the image as displayed by this viewer.; ; Note: This will be a color (aRGB) image, with any color transforms applied -; therefore should not be used to extract 'original' pixel values. Returns:. setDownsampleFactor; public void setDownsampleFactor(double downsampleFactor,; double cx,; double cy); Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards.; The purpose is to make it possible to zoom in/out while keeping the cursor focussed on a particular location.; ; The specified downsample factor will automatically be clipped to the range getMinDownsample to getMaxDownsample. Parameters:; downsampleFactor - ; cx - ; cy - . setDownsampleFactor; public void setDownsampleFactor(double downsampleFactor,; double cx,; double cy,; boolean clipToMinMax); Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards.; The purpose is to make it possible to zoom in/out while keeping the cursor focused on a particular location. Parameters:; downsampleFactor - ; cx - ; cy - ; clipToMinMax - If true, the specified downsample factor will be clipped ; to the range getMinDownsample to getMaxDownsample. getZoomToFitDownsampleFactor; protected double getZoomToFitDownsampleFactor(). getServerWi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:29193,down,downsampleFactor,29193,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,2,['down'],"['downsample', 'downsampleFactor']"
Availability,"pleFactor,; ImagePlane plane). Create a ROI from an ImageJ Roi. static ROI; convertToROI(Roi roi,; Calibration cal,; double downsampleFactor,; ImagePlane plane). Create a ROI from an ImageJ Roi, using the Calibration object of an ImagePlus. static <T extends PathImage<? extends ImagePlus>>ROI; convertToROI(Roi roi,; T pathImage). Create a ROI from an ImageJ Roi. static ImagePlus; convertToUncalibratedImagePlus(String title,; BufferedImage img). Convert a BufferedImage to an ImagePlus, without pixel size information or other calibration. static ImageStack; createImageStack(ImageProcessor... ips). Create an ImageStack containing the specified ImageProcessors. static PathImage<ImagePlus>; createPathImage(ImageServer<BufferedImage> server,; ImagePlus imp,; RegionRequest request). Create a PathImage from an ImagePlus and region. static double; estimateDownsampleFactor(ImagePlus imp,; ImageServer<?> server). Estimate the downsample factor for an image region extracted from an image server, based upon ; the ratio of pixel sizes if possible or ratio of dimensions if necessary. static ImagePlus; extractHyperstack(ImageServer<BufferedImage> server,; RegionRequest request). Extract a full ImageJ hyperstack for a specific region, using all z-slices and time points. static ImagePlus; extractHyperstack(ImageServer<BufferedImage> server,; RegionRequest request,; int zStart,; int zEnd,; int tStart,; int tEnd). Extract a full ImageJ hyperstack for a specific region, for specified ranges of z-slices and time points. static ImagePlane; getImagePlane(Roi roi,; ImagePlus imp). Get the ImagePlane of an ImageJ Roi, based upon its stored positions. static boolean; isMemorySufficient(RegionRequest region,; ImageData<BufferedImage> imageData). Check if sufficient memory is available to request pixels for a specific region, and the number ; of pixels is less than the maximum length of a Java array. static void; quickShowImage(String name,; Roi roi,; ImageProcessor... ips). Show an ImageProces",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:6342,down,downsample,6342,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,1,['down'],['downsample']
Availability,"ply a watershed transform. doWatershed(Mat, Mat, double, boolean) - Static method in class qupath.opencv.tools.ProcessingCV. Apply an intensity-constrained watershed transform, preventing regions from expanding to pixels below a specified minimum threshold. doWatershed(SimpleImage, SimpleModifiableImage, boolean) - Static method in class qupath.lib.analysis.algorithms.Watershed. Apply a 2D watershed transform. doWatershed(SimpleImage, SimpleModifiableImage, double, boolean) - Static method in class qupath.lib.analysis.algorithms.Watershed. Apply a 2D watershed transform, constraining region growing using an intensity threshold. DOWNLOAD - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; downsample(double) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set the downsample factor to use with requesting image regions. downsample(double) - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Specify downsample factor (defined in terms of the full resolution image space). downsample(double) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Specify downsample factor. downsample(double) - Method in class qupath.lib.images.writers.TileExporter. Define resolution as a downsample value. downsamples(double...) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify downsamples; this is especially important for 'thick' objects (annotations, TMA cores); because the downsamples define the resolutions at which these will be rendered. downsamples(double...) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify downsample factors to use in the final pyramid. DragDropImportListener - Class in qupath.lib.gui.viewer. Drag and drop support for main QuPath application, which can support a range of different object types (Files, URLs, Strings,..). DragDropImportListener(QuPathGUI) - Constructor for class qupath.lib.gui.viewer.DragDropImportListener. Con",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:271297,down,downsample,271297,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['down'],['downsample']
Availability,"plying a PixelClassifier to an image. Parameters:; imageData - the image to which the classifier should apply; classifier - the pixel classifier; id - an ID to use for the ImageServer; this may be null, in which case an ID will be derived (if possible from a JSON representation of the classifier); colorModel - optional colormodel for the classifier (may be null to use the default); cacheAllTiles - optionally request that all tiles are computed immediately as the classifier is created. This is useful for images that are 'small' and where ; the classification can comfortably be held in RAM.; Returns:; the classification ImageServer. createThresholdServer; public static ImageServer<BufferedImage> createThresholdServer(ImageServer<BufferedImage> server,; Map<Integer,? extends Number> thresholds,; PathClass below,; PathClass aboveEquals); Create a new ImageServer by applying a threshold to one or more channels of another server.; This is particularly useful where one channel represents intensities to threshold, and one channel should be used as a mask. Parameters:; server - the server to threshold; thresholds - map between channel numbers (zero-based) and thresholds; below - the classification for pixels whose values are below the threshold in any channel; aboveEquals - the classification for pixels whose values are greater than or equal to the threshold in all channels; Returns:; the thresholded server. createThresholdServer; public static ImageServer<BufferedImage> createThresholdServer(ImageServer<BufferedImage> server,; int channel,; double threshold,; PathClass below,; PathClass aboveEquals); Create a new ImageServer by applying a threshold to one channel of another server. Parameters:; server - the server to threshold; channel - the channel to threshold (zero-based); threshold - the threshold value to apply; below - the classification for pixels below the threshold (must not be null); aboveEquals - the classification for pixels greater than or equal to the threshol",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html:13975,mask,mask,13975,javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/pixel/PixelClassifierTools.html,1,['mask'],['mask']
Availability,"point with the specified name.; ; Note that calling this method is not essential, because the Timeit will automatically ; be started when the first checkpoint is created. Parameters:; name - of the checkpoint; if null, a default name will be generated; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has previously been started; See Also:. start(); checkpoint(String). checkpointAndRun; public Timeit checkpointAndRun(Runnable runnable); throws UnsupportedOperationException; Create a checkpoint with the default name and immediately run the provided runnable.; ; Note that no checkpoint is made automatically after completion, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; runnable - the runnable to run; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpointAndRun; public Timeit checkpointAndRun(String name,; Runnable runnable); throws UnsupportedOperationException; Create a checkpoint and immediately run the provided Runnable.; ; Note that no checkpoint is made automatically after completion, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; name - the name of the checkpoint to create; runnable - the runnable to run; Returns:; this instance; Throws:; UnsupportedOperationException - if the Timeit has already been stopped. checkpointAndRun; public Timeit checkpointAndRun(String name,; Runnable runnable,; int nIterations); throws UnsupportedOperationException; Create a checkpoint and immediately run the provided Runnable nIterations times.; The purpose of this is to get better insights into the time required to run a self-contained block of code.; ; Note that no checkpoint is made automatically after completion of the final iteration, ; so you should generally print the output immediately, create a new checkpoint, or call stop(). Parameters:; name - base name o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html:5175,checkpoint,checkpointAndRun,5175,javadoc/docs/qupath/lib/common/Timeit.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/Timeit.html,3,['checkpoint'],"['checkpoint', 'checkpointAndRun']"
Availability,"pplication).; However this method can be used if QuPath is being launched some other way.; ; Afterwards, calls to getInstance() will return the QuPath instance. Parameters:; stage - the stage to use for the QuPath UI; Returns:; Throws:; IllegalStateException - if an instance of QuPath is already running (i.e. getInstance() is not null); See Also:. createInstance(Stage, HostServices); launchInstanceFromSwing(). createInstance; public static QuPathGUI createInstance(Stage stage,; HostServices hostServices); throws IllegalStateException; Static method to launch QuPath from a JavaFX application.; ; This is typically expected to be called in an Application.start(Stage) method, ; although could potentially be called later from another JavaFX application.; ; Afterwards, calls to getInstance() will return the QuPath instance. Parameters:; stage - the stage to use for the QuPath UI (usually from Application.start(Stage)); hostServices - host services from the JavaFX Application, if available; Returns:; Throws:; IllegalStateException - if an instance of QuPath is already running (i.e. getInstance() is not null); See Also:. createInstance(Stage); launchInstanceFromSwing(). createHiddenInstance; public static QuPathGUI createHiddenInstance(); throws IllegalStateException; Create a new QuPath instance that is not visible (i.e. its stage is not shown). Returns:; Throws:; IllegalStateException. launchInstanceFromSwing; public static void launchInstanceFromSwing(); Static method to launch QuPath from within a Swing/AWT application.; ; This aims to handle several things:; ; initializing JavaFX in the appropriate thread; flagging that shutting down QuPath should not terminate the JVM; showing the QuPath UI window. This can potentially be used from other environments (e.g. MATLAB, Fiji, Python).; Afterwards, calls to getInstance() will return the QuPath instance as soon as it is available.; However, note that depending upon the thread from which this method is called, the QuPath instan",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html:13545,avail,available,13545,javadoc/docs/qupath/lib/gui/QuPathGUI.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/QuPathGUI.html,1,['avail'],['available']
Availability,"precated; default T readBufferedImage(RegionRequest request); throws IOException; Deprecated.; since v0.4.0. Implementations of ImageServer should override readRegion(RegionRequest) instead.; This method will be removed in a future release; it exists now only to maintain compatibility with QuPath ; extensions that have not yet been updated to use the newer method. Legacy method to request pixels for a RegionRequest, now replaced by readRegion(RegionRequest).; This method is deprecated; if the generic parameter <T> represented ; anything other than a BufferedImage then its name became misleading. Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; Throws:; IOException. readRegion; default T readRegion(RegionRequest request); throws IOException; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; Throws:; IOException; Since:; v0.4.0; See Also:. readRegion(double, int, int, int, ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html:8742,down,downsample,8742,javadoc/docs/qupath/lib/images/servers/ImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html,1,['down'],['downsample']
Availability,"prefix to the name and setting daemon status. TiffWriterIJ. ImageWriter implementation to write TIFF images using ImageJ. TileClassificationsToAnnotationsPlugin<T>. Plugin to merge classified tiles into annotation objects. TileExporter. Helper class for exporting image tiles, typically for further analysis elsewhere or for training up an AI algorithm. TileListener<T>. Interface for anything that needs to know when image tiles become available. Tiler. A class used to split ROI or Geometry objects into rectangular tiles. Tiler.Builder;  ; Tiler.TileAlignment. Enum representing the possible alignments for tiles. TileRequest. A wrapper for a RegionRequest, useful to precisely specify image tiles at a particular resolution. TileRequestManager. Helper class to manage tile requests from an ImageServer. TilerPlugin<T>. Simple plugin to create square tiles, which may later have measurements added. Timeit. Helper class to time code execution. Timeit.Checkpoint. Class representing a named checkpoint with a timestamp in nanoseconds. TMACommands. Helper class implementing simple 'single-method' commands related to tissue microarrays for easy inclusion in the GUI. TMACoreObject. A special PathObject used exclusively to represent TMA cores. TMADataIO. Static methods for exporting TMA data, optionally with small images. TMADearrayer. Static methods used by the TMA dearrayer plugin. TMADearrayerPluginIJ. Plugin for automatically dearraying tissue microarrays (TMAs). TMAExplorer. The aim of this is to enable the exploration of TMA data from multiple images in a project. TMAGrid. Interface defining a (rectangular) TMA grid. TMAGridOverlay. An overlay capable of painting a TMA Grid. TMAMenuActions;  ; TMAScoreImporter. Helper class for importing data in connection with TMA slides. TMASummaryViewer; Deprecated.; since v0.4.0. ToolManager. Manage (drawing) tool selection in a QuPath UI. TransformedServerBuilder. Helper class for creating an ImageServer that applies one or more transforms ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/allclasses-index.html:58057,checkpoint,checkpoint,58057,javadoc/docs/allclasses-index.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/allclasses-index.html,1,['checkpoint'],['checkpoint']
Availability,"promptToSaveImageData(QuPathGUI qupath,; ImageData<BufferedImage> imageData,; boolean overwriteExisting). Prompt to save the specified ImageData. static void; promptToSelectObjectsByClassification(QuPathGUI qupath,; ImageData<?> imageData). Prompt to select objects according to their classifications. static void; promptToSetGridLineSpacing(OverlayOptions options). Prompt to input the spacing for the grid lines optionally displayed on viewers. static void; promptToSimplifySelectedAnnotations(ImageData<?> imageData,; double altitudeThreshold). Show a prompt to selected annotations in a hierarchy. static void; refreshObjectIDs(ImageData<?> imageData,; boolean duplicatesOnly). Refresh object IDs to ensure uniqueness. static void; reloadImageData(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Reload the specified image data from a previously saved version,if available. static File; requestUserDirectory(boolean promptIfMissing). Request the current user directory, optionally prompting the user to request a directory if none is available. static void; resetClassifications(ImageData<?> imageData,; Class<? extends PathObject> cls). Select objects that are instances of a specified class, logging an appropriate method in the workflow. static void; resetSelection(ImageData<?> imageData). Reset the selection for an image. static boolean; resetTMAMetadata(ImageData<?> imageData). Reset TMA metadata, if available. static void; runGeoJsonObjectExport(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a dialog to export object(s) to a GeoJSON file. static void; runObjectImport(QuPathGUI qupath,; ImageData<BufferedImage> imageData). Show a dialog to import object(s) from a file. static boolean; saveSnapshot(QuPathGUI qupath,; GuiTools.SnapshotType type). Save an image snapshot, prompting the user to select the output file. static void; selectAllObjects(ImageData<?> imageData). Select all objects (excluding the root object) in the imageData. static void; selectObject",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html:7011,avail,available,7011,javadoc/docs/qupath/lib/gui/commands/Commands.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/commands/Commands.html,1,['avail'],['available']
Availability,"property indicating whether the image should grow to fill the window (while maintaining its; aspect ratio).; If false, the image will grow no larger than its preferred width and height. See Also:. getExpandToWindow(); setExpandToWindow(boolean); expandToWindowProperty(). imageName; public ReadOnlyObjectProperty<String> imageNameProperty; Get a read-only property indicating the name of the image. See Also:. imageNameProperty(). image; public ReadOnlyObjectProperty<Image> imageProperty; Get a read-only property representing the JavaFX image. See Also:. getImage(); imageProperty(). bufferedImage; public ReadOnlyObjectProperty<BufferedImage> bufferedImageProperty; Get a read-only property representing the buffered image. See Also:. getBufferedImage(); bufferedImageProperty(). Constructor Details. SimpleImageViewer; public SimpleImageViewer(); Create a new simple image viewer.; The stage will be created, but not shown. Method Details. getPlaceholderText; public String getPlaceholderText(); Get the placeholder text to show if no image is available. Returns:. setPlaceholderText; public void setPlaceholderText(String placeholder); Set the placeholder text to show if no image is available. Parameters:; placeholder - . placeholderTextProperty; public StringProperty placeholderTextProperty(); Get the placeholder text to show if no image is available. Returns:; See Also:. getPlaceholderText(); setPlaceholderText(String). saturationPercentProperty; public DoubleProperty saturationPercentProperty(); Get the percentage of any non-8-bit image that should be saturated when applying auto contrast settings. Returns:; See Also:. getSaturationPercent(); setSaturationPercent(double). getSaturationPercent; public double getSaturationPercent(); Get the percentage of pixels to use when applying auto contrast settings to a non-8-bit image. Returns:. setSaturationPercent; public void setSaturationPercent(double percent); Set the percentage of pixels to use when applying auto contrast settings ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html:5504,avail,available,5504,javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/SimpleImageViewer.html,1,['avail'],['available']
Availability,"ps); Install colormaps. Parameters:; colorMaps - one or more colormaps.; Returns:; true if changes were made, false otherwise. getColors; public static int[] getColors(ColorMaps.ColorMap map,; int nValues,; boolean doInvert); Get an array of packed RGB values for a specific colormap. Parameters:; map - the colormap providing colors; nValues - the number of colors to extract; doInvert - if true, reverse the order of the colors; Returns:; an int array of length nValues. getDefaultColorMap; public static ColorMaps.ColorMap getDefaultColorMap(); Get a default, general-purpose ColorMaps.ColorMap. Returns:; See Also:. setDefaultColorMap(ColorMap). setDefaultColorMap; public static void setDefaultColorMap(ColorMaps.ColorMap colorMap); Set the default ColorMaps.ColorMap. Parameters:; colorMap - ; See Also:. getDefaultColorMap(). getColorMaps; public static Map<String,ColorMaps.ColorMap> getColorMaps(); Get an unmodifiable map representing all the currently-available colormaps. Returns:; the available colormaps. createColorMap; public static ColorMaps.ColorMap createColorMap(String name,; double[] r,; double[] g,; double[] b); Create a colormap using floating point values for red, green and blue.; These should be in the range 0-1. Parameters:; name - ; r - ; g - ; b - ; Returns:. createColorMap; public static ColorMaps.ColorMap createColorMap(String name,; int[] r,; int[] g,; int[] b); Create a colormap using integer values for red, green and blue.; These should be in the range 0-255. Parameters:; name - ; r - ; g - ; b - ; Returns:. createColorMap; public static ColorMaps.ColorMap createColorMap(String name,; int r,; int g,; int b); Create a colormap using int values for red, green and blue corresponding to the maximum value; ; the minimum color will be black.; These should be in the range 0-255. Parameters:; name - ; r - ; g - ; b - ; Returns:. gammaColorMap; public static ColorMaps.ColorMap gammaColorMap(ColorMaps.ColorMap map,; double gamma); Apply gamma to a colormap.; T",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorMaps.html:3830,avail,available,3830,javadoc/docs/qupath/lib/color/ColorMaps.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorMaps.html,1,['avail'],['available']
Availability,"pting. Parameters:; path - ; Returns:. clipValue; public static int clipValue(int value,; int min,; int max); Clip a value to be within a specific range. Parameters:; value - ; min - ; max - ; Returns:. clipValue; public static double clipValue(double value,; double min,; double max); Clip a value to be within a specific range. Parameters:; value - ; min - ; max - ; Returns:. almostTheSame; public static boolean almostTheSame(double n1,; double n2,; double tolerance); Test if two doubles are approximately equal, within a specified tolerance.; ; Relies on apache.common's method as the history of this method proved this task not as straightforward as initially thought.; ; Note that this calculation changed in v0.2.0-m4 and in v0.3.0. The behavior prior to v0.2.0-m4 divided the absolute difference ; by the first value only, which is not robust to differences in the input order or if the first value is negative. The behavior ; before v0.3.0 returned whether the absolute difference divided by the average is less than the specified tolerance. Parameters:; n1 - ; n2 - ; tolerance - ; Returns:. toURI; public static URI toURI(String path); throws URISyntaxException; Try to convert a path to a URI.; ; This currently does a very simple check for a known scheme at the beginning ; (""http:"", ""https:"" or """"file:"") to see if it can construct the URI directly; ; if not, it assumes the path refers to a local file (as it generally did in ; QuPath 0.1.2 and earlier). This method does not encode special characters. Parameters:; path - ; Returns:; Throws:; URISyntaxException; See Also:. toEncodedURI(String path). toEncodedURI; public static URI toEncodedURI(String path); throws URISyntaxException,; UnsupportedEncodingException,; MalformedURLException; Try to convert a path to an encoded URI.; ; URIs do not accept some characters (e.g. ""|""). This method will perform a simple check for; http: and https: schemes at the beginning of the URI. It will then modify ; the Query (@see Query) ; to a",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html:13452,toler,tolerance,13452,javadoc/docs/qupath/lib/common/GeneralTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/common/GeneralTools.html,1,['toler'],['tolerance']
Availability,"ption; Set the current image for this viewer. Parameters:; imageDataNew - ; Throws:; IOException. resetImageData; public void resetImageData(); Reset the image data to null. fireImageDataChanged; protected void fireImageDataChanged(ImageData<BufferedImage> imageDataPrevious,; ImageData<BufferedImage> imageDataNew). fireVisibleRegionChangedEvent; protected void fireVisibleRegionChangedEvent(Shape shape). repaintEntireImage; public void repaintEntireImage(); Request that the entire image is repainted, including the thumbnail.; This should be called whenever a major change in display is triggered, such as ; changing the brightness/contrast or lookup table.; Otherwise, repaint() is preferable. See Also:. repaint(). getMagnification; public double getMagnification(); Get the magnification for the image within this viewer, or Double.NaN if no image is present.; This is mostly for display; getDownsampleFactor() is more meaningful.; The actual value of the magnification depends upon whether any magnification value is available ; within the image metadata. Returns:. getFullMagnification; public double getFullMagnification(); Get the full magnification for the image.; This is either the magnification value stored within the current image metadata, ; or 1.0 if no suitable image or metadata is available. Returns:. setMagnification; public void setMagnification(double magnification); Set the downsample factor based upon magnification values.; In general, setDownsampleFactor(double) should be used directly in preference to this method. Parameters:; magnification - . closeViewer; public void closeViewer(); Request that this viewer is closed.; This unbinds the viewer from any properties it may be observing,; and also triggers QuPathViewerListener.viewerClosed(QuPathViewer) calls for ; any viewer listeners. paintComponent; protected void paintComponent(Graphics g). paintViewer; protected void paintViewer(Graphics g,; int w,; int h). getMaxROIHandleSize; public double getMaxROIHandle",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:25742,avail,available,25742,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,1,['avail'],['available']
Availability,"ptional overlay layers.; This provides more fine-grained control of how the rendering is performed than RenderedImageServer.createRenderedServer(QuPathViewer). Constructor Summary; Constructors. Constructor; Description; Builder(QuPathViewer viewer). Create a rendered image server build using viewer defaults. Builder(ImageData<BufferedImage> imageData). Create a rendered image server for the specified ImageData;. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; RenderedImageServer.Builder; backgroundColor(int rgb,; boolean keepAlpha). Specify a base color. RenderedImageServer.Builder; backgroundColor(Color color). Specify a base color. ImageServer<BufferedImage>; build(). Create the rendered image server. RenderedImageServer.Builder; display(ImageDisplay display). Deprecated.; use renderer(ImageRenderer) instead (since an ImageDisplay is also an ImageRenderer. RenderedImageServer.Builder; downsamples(double... downsamples). Specify downsamples; this is especially important for 'thick' objects (annotations, TMA cores); because the downsamples define the resolutions at which these will be rendered. RenderedImageServer.Builder; layers(Collection<PathOverlay> layers). Specify one or more overlay layers as a collection. RenderedImageServer.Builder; layers(PathOverlay... layers). Specify one or more overlay layers. RenderedImageServer.Builder; overlayOpacity(double opacity). Specify the opacity for overlay layers. RenderedImageServer.Builder; renderer(ImageRenderer renderer). Specify the ImageRenderer that controls conversion to RGB. RenderedImageServer.Builder; settings(ImageDisplaySettings settings). Specify the ImageDisplaySettings that control conversion to RGB. RenderedImageServer.Builder; store(DefaultImageRegionStore store). Specify the region store used to paint the underlying image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, to",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html:1658,down,downsamples,1658,javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html,1,['down'],['downsamples']
Availability,"public static String showInputDialog(String title,; String message,; String initialInput); Deprecated.; Show an input dialog requesting a String input. Parameters:; title - ; message - ; initialInput - ; Returns:. showChoiceDialog; public static <T> T showChoiceDialog(String title,; String message,; T[] choices,; T defaultChoice); Deprecated.; Show a choice dialog with an array of choices (selection from ComboBox or similar). Type Parameters:; T - ; Parameters:; title - dialog title; message - dialog prompt; choices - array of available options; defaultChoice - initial selected option; Returns:; chosen option, or null if the user cancels the dialog. showChoiceDialog; public static <T> T showChoiceDialog(String title,; String message,; Collection<T> choices,; T defaultChoice); Deprecated.; Show a choice dialog with a collection of choices (selection from ComboBox or similar). Type Parameters:; T - ; Parameters:; title - dialog title; message - dialog prompt; choices - list of available options; defaultChoice - initial selected option; Returns:; chosen option, or null if the user cancels the dialog. showErrorMessage; public static void showErrorMessage(String title,; Throwable e); Deprecated.; Show an error message, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; Throwable e); Deprecated.; Show an error notification, displaying the localized message of a Throwable. Parameters:; title - ; e - . showErrorNotification; public static void showErrorNotification(String title,; String message); Deprecated.; Show an error notification. Parameters:; title - ; message - . showWarningNotification; public static void showWarningNotification(String title,; String message); Deprecated.; Show a warning notification. Parameters:; title - ; message - . showInfoNotification; public static void showInfoNotification(String title,; String message); Deprecated.; Show an info notifica",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html:8576,avail,available,8576,javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/dialogs/Dialogs.html,1,['avail'],['available']
Availability,"public static boolean installColorMaps(ColorMaps.ColorMap... colorMaps); Install colormaps. Parameters:; colorMaps - one or more colormaps.; Returns:; true if changes were made, false otherwise. getColors; public static int[] getColors(ColorMaps.ColorMap map,; int nValues,; boolean doInvert); Get an array of packed RGB values for a specific colormap. Parameters:; map - the colormap providing colors; nValues - the number of colors to extract; doInvert - if true, reverse the order of the colors; Returns:; an int array of length nValues. getDefaultColorMap; public static ColorMaps.ColorMap getDefaultColorMap(); Get a default, general-purpose ColorMaps.ColorMap. Returns:; See Also:. setDefaultColorMap(ColorMap). setDefaultColorMap; public static void setDefaultColorMap(ColorMaps.ColorMap colorMap); Set the default ColorMaps.ColorMap. Parameters:; colorMap - ; See Also:. getDefaultColorMap(). getColorMaps; public static Map<String,ColorMaps.ColorMap> getColorMaps(); Get an unmodifiable map representing all the currently-available colormaps. Returns:; the available colormaps. createColorMap; public static ColorMaps.ColorMap createColorMap(String name,; double[] r,; double[] g,; double[] b); Create a colormap using floating point values for red, green and blue.; These should be in the range 0-1. Parameters:; name - ; r - ; g - ; b - ; Returns:. createColorMap; public static ColorMaps.ColorMap createColorMap(String name,; int[] r,; int[] g,; int[] b); Create a colormap using integer values for red, green and blue.; These should be in the range 0-255. Parameters:; name - ; r - ; g - ; b - ; Returns:. createColorMap; public static ColorMaps.ColorMap createColorMap(String name,; int r,; int g,; int b); Create a colormap using int values for red, green and blue corresponding to the maximum value; ; the minimum color will be black.; These should be in the range 0-255. Parameters:; name - ; r - ; g - ; b - ; Returns:. gammaColorMap; public static ColorMaps.ColorMap gammaColorMap(C",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorMaps.html:3795,avail,available,3795,javadoc/docs/qupath/lib/color/ColorMaps.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/color/ColorMaps.html,1,['avail'],['available']
Availability,"put representing potential TMA core labels. parseTransformMatrix(String) - Static method in class qupath.lib.roi.GeometryTools. Parse the matrix (String) to create and return an AffineTransformation. paste() - Method in class qupath.lib.gui.scripting.richtextfx.CodeAreaControl;  ; paste() - Method in interface qupath.lib.gui.scripting.ScriptEditorControl. Request paste from the system clipboard. paste() - Method in class qupath.lib.gui.scripting.TextAreaControl;  ; PASTE - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.Actions;  ; PASTE_TO_PLANE - Variable in class qupath.lib.gui.actions.menus.EditMenuActions.Actions;  ; pasteAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; pasteAndEscapeAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; pasteFromClipboard(QuPathGUI, boolean) - Static method in class qupath.lib.gui.commands.Commands. Attempt to paste objects from the system clipboard to the current image, if available; ; otherwise, check for text on the clipboard and paste it into a new script editor tab. pasteFromClipboard(ScriptEditorControl<?>, boolean) - Static method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; PatchClassifierParams - Class in qupath.opencv.ml. Parameters required to build a classifier that operates on an image patch. PatchClassifierParams.Builder - Class in qupath.opencv.ml. Builder class to create PatchClassifierParams. patchSize(int) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the requested square patch size. patchSize(int, int) - Method in class qupath.opencv.ml.PatchClassifierParams.Builder. Define the requested patch size. PathAnnotationObject - Class in qupath.lib.objects. An annotation PathObject. PathAnnotationObject() - Constructor for class qupath.lib.objects.PathAnnotationObject. Default constructor. PathCellObject - Class in qupath.lib.objects. A subclass of a PathDetectionObject, which also supports storing an (optional) ex",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:750967,avail,available,750967,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"putHandler<S,T,U> outputHandler); Set the output handler. This is optional, for cases where the processor does not make updates to the; parent object itself. Parameters:; outputHandler - ; Returns:. processor; public PixelProcessor.Builder<S,T,U> processor(Processor<S,T,U> processor); Set the processor. This is required to do any interesting work. Parameters:; processor - ; Returns:. padding; public PixelProcessor.Builder<S,T,U> padding(Padding padding); Set the padding to use when extracting regions.; Note that this is defined in pixels at the full image resolution, not the downsampled resolution. Parameters:; padding - ; Returns:. padding; public PixelProcessor.Builder<S,T,U> padding(int size); Set the padding to use when extracting regions, using a symmetric padding.; Note that this is defined in pixels at the full image resolution, not the downsampled resolution. Parameters:; size - ; Returns:. downsample; public PixelProcessor.Builder<S,T,U> downsample(double downsample); Set the downsample factor to use with requesting image regions. Parameters:; downsample - ; Returns:. pixelSize; public PixelProcessor.Builder<S,T,U> pixelSize(double pixelSize); Set the requested pixel size to use with requesting image regions.; This will be converted to a downsample factor based on the image calibration. Parameters:; pixelSize - ; Returns:. tiler; public PixelProcessor.Builder<S,T,U> tiler(Tiler tiler); Set a tiler to use. This is required for large regions, so that the image can be processed in tiles. Parameters:; tiler - ; Returns:. tile; public PixelProcessor.Builder<S,T,U> tile(int tileWidth,; int tileHeight); Set a default tiler to use, with a specified tile size. Parameters:; tileWidth - ; tileHeight - ; Returns:. merger; public PixelProcessor.Builder<S,T,U> merger(ObjectMerger merger); Set a merger to use. This is currently only relevant when using a tiler. Parameters:; merger - ; Returns:; See Also:. mergeSharedBoundaries(double). mergeSharedBoundaries; public PixelPr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html:3975,down,downsample,3975,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,3,['down'],['downsample']
Availability,"put in);  ; void; removeStep(int ind). Remove a single step, identified by its list index. void; removeStep(WorkflowStep step). Remove a single step, firing an update event if the step was successfully removed. void; removeSteps(Collection<WorkflowStep> steps). Remove a collection of steps, firing an update event if the workflow was changed. void; removeWorkflowListener(WorkflowListener listener). Remove a listener for changes to the workflow. void; replaceLastStep(WorkflowStep step). Replace the most recently added step with this one. int; size(). Total number of steps in the workflow. void; writeExternal(ObjectOutput out);  . Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Workflow; public Workflow(). Method Details. getSteps; public List<WorkflowStep> getSteps(); Get an unmodifiable list of the steps. Returns:. getLastStep; public WorkflowStep getLastStep(); Get the last WorkflowStep in the workflow, or null if no steps are available. Returns:. addStep; public void addStep(WorkflowStep step); Append a new step to the end of the workflow, firing an update event. Parameters:; step - . addSteps; public void addSteps(Collection<WorkflowStep> steps); Append multiple steps to the end of the workflow, firing a single update event. Parameters:; steps - . removeStep; public void removeStep(int ind); Remove a single step, identified by its list index. Parameters:; ind - . removeStep; public void removeStep(WorkflowStep step); Remove a single step, firing an update event if the step was successfully removed. Parameters:; step - . removeSteps; public void removeSteps(Collection<WorkflowStep> steps); Remove a collection of steps, firing an update event if the workflow was changed. Parameters:; steps - . replaceLastStep; public void replaceLastStep(WorkflowStep step); Replace the most recently added step with this one. Parameters:; step - . size; public int size(); T",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/Workflow.html:2932,avail,available,2932,javadoc/docs/qupath/lib/plugins/workflow/Workflow.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/workflow/Workflow.html,1,['avail'],['available']
Availability,"quals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. startupMessage; @BooleanPref(""Prefs.General.showStartupMessage""); public final BooleanProperty startupMessage. startupScriptPath; @FilePref(value=""Prefs.General.startupScriptPath"",; extensions=""*.groovy""); public final StringProperty startupScriptPath. autoUpdate; @Pref(value=""Prefs.General.checkForUpdates"",; type=AutoUpdateType.class); public final ObjectProperty<PathPrefs.AutoUpdateType> autoUpdate. systemMenubar; @Pref(value=""Prefs.General.systemMenubar"",; type=SystemMenuBarOption.class); public final ObjectProperty<SystemMenuBar.SystemMenuBarOption> systemMenubar. maxMemoryGB; @DoublePref(""Prefs.General.maxMemory""); public final DoubleProperty maxMemoryGB. tileCache; @DoublePref(""Prefs.General.tileCache""); public final DoubleProperty tileCache. showImageNameInTitle; @BooleanPref(""Prefs.General.showImageNameInTitle""); public final BooleanProperty showImageNameInTitle. maskImageNames; @BooleanPref(""Prefs.General.maskImageNames""); public final BooleanProperty maskImageNames. createLogFiles; @BooleanPref(""Prefs.General.logFiles""); public final BooleanProperty createLogFiles. logLevel; @Pref(value=""Prefs.General.logLevel"",; type=LogLevel.class); public final ObjectProperty<LogManager.LogLevel> logLevel. numThreads; @IntegerPref(""Prefs.General.numThreads""); public final IntegerProperty numThreads. setImageType; @Pref(value=""Prefs.General.imageType"",; type=ImageTypeSetting.class); public final ObjectProperty<PathPrefs.ImageTypeSetting> setImageType. commandBarDisplay; @Pref(value=""Prefs.General.commandBar"",; type=CommandBarDisplay.class); public final ObjectProperty<CommandFinderTools.CommandBarDisplay> commandBarDisplay. showExperimentalCommands; @BooleanPref(""Prefs.General.showExperimental""); public final BooleanProperty showExperimentalCommands. showTMACommands; @BooleanPref(""Prefs.General.showTMA""); public final BooleanProperty showTMACommands. showDeprecatedCommands; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html:2734,mask,maskImageNames,2734,javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html,1,['mask'],['maskImageNames']
Availability,"quals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface java.lang.AutoCloseable; close. Methods inherited from interface qupath.lib.images.servers.ImageServer; getAssociatedImage, getAssociatedImageList, getBuilder, getCachedTile, getChannel, getDefaultThumbnail, getDownsampleForResolution, getHeight, getImageClass, getMetadata, getPath, getPixelCalibration, getPixelType, getPreferredDownsamples, getTileRequestManager, getWidth, isEmptyRegion, isRGB, nChannels, nResolutions, nTimepoints, nZSlices, readBufferedImage, readRegion, readRegion, readRegion, setMetadata. Method Details. createRenderedServer; public static ImageServer<BufferedImage> createRenderedServer(QuPathViewer viewer); throws IOException; Create an ImageServer that returns tiles based on how approximately they would appear within the viewer.; Note that; ; the server uses fixed downsample values, while the viewer can adapt annotation line thickness continuously - ; therefore the agreement is not exact; changing display settings in the viewer may impact how later tiles are rendered; the server cannot be serialized to JSON. The intention is to treat this as a throwaway server used to create rendered images including color transforms and overlays, ; which will be saved to disk. Parameters:; viewer - ; Returns:; Throws:; IOException; See Also:. RenderedImageServer.Builder. createRenderedServer; public static ImageServer<BufferedImage> createRenderedServer(ImageServer<BufferedImage> server,; ImageRenderer renderer); throws IOException; Create an ImageServer that converts the image to RGB using the specified ImageRenderer. Parameters:; server - ; renderer - ; Returns:; Throws:; IOException. getURIs; public Collection<URI> getURIs(); Description copied from interface: ImageServer; Get the URIs for images required for this server. ; In the simplest case, this is a singleton list returning a URI representing a local ; file. However, some ImageServers may not have an assoc",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html:4172,down,downsample,4172,javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.html,1,['down'],['downsample']
Availability,"qupath.lib.regions.ImagePlane;  ; equals(Object) - Method in class qupath.lib.regions.ImageRegion;  ; equals(Object) - Method in class qupath.lib.regions.RegionRequest;  ; equals(Object) - Method in class qupath.opencv.tools.LocalNormalization.SmoothingScale;  ; equals(Object) - Method in class qupath.process.gui.commands.ml.BoundaryStrategy;  ; equals(Object) - Method in class qupath.process.gui.commands.ml.ClassificationResolution;  ; equalTo(String) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification (by name) for objects for which the specified measurement has a value exactly equal to the threshold. equalTo(PathClass) - Method in class qupath.lib.classifiers.object.ObjectClassifiers.ClassifyByMeasurementBuilder. Set the classification for objects for which the specified measurement has a value exactly equal to the threshold. error() - Method in class qupath.lib.gui.dialogs.Dialogs.Builder. Deprecated.; Create an error alert dialog. error(String) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text. error(String, int) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with static text and a count. error(ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create a error message to show a count of errors. error(ObservableValue<String>) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message. error(ObservableValue<String>, ObservableNumberValue) - Static method in class qupath.lib.gui.actions.InfoMessage. Create an error message with a count. ERROR - Enum constant in enum class qupath.lib.gui.actions.InfoMessage.MessageType. Error or exception. ERROR - Enum constant in enum class qupath.lib.gui.logging.LogManager.LogLevel. Error logging (only if something goes recognizably wrong). escapeFilePath(String) - Static method in class qupath.lib.common.GeneralTools. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:283120,error,error,283120,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['error'],['error']
Availability,"r - ; roi - ; downsampleFactor - ; plane - ; Returns:. convertLabelsToCells; public static SortedMap<Number,PathObject> convertLabelsToCells(ImageProcessor ipNuclei,; ImageProcessor ipCells,; Calibration cal,; double downsample,; ImagePlane plane); Convert integer labeled images into cell objects. Parameters:; ipNuclei - labels corresponding to cell nuclei; non-zero values here must be identical to the values in ipCells; ipCells - labels corresponding to full cell areas; cal - a Calibration object used to aid conversion between ImageJ and QuPath ROIs; downsample - the downsample value for the ImageProcessors, used to aid conversion between ImageJ and QuPath ROIs; plane - the ImagePlane defining where ROIs should be added; Returns:; a SortedMap containing integer labels from the original labeled images mapped to the corresponding cells that have been created. convertLabelsToCells; public static SortedMap<Number,PathObject> convertLabelsToCells(ImageProcessor ipNuclei,; ImageProcessor ipCells,; double xOrigin,; double yOrigin,; double downsample,; ImagePlane plane); Convert integer labeled images into cell objects. Parameters:; ipNuclei - labels corresponding to cell nuclei; non-zero values here must be identical to the values in ipCells; ipCells - labels corresponding to full cell areas; xOrigin - the x pixel coordinate for the top left corner of the image, used to aid conversion between ImageJ and QuPath ROIs; equivalent to Calibration.xOrigin; yOrigin - the y pixel coordinate for the top left corner of the image, used to aid conversion between ImageJ and QuPath ROIs; equivalent to Calibration.yOrigin; downsample - the downsample value for the ImageProcessors, used to aid conversion between ImageJ and QuPath ROIs; plane - the ImagePlane defining where ROIs should be added; Returns:; a SortedMap containing integer labels from the original labeled images mapped to the corresponding cells that have been created. quickShowImage; public static void quickShowImage(String ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:19200,down,downsample,19200,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,1,['down'],['downsample']
Availability,"r browser.    ; Skip navigation links. Overview; Package; Class; Tree; Deprecated; Index; Help. Summary:. Nested; Field; Constr; Method. Detail:. Field; Constr; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.panes; Class PreferencePane.GeneralPreferences. java.lang.Object; qupath.lib.gui.panes.PreferencePane.GeneralPreferences. Enclosing class:; PreferencePane. @PrefCategory(""Prefs.General""); public static class PreferencePane.GeneralPreferences; extends Object. Field Summary; Fields. Modifier and Type; Field; Description; final ObjectProperty<PathPrefs.AutoUpdateType>; autoUpdate;  ; final ObjectProperty<CommandFinderTools.CommandBarDisplay>; commandBarDisplay;  ; final BooleanProperty; createLogFiles;  ; final ObjectProperty<PathPrefs.DetectionTreeDisplayModes>; hierarchyDisplayMode;  ; final ObjectProperty<LogManager.LogLevel>; logLevel;  ; final BooleanProperty; maskImageNames;  ; final DoubleProperty; maxMemoryGB;  ; final IntegerProperty; numThreads;  ; final ObjectProperty<PathPrefs.ImageTypeSetting>; setImageType;  ; final BooleanProperty; showDeprecatedCommands;  ; final BooleanProperty; showExperimentalCommands;  ; final BooleanProperty; showImageNameInTitle;  ; final BooleanProperty; showTMACommands;  ; final BooleanProperty; startupMessage;  ; final StringProperty; startupScriptPath;  ; final ObjectProperty<SystemMenuBar.SystemMenuBarOption>; systemMenubar;  ; final DoubleProperty; tileCache;  . Constructor Summary; Constructors. Constructor; Description; GeneralPreferences();  . Method Summary. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Field Details. startupMessage; @BooleanPref(""Prefs.General.showStartupMessage""); public final BooleanProperty startupMessage. startupScriptPath; @FilePref(value=""Prefs.General.startupScriptPath"",; extensions=""*.groovy""); public final StringPropert",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html:1042,mask,maskImageNames,1042,javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/panes/PreferencePane.GeneralPreferences.html,1,['mask'],['maskImageNames']
Availability,"r for class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; doLogCountsProperty() - Method in class qupath.lib.gui.commands.display.BrightnessContrastHistogramPane. Property to control whether the histogram shows pixel counts, or the natural logarithm of the counts. DONE - Enum constant in enum class qupath.lib.plugins.ParallelTileObject.Status. Tile processing complete. DOUBLE - Enum constant in enum class qupath.lib.measurements.MeasurementList.MeasurementListType. A list backed by an array of doubles. doubleClickToZoom - Variable in class qupath.lib.gui.panes.PreferencePane.ViewerPreferences;  ; doubleClickToZoomProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request that double-clicking the viewer can be used to zoom in. DoubleParameter - Class in qupath.lib.plugins.parameters. Parameter to represent a floating point numeric value. doUpdateHierarchy() - Method in class qupath.lib.scripting.ScriptParameters. Request whether to fire an update event for the object hierarchy, if an image data ; object is available. doUpdateHierarchy(boolean) - Method in class qupath.lib.scripting.ScriptParameters.Builder. Optionally request a hierarchy update event after running a script; (default is true for scripts that operate on image data). doWatershed(ImageProcessor, ImageProcessor, boolean) - Static method in class qupath.imagej.processing.Watershed. Apply a watershed transform. doWatershed(ImageProcessor, ImageProcessor, double, boolean) - Static method in class qupath.imagej.processing.Watershed. Apply an intensity-constrained watershed transform, preventing regions from expanding to pixels below a specified minimum threshold. doWatershed(Mat, Mat, boolean) - Static method in class qupath.opencv.tools.ProcessingCV. Apply a watershed transform. doWatershed(Mat, Mat, double, boolean) - Static method in class qupath.opencv.tools.ProcessingCV. Apply an intensity-constrained watershed transform, preventing regions from expanding to pixels below a specified",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:269609,avail,available,269609,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"r from the viewer grid, if possible. void; detachViewerFromGrid(QuPathViewer viewer). Detach the specified viewer from the viewer grid, if possible. QuPathViewer; getActiveViewer(). Get the value of activeViewerProperty(). ObservableList<QuPathViewer>; getAllViewers(). Get an observable list of viewers. OverlayOptions; getOverlayOptions(). Get the overlay options shared by all viewers created by this manager. Region; getRegion(). Get the region node that can be added to a scene graph to display the viewers. boolean; getSynchronizeViewers(). Gets the value of the synchronizeViewers property. void; imageDataChanged(QuPathViewer viewer,; ImageData<BufferedImage> imageDataOld,; ImageData<BufferedImage> imageDataNew). Called with the image data within a viewer has changed. ReadOnlyObjectProperty<ImageData<BufferedImage>>; imageDataProperty(). Read-only property containing the image open within the currently-active viewer. void; matchResolutions(). Match the display resolutions (downsamples) of all viewers to match the current viewer. void; refreshTitles(). Request that viewers refresh their titles. boolean; removeColumn(QuPathViewer viewer). Try to remove the column containing the specified viewer, notifying the user if this isn't possible. boolean; removeRow(QuPathViewer viewer). Try to remove the row containing the specified viewer, notifying the user if this isn't possible. void; repaintAllViewers(). Request that all viewers are repainted as soon as possible. void; resetGridSize();  ; void; selectedObjectChanged(QuPathViewer viewer,; PathObject pathObjectSelected). Called when the primary selected object has changed in a viewer. void; setActiveViewer(QuPathViewer viewer). Sets the value of the activeViewer property. boolean; setGridSize(int nRows,; int nCols). Set the grid to have a specific number of rows and columns. void; setSynchronizeViewers(boolean synchronizeViewers). Sets the value of the synchronizeViewers property. BooleanProperty; showLocationProperty(). Sh",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html:3093,down,downsamples,3093,javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/ViewerManager.html,1,['down'],['downsamples']
Availability,"r pyramidal levels. LICENSE - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; limitDatapoints(int) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Choose the maximum number of supported datapoints. LINE - Enum constant in enum class qupath.lib.roi.interfaces.ROI.RoiType. ROI represents a line or polyline. LINE - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Line drawing tool. LINE_OR_ARROW - Static variable in class qupath.lib.gui.viewer.tools.PathTools. Extended PathTool that can switch between drawing lines or arrows. LINE_TOOL - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; LINE_TOOL - Variable in class qupath.lib.gui.ToolManager;  ; LineROI - Class in qupath.lib.roi. ROI representing a straight line, defined by its end points. lineThickness(float) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Thickness of boundary lines and line annotations, defined in terms of pixels at the ; resolution specified by the downsample value of the server. lineWidthProperty() - Method in class qupath.lib.gui.charts.ChartThresholdPane. Line width property used for displaying threshold lines. LINK - Enum constant in enum class qupath.lib.extension.svg.SvgTools.SvgBuilder.ImageIncludeType. Link the image (to a separate PNG). linkImages() - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Specify whether the underlying (raster) image should be included in any export. loadDensityMap(String) - Static method in class qupath.lib.scripting.QP. Load a density map for a project or file path. loadDensityMap(Path) - Static method in class qupath.lib.analysis.heatmaps.DensityMaps. Load a DensityMaps.DensityMapBuilder from the specified path. loadDisplaySettings(String) - Static method in class qupath.lib.gui.scripting.QPEx. Load a display settings object from a file path or from the current project. loadImageData(String, boolean) - Static method in class qupath.lib.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:652728,down,downsample,652728,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['down'],['downsample']
Availability,"r(ImageSupplier<S> imageSupplier); Set the image supplier. This is required if the processor is to have access to pixels. Parameters:; imageSupplier - ; Returns:. maskSupplier; public PixelProcessor.Builder<S,T,U> maskSupplier(MaskSupplier<S,T> maskSupplier); Set the mask supplier. This is optional, but without it masks will be null. Parameters:; maskSupplier - ; Returns:. outputHandler; public PixelProcessor.Builder<S,T,U> outputHandler(OutputHandler<S,T,U> outputHandler); Set the output handler. This is optional, for cases where the processor does not make updates to the; parent object itself. Parameters:; outputHandler - ; Returns:. processor; public PixelProcessor.Builder<S,T,U> processor(Processor<S,T,U> processor); Set the processor. This is required to do any interesting work. Parameters:; processor - ; Returns:. padding; public PixelProcessor.Builder<S,T,U> padding(Padding padding); Set the padding to use when extracting regions.; Note that this is defined in pixels at the full image resolution, not the downsampled resolution. Parameters:; padding - ; Returns:. padding; public PixelProcessor.Builder<S,T,U> padding(int size); Set the padding to use when extracting regions, using a symmetric padding.; Note that this is defined in pixels at the full image resolution, not the downsampled resolution. Parameters:; size - ; Returns:. downsample; public PixelProcessor.Builder<S,T,U> downsample(double downsample); Set the downsample factor to use with requesting image regions. Parameters:; downsample - ; Returns:. pixelSize; public PixelProcessor.Builder<S,T,U> pixelSize(double pixelSize); Set the requested pixel size to use with requesting image regions.; This will be converted to a downsample factor based on the image calibration. Parameters:; pixelSize - ; Returns:. tiler; public PixelProcessor.Builder<S,T,U> tiler(Tiler tiler); Set a tiler to use. This is required for large regions, so that the image can be processed in tiles. Parameters:; tiler - ; Returns:. tile",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html:3596,down,downsampled,3596,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,1,['down'],['downsampled']
Availability,"r); Set the downsample factor for this viewer. Parameters:; downsampleFactor - . getThumbnail; public BufferedImage getThumbnail(); Get a thumbnail representing the image as displayed by this viewer. Returns:. getAllThumbnails; public List<BufferedImage> getAllThumbnails(); Get thumbnails for all z-slices & time points. Returns:. getRGBThumbnail; public BufferedImage getRGBThumbnail(); Get a thumbnail representing the image as displayed by this viewer.; ; Note: This will be a color (aRGB) image, with any color transforms applied -; therefore should not be used to extract 'original' pixel values. Returns:. setDownsampleFactor; public void setDownsampleFactor(double downsampleFactor,; double cx,; double cy); Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards.; The purpose is to make it possible to zoom in/out while keeping the cursor focussed on a particular location.; ; The specified downsample factor will automatically be clipped to the range getMinDownsample to getMaxDownsample. Parameters:; downsampleFactor - ; cx - ; cy - . setDownsampleFactor; public void setDownsampleFactor(double downsampleFactor,; double cx,; double cy,; boolean clipToMinMax); Set downsample factor, so that the specified coordinate in the image space is not shifted in the viewer afterwards.; The purpose is to make it possible to zoom in/out while keeping the cursor focused on a particular location. Parameters:; downsampleFactor - ; cx - ; cy - ; clipToMinMax - If true, the specified downsample factor will be clipped ; to the range getMinDownsample to getMaxDownsample. getZoomToFitDownsampleFactor; protected double getZoomToFitDownsampleFactor(). getServerWidth; public int getServerWidth(); Get the width in pixels of the full resolution of the current image, or 0 if no image is currently open. Returns:. getServerHeight; public int getServerHeight(); Get the height in pixels of the full resolution of the current image, or 0 if no i",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html:29480,down,downsample,29480,javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/QuPathViewer.html,1,['down'],['downsample']
Availability,"r); throws IOException; Convert a labeled image to objects. Parameters:; path - path to labeled image file (e.g. PNGs); request - a RegionRequest representing the region or the full image, used to reposition and rescale ROIs.; If not provided, this will be extracted from the filename, if possible.; creator - function used to convert a ROI and numeric label to an object; Returns:; a list of objects generated from the labels; Throws:; IOException - if there is an error reading the images. parseRegion; public static RegionRequest parseRegion(String name,; int width,; int height); Attempt to parse a RegionRequest corresponding to an image region from the file name.; ; This is used whenever a tile has been extracted from a larger image for further processing, ; and then there is a need to get the information back to the full-resolution image later. Parameters:; name - file name; width - labeled image width, used to calculate the downsample if required; use -1 to ignore this; height - labeled image height, used to calculate the downsample if required; use -1 to ignore this; Returns:; a RegionRequest that may be used to transform ROIs. createObjects; public static List<PathObject> createObjects(Raster raster,; int band,; RegionRequest region,; int minLabel,; int maxLabel,; BiFunction<ROI,Number,PathObject> creator); Create objects from one band of a raster containing integer labels. Parameters:; raster - the raster containing integer label values; band - the band of interest (usually 0); region - region used to convert coordinates into the full image space (optional); minLabel - minimum label; usually 1, but may be 0 if a background ROI should be created; maxLabel - maximum label; if less than minLabel, the maximum label will be found in the image and used; creator - function to convert the traced ROI and associated numeric label into a PathObject; Returns:; a list of all created objects. createObjects; public static List<PathObject> createObjects(SimpleImage image,; Region",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html:10228,down,downsample,10228,javadoc/docs/qupath/lib/analysis/images/ContourTracing.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/analysis/images/ContourTracing.html,2,['down'],['downsample']
Availability,"r.Builder; parallelize(boolean doParallel). Specify if tile export should be parallelized if possible, with the default number of threads (current 4). OMEPyramidWriter.Builder; parallelize(int nThreads). Specify if tile export should be parallelized if possible, with the requested number of threads. OMEPyramidWriter.Builder; pixelType(String exportPixelType). Specify the output PixelType as a String, e.g. OMEPyramidWriter.Builder; pixelType(PixelType exportPixelType). Specify the output PixelType. OMEPyramidWriter.Builder; region(int x,; int y,; int width,; int height). Define the region to export based on a bounding box. OMEPyramidWriter.Builder; region(ImageRegion region). Define the region to export, including the z-slice and time point. OMEPyramidWriter.Builder; scaledDownsampling(double scale). Downsample by specific increasing factor each time (e.g. OMEPyramidWriter.Builder; scaledDownsampling(double minDownsample,; double scale). Downsample by specific increasing factor each time, with a specified initial downsample value ; (e.g. OMEPyramidWriter.Builder; tileSize(int tileSize). Define the requested tile size (width == height). OMEPyramidWriter.Builder; tileSize(int tileWidth,; int tileHeight). Define the requested tile width and height. OMEPyramidWriter.Builder; timePoint(int t). Specify a single timepoint to be written from a time series. OMEPyramidWriter.Builder; timePoints(int tStart,; int tEnd). Specify a range of timepoints to be written from a time series. OMEPyramidWriter.Builder; uncompressed(). Request no compression. OMEPyramidWriter.Builder; zSlice(int z). Specify the z-slice to export. OMEPyramidWriter.Builder; zSlices(int zStart,; int zEnd). Specify the start (inclusive) and end (exclusive) z-slices. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(ImageServer<BufferedImage> server); Constructor. Parameters:; ser",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html:3649,down,downsample,3649,javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html,1,['down'],['downsample']
Availability,"r.overlays.HierarchyOverlay. All Implemented Interfaces:; PathOverlay. public class HierarchyOverlay; extends AbstractOverlay; An overlay capable of painting a PathObjectHierarchy, except for any ; TMA grid (which is handled by TMAGridOverlay). Author:; Pete Bankhead. Nested Class Summary. Nested classes/interfaces inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; AbstractOverlay.LocationStringFunction. Constructor Summary; Constructors. Constructor; Description; HierarchyOverlay(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions,; ImageData<BufferedImage> imageData). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; void; clearCachedOverlay(). Clear previously-cached tiles for this overlay. void; clearCachedOverlayForRegion(ImageRegion region). Clear previously-cached tiles for a specified region of this overlay. void; paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely). Paint the overlay to a graphics object. void; resetImageData(). Reset the last image data. Methods inherited from class qupath.lib.gui.viewer.overlays.AbstractOverlay; getAlphaComposite, getLocationString, getLocationStringFunction, getOpacity, getOverlayOptions, getPreferredOverlayColor, isVisible, setAlphaComposite, setLocationStringFunction, setOpacity, setPreferredOverlayColor. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. HierarchyOverlay; public HierarchyOverlay(DefaultImageRegionStore regionStore,; OverlayOptions overlayOptions,; ImageData<BufferedImage> imageData); Constructor. Note that a HierarchyOverlay cannot adapt very efficient to changes in ImageData, and therefore ; should not be reused across viewers. Parameters:; regionStore - region store to cache image tiles; overlayOptions - ove",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html:1476,down,downsampleFactor,1476,javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/HierarchyOverlay.html,1,['down'],['downsampleFactor']
Availability,"r; Method. Summary: ; Nested | ; Field | ; Constr | ; Method. Detail: ; Field | ; Constr | ; Method. SEARCH. Package qupath.lib.gui.actions; Class InfoMessage. java.lang.Object; qupath.lib.gui.actions.InfoMessage. public class InfoMessage; extends Object; An informative message that should be shown to the user. Property Summary; Properties. Type; Property; Description; ReadOnlyObjectProperty<Number>; count. Read only property containing any count associated with the text (may be null). ReadOnlyStringProperty; text. Read only property containing the message text. Nested Class Summary; Nested Classes. Modifier and Type; Class; Description; static enum ; InfoMessage.MessageType. The type of message, which can be used for styling. Method Summary. All MethodsStatic MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; ReadOnlyObjectProperty<Number>; countProperty(). Read only property containing any count associated with the text (may be null). static InfoMessage; error(String text). Create an error message with static text. static InfoMessage; error(String text,; int count). Create an error message with static text and a count. static InfoMessage; error(ObservableNumberValue count). Create a error message to show a count of errors. static InfoMessage; error(ObservableValue<String> text). Create an error message. static InfoMessage; error(ObservableValue<String> text,; ObservableNumberValue count). Create an error message with a count. int; getCount(). Counts associated with the message, or -1 if the count is null. InfoMessage.MessageType; getMessageType(). Type of the message. String; getText(). Text of the message. static InfoMessage; info(String text). Create an information message with static text. static InfoMessage; info(String text,; int count). Create an information message with static text and a count. static InfoMessage; info(ObservableNumberValue count). Create a information message to show a count of messages. static InfoMessage; in",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html:1218,error,error,1218,javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/actions/InfoMessage.html,1,['error'],['error']
Availability,"r; PROJECT_LOCATION. Constructor Summary; Constructors. Constructor; Description; DnnObjectClassifier(PathObjectFilter filter,; DnnModel model,; List<PathClass> pathClasses,; int width,; int height,; double requestedPixelSize). Constructor. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; int; classifyObjects(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects,; boolean resetExistingClass). Classify the objects in the specified collection. Map<String,Integer>; getMissingFeatures(ImageData<BufferedImage> imageData,; Collection<? extends PathObject> pathObjects). Check for missing features, returning the names and number of input objects missing the specified features. Collection<PathClass>; getPathClasses(). Get the classifications set by this classifier. Collection<URI>; getURIs(). Get all the URIs required for this resource. protected int; tryToClassify(List<? extends PathObject> pathObjects,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier). Try to classify a batch of objects. protected boolean; tryToClassify(PathObject pathObject,; ImageServer<BufferedImage> server,; double downsample,; IntFunction<PathClass> classifier);  ; boolean; updateURIs(Map<URI,URI> replacements). Update the specified URIs. Methods inherited from class qupath.lib.classifiers.object.AbstractObjectClassifier; classifyObjects, getCompatibleObjects. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Methods inherited from interface qupath.lib.io.UriResource; getUris, updateUris. Constructor Details. DnnObjectClassifier; public DnnObjectClassifier(PathObjectFilter filter,; DnnModel model,; List<PathClass> pathClasses,; int width,; int height,; double requestedPixelSize); Constructor. Parameters:; filter - filter to select compatible options; model - wrapper for the DNN model, including",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html:2003,down,downsample,2003,javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/dnn/DnnObjectClassifier.html,1,['down'],['downsample']
Availability,"r;  ; checkImageSupport(URI, String...) - Method in interface qupath.lib.images.servers.ImageServerBuilder. Check whether a URI is supported by this builder. checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.JsonImageServerBuilder;  ; checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; checkMinVersion(String) - Static method in class qupath.lib.scripting.QP. Check whether the current QuPath version is ≥ the specified version. checkpoint() - Method in class qupath.lib.common.Timeit. Create a new checkpoint with a default name. checkpoint(String) - Method in class qupath.lib.common.Timeit. Create a new checkpoint with the specified name. checkpointAndRun(Runnable) - Method in class qupath.lib.common.Timeit. Create a checkpoint with the default name and immediately run the provided runnable. checkpointAndRun(String, Runnable) - Method in class qupath.lib.common.Timeit. Create a checkpoint and immediately run the provided Runnable. checkpointAndRun(String, Runnable, int) - Method in class qupath.lib.common.Timeit. Create a checkpoint and immediately run the provided Runnable nIterations times. checkType(URI) - Static method in class qupath.lib.images.servers.FileFormatInfo. Check the type of an image for a specified URI. checkVersionRange(String, String) - Static method in class qupath.lib.scripting.QP. Check whether the current QuPath version is ≥ the specified minimum version, and < the specified maximum. ChoiceParameter<S> - Class in qupath.lib.plugins.parameters. Parameter that supports a list of choices. choices - Variable in class qupath.lib.plugins.parameters.ChoiceParameter;  ; CIRCULARITY - Enum constant in enum class qupath.lib.analysis.features.ObjectMeasurements.ShapeFeatures. Circularity. CITE - Variable in class qupath.lib.gui.actions.menus.HelpMenuActions.Actions;  ; classification() - Method in class qupath.opencv.dnn.OpenCVDnn.Builder. Set the model type to be Open",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:99247,checkpoint,checkpoint,99247,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['checkpoint'],['checkpoint']
Availability,"rList) - Method in class qupath.imagej.detect.cells.WatershedCellMembraneDetection;  ; getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.superpixels.DoGSuperpixelsPlugin;  ; getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.imagej.superpixels.SLICSuperpixelsPlugin;  ; getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.opencv.CellCountsCV;  ; getPreferredPixelSizeMicrons(ImageData<BufferedImage>, ParameterList) - Method in class qupath.opencv.WatershedNucleiCV;  ; getPreferredPixelSizeMicrons(ImageData<T>, ParameterList) - Method in class qupath.lib.plugins.AbstractTileableDetectionPlugin. Get the preferred pixel size that would be used for the specified ImageData and ParameterList. getPreferredResolutionLevel(ImageServer<?>, double) - Static method in class qupath.lib.images.servers.ServerTools. Get the preferred resolution level to request regions from an ImageServer at a specified downsample level. getPreferredTileHeight() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the preferred tile height, which can be used to optimize pixel requests for large images. getPreferredTileWidth() - Method in class qupath.lib.images.servers.ImageServerMetadata. Get the preferred tile width, which can be used to optimize pixel requests for large images. getPreferredUriImageSupport(Class<T>, String, String...) - Static method in class qupath.lib.images.servers.ImageServerProvider. Get the preferred ImageServerBuilder.UriImageSupport for a specified image path. getPreprocessing() - Method in class qupath.opencv.ml.PatchClassifierParams. Get any preprocessing steps that should be applied. getPressure() - Method in interface qupath.lib.gui.viewer.tools.QuPathPenManager.PenInputManager. Returns a pressure value, between 0 and 1. getPreviousSelectedTool() - Method in class qupath.lib.gui.ToolManager. Get the value of ToolManager",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:490337,down,downsample,490337,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['down'],['downsample']
Availability,"rOpacity(double) - Method in class qupath.lib.gui.charts.Charts.ScatterChartBuilder. Specify the marker opacity. MASK_ALPHA - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the alpha component from a packed ARGB int value. MASK_BLUE - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the blue component from a packed (A)RGB int value. MASK_GREEN - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the green component from a packed (A)RGB int value. MASK_RED - Static variable in class qupath.lib.common.ColorTools. Mask for use when extracting the red component from a packed (A)RGB int value. maskFunction(MaskSupplier<S, T>) - Method in class qupath.lib.experimental.pixels.Parameters.Builder. Function used to lazily create a mask corresponding to the image for a specified ROI. maskImageNames - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; maskImageNamesProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Request that image names are hidden within the user interface. maskObject(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask. maskObjectAndSplit(ROI, PathObject) - Static method in class qupath.lib.experimental.pixels.PixelProcessorUtils. Apply a ROI mask to an object, ensuring that the child object's ROI does not extend beyond the mask,; and splitting the child object's ROI to create multiple objects if it contains disjoint regions. maskSupplier(MaskSupplier<S, T>) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set the mask supplier. MaskSupplier<S,T> - Interface in qupath.lib.experimental.pixels. A functional interface for supplying a mask corresponding to an image. MATCH_VIEWER_RESOLUTIONS - Variable in class qupath.lib.gui.actions.ViewerActions;  ; mat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:672789,mask,maskImageNamesProperty,672789,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['mask'],['maskImageNamesProperty']
Availability,"rTools. public class ServerTools; extends Object; Static methods helpful when dealing with ImageServers. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; ServerTools();  . Method Summary. All MethodsStatic MethodsConcrete Methods. Modifier and Type; Method; Description; static List<ImageChannel>; classificationLabelsToChannels(Map<Integer,PathClass> classificationLabels,; boolean ignoredTransparent). Create a list of channels from classification labels. static int; getChannelIndex(ImageServer<?> server,; String channelName). Get the index of the first channel of a server with a specified channel name. static String; getDefaultShortServerName(URI uri). Get the default shortened server name given the server's path. static String; getDisplayableImageName(ImageServer<?> server). Get an ImageServer name suitable for displaying. static double; getDownsampleFactor(ImageServer<?> server,; double preferredPixelSizeMicrons). Calculate a downsample factor for a server given a preferred pixel size. static BufferedImage; getPaddedRequest(ImageServer<BufferedImage> server,; RegionRequest request,; Padding padding). Get a raster, padded by the specified amount, to the left, right, above and below. static double; getPreferredDownsampleFactor(ImageServer<?> server,; double requestedDownsample). Get the downsample factor supported by the server that is the best match for the requested downsample. static int; getPreferredResolutionLevel(ImageServer<?> server,; double requestedDownsample). Get the preferred resolution level to request regions from an ImageServer at a specified downsample level. static boolean; setImageName(ImageServer<?> server,; String name). Set the name property of the metadata for an ImageServer. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ServerTools; public ServerTools(). Method Details. getDefaultShortServerName; ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ServerTools.html:1406,down,downsample,1406,javadoc/docs/qupath/lib/images/servers/ServerTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ServerTools.html,1,['down'],['downsample']
Availability,"ractivePlugin(). Method Details. getDefaultParameterList; public abstract ParameterList getDefaultParameterList(ImageData<T> imageData); This should return a default ParameterList containing any information that is needed to repeat the task exactly. Specified by:; getDefaultParameterList in interface PathInteractivePlugin<T>; Parameters:; imageData - ; Returns:. alwaysPromptForObjects; public boolean alwaysPromptForObjects(); Description copied from interface: PathInteractivePlugin; If this returns true, then a prompt is requested every time the command is run - ; even if there are valid parent objects already selected. Specified by:; alwaysPromptForObjects in interface PathInteractivePlugin<T>; Returns:. getParameterList; protected ParameterList getParameterList(ImageData<T> imageData); Get a reference to a ParameterList stored internally, and which will be used for analysis.; ; If there is no list presently available, getDefaultParameterList will be called.; ; If there is a list available, it will be returned.; ; The reason for needing this in addition to getDefaultParameterList, is that parseArgument could ; modify the internal ParameterList that will actually be used, while getDefaultParameterList is useful; when creating GUIs and ensuring that there is always a sensible starting point. Parameters:; imageData - image data for which the parameters should be generated. This may influence which parameters are shown.; Returns:. parseArgument; protected boolean parseArgument(ImageData<T> imageData,; String arg); Description copied from class: AbstractPlugin; Parse the input argument, returning 'true' if the argument is valid and it's possible to run the plugin.; ; This is called from within runPlugin.; If it returns 'true', getTasks will be called and then runTasks will submit these to the plugin runner to run.; If it returns 'false', runPlugin will immediately abort and return false as well.; ; Since this could result in some internal variables changed (e.g. a Param",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html:4081,avail,available,4081,javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/plugins/AbstractInteractivePlugin.html,1,['avail'],['available']
Availability,"rameters:; width - ; regions - . setMinHeight; public static void setMinHeight(double height,; Region... regions); Deprecated.; Set the min height property for the specified regions.; This can be especially useful when setting the height to Region.USE_PREF_SIZE, indicating ; that the region should not be shrunk beyond its preferred size. Parameters:; height - ; regions - . setFillWidth; public static void setFillWidth(Boolean doFill,; Node... nodes); Deprecated.; Set the GridPane.setFillWidth(Node, Boolean) property for specified nodes. Parameters:; doFill - ; nodes - . setToExpandGridPaneWidth; public static void setToExpandGridPaneWidth(Node... nodes); Deprecated.; Set constraints and max width values (where possible) so that the specified nodes ; fill all available horizontal space in a GridPane. Parameters:; nodes - . setToExpandGridPaneHeight; public static void setToExpandGridPaneHeight(Node... nodes); Deprecated.; Set constraints and max width values (where possible) so that the specified nodes ; fill all available vertical space in a GridPane. Parameters:; nodes - . setFillHeight; public static void setFillHeight(Boolean doFill,; Node... nodes); Deprecated.; Set the GridPane.setFillHeight(Node, Boolean) property for specified nodes. Parameters:; doFill - ; nodes - . createRowGrid; public static GridPane createRowGrid(Node... nodes); Deprecated.; Create a GridPane containing rows that resize similarly to Swing's GridLayout(). Parameters:; nodes - ; Returns:. createRowGridControls; public static GridPane createRowGridControls(Node... nodes); Deprecated.; Create a GridPane containing columns that resize similarly to Swing's GridLayout(),; while also resizing contained objects to have the corresponding widths. Parameters:; nodes - ; Returns:. createColumnGridControls; public static GridPane createColumnGridControls(Node... nodes); Deprecated.; Create a GridPane containing columns that resize similarly to Swing's GridLayout(),; where controls have their widths bo",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PaneTools.html:6928,avail,available,6928,javadoc/docs/qupath/lib/gui/tools/PaneTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/tools/PaneTools.html,1,['avail'],['available']
Availability,"rap an ImageServer to dynamically generate a pyramid, using specified tile sizes. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. ImageServers; public ImageServers(). Method Details. getServerBuilderFactory; public static TypeAdapterFactory getServerBuilderFactory(); Get a TypeAdapterFactory to handle ServerBuilders. Returns:. pyramidalize; public static ImageServer<BufferedImage> pyramidalize(ImageServer<BufferedImage> server,; double... downsamples); Wrap an ImageServer to dynamically generate a pyramid. This does not involve writing any new image, ; and may be rather processor and memory-intensive as high-resolution tiles must be accessed to fulfil ; low-resolution requests. However, tile caching means that after tiles have been accessed once perceived ; performance can be considerably improved. Parameters:; server - the server to wrap (typically having only one resolution level); downsamples - optional array giving the downsamples of the new pyramid. If not provided,; Returns:. pyramidalizeTiled; public static ImageServer<BufferedImage> pyramidalizeTiled(ImageServer<BufferedImage> server,; int tileWidth,; int tileHeight,; double... downsamples); Wrap an ImageServer to dynamically generate a pyramid, using specified tile sizes.; This does not involve writing any new image, and may be rather processor and memory-intensive as high-resolution ; tiles must be accessed to fulfil low-resolution requests.; However, tile caching means that after tiles have been accessed once perceived ; performance can be considerably improved. Parameters:; server - the server to wrap (typically having only one resolution level); tileWidth - requested tile height; tileHeight - requested tile height; downsamples - optional array giving the downsamples of the new pyramid. If not provided,; Returns:. buildServer; public static ImageServer<BufferedImage> buildServer(String path,; St",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServers.html:3457,down,downsamples,3457,javadoc/docs/qupath/lib/images/servers/ImageServers.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServers.html,2,['down'],['downsamples']
Availability,"rasterMask,; Rectangle bounds). Create a histogram that identifies the channels (bands) of an image with the maximum values according to the argmax criterion, ; with an optional bounding rectangle. static long[]; computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask). Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values. static long[]; computeUnsignedIntHistogram(WritableRaster raster,; long[] counts,; WritableRaster rasterMask,; Rectangle bounds). Compute the full histogram for a raster containing 8-bit or 16-bit unsigned integer values, optionally restricted to a bounding rectangle. static BufferedImage; createROIMask(int width,; int height,; ROI roi,; double xOrigin,; double yOrigin,; double downsample). Create a grayscale BufferedImage representing a mask for a specified ROI. static BufferedImage; createROIMask(int width,; int height,; ROI roi,; RegionRequest request). Create a grayscale BufferedImage representing a mask for a specified ROI. static BufferedImage; createROIMask(Shape shape,; double downsample). Create a Shape mask using the minimal bounding box for the Shape. static BufferedImage; createROIMask(ROI roi,; double downsample). Create a ROI mask using the minimal bounding box for the ROI. static BufferedImage; createShapeMask(int width,; int height,; Shape shape,; double xOrigin,; double yOrigin,; double downsample). Create a grayscale BufferedImage representing a mask for a specified ROI. static BufferedImage; crop(BufferedImage img,; int x,; int y,; int width,; int height). Create a crop of the image using the specified bounding box. static BufferedImage; duplicate(BufferedImage img). Duplicate a BufferedImage. static BufferedImage; ensureBufferedImage(Image image). Convert an Image to a BufferedImage if necessary, or return the original image unchanged ; if it is already a BufferedImage. static BufferedImage; ensureBufferedImageType(BufferedImage img,; int requestedType)",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html:2516,mask,mask,2516,javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/awt/common/BufferedImageTools.html,1,['mask'],['mask']
Availability,"ray. static double[]; extractMaskedDoubles(Mat input,; Mat mask,; int channel). Extract pixels from an image using a mask, limited to the specified channel index. static float[]; extractMaskedFloats(Mat input,; Mat mask,; int channel). Extract pixels from an image using a mask, limited to the specified channel index. static double[]; extractPixels(Mat mat,; double[] pixels). Extract pixels as a double array. static float[]; extractPixels(Mat mat,; float[] pixels). Extract pixels as a float[] array. static List<Mat>; extractZStack(ImageServer<BufferedImage> server,; RegionRequest request). Extract a list of Mats, where each Mat corresponds to a z-slice, for all available z-slices of a region. static List<Mat>; extractZStack(ImageServer<BufferedImage> server,; RegionRequest request,; int zMin,; int zMax). Extract a list of Mats, where each Mat corresponds to a z-slice. static void; fill(Mat mat,; double value). Fill the pixels of an image with a specific value. static void; fill(Mat mat,; Mat mask,; double value). Fill the pixels of an image with a specific value, corresponding to a mask. static void; fillSmallHoles(Mat matBinary,; double maxArea). Fill holes in a binary image (1-channel, 8-bit unsigned) with an area <= maxArea. static void; filter2D(Mat mat,; Mat kernel). Apply a 2D filter to all channels of an image, with symmetric boundary padding. static void; filter2D(Mat mat,; Mat kernel,; int borderType). Apply a 2D filter to all channels of an image. static Mat; filterSingleZ(List<Mat> mats,; double[] kernel,; int ind3D,; int border). Apply a filter along the 'list' dimension for a list of Mats, computing the value ; for a single entry. static List<Mat>; filterZ(List<Mat> mats,; Mat kernelZ,; int ind3D,; int border). Filter filter along entries in the input list. static Collection<OpenCVTools.IndexedPixel>; findMaxima(Mat mat,; Mat mask). Find maxima within an image. static Mat; findRegionalMaxima(Mat mat). Get the regional maxima within a Mat, providing the o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:5077,mask,mask,5077,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html,1,['mask'],['mask']
Availability,"rcentage of cells for Allred proportion score to be non-zero. static BooleanProperty; alwaysPaintSelectedObjects. Always paint selected objects in the viewer, even if the opacity setting is 0. static DoubleProperty; annotationStrokeThickness. Preferred stroke thickness to use when drawing annotation ROIs. static DoubleProperty; autoBrightnessContrastSaturationPercent. Controls percentage of saturated pixels to apply when automatically setting brightness/contrast. static ObjectProperty<PathClass>; autoSetAnnotationClass. Classification that should automatically be applied to all new annotations. static ObjectProperty<PathPrefs.AutoUpdateType>; autoUpdateCheck. Check for updates when launching QuPath, if possible. static BooleanProperty; brushCreateNewObjects. Create new objects by default when drawing with the Brush tool. static IntegerProperty; brushDiameter. Default brush tool diameter, in pixels. static BooleanProperty; brushScaleByMag. Optionally scale the default brush tool diameter by the viewer magnification (downsample value). static BooleanProperty; clipROIsForHierarchy. Request ROIs to be clipped and inserted as the right place in the hierarchy when drawing ; (to prevent overlapping ROIs being created accidentally). static IntegerProperty; colorDefaultObjects. The default color used to display objects of any type, where a default has not otherwise been specified. static IntegerProperty; colorSelectedObject. The default color used to display selected objects. static IntegerProperty; colorTile. The default color used to display tile objects. static IntegerProperty; colorTMAMissing. The default color used to display missing TMA core objects. static IntegerProperty; colorTMA. The default color used to display TMA core objects. static ObjectProperty<Locale>; defaultLocaleDisplay. Get a property for setting the default Locale for Locale.Category.DISPLAY. static ObjectProperty<Locale>; defaultLocaleFormat. Get a property for setting the default Locale for Locale.Ca",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:1795,down,downsample,1795,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['down'],['downsample']
Availability,"reObject. Metadata key to store a case identify for the TMA core. KEY_OBJECT_CONNECTIONS - Static variable in class qupath.lib.objects.DefaultPathObjectConnectionGroup. Key to use when storing object connections as a property of an ImageData object. KEY_OS_CENSORED - Static variable in class qupath.lib.objects.TMACoreObject. Metadata key for an overall survival censored flag. KEY_OVERALL_SURVIVAL - Static variable in class qupath.lib.objects.TMACoreObject. Metadata key for an overall survival (temporal) value. KEY_RECURRENCE_FREE_SURVIVAL - Static variable in class qupath.lib.objects.TMACoreObject. Metadata key for an recurrence-free survival (temporal) value. KEY_RFS_CENSORED - Static variable in class qupath.lib.objects.TMACoreObject. Metadata key for an recurrence-free survival censored flag. KEYPOINTS - Enum constant in enum class qupath.opencv.dnn.OpenCVDnn.ModelType. Refers to KeypointsModel. keySet() - Method in interface qupath.lib.measurements.MeasurementList. Get all available names as a set. killRunningScriptAction - Variable in class qupath.lib.gui.scripting.DefaultScriptEditor;  . L. LAB_DISTANCE - Enum constant in enum class qupath.process.gui.WandToolEventHandler.WandType. Color image converted to CIELAB, Euclidean distance calculated. label(Mat, int) - Static method in class qupath.opencv.tools.OpenCVTools. Label connected components for non-zero pixels in an image. label(Mat, Mat, int) - Static method in class qupath.opencv.tools.OpenCVTools. Label connected components for non-zero pixels in an image. labeledImageExtension(String) - Method in class qupath.lib.images.writers.TileExporter. Specify a file extension for the labelled image, which determines the export file format. labeledImageId(String) - Method in class qupath.lib.images.writers.TileExporter. Specify an identifier appended to the filename for labeled images. LabeledImageServer - Class in qupath.lib.images.servers. A special ImageServer implementation that doesn't have a backing image, b",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:642880,avail,available,642880,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"read based on the specified URI. getBuildString() - Method in class qupath.lib.gui.BuildInfo. Get the build String, or null if no build String is available. getBuildString() - Static method in class qupath.lib.gui.QuPathGUI. Get a String representing the QuPath version & build time. getBytesPerPixel() - Method in enum class qupath.lib.images.servers.PixelType. Number of bytes per pixel. getC() - Method in class qupath.lib.regions.ImagePlane. Get the channel index. getC() - Method in class qupath.lib.roi.AreaROI;  ; getC() - Method in class qupath.lib.roi.EllipseROI;  ; getC() - Method in class qupath.lib.roi.GeometryROI;  ; getC() - Method in class qupath.lib.roi.LineROI;  ; getC() - Method in class qupath.lib.roi.PointsROI;  ; getC() - Method in class qupath.lib.roi.PolygonROI;  ; getC() - Method in class qupath.lib.roi.PolylineROI;  ; getC() - Method in class qupath.lib.roi.RectangleROI;  ; getC() - Method in interface qupath.lib.roi.interfaces.ROI. Get channel index, or -1 if the ROI relates to all available channels. getC() - Method in class qupath.opencv.tools.OpenCVTools.IndexedPixel. Get channel index. getCache() - Method in class qupath.lib.gui.images.stores.DefaultImageRegionStore;  ; getCache() - Method in class qupath.lib.images.servers.AbstractImageServer. Get the internal cache. getCache(Class<T>) - Static method in class qupath.lib.images.servers.ImageServerProvider. Get the cache in use for image tiles of a specific type. getCachedColor(int, int, int) - Static method in class qupath.lib.color.ColorToolsAwt. Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). getCachedColor(int, int, int) - Static method in class qupath.lib.gui.tools.ColorToolsFX. Get a Color object, possibly from a shared map (used to avoid creating too many objects unnecessarily). getCachedColor(int, int, int, int) - Static method in class qupath.lib.color.ColorToolsAwt. Get a Color object, possibly from a shared map (used to avoid c",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:343444,avail,available,343444,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['avail'],['available']
Availability,"reads; public int getMaxThreads(); Get the maximum number of threads that may be used during live prediction. Returns:. setRenderer; public void setRenderer(ImageRenderer renderer); Set the ImageRenderer to be used with this overlay. Parameters:; renderer - . getLivePrediction; public boolean getLivePrediction(); Query whether live prediction is turned on. Returns:. setLivePrediction; public void setLivePrediction(boolean livePrediction); Turn on or off live prediction.; This requests tile classifications as the overlay is being viewed. Parameters:; livePrediction - . getPixelClassificationServer; public ImageServer<BufferedImage> getPixelClassificationServer(ImageData<BufferedImage> imageData); Get the ImageServer that would be used by this overlay for the specified ImageData.; Note that the servers are cached internally. Parameters:; imageData - ; Returns:. paintOverlay; public void paintOverlay(Graphics2D g2d,; ImageRegion imageRegion,; double downsampleFactor,; ImageData<BufferedImage> imageData,; boolean paintCompletely); Description copied from interface: PathOverlay; Paint the overlay to a graphics object. The graphics object will have a transform applied to it, so the painting should; make use of coordinates in the original image space. Specified by:; paintOverlay in interface PathOverlay; Overrides:; paintOverlay in class AbstractImageOverlay; Parameters:; g2d - Graphics2D object to which drawing should be performed. This should have any transform already applied to it.; imageRegion - The maximum image region that should be shown.; downsampleFactor - The downsample factor at which the overlay will be viewed. There is no need for rescaling according to; this value since it has already been applied to the Graphics2D as part of its AffineTransform, however; it may optionally be needed within the method e.g. to correct line thicknesses.; imageData - the ImageData associated with this overlay. If the overlay is being displayed on a viewer, this is the ImageData o",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html:8961,down,downsampleFactor,8961,javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/viewer/overlays/PixelClassificationOverlay.html,1,['down'],['downsampleFactor']
Availability,"reate a request for the full width and height of an ImageServer, for the default plane (first z-slice, time point) ; and first resolution level downsample (usually 1, but not always). Parameters:; server - ; Returns:. createInstance; public static RegionRequest createInstance(ImageServer<?> server,; double downsample); Create a request for the full width and height of an ImageServer, for the default plane (first z-slice, time point). Parameters:; server - ; downsample - ; Returns:. createAllRequests; public static List<RegionRequest> createAllRequests(ImageServer<?> server,; double downsample); Create requests for the full width and height of an ImageServer, for all planes (z-slices and time points). Parameters:; server - ; downsample - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; ROI roi); Create a request that contains the pixels of the specified ROI.; This is calculated using the ROI bounding box. Parameters:; path - ; downsample - ; roi - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; Collection<? extends ROI> rois); Create a request that contains the pixels of the specified ROIs.; This is calculated using the ROI bounding boxes. Parameters:; path - ; downsample - ; rois - ; Returns:; Throws:; IllegalArgumentException - if the ROIs do not all fall on the same ImagePlane. createInstance; public static RegionRequest createInstance(String path,; RegionRequest request); Create a request that matches another request but with a different path. Parameters:; path - ; request - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; ImageRegion region); Create a request corresponding to a specified ImageRegion.; This may also be used to construct a request based on an existing request, but changing either the path or downsample. Parameters:; path - ; downsample - ; region - ; Returns:. createInstance; public",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html:5810,down,downsample,5810,javadoc/docs/qupath/lib/regions/RegionRequest.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html,1,['down'],['downsample']
Availability,"reateInstance(String, int, double, ImageRegion) - Static method in class qupath.lib.images.servers.TileRequest. Create a new tile request for a specified region, downsample and resolution level. createInstance(String, RegionRequest) - Static method in class qupath.lib.regions.RegionRequest. Create a request that matches another request but with a different path. createInstance(Collection<? extends ROI>) - Static method in class qupath.lib.regions.ImageRegion. Create the smallest region that completely contains the specified ROIs. createInstance(Stage) - Static method in class qupath.lib.gui.QuPathGUI. Static method to launch QuPath on the JavaFX Application thread. createInstance(Stage, HostServices) - Static method in class qupath.lib.gui.QuPathGUI. Static method to launch QuPath from a JavaFX application. createInstance(ImageServer<?>) - Static method in class qupath.lib.regions.RegionRequest. Create a request for the full width and height of an ImageServer, for the default plane (first z-slice, time point) ; and first resolution level downsample (usually 1, but not always). createInstance(ImageServer<?>, double) - Static method in class qupath.lib.regions.RegionRequest. Create a request for the full width and height of an ImageServer, for the default plane (first z-slice, time point). createInstance(ImageServer<?>, int, ImageRegion) - Static method in class qupath.lib.images.servers.TileRequest. Create a new tile request for a specified region and resolution level of an image. createInstance(ROI) - Static method in class qupath.lib.regions.ImageRegion. Create the smallest region that completely contains a specified ROI. createJavaCompletion(Class<?>) - Static method in class qupath.lib.scripting.languages.AutoCompletions. Create a new completion for a class. createJavaCompletion(Class<?>, Field) - Static method in class qupath.lib.scripting.languages.AutoCompletions. Create a new completion for a field. createJavaCompletion(Class<?>, Method) - Static method in cla",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:190801,down,downsample,190801,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['down'],['downsample']
Availability,"recated; if the generic parameter <T> represented ; anything other than a BufferedImage then its name became misleading. Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; Throws:; IOException. readRegion; default T readRegion(RegionRequest request); throws IOException; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Parameters:; request - the region for which pixels are requested; Returns:; pixels for the region being requested; Throws:; IOException; Since:; v0.4.0; See Also:. readRegion(double, int, int, int, int, int, int); readRegion(double, int, int, int, int); readBufferedImage(RegionRequest). readRegion; default T readRegion(double downsample,; int x,; int y,; int width,; int height,; int z,; int t); throws IOException; Read a 2D(+C) image region for a specified z-plane and timepoint.; Coordinates and bounding box dimensions are in pixel units, at the full image resolution ; (i.e. when downsample = 1).; ; All channels are always returned. Parameters:; downsample - downsample fa",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html:9256,down,downsampling,9256,javadoc/docs/qupath/lib/images/servers/ImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/ImageServer.html,1,['down'],['downsampling']
Availability,"recatedCommands - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; showDetectionMeasurementManager(QuPathGUI, ImageData<?>) - Static method in class qupath.lib.gui.commands.Commands. Show a simple dialog for viewing (and optionally removing) detection measurements. showDetectionMeasurementTable(QuPathGUI, ImageData<BufferedImage>) - Static method in class qupath.lib.gui.commands.Commands. Show a measurement table for all detection objects. showDetectionsProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showEditor() - Method in class qupath.lib.gui.scripting.DefaultScriptEditor;  ; showEditor() - Method in interface qupath.lib.gui.scripting.ScriptEditor. Show the script editor. showErrorMessage(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message. showErrorMessage(String, Throwable) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message, displaying the localized message of a Throwable. showErrorMessage(String, Node) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error message, with the content defined within a Node. showErrorNotification(String, String) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error notification. showErrorNotification(String, Throwable) - Static method in class qupath.lib.gui.dialogs.Dialogs. Deprecated.; Show an error notification, displaying the localized message of a Throwable. showExperimentalCommands - Variable in class qupath.lib.gui.panes.PreferencePane.GeneralPreferences;  ; showExperimentalOptionsProperty() - Static method in class qupath.lib.gui.prefs.PathPrefs. Flag to indicate that menu items marked 'experimental' should be shown to the user. showGridProperty() - Method in class qupath.lib.gui.viewer.OverlayOptions;  ; showHistogram(String) - Method in class qupath.lib.gui.charts.HistogramDisplay. Show the histogram for a specified dat",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:964617,error,error,964617,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['error'],['error']
Availability,"recent QuPath release on GitHub. checkForUpdate(GitHubProject.GitHubRepo) - Static method in class qupath.lib.gui.extensions.UpdateChecker. Query the latest release from a GitHub repo. checkImageSupport(URI, String...) - Method in class qupath.imagej.images.servers.ImageJServerBuilder;  ; checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.bioformats.BioFormatsServerBuilder;  ; checkImageSupport(URI, String...) - Method in interface qupath.lib.images.servers.ImageServerBuilder. Check whether a URI is supported by this builder. checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.JsonImageServerBuilder;  ; checkImageSupport(URI, String...) - Method in class qupath.lib.images.servers.openslide.OpenslideServerBuilder;  ; checkMinVersion(String) - Static method in class qupath.lib.scripting.QP. Check whether the current QuPath version is ≥ the specified version. checkpoint() - Method in class qupath.lib.common.Timeit. Create a new checkpoint with a default name. checkpoint(String) - Method in class qupath.lib.common.Timeit. Create a new checkpoint with the specified name. checkpointAndRun(Runnable) - Method in class qupath.lib.common.Timeit. Create a checkpoint with the default name and immediately run the provided runnable. checkpointAndRun(String, Runnable) - Method in class qupath.lib.common.Timeit. Create a checkpoint and immediately run the provided Runnable. checkpointAndRun(String, Runnable, int) - Method in class qupath.lib.common.Timeit. Create a checkpoint and immediately run the provided Runnable nIterations times. checkType(URI) - Static method in class qupath.lib.images.servers.FileFormatInfo. Check the type of an image for a specified URI. checkVersionRange(String, String) - Static method in class qupath.lib.scripting.QP. Check whether the current QuPath version is ≥ the specified minimum version, and < the specified maximum. ChoiceParameter<S> - Class in qupath.lib.plugins.parameters. Parameter that suppor",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:98859,checkpoint,checkpoint,98859,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['checkpoint'],['checkpoint']
Availability,"rectory containing extensions. static ExtensionClassLoader; getInstance(). Get a singleton instance of the ExtensionClassLoader. void; refresh(). Ensure all Jars in the extensions directory (and one subdirectory down) are available. Methods inherited from class java.net.URLClassLoader; addURL, definePackage, findClass, findResource, findResources, getPermissions, getResourceAsStream, getURLs, newInstance, newInstance. Methods inherited from class java.security.SecureClassLoader; defineClass, defineClass. Methods inherited from class java.lang.ClassLoader; clearAssertionStatus, defineClass, defineClass, defineClass, defineClass, definePackage, findClass, findLibrary, findLoadedClass, findResource, findSystemClass, getClassLoadingLock, getDefinedPackage, getDefinedPackages, getName, getPackage, getPackages, getParent, getPlatformClassLoader, getResource, getResources, getSystemClassLoader, getSystemResource, getSystemResourceAsStream, getSystemResources, getUnnamedModule, isRegisteredAsParallelCapable, loadClass, loadClass, registerAsParallelCapable, resolveClass, resources, setClassAssertionStatus, setDefaultAssertionStatus, setPackageAssertionStatus, setSigners. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. getInstance; public static ExtensionClassLoader getInstance(); Get a singleton instance of the ExtensionClassLoader. Returns:; Since:; v0.5.0. getExtensionsDirectory; public Path getExtensionsDirectory(); Directory containing extensions.; ; This can contain any jars - all will be added to the search path when starting QuPath. Returns:. refresh; public void refresh(); Ensure all Jars in the extensions directory (and one subdirectory down) are available. close; public void close(); throws IOException. Specified by:; close in interface AutoCloseable; Specified by:; close in interface Closeable; Overrides:; close in class URLClassLoader; Throws:; IOException. ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html:2682,down,down,2682,javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/ExtensionClassLoader.html,2,"['avail', 'down']","['available', 'down']"
Availability,"region); Define the region to export, including the z-slice and time point. Parameters:; region - ; Returns:; this builder; See Also:. region(int, int, int, int); timePoint(int); zSlice(int); zSlices(int, int). tileSize; public OMEPyramidWriter.Builder tileSize(int tileSize); Define the requested tile size (width == height).; ; This is only a suggestion, and the OME reader may override it if the value is unsupported. Parameters:; tileSize - ; Returns:; this builder. tileSize; public OMEPyramidWriter.Builder tileSize(int tileWidth,; int tileHeight); Define the requested tile width and height.; ; This is only a suggestion, and the OME reader may override it if the value is unsupported. Parameters:; tileWidth - ; tileHeight - ; Returns:; this builder. downsamples; public OMEPyramidWriter.Builder downsamples(double... downsamples); Specify downsample factors to use in the final pyramid.; ; Note that the downsample values provided will be sorted in ascending order. Parameters:; downsamples - ; Returns:; this builder. dyadicDownsampling; public OMEPyramidWriter.Builder dyadicDownsampling(); Downsample by factors of 2.; ; Note that the highest downsample value will depend on the tile size, ; so the tile size should be set first. Returns:; this builder; See Also:. scaledDownsampling(double). scaledDownsampling; public OMEPyramidWriter.Builder scaledDownsampling(double scale); Downsample by specific increasing factor each time (e.g. if scale == 2, then downsamples will be 1, 2, 4, 8...).; ; Note that the highest downsample value will depend on the tile size, ; so the tile size should be set first. Parameters:; scale - ; Returns:; this builder; See Also:. scaledDownsampling(double). scaledDownsampling; public OMEPyramidWriter.Builder scaledDownsampling(double minDownsample,; double scale); Downsample by specific increasing factor each time, with a specified initial downsample value ; (e.g. if scale == 2, then downsamples will be minDownsample, minDownsample*2, minDownsample*4.",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html:9920,down,downsamples,9920,javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/ome/OMEPyramidWriter.Builder.html,1,['down'],['downsamples']
Availability,"regions, using a symmetric padding. PixelProcessor.Builder<S,T,U>; padding(Padding padding). Set the padding to use when extracting regions. PixelProcessor.Builder<S,T,U>; pixelSize(double pixelSize). Set the requested pixel size to use with requesting image regions. PixelProcessor.Builder<S,T,U>; processor(Processor<S,T,U> processor). Set the processor. PixelProcessor.Builder<S,T,U>; tile(int tileWidth,; int tileHeight). Set a default tiler to use, with a specified tile size. PixelProcessor.Builder<S,T,U>; tiler(Tiler tiler). Set a tiler to use. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. Builder; public Builder(). Method Details. imageSupplier; public PixelProcessor.Builder<S,T,U> imageSupplier(ImageSupplier<S> imageSupplier); Set the image supplier. This is required if the processor is to have access to pixels. Parameters:; imageSupplier - ; Returns:. maskSupplier; public PixelProcessor.Builder<S,T,U> maskSupplier(MaskSupplier<S,T> maskSupplier); Set the mask supplier. This is optional, but without it masks will be null. Parameters:; maskSupplier - ; Returns:. outputHandler; public PixelProcessor.Builder<S,T,U> outputHandler(OutputHandler<S,T,U> outputHandler); Set the output handler. This is optional, for cases where the processor does not make updates to the; parent object itself. Parameters:; outputHandler - ; Returns:. processor; public PixelProcessor.Builder<S,T,U> processor(Processor<S,T,U> processor); Set the processor. This is required to do any interesting work. Parameters:; processor - ; Returns:. padding; public PixelProcessor.Builder<S,T,U> padding(Padding padding); Set the padding to use when extracting regions.; Note that this is defined in pixels at the full image resolution, not the downsampled resolution. Parameters:; padding - ; Returns:. padding; public PixelProcessor.Builder<S,T,U> padding(int size); Set the padding to use when ex",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html:2732,mask,maskSupplier,2732,javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/experimental/pixels/PixelProcessor.Builder.html,1,['mask'],['maskSupplier']
Availability,"rendered images, with optional overlay layers.; This provides more fine-grained control of how the rendering is performed than RenderedImageServer.createRenderedServer(QuPathViewer). Constructor Summary; Constructors. Constructor; Description; Builder(QuPathViewer viewer). Create a rendered image server build using viewer defaults. Builder(ImageData<BufferedImage> imageData). Create a rendered image server for the specified ImageData;. Method Summary. All MethodsInstance MethodsConcrete MethodsDeprecated Methods. Modifier and Type; Method; Description; RenderedImageServer.Builder; backgroundColor(int rgb,; boolean keepAlpha). Specify a base color. RenderedImageServer.Builder; backgroundColor(Color color). Specify a base color. ImageServer<BufferedImage>; build(). Create the rendered image server. RenderedImageServer.Builder; display(ImageDisplay display). Deprecated.; use renderer(ImageRenderer) instead (since an ImageDisplay is also an ImageRenderer. RenderedImageServer.Builder; downsamples(double... downsamples). Specify downsamples; this is especially important for 'thick' objects (annotations, TMA cores); because the downsamples define the resolutions at which these will be rendered. RenderedImageServer.Builder; layers(Collection<PathOverlay> layers). Specify one or more overlay layers as a collection. RenderedImageServer.Builder; layers(PathOverlay... layers). Specify one or more overlay layers. RenderedImageServer.Builder; overlayOpacity(double opacity). Specify the opacity for overlay layers. RenderedImageServer.Builder; renderer(ImageRenderer renderer). Specify the ImageRenderer that controls conversion to RGB. RenderedImageServer.Builder; settings(ImageDisplaySettings settings). Specify the ImageDisplaySettings that control conversion to RGB. RenderedImageServer.Builder; store(DefaultImageRegionStore store). Specify the region store used to paint the underlying image. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html:1636,down,downsamples,1636,javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/images/servers/RenderedImageServer.Builder.html,1,['down'],['downsamples']
Availability,"requested downsample factor, defining the resolution at which pixels should be returned. String; getPath(). Get the requested ImageServer path, used as an identifier. int; hashCode();  ; RegionRequest; intersect2D(int x,; int y,; int width,; int height). Intersect to the specified 2D region. RegionRequest; intersect2D(ImageRegion region). Intersect to the specified 2D region, ignoring z and t. boolean; overlapsRequest(RegionRequest request). Returns true if the region specified by this request overlaps with that of another request. RegionRequest; pad2D(int xPad,; int yPad). Add symmetric padding to the x and y dimensions of a request. RegionRequest; pad2D(Padding padding). Add symmetric padding to the x and y dimensions of a request. String; toString();  ; RegionRequest; translate(int dx,; int dy). Create a RegionRequest equivalent to this one with the x and y coordinates updated by translation. RegionRequest; updateDownsample(double downsample). Create a RegionRequest equivalent to this one with the updated downsample value. RegionRequest; updatePath(String path). Create a RegionRequest equivalent to this one with the updated path. RegionRequest; updateT(int t). Create a RegionRequest equivalent to this one with the updated t value. RegionRequest; updateZ(int z). Create a RegionRequest equivalent to this one with the updated z value. Methods inherited from class qupath.lib.regions.ImageRegion; contains, createInstance, createInstance, createInstance, getHeight, getImagePlane, getMaxX, getMaxY, getMinX, getMinY, getPlane, getT, getWidth, getX, getY, getZ, intersects, intersects. Methods inherited from class java.lang.Object; clone, finalize, getClass, notify, notifyAll, wait, wait, wait. Method Details. toString; public String toString(). Overrides:; toString in class ImageRegion. createInstance; public static RegionRequest createInstance(ImageServer<?> server); Create a request for the full width and height of an ImageServer, for the default plane (first z-slice, ti",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html:3942,down,downsample,3942,javadoc/docs/qupath/lib/regions/RegionRequest.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html,1,['down'],['downsample']
Availability,"required. intersect2D; public RegionRequest intersect2D(int x,; int y,; int width,; int height); Intersect to the specified 2D region. Parameters:; x - x-coordinate of the second region's bounding box; y - y-coordinate of the second region's bounding box; width - width of the second region's bounding box; height - height of the second region's bounding box; Returns:; the clipped RegionRequest, which may be this if no clipping is required. updateZ; public RegionRequest updateZ(int z); Create a RegionRequest equivalent to this one with the updated z value. Parameters:; z - requested z position; Returns:; RegionRequest with the specified z value (may be this object unchanged). updateT; public RegionRequest updateT(int t); Create a RegionRequest equivalent to this one with the updated t value. Parameters:; t - requested t position; Returns:; RegionRequest with the specified t value (may be this object unchanged). updateDownsample; public RegionRequest updateDownsample(double downsample); Create a RegionRequest equivalent to this one with the updated downsample value. Parameters:; downsample - requested downsample position; Returns:; RegionRequest with the specified downsample value (may be this object unchanged). updatePath; public RegionRequest updatePath(String path); Create a RegionRequest equivalent to this one with the updated path. Parameters:; path - requested path position; Returns:; RegionRequest with the specified path value (may be this object unchanged). translate; public RegionRequest translate(int dx,; int dy); Create a RegionRequest equivalent to this one with the x and y coordinates updated by translation. Parameters:; dx - value to add to the x coordinate; dy - value to add to the y coordinate; Returns:; RegionRequest with the specified path value (may be this object unchanged). pad2D; public RegionRequest pad2D(int xPad,; int yPad); Add symmetric padding to the x and y dimensions of a request. Parameters:; xPad - padding to add along the x dimension; th",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html:9659,down,downsample,9659,javadoc/docs/qupath/lib/regions/RegionRequest.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html,2,['down'],['downsample']
Availability,"resentation of QuPath's version, parsed according to the rules of semantic versioning if possible. getSeparator() - Method in class qupath.lib.gui.tools.MeasurementExporter. Returns the separator used in between measurements. getSerializationExtension() - Static method in class qupath.lib.gui.prefs.PathPrefs. File extension used for serialization of ImageData (without the dot). getSeries() - Method in class qupath.lib.images.servers.bioformats.BioFormatsImageServer. Get the series index, as used by Bio-Formats. getServer() - Method in class qupath.lib.experimental.pixels.Parameters. Get the server. getServer() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the ImageServer for the current image displayed within the viewer, or null if ; no image is displayed. getServer() - Method in class qupath.lib.images.ImageData. Get the ImageServer. getServer(ImageRegion, double) - Method in class qupath.lib.images.servers.SparseImageServer.SparseImageServerManager. Request the server for a specific downsample. getServerBounds() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get an ImageRegion representing the full width and height of the current image. getServerBuilder() - Method in interface qupath.lib.projects.ProjectImageEntry. Get a ImageServerBuilder.ServerBuilder that can be used to open this image. getServerBuilderFactory() - Static method in class qupath.lib.images.servers.ImageServers. Get a TypeAdapterFactory to handle ServerBuilders. getServerHeight() - Method in class qupath.lib.gui.viewer.QuPathViewer. Get the height in pixels of the full resolution of the current image, or 0 if no image is currently open. getServerPath() - Method in class qupath.lib.images.ImageData. Get the path of the ImageServer. getServerType() - Method in class qupath.imagej.images.servers.ImageJServer;  ; getServerType() - Method in class qupath.lib.classifiers.pixel.PixelClassificationImageServer;  ; getServerType() - Method in class qupath.lib.gui.images.servers.ChannelDis",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:511037,down,downsample,511037,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['down'],['downsample']
Availability,"reshold. doWatershed(Mat, Mat, boolean) - Static method in class qupath.opencv.tools.ProcessingCV. Apply a watershed transform. doWatershed(Mat, Mat, double, boolean) - Static method in class qupath.opencv.tools.ProcessingCV. Apply an intensity-constrained watershed transform, preventing regions from expanding to pixels below a specified minimum threshold. doWatershed(SimpleImage, SimpleModifiableImage, boolean) - Static method in class qupath.lib.analysis.algorithms.Watershed. Apply a 2D watershed transform. doWatershed(SimpleImage, SimpleModifiableImage, double, boolean) - Static method in class qupath.lib.analysis.algorithms.Watershed. Apply a 2D watershed transform, constraining region growing using an intensity threshold. DOWNLOAD - Enum constant in enum class qupath.lib.gui.tools.IconFactory.PathIcons;  ; downsample(double) - Method in class qupath.lib.experimental.pixels.PixelProcessor.Builder. Set the downsample factor to use with requesting image regions. downsample(double) - Method in class qupath.lib.extension.svg.SvgTools.SvgBuilder. Specify downsample factor (defined in terms of the full resolution image space). downsample(double) - Method in class qupath.lib.images.servers.LabeledImageServer.Builder. Specify downsample factor. downsample(double) - Method in class qupath.lib.images.writers.TileExporter. Define resolution as a downsample value. downsamples(double...) - Method in class qupath.lib.gui.images.servers.RenderedImageServer.Builder. Specify downsamples; this is especially important for 'thick' objects (annotations, TMA cores); because the downsamples define the resolutions at which these will be rendered. downsamples(double...) - Method in class qupath.lib.images.writers.ome.OMEPyramidWriter.Builder. Specify downsample factors to use in the final pyramid. DragDropImportListener - Class in qupath.lib.gui.viewer. Drag and drop support for main QuPath application, which can support a range of different object types (Files, URLs, Strings,..). DragDr",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/index-all.html:271206,down,downsample,271206,javadoc/docs/index-all.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/index-all.html,1,['down'],['downsample']
Availability,"rictly enforced; (i.e. any objects have been clipped to non-overlapping tile boundaries). Parameters:; sharedBoundaryThreshold - minimum intersection-over-union (IoU) proportion of the possibly-clipped boundary; * for merging; overlapTolerance - amount of overlap allowed between objects, in pixels. If zero, the boundary must be; shared exactly. A typical value is 0.125, which allows for a small, sub-pixel overlap.; Returns:; an object merger that uses a shared boundary criterion and overlap tolerance. createSharedClassificationMerger; public static ObjectMerger createSharedClassificationMerger(); Create an object merger that can merge together any objects with similar ROIs (e.g. points, areas), the same; classification, and are on the same image plane.; ; The ROIs to not need to be touching; the resulting merged objects can have discontinuous ROIs. Returns:; an object merger that can merge together any objects with similar ROIs and the same classification. createTouchingMerger; public static ObjectMerger createTouchingMerger(); Create an object merger that can merge together any objects with similar ROIs (e.g. points, areas) that also; touch one another.; ; Objects must also have the same classification and be on the same image plane to be mergeable.; ; Note that this is a strict criterion following the Java Topology Suite definition of touching, which requires; that the boundaries of the geometries intersect, but the interiors do not intersect.; ; This strictness can cause unexpected results due to floating point precision issues, unless it is certain that; the ROIs are perfectly aligned (e.g they are generated using integer coordinates on a pixel grid).; ; If this is not the case, createSharedTileBoundaryMerger(double, double) is usually preferable, since it; can include a small overlap tolerance. Returns:; an object merger that can merge together any objects with similar ROIs and the same classification; See Also:. createSharedTileBoundaryMerger(double, double). ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/objects/utils/ObjectMerger.html:5939,toler,tolerance,5939,javadoc/docs/qupath/lib/objects/utils/ObjectMerger.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/objects/utils/ObjectMerger.html,1,['toler'],['tolerance']
Availability,"rid (usually 0). static boolean; hasJavaPreferences(). Attempt to load user JVM defaults - may fail if packager.jar (and any required native library) isn't found. static ObjectProperty<PathPrefs.ImageTypeSetting>; imageTypeSettingProperty(). Specify how setting the image type should be handled for images when they are opened for the first time. static void; importPreferences(InputStream stream). Import preferences from a stream. static BooleanProperty; invertScrollingProperty(). Invert the scrolling direction of the mouse applied to the viewer. static BooleanProperty; invertZSliderProperty(). Invert the z-slider for the viewer. static BooleanProperty; keepDisplaySettingsProperty(). Retain display settings (channel colors, brightness/contrast) when opening new images ; that have the same properties (channels, channel names, bit-depths). static ObjectProperty<PathPrefs.FontSize>; locationFontSizeProperty(). Preferred font size for the location text in the viewer. static BooleanProperty; maskImageNamesProperty(). Request that image names are hidden within the user interface. static IntegerProperty; maxMemoryMBProperty(). Get property representing the maximum memory for the Java Virtual Machine, ; applied after restarting the application. static IntegerProperty; maxObjectsToClipboardProperty(). The maximum number of objects that can be copied to the system clipboard. static IntegerProperty; maxUndoHierarchySizeProperty(). The requested maximum number of objects in a hierarchy for which QuPath should support undo/redo. static IntegerProperty; maxUndoLevelsProperty(). The requested maximum number of undo levels that QuPath should support. static IntegerProperty; minPyramidDimensionProperty(). Minimum image width or height before pyramidalizing (if required). static BooleanProperty; multipointToolProperty(). Create multiple points within the same annotation when using the counting tool. static BooleanProperty; navigationAccelerationProperty(). Apply acceleration/decelerati",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html:18006,mask,maskImageNamesProperty,18006,javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/gui/prefs/PathPrefs.html,1,['mask'],['maskImageNamesProperty']
Availability,"ring. Methods inherited from class java.lang.Object; clone, equals, getClass, hashCode, notify, notifyAll, wait, wait, wait. Methods inherited from interface qupath.lib.images.servers.ImageServer; getPixelCalibration, readBufferedImage, readRegion, readRegion. Constructor Details. RotatedImageServer; public RotatedImageServer(ImageServer<BufferedImage> server,; RotatedImageServer.Rotation rotation); Create an image server that rotates pixel requests for a second server by a specified increment of 90 degrees. Parameters:; server - ; rotation - . Method Details. getRotation; public RotatedImageServer.Rotation getRotation(); Get the rotation applied by this server. Returns:. readRegion; public BufferedImage readRegion(RegionRequest request); throws IOException; Description copied from interface: ImageServer; Read a 2D(+C) image region for a specified RegionRequest.; Coordinates and bounding box dimensions from the request are in pixel units, ; at the full image resolution (i.e. when downsample = 1).; ; All channels are always returned.; ; No specific checking is guaranteed to ensure that the request is valid, e.g. if it extends beyond the image; boundary then it is likely (but not certain) that the returned image will be cropped accordingly - ; but some implementations may contain empty padding instead.; Therefore it is up to the caller to ensure that the requests are within range.; ; However, it is expected that any returnable region will be at least 1x1 pixel in size, even if via high downsampling ; one might otherwise expect a 0x0 image. This is consistent with the idea of pixels representing point samples ; rather than little squares.; ; Note: One should avoid returning null, as this cannot be stored as a value in some map implementations ; that may be used for caching. Specified by:; readRegion in interface ImageServer<BufferedImage>; Overrides:; readRegion in class TransformingImageServer<BufferedImage>; Parameters:; request - the region for which pixels are requ",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RotatedImageServer.html:3994,down,downsample,3994,javadoc/docs/qupath/lib/images/servers/RotatedImageServer.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/servers/RotatedImageServer.html,1,['down'],['downsample']
Availability,"ring; public String toString(). Overrides:; toString in class ImageRegion. createInstance; public static RegionRequest createInstance(ImageServer<?> server); Create a request for the full width and height of an ImageServer, for the default plane (first z-slice, time point) ; and first resolution level downsample (usually 1, but not always). Parameters:; server - ; Returns:. createInstance; public static RegionRequest createInstance(ImageServer<?> server,; double downsample); Create a request for the full width and height of an ImageServer, for the default plane (first z-slice, time point). Parameters:; server - ; downsample - ; Returns:. createAllRequests; public static List<RegionRequest> createAllRequests(ImageServer<?> server,; double downsample); Create requests for the full width and height of an ImageServer, for all planes (z-slices and time points). Parameters:; server - ; downsample - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; ROI roi); Create a request that contains the pixels of the specified ROI.; This is calculated using the ROI bounding box. Parameters:; path - ; downsample - ; roi - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; Collection<? extends ROI> rois); Create a request that contains the pixels of the specified ROIs.; This is calculated using the ROI bounding boxes. Parameters:; path - ; downsample - ; rois - ; Returns:; Throws:; IllegalArgumentException - if the ROIs do not all fall on the same ImagePlane. createInstance; public static RegionRequest createInstance(String path,; RegionRequest request); Create a request that matches another request but with a different path. Parameters:; path - ; request - ; Returns:. createInstance; public static RegionRequest createInstance(String path,; double downsample,; ImageRegion region); Create a request corresponding to a specified ImageRegion.; This may also be used to construct a req",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html:5653,down,downsample,5653,javadoc/docs/qupath/lib/regions/RegionRequest.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/regions/RegionRequest.html,1,['down'],['downsample']
Availability,"ring memoryReport(CharSequence delimiter); Create a brief report on memory use, based on JavaCPP's Pointer class. Parameters:; delimiter - delimiter to use between elements of the report, e.g. "", "" or ""\n""; Returns:; See Also:. trackedMemory(); physicalMemory(). findMaxima; public static Collection<OpenCVTools.IndexedPixel> findMaxima(Mat mat,; Mat mask); Find maxima within an image. Parameters:; mat - image containing maxima; must be 2D and single-channel; mask - optional mask; Returns:. getMaskedPixels; public static List<OpenCVTools.IndexedPixel> getMaskedPixels(Mat mat,; Mat mask); Extract all the masked pixels within an image. Parameters:; mat - input image; must be single-channel; mask - mask of the same size as mat; Returns:; list of pixels, including their indices and values. extractMaskedFloats; public static float[] extractMaskedFloats(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pixels should be extracted; mask - the mask to apply to the input; channel - the channel index (zero-based) to consider; Returns:; a float array containing the values of the input filtered by the mask; Throws:; IllegalArgumentException - when the input and the mask don't have the same dimensions. extractMaskedDoubles; public static double[] extractMaskedDoubles(Mat input,; Mat mask,; int channel); Extract pixels from an image using a mask, limited to the specified channel index.; The mask can have one or multiple channels:. If the mask has only one channel, this channel is used.; If the mask is multichannel, only the specified channel is used. The input and the mask must have the same dimensions. Parameters:; input - the image from where the pi",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html:44290,mask,mask,44290,javadoc/docs/qupath/opencv/tools/OpenCVTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/tools/OpenCVTools.html,1,['mask'],['mask']
Availability,"ription; static void; calibrateImagePlus(ImagePlus imp,; RegionRequest request,; ImageServer<BufferedImage> server). Set an ImagePlus's Calibration and FileInfo properties based on a RegionRequest and PathImageServer. static void; calibrateObject(PathObject pathObject,; Roi roi). Set the properties of a PathObject based upon an ImageJ Roi. static FloatProcessor[]; colorDeconvolve(ColorProcessor cp,; ColorDeconvolutionStains stains). Apply color deconvolution, outputting 3 'stain' images in the same order as the stain vectors. static boolean; containsImageJRois(File file). Check whether a file is likely to contain an ImageJ ROI, based upon its extension ; or .zip file contents. static SortedMap<Number,PathObject>; convertLabelsToCells(ImageProcessor ipNuclei,; ImageProcessor ipCells,; double xOrigin,; double yOrigin,; double downsample,; ImagePlane plane). Convert integer labeled images into cell objects. static SortedMap<Number,PathObject>; convertLabelsToCells(ImageProcessor ipNuclei,; ImageProcessor ipCells,; Calibration cal,; double downsample,; ImagePlane plane). Convert integer labeled images into cell objects. static PathObject; convertToAnnotation(Roi roi,; double xOrigin,; double yOrigin,; double downsampleFactor,; ImagePlane plane). Create an annotation object for a specific ImageJ Roi, using an ImagePlus to help set properties. static PathObject; convertToAnnotation(Roi roi,; double downsampleFactor,; ImagePlus imp). Create an annotation object for a specific ImageJ Roi. static PathObject; convertToAnnotation(ImagePlus imp,; ImageServer<?> server,; Roi roi,; double downsampleFactor,; ImagePlane plane). Deprecated.; use instead convertToAnnotation(Roi, double, double, double, ImagePlane). static PathObject; convertToDetection(Roi roi,; double xOrigin,; double yOrigin,; double downsampleFactor,; ImagePlane plane). Create a detection object for a specific ImageJ Roi, using an ImagePlus to help set properties. static PathObject; convertToDetection(Roi roi,; do",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html:1778,down,downsample,1778,javadoc/docs/qupath/imagej/tools/IJTools.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/imagej/tools/IJTools.html,1,['down'],['downsample']
Availability,"riters.TileExporter. public class TileExporter; extends Object; Helper class for exporting image tiles, typically for further analysis elsewhere or for training up an AI algorithm. Author:; Pete Bankhead. Constructor Summary; Constructors. Constructor; Description; TileExporter(ImageData<BufferedImage> imageData). Create a builder to export tiles. Method Summary. All MethodsInstance MethodsConcrete Methods. Modifier and Type; Method; Description; TileExporter; annotatedCentroidTilesOnly(boolean annotatedCentroidTilesOnly). Specify whether tiles without any annotations over the tile centroid should be included. TileExporter; annotatedTilesOnly(boolean annotatedTilesOnly). Specify whether tiles that do not overlap with any annotations should be included. TileExporter; channels(int... channels). Export only specified channels. TileExporter; channels(String... channelNames). Export only specified channels, identified by name. TileExporter; downsample(double downsample). Define resolution as a downsample value. TileExporter; exportJson(boolean exportJson). Optionally export a JSON file that includes label information and image/label pairs, where available. TileExporter; fullImageTile(). Specify that a single tile should be generated corresponding to the full image. TileExporter; imageExtension(String ext). Specify a file extension for the original pixels, which determines the export file format. TileExporter; imageSubDir(String subdir). Specify a subdirectory within which image tiles should be saved. TileExporter; includePartialTiles(boolean includePartialTiles). Specify whether incomplete tiles at image boundaries should be included. TileExporter; labeledImageExtension(String ext). Specify a file extension for the labelled image, which determines the export file format. TileExporter; labeledImageId(String labelId). Specify an identifier appended to the filename for labeled images. TileExporter; labeledImageSubDir(String subdir). Specify a subdirectory within which labele",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/TileExporter.html:1423,down,downsample,1423,javadoc/docs/qupath/lib/images/writers/TileExporter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/TileExporter.html,1,['down'],['downsample']
Availability,"rmines the export file format. TileExporter; labeledImageId(String labelId). Specify an identifier appended to the filename for labeled images. TileExporter; labeledImageSubDir(String subdir). Specify a subdirectory within which labeled image tiles should be saved. TileExporter; labeledServer(ImageServer<BufferedImage> server). Optional server providing image labels. TileExporter; overlap(int overlap). Define tile overlap (both x and y) in pixel units at the export resolution. TileExporter; overlap(int overlapX,; int overlapY). Define tile overlap (x and y separately) in pixel units at the export resolution. TileExporter; parentObjects(Collection<? extends PathObject> parentObjects). Specify parent objects to define tiles. TileExporter; parentObjects(Predicate<PathObject> filter). Specify a filter to extract parent objects to define tiles. TileExporter; region(ImageRegion region). Define the region to be processed. TileExporter; region(RegionRequest region). Define the region to be processed, including downsample. TileExporter; requestedPixelSize(double pixelSize). Define resolution as a pixel size in calibrated units. TileExporter; tileSize(int tileSize). Define the tile size in pixel units at the export resolution. TileExporter; tileSize(int tileWidth,; int tileHeight). Define the horizontal and vertical tile size in pixel units at the export resolution. TileExporter; tRange(int minT,; int maxT). Define the range of timepoints to process. TileExporter; useROIBounds(boolean fullROIs). Optionally use the full ROI for parent objects, rather than tileSize(int, int). void; writeTiles(String dirOutput). Export the image tiles to the specified directory. TileExporter; zRange(int minZ,; int maxZ). Define the range of Z-slices to process. Methods inherited from class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Constructor Details. TileExporter; public TileExporter(ImageData<BufferedImage> imageData); Create a",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/TileExporter.html:3203,down,downsample,3203,javadoc/docs/qupath/lib/images/writers/TileExporter.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/lib/images/writers/TileExporter.html,1,['down'],['downsample']
Availability,"rom class java.lang.Object; clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait. Method Details. inputChannels; public PatchClassifierParams.Builder inputChannels(String... channels); Define the input channels using channel names. Parameters:; channels - ; Returns:; See Also:. inputChannels(int...). inputChannels; public PatchClassifierParams.Builder inputChannels(int... channels); Define the input channels using (zero-based) channel numbers. Parameters:; channels - ; Returns:; See Also:. inputChannels(String...). inputChannels; public PatchClassifierParams.Builder inputChannels(Collection<? extends ColorTransforms.ColorTransform> channels); Define the input channels from a collection of color transforms.; An ordered collection (e.g. list) should be used, since the iteration order ; is important. Parameters:; channels - ; Returns:. inputResolution; public PatchClassifierParams.Builder inputResolution(PixelCalibration cal,; double downsample); Define the input resolution using a pixel calibration and a scaling factor. Parameters:; cal - input calibration; if null, a default calibration will be used; downsample - scaling factor (1.0 to use the calibration directly); Returns:. inputResolution; public PatchClassifierParams.Builder inputResolution(PixelCalibration cal); Define the input resolution using a pixel calibration object. Parameters:; cal - ; Returns:. halo; public PatchClassifierParams.Builder halo(int padding); Define a halo that is symmetric in x and y. Parameters:; padding - padding value, to be added both before and after rows and columns.; Returns:; See Also:. halo(Padding). halo; public PatchClassifierParams.Builder halo(Padding halo); Define a halo using a padding object. Parameters:; halo - ; Returns:; See Also:. halo(int). patchSize; public PatchClassifierParams.Builder patchSize(int patchSize); Define the requested square patch size. Parameters:; patchSize - width and height of the patch; Returns:. patchSize; pub",MatchSource.WIKI,qupath,qupath,v0.5.1,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html:4511,down,downsample,4511,javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,https://qupath.github.io,https://qupath.github.io/javadoc/docs/qupath/opencv/ml/PatchClassifierParams.Builder.html,1,['down'],['downsample']
