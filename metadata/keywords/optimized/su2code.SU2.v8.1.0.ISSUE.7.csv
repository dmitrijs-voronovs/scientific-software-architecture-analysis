quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Testability,"The previous commit 4eeb6f9 replaces `std::unordered_set` by `std::set` for the collection of neighbors of a vertex. . For an `unordered_set`, it is not specified in which order the elements show up in the iteration over all neighbors. Through floating-point arithmetics, the order probably influences the residuals in the regression tests; I think few testcases failed because a different order was used. With `unordered_set`, testcases would fail already if another implementation of the standard library is used. In contrast, `set` is sorted by `std::less` by default. `unordered_set` is also used in other places in the code, where it is ok:; - `Point_Map` in `CPhysicalGeometry::DistributeColoring`: only used to sort into `Global2Local`; - `processedMarkers` in `CFlowTractionInterface::ComputeVertexAreas`: not iterated through; - `markerPoints` in `CFEASolver::Set_VertexEliminationSchedule`: not iterated through",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1346#issuecomment-895004707:334,test,tests,334,https://su2code.github.io,https://github.com/su2code/SU2/pull/1346#issuecomment-895004707,3,['test'],"['testcases', 'tests']"
Testability,"The primary changes in #652 were related to replacing legacy blocking send/receive calls with non-blocking versions (with the receives accepted in a first-come manner using WaitAny()) for all of the point-to-point communications. At the time, I saw modest time/iteration improvements (10-20%) across the board when testing scalability on a fairly large cluster (Xeon nodes with Infiniband). Can you check if there's anything in your network setup that would render the non-blocking communications ineffective? That would be my best guess since it was the major change.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894#issuecomment-593130929:315,test,testing,315,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593130929,1,['test'],['testing']
Testability,"The problem is that I am behind more than 1100 commits. I have already created another branch starting from the current develop and I am running the test cases from the paper in the description. I may be able to merge the new branch into this one and then I'll be on par with the develop, right?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1901#issuecomment-2197419482:149,test,test,149,https://su2code.github.io,https://github.com/su2code/SU2/pull/1901#issuecomment-2197419482,1,['test'],['test']
Testability,"The problem that caused Travis to fail is related to a broader issue:; There are several configuration parameters that have a default value (like REYNOLDS_LENGTH =1.0 by default). This means that it is legitimate not to include these parameters in the cfg file.; However, the Python environment is oblivious to these defaults values: if a parameter is missing in the cfg file, then it is not a member of the Python list config. I think it is more consistent to set the default values also in the Python environment. I shall be happy to create such a pull request. However, before I do that I'd like to check if this has not been set intentionally, for a logic that escapes me. ; I shall appreciate a comment about that.; Eran",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/520#issuecomment-376941826:654,log,logic,654,https://su2code.github.io,https://github.com/su2code/SU2/pull/520#issuecomment-376941826,1,['log'],['logic']
Testability,"The regression tests fail on Ubuntu 20.04 aarch64:. ```; ==================================================================; Summary of the parallel tests; python version: 3.8.10 (default, Mar 15 2022, 12:22:08) ; [GCC 9.4.0]; passed - discadj_naca0012; passed - discadj_cylinder3D; passed - discadj_arina2k; passed - ea_naca64206; passed - discadj_rans_naca0012_sa; passed - discadj_rans_naca0012_sst; passed - discadj_incomp_NACA0012; passed - discadj_incomp_cylinder; passed - discadj_incomp_turb_NACA0012_sa; passed - discadj_incomp_turb_NACA0012_sst; passed - discadj_axisymmetric_rans; passed - unsteady_cylinder; passed - unsteady_cylinder_windowed_average_AD; * FAILED - unsteady_cylinder_windowed_average; passed - unsteady_cylinder_DT_1ST; passed - pitchingNACA0012; passed - transonic_stator; * FAILED - discadj_fea; passed - discadj_heat; passed - discadj_fsi; * FAILED - discadj_fsi_airfoil; passed - discadj_cht; passed - da_sp_pinArray_cht_2d_dp_hf; passed - da_sp_pinArray_cht_2d_mf; passed - da_unsteadyCHT_cylinder; passed - discadj_topol_optim; passed - unsteady_NACA0012_restart_adjoint; passed - unsteady_NACA0012_adjoint_only; passed - restart_shape_optimization; * FAILED - dyn_discadj_fsi; * FAILED - grad_smooth_sob; Tests failed; ```. It is the same version of Python and GCC as on the Github Actions hosted runner.; We will need logic to differentiate the expected results on x86_64 and aarch64 :-/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1619#issuecomment-1132634653:15,test,tests,15,https://su2code.github.io,https://github.com/su2code/SU2/pull/1619#issuecomment-1132634653,4,"['Test', 'log', 'test']","['Tests', 'logic', 'tests']"
Testability,"The regression tests pass locally at my pc, but not on github. Not sure what is going on here...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1560#issuecomment-1094332912:15,test,tests,15,https://su2code.github.io,https://github.com/su2code/SU2/pull/1560#issuecomment-1094332912,1,['test'],['tests']
Testability,"The residuals (and indeed the converged results) change for some cases due to these changes (by very small amounts). Looking at limiter fields there are some differences that justify this. Those differences are present mostly in smooth flow regions, why in this regions?; Because this is where the old edge loops had a lot of logic to avoid divisions by zero, that is not required for the point loop implementation. There was also a change to the epsilon that initializes the min/max calculation (it now comes from the traits of the datatype).; I used the transonic_stator case to check that:; - The computed limiters are not too different, especially near periodic boundaries (for which a change in how min/max neighbor calculation was required).; - The results do not depend on number of ranks / threads. This is the flow field (for reference):; ![image](https://user-images.githubusercontent.com/38071223/72300708-779eac00-365c-11ea-9054-8b83a6ca8fe3.png). This shows the x-mom limiters near the trailing edge for the develop version:; ![image](https://user-images.githubusercontent.com/38071223/72300849-e3811480-365c-11ea-9fc6-3989c59d9997.png). And this for this branch:; ![image](https://user-images.githubusercontent.com/38071223/72300903-07445a80-365d-11ea-8bf0-eba72a2b50af.png). You can tell a slight ""darkening"" close to the blue spots, and also before the small spot close to the wall, before the shock. Near the periodic boundaries there are no visible changes.; I ran the case with 1 rank 1 thread (1/1), 1/4 and 4/8 (32 total), the results are the same (the convergence rate is different due to the behavior of the preconditioner).; [files.zip](https://github.com/su2code/SU2/files/4056576/files.zip). If you would like a specific test, or see some weird behavior in one of your cases let me know, but since only a few regressions changed I will only post comparisons of cases with substantial changes.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/834#issuecomment-573929388:326,log,logic,326,https://su2code.github.io,https://github.com/su2code/SU2/pull/834#issuecomment-573929388,2,"['log', 'test']","['logic', 'test']"
Testability,"The results look very convincing, also nice to see such an improvement in convergence. Could you add the ramp case as a regression test to this PR (you could add them to parallel_regression.py)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2006#issuecomment-1499605613:131,test,test,131,https://su2code.github.io,https://github.com/su2code/SU2/pull/2006#issuecomment-1499605613,1,['test'],['test']
Testability,"The single objective/multi surface case was added back in along with a regression test by these previous commits; I do still think it is reasonable to wait until after #497 is merged in so that I can be sure to pass their tests as well, and I will be working on updating the tutorial separately. ; In short, this can be reviewed at any time, and reviewers should expect an additional update if #497 is merged in first.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/494#issuecomment-362947809:82,test,test,82,https://su2code.github.io,https://github.com/su2code/SU2/pull/494#issuecomment-362947809,2,['test'],"['test', 'tests']"
Testability,"The test case seems to work, I only see small differences in the last digit w.r.t the results I computed on my workstation, which is ok from my side. How can I access the results computed by GitHub?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2024#issuecomment-1539739715:4,test,test,4,https://su2code.github.io,https://github.com/su2code/SU2/pull/2024#issuecomment-1539739715,1,['test'],['test']
Testability,The test cases are going to fail because the change in the Jacobians,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/65:4,test,test,4,https://su2code.github.io,https://github.com/su2code/SU2/pull/65,1,['test'],['test']
Testability,The test values are sensitive to compiler versions and options.; Just run the failing cases locally and if the results looks reasonable update the results based on the github tests.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2295#issuecomment-2180826745:4,test,test,4,https://su2code.github.io,https://github.com/su2code/SU2/pull/2295#issuecomment-2180826745,2,['test'],"['test', 'tests']"
Testability,The test would go in UnitTests,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1637#issuecomment-1128772702:4,test,test,4,https://su2code.github.io,https://github.com/su2code/SU2/pull/1637#issuecomment-1128772702,1,['test'],['test']
Testability,The testcases contain many comments for OUTPUT_FILES and TABULAR_FORMAT that were outdated descriptions. I have removed all comments for these keywords in the testcases. Actually all testcases need to be stripped from descriptive comments and keywords that are not used or use the default value. This will be a cleanup chore for another PR.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1465#issuecomment-1008616812:4,test,testcases,4,https://su2code.github.io,https://github.com/su2code/SU2/pull/1465#issuecomment-1008616812,3,['test'],['testcases']
Testability,"The unsteady CHT regression is failing, but I cannot understand why. I should not have touched parts of the code that influence that regression test. May I ask you if you have any idea of the reason for this fail?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1295#issuecomment-858716723:144,test,test,144,https://su2code.github.io,https://github.com/su2code/SU2/pull/1295#issuecomment-858716723,1,['test'],['test']
Testability,"The use of SU2deform in #620 is apparently not part of the test suite, so testing with Python 3.7 doesn't replicate the issue.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/622#issuecomment-444086237:59,test,test,59,https://su2code.github.io,https://github.com/su2code/SU2/pull/622#issuecomment-444086237,2,['test'],"['test', 'testing']"
Testability,"The verification you show is for a low-Mach test case. The omitted term in the stress tensor (the isotropic contribution from the turbulent stress) is mostly applicable for flows with strong velocity dilatation. Have you tried the new SST model for a flow with a shock wave? For example, how do the results change for the RAE2822 case?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/797#issuecomment-546389216:44,test,test,44,https://su2code.github.io,https://github.com/su2code/SU2/issues/797#issuecomment-546389216,1,['test'],['test']
Testability,The win build failed again but I have just ran the same tests on my forked repository and it builds correctly.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1387#issuecomment-938518710:56,test,tests,56,https://su2code.github.io,https://github.com/su2code/SU2/pull/1387#issuecomment-938518710,1,['test'],['tests']
Testability,"There are 2 cases in the testcases repository, both are using the Euler solver. Maybe also check if your case is running correctly with the settings from those testcases.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2255#issuecomment-2044382869:25,test,testcases,25,https://su2code.github.io,https://github.com/su2code/SU2/issues/2255#issuecomment-2044382869,2,['test'],['testcases']
Testability,"There are some tricks possible to add the `<<` operator. Not all the code base needs refactoring. We can have both styles for the future as `()` syntax is very powerful thanks to fmtlib. . ```cpp; cout << ""Values at node<< nodeId << "" are "" << val[0] << "" "" << val[1] << "" "" << val[3] << endl;; ```. can be transformed directly to . ```cpp; LOG(""Values at node {} are {}"",nodeId,val);; ```. Equivalently . ```cpp; LOG << fmt::format(""Values at node {} are {}"",nodeId,val); ; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1991#issuecomment-1488340098:341,LOG,LOG,341,https://su2code.github.io,https://github.com/su2code/SU2/issues/1991#issuecomment-1488340098,2,['LOG'],['LOG']
Testability,"There are two causes for the failed test: your branch is currently failing the compute_polar test case, and an unrelated issue involving time-outs that is effected tests for everyone. . You can click the 'details' link to the right of the failed test in section just below the comments, or click on the red x next to any failed test. This takes you to the travis page, where through following through the links you can find which tests failed, and access the test logs. . The tests with exclamation points on the travis page are the ones that are failing due to other issues, and for now I would suggest focusing on the compute_polar test case.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/520#issuecomment-376704607:36,test,test,36,https://su2code.github.io,https://github.com/su2code/SU2/pull/520#issuecomment-376704607,10,"['log', 'test']","['logs', 'test', 'tests']"
Testability,"There is a lot of boilerplate code in the code base for screen output like. ```cpp; if (rank == MASTER_NODE) {; cout << ""My Message"" << endl;; }; ```; This is not a good example from many points of view. From performance-wise overly used `std::endl` is a killer. If one needs to redirect output to file it is additional loss etc. ; From the user's perspective, it is not possible to set the logging level. At least a three-level logging would be nice (INFO/WARNING/DEBUG) this also makes life easier for developers too. It is also nice to have a rotating log file if one runs longer cases on the HPC systems. After a while the log files getting so bloating . **Describe the solution you'd like**. A configurable logger would be better with defaults not changing the current system. ```text; % LOGGING LOCATIONS default is SCREEN; LOG= (SCREEN, FILE); % Default is SU2.log; LOG_FILE = ""myLog.log""; % Logging level INFO/DEBUG ; LOG_LEVEL = ""DEBUG"" ; ```; In the code . For general messages ; ```cpp; INFO << ""My useful information"";; DEBUG << ""Operation done in "" << time << "" seconds"";; ```. There is also a lot of `--------------- Start Solver ----------` type headers in the code we can automate this as . ```cpp; HEADER << ""Start Solver""; ; ```. **Describe alternatives you've considered**. A proper choice of logging library is required. Alternatives I considered: . [AixLog](https://github.com/badaix/aixlog). - Header only; - Vanilla C++11, no dependencies; - Uses `<<` operator; - MIT licence. [spdlog](https://github.com/gabime/spdlog); - Header only/compiled; - C++11; - Uses LOG("""") syntax ; - More users/mature project ; - MIT licence. [easylogging](https://github.com/amrayn/easyloggingpp); - Header only; - C++11; - Uses `<<` operator; - MIT licence . [glog](https://github.com/google/glog); - C++14 required the codebase must be bumped (may not be worth it); - Uses `<<` operator ; - Google Licence (IDK if it comp. with GPL). I am in favor of spdlog library . **Additional context**; *Ad",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1991:391,log,logging,391,https://su2code.github.io,https://github.com/su2code/SU2/issues/1991,10,"['LOG', 'Log', 'log']","['LOG', 'LOGGING', 'Logging', 'log', 'logger', 'logging']"
Testability,"There is no conflict because both here and there the files were moved, to SU2_FSI and FSI_tools respectively.; What there is now is a massive amount of duplication, if you and Nicola want to try and fix that, it would be the ideal outcome for SU2. I made the final changes Tom and I had requested on this PR because it did not seem like this was going anywhere... But if you are still working on it, well do what you think is best, I don't have time to figure out how to get rid of the duplication. ""develop"" needs to work as a staging area, if you have a chunk of work that can be merged, without breaking compilation, testcases, or interfering too much with the work of other folks, then it should be merged ASAP to avoid this kind of situation.; For example refactoring this ""FSIInterface.py"" file into direct and adjoint should have possibly been a PR by itself to set the stage for the rest. Anyway, regarding the initial proposed changes this looks good to me.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/902#issuecomment-743422907:620,test,testcases,620,https://su2code.github.io,https://github.com/su2code/SU2/pull/902#issuecomment-743422907,1,['test'],['testcases']
Testability,"There is one thing that is not mentioned yet, which is rather important. I assume we are talking RANS here. In that case it does not make sense to ramp up the CFL number to values higher than 50 or so with the current segregated setup of mean flow, turbulence and possibly transition solvers (not even talking about multidisciplinary problems). The segregated character makes it extremely flexible for adding additional models, but it does not work for a full blown Newton solver. In that case you have to switch to a strong coupling between the mean flow and the turbulence solver, which will require a significant change in the data-structures. Also, computing the exact Jacobians for a second order scheme is not trivial and as Tom mentioned, it may be needed to use AD tools for that, which makes it quite costly. Furthermore the memory usage for storing the exact Jacobians is very big. An alternative would be to use a matrix free approach, i.e. use a Frechet derivative for the matrix vector products in the Krylov solver (although you still need a good preconditioner). When a coupled with a turbulence model (especially k-omega type models), this will be extremely sensitive to the epsilon parameter you have to choose. There are ways around this, e.g. using dual numbers and possibly with CoDiPack, but these will increase your computational cost by at least a factor of 4. I think it is definitely worth trying, but seen all the pitfalls you may run into, you may want to test things out first with a test solver before implementing it in SU2 itself. My two cents,. Edwin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/648#issuecomment-460908007:1483,test,test,1483,https://su2code.github.io,https://github.com/su2code/SU2/issues/648#issuecomment-460908007,2,['test'],['test']
Testability,"There is sth weird going on with the added inlet regression test. And I got to believe that it has to do with the primitive-container-indexing that took place in #1392 because when I revert to commit fe6ba90aab388ed6d9ff77fa3cb03434fe86654c right before that merge took place everything works fine. Maybe I also did a mistake when porting the CSpeciesSolver to that new structure. I am trying to do a verification of the inlet files by using the written example_inlet_file as input which should result in the very same history as the non-inlet version. I see a difference in Residuals which is sometimes not consistent (I had cases where I cycled through 3 different outcomes for the inlet version in a random order...wtf). It has nothing to do with the wrong values being read in and made available to the Solver, they are perfect. I now did 2 full-time days of debugging and I a don't get it. I have traced the problem down quite a bit and know which code lines I have to comment to make the problem go away ... but it doesnt make sense: I am not allowed (I can, but then I have non-equal diffs) to write anything (but zero!) in certain blocks of the local variable `profileData` in `CMarkerProfileReader`. That is only the case for more than 1 species equation! I also overwrote the `Inlet_Species_Var` using the `SetUnformInlet` which just takes the cfg-Marker values. . It seems to be some memory-problem and valgrind trys to speak to me but can only point me to the constructor of the Avg_GradSpecies for the volume in CDriver and tells me about a `Conditional jump or move depends on uninitialised value(s)` in `CSysSolve.cpp:131`; ```c++; if ((nrm <= 0.0) || (nrm != nrm)) {; ```; and is supposed to originate from `CDriver.cpp:1366` via a `Uninitialised value was created by a heap allocation`; ```c++; numerics[iMGlevel][SPECIES_SOL][visc_term] = new CAvgGrad_Species<Indices>(nDim, nVar_Species, true, config);; ```; ```c++; 338 --139924-- REDIR: 0x53dc330 (libstdc++.so.6:operator new[](un",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1388#issuecomment-968058603:60,test,test,60,https://su2code.github.io,https://github.com/su2code/SU2/pull/1388#issuecomment-968058603,1,['test'],['test']
Testability,"There might be a problem here: If I understood correctly once you login to Gritter using your GitHub account, it opens all the git access that you have to all the community that is in the Gritter group.; I have, and probably other people also do, access to GitHub locations (other than SU2) which are not open for the public (like Github of commercial companies). In the Gritter login page, I could see all these locations but could not remove those that are not SU2 related.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/645#issuecomment-515093449:66,log,login,66,https://su2code.github.io,https://github.com/su2code/SU2/issues/645#issuecomment-515093449,2,['log'],['login']
Testability,"There seems to be a bug in the multigrid agglomeration. I came across this issue while running the **parallel** regression tests on a local machine. Here, everything was fine. On travis, however, the laminar flatplate case failed. So I ran the case several times and I noticed that the agglomeration rate changes randomly between. `MG level: 3 -> CVs: 97. Agglomeration rate 1/3.28. CFL 3.02.`. and. `MG level: 3 -> CVs: 98. Agglomeration rate 1/3.24. CFL 3.03.`. each time you run the case (sometimes you have to try it a lot of times to get the other result though). This of course also gives slightly different solutions. . For more information just check the most recent travis ci run at pull request #242 (https://travis-ci.org/su2code/SU2/jobs/131067620). Note that this bug also occurs on the develop branch. I labeled this issue ""priority"" because it could potentially lead to other problems as well.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/276:123,test,tests,123,https://su2code.github.io,https://github.com/su2code/SU2/issues/276,1,['test'],['tests']
Testability,"There seems to potentially be a bug with doing an unsteady dual-timestepping simulation without a provided initial condition (restart file):. When no restart file is provided, the first inner iterations have Time_Iter=0 and Cur_Time=0 (the state **before** these inner iterations). After completion of this time iteration, a file `flow_00000.vtu` and all others are outputted. These files are _not_ the initial condition as specified by the configuration file -- they seem to actually be the solution after the first time step. This can be reproduced easily in the config file I have attached to this issue (an updated version of TestCases/plunging_naca0012 for SU2 v8). The `flow_00000.vtu` file has non-uniform flowfields, which doesn't make sense. For simulations where a restart file like `restart_00000.dat` is provided, the Time_Iter=1 and Cur_Time=dt (the state **after** these inner iterations), and the subsequently outputted files have the correct time iteration appended to it. I think that for non-restart unsteady simulations, the IC should be outputted as solely just the initialization before any inner iterations are completed, Time_Iter++ and Cur_Time+=dt, and THEN inner iterations performed. [plunging_NACA0012.cfg.txt](https://github.com/user-attachments/files/16912625/plunging_NACA0012.cfg.txt). **Bug report checklist**; *Please make sure that you have followed the checklist below, many common problems can be solved by:*. - [X] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [X] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [X] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: Linux (Ubuntu 22.04); - C++ compiler and version: GNU; - MPI implementation and version: MPICH; - SU2 Version: v8.0.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2353:630,Test,TestCases,630,https://su2code.github.io,https://github.com/su2code/SU2/issues/2353,1,['Test'],['TestCases']
Testability,"These are all fantastic questions. I have exclusively used SLSQP for any optimizations that I have run. So, I can only speak to that optimization algorithm. . > Why do we want the gradient norm to be ~1E-6?. Not sure why this is. I agree with what @economon said. These tuning parameters are to coax out an ideal step size for the optimizer. As you can imagine, the ideal step size is wildly varying depending on the optimization objectives/constraints, scales of the geometry, and types/numbers of design variables that are being used. You have to play this game of scaling the objectives and constraints in different ways to coax out the ideal first step. In my limited testing, the value of 1E-6 for the gradient norm seems to work well for 3D RANS aerodynamic shape optimizations of an aircraft wing when using FFD control points to change the shape of the wing. This is a specific use case that was the subject of a lot of the underlying research that resulted in the shape optimization framework. Which is likely why I have had good results using this rule of thumb. . > Is 1E-6 a good rule? Or is it just a decent starting point, and values very different from 1E-6 are used in practice? Also, if this is ""a good rule,"" then shouldn't we just automatically rescale the problem after the first design iteration?. Scaling in an optimization problem can be pretty frustrating and time consuming. Anecdotally, I have been using @economon 's suggestions of leaving everything else as default (value of 1) and only playing with the objective and constraint scalings to get a good first step size. As mentioned before, this step size is of different values for different problems, which is why it is difficult to come up with universal scalings that would work for most problems. But I am hoping to address some of these scaling issues in #923 . . I haven't really found much good literature on this problem, but I might be looking in the wrong places. Recommendations are welcome. . A big boon is hav",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/733#issuecomment-616810829:672,test,testing,672,https://su2code.github.io,https://github.com/su2code/SU2/issues/733#issuecomment-616810829,1,['test'],['testing']
Testability,"These could be simple unit tests, or for some larger automated tasks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/228:27,test,tests,27,https://su2code.github.io,https://github.com/su2code/SU2/issues/228,1,['test'],['tests']
Testability,"These timings were all run this morning on the same cluster. . Using qperf, I'm seeing 80 microsecond latency. I'm also seeing the expected bandwidth using qperf as well. I would think that mpi would behave similarly but 100% sure. . I'm quite sure that the jobs are being launched correctly. I've checked that a bunch of times since that was my first instinct. I've both logged into all the machines and watched top and everything looked normal. And I've tried running SU2 v6 before and after v7, launching them the same way, and I keep getting the same numbers. I'm not sure how to check whether there is any reason non blocking comm would be ineffective. If you have any ideas I can certainly try something. I tried to download vampirtrace which seemingly can profile mpi, but it failed to compile against my version of mpi. When I get the chance I can try a different version of openmpi and see if I can get it running. The networking setup is pretty simple with all 4 machines plugged into the same switch and they share their own vlan as part of a bigger network. As I said, I ordered some faster networking equipment to see if it makes a difference (though I'm honestly not 100% sure that what I ordered will work with my comps but we'll see.)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894#issuecomment-593144776:372,log,logged,372,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593144776,1,['log'],['logged']
Testability,"They may be too high. This is certainly the case whether one runs in a dimensional or non-dimensional mode. It may be sufficiently low for one mode but marginally low for the second mode. Therefore, we suggest clipping the solution relative to the TKE and Omega freestream values such that:. TKE_LowerLimit = C_k * TKE_infinity; Omega _LowerLimit = C_w * Omega_infinity. Where C_k and C_w are constants. . The control over these constants is given to the user, However based on our 20 years of experience with the k-w models, Omega will not drop below 1E-3 * Omega_infinity (converged solution). However, in the process of convergence, it may reach lower values. Therefore, a value of . C_w = 1E-6. is reasonable. The solution of TKE is not very sensitive to C_K (assume it is sufficiently low). We recommended:. C_K = 1E-20. setting these as default values. . ## Related Work; Results of the change on convergence of VFE2 test case are presented. Two configurations of CFL adaptation were tested on both the original and modified lower limit code, ; 1. CFL_ADAPT_PARAM= ( 0.99, 1.005, 5.0, 50.0, 0.0001 ) named max CFL 50 ; 2. CFL_ADAPT_PARAM= ( 0.99, 1.05, 5.0, 200.0, 0.0001 ) named max CFL 200. ![rms Rho](https://github.com/su2code/SU2/assets/139676851/6481464c-6da3-4565-8415-d19d9ea211ab). ![rms k](https://github.com/su2code/SU2/assets/139676851/e1582ea2-f77e-4814-9eda-dd41c006aabf). we point out that beyond the change in maximum CFL, also the acceleration rate is changed. . Beyond adding robustness allowing the the use of a CFL of 200 which diverges under the original limit , the modified limit allows for better convergence of the flow and turbulence residuals for CFL of 50. Plots of the Lift and drag Coefficients are added here showing that results are not affected by the new limit, and additionally convergence is slightly quicker for the lift coefficient even with a CFL of 50 . . ![CL](https://github.com/su2code/SU2/assets/139676851/61adc0af-9449-41e8-aac7-e985ca3c9bdb); ![CD]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2323:1432,test,tested,1432,https://su2code.github.io,https://github.com/su2code/SU2/pull/2323,1,['test'],['tested']
Testability,They should be due to SU2_SOL not playing nice with the discrete adjoint for a while.; I think @economon put a fix for that in #641?; @clarkpede can you apply the EXIT_FAILURE change to #641? Those tests should pass there.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/649#issuecomment-463602220:198,test,tests,198,https://su2code.github.io,https://github.com/su2code/SU2/pull/649#issuecomment-463602220,1,['test'],['tests']
Testability,"This PR addresses the dual-time solver of NEMO. A small lack of initialization of the solutions was causing problems. ; There are also some small code clean-ups here and there. Our current regression uses regular time-stepping, not sure if its worth adding an additional case for this.; I have yet to fully test this to make sure it works properly. ## Related Work; #1391 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1533:307,test,test,307,https://su2code.github.io,https://github.com/su2code/SU2/pull/1533,2,['test'],['test']
Testability,"This PR adds an updated doxyfile (thanks Gigi Martinelli!) and a logo directly to SU2/Common/doc. Doxygen is now set up to be run directly from that directory with. $ doxygen su2_doxyfile. and an html/ directory will be created with the output. The latest Doxygen docs for v5.0 have been generated and can be found here: http://su2.stanford.edu/doxygen/. However, we have many warnings when running doxy, and we can do a lot more to improve the documentation. We should customize further the doxyfile, update the SU2/Common/doc/docmain.hpp, and clean / improve the doxy comments throughout the code. Any volunteers to help?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/373:65,log,logo,65,https://su2code.github.io,https://github.com/su2code/SU2/pull/373,1,['log'],['logo']
Testability,"This PR contains two items:; 1. Improvements to the periodic BC. The periodic BCs are now more stable, especially in parallel.; 2. Memory clean up. The RANS solver is now entirely free of memory leaks. I recommend that everyone should run valgrind (http://valgrind.org) on their branches after integrating, in order to check for memory problems and to fix them. While all tests are passing, it is possible that you may see segfaults or other memory problems on your individual branches, now that the class destructors are all active when the code exits. Please let me know asap if you have any problems.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/294:372,test,tests,372,https://su2code.github.io,https://github.com/su2code/SU2/pull/294,1,['test'],['tests']
Testability,This PR finally passed the tests! Can I get some review feedback @economon and/or @talbring? It would be great to have this merged ASAP so no one adds any new code incompatible with Python 3.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/424#issuecomment-343013631:27,test,tests,27,https://su2code.github.io,https://github.com/su2code/SU2/pull/424#issuecomment-343013631,1,['test'],['tests']
Testability,"This PR fixes a bug in the ADT that was introduced to circumvent the Allgatherv functionality. Allgatherv is now available in SU2_MPI, hence the original code has been restored. Due to this correction the convergence values of the 2D axial stage regression test had to be altered.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/493:257,test,test,257,https://su2code.github.io,https://github.com/su2code/SU2/pull/493,1,['test'],['test']
Testability,"This PR improves the capabilities of the Py wrapper by exposing new members of the driver:. - Extracting information (tag, type, number of vertices, ...) on the different markers involved in the computation.; - Adding more Set/Get functions for vertices values.; - Adding the possibility to customize the computation with non-uniform and unsteady boundary conditions, currently implemented for solid boundary motion (FSI applications) and solid thermal quantities (temperatures or heat fluxes, CHT applications). This could be extended to other type of BC's (e.g. user-defined inlet velocity profile).; - Adding proper reg tests for the Python wrapper (see also PR#19 from TestCases repo that has to merged before.). EDIT: Reg tests still to be committed once PR in TestCases is merged.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/488:623,test,tests,623,https://su2code.github.io,https://github.com/su2code/SU2/pull/488,4,"['Test', 'test']","['TestCases', 'tests']"
Testability,"This PR integrates new MKL features into SU2 to accelerate performance on Intel architectures. Changes 1) and 2) below are protected by a ""HAVE_MKL"" preprocessor flag. To observe performance improvement from change 2), the ""DIRECT_CALL_MKL_SEQ"" compiler flag must be enabled. These changes require MKL 2019 or newer, as the JIT GEMM feature is a brand new feature. 1) Integrate MKL JIT GEMM to accelerate MatrixMatrix and MatrixVector Products. ; 2) Use LAPACK DGETRF + DGETRS in place of Gaussian Elimination ILU when MKL is present. ; 3) Use memcpy in Gaussian Elimination ILU. Source/dest overlap is not a concern and this is faster. The changes improve Broadwell performance by up to 18% and Skylake performance by up to 28%. These improvements were measured on the Inviscid_ONERA_M6 tutorial. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/543:1348,test,test,1348,https://su2code.github.io,https://github.com/su2code/SU2/pull/543,1,['test'],['test']
Testability,"This PR introduces a quick fix for the output routine. It allows to print grid velocities also if the new mesh solver is used. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1412:479,test,test,479,https://su2code.github.io,https://github.com/su2code/SU2/pull/1412,1,['test'],['test']
Testability,"This PR is ready from my point of view. All periodic / turbomachinery meshes and regressions have been updated (thanks @salvovitale), and I can confirm they converge with the new periodic implementation. Only a few other regression tests needed to be updated due to the refactoring of the MPI, but they were very minor. If the tests pass, then I recommend we merge very soon. Any final comments or reviews are most welcome.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/652#issuecomment-484730590:232,test,tests,232,https://su2code.github.io,https://github.com/su2code/SU2/pull/652#issuecomment-484730590,2,['test'],['tests']
Testability,"This PR simply aims to cleanup, fix dates, and remove any ""fluff"" from the test/regression cases in SU2. This will not affect the cases in the V&V folder. Its a purely maintenance pr, while I have some time to be productively unproductive. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1845:75,test,test,75,https://su2code.github.io,https://github.com/su2code/SU2/pull/1845,2,['test'],['test']
Testability,"This Pull Request is the long-awaited overhaul of the front-end partitioning routines for the finite volume solver. It is both a complete refactoring and a streamlining of the routines to remove several bottlenecks (memory and superfluous MPI calls) that were limiting the performance at high rank counts. The rewrite now makes it possible to fix the root issues for the periodic BCs, down to the mesh input level, which is next on the list. . For now, the old geometry routines are used for processing meshes with periodic BCs. Once the periodic BCs are all updated, we will remove the old CPhysicalGeometry constructor and associated routines in order to clean up. **Note that this PR affects everyone using the finite volume solver.** The regressions are going to fail :). As there are some changes to the order in which element types are read, stored, and partitioned, some cases can show small changes in the residual output, even in serial (especially with multigrid). I have tested everything successfully up to roughly 4000 cores locally, achieving the same final solutions, but it is important that everyone please check your own cases. If we agree that everything is ok, we will have to modify the stored residual values for many regression cases.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/513:982,test,tested,982,https://su2code.github.io,https://github.com/su2code/SU2/pull/513,1,['test'],['tested']
Testability,This adds the 'increment-progress' logic to the vertex export process. The sub-progress bar now shows the progress of the vertex export for a more accurate experience.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/33:35,log,logic,35,https://su2code.github.io,https://github.com/su2code/SU2/pull/33,1,['log'],['logic']
Testability,"This branch has been rebased on last develop version (commit a24f7c2f334f771f173f93ea24f9d73daec1df21, Date: Tue May 31 17:33:41 2016 -0700). Only a few tests fail due to numerical differences but not on python syntax errors. So I think failures are due to parts not linked to python scripts that is why I keep this pull-request open and ready to merge.; Can someone confirm that ?; Thank you",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/260#issuecomment-222929738:153,test,tests,153,https://su2code.github.io,https://github.com/su2code/SU2/pull/260#issuecomment-222929738,1,['test'],['tests']
Testability,"This bug pops up because the periodic mesh reconstruction (in `SU2_MSH`) doesn't always create a valid mesh in 3D. Some points disappear, and some points are duplicated. When `SU2_CFD` (specifically, `CPhysicalGeometry`) tries to get the number of points in the domain, it calculates the wrong number because some of those points are duplicated. That leads to segfaults, because the output routine thinks the extra (missing) points belong to another processor. I've got a little toy problem with a simple periodic cube. It's easy to see on the simple 4x4x4 (+ periodic) problem that 3 nodes disappear, and 3 nodes are duplicated. I've never observed this problem in any of the 2D test cases I ran. As to why `SU2_MSH` is missing some points and duplicating others, I'm not sure. I tried running Valgrind to check for uninitialized variables or illegal memory access, but nothing there. I'll have to look more into the problem. The `su2_periodic.f90` script mentioned in #416 seems to be a workaround. I don't run into any problems when I use that script.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/431#issuecomment-337056131:680,test,test,680,https://su2code.github.io,https://github.com/su2code/SU2/issues/431#issuecomment-337056131,1,['test'],['test']
Testability,This can probably be tested with a dummy fixed point iteration...,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1536#issuecomment-1030109658:21,test,tested,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536#issuecomment-1030109658,1,['test'],['tested']
Testability,"This change should have removed all the tabs in SU2.; Hopefully code-factor agrees with me.; ; This is a general maintenance pr. . - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1135:466,test,test,466,https://su2code.github.io,https://github.com/su2code/SU2/pull/1135,1,['test'],['test']
Testability,This change will solve some discrepancies in the deformation tests due to rounding error and the high level of convergence of the deformation regression tests.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/430:61,test,tests,61,https://su2code.github.io,https://github.com/su2code/SU2/pull/430,2,['test'],['tests']
Testability,"This comes in the sequence of https://www.cfd-online.com/Forums/su2/225090-restart-causes-fgmres-orthogonalization-failed.html. **Describe the bug**; Something goes wrong when restarting a rotating wall case and SU2 diverges. Even when the rotation rate is 0.; The residuals close to the rotating wall shoot up when restarting, it does not seem to be a ""first iteration proble"" I tried setting the initial CFL very low and the solver is not able to recover. Does anyone have any clue why this might happen?. **To Reproduce**; Run TestCases/moving_wall/spinning_cylinder, then restart.; This also happens in 3D.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/915:530,Test,TestCases,530,https://su2code.github.io,https://github.com/su2code/SU2/issues/915,1,['Test'],['TestCases']
Testability,"This contains a new implementation of tree-based searches with a first application to computing wall distances for RANS calculations (thanks due to Edwin!). Initial scaling tests look good, but still completing some... checking for correctness now.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/288:173,test,tests,173,https://su2code.github.io,https://github.com/su2code/SU2/pull/288,1,['test'],['tests']
Testability,"This fixes a bug on the single-zone direct driver, that has shown in one of my branches after I updated with develop. ## Proposed Changes; Just a minor bug fix. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/707:711,test,test,711,https://su2code.github.io,https://github.com/su2code/SU2/pull/707,1,['test'],['test']
Testability,This has been fixed. SU2_DEF output should work in ParaView for SU2 v5+ (tested successfully with ParaView v5.4.1).,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/161#issuecomment-360066567:73,test,tested,73,https://su2code.github.io,https://github.com/su2code/SU2/issues/161#issuecomment-360066567,1,['test'],['tested']
Testability,"This has several advantages over the current (Travis based) system:. - Using the containers you can run the building/testing environment locally on your machine. You can even download the compiled binaries produced on github and run them locally to further debug problems.; - It is faster and more flexible. Compiling and running all tests requires ~1h since a lot of things run in parallel now (e.g. building the base, reverse AD and forward AD binaries). There is potential to further speed things up by splitting the test case scripts into several files. All of that requires minimal work. Unfortunately there is no caching using ccache at the moment, but it is likely that github introduces this feature mid of november. ; - Additional tests like unit tests can make use of the same docker containers and can be easily set up by creating a new workflow file.; - We can easily add a deployment step to automatically create releases and/or nightly builds. **Note:** the linked docker containers are **only** for development/testing purposes. Hence we cannot give any support in this regard. For production use it is recommended to use singularity containers. But: the docker containers can be used as basis layers for singularity. I will get back with more information on that topic. ~~I had to change regression test values of two cases since apparently they are compiler dependent.~~ I changed it to the same versions as we have on Travis. There will be some documentation on how to use the containers locally soon. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribut",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/806:1378,test,testing,1378,https://su2code.github.io,https://github.com/su2code/SU2/pull/806,1,['test'],['testing']
Testability,"This implements the k-omega SST source terms for 2D axisymmetric problems in a new member function of the existing source term class (it would never be used independently of it so I did not create a new class). The extra source terms are the difference between the equations in 2D cartesian and 3D cylindrical coordinates under an assumption of axisymmetry without swirl. They are almost the same as those for Wilcox's k-omega shown in this image (taken from http://eprints.gla.ac.uk/184394/1/184394.pdf). ; ![kwcyl](https://user-images.githubusercontent.com/55834287/107506869-056e0300-6b9f-11eb-834b-f82d6b502690.png); Only the constants have been swapped for the blended ones and the changed definition of the eddy viscosity is taken into account (see [menter1994.pdf](https://github.com/su2code/SU2/files/5957873/menter1994.pdf)). Cross diffusion is the same as in 2D when assuming there is no azimuth gradient. Note that these source terms have the opposite sign (RHS) of the flow equations source terms (LHS) since the block is subtracted and not added. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. Looking into creating an axisymmetric RANS test/regression case",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1195:1395,test,test,1395,https://su2code.github.io,https://github.com/su2code/SU2/pull/1195,2,['test'],['test']
Testability,"This is a SU2 user using Linux system. When simulating the a testcase of shape optimisation simulation in parallel, an error occured after the first set of DIRECT solution calculated, which is shown below:. ```; -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.3.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Aerodynamic Shape Optimization Script |; | |; -------------------------------------------------------------------------; | SU2 Project Website: https://su2code.github.io |; | |; | The SU2 Project is maintained by the SU2 Foundation |; | (http://su2foundation.org) |; -------------------------------------------------------------------------; | Copyright 2012-2022, SU2 Contributors (cf. AUTHORS.md) |; | |; | SU2 is free software; you can redistribute it and/or |; | modify it under the terms of the GNU Lesser General Public |; | License as published by the Free Software Foundation; either |; | version 2.1 of the License, or (at your option) any later version. |; | |; | SU2 is distributed in the hope that it will be useful, |; | but WITHOUT ANY WARRANTY; without even the implied warranty of |; | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU |; | Lesser General Public License for more details. |; | |; | You should have received a copy of the GNU Lesser General Public |; | License along with SU2. If not, see <http://www.gnu.org/licenses/>. |; -------------------------------------------------------------------------; Found: mesh_NACA64A010_turb.su2; New Project: ./; Sequential Least SQuares Programming (SLSQP) parameters:; Number of design variables: 50 ( 50 ); Objective function scaling factor: [1.0]; Maximum number of iterations: 100; Requested accuracy: 1.0000000000000001e-11; Initial guess for the independent variable(s): [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1666:61,test,testcase,61,https://su2code.github.io,https://github.com/su2code/SU2/issues/1666,1,['test'],['testcase']
Testability,"This is a feature request based on [some previous discussion](https://github.com/su2code/SU2/commit/61e810d4459ba56879d90b997c25723819f8352b#comments) on the `feature_inletprofile` branch. I've got a working prototype on [a branch](https://github.com/pecos-hybrid/SU2/tree/feature_inletprofile_file) off of my group's fork. Here's a few key points:. + _Data structures to store the inlet conditions already existed_. On the develop branch, there's arrays in `CEulerSolver` such as `Inlet_Ttotal`.; + Previously, the `CEulerSolver::BC_Inlet` was doing a set of string compares every single iteration to find the inlet values. Pulling values from arrays should be faster.; + I am _not_ taking the same approach as in the `feature_inletprofile` branch. The existing inlet profile branch adds another inlet type to the existing two. Instead, I added a separate option. That way, you can both specify an inlet type (e.g. `TOTAL_CONDITIONS` or `MASS_FLUX`) and decide if you want the inlet to be uniform or specified by a file. The branch is a little rough for the following reasons:. + The user must manually specify the inlet conditions at each inlet node by listing the node number.; + Interpolation of nodes is not supported (yet).; + Multigrid is not supported. I tried to find a simple way to do this, but it's a more difficult problem than I thought. I could submit a pull request now, if the lead developers want me to. But I'd like to take some more time to run further tests.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/467:1473,test,tests,1473,https://su2code.github.io,https://github.com/su2code/SU2/issues/467,1,['test'],['tests']
Testability,"This is a first complete implementation of the new CDriver and CIteration classes. More info to come soon via email assuming the tests pass. . Still to do:; - Consider moving geometry preprocessing into CDriver constructor from SU2_CFD.cpp; - Remove MeanFlowIteration() function in iteration_structure.cpp, which is still being used by CDiscAdjMeanFlowIteration->Iterate(); - Find new home for remainder of iteration_structure.cpp functions, such as grid movement (likely CMeanFlowIteration for that one, for example); - Decompose Iterate() routines for different physics to take advantage of the other CIteration() methods; - Move ""zone"" loops up out of the Iterate() methods, as CMultiZoneDriver should manage this now; - In the previous bullet, take care to correctly move the time spectral routines in iteration_structure.cpp that update all zones",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/196:129,test,tests,129,https://su2code.github.io,https://github.com/su2code/SU2/pull/196,1,['test'],['tests']
Testability,"This is a great new development! We would definitely need this for stiffer equations. At the moment most of our combustion models have 'OK' convergence, but this could really improve things! Is it functional for the incompressible flow testcases?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1183#issuecomment-773925376:236,test,testcases,236,https://su2code.github.io,https://github.com/su2code/SU2/pull/1183#issuecomment-773925376,1,['test'],['testcases']
Testability,"This is a pull request to merge in progress made in the NEMO solver. The goal here is keep the pull requests to reasonable sizes. As such, there may be multiple PRs to prevent this from being a monumental task. This pull request addresses some of the following:; -adoption of code structure in develop; - CommonPreproccessing, SU2 screen output, etc.; -Incorporation of Smoluchowski-Maxwell BC; -general formatting; -correcting headers and briefs; -Updated test cases. - [ x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ x] My contribution is commented and consistent with SU2 style.; - [ x] I have added a test case that demonstrates my contribution, if necessary.; - [ x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1111:457,test,test,457,https://su2code.github.io,https://github.com/su2code/SU2/pull/1111,2,['test'],['test']
Testability,This is a pull request to test the generation of the doxygen documentation. It is currently set up to upload the documentation (i.e. to push to the Doxygen repository) if there is a push to the master or develop branch. For any other branch or pull request it will still run the generation so that we can look for warnings etc. . The documentation will be visible here:. - develop: https://su2code.github.io/Doxygen/develop/html/index.html; - master: https://su2code.github.io/Doxygen/master/html/index.html. Eventually we will add these links (or at least the one to the master) to the website. It uses the new stages feature of travis. In the future we might also add a deployment stage for automating the release process.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/518:26,test,test,26,https://su2code.github.io,https://github.com/su2code/SU2/pull/518,1,['test'],['test']
Testability,"This is a small issue I noticed when I worked on some features for the discrete adjoint driver.; In CDiscAdjFluidIteration::RegisterInput the inputs for the AD tape are registered.; At the moment if kind_recording == RECORDING::SOLUTION_AND_MESH is set it only registers the flow variables and has no difference to RECORDING::SOLUTION_VARIABLES. If I understand the logic for this enum option correctly, it should register the flow variables and the mesh coordinates from geometry. I.e. if you want to add unctions to the driver, which can evaluate derivatives w.r.t. flow and geometry in one tape evaluation, you should use this option. In addition, I change an out-of-date comment. ## Proposed Changes; Register the geometry variables as inputs in the discrete adjoint flow iteration if 'kind_recording == RECORDING::SOLUTION_AND_MESH'. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1492:366,log,logic,366,https://su2code.github.io,https://github.com/su2code/SU2/pull/1492,2,"['log', 'test']","['logic', 'test']"
Testability,"This is already possible with the python wrapper, see testcases/py_wrapper/flatPlate_unsteady_CHT_FlatPlate.py; I am against adding any more ""profile files"" to SU2.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1553#issuecomment-1057930032:54,test,testcases,54,https://su2code.github.io,https://github.com/su2code/SU2/issues/1553#issuecomment-1057930032,1,['test'],['testcases']
Testability,"This is confusing me a bit. Before I set it up: Do you want me to use the original config (without the _adj), remove the comments and the model and then run SU2_CFD_AD in the regression test?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1571#issuecomment-1076187970:186,test,test,186,https://su2code.github.io,https://github.com/su2code/SU2/pull/1571#issuecomment-1076187970,1,['test'],['test']
Testability,"This is inconsistent with the current implementation. The symmetry boundary condition that is implemented is using the reflection tensor $$\bf{R} = \bf{I} - 2n_f \bigotimes n_f$$ and can be found in CFVMFlowSolverBase.inl in CFVMFlowSolverBase<V, R>::BC_Sym_Plane . https://github.com/su2code/SU2/blob/master/SU2_CFD/include/solvers/CFVMFlowSolverBase.inl. You can also see there the implementation of the symmetry boundary condition for the velocity. You are now basically partially overwriting the weakly imposed boundary condition with a strongly imposed boundary condition. . If you want to see a failing testcase you can try your approach with the 90 degree bend tutorial testcase and you will see that the residuals will stall after 100 iterations. With the current implementation in develop you can see that the symmetry boundary is only weakly imposed and does not fulfill the symmetry condition exactly, but the same is true for the inlet boundary condition.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2174#issuecomment-1827871083:609,test,testcase,609,https://su2code.github.io,https://github.com/su2code/SU2/pull/2174#issuecomment-1827871083,2,['test'],['testcase']
Testability,"This is obviously very good work and should make it much simpler to add new outputs etc. My main concern when first reviewing was performance (something no one seems to care about) but from the limited testing I did while merging this and CVariable there seems to be no big impact, I did not time anything though, if you have numbers to share please do.; Nevertheless if you can get away with using unordered_map instead of map it would be better. Possibly part of the reason everyone puts of reviewing this is that it is a major refactoring and yet there are no accompanying notes about the architecture the implementation choices etc. I absolutely guarantee you that is not how professional software is developed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/724#issuecomment-534651933:202,test,testing,202,https://su2code.github.io,https://github.com/su2code/SU2/pull/724#issuecomment-534651933,1,['test'],['testing']
Testability,"This is possible using the Python wrapper. There are no tutorials for this yet, but you can check out PR #488, PR #503. PR #516. There's currently a regression test using unsteady heat-transfer boundary conditions at: https://github.com/su2code/SU2/tree/master/TestCases/py_wrapper/flatPlate_unsteady_CHT . You can use that as an example. Velocity BCs will be very similar.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1079#issuecomment-701405812:160,test,test,160,https://su2code.github.io,https://github.com/su2code/SU2/issues/1079#issuecomment-701405812,2,"['Test', 'test']","['TestCases', 'test']"
Testability,"This is two, related, issues:; 1. Currently there is some error during postprocessing, apparently mainly for unsteady cases, and occurring at the step where it is trying to read in the restart file. This seemed to crop up somewhere after build 711 . (within the last month, error does not occur at https://travis-ci.org/su2code/SU2/builds/174140107, and does in square_cylinder and other unsteady cases in https://travis-ci.org/su2code/SU2/jobs/181044438); 2. The regression tests did not catch this error - because the error occurs during postprocessing, and the regression test checks values obtained prior to that step, the regressions appear to pass in this case. Maybe a check on the output flow file, or introducing a check to catch any error output for all the tests. . Labeled as priority since there seems to be a bug in unsteady post-processing.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/341:475,test,tests,475,https://su2code.github.io,https://github.com/su2code/SU2/issues/341,3,['test'],"['test', 'tests']"
Testability,"This is very interesting, since I often find that I am commenting out most of the python regression script when debugging only a couple of tests locally. Can you estimate how much work this would be? Is it just a simple wrapping of what we already have? We would also have to make sure that Travis CI can handle it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/462#issuecomment-342593274:139,test,tests,139,https://su2code.github.io,https://github.com/su2code/SU2/issues/462#issuecomment-342593274,1,['test'],['tests']
Testability,This just turned a month old :) If I could have some reviews please :); I'll post test results by the end of the week for the failing regressions.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/834#issuecomment-573727655:82,test,test,82,https://su2code.github.io,https://github.com/su2code/SU2/pull/834#issuecomment-573727655,1,['test'],['test']
Testability,"This looks good; with repeated and well-checked analytical derivations plus numerical checks, and given the scale and impact (a single line of code, and a slight change to convergence rate), if this was in a pull request I would approve it. ; @juanjosealonso, @pcarruscag the AD information is still worth getting, and sharing the process of how to get it, since I'd guess that would be very useful for checking similar problems in the future - just maybe not as a reason to delay this specific change. I've seen accidental reversions in the past, I think it's something we should all keep an eye out for when reviewing pull requests. @LaSerpe thanks for tracking down the history on the changes. For unit tests: agreed, those would be very useful and I would be interested in seeing them too. ; For short term/ad hoc purposes, another option that hasn't been mentioned in this thread is using a debugger to inspect the values as the code runs.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/609#issuecomment-439579886:706,test,tests,706,https://su2code.github.io,https://github.com/su2code/SU2/issues/609#issuecomment-439579886,1,['test'],['tests']
Testability,"This one is all set after a little more cleanup. I left some low-level changes to the EoS models for later. @CatarinaGarbacz @MarcoFossati : we can use a simple directory name, as you suggest. Let's just go with fluid/ since we also treat liquids with the incompressible solver. Bonus: adds a rotating frame calculation test and some extra error checks on CFL adapt params that should help avoid unreported problems with old configs.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1010#issuecomment-640170715:320,test,test,320,https://su2code.github.io,https://github.com/su2code/SU2/pull/1010#issuecomment-640170715,1,['test'],['test']
Testability,"This problem appears to be solved, tested with current develop branch (hacked configs below).; [configs.zip](https://github.com/su2code/SU2/files/3724204/config.zip)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/713#issuecomment-541622770:35,test,tested,35,https://su2code.github.io,https://github.com/su2code/SU2/issues/713#issuecomment-541622770,1,['test'],['tested']
Testability,"This pull request contains two important things:; 1. Major reductions in memory usage during grid partitioning for parallel calculations (reduced by half in some unofficial tests).; 2. Improvements to how the information needed by ParMETIS for the partitioning is prepared. At a minimum, there is some storage benefit, and in some cases, especially for mixed element meshes, slightly higher quality partitions may be obtained. The second point means that some of the parallel regression tests may break due to changes in the partitions. I have already taken care of most of these, but I'll wait for Travis CI to report any other necessary changes.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/236:173,test,tests,173,https://su2code.github.io,https://github.com/su2code/SU2/pull/236,2,['test'],['tests']
Testability,"This pull request deprecates the generalized outflow adjoint. This functionality is still available in an alternate branch, however I won't be able to maintain it for future updates. ; This means that some of the regression tests had to be updated, since they previously included testing this functionality. . This pull request uses a matching branch in the TestCases repository to ease that update - the .travis.yml file will can be switched back to the TestCases/develop branch when needed.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/390:224,test,tests,224,https://su2code.github.io,https://github.com/su2code/SU2/pull/390,4,"['Test', 'test']","['TestCases', 'testing', 'tests']"
Testability,"This pull request features a lot of improvements to the FFD, especially in combination with periodic boundaries. But it contains also other bug fixes for internal flows.; - SU2_DEF now correctly maintains the periodic information in the mesh file.; - Fixed the mesh deformation of the periodic boundaries (transformation of the displacement was missing).; - SU2_DEF/SU2_DOT check now for intersection of FFD boxes with the designing surfaces in 2D to keep the continuity (like it is already done in 3D).; - Fixed the periodic transformation in SU2_SOL.; - Added output for discrete sensitivity in SU2_DOT (requires now additional object files similar to SU2_SOL, but I already removed the unnecessary recompilation). This is a follow up pull request of #239. I already opened it to keep the work organized. Status:; - [x] Implementation; - [x] Testing; - [x] Ready",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/242:844,Test,Testing,844,https://su2code.github.io,https://github.com/su2code/SU2/pull/242,1,['Test'],['Testing']
Testability,"This pull request includes the exact formulation of HLLC jacobians.; The implementation can deal both with ideal and real gases and moving grids too.; (The formulation for real gases is based on ""Exact jacobians for implicit Navier-Stokes simulations of equilibrium real gas flows"" Rinaldi et al, J. of Computational Physics 2014). Regression tests for HLLC scheme are expected to fail since residuals will change due to the new implementation, I will update them later as soon as I have new values. Let me know if you have any question. cheers,; Giulio",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/243:343,test,tests,343,https://su2code.github.io,https://github.com/su2code/SU2/pull/243,1,['test'],['tests']
Testability,"This pull request includes:; - updates and refinement of multiple objective gradient evaluation and optimization; - per-surface evaluation of forces and moments can now be included in an optimization or gradient evaluation: this is only used when more than one objective is specified. ; - the multiobjective test case has been added back into the regressions; - FIN_DIFF_STEP can now be specified in the config file (the option was already added in the develop branch; a small modification was needed to the python code in order to use it). If this option is not specified the previous behavior is used. ; - a few minor corrections are also included; - penalty functions can now be used as a portion of the objective. The penalty function is defined as the square of the difference between the function and its constraint - this is hard-coded, but can be modified by simply changing obj_p and obj_dp in the python scripts. . A tutorial around multiobjective optimization may be added later based on the inv_wedge_ROE_multiobj.cfg case.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/385:308,test,test,308,https://su2code.github.io,https://github.com/su2code/SU2/pull/385,1,['test'],['test']
Testability,This pull request introduces a 'custom' design variable that can be used in an objective defined in an external script. ; Also includes some clean-up/ name changes to outflow-generalized adjoint (previously 'chain rule adjoint'). Also adds a test case.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/215:242,test,test,242,https://su2code.github.io,https://github.com/su2code/SU2/pull/215,1,['test'],['test']
Testability,"This pull request introduces new test cases for the Python wrapper. The first set of tests includes:; - Classical CFD test cases: euler naca0012, rans naca0012, unsteady square cylinder, aeroelastic; - A native FSI test case involving the FSIDriver of SU2: wall channel 2D. These tests are launched using the script pyWrap_SU2_CFD.py being the Py wrapped version of the executable SU2_CFD. . The second set of tests includes:; - A new FSI test case involving the coupling between SU2 and an external structural solver (see TestCases/coupled_fsi/2d_aeroelasticity). . The structural solver is the PitchPlungeAirfoilStructuralTester (see SU2_PY/FSI directory). It was directly written in Python and designed only for this particular test where we measure the aeroelastic response of a pitch-plunge NACA 0012 airfoil under the flutter point. The structural solver tester also illustrates the architecture that is expected for the solid side of the coupling (how the solver is driven, how does the communication layer look like). This test is launched using the script fsi_computation.py (**note** : a parallel run requires mpi4py to be installed on the system). . The serial_ and parallel_regression.py files were simply modified in order to add those sets of test cases. The first set uses a direct comparaison based on residuals, lift, drag,... whereas the second set uses a comparaison based on output files coming from the structural solver. In order to build the Py wrapper and run the tests on travis, the preconfigure.py script was adapted so that the option --enable-PY_WRAPPER can be used. Because Swig and mpi4py are required for the build and for the parallel run respectively, they were also introduced in the travis configuration file where mpi4py can be simply installed using the python-pip package.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/298:33,test,test,33,https://su2code.github.io,https://github.com/su2code/SU2/pull/298,13,"['Test', 'test']","['TestCases', 'test', 'tester', 'tests']"
Testability,"This pull request introduces the Python wrapping of the SU2 code. The wrapper is based on the CDriver class meaning that every function in that class can be independently called in Python. To compile it:; The code compiles as usual (serial or parallel) using the configure script. The option --enable-PY_WRAPPER has to be added when the compilation of the wrapper is needed. For this compilation, make sure that SWIG (http://www.swig.org) and Python are installed on the system. The generated python module is named SU2Solver.py and lies in the same installation folder than the other executables (SU2_CFD, ...) (--prefix option). To use it: ; Any Python script should be able to import the module SU2Solver.py. This module is then used to drive the main functions of the SU2 code (code pre-processing, run, monitor, output, dynamic mesh deformation, code post-processing, ...). A particular example is given through the new external coupling capability of SU2 for FSI computations: see new files SU2_PY/fsi_computation.py and SU2_PY/FSI/FSIInterface.py. Current limitations: ; The FSI computation can be launched in parallel, but it is currently assumed that only the fluid part (SU2) is parallelized. Also, only matching meshes at the f/s interface are allowed. 2D is fully operational, 3D is still under testing. Coming soon:; 3D framework, Python wrapper regression test case, new MPI communicators, non-matching meshes capability.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/295:1307,test,testing,1307,https://su2code.github.io,https://github.com/su2code/SU2/pull/295,2,['test'],"['test', 'testing']"
Testability,"This pull request is another in a series of pull requests to merge developments of the NEMO branch into develop without a massive PR. . This pull requests addresses:; -Fixes non-operable schemes (ROE, MSW, LAX); -AUSMPWPLUS remains functional but extremely unstable => flag to make unusable.; -Removes config->GetGamma() in with an appropriate function; -Renames 'Get' functions to 'Compute' where applicable. Somethings that are in the works/on the radar:; -Migrate toward Geometry:ToolBox functions (Remove GetBasis function); -Centralize the INDEX information; . ## Related Work; This is related to feature_NEMO and previous pull requests (#1111) . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1117:1244,test,test,1244,https://su2code.github.io,https://github.com/su2code/SU2/pull/1117,1,['test'],['test']
Testability,"This pull request is intended to be the first of two (or more) pull requests implementing multi-objective functionality. I am separating it into multiple requests since some structural changes are made which could potentially effect things outside the regression tests, and I want to make it easier for code review. . In this pull request, the ability to run multiple objectives is added to the python tools and to the config options. Within the CFD and adjoint solvers, the only major change is in the data structure containing the objectives - it now can hold a list of objectives, but when the adjoint solver is run only one objective is included. Later pull requests are planned to include the ability to run a single adjoint solution for a sum of objectives defined on different markers.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/237:263,test,tests,263,https://su2code.github.io,https://github.com/su2code/SU2/pull/237,1,['test'],['tests']
Testability,"This pull requests adds a capability for multi-objective adjoint evaluation. ; In order to use this capability, a matching number of objectives and surface markers on which to evaluate those objectives, as well as weighting values for each objective must be set. This also works with the python optimization tools, where a flag (COMBINE_OBJECTIVE) determines whether the gradients will be evaluated with a single combined adjoint evaluation or with separate, sequential evaluations. . Option Syntax:; For use with shape_optimization.py:; OPT_OBJECTIVE = DRAG*1.0; LIFT*2.0 ; COMBINE_OBJECTIVE = YES; For use with continuous_adjoint, SU2_CFD, etc, or automatically set by the shape_optimization script:; OBJECTIVE = DRAG, LIFT; OBJECTIVE_WEIGHT = 1.0, -2.0; (Note: opt_objective is still effected by automatically-applied signs - that is, whatever scale is applied to lift will be *-1 to make it a maximization problem. User can now reverse that sign if desired.); In either case, MARKER_MONITORING =( drag_surface, lift_surface); If only one surface is specified, it will automatically be the surface for all objectives listed. Different objectives on different surfaces can also be applied, using lists of the same length. . This change required moving some scaling terms - which means that in one of the test cases the values changed because a scaling factor is moved within the boundary conditions rather than applied after the fact (the final gradient result is the same). In addition to allowing the adjoint for a weighted sum of objectives, this may theoretically allow for applying a numerically convenient scaling factor in the future - ie, in cases where the boundary terms are either too large or too small and cause numerical cancellation errors. . Currently limited to finite difference and continuous adjoint - discrete adjoint coming soon in a separate pull request. ; Also coming soon: an additional test case to add this capability to the regressions.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/292:1306,test,test,1306,https://su2code.github.io,https://github.com/su2code/SU2/pull/292,2,['test'],['test']
Testability,"This pull-request is here to allow code-review but i prefer to not merge it for the moment:; - I need to double check code; - test it; - wait for answers in #246 ; - copyright question: how do you manage authoring ? Explicitly in source code, only using git log, in README ? other ?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/249#issuecomment-197398647:126,test,test,126,https://su2code.github.io,https://github.com/su2code/SU2/pull/249#issuecomment-197398647,2,"['log', 'test']","['log', 'test']"
Testability,"This sounds like an important thing to fix, and it looks like you've done some serious work to confirm it. ; Would you mind putting your changes into a pull request?. Since the ideal gas version has been around for longer, I would initially suspect that there is another sign flip somewhere else in the code for some reason (which may be hard to find... especially if the code needs some cleanup). Just in case, I suggest running a verification case with both versions, using the ideal gas law as the 'arbitrary' equation of state, and comparing against the built-in ideal gas, under both versions of the code, in order to confirm that the result changes to be the same when the sign is changed as you suggest. Ideally, something that can be compared to results from another code or to experiment to confirm that the sign-corrected version is correct, especially since I'm guessing this will effect a lot of regression tests. Code cleanup is of course always appreciated as well. @salvovitale & @LaSerpe since it looks like you've worked on the real gas version: any comments, and do you have a viscous test case?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/609#issuecomment-438736476:919,test,tests,919,https://su2code.github.io,https://github.com/su2code/SU2/issues/609#issuecomment-438736476,2,['test'],"['test', 'tests']"
Testability,This was for test purposes only.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/80#issuecomment-57348241:13,test,test,13,https://su2code.github.io,https://github.com/su2code/SU2/pull/80#issuecomment-57348241,1,['test'],['test']
Testability,This was more critical than I originally thought (I just ran into another issue related to it). The fix was a very small one.. I think the tests will pass now. We'll merge this in right away after that.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/244#issuecomment-191961667:139,test,tests,139,https://su2code.github.io,https://github.com/su2code/SU2/pull/244#issuecomment-191961667,1,['test'],['tests']
Testability,"This will provide a lot of power and flexibility. For example, if doing local development, only the tests that failed last could be run with `pytest --lf`. To make the tests compatible, they can be wrapped into functions with a `test_` prefix, then called from the command line with, e.g.,. pytest TestCases/serial_regression_AD.py. To select and run only one test:. pytest TestCases/serial_regression_AD.py::test_discadj_multi_py",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/462:100,test,tests,100,https://su2code.github.io,https://github.com/su2code/SU2/issues/462,5,"['Test', 'test']","['TestCases', 'test', 'tests']"
Testability,Thread sanitizer tests in the CI pipeline,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2068:17,test,tests,17,https://su2code.github.io,https://github.com/su2code/SU2/pull/2068,1,['test'],['tests']
Testability,"Tim,. The HB regression test residuals are off and the simulation diverges as of; now. I'll take a closer look at it asap. Let's wait for merging it in until; then. Sravya. On Sat, Jan 7, 2017 at 8:08 AM, Tim Albring <notifications@github.com>; wrote:. > Of someone could also run the regression tests (or at least the HB tests); > on a mac that would be even better (maybe you did this already @sravya91; > <https://github.com/sravya91>?)!; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/351#issuecomment-271092271>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AHenIN8rpValtthhcy38-pFA1YUZa5bUks5rP7iXgaJpZM4Lck3G>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/351#issuecomment-271109435:24,test,test,24,https://su2code.github.io,https://github.com/su2code/SU2/pull/351#issuecomment-271109435,3,['test'],"['test', 'tests']"
Testability,"Tim,; as I saw your commit 4d89f49ef88c0027f4cf2b8d980c9b63a7a80f92, marked ""Removed Free-surface/LevelSet features for now"" I thought the features are out at the moment. Surely, here at our university, we're interested in testing the implementations, and if they turn out promising, I'll assemble a group of programmers/engineers to contribute further. I'd like to point out that marine industry is extremely wide, and that SU2 code _base_ is more promising than other solutions, hence it would be pity not to progress in this direction.; Br, Josip",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/348#issuecomment-268054351:223,test,testing,223,https://su2code.github.io,https://github.com/su2code/SU2/issues/348#issuecomment-268054351,1,['test'],['testing']
Testability,"Time-Spectral test case gives ""segmentation fault""",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/171:14,test,test,14,https://su2code.github.io,https://github.com/su2code/SU2/issues/171,1,['test'],['test']
Testability,"Tne2 using O2 gas model has a memory bug. N2 model as given in the TestCases folder works, but O2 model give bad_alloc or segfault before starting solver. . Thanks to:; http://www.cfd-online.com/Forums/su2/147743-changing-gas-model-tne-tutorial-results-error.html#post546080",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/175:67,Test,TestCases,67,https://su2code.github.io,https://github.com/su2code/SU2/issues/175,1,['Test'],['TestCases']
Testability,"To Whom it May Concern, . I am writing in connection with the Transitional Flat Plate Test Case and wanted to report that the tutorial available on SU2 website was not working with the current version of the code: 7.3. That is to say that after I followed the tutorial step by step without changing anything, I had the following terminal error : ""FGMRES orthogonalization failed, linear solver diverged"". I checked the source code and found a little contradiction between the configuration file of the tutorial and the implementation of the transitional model. As you can see in the configuration file, the turbulence intensity Tu is already specified in % so the factor 100 added to Tu in the code does not seem necessary. . ![configuration_file](https://user-images.githubusercontent.com/109698292/180274079-ece0c6f6-4d64-4897-8e2d-abff41d30056.png); ![code](https://user-images.githubusercontent.com/109698292/180274082-b2dbee2d-a0ea-4967-b33e-a698f61d7471.png). When I erased that factor 100 in the source code (SU2_CFD/include/numerics/turbulent/turb_sources.hpp) I was able to get the same results as displayed in the tutorial for the skin friction coefficient. . Thank you",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1719:86,Test,Test,86,https://su2code.github.io,https://github.com/su2code/SU2/issues/1719,1,['Test'],['Test']
Testability,"To add some data I'll put a test where you can see the issue:. This is an inviscid Euler simulation using the Span-Wagner EoS (CoolProp) of a non-ideal MDM nozzle, see https://su2code.github.io/tutorials/NICFD_nozzle using ```GREEN_GAUSS``` for the gradient computation. Convergence can still be achieved but the solution at the inlet corner is completely wrong, while the outlet is ok most likely because characteristics are outgoing as it is supersonic. The artifacts disappear if we disable MUSCL everywhere (1st order solution) or disable it only on boundaries (not ideal solution, but disabling only on corners would still be good enough for now I believe). Using ```WEIGHTED_LEAST_SQUARES``` seems to not present the same issue, in this test case at least, as the stencil ""does not care"" about the boundary states. The boundary conditions are:; - ```MARKER_SYMMETRY``` at centerline; - ```MARKER_EULER``` at wall; - ```MARKER_RIEMANN= (INLET, TOTAL_CONDITIONS_PT, 904388, 542.13, 1.0, 0.0, 0.0)``` at inlet; - ```MARKER_RIEMANN= (OUTLET, STATIC_PRESSURE, 200000.0, 0.0, 0.0, 0.0, 0.0)``` at outlet. I tried both with and without a slope limiter as there are no discontinuities, but it makes no difference on the artifacts:. ```; SLOPE_LIMITER_FLOW= VENKATAKRISHNAN_WANG; VENKAT_LIMITER_COEFF= 0.1; ```. # Complete test case ZIP; [mdm_coolprop_nozzle.zip](https://github.com/su2code/SU2/files/15403732/mdm_coolprop_nozzle.zip). # Inlet pressure zoom; ![Screenshot from 2024-05-22 15-06-36](https://github.com/su2code/SU2/assets/79575547/9ba71127-cb12-4c5f-8e49-3ea9e839b1f4). # Notation: ; - ""1st order"" no MUSCL; - ""2nd order"" MUSCL as implemented in SU2; - ""2nd order (BC 1st order)"" I simply disabled MUSCL on ALL physical boundaries in the upwind residual computations, see code snippet below. # Proof of concept code modification for ""2nd order (BC 1st order)"":; To show that the error lies in MUSCL/gradients at boundaries I added these two lines of code in the upwind gradient computation;",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2285#issuecomment-2124781449:28,test,test,28,https://su2code.github.io,https://github.com/su2code/SU2/issues/2285#issuecomment-2124781449,2,['test'],['test']
Testability,"To be clear, all contributions are welcome, even if they do not fit in one of the categories below.**; **The main objective here is consolidation, making SU2 do more things well** (v&v'd, unit-tested, documented, etc.). ## Documentation; - Tutorials, trying to cover all areas of SU2 ([key priority according to the community](https://docs.google.com/spreadsheets/d/1wgQDMiJ_mMqxiJ6FV8zZDu-CbxBjGXGeqrTAuJaTQkQ/edit#gid=1654711040)).; - Developer documentation (common ""how to's"", ~~update/simplify the info in [these pages](https://su2code.github.io/docs_v7/Code-Review/)~~([done](https://github.com/su2code/su2code.github.io/pull/70)), etc.). ## Turbulence models; - Precise documentation of fluid and turbulence models **as implemented** in SU2, i.e. link to an authoritative reference and highlighting any deviation from it. #1364 #1551; - Code refactoring to simplify adding turbulence model variants. #1413; - V&V; - Scale resolving methods #1120; - Transition (documentation, tutorial, implementation of additional models) #1496; - Wall functions (documentation, tutorial testcase) #1204. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum working examples"" (no redundant options, no duplication of descriptions from the config template, etc.).; - ""Obscure"" features (""things that SU2 does"" to some extent but are: incomplete, not validated / regression-tested, not documented) cleanup obsolete examples in TestCases, and identify features lacking test coverage, decide what to do with those features. ## Code maintenance; - Better support / documentation for building SU2 directly on Windows. #1468; - Replacing the legacy output #1316; - General C++ cleanup ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1487:1729,test,testcase,1729,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487,1,['test'],['testcase']
Testability,"To be safe for v5, we will disable the new parallel IO restart routines until we have time to test on more and larger machines (a few folks have reported issues). All of the necessary code remains in the develop branch, however, and we will be working on this heavily right after the release.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/364:94,test,test,94,https://su2code.github.io,https://github.com/su2code/SU2/pull/364,1,['test'],['test']
Testability,"To confirm, there seems to be a similar problem in 2D. I did the following test for the test case ""steady_inverse_design"". Ran test case with given mesh and config file.; This gave CP_diff=0.178; Copied ""surface_flow.dat"" -> ""TargetCp.dat"" (they seem to share the same format); Re-ran the test case; This gave identical results apart from the Cp_diff=0.009; Again this should definitely equal zero. I have looked through the source code and found the line that I think equates this value:. PressDiff += Area \* (CpTarget - Cp) \* (CpTarget - Cp); (from SU2_CFD/src/output_structure.cpp line 7529). There seems to be some other problem affecting this though as (CpTarget - Cp) should be zero.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/321#issuecomment-254857757:75,test,test,75,https://su2code.github.io,https://github.com/su2code/SU2/issues/321#issuecomment-254857757,4,['test'],['test']
Testability,"To get this PR going, I have reverted the proposed fix c97610b02bc1281eb766847e7ef5ed7ac451dfb9 for now and excluded the Aachen turbine test case from address sanitizer testing. I'll create an issue about this.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2246#issuecomment-2100356516:136,test,test,136,https://su2code.github.io,https://github.com/su2code/SU2/pull/2246#issuecomment-2100356516,2,['test'],"['test', 'testing']"
Testability,To keep the authorship and traceability of the changes I will merge this with the failing testcases and update them in a separate PR (since we have to do other transition-related fixes).,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1132#issuecomment-755500463:90,test,testcases,90,https://su2code.github.io,https://github.com/su2code/SU2/pull/1132#issuecomment-755500463,1,['test'],['testcases']
Testability,"To prepare for v7, I have now updated most of the tutorials to take advantage of the new features in this PR. I have also completed a sweep through all regression tests using this branch and have verified that the tests are ok. So, from my point of view, this is ready to be merged, other than updating the final residuals for a few tests which are pending. I will keep looking into the LSQ issues, so for now, we should be cautious with that option.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-558013706:163,test,tests,163,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-558013706,3,['test'],['tests']
Testability,"To some extent this is a fix for hybrid parallel AD, because the single zone driver used the version of RegisterInput that pushed indices into that global ""inputValues"" vector, and that would not work with OpenMP.; This PR will not be very big anyway. You can test your testcase here, or in #1260, or in a different PR, and then we test the cross term thing.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1284#issuecomment-839792797:260,test,test,260,https://su2code.github.io,https://github.com/su2code/SU2/pull/1284#issuecomment-839792797,3,['test'],"['test', 'testcase']"
Testability,"To test the solver, I'm forcing **CSolverFactory::GetSolverMeta** in commit a3911b7 to return a new SolverMetaData object specifically suitable for use with EULER solver in MULTIGRID settings. It's a temporary action of course, but it gives us a chance to evaluate the validity of the self-registered solver. **And it works**. At least, ""Diffing"" the history.csv of the Inviscid bump in a channel case (ran with both master and feature branches) results in no differences.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1062#issuecomment-669803327:3,test,test,3,https://su2code.github.io,https://github.com/su2code/SU2/pull/1062#issuecomment-669803327,1,['test'],['test']
Testability,"Todo list:; - [x] Make sure the code can handle arbitrary many species equtions. Especially the output has to be adapted. Note the MAXNVAR of the ScalarSolver has to adapted to that need as well. Make a suitable Testcase for that.; - [x] Implement weak inlet and outlet BC. The weak approach is used in the turb and mean flow and is most likely conservative opposed to the strong one. Here a simple switch will be put in place to compare both versions.; - [x] Consolidate nVar, nSpecies, ... variable to only use 1 consistently (The choice was `nSpecies` which was already introduced for NEMO and it just makes sense to use the same container); - [x] Make the numerous reviewers happy; - [x] Check inlet profiles for Species solver (have a testcase for that) See #1427 ; - [x] Create Objective functions of Surface avg quantities (Area and Massflow? prob. And a variance-style output to capture mixing); - [x] Avoid redundant operations (pre/post processings) during solver restarts. 156d0c5. What will be done in follow-up PR's:; - Viscous contributions for BC_inlet and outlet which are currently not used (also then for Turb-solver) https://github.com/su2code/SU2/pull/1388#discussion_r752384956; - Axissymmetric source term addtion and testing; - multi-component mixing from #1332 ; - gradient validation between DA and FD",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1388#issuecomment-935901996:212,Test,Testcase,212,https://su2code.github.io,https://github.com/su2code/SU2/pull/1388#issuecomment-935901996,3,"['Test', 'test']","['Testcase', 'testcase', 'testing']"
Testability,"Tom, I noticed that in under SU2_PY you have a parse_config.py that takes the cpp and hpp files and parses the data and returns it to the python UI. What is the data structure for this, is this like a data dictionary, key, value pair? can you give me the data structure for this so that I can reuse this in the web app. . Also may be provide me sample datastructure so that I can test it out in the weblayer. Having this in a weblayer is good idea, we can deploy this weblayer so that anyone accessing the web app can use this to create this configuration and use it as a starter.. I can implement a bottle application in python and deploy it in heroku and it can be used across. Thanks for your help. Krishna",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/172#issuecomment-126140571:380,test,test,380,https://su2code.github.io,https://github.com/su2code/SU2/pull/172#issuecomment-126140571,1,['test'],['test']
Testability,"Tom, thank you for improving this one.; This sounds cool, I was really looking for an easy way to customize the output to plot, for instance, the entropy field or the mass flow for turbomachinery applications. ; Is this meant to remain hard-coded or are you planning to introduce new options to specify the output from the config file?. I see reg tests failing due to travis time out (I believe we have 50 minutes for each python script). I also experienced that issue before and I had to turn down a couple of check I wanted to add for sliding meshes. We need to think about reorganising reg test to reduce or shorten them without loosing control on code features.; Otherwise we could consider switching to travis.com but I believe we'll have to pay for that. looks good to me by the way. . Ciao!; Giulio",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/328#issuecomment-259085483:347,test,tests,347,https://su2code.github.io,https://github.com/su2code/SU2/pull/328#issuecomment-259085483,2,['test'],"['test', 'tests']"
Testability,"Tom,. I fixed the nicf cases for the regression tests. ; By the way, I find that this new approach with the regression test files in the SU2 repository works better, good job!!!. Thanks !!! . Salvo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/189#issuecomment-132565221:48,test,tests,48,https://su2code.github.io,https://github.com/su2code/SU2/pull/189#issuecomment-132565221,2,['test'],"['test', 'tests']"
Testability,"Tom,. Ok. So 3 Gb and 4 sec to write on 72 cores is about 10.6Mb / sec / core. Since not each core has access to a separate I/O node (assume 8 cores / processor), that would give upwards of 80 Mb / sec / node which is quite respectable. The reading seems a bit slower, but it is indeed a major improvement. Later in time we should do some tests for much larger files to make sure we get some level of scalability. Best,. Juan. On Mar 3, 2017, at 10:40 AM, Thomas D. Economon <notifications@github.com<mailto:notifications@github.com>> wrote:. Juan,. Don't know those numbers yet for the aggregate bandwidth with Lustre or how many I/O nodes are available for this cluster. Will have to do a detailed analysis eventually. For reference, this RANS case at 27 million grid points (not cells) results in a 3 GB restart file (binary). I'll take the two orders of magnitude improvement :). Tom. —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/pull/379#issuecomment-284035130>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxLewYDD1YDs9b-b3gf61tw7hQLMcks5riF6TgaJpZM4MMhev>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/379#issuecomment-284049783:339,test,tests,339,https://su2code.github.io,https://github.com/su2code/SU2/pull/379#issuecomment-284049783,1,['test'],['tests']
Testability,"Tom,. The endian test I got from http://cs-fundamentals.com/tech-interview/c/c-program-to-check-little-and-big-endian-architecture.php. The byte swapping function is mine and I am OK with you adapting it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/562#issuecomment-414104646:17,test,test,17,https://su2code.github.io,https://github.com/su2code/SU2/pull/562#issuecomment-414104646,1,['test'],['test']
Testability,"Tom,. This looks very good in terms of absolute times to read and write input/output. Kudos. The scaling is a bit less exciting, although the mesh seems too small for the large numbers of cores you were using, so one cannot draw conclusions from that (unless you were to run on 32 cores or 16 cores, etc). One interesting thing would be to compute the effective read/write bandwidth…for example, for 72 cores, what was the total (binary) size of the file being read/written? We can compare those bandwidths to the single-stream I/O bandwidth that can be obtained in a single node. Excellent addition…this will be a game changer, particularly for unsteady flow solutions and for time-accurate adjoints. Best,. Juan. On Mar 2, 2017, at 6:23 PM, Thomas D. Economon <notifications@github.com<mailto:notifications@github.com>> wrote:. Quick scaling tests show major improvements with the new output for reading and writing of restart files. See attached. Tim, have you been testing with Intel compilers? I ran into an issue with Intel compilers on one cluster with the restarts, and I want to see if it was an isolated incident. If all looks good, we'll merge in soon. [output_performance]<https://cloud.githubusercontent.com/assets/4896083/23535771/5d47d730-ff75-11e6-9be0-8e9542093bc1.png>. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/pull/379#issuecomment-283846632>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxIkqhSns_LD5aGGFMQGKgvv-yka5ks5rh3m_gaJpZM4MMhev>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/379#issuecomment-283850716:844,test,tests,844,https://su2code.github.io,https://github.com/su2code/SU2/pull/379#issuecomment-283850716,2,['test'],"['testing', 'tests']"
Testability,Transitional Flat Plate test case,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1719:24,test,test,24,https://su2code.github.io,https://github.com/su2code/SU2/issues/1719,1,['test'],['test']
Testability,Travis issue with regression tests,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/524:29,test,tests,29,https://su2code.github.io,https://github.com/su2code/SU2/issues/524,1,['test'],['tests']
Testability,"Tried to run the time-spectral test case (v3.2.9) using the NACA64A010 aerofoil and got a segmentation fault. The fault occurs in the ""MeanFlowIteration"" routine due to the change in the ""nZone"" variable value when using the time-spectral method. I tried a quick fix by updating ""nZone"" in main.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/171:31,test,test,31,https://su2code.github.io,https://github.com/su2code/SU2/issues/171,1,['test'],['test']
Testability,Try to minimize the size of the folder and add an updated logo.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/63:58,log,logo,58,https://su2code.github.io,https://github.com/su2code/SU2/issues/63,1,['log'],['logo']
Testability,Tutorial test script,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/899:9,test,test,9,https://su2code.github.io,https://github.com/su2code/SU2/pull/899,1,['test'],['test']
Testability,Unexpected behaviour when running regression test,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1980:45,test,test,45,https://su2code.github.io,https://github.com/su2code/SU2/issues/1980,1,['test'],['test']
Testability,Unfortunately it looks like the serial regression test with Python wrapper is timing out for both versions. Any ideas to speed this up or perhaps request another minute or two?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/424#issuecomment-347509883:50,test,test,50,https://su2code.github.io,https://github.com/su2code/SU2/pull/424#issuecomment-347509883,1,['test'],['test']
Testability,"Unfortunately, I have not been able to recreate this issue on my systems with the simple test case that you shared @yukaiweng. . @talbring or @EduardoMolina, if you have some time, could you give the attached toy problem a try on your machines? I ran for a couple of unsteady iterations and then restarted on the third iteration (successfully for me). I think we're just missing something simple... [ascii_restart_test.zip](https://github.com/su2code/SU2/files/1659029/ascii_restart_test.zip)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/477#issuecomment-360050851:89,test,test,89,https://su2code.github.io,https://github.com/su2code/SU2/issues/477#issuecomment-360050851,1,['test'],['test']
Testability,"Unfortunately, I wasn't able to get all of them. I fixed a majority of the calls but couldn't find workarounds all of them. There are 8 left in the following files: . `SU2_PY/change_version_number.py`: There's 2 in here. One is a complicated command with `grep` and pipes and the other is a simple `rm -rf`, but it isn't a security risk since there is no user input into that string. `SU2_PY/SU2/util/pyCppTap.py`: This is in the diff_routine and uses `tapenade`. I have no idea what this does so I didn't touch this one. `SU2/opt/server.py`: There are 4 `scp` calls that I didn't know how to replace. `SU2_PY/compute_polar.py`: There's one left in here which is a complicated `cat` call that I couldn't figure a workaround for. . If you have any suggestions for any of these, I can try and implement them. . Otherwise, once these tests pass, its good to merge.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/781#issuecomment-533590086:831,test,tests,831,https://su2code.github.io,https://github.com/su2code/SU2/pull/781#issuecomment-533590086,1,['test'],['tests']
Testability,Unit Testing for BC Functions,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1880:5,Test,Testing,5,https://su2code.github.io,https://github.com/su2code/SU2/issues/1880,1,['Test'],['Testing']
Testability,Update tests and fix windows compilation,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2165:7,test,tests,7,https://su2code.github.io,https://github.com/su2code/SU2/pull/2165,1,['test'],['tests']
Testability,Update turbomachinery testcases and regression tests,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2158:22,test,testcases,22,https://su2code.github.io,https://github.com/su2code/SU2/pull/2158,2,['test'],"['testcases', 'tests']"
Testability,"Updated all the regression test values. Ran all of them to convergence and the difference in the integrated quantities (lift, drag, sens_press, entropy generation etc) were < 1%. . While running the regression tests, I saw that some of them weren't up to date with the best practices from the recent PRs. I know they are for Regressions and not necessarily as example configs, but I think it'd be good to have the configs reflect best practices so that people can look to them for reference. . If people are on board with that, I can update some of the rans configs to include things like ILU, adaptive CFL, the new convergence monitoring systems etc. I will make sure that the tests still cover all the relevant config options. I will also make sure that if you were to run the test individually, it would run to convergence.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/905#issuecomment-600991354:27,test,test,27,https://su2code.github.io,https://github.com/su2code/SU2/pull/905#issuecomment-600991354,4,['test'],"['test', 'tests']"
Testability,"Updates to .travis.yml to get the tests working after the Travis CI move to Ubuntu Trusty. Script is a bit cleaner, but there were also a few important changes to fix problems related to compilers and Python packages.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/420:34,test,tests,34,https://su2code.github.io,https://github.com/su2code/SU2/pull/420,1,['test'],['tests']
Testability,"Updates to compute_polar.py and supporting library before releasing. Added a new test case to the regressions. Thanks again for the contribution, Eran!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/361:81,test,test,81,https://su2code.github.io,https://github.com/su2code/SU2/pull/361,1,['test'],['test']
Testability,"Updating my Fork. ## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1018:810,test,test,810,https://su2code.github.io,https://github.com/su2code/SU2/pull/1018,1,['test'],['test']
Testability,"Usually when I am testing and changing shape_optimization features, I use the `TestCases/optimization_euler/steady_naca0012` case. It's quick and you can make it faster by specifying a better convergence characteristic (currently it runs until density residual is < -13)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/921#issuecomment-607356102:18,test,testing,18,https://su2code.github.io,https://github.com/su2code/SU2/pull/921#issuecomment-607356102,2,"['Test', 'test']","['TestCases', 'testing']"
Testability,"Verification results [here](https://github.com/su2code/SU2/files/3192519/verif.pdf) along with pictures of the failed testcases, 5/6 new reference residuals are lower than before. Funny story the prism elements do not need negative weights in CVolumetric movement... Only the elasticity solver seems to need this, I tested both with a mesh with mixed elements. I have no explanation for this... the code is the ""same"" in both places.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/681#issuecomment-493543146:118,test,testcases,118,https://su2code.github.io,https://github.com/su2code/SU2/pull/681#issuecomment-493543146,2,['test'],"['testcases', 'tested']"
Testability,"Verified on an Apple M2 hardware that `platform.processor()` returns `arm` and `platform.machine()` returns `arm64`. ; I think possibly even outside of the `platform.processor()` vs. `platform.machine()` discussion, the TestCase.py script currently might not be able to handle all the different values returned by MacOS or Windows systems. . One fix could be to check for `AMD64/x86_64` and `arm64/aarch64`.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2159#issuecomment-1797836583:220,Test,TestCase,220,https://su2code.github.io,https://github.com/su2code/SU2/issues/2159#issuecomment-1797836583,1,['Test'],['TestCase']
Testability,"Wait for the regression tests to pass, and if they pass you can merge this PR",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1806#issuecomment-1311937473:24,test,tests,24,https://su2code.github.io,https://github.com/su2code/SU2/pull/1806#issuecomment-1311937473,1,['test'],['tests']
Testability,Was just waiting for the tests to finish. Merging now. Thanks again for the effort,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-459772171:25,test,tests,25,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-459772171,1,['test'],['tests']
Testability,"We already require C++11 for some more advanced features, but it is always nice in my opinion to keep backward compatibility when possible. . However, this is not a deal breaker, I don't think, as most developers that want to use and add their own unit tests should have no problem with using C++11. If we can make it an optional dependency, to make sure the basic build still works simply, I think it could be ok.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-503685445:253,test,tests,253,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-503685445,1,['test'],['tests']
Testability,"We are actually having a group meeting, cloned and compiled in two machines while discussing SU2 with the whole group, and experienced this one-commit-behind issue. This has all been in the context of brainstorming open-science and reproducibility practices for CFD. . We've continued to discuss it and we wonder if this might be avoided by keeping the Tests as a folder in the main SU2 repo, rather than having a separate repo for Tests. . Is there a reason why you decided to have a separate repository for Tests?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/152#issuecomment-72737918:353,Test,Tests,353,https://su2code.github.io,https://github.com/su2code/SU2/issues/152#issuecomment-72737918,3,['Test'],['Tests']
Testability,"We are getting closer on this topic, but I am still wondering if we can go further... . I think it would be great if we can eventually do away entirely with the first two levels of the directory structure: the Common/, SU2_CFD/, etc. level as well as the src/, obj/, etc. level below that. Instead, we can have all cpp and hpp alongside each other in the various subdirectories at the root level (or maybe inside a single cpp/ or src/ directory at the root level). . At the moment, a lot of navigation is required to move between files that are logically related due to the module structure and the separate of cpp/hpp files.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/583#issuecomment-630640981:545,log,logically,545,https://su2code.github.io,https://github.com/su2code/SU2/issues/583#issuecomment-630640981,1,['log'],['logically']
Testability,"We are wondering what the status with the merge request is. Am I supposed to do something more? is it just waiting for an additional review? . Additionally, we have many more proposed modifications, we have worked on, adding robustness to the existing turbulence models. It is expected, many of these changes will effect the test cases behaviour, are there any guidelines how to compile the code to run the full set of tests locally, or should I just open pull requests, and base upon the github test results? ; ; I am sorry if I may be asking the obvious, but I am new to contributing to open code..",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2295#issuecomment-2219624152:325,test,test,325,https://su2code.github.io,https://github.com/su2code/SU2/pull/2295#issuecomment-2219624152,3,['test'],"['test', 'tests']"
Testability,"We have quite a few common booleans we use in many places of the code.; Some of them are very simple, like checking for compressible vs incompressible, or for FSI.; But when we want to express something more complicated like is it SA or SST, is the mesh moving or deforming, is this FEM or FVM or FEA, and so on, things are not so simple anymore and we end up with long conditionals repeated in many places. Since that logic is all built up from data in config I propose that we create a custom type akin to a bit-field that we can get from config and query whatever flag we want.; We move all the logic of setting up / updating this object to the config so that for example this:; ```; unsigned short Kind_Solver = config->GetKind_Solver();; bool flow = ((Kind_Solver == DISC_ADJ_EULER) ||; (Kind_Solver == DISC_ADJ_RANS) ||; (Kind_Solver == DISC_ADJ_NAVIER_STOKES) ||; (Kind_Solver == ADJ_EULER) ||; (Kind_Solver == ADJ_NAVIER_STOKES) ||; (Kind_Solver == ADJ_RANS));; ```; Can become `bool flow = config->GetFlags().flow();`, or similar. If we move this kind of logic to a separate object we can possibly make the config lighter, not so many methods etc.; This flags class can be absolutely tiny if the bits are packed (8 times tinier than storing bools).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/770:419,log,logic,419,https://su2code.github.io,https://github.com/su2code/SU2/issues/770,3,['log'],['logic']
Testability,"We have releases every month and the official build system is meson.; If this (or any other) feature is fundamental to you, I kindly suggest that you follow the pull requests, and/or test the develop branch prior to each release to make sure it still works.; -DNDEBUG should be added to the compiler flags (CXXFLAGS) not to the preconfigure options (with meson this is done automatically).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/910#issuecomment-601083184:183,test,test,183,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-601083184,1,['test'],['test']
Testability,"We should also think of a smarter way of setting up the travis system. Running 12 independent jobs, each of them having to compile the whole code multiple times, just to test python is a little bit of an overhead.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/622#issuecomment-443522164:170,test,test,170,https://su2code.github.io,https://github.com/su2code/SU2/pull/622#issuecomment-443522164,1,['test'],['test']
Testability,"We were discussing the failing discrete adjoint test case in this PR earlier today in the dev call (which seems a little odd). It may be worth disabling the CFL adaption features altogether in Config::SetPostprocesing() when running the discrete adjoint, since it does not make much sense given that we record just a single primal iteration. We should also then check that the CFL number used in that iteration makes sense (initial value vs final value in the primal.. prob makes sense to use initial to be conservative).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1036#issuecomment-673026393:48,test,test,48,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-673026393,1,['test'],['test']
Testability,"We will merge this PR next in order to have enough time for testing and for you to solve conflicts (if you need any help to solve those, please contact me). Even if this PR is merged, please continue to give feedback on the usability. We will still continue to work on that. Refer to the user documentation in order to learn how to adapt your config files. Let me know if you have any questions.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/724#issuecomment-534522241:60,test,testing,60,https://su2code.github.io,https://github.com/su2code/SU2/pull/724#issuecomment-534522241,1,['test'],['testing']
Testability,"Well it's not supposed to be needed, but something weird is going on.; Blas and Lapack are technically separate things but when I tested this openblas seemed to build both into the same library, perhaps arch linux does things differently (on ubuntu 16 they were separate packages). At any rate, try getting this package https://aur.archlinux.org/packages/openblas-lapack/; If the build still fails, try adding `-Dblas-name=openblas-lapack` to the meson options.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632014885:130,test,tested,130,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632014885,1,['test'],['tested']
Testability,Well thanks for fixing the typo. . It seems we use `OUTPUT_WRT_FREQ` for steady and unsteady simulations. Therefore the testcase cleanup was a bit more involved. For steady cases `WRT_SOL_FREQ` had to be replaced and for unsteady ones `WRT_SOL_FREQ_DUALTIME` to follow the author's intention... and I have the feeling that nearly every testcase had these options in it. . I have to admit I don't understand why 7.0.9 would be awkward 🤔,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1129#issuecomment-743185037:120,test,testcase,120,https://su2code.github.io,https://github.com/su2code/SU2/pull/1129#issuecomment-743185037,2,['test'],['testcase']
Testability,"Well, I've noticed the problem, because the unit tests don't pass - cavity and spinning cylinder especially. They exceed the number of iterations, and at the same time there is a result discrepancy. Increasing the number o iterations in serial_regression.py does not help, in fact it makes the delta worse.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2095#issuecomment-1657732568:49,test,tests,49,https://su2code.github.io,https://github.com/su2code/SU2/pull/2095#issuecomment-1657732568,1,['test'],['tests']
Testability,"What are the objective functions that are available with Turbomachinery for the adjoint solver? The test case ""disk_adj_turbomachinery/transonic_stator_2D"" does not work with the python script:. `$ shape_optimization.py -g DISCRETE_ADJOINT -f transonic_stator_2D.cfg`. and shows the following error:; ```; File ""/home/baigan/SU2/bin/SU2/opt/project.py"", line 129, in __init__; group = historyOutFields[this_obj]['GROUP']; KeyError: 'ENTROPY_GENERATION'; ```; If I change the objective function to DRAG then this error disappears but then it won't support the constraint for FLOW_ANGLE_OUT. Is ENTROPY_GENERATION supported for Turbomachinery or not?. I generated the FFD mesh using DV_KIND=FFD_SETTING and then changed to FFD_CONTROL_POINT_2D with the new mesh. A discrete adjoint run of SU2_CFD_AD seems to converge nicely. But how can I manually go through the process of generating config files for SU2_DOT / SU2_DEF to get the next deformed shape and what is the sequence they must be run if the python script is not working?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/889:100,test,test,100,https://su2code.github.io,https://github.com/su2code/SU2/issues/889,1,['test'],['test']
Testability,"What do you mean by logically related? [Compressible / Incompressible / Turbulent] solver+variable+numerics+output ?; I think having the top level of folders following the class hierarchy is helpful to someone who is trying to follow the code execution for the first time.; Maybe we can have some subdirs for specific physics in /solvers /variables and /output (similar to what I did with /numerics to keep a compromise between the old file structure and the new)?; I would not mind merging Common and SU2_CFD now that there are descriptive sub-directories for geometry, solvers, etc. I'm not sure if linking everything into just one library is a good idea though (e.g. is it going to make the binaries much larger?).; We should perhaps then move the applications to a separate folder ""SU2_APPS"" where we would put CFD, DEF, DOT etc.; I don't mind having hpp's and cpp's together as we have a fair bit of implementation also in header files, I guess most IDE's have filters to separate them if folks prefer to see them that way.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/583#issuecomment-630724704:20,log,logically,20,https://su2code.github.io,https://github.com/su2code/SU2/issues/583#issuecomment-630724704,1,['log'],['logically']
Testability,What is the equivalent of DUAL_TIME in the TIME / OUTER / INNER versions we have now? TIME?; (so that we can auto-replace the stuff that is used in the testcases without breaking things too much). With all this deprecation the next version number should probably be 7.1.0 even if I would call these things bug fixes from v6.2 to v7.0.; Going 7.0.8 -> 7.1.0 also saves the awkward 7.0.9 -> 7.1.0 (which would make people wonder if we know how version numbers work).,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1129#issuecomment-743153471:152,test,testcases,152,https://su2code.github.io,https://github.com/su2code/SU2/pull/1129#issuecomment-743153471,1,['test'],['testcases']
Testability,What's high in this case? Is it larger than the maximum residuals you have in the rest of the domain?; BTW you need to change the file .github/workflows/regression.yml to point to your testcases branch.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1821#issuecomment-1321273580:185,test,testcases,185,https://su2code.github.io,https://github.com/su2code/SU2/pull/1821#issuecomment-1321273580,1,['test'],['testcases']
Testability,"When running discrete_adjoint.py (or shape_optimization.py with a discrete adjoint method) for the test case steady_inverse_design, the value of the adjoint variables at the first iterations is already O(1e-10) and after a while the following message is printed on screen:. CSysSolve::FGMRES(): system solved by initial guess. This problem does not occur when using other objective functions or a continuous adjoint method. P.S. I am using SU2 v 6.0.0.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/515:99,test,test,99,https://su2code.github.io,https://github.com/su2code/SU2/issues/515,1,['test'],['test']
Testability,"When the tests have run, I'll ignore this annoying CodeFactor test and merge, right?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1222#issuecomment-792576044:9,test,tests,9,https://su2code.github.io,https://github.com/su2code/SU2/pull/1222#issuecomment-792576044,2,['test'],"['test', 'tests']"
Testability,"Where do the meshes come from or where should I place the new mesh and the restart files? For example, there is no ./TestCases/gust/mesh_NACA0012_inv.su2 in the repository...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1954#issuecomment-1545813749:117,Test,TestCases,117,https://su2code.github.io,https://github.com/su2code/SU2/pull/1954#issuecomment-1545813749,1,['Test'],['TestCases']
Testability,"While doing some simulations with the version 6.2.0, I found a strange behaviour on the pressure field.; The test case is a naca0012 at AoA=0°, M=0.7, Re=9e6.; When running with SST turbulence model, the pressure field in the ""boundary layer region"" is not constant. Using SA turbulence model, this behaviour is not shown. It looks like the tubulent kinetic energy field affect the computation of pressure field, leading to a non zero gradient pressure at wall, as shown in the attached figures:. In the figures it can be seen a comparison between the in-house solver of the Italian Aerospace Research Center (CIRA), where SST model is implemented, and SU2 using both available turbulence models, SST and SA. The isolines represent the pressure field and the contour is the TKE field obtained with SU2 with SST. In particular, solid red line is CIRA solver, the solid black line is SU2-SST, and dashed black line is SU2-SA. Near the LE where TKE is 0, the isolines are similar and 0 pressure gradient at the wall is obtained with both turbulence models. When TKE starts to grow, the pressure computed with SU2-SST shows a non constant behaviour and at the wall has non 0 gradient. Furthermore, in the wake region the defect is more evident. Leading edge detail:; ![cp_tke_detail_Le](https://user-images.githubusercontent.com/36844965/66407922-53448b00-e9ee-11e9-877d-88ace3a222fb.png). Detail at 30% of the chord length:; ![cp_tke_detail_1](https://user-images.githubusercontent.com/36844965/66407921-53448b00-e9ee-11e9-8a22-87106066984b.png). Wake region detail:; ![cp_tke_detail_wake](https://user-images.githubusercontent.com/36844965/66407920-53448b00-e9ee-11e9-92ad-b770e0ac5743.png). Has anyone found previously this behaviour? Could it depend on the set up that I have used? . I attach the grid and configurations files.; [grid_and_conf_files.zip](https://github.com/su2code/SU2/files/3703135/grid_and_conf_files.zip). Thanks in advance.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/797:109,test,test,109,https://su2code.github.io,https://github.com/su2code/SU2/issues/797,1,['test'],['test']
Testability,"While playing around with the APU turbocharger test case I observed some weird behaviour. For some specific number of cores (in my case 10 or 40 [works for 6, 8, 12, 20]), the test case fails in the pre-processing step of the geometry, and gives me the following error:. Error in ""virtual void CPhysicalGeometry::ComputeNSpan(CConfig*, short unsigned int, short unsigned int, bool)"": ; -------------------------------------------------------------------------; At the moment only turbomachinery with the same amount of span-wise section can be simulated; nSpan inflow 16, nSpan outflow 0; ------------------------------ Error Exit -------------------------------. I have the idea that this is due to the way the mesh is partitioned. But don't how to solve it. - OS: Ubuntu 16.04; - MPI implementation and version: OpenMPI 1.10.2; - SU2 Version: develop branch @ b12ec3aab87002480a56f6109a281c323a553087. Update:; Did some more testing. For the current master branch @ 284b2a5b8f74fcf2f6ff16d97f24e5b36c4bbb4d. ; The APU turbocharger runs for the 10 cores. However it gives a segmentation fault for 20 cores in the geometry prepocessing step (works for 19 and 21). For 40, 38 and 32 cores the code hangs in the geometry pre-processing at ""Compute the surface curvature.""",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/749:47,test,test,47,https://su2code.github.io,https://github.com/su2code/SU2/issues/749,3,['test'],"['test', 'testing']"
Testability,"While running test cases, I noticed the slope limiter is not defaulted to none. This caused me a bit of headache trying to figure out why a simulation wasnt behaving as expected. I can imagine the defaulted can cause problems for many users, particullarly with new users. I think in the remake of the config_template in #772 , the defaults should be made more clear.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/775:14,test,test,14,https://su2code.github.io,https://github.com/su2code/SU2/issues/775,1,['test'],['test']
Testability,"Why don't I add additional regression cases of multiple objective on a single surface and a single objective on multiple surfaces, I think otherwise the situations you mention are covered (both of those should already work, but may not be covered by regressions, and they can easily be covered by single-iteration tests). ; There is a tutorial page here: ; https://github.com/su2code/SU2/wiki/Multi-Objective-Optimization; Although that's from a while ago I don't think much needs to be changed, except for broken links including images.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/494#issuecomment-357367522:314,test,tests,314,https://su2code.github.io,https://github.com/su2code/SU2/pull/494#issuecomment-357367522,1,['test'],['tests']
Testability,With commit [1836f11](https://github.com/su2code/SU2/pull/1536/commits/1836f111c0759eb50946ba6b68ac281ef4b1b717) the gradients (for massflow prescribed in the primal) can now be validated really well (tested for AvgTemp and PRESSURE_DROP OF's). . BUT only for serial execution ... for multiple processes the adjoint diverges after a few iterations. I need to give that parallel treatment another thought.; UPDATE: With [ce164a2](https://github.com/su2code/SU2/pull/1536/commits/ce164a232d6c0f845784f37e45336f7276746d61) also the parallel execution works fine. Please read my explanation attempt in the commit message (in case you are interested) and let me know what you think,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1536#issuecomment-1030848657:201,test,tested,201,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536#issuecomment-1030848657,1,['test'],['tested']
Testability,"With the pushes from @bigfooted, this is mostly complete. I believe all options are now implemented, except for the rotational correction. What should the plan for V&V/testing be?; I think we need to also address all the regressions....since no SST case should work now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1560#issuecomment-1083993859:168,test,testing,168,https://su2code.github.io,https://github.com/su2code/SU2/pull/1560#issuecomment-1083993859,1,['test'],['testing']
Testability,"With the single test executable, you can always filter down to groups of tests or individual tests.; + When `ninja test` or `meson test` is run, the test executable is only run once, sweeping through all the unit tests. The result only shows a single failure or a single success. If more detail is desired, then the test executable can be run manually.; + The relevant SU2 code is compiled as a library (e.g. `libSU2core`) and then linked into both the main executable (`SU2_CFD`) and the test program (`test_driver`). ### How to Run Unit Tests. If you compile SU2 using `ninja -C builddir`, then the test executable will automatically be compiled. You then have three options for running the tests:. + `meson test` (see documentation [here](https://mesonbuild.com/Unit-tests.html)); + `ninja test`; + Run the exectuable manually: `./UnitTests/test_driver`. When running the executable manually, there are many customization options. Run `./UnitTests/test_driver --help` to see them all. ### How to add unit tests. I have already included a single unit-test example (`UnitTests/SU2_CFD/src/numerics/CNumerics_tests.cpp`). Aside from the headaches with CConfig, this example should be clear. If not, raise questions and I will answer them. ~~I plan on adding a few more example tests, as well as a ""How-To"" page on the website.~~ Please see the PR on the website repo for more documentation. To learn more, check out the [great tutorial](https://github.com/catchorg/Catch2/blob/master/docs/tutorial.md) for Catch2. You can also find more in-depth documentation there. ### I still don't understand unit tests. Where can I learn more?. I highly recommend reading at least one of these two books:. + ""Working Effectively with Legacy Code,"" by Michael Feathers; + ""Modern C++ Programming with Test-Driven Development,"" by Jeff Langr. ## Remaining work. + ~~Add unit-testing to Travis CI~~; + ~~Add support for unit testing in AD builds~~; + ~~Add more examples of unit tests~~; + ~~Add ""How-To Add Unit Tes",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/850:2933,test,tests,2933,https://su2code.github.io,https://github.com/su2code/SU2/pull/850,1,['test'],['tests']
Testability,"With this branch some turbomachinery capabilities have been added to the code. The main features are:; -Supersonic outlet Non Reflecting BC; -Conservative and Non-Conservative 2D Mixing-Plane Interface; -2D Turbomachinery performances calcualation for single blade, stage and multi-stage geometry. This will be soon used to derive a Discrete Adjoint using as OF turbomachinery performance.; - restart_file for multizone flow simulation . I ve created a turbomachinery folder in the TestCase folder with two new testcases in which these new capabilities can be tested. cheers. sv",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/207:482,Test,TestCase,482,https://su2code.github.io,https://github.com/su2code/SU2/pull/207,3,"['Test', 'test']","['TestCase', 'testcases', 'tested']"
Testability,Would it be an idea to create a branch to test things out and make a decision based on the results? It would be interesting to see the performance for e.g. the dense matrix multiplications in the DG-solver compared to Intel's MKL.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-459705131:42,test,test,42,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-459705131,1,['test'],['test']
Testability,Write tests to be compatible with pytest,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/462:6,test,tests,6,https://su2code.github.io,https://github.com/su2code/SU2/issues/462,1,['test'],['tests']
Testability,"Writing a simple unit test is difficult, since SU2 both doesn't have unit tests and wasn't written with unit testing in mind. That being said, I've got a unit test that I'm happy with. Our group has put our own unit-testing framework into our fork of SU2, based off of Boost and automake testing. The unit test I created runs off of that framework. That means it won't run out-of-the-box on the develop branch of SU2. When I run the unit test with no changes to `CNumerics::GetViscousProjJacs`, I get that the residuals and Jacobians match to within 10 times the machine epsilon, aside from the [4][0] value of the Jacobians. There, the relative difference is of the order 1E-6. When I switch the two lines in `CNumerics::GetViscousProjJacs` for ideal gases to be negative, the tests run with no complaints. Ideal gas and generalized variants match to within 10 times machine epsilon. I'm uploading my test file just as an example, in case anyone wants to see what I've tested.; [viscous_ideal_vs_general.zip](https://github.com/su2code/SU2/files/2590517/viscous_ideal_vs_general.zip). As for comparison to some results from another code, I think that's a lot to ask. Getting a good comparison would depend on an understanding of how the ideal gas model, viscosity, numerics, and Jacobians are handled in the external code. Small differences would make the comparison completely invalid. I completely support testing and checking the changes I'm proposing. But comparison with an external code seems to provide a very low return on investment.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/609#issuecomment-439491945:22,test,test,22,https://su2code.github.io,https://github.com/su2code/SU2/issues/609#issuecomment-439491945,12,['test'],"['test', 'tested', 'testing', 'tests']"
Testability,"YES! I am excited to try this out. I can probably test it on some of the other TMR cases (airfoils, flatplates). Will post the results when I get those done. . Side note, there was one issue that @bmunguia and I encountered when performing optimizations with adaptive CFL. Say the DIRECT simulation is run with adaptive CFL and is well converged (6 to 8 orders of residual reduction). When the discrete adjoint performs the one direct iteration to store the computational graph, it uses the initial CFL value, not the CFL that the adaptive CFL routine ended at. This results in the residuals being very high for that one iteration, which then affects the convergence of the discrete adjoint. . I will try to run an adjoint on one of these cases as well to see if the problem persists. Perhaps could be overcome with a simple additional field for CFL in the restart meta-data",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-531520526:50,test,test,50,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-531520526,1,['test'],['test']
Testability,"Yeah the config is a bit confusing. The initial CFD run (in adap/ini) uses the value specified in ITER (unless RESTART_SOL= YES, then it runs one iteration just to get force coefficients). . After that, it runs a series of adaptations based on the settings in PYADAP_SUBITE, PYADAP_FLOW_ITER, and PYADAP_COMPLEXITY. . 1. AMG interpolates the solution; 2. A simulation is run for PYADAP_FLOW_ITER[0] iterations (2999 in your case); 3. An adaptation is performed with a target size of PYADAP_COMPLEXITY[0] (20000 in your case). This is done PYADAP_SUBITE[0] times. Then it moves on to the next mesh level. I admit that I haven't really debugged the feature-based (e.g. Mach-based) adaptation much. I found a couple bugs in the python scripts and just updated them, so could you pull again and rerun ninja?. The AMG output is pretty long, but since it's developed at Inria, I don't have any control over that. I guess as long as none of the lines are error statements (usually complaining about invalid projections or negative eigenvalues of the metric from my experience) it should be fine. The only actual information I get from amg.log is usually in the last line; ```; NbSensor 30518 msh->npobk 30518 NbrTyp 19 msh->npoin 52477; ```; which just tells you how many points are in the old vs. new mesh, but you could just look at the .su2 files for that. Another important note is that the python version of AMG currently only supports triangle and tetrahedral volume elements.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-619584815:1132,log,log,1132,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619584815,1,['log'],['log']
Testability,"Yeah, I also tried the Roe case which actually gives more strange numbers (1.7 Pa), but by the way these are only tutorials. regarding the Reynolds number, that's correct, lowering density will also lower the Reynolds number. But reducing the Mach number (and thus free-stream speed) is also a way. The thing is that the HLLC solver I'm testing works pretty well for the supersonic wedge (an also for others) but suffers a lot this test case (computation explodes at first iteration). ; Can we think about changing the config file a little bit (perhaps changing the fluid)? Is there a particular reason why the HLLC solver is needed here?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/232#issuecomment-181892267:337,test,testing,337,https://su2code.github.io,https://github.com/su2code/SU2/pull/232#issuecomment-181892267,2,['test'],"['test', 'testing']"
Testability,"Yeah, sorry. I still plan to add a regression test sometime in the future. But I've been swamped this past month.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/921#issuecomment-620730868:46,test,test,46,https://su2code.github.io,https://github.com/su2code/SU2/pull/921#issuecomment-620730868,1,['test'],['test']
Testability,Yeah... I had not tested discrete adjoint but my spider senses were tingling.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1585#issuecomment-1087424994:18,test,tested,18,https://su2code.github.io,https://github.com/su2code/SU2/pull/1585#issuecomment-1087424994,1,['test'],['tested']
Testability,Yep and as a first check one can of course always re-run the whole testset by clicking `re-run jobs` in the top right corner of the actions tab,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1384#issuecomment-932169245:67,test,testset,67,https://su2code.github.io,https://github.com/su2code/SU2/issues/1384#issuecomment-932169245,1,['test'],['testset']
Testability,"Yep, I don't know of any changes to `map` from Python 3.6 to Python 3.7. In light of that, though it may be useful in the future to always test with the latest Python available from Anaconda, I'm going to close this for now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/622#issuecomment-445541373:139,test,test,139,https://su2code.github.io,https://github.com/su2code/SU2/pull/622#issuecomment-445541373,1,['test'],['test']
Testability,"Yep, please do the latter. You can find the test case repo here: https://github.com/su2code/TestCases. Note that, by construction, it has the same directory structure as the TestCases/ directory under the SU2 repo. If you submit a pull request there to the develop branch with your new grid(s), we can merge it in right away.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/326#issuecomment-265649052:44,test,test,44,https://su2code.github.io,https://github.com/su2code/SU2/pull/326#issuecomment-265649052,3,"['Test', 'test']","['TestCases', 'test']"
Testability,"Yep, this is not tested in the regression tests, so it slipped through.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/603#issuecomment-434815411:17,test,tested,17,https://su2code.github.io,https://github.com/su2code/SU2/pull/603#issuecomment-434815411,2,['test'],"['tested', 'tests']"
Testability,"Yep, time to get this one in. After updating the statement and the tests pass, let's merge.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/570#issuecomment-445302768:67,test,tests,67,https://su2code.github.io,https://github.com/su2code/SU2/pull/570#issuecomment-445302768,1,['test'],['tests']
Testability,"Yes Tom, we also have a 3D case to test! We will keep you posted on it!!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/211#issuecomment-159358142:35,test,test,35,https://su2code.github.io,https://github.com/su2code/SU2/pull/211#issuecomment-159358142,1,['test'],['test']
Testability,"Yes it definitely is confusing. Then we have to use set_ffd_design_var.py giving i,j,k which are not really 'units' in x,y,z. The website should be updated to show this. I am wondering how does SU2_DEF will determine the ""logic axis"". Won't a simple x,y,z approach have been simpler?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/977#issuecomment-626875076:222,log,logic,222,https://su2code.github.io,https://github.com/su2code/SU2/issues/977#issuecomment-626875076,1,['log'],['logic']
Testability,Yes it depends on the order of the grid points but it will give the correct y-coordinate whenever the previous vertex in the loop is the one adjacent to the y=0 vertex on the marker or if the loop starts at y=0 it works if the next one in the loop which is adjacent on the marker. It seems to be the case for my examples but I don't think it always is. . I don't like it but I can't find a Get which returns the index of the adjacent node on the marker when passing the index of the current vertex or node in the loop. . ` geometry->vertex[iMarker][iVertex]->GetNormal_Neighbor() ` does not return the right one . ` geometry->node[iPoint]->GetPoint(index) ` with some `index` should return the right one but the index where it is stored varies so I need to look into the logic behind that,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/927#issuecomment-611106724:771,log,logic,771,https://su2code.github.io,https://github.com/su2code/SU2/pull/927#issuecomment-611106724,1,['log'],['logic']
Testability,Yes it did but it's unrelated. Surprised this bug here could creep in. For the regression it seems like it is still using the old restart file and not the one I pushed to TestCases master a few hours ago. Not sure what I am missing here,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1366#issuecomment-910525512:171,Test,TestCases,171,https://su2code.github.io,https://github.com/su2code/SU2/pull/1366#issuecomment-910525512,1,['Test'],['TestCases']
Testability,"Yes there is a discrepancy in the last digit for one the gradient values.; Since the reference file for the gradient values is in the Testcases repository and not the SU2 repository, I created a small pull request there to change the value. See su2code/TestCases/pull/84.; Together the changes lead to the test passing as expected.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1437#issuecomment-968062780:134,Test,Testcases,134,https://su2code.github.io,https://github.com/su2code/SU2/pull/1437#issuecomment-968062780,3,"['Test', 'test']","['TestCases', 'Testcases', 'test']"
Testability,"Yes, I'd say that the V&V regression tests should definitely start from the converged solutions that were used to produce the results on the V&V website. . But for cases that do not have V&V documentation, the regression tests are imo merely a way to detect and prevent unwanted changes/side-effects (so, what you said). If they need to be more than that, they should be upgraded to a V&V with proper documentation. For the cases that are not VandV I'd rather have a 'start' + 'restart' regression test, with restarts from the 'start' results. In that way the restart files are always generated from the current code.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1784#issuecomment-1304306759:37,test,tests,37,https://su2code.github.io,https://github.com/su2code/SU2/pull/1784#issuecomment-1304306759,3,['test'],"['test', 'tests']"
Testability,"Yes, after this kind of correction the tests succeed, here and in #1286! (Shifts are handed to `CopyData` and added there, because `recvbuf` is a void pointer). Closing this PR now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1292#issuecomment-850379675:39,test,tests,39,https://su2code.github.io,https://github.com/su2code/SU2/pull/1292#issuecomment-850379675,1,['test'],['tests']
Testability,"Yes, in the testcase described here: https://github.com/su2code/SU2/pull/1362#issuecomment-964163647 I saw in the debugger that halo vertices occur in the loop.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1430#issuecomment-964531526:12,test,testcase,12,https://su2code.github.io,https://github.com/su2code/SU2/issues/1430#issuecomment-964531526,1,['test'],['testcase']
Testability,"Yes, indeed. I'll open a (rather empty) Draft PR soon in order to pressure myself a bit to get this test going. I am sorry for the delay :(",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1467#issuecomment-1017659476:100,test,test,100,https://su2code.github.io,https://github.com/su2code/SU2/issues/1467#issuecomment-1017659476,1,['test'],['test']
Testability,"Yes, it is an issue on the Elwetritsch cluster. I tested this and the solution works.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1532#issuecomment-1027952018:50,test,tested,50,https://su2code.github.io,https://github.com/su2code/SU2/pull/1532#issuecomment-1027952018,1,['test'],['tested']
Testability,"Yes, nothing more from me on this. Once this is merged, the comparison in PR #1260 should become simpler too. I've just updated this branch with develop, we can merge once the regression tests pass again.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174#issuecomment-827981242:187,test,tests,187,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-827981242,1,['test'],['tests']
Testability,"Yes, the new jacobian implementation is less diffusive. Besides this, the low Mach number correction also results in less diffusive, final, formulation (as Tornber says in his paper). I expect this to result in reduced stability when the flow has very sharp discontinuities, like the contact surface between the recirculation zone and the external flow, since they are better captured.; I have made some modification to my implementation and now it works also for this test case (though CFL has to be lowered from 4.0 to 2.0, as I was expecting, to make it eventually converge).; If this looks good to you, I'll change the CFL number and push it to the repo. Regards,; Giulio",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/232#issuecomment-185308834:469,test,test,469,https://su2code.github.io,https://github.com/su2code/SU2/pull/232#issuecomment-185308834,1,['test'],['test']
Testability,"Yet another doubt on the same subject: I just realized that SU2V7.31 (I; have not tested it on later SU2 releases) accepts imposing both adiabatic; walls plus isothermal boundary condition on some walls (when running Menter; model), but when I simply impose only isothermal conditions (leaving; commented out the adiabatic markers), I get the message: SU2 process; returned error '1'. Is there a workaround for this? Kind regards. On Thu, Sep 28, 2023 at 8:25 PM Pedro Gomes ***@***.***>; wrote:. > you are correct, there is a discussion on CFD-online about it. we impose 0; > heat flux, but report an ""apparent heat flux"" most codes will simply give; > you back the imposed heat flux value you specify, nevertheless there will; > probably be a temperature gradient close to the wall; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/2109#issuecomment-1740118992>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AHGXZUUZNE6B63SH7XJLY2DX4YBMZANCNFSM6AAAAAA3QKLVDU>; > .; > You are receiving this because you commented.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2109#issuecomment-1775968391:82,test,tested,82,https://su2code.github.io,https://github.com/su2code/SU2/pull/2109#issuecomment-1775968391,1,['test'],['tested']
Testability,"Yikes. Thanks, @LaSerpe, for the heads up. There is clearly something wrong with SU2_SOL for many of the cases, although the compute portion is fine. We should get a test case set up for SU2_SOL, or at least try to catch these errors too. @fpalacios, can you please take a look at this problem when you have a moment? It seems to have shown up with the merging of feature_cte_cl. Just fyi for all: the Travis CI folks have generously granted extra time for our regression tests, up to 70 minutes now. This fixes the time-out issues in the short term, but there are a few strategies we should look at for caching or further decomposing our builds to keep under the time limits in the future as we keep growing.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/325#issuecomment-262118156:166,test,test,166,https://su2code.github.io,https://github.com/su2code/SU2/pull/325#issuecomment-262118156,2,['test'],"['test', 'tests']"
Testability,"You are right, this used to be covered by the `Kind_Regime` logic but it is broken now...; (One more example where #770 would help)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/846#issuecomment-586692534:60,log,logic,60,https://su2code.github.io,https://github.com/su2code/SU2/issues/846#issuecomment-586692534,1,['log'],['logic']
Testability,You are right. I opened another pull request!. But we should definitely add some tests to travis to check that the python framework works.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/223#issuecomment-170667585:81,test,tests,81,https://su2code.github.io,https://github.com/su2code/SU2/pull/223#issuecomment-170667585,1,['test'],['tests']
Testability,"You can now access any output, please look at the examples in TestCases/pywrapper",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2263#issuecomment-2056876262:62,Test,TestCases,62,https://su2code.github.io,https://github.com/su2code/SU2/issues/2263#issuecomment-2056876262,1,['Test'],['TestCases']
Testability,You can relax the tolerance in the python script of the failing test @j-signorelli,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2078#issuecomment-1634426099:64,test,test,64,https://su2code.github.io,https://github.com/su2code/SU2/pull/2078#issuecomment-1634426099,1,['test'],['test']
Testability,"You can use paths for the inputs and outputs of the code, e.g. RESTART_FILENAME= ./test/restart.dat or MESH_FILENAME= ../mesh.su2; I think it is much safer if you use paths for inputs and change directory to where you want the files written.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1658#issuecomment-1147844675:83,test,test,83,https://su2code.github.io,https://github.com/su2code/SU2/issues/1658#issuecomment-1147844675,1,['test'],['test']
Testability,"You could modify `CWindowedAverage::addValue` to only ""push back"" more values if it detects a change in current time iteration, otherwise it simple overwrites the last value in the history.; Then you could get rid of the entire logic in `SetUpdate_Averages` simply making it true or false (less logic is the way for less bugs).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1259#issuecomment-817952886:228,log,logic,228,https://su2code.github.io,https://github.com/su2code/SU2/pull/1259#issuecomment-817952886,2,['log'],['logic']
Testability,You do -Denable-tests=true and then you get `test_driver_*` executables,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1637#issuecomment-1140286829:16,test,tests,16,https://su2code.github.io,https://github.com/su2code/SU2/pull/1637#issuecomment-1140286829,1,['test'],['tests']
Testability,You just have to update the files in the TestCases repository (`TestCases/cont_adj_euler/naca0012/of_grad_directdiff.dat.ref` and `TestCases/cont_adj_euler/naca0012/of_grad_cd_disc.dat.ref`),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/444#issuecomment-332825983:41,Test,TestCases,41,https://su2code.github.io,https://github.com/su2code/SU2/pull/444#issuecomment-332825983,3,['Test'],['TestCases']
Testability,"You want to check if your new behavior behaves as you suspect before you throw a lot of resources at it.; * You submit a PR and discover that one of the regression tests has failed. But...why? You know that something is broken, but its hard to track down what broke. You want more granular test coverage that can demonstrate what broke.; * You are fixing a very small bug. You know that you should prove that your bug fix worked, but it doesn't seem logical to dedicate an entire validation case to one small bug fix. You want to write a small test for a small fix. In all of these cases, unit testing fills a unique role. Unit testing increases time spent in development, but decreases the amount of time spent in bug-fixing and maintaining. For more information, see this relevant Stack Exchange question.<https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes>. What do I propose?. My research group at UT Austing has implemented a unit testing framework on our branch, which we're happy with. Some choices were arbitrary, and some choices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more information on autotool's setup, see their documentation<https://www.gnu.org/software/automake/manual/html_node/Tests.html>. Since autotools is the build system for SU2, this involves minimal changes. Using automake, the build process for building unit tests becomes:. '''; ./bootstrap; ./configure; make; make check; '''. We use Boost's unit testing framework<https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>. This provides a convenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time we ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:2467,test,testing,2467,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,1,['test'],['testing']
Testability,"[Here](https://github.com/su2code/SU2/files/3291497/report.pdf) are some promising results, I took a transonic turbulent airfoil case I had, and a couple supersonic ones from the testcase repo (biparabolic and wedge). I kind of random selected the numerical scheme for each one and tried to make the settings fair. [These](https://github.com/su2code/SU2/files/3291494/files.zip) are the required files should anyone want to replicate the findings.; @aeroamit Thank you. I do not have much interest in low Mach applications and I am not familiar with the required preconditioning techniques so I am sorry but I will not be running that test myself. I have yet to test the discrete adjoint now that preaccumulation is available for these AUSM-family schemes.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/691#issuecomment-502193463:179,test,testcase,179,https://su2code.github.io,https://github.com/su2code/SU2/pull/691#issuecomment-502193463,3,['test'],"['test', 'testcase']"
Testability,"[Here](https://github.com/su2code/SU2/files/3302370/benchmark.zip) are some comparisons for a case where the linear solver does little work (so not much benefit from this PR) and another where the linear solver has to work harder (18 iterations per iteration on average) and this makes a substantial difference.; I have started updated the residuals of things that seem consequence of round-off error, only one case requires closer inspection where things change several orders of magnitude (for the best).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/700#issuecomment-503201187:52,benchmark,benchmark,52,https://su2code.github.io,https://github.com/su2code/SU2/pull/700#issuecomment-503201187,1,['benchmark'],['benchmark']
Testability,[WIP] Add test case for 'FUEL' paper,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2239:10,test,test,10,https://su2code.github.io,https://github.com/su2code/SU2/pull/2239,1,['test'],['test']
Testability,"[WIP] CI pipeline test, no merging intended",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1292:18,test,test,18,https://su2code.github.io,https://github.com/su2code/SU2/pull/1292,1,['test'],['test']
Testability,[WIP] Test flamelet,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1921:6,Test,Test,6,https://su2code.github.io,https://github.com/su2code/SU2/pull/1921,1,['Test'],['Test']
Testability,[WIP] Test for adding in the implicit viscous solver for NEMO,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1356:6,Test,Test,6,https://su2code.github.io,https://github.com/su2code/SU2/pull/1356,1,['Test'],['Test']
Testability,[WIP] test github actions with coolprop,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1805:6,test,test,6,https://su2code.github.io,https://github.com/su2code/SU2/pull/1805,1,['test'],['test']
Testability,"[WIP]. Because we can only pin up to 3 issues in GitHub, I'm creating this one to track major aspects we need to fix or implement in SU2.; This issue shall only contain the list and a brief description, with links to associated issues and pull requests.; To propose major issues / development areas please use discussion #1486. The purpose of this list is two fold:; - Direct the efforts of the SU2 Foundation towards addressing these issues, by efforts I mean funds (as they become available).; - Try to enlist help from the community to start addressing these issues, as much as possible we will try to break these down into ""bite sized"" chunks. **To be clear, all contributions are welcome, even if they do not fit in one of the categories below.**; **The main objective here is consolidation, making SU2 do more things well** (v&v'd, unit-tested, documented, etc.). ## Documentation; - Tutorials, trying to cover all areas of SU2 ([key priority according to the community](https://docs.google.com/spreadsheets/d/1wgQDMiJ_mMqxiJ6FV8zZDu-CbxBjGXGeqrTAuJaTQkQ/edit#gid=1654711040)).; - Developer documentation (common ""how to's"", ~~update/simplify the info in [these pages](https://su2code.github.io/docs_v7/Code-Review/)~~([done](https://github.com/su2code/su2code.github.io/pull/70)), etc.). ## Turbulence models; - Precise documentation of fluid and turbulence models **as implemented** in SU2, i.e. link to an authoritative reference and highlighting any deviation from it. #1364 #1551; - Code refactoring to simplify adding turbulence model variants. #1413; - V&V; - Scale resolving methods #1120; - Transition (documentation, tutorial, implementation of additional models) #1496; - Wall functions (documentation, tutorial testcase) #1204. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1487:843,test,tested,843,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487,1,['test'],['tested']
Testability,"[flat plate test.zip](https://github.com/user-attachments/files/16321830/flat.plate.test.zip); @pcarruscag Hi Pedro, thanks for the help. I used your modified one to do a plat plate test, which could work without inlet profile, however, when I input the inlet profile with uniform value(should be same as no-input), it still diverged immediately. I was looking through the function 'LoadInletProfile' in CSolver.cpp these days, maybe there should be some changes around? Because there is a determination of inlet type, which SUPERSONIC_BC doesn't belong to, I am not that sure if it effects. I attached all the testing files, including mesh, config, profile dat, etc. Please take a look and let's debug on this.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2327#issuecomment-2241240909:12,test,test,12,https://su2code.github.io,https://github.com/su2code/SU2/pull/2327#issuecomment-2241240909,4,['test'],"['test', 'testing']"
Testability,[i04r1n16:7873 :0:7873] ib_iface.c:764 Assertion `gid->global.interface_id != 0' failed; ==== backtrace (tid: 7878) ====; 0 0x000000000001db60 uct_ib_iface_fill_ah_attr_from_gid_lid() /opt/hpc/software/mpi/hpcx/hpcx-v2.11-gcc-MLNX_OFED_LINUX-5-redhat7-cuda11-gdrcopy2-nccl2.11-x86_64/sources/ucx-1.13.0/src/uct/ib/base/ib_iface.c:764; ![image](https://github.com/su2code/SU2/assets/112403698/e0f70402-45e5-4b37-820d-3e925fca8824),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2316:39,Assert,Assertion,39,https://su2code.github.io,https://github.com/su2code/SU2/issues/2316,1,['Assert'],['Assertion']
Testability,"[kw2.zip](https://github.com/user-attachments/files/16349664/kw2.zip). Here is SWBLI config and mesh file I used. The original freestream turbulence intensity is a 5.0e-4, I was changed arbitrary to 5.0e-2 for test. Also you can easily observe any high Mach number simulation with high TKE.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1851#issuecomment-2245328618:210,test,test,210,https://su2code.github.io,https://github.com/su2code/SU2/issues/1851#issuecomment-2245328618,1,['test'],['test']
Testability,"[sd2_case1b_ddes_v7.cfg.txt](https://github.com/su2code/SU2/files/4531160/sd2_case1b_ddes_v7.cfg.txt). Hello,. We are currently unable to restart SU2 in DDES mode from a restart file that includes time-averaged data on very large (~180 million cell) meshes. Compiled in release mode, the code gives the error ""FGMRES orthogonalization failed, linear solver diverged."". Compiled in debug mode, the code issues an assertion failure at line 1881 of $SU2_HOME/SU2_CFD/src/numerics_structure.cpp, which is a check in the CNumerics::SetRoe_Dissipation(...) method to make sure that variable 'Dissipation_j' is between zero and one. This problem only appears when attempting to restart from solution files that include ""TIME_AVERAGE"" data on very large meshes. Note the above behavior is occurring with commit 382e82f5e43fadb5d64e63289db8e125e37ffe95 of the ""develop"" branch. . I have pulled the latest commits of develop (c093a62a2b) and master (d9c867d342), but get segfaults during Jacobian structure initialization when attempting to restart on multiple cores. All help is appreciated. -Paul. **To Reproduce**; Config file attached, but mesh file is quite large... 17.6 GB. **Desktop (please complete the following information):**; - Department of Defense Unclassified System: ""Onyx""; - System type: Cray XC40/50; - OS: Variant of SuSe Linux 12.3 and/or Cray Linux Environment; - Compiler: Intel 19.0.1.144; - MPI: cray-mpich 7.6.3; - SU2 v. 7.0.1, develop branch, commit 382e82f5e43fadb5d64e63289db8e125e37ffe95 (and segfaults with latest commits of develop (c093a62a2b) and master (d9c867d342) ).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/949:412,assert,assertion,412,https://su2code.github.io,https://github.com/su2code/SU2/issues/949,1,['assert'],['assertion']
Testability,"_CGNS_CPPFLAGS: flags to pass when compiling CGNS; * SU2_ENABLE_CODI: no|forward|reverse; * SU2_CODI_CPPFLAGS: flags to pass to SU2 modules when compiling with Codi; * SU2_ENABLE_METIS: ON|OFF; * SU2_METIS_CPPFLAGS: flags to pass when compiling Metis; * SU2_ENABLE_MKL: ON|OFF; * SU2_ENABLE_MPI: ON|OFF; * SU2_ENABLE_MUTATIONPP: ON|OFF; * SU2_ENABLE_PARMETIS: ON|OFF, only available when SU2_ENABLE_MPI is ON; * SU2_PARMETIS_CPPFLAGS: flags to pass when compiling Parmetis; * SU2_ENABLE_TECIO: ON|OFF; * SU2_TECIO_CPPFLAGS: flags to pass when compiling Tecio and TecioMPI; * SU2_TECIOMPI_CPPFLAGS: flags to pass when compiling TecioMPI, requires SU2_ENABLE_MPI. There is an additional variable that is recognized by CMake scripts - DEBUG, turning it ON enables additional STATUS messages, mainly to check that correct include directories, compile definitions and linked libraries were set up correctly. The remaining options like install location and compilers are handled by CMake. Tested this on Ubuntu with CMake 3.15.5 and everything except pySU2ad wrapper compiles. Haven't tested on earlier CMake versions so there might be bugs with them but they should be easy to resolve if any. Related Work. Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any. PR Checklist. Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution. * I am submitting my contribution to the develop branch.; * My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; * My contribution is commented and consistent with SU2 style.; * I have added a test case that demonstrates my contribution, if necessary. ________________________________; You can view, comment on, or merge this pull requ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814#issuecomment-552242380:3151,Test,Tested,3151,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380,1,['Test'],['Tested']
Testability,"` is called. You can reproduce the bugs using the following MWE:. #### Minimal working example. As per the documentation, you should be able to restart a previous shape optimization problem with a command like:; ```; python shape_optimization.py -f turb_SA_RAE2822.cfg -r project.pkl; ```; where the `-r` command specifies a pickle files with the saved project state from a previous run. I checked the problem on the [RAE2822 constrained optimization tutorial](https://su2code.github.io/tutorials/Turbulent_2D_Constrained_RAE2822/). You can download the files using the instructions on that page. In order to reproduce the bug, run the following chain of commands:. 1. As per the tutorial, run `SU2_GEO turb_SA_RAE2822.cfg`; 2. Modify the `turb_SA_RAE2822.cfg` file to specify that `OPT_ITERATIONS=1`; 3. Run `python $SU2_RUN/shape_optimization.py -f turb_SA_RAE2822.cfg`; 4. Modify the `turb_SA_RAE2822.cfg` file to specify that `OPT_ITERATIONS=2`; 5. Run `python $SU2_RUN/shape_optimization.py -f turb_SA_RAE2822.cfg -r project.pkl`. ## Remaining work. This should be covered by a test case. The problem I used takes a bit of time to compute, even using just the restart. Is there an cheaper shape optimization problem that could run quickly as a test case?. ## Related Work; None. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/921:1410,test,test,1410,https://su2code.github.io,https://github.com/su2code/SU2/pull/921,3,['test'],['test']
Testability,"` to be set properly. However, in the FEM/DG solver, the `base_nodes` is defaulted to `nullptr` and we have workarounds in the FEM/DG sovler that does not require a call to `GetNodes()` in other parts of the code (we use elements instead of nodes, so the concept of nodes is not really well-defined in the FEM/DG solver). . At the moment, the develop branch will fail at this line if anyone attempts to use the FEM/DG solver. . E.g., Taking the `hom_euler/NACA0012_5thOrder` test case in the repo gives the following error message:; ```SU2_CFD: ../SU2_CFD/src/output/../../include/solvers/CSolver.hpp:230: const CVariable* CSolver::GetNodes() const: Assertion `base_nodes!=nullptr && ""CSolver::base_nodes was not set properly, see brief for CSolver::SetBaseClassPointerToNodes()""' failed.``` at the pre-processing stage before any computation is done. Hence, a conditional operator is added to avoid this call for DG solvers. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; @vdweide and I are working on a new version of the DG solver that needs this workaround anyway. This is just added for now in case anyone else wants to work on the current version of DG solver available. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1772:2323,test,test,2323,https://su2code.github.io,https://github.com/su2code/SU2/pull/1772,1,['test'],['test']
Testability,"```; Should I assume from this that I can delete the SU^2 Jira space? . ~MC; ```. From: Trent Lukaczyk [mailto:notifications@github.com] ; Sent: Monday, October 28, 2013 9:56 AM; To: su2code/SU2; Subject: [SU2] test (#6). test issue. —; Reply to this email directly or view it on GitHub https://github.com/su2code/SU2/issues/6 .Image removed by sender.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/6#issuecomment-27230990:211,test,test,211,https://su2code.github.io,https://github.com/su2code/SU2/issues/6#issuecomment-27230990,2,['test'],['test']
Testability,"```diff; $ git --no-pager diff --cached ; diff --git a/meson.build b/meson.build; index ca86992ea..b68a03c52 100644; --- a/meson.build; +++ b/meson.build; @@ -1,15 +1,12 @@; project('SU2', 'c', 'cpp',; version: '7.5.1 ""Blackbird""',; + meson_version: '0.61.1',; license: 'LGPL2',; default_options: ['buildtype=release',; 'warning_level=0',; 'c_std=c99',; 'cpp_std=c++11']); ; -if meson.version() != '0.61.1'; - error('SU2 must be configured with the extended Meson script (./meson.py) in the SU2 root directory.'); -endif; -; pymod = import('python'); python = pymod.find_installation(); ; ```. I used this patch, and then ran the following:. ```; $ meson setup builddir --wipe; The Meson build system; Version: 1.0.1; Source dir: /tmp/SU2; Build dir: /tmp/SU2/builddir; Build type: native build. meson.build:1:0: ERROR: Meson version is 1.0.1 but project requires 0.61.1; ```. Using the >= comparison, it configures fine, and downloads a git submodule for mutationpp/coolprop on demand. From a hasty look around, it seems like the other git submodules are used as externals/ directories, not meson subprojects. Another project I know uses e.g. ```; if not fs.exists('submoduledir/README.md'); error('Missing the `submoduledir` submodule! Run `git submodule update --init` to fix this.'); endif; ```. for each submodule before it gets processed by meson. This is less automatic than wrapping it in meson.py, but does provide pretty clear directions... the sticking point is if people download tarballs. You currently point people to github's autogenerated archives, which is NOT sufficient as it doesn't have submodules included. I would actually suggest using `meson dist --include-subprojects --no-tests` to produce your own tarballs and attach them as additional releases artifacts. Meson *does* include submodules (whether or not they are subprojects) automatically to the tarball it creates.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1945#issuecomment-1451057434:1699,test,tests,1699,https://su2code.github.io,https://github.com/su2code/SU2/issues/1945#issuecomment-1451057434,1,['test'],['tests']
Testability,"`serial_regression.py` errors out while running `TestCases/cont_adj_euler/naca0012` test due to the use of `'U'` mode in `fromlines = open(fromfile, 'U').readlines()` in `TestCase.py`. `'U'` mode has been deprecated for a while and removed from latest Python versions.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2170:49,Test,TestCases,49,https://su2code.github.io,https://github.com/su2code/SU2/issues/2170,3,"['Test', 'test']","['TestCase', 'TestCases', 'test']"
Testability,"`update testcases, streamwise pin converges well` Thanks for checking @pcarruscag :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1679#issuecomment-1177421770:8,test,testcases,8,https://su2code.github.io,https://github.com/su2code/SU2/pull/1679#issuecomment-1177421770,1,['test'],['testcases']
Testability,"a root-level directory named `UnitTests`. Inside this directory is a structure just like the existing folder structure (e.g. `SU2_CFD/numerics`), except that there are not separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tests or individual tests.; + When `ninja test` or `meson test` is run, the test executable is only run once, sweeping through all the unit tests. The result only shows a single failure or a single success. If more detail is desired, then the test executable can be run manually.; + The relevant SU2 code is compiled as a library (e.g. `libSU2core`) and then linked into both the main executable (`SU2_CFD`) and the test program (`test_driver`). ### How to Run Unit Tests. If you compile SU2 using `ninja -C builddir`, then the test executable will automatically be compiled. You then have three options for running the tests:. + `meson test` (see documentation [here](https://mesonbuild.com/Unit-tests.html)); + `ninja test`; + Run the exectuable manually: `./UnitTests/test_driver`. When running the executable manually, there are many customization options. Run `./UnitTests/test_driver --help` to see them all. ### How to add unit tests. I have already included a single unit-test example (`UnitTests/SU2_CFD/src/numerics/CNumerics_tests.cpp`). Aside from the headaches with CConfig, this example should be clear. If not, raise questions and I will answer them. ~~I plan on adding a few more example tests, as well as a ""How-To"" page on the website.~~ Please see the PR on the website repo for more documentation. To learn more, check out the [great tutorial](https://github.com/catchorg/Catch2/blob/master/docs/tutorial.md) for Catch2. You can also find more in-depth documentation there. ### I still don't understand u",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/850:2526,test,test,2526,https://su2code.github.io,https://github.com/su2code/SU2/pull/850,1,['test'],['test']
Testability,"able). This allows; > people to see the performance of SU2 and replicate it, if need be.; >; > The first step would be compiling a list of cases that should be covered.; > The SU2 2014 SciTech paper; > <https://su2code.github.io/documents/SU2_AIAA_SciTech2014.pdf> would be a; > good starting point as it already had a couple of validation cases. This; > list can be bolstered with some of the NASA TMR cases, and with grid; > convergence studies. I would like to propose an initial list that the; > community can talk through and make changes as we see fit. I am mostly only; > familiar with canonical CFD flows that are used in these cases. But it; > would be great to have other cases, such as Turbo-machinary or FSI cases,; > that show the full breadth of SU2's abilities. This is by no means an; > exhaustive list:; >; > 1. Zero Gradient Flat Plate; > 2. 2D and 3D Bump in Channel; > 3. Asymmetric Diffuser; > 4. Backward facing step; > 5. Unsteady Square cylinder; > 6. NACA0012; > 7. NACA4412 Trailing Edge Seperation; > 8. Joukowski Airfoil; > 9. 30P30N High Lift airfoil; > 10. ONERAM6 Wing; > 11. NASA CRM; > 12. Subsonic and Supersonic Jets; >; > It would be ideal for these test cases to have either high-fidelity data; > (wind tunnel tests, or LES/DNS data), and/or published results of other; > solvers so that comparisons can be made.; >; > I also want to point out the difference between this and the TestCases; > repository. The TestCases repo is used in regression tests to ensure that; > parts of the code don't break when changes are made. This is more a test of; > SU2's fidelity. It would feature large grids and configuration files that; > can be run to convergence.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/581>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/APKNm0MgSdkhQbG8dvGsdxlxIf9pa1xsks5ucppYgaJpZM4Ww0V4>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-423070900:2601,test,test,2601,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-423070900,6,"['Test', 'test']","['TestCases', 'test', 'tests']"
Testability,able-mpi --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test ; -------------------------------------------------------------------------; | ___ _ _ ___ | ; | / __| | | |_ ) Release 6.2.0 'Falcon' | ; | \__ \ |_| |/ / | ; | |___/\___//___| Pre-configuration Script | ; | | ; -........ (I removed the header print here) ... Checking the status of submodules; =====================================================================; Initialize submodule externals/codi using git ... ; Submodule 'externals/codi' (https://github.com/scicompkl/CoDiPack) registered for path 'externals/codi'; Cloning into '/home/eran/applications/SU2/git_noMeson/SU2/externals/codi'...; Submodule path 'externals/codi': checked out '501dcf0305df147481630f20ce37c2e624fb351f'; Found correct version of CoDiPack in externals/codi.; Initialize submodule externals/medi using git ... ; Submodule 'externals/medi' (https://github.com/SciCompKL/MeDiPack) registered for path 'externals/medi'; Cloning into '/home/eran/applications/SU2/git_noMeson/SU2/externals/medi'...; Submodule path 'externals/medi': checked out 'edde14f9ac4026b72b1e130f61c0a78e8652afa5'; Found correct version of MeDiPack in externals/medi. Preparing build environment; =====================================================================; Command: ./bootstrap; Logfile written to bootstrap.log. Running configure in folder SU2_AD using CODI; =====================================================================; Command: ../configure --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test --enable-mpi --enable-codi-reverse. There was an error while running command '../configure --with-cc=mpicc --with-cxx=mpicxx --prefix=/home/eran/applications/SU2/SU2test --enable-mpi --enable-codi-reverse'.; === Error Log ===; /bin/sh: 1: ../configure: not found. ---------------------------------------------; When I copied configure.py from older installations it kept running but then aborted on; missing modules,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/910#issuecomment-598686170:1565,Log,Logfile,1565,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-598686170,3,"['Log', 'log']","['Log', 'Logfile', 'log']"
Testability,"able; - Delete pretty much everything from CTurb* or turb_* files except for some constructors. So far it compiled and some local regression testing showed no problems, lets see what the CI pipeline has to say about this. Now with this additional class introduced the actual works begins:; - figure out what is a reasonable interface in CScalar* to unify transported species and turb-models (and the other solvers probably); - code this common interface and push all turb-specific things back into the respective files (that is why I didn't `git mv` ). In order to keep this somewhat limited I would focus on porting the Turbsolvers to the new structure (however that might look, but looking at #1223 is what I'll do first) and maybe a simple transported passive scalar or so. We want the turb solver to be integrated under that Scalar-class which is arguably what most/all people use, that's why I want to have in this work at the beginning. We also have quite a few RANS Testcases so it is directly visible if something in the actual computation is changed. In case there are comments, ideas foreseeable stepping stones from experience please let me know here. ## Related Work; #777 by @economon which is the initial push towards this separate scalar solver class for additionally transported scalars (not merged); #1223 by @danielmayer @bigfooted which builds up on #777 and extends it to its needs (but does not support the turb solvers e.g.); #1226 by @oleburghardt - In this PR is a discussion on creating the structure which this (and following) PR('s) try to achieve; #1332 by @mheimgartner - implementing multi component flow (or analytic mixing properties of said multicomp flow). That PR is built upon #1223 but will merge this PR (once it is done) and throw out all additional changes in order to be merged into develop without relying on feature_flamelet. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warni",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1330:1667,Test,Testcases,1667,https://su2code.github.io,https://github.com/su2code/SU2/pull/1330,1,['Test'],['Testcases']
Testability,"ach PR does what the developer promises it will do. This will require refactoring some of the code. Some parts of the code, like the CConfig class, are not unit-testing friendly. Unit testing is hard when you have God-classes and ""do-it-all"" functions. The hope is that refactoring these classes will lead to more modular and easier-to-maintain code. ### Decision to use Catch2. Catch2 was chosen for the unit testing library for the following reasons:. + It can be included as a header-only library.; + It has a very clean, easy-to-use syntax; + It has widespread use, including the FEniCS library. ### Design choices. The following design choices are in place. If you disagree with them, then please start a discussion here:. + All tests are placed in a root-level directory named `UnitTests`. Inside this directory is a structure just like the existing folder structure (e.g. `SU2_CFD/numerics`), except that there are not separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tests or individual tests.; + When `ninja test` or `meson test` is run, the test executable is only run once, sweeping through all the unit tests. The result only shows a single failure or a single success. If more detail is desired, then the test executable can be run manually.; + The relevant SU2 code is compiled as a library (e.g. `libSU2core`) and then linked into both the main executable (`SU2_CFD`) and the test program (`test_driver`). ### How to Run Unit Tests. If you compile SU2 using `ninja -C builddir`, then the test executable will automatically be compiled. You then have three options for running the tests:. + `meson test` (see documentation [here](https://mesonbuild.com/Unit-tests.html)); + `ninja test`; + Run the exectuable manually: `./UnitTest",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/850:1734,Test,Tests,1734,https://su2code.github.io,https://github.com/su2code/SU2/pull/850,1,['Test'],['Tests']
Testability,add testcase for intersection prevention,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1158:4,test,testcase,4,https://su2code.github.io,https://github.com/su2code/SU2/pull/1158,1,['test'],['testcase']
Testability,added testcase and regression test.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1154#issuecomment-766695831:6,test,testcase,6,https://su2code.github.io,https://github.com/su2code/SU2/issues/1154#issuecomment-766695831,2,['test'],"['test', 'testcase']"
Testability,"ages and rms values have significant value. However, I have observed, that once averaging is enabled, the solver performance gradually decreases up to a point, where time-iterations are orders of magnitudes slower than without averaging. This does not seem to be a bug but rather inherent to the way averaging is implemented. I suspect, that the averaging occurs over all timesteps and thus a complete history of all the values is required. This may gradually increase memory consumption and effort for calculating averages. I suspect this to happen around here, but I may be wrong. https://github.com/su2code/SU2/blob/72b2fa977b64b9683a388920f05298a40d39e5c5/SU2_CFD/src/output/tools/CWindowingTools.cpp#L69-L76. I assume, that this may be a necessity for the higher-order windows, but seems to be overkill for a rectangular window, where the new time-average can be computed from the previous time-average, the number of iterations and the new values. Nevertheless, also the rectangular window seems to save the full value history:. https://github.com/su2code/SU2/blob/72b2fa977b64b9683a388920f05298a40d39e5c5/SU2_CFD/src/output/tools/CWindowingTools.cpp#L94-L100. **Describe the solution you'd like**; Being able to calculate (at least) non-windowed time-averages without a gradual drop in performance would be a real asset for me. This may be possible by choosing a different averaging method. If this cannot be done due to the data structure used, a dry-run message warning the user about this may be helpful. . **Describe alternatives you've considered**; The same effect can be achieved by running simulations without time-averaging but with regular volumetric outputs and calculating time-averages as a post-processing step. However, the associated data overhead is considerable. **Additional context**; I performed my tests so far with the RANS solver, employing SST turbulence and SLAU2 scheme. Time-averaging started at around time-iteration 160k and cintinous for another 200k iterations.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1545:2062,test,tests,2062,https://su2code.github.io,https://github.com/su2code/SU2/issues/1545,1,['test'],['tests']
Testability,"al changes. Using automake, the build process for building unit tests becomes:. '''; ./bootstrap; ./configure; make; make check; '''. We use Boost's unit testing framework<https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>. This provides a convenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time we push commits or submit a pull request, the unit tests are run and checked. What is my vision for unit testing in SU2?. I am not proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. Roll-your-own. * Requires no external dependencies; * The most flexible option; * Involves the most work to setup; * Will lack some of the more advances features of mature unit-testing frameworks. Boost Test. * Can be header only, statically linked, or dynamically linked; * If statically or dynamically linked, then Boost is not very lightweight; * Easy to add if you're already using Boost. Google Test. * Most common unit-testing framework; * Can be easily combined with Google's powerful GMock mocking library; * Compiling and linking can be somewhat painful. Catch2. * Used by FEniCS; *",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:3921,test,tests,3921,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,1,['test'],['tests']
Testability,"also be some; > issues that arise multiple times in existing code where a retroactive; > application of unit testing may also make sense. I am copying Pat Miller,; > formerly with DoE, who may have more experience on whether such unit; > testing approaches were useful/worth the investment in some major codes he; > worked on.; >; > Best,; >; > Juan; >; >; > On Jun 4, 2019, at 2:14 PM, Clark Pederson <notifications@github.com>; > wrote:; >; > I propose adding a unit-testing framework and unit-tests to SU2. After; > chatting with @economon <https://github.com/economon>, I've decided to; > move the discussion here to get additional input.; > What is unit testing?; >; > For those not familiar with unit testing, unit testing allows the testing; > of small bits of behavior, ideally using isolated bits of code. It is not; > intended to replace validation testing or formal verification tests.; > Instead, it serves a unique purpose. Consider the three following use cases:; >; > - You're developing a new feature, and you want to test it to see if; > it works. You could do a full simulation, but that takes a lot of time and; > computing power. You want to check if your new behavior behaves as you; > suspect before you throw a lot of resources at it.; > - You submit a PR and discover that one of the regression tests has; > failed. But...why? You know that something is broken, but its hard to track; > down what broke. You want more granular test coverage that can demonstrate; > what broke.; > - You are fixing a very small bug. You know that you should prove that; > your bug fix worked, but it doesn't seem logical to dedicate an entire; > validation case to one small bug fix. You want to write a small test for a; > small fix.; >; > In all of these cases, unit testing fills a unique role. Unit testing; > increases time spent in development, but decreases the amount of time spent; > in bug-fixing and maintaining.; >; > For more information, see this relevant Stack Exchange question.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:2378,test,test,2378,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,1,['test'],['test']
Testability,"alues. This is similar to the branch I mentioned in #467. The main difference is that the other branch uses hardcoded routines in C++ to read in a table of values and set the inlet conditions. This branch forgoes all of that and lets the user decide how to specify the inlet conditions. This allows both function-based inlet conditions (using python functions) or table-based inlet conditions (using python to read in the values from a file). I'm not opposed to a purely C++ approach to accomplishing the same objective, but I think the python way is much more flexible. Multigrid is **not** currently supported. I don't currently know enough about the agglomeration routines to ensure that I implemented it correctly. Multigrid is not a high priority for me, since periodic BCs and time-stepping are also incompatible with multigrid. ### Verification. As a test-case, I used the flat-plate boundary layer problem in the Tutorials/TestCases directories. I chopped the domain off around x=.5, then used the values from a converged simulation to set the inlet to the correct values at x=.5. You can see some of the results below. I can turn the truncated flat plate into a regression test, if you would like. ![x-momentumcontour](https://user-images.githubusercontent.com/13340225/35588322-e69ac5f4-05c5-11e8-902d-64941ab731fb.png); Figure 1: A comparison of the momentum in the x-direction between truncated and full domains. ![x-momentum_line](https://user-images.githubusercontent.com/13340225/35588290-cb0141c4-05c5-11e8-88d3-085018fabf52.png); Figure 2: A comparison of the momentum profiles at x~=1.5. ![nu_tildecontour](https://user-images.githubusercontent.com/13340225/35588241-9891e5a4-05c5-11e8-9861-50064b28689e.png); Figure 3: A comparison of the turbulent variable between truncated and full domains. ![nu_tilde_line](https://user-images.githubusercontent.com/13340225/35588249-9d94e3e4-05c5-11e8-9fc6-fbe9e89d144e.png); Figure 4: A comparison of the turbulent variable profiles at x~=1.5",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/503:1562,test,test,1562,https://su2code.github.io,https://github.com/su2code/SU2/pull/503,1,['test'],['test']
Testability,"amination of the shear stress transport assumption with a low-Reynolds number k-omega model for aerodynamic flows."" Eq 17.; - Boundary conditions errors at inlets, following the Issue #1851. A fix has been proposed following @pcarruscag suggestions for the supersonic inlet BC.; - Boundary conditions definitions are different than the ones proposed in TMR. Maybe give the user the choice to use the BCs implemented in SU2 or the ones from TMR. Changes to SST model proposed:; - Inclusion of non modified versions of SST. In this case I think that more work is needed to be sure that the correct terms are taken into account everywhere in the code.; - Give the user the possibility of changing the production limiter for TKE (not essential).; - Change values of default turbulent to laminar viscosity to 1e-2 (NASA TMR reports that it should be in the range of 1e-2 to 1e-5, but in SU2 this is set to 10 as default). . I've seen the proposed changes to the lower limits of k and w in #2323 and I tried implementing it in my branch. However, if the implementation proposed in the respective PR is preferred then I will change mine. . ## Related Work; #2323 #1851 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329:2839,test,test,2839,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329,1,['test'],['test']
Testability,"ance.; The git add, git commit and git push commands worked as expected.; The only problem I had was when I tried to upload the mesh file to https://github.com/su2code/TestCases/tree/develop/disc_adj_euler: <https://github.com/su2code/TestCases/tree/develop/disc_adj_euler:> I wanted to upload a folder “arina2k”, whose contents is the mesh file (.su2). I could not just upload the folder name: the system appears to be waiting for an actual file name. When I choose the file name inside that folder , it appears that the system would upload the file within the repository, but 'discarding’ its folder name, so I would have an ‘orphaned’ file there. I tried also to create a file (which would be my folder name), but again, I am prompted with an editor in order to write an actual file, using directly the browser. I believe that there is a simple way to upload a sub-directory/filename, but i could not realize it. With kind regards,. Jairo. > On Dec 14, 2018, at 01:26, Thomas D. Economon <notifications@github.com> wrote:; > ; > @jaspe55 <https://github.com/jaspe55> : I see that you have added the residual check for the python regression script, but I do not see the config file, target file, or mesh. The config file and target file should be placed in SU2/TestCases/disc_adj_euler/arina2k/ (according to your path in the regression script), and the mesh placed in the TestCases/disc_adj_euler/arina2k/ directory in the TestCases repository here (develop): https://github.com/su2code/TestCases/tree/develop <https://github.com/su2code/TestCases/tree/develop>. Don't forget to 'git add' the files to make sure they are included on push. We can help diagnose any segfaults with the files.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/pull/600#issuecomment-447209397>, or mute the thread <https://github.com/notifications/unsubscribe-auth/Ac180hTDpbM_TXuwfdIJnHpDEpp295gqks5u4yh5gaJpZM4X34F2>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-447475363:1312,Test,TestCases,1312,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-447475363,5,['Test'],['TestCases']
Testability,"and prepare necessary near-field boundary marker in version 6.2.0, nearfield_flow.dat and Equivalent_Area.dat are output but not in version 7.0.0 anymore. I did some investigation in the code. nearfield_flow.dat and Equivalent_Area.dat seem to be output by the code below in output_structure_legacy.cpp.; `void COutputLegacy::SpecialOutput_SonicBoom`. It is called out in `void COutputLegacy::SetConvHistory_Body` in output_structure_legacy.cpp. It is then called out in the following lines in CDriver.cpp but none of them seems to be for sonicboom case, which I think is the cause for this bug.; `output_legacy->SetConvHistory_Body(&ConvHist_file[iZone][iInst], geometry_container, solver_container,`; `output_legacy->SetConvHistory_Body(&ConvHist_file[iZone][iInst], geometry_container, solver_container,`; `output_legacy->SetConvHistory_Body(NULL, geometry_container, solver_container, config_container,`. In version 6.2.0, `bool CDriver::Monitor(unsigned long ExtIter)` in driver_structure.cpp had `output->SetConvHistory_Body` and I think this was eventually calling out `SpecialOutput_SonicBoom`. I think this function has been accidentally removed by the change below but I'm not sure how to fix it.; https://github.com/su2code/SU2/pull/724 . It would be great if sonicboom case is included in the regression test of test cases. ""biparabolic"" uses this feature but does not seem to be included in the regression test. This test case does not converge at least on my computer though. **To Reproduce**. [v7_sonicboom.zip](https://github.com/su2code/SU2/files/3968025/v7_sonicboom.zip); NACA64206_sonicboom_v6.cfg is a config file for version 6.; NACA64206_sonicboom_v7.cfg is a config file for version 7.; The mesh file is common for both cases. **Desktop (please complete the following information):**; - OS: Linux (Ubuntu 18.04.3 LTS); - C++ compiler and version: g++ 7.4.0; - MPI implementation and version: OpenMPI 2.1.1; - SU2 Version: v6.2.0 and v7.0.0. Thank you in advance for your help.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/841:1365,test,test,1365,https://su2code.github.io,https://github.com/su2code/SU2/issues/841,4,['test'],['test']
Testability,"ant to check if your new behavior behaves as you suspect before you throw a lot of resources at it.; + You submit a PR and discover that one of the regression tests has failed. But...why? You know that something is broken, but its hard to track down what broke. You want more granular test coverage that can demonstrate what broke.; + You are fixing a very small bug. You know that you should prove that your bug fix worked, but it doesn't seem logical to dedicate an entire validation case to one small bug fix. You want to write a small test for a small fix. In all of these cases, unit testing fills a unique role. Unit testing increases time spent in development, but decreases the amount of time spent in bug-fixing and maintaining. For more information, see this [relevant Stack Exchange question.](https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes). ## What do I propose?. Our research group at UT Austin has implemented a unit testing framework on our branch, which we're happy with. Some choices were arbitrary, and some choices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more information on autotool's setup, see [their documentation](https://www.gnu.org/software/automake/manual/html_node/Tests.html). Since autotools is the build system for SU2, this involves minimal changes. Using automake, the build process for building unit tests becomes:. ```; ./bootstrap; ./configure; make; make check; ```. We use [Boost's unit testing framework](https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html). This provides a convenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698:1649,test,testing,1649,https://su2code.github.io,https://github.com/su2code/SU2/issues/698,1,['test'],['testing']
Testability,"ant to test it to see if it works. You could do a full simulation, but that takes a lot of time and computing power. You want to check if your new behavior behaves as you suspect before you throw a lot of resources at it.; + You submit a PR and discover that one of the regression tests has failed. But...why? You know that something is broken, but its hard to track down what broke. You want more granular test coverage that can demonstrate what broke.; + You are fixing a very small bug. You know that you should prove that your bug fix worked, but it doesn't seem logical to dedicate an entire validation case to one small bug fix. You want to write a small test for a small fix. In all of these cases, unit testing fills a unique role. Unit testing increases time spent in development, but decreases the amount of time spent in bug-fixing and maintaining. For more information, see this [relevant Stack Exchange question.](https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes). ## What do I propose?. Our research group at UT Austin has implemented a unit testing framework on our branch, which we're happy with. Some choices were arbitrary, and some choices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more information on autotool's setup, see [their documentation](https://www.gnu.org/software/automake/manual/html_node/Tests.html). Since autotools is the build system for SU2, this involves minimal changes. Using automake, the build process for building unit tests becomes:. ```; ./bootstrap; ./configure; make; make check; ```. We use [Boost's unit testing framework](https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html). This provides a convenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698:1533,test,tests-for-scientific-research-codes,1533,https://su2code.github.io,https://github.com/su2code/SU2/issues/698,1,['test'],['tests-for-scientific-research-codes']
Testability,"anual/html_node/Tests.html>. Since autotools is the build system for SU2, this involves minimal changes. Using automake, the build process for building unit tests becomes:. '''; ./bootstrap; ./configure; make; make check; '''. We use Boost's unit testing framework<https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>. This provides a convenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time we push commits or submit a pull request, the unit tests are run and checked. What is my vision for unit testing in SU2?. I am not proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. Roll-your-own. * Requires no external dependencies; * The most flexible option; * Involves the most work to setup; * Will lack some of the more advances features of mature unit-testing frameworks. Boost Test. * Can be header only, statically linked, or dynamically linked; * If statically or dynamically linked, then Boost is not very lightweight; * Easy to add if you're already using Boost. Google Test. * Most common unit-testing framework; * Can be easily combined with Google's powerful GMock ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:3850,test,tests,3850,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,1,['test'],['tests']
Testability,"appening currently). All `CAdj<sth>` things are related to the continuous adjoint and `CDiscAdj<sth>` to the discrete adjoint.; > Boundary conditions (this one being internal) need to be explicitly derived and set in the continuous adjoint but not in the discrete adjoint so your understanding was going in the right direction. (Although I am no expert in cont.adj. things either :) ). So, it sounds like I don't need to care about it as long as I use discrete adjoint then. > > VENKATAKRISHNAN limiter: With MARKER_NEARFIELD defined, this limiter causes strange pressure disturbance near the nearfield boundary. I tried to find a cause but no luck so far. (That's why I'm using VAN_ALBADA_EDGE in the test cases.); > ; > you can try maybe to tune the `VENKAT_LIMITER_COEFF` in the cfg, but I have no better hint for now. I forgot to mention. I have tested VENKATAKRISHNAN limiter with v6. I am hoping that it is fixed by now after reading [this discussion](https://github.com/su2code/SU2/issues/917). > > Bad match for point 47742. Nearest donor distance: 3.6066950142e+00.: Lots of this message shows up. I don't know what this message is for. It doesn't seem to cause any real issues, so I've been ignoring them.; > ; > That is certainly sth I would not ignore :) Does this occur with the case you added (i.e. no periodic bc)? Does it also occur when you run single core? maybe it is matching between internal MPI boundaries. In that case yould can add RANK to the VOLUME_OUTPUT and take more and more cores and see when it fails -> look at the Rank boundaries and maybe you notice sth. Yes, it occurs with the case I added. I haven't tested with single core. As far as I see in `CPhysicalGeometry::MatchNearField`, the code looks for a nearest point to a point on the nearfield boundary. If it exceeds 1e-1 (which is usually the case if you have real scale mesh), it prints this warning. I'm not sure what this is for. I'm ignoring it since I don't see an issue with this distance exceeding 1e-1.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1329#issuecomment-885501847:2209,test,tested,2209,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-885501847,1,['test'],['tested']
Testability,"are also released with precompiled executables. This is for instance ""SU2 v.8.0""; > * A new master branch is created from the latest _develop_ branch. Developers are usually working with the develop branch to have access to the latest implementations. New implementations are committed to the develop branch.; > * When a developer wants to implement something new, they create a new branch from develop, implement their thing, and merge it again with develop. You see that happening here, in the top of the page you see; > ; > > [pcarruscag](https://github.com/pcarruscag) wants to merge 2 commits into [develop](https://github.com/su2code/SU2/tree/develop) from [supersonic_profile](https://github.com/su2code/SU2/tree/supersonic_profile); > ; > You see in the section _Files Changed_ the changes compared to the current develop branch. This shows that this branch is up to date with current develop, only the new changes for the inlet profile show up.; > ; > I did not go through the code yet, but when you run it without having an inlet.dat file present, it should create one for you filled with a uniform profile. When you then use this file unaltered, does that work?. Hi, I got how the branches work. In this case, I first downloaded the 'develop' branch to make sure everything is consitent with Pedro, and then I downloaded and replaced the 6 new committed files that related to the supersonic inlet profile development. The code should be totally the same at this point. And I did a flat plate test, which actually I need to fill a uniform profile, since the code would only generated an empty one. However, a segment error still occurs, and I attached the error file with Valgrind output. After eliminating the difference of different branches(versions), I guess you may have the same error? The test files are on the above conversations so that you may also take a try. Thanks for the help!; [error.txt](https://github.com/user-attachments/files/16323710/error.txt); @pcarruscag @bigfooted",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2327#issuecomment-2241546869:1643,test,test,1643,https://su2code.github.io,https://github.com/su2code/SU2/pull/2327#issuecomment-2241546869,2,['test'],['test']
Testability,"are mentioning is the same. I simply united the TIP, LOWER_SIDE and UPPER_SIDE under the marker tag WING. > The initial transient through the domain based on the initial values is unphysical to some extend and if e.g. 'steady state' results are the same for both code versions .... the problem is not that big. Although it differs quite a bit in the temporal evolution tbh; In the results (also in the mail) it looks a bit like it approaches a steady state for Cl and CD. So maybe 1000 timesteps will tell us a bit more 🤔. I guess they converge eventually to the same values. I tried to compare the same case but steady (I attach the summary). Results in this case are fairly similar and (in my opinion) raise no warnings.; [Summary_steady_6_0_1.txt](https://github.com/su2code/SU2/files/3906039/Summary_steady_6_0_1.txt); [Summary_steady_6_2_0.txt](https://github.com/su2code/SU2/files/3906010/Summary_steady_6_2_0.txt). Regarding the unsteady case, I'm aware that this test may have little physics behind (especially if comparing the first timesteps) but I wanted to investigate the reason :). Results are too different and I think these might be one of the reasons behind some discrepancies I'm encountering in my FSI framework. ; My framework for FSI features a restart from a steady solution at t=0 and an unsteady simulation with imposed boundary of the wing marker. The discrepancies in that case are huge and are clearly wrong. I went back to the root and found this weird behaviour comparing the two versions so I thought this might be one cause. > Another thing: There is no tag 6.0.2 😕 ... 6.0.1 and then 6.1.0.. Yep you are right, the version is definitely 6.0.1 as it can be seen from the Summaries: **I'm updating the issue.**. > And both versions are/were on the develop branches -> what exactly do you refer to here: config-files, code, mesh. Didn't quite understand you here. Let me know if you need any other info regarding the topic. Looking forward to hear from you!. Best,; Rocco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-559850074:1301,test,test,1301,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-559850074,1,['test'],['test']
Testability,"avior, ideally using isolated bits of code. It is not; > intended to replace validation testing or formal verification tests.; > Instead, it serves a unique purpose. Consider the three following use cases:; >; > - You're developing a new feature, and you want to test it to see if; > it works. You could do a full simulation, but that takes a lot of time and; > computing power. You want to check if your new behavior behaves as you; > suspect before you throw a lot of resources at it.; > - You submit a PR and discover that one of the regression tests has; > failed. But...why? You know that something is broken, but its hard to track; > down what broke. You want more granular test coverage that can demonstrate; > what broke.; > - You are fixing a very small bug. You know that you should prove that; > your bug fix worked, but it doesn't seem logical to dedicate an entire; > validation case to one small bug fix. You want to write a small test for a; > small fix.; >; > In all of these cases, unit testing fills a unique role. Unit testing; > increases time spent in development, but decreases the amount of time spent; > in bug-fixing and maintaining.; >; > For more information, see this relevant Stack Exchange question.; > <https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes>; > What do I propose?; >; > My research group at UT Austing has implemented a unit testing framework; > on our branch, which we're happy with. Some choices were arbitrary, and; > some choices were made based on our development environment. Those choices; > may be different for other groups. Here's what we have done:; >; > The unit testing framework is compiled and run using autotools. For more; > information on autotool's setup, see their documentation; > <https://www.gnu.org/software/automake/manual/html_node/Tests.html>.; > Since autotools is the build system for SU2, this involves minimal changes.; >; > Using automake, the build process for",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:3119,test,testing,3119,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,1,['test'],['testing']
Testability,"aybe you refer to the develop code at the time where these tags were introduced. But maybe sth different. > I guess they converge eventually to the same values. I tried to compare the same case but steady (I attach the summary). Results in this case are fairly similar and (in my opinion) raise no warnings. That is good to hear. ; Luckily @cvencro (Thanks for that 👍 ) ran some tests and found that #740 (which rewrites Euler Wall boundaries for compressible and incompressible flows ... which was me btw) introduces the changes you see. The Euler wall for compressible is changed a bit in the way the boundary condition is enforced. Upon convergence both version should recover (close to) the same value. If the results in a steady state are the same/very-similar and if an unsteady simulation at low enough Reynolds-number converges to the same steady result (or oscillate in the same bounds) -> I would say it is simply some purely numerical effect based on the unphysical initialization and different treatment of the euler wall boundary. . 1 thing one could test additionally is to force a very high convergence in each physical timestep, i.e. usually one converges ~3 orders of magnitude in each ts -> now try converging until residual stalling in each ts. If the code versions get the same/closer results in the temporal evolution my euler wall boundary explanation would be quite reasonable.; Together with the long running unsteady simulation proposed above, I would feel more comfortable to judge. @cvencro (bringing the conversation to this place 😉 ) concerning the pitching case: the `if (dynamic_grid)` statements in the 'old' version are not necessary as that is handled by the numerics class. In the new version an appropriate 'reflected state' is constructed and the numerics container is called to compute the residual. Before, the code of one numerics ->ComputeResidual Routine was simply copied and slightly modified. But of course there is always room for errors 🐛 . Cheers, Tobi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-562621057:1381,test,test,1381,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-562621057,1,['test'],['test']
Testability,"bal flags.; Sanity check compiler command line: gcc D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.c -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe; C compiler for the build machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the build machine: gcc ld.bfd 2.30; None of 'AR' are defined in the environment, not changing global flags.; None of 'CXX' are defined in the environment, not changing global flags.; None of 'CXXFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity testing C++ compiler: c++; Is cross compiler: False.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: c++ D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.cc -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe; C++ compiler for the build machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the build machine: c++ ld.bfd 2.30; None of 'CC' are defined in the environment, not changing global flags.; None of 'CFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CC_LD' are defined in the environment, not changing global flags",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:2256,test,testing,2256,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['test'],['testing']
Testability,"ble-multilib --disable-werror --enable-checking=release --enable-default-pie --enable-default-ssp --enable-cet=auto gdc_include_dir=/usr/include/dlang/gdc; Thread model: posix; gcc version 9.2.1 20200130 (Arch Linux 9.2.1+20200130-2) ; ```; I did what you suggested and here is how my meson.build file looks.; ```; # If custom mpi mode is enabled, include and library pathes for MPI have to be set manually to env variables; if get_option('custom-mpi'); mpi_dep = []; mpi = true; # Otherwise they are automatically determined; else; mpi_dep = [dependency('mpich', required : get_option('with-mpi'))]; # mpi_dep = [dependency('mpi', language:'c', required : get_option('with-mpi')),; # dependency('mpi', language:'cpp', required : get_option('with-mpi'))]; #if mpi_dep[0].found() or mpi_dep[1].found(); # mpi = true; #endif; endif; ```; My SU2 build was successful but there were a couple of warnings.; Also, instead of 870 there were only 772 files in total. Is that okay?; ```; slimshady@arch-linux-hp-probook-g3-450: SU2HOME$ ./ninja -C build install; ninja: Entering directory `build'; [756/772] Generating 'SU2_PY/pySU2/_pysu2.so.p/pySU2.cxx'.; ../SU2_PY/pySU2/../../Common/include/mpi_structure.hpp:348: Warning 325: Nested struct not currently supported (Status ignored); [760/772] Generating 'SU2_PY/pySU2/_pysu2ad.so.p/pySU2ad.cxx'.; ../SU2_PY/pySU2/../../Common/include/mpi_structure.hpp:348: Warning 325: Nested struct not currently supported (Status ignored); [771/772] Installing files.; .; .; ```; Here is the [entire output for `./ninja`](https://github.com/su2code/SU2/files/4672490/ninja_build_mpich.log). Even though the build was successful, SU2 does not seem to run properly. It displays the same thing ""NP"" (`mpirun -n NP ...`) number of times. And the console prints the output in chunks, like 57 iterations suddenly ""NP"" times, then a pause, then 57-119 ""NP"" times and so on. You can see the [logfile here](https://github.com/su2code/SU2/files/4672491/mpirun_SU2_CFD_error.log).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-633139474:2628,log,log,2628,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-633139474,3,['log'],"['log', 'logfile']"
Testability,"bs/1_70_0/libs/test/doc/html/index.html). This provides a convenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time we push commits or submit a pull request, the unit tests are run and checked. ## What is my vision for unit testing in SU2?. I am *not* proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. ## What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. #### Roll-your-own. + Requires no external dependencies; + The most flexible option; + Involves the most work to setup; + Will lack some of the more advances features of mature unit-testing frameworks. #### Boost Test. + Can be header only, statically linked, or dynamically linked; + If statically or dynamically linked, then Boost is not very lightweight; + Easy to add if you're already using Boost. #### Google Test. + Most common unit-testing framework; + Can be easily combined with Google's powerful GMock mocking library; + Compiling and linking can be somewhat painful. #### Catch2. + Used by FEniCS; + Makes unit tests easily readable with lots of syntactic sugar.; + Has a very simple syntax; + Is header-only; + ~~Requires C++11 compilation~~ Requires C++11 for full feat",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698:3310,test,test,3310,https://su2code.github.io,https://github.com/su2code/SU2/issues/698,1,['test'],['test']
Testability,"calZonesDriver) to specify the physics (e.g. which zones are fluids, which are solids) without a bunch of a priori or 'hard coded' assumptions. I intend to develop it further in near future which basically means to incorporate the existing sorts of interfaces (mixing plane, FSI, .. maybe it works out).; 1. A new finite-volume-based heat solver (CHeatSolverFVM). It can be run stand-alone in solids for pure heat conduction or weakly coupled to the incompressible mean flow solver.; 1. A new CTransfer child class (CTransfer_ConjugateHeatVars) to exchange CHT-related interface information. Most of these commits do not touch existing code but just use it. Exceptions are:; 1. Quite a few config options.; 1. A small new data structure in CDriver to store types of interfaces that is used by CMultiPhysicalZonesDriver. Some additions in **Interface_Preprocessing**.; 1. A change of **SetCFL_Number** so that the CFL adaption works for multiple zones. @salvovitale : One of your test cases is a multi-zones one that uses CFL adaption (the Jones one). This commit of course changes the solver behaviour in that case. I saw that you are averaging CFL numbers - maybe these problems are connected? Could you check if the test case is still alright? For now, I had to change the regression test values.; 1. Some more else if(...)-cases in output_structure.cpp... As this is my first pull request, it's very likely that I missed some good-practices. I would like to point out that many of the commits contain _purely copied code_.; There was always some reason when it could not re-use it, but please be a bit indulgent if I missed to reference the credits. I just don't know where to.. if something attracts your attention, I will change it asap :-) Furthermore I should mention that; 1. This branch contains are very **naive couling procedure**. I will add Robin-like BC's and conservative energy correction routines when I feel comfortable about them.; 1. The **discrete adjoint version** of all this wo",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/505:1079,test,test,1079,https://su2code.github.io,https://github.com/su2code/SU2/pull/505,1,['test'],['test']
Testability,"calability limit…there is still plenty of work to do in each rank compared to the amount of communication that each rank must do (per iteration). In my mind this points to one of two things:. 1. Network between nodes: has this changed substantially between your timings for 6.2 and 7.0? Or is the network identical? In general, the numbers of the scalability limit that I listed above are for high-performance networking equipment (InfiniBand network cards on each node and a switch with a healthy amount of bisection bandwidth) with high bandwidth and low latency. Have you had a chance to measure the performance of your network (we used to have a little program called bounce that you can compile and run to get these statistics)? GigE cards and switches can have terrible MPI latencies. 2. Something is going wrong with the launching of jobs: As Pedro mentions, some of the timings are suspicious. Any chance you are launching multiple jobs per node and you are not realizing it? Can you log in to one of the nodes during the run and see what is running there? Orphaned jobs from a previous run?. Best,. Juan. On Mar 1, 2020, at 9:40 AM, Andrew Burkett <notifications@github.com<mailto:notifications@github.com>> wrote:. I think that is just a coincidence that the timings were the same but I should have provided more data up front. I did the preprocessing output check you described and a==b. The following output is from 16 cores on 1 node if you want to take a look. output_1.txt<https://github.com/su2code/SU2/files/4272178/output_1.txt>. Here are three sets of timings. One for SU2 v7 on a smaller problem (6.8e6 cells) and one for SU2 v7 on a larger one (27e6 cells) and one for SU2 v6.2 on the same smaller problem. These are all done with the same compiled version of openmpi (v4.02) and compiling SU2 from source for both versions. The four machines are nearly identical. They're all dual socket machines running sandy bridge xeons, so they are a bit on the older side. Mesh 1 (6.8e6 cel",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894#issuecomment-593127059:1461,log,log,1461,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593127059,1,['log'],['log']
Testability,"cations@github.com>> wrote:. I propose adding a unit-testing framework and unit-tests to SU2. After chatting with @economon<https://github.com/economon>, I've decided to move the discussion here to get additional input. What is unit testing?. For those not familiar with unit testing, unit testing allows the testing of small bits of behavior, ideally using isolated bits of code. It is not intended to replace validation testing or formal verification tests. Instead, it serves a unique purpose. Consider the three following use cases:. * You're developing a new feature, and you want to test it to see if it works. You could do a full simulation, but that takes a lot of time and computing power. You want to check if your new behavior behaves as you suspect before you throw a lot of resources at it.; * You submit a PR and discover that one of the regression tests has failed. But...why? You know that something is broken, but its hard to track down what broke. You want more granular test coverage that can demonstrate what broke.; * You are fixing a very small bug. You know that you should prove that your bug fix worked, but it doesn't seem logical to dedicate an entire validation case to one small bug fix. You want to write a small test for a small fix. In all of these cases, unit testing fills a unique role. Unit testing increases time spent in development, but decreases the amount of time spent in bug-fixing and maintaining. For more information, see this relevant Stack Exchange question.<https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes>. What do I propose?. My research group at UT Austing has implemented a unit testing framework on our branch, which we're happy with. Some choices were arbitrary, and some choices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more i",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:1757,test,test,1757,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,1,['test'],['test']
Testability,"ch, which we're happy with. Some choices were arbitrary, and some choices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more information on autotool's setup, see their documentation<https://www.gnu.org/software/automake/manual/html_node/Tests.html>. Since autotools is the build system for SU2, this involves minimal changes. Using automake, the build process for building unit tests becomes:. '''; ./bootstrap; ./configure; make; make check; '''. We use Boost's unit testing framework<https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>. This provides a convenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time we push commits or submit a pull request, the unit tests are run and checked. What is my vision for unit testing in SU2?. I am not proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. Roll-your-own. * Requires no external dependencies; * The most flexible option; * Involves the most work to setup; * Will lack some",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:3515,test,tests,3515,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,1,['test'],['tests']
Testability,"choices were made based on our development environment. Those choices; > may be different for other groups. Here's what we have done:; >; > The unit testing framework is compiled and run using autotools. For more; > information on autotool's setup, see their documentation; > <https://www.gnu.org/software/automake/manual/html_node/Tests.html>.; > Since autotools is the build system for SU2, this involves minimal changes.; >; > Using automake, the build process for building unit tests becomes:; >; > '''; > ./bootstrap; > ./configure; > make; > make check; > '''; >; > We use Boost's unit testing framework; > <https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>.; > This provides a convenient set of macros for instatiating tests, grouping; > tests into suites, and running checks. This choice was based on what is; > available in our development setup.; >; > We have integrated our unit tests into our Travis CI regression testing.; > Every time we push commits or submit a pull request, the unit tests are run; > and checked.; > What is my vision for unit testing in SU2?; >; > I am *not* proposing that we start trying to get 100% code coverage with; > pre-existing code. That would not provide a good return on investment.; >; > Instead, I see people adding unit tests as they write new code and as they; > find bugs. For each new behavior added to SU2, tests are first added to; > document the related existing behavior. These tests serve to check that the; > existing behavior isn't damaged by the new code. Then new tests are added; > to prove that the new behavior is working correctly. For bug fixes, the; > process is simpler. A test is added to confirm that something is not; > behaving as expected. Then the code is fixed to make the test pass.; > What frameworks are available?; >; > For a unit testing framework, here are the most popular options, with the; > following pros and cons:; > Roll-your-own; >; > - Requires no external dependencies; > - The most flexible",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:4668,test,tests,4668,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,1,['test'],['tests']
Testability,"ck Exchange question.<https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes>. What do I propose?. My research group at UT Austing has implemented a unit testing framework on our branch, which we're happy with. Some choices were arbitrary, and some choices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more information on autotool's setup, see their documentation<https://www.gnu.org/software/automake/manual/html_node/Tests.html>. Since autotools is the build system for SU2, this involves minimal changes. Using automake, the build process for building unit tests becomes:. '''; ./bootstrap; ./configure; make; make check; '''. We use Boost's unit testing framework<https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>. This provides a convenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time we push commits or submit a pull request, the unit tests are run and checked. What is my vision for unit testing in SU2?. I am not proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. What frameworks are ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:3256,test,tests,3256,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,2,['test'],['tests']
Testability,"cogs.com/gif.latex?%5Ctau_w%3Dc_f%5Cfrac%7B1%7D%7B2%7D%5Crho%20V_%5Cinfty%5E2).; We found this possible problem while doing a run on a NACA0012 airfoil.; The problem found is that the skin friction coefficient along the airfoil is too high compared to the theory.; The grid has 257 nodes on the airfoil, and it has been downloaded from the NASA website (https://turbmodels.larc.nasa.gov/naca0012_grids.html).; The solved equations are the RANS with the SST turbulence model, in compressible regime. M=0.1, Re=1e6, TU=10%, mut/mu=0.001; The run is dimensional.; ![ImmaginiSU2-1](https://user-images.githubusercontent.com/53580993/96976601-5688b700-151c-11eb-8a72-ed0e0ff340dc.png); In this figure ""Rough Wall 1"" is the case of tau wall computed with the current version.; ""Rough Wall 2"" is the case of tau wall computed after this modification.; The chosen k+ is 4 because, considering the Wilcox paper ""Formulation of the k-w Turbulence Model Revisited, AIAA Journal, Vol. 46, No. 11, November 2008"", the smooth wall has k+ < 5.; Moreover, the order of magnitude of omega wall is O(1e9). In case of the ""Rough Wall 1"" it is of O(1e6), while in case of ""Rough Wall 2"" it is of O(1e9).; We don't know if the problem is somewhere else, but changing the computation of the tau wall it seems to be fixed.; We hope this could be useful. Authors: TAARG (Theoretical and Applied Aerodynamic Research Group), University of Naples Federico II.; Ettore Saetta, Lorenzo Russo, Renato Tognaccini, Benedetto Mele. ## Related Work; #877 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1097:2148,test,test,2148,https://su2code.github.io,https://github.com/su2code/SU2/pull/1097,1,['test'],['test']
Testability,"comes:; >; > '''; > ./bootstrap; > ./configure; > make; > make check; > '''; >; > We use Boost's unit testing framework; > <https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>.; > This provides a convenient set of macros for instatiating tests, grouping; > tests into suites, and running checks. This choice was based on what is; > available in our development setup.; >; > We have integrated our unit tests into our Travis CI regression testing.; > Every time we push commits or submit a pull request, the unit tests are run; > and checked.; > What is my vision for unit testing in SU2?; >; > I am *not* proposing that we start trying to get 100% code coverage with; > pre-existing code. That would not provide a good return on investment.; >; > Instead, I see people adding unit tests as they write new code and as they; > find bugs. For each new behavior added to SU2, tests are first added to; > document the related existing behavior. These tests serve to check that the; > existing behavior isn't damaged by the new code. Then new tests are added; > to prove that the new behavior is working correctly. For bug fixes, the; > process is simpler. A test is added to confirm that something is not; > behaving as expected. Then the code is fixed to make the test pass.; > What frameworks are available?; >; > For a unit testing framework, here are the most popular options, with the; > following pros and cons:; > Roll-your-own; >; > - Requires no external dependencies; > - The most flexible option; > - Involves the most work to setup; > - Will lack some of the more advances features of mature unit-testing; > frameworks.; >; > Boost Test; >; > - Can be header only, statically linked, or dynamically linked; > - If statically or dynamically linked, then Boost is not very; > lightweight; > - Easy to add if you're already using Boost; >; > Google Test; >; > - Most common unit-testing framework; > - Can be easily combined with Google's powerful GMock mocking library; > - Comp",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:5102,test,tests,5102,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,1,['test'],['tests']
Testability,"compile the code with following errors:. (base) root@a5502ebdff64:/home/SU2# ./configure --prefix=/home/SU2/SU2_Install CXXFLAGS=""-O3"" --enable-mpi --with-cc=/usr/bin/mpicc --with-cxx=/usr/bin/mpicxx. checking build system type... x86_64-pc-linux-gnu. checking host system type... x86_64-pc-linux-gnu. checking target system type... x86_64-pc-linux-gnu. checking for a BSD-compatible install... /usr/bin/install -c. checking whether build environment is sane... yes. checking for a thread-safe mkdir -p... /bin/mkdir -p. checking for gawk... no. checking for mawk... mawk. checking whether make sets $(MAKE)... yes. checking whether make supports nested variables... yes. checking whether make supports nested variables... (cached) yes. checking for style of include used by make... GNU. checking whether the C++ compiler works... no. configure: error: in `/home/SU2':. configure: error: C++ compiler cannot create executables. See `config.log' for more details. I am sure that I have installed gcc/g++ successfully. You can see. (base) root@a5502ebdff64:/home# gcc --version. gcc (Ubuntu 7.4.0-1ubuntu1~18.04.1) 7.4.0. Copyright (C) 2017 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. (base) root@a5502ebdff64:/home# g++ -o hello hello.cc. (base) root@a5502ebdff64:/home# ./hello. Hello, World!. I have uploaded the config.log file. Could you give me some suggestions, please?; config.log<https://github.com/su2code/SU2/files/3418183/config.log>. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/738?email_source=notifications&email_token=AADV2HBFP42OXAJCIZGTH2DQAXH4ZA5CNFSM4IFZ52EKYY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4HAVNCNA>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AADV2HFS5T4HH2MWIC4JR4TQAXH4ZANCNFSM4IFZ52EA>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/738#issuecomment-513847308:1954,log,log,1954,https://su2code.github.io,https://github.com/su2code/SU2/issues/738#issuecomment-513847308,3,['log'],['log']
Testability,copy the regression tests for master,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/75:20,test,tests,20,https://su2code.github.io,https://github.com/su2code/SU2/issues/75,1,['test'],['tests']
Testability,"cording to the community](https://docs.google.com/spreadsheets/d/1wgQDMiJ_mMqxiJ6FV8zZDu-CbxBjGXGeqrTAuJaTQkQ/edit#gid=1654711040)).; - Developer documentation (common ""how to's"", ~~update/simplify the info in [these pages](https://su2code.github.io/docs_v7/Code-Review/)~~([done](https://github.com/su2code/su2code.github.io/pull/70)), etc.). ## Turbulence models; - Precise documentation of fluid and turbulence models **as implemented** in SU2, i.e. link to an authoritative reference and highlighting any deviation from it. #1364 #1551; - Code refactoring to simplify adding turbulence model variants. #1413; - V&V; - Scale resolving methods #1120; - Transition (documentation, tutorial, implementation of additional models) #1496; - Wall functions (documentation, tutorial testcase) #1204. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum working examples"" (no redundant options, no duplication of descriptions from the config template, etc.).; - ""Obscure"" features (""things that SU2 does"" to some extent but are: incomplete, not validated / regression-tested, not documented) cleanup obsolete examples in TestCases, and identify features lacking test coverage, decide what to do with those features. ## Code maintenance; - Better support / documentation for building SU2 directly on Windows. #1468; - Replacing the legacy output #1316; - General C++ cleanup #1218; - Deprecate legacy build system. ## Robust convergence; - Multigrid issues on unstructured grids and less robust with MPI in general e.g. #1362 #1549; - Reduced stability of fluid-fluid interfaces #1414; - Reduced stability of periodic boundary conditions #1467; - Convergence in poor quality ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1487:1894,test,test,1894,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487,1,['test'],['test']
Testability,"d as a header-only library.; + It has a very clean, easy-to-use syntax; + It has widespread use, including the FEniCS library. ### Design choices. The following design choices are in place. If you disagree with them, then please start a discussion here:. + All tests are placed in a root-level directory named `UnitTests`. Inside this directory is a structure just like the existing folder structure (e.g. `SU2_CFD/numerics`), except that there are not separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tests or individual tests.; + When `ninja test` or `meson test` is run, the test executable is only run once, sweeping through all the unit tests. The result only shows a single failure or a single success. If more detail is desired, then the test executable can be run manually.; + The relevant SU2 code is compiled as a library (e.g. `libSU2core`) and then linked into both the main executable (`SU2_CFD`) and the test program (`test_driver`). ### How to Run Unit Tests. If you compile SU2 using `ninja -C builddir`, then the test executable will automatically be compiled. You then have three options for running the tests:. + `meson test` (see documentation [here](https://mesonbuild.com/Unit-tests.html)); + `ninja test`; + Run the exectuable manually: `./UnitTests/test_driver`. When running the executable manually, there are many customization options. Run `./UnitTests/test_driver --help` to see them all. ### How to add unit tests. I have already included a single unit-test example (`UnitTests/SU2_CFD/src/numerics/CNumerics_tests.cpp`). Aside from the headaches with CConfig, this example should be clear. If not, raise questions and I will answer them. ~~I plan on adding a few more example tests, as well as a ""How-To"" page on th",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/850:2241,test,test,2241,https://su2code.github.io,https://github.com/su2code/SU2/pull/850,1,['test'],['test']
Testability,"d""><code>@​simonbaird</code></a> in <a href=""https://redirect.github.com/actions/checkout/pull/1067"">actions/checkout#1067</a></li>; <li>Release 4.0.0 by <a href=""https://github.com/takost""><code>@​takost</code></a> in <a href=""https://redirect.github.com/actions/checkout/pull/1447"">actions/checkout#1447</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/takost""><code>@​takost</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/checkout/pull/1436"">actions/checkout#1436</a></li>; <li><a href=""https://github.com/simonbaird""><code>@​simonbaird</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/checkout/pull/1067"">actions/checkout#1067</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/checkout/compare/v3...v4.0.0"">https://github.com/actions/checkout/compare/v3...v4.0.0</a></p>; <h2>v3.6.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Mark test scripts with Bash'isms to be run via Bash by <a href=""https://github.com/dscho""><code>@​dscho</code></a> in <a href=""https://redirect.github.com/actions/checkout/pull/1377"">actions/checkout#1377</a></li>; <li>Add option to fetch tags even if fetch-depth &gt; 0 by <a href=""https://github.com/RobertWieczoreck""><code>@​RobertWieczoreck</code></a> in <a href=""https://redirect.github.com/actions/checkout/pull/579"">actions/checkout#579</a></li>; <li>Release 3.6.0 by <a href=""https://github.com/luketomlinson""><code>@​luketomlinson</code></a> in <a href=""https://redirect.github.com/actions/checkout/pull/1437"">actions/checkout#1437</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/RobertWieczoreck""><code>@​RobertWieczoreck</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/checkout/pull/579"">actions/checkout#579</a></li>; <li><a href=""https://github.com/luketomlinson""><code>@​luketomlinson</code></a> made their first contribution in ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2126:1581,test,test,1581,https://su2code.github.io,https://github.com/su2code/SU2/pull/2126,2,['test'],['test']
Testability,"d-point iterate with the basis vectors, the Newton step is cheap as n is small). The residuals are obtained from a fully coupled adjoint CHT problem (2d heated cylinder in laminar flow) with a heatflux objective function. ![plot](https://user-images.githubusercontent.com/22639394/122736716-9ad18000-d280-11eb-9983-c2d47d434dc5.png). (Purple: No correction applied, Green/Blue: Usage of 1-dim. basis after extraction of one basis vector at around 500 iterations, Yellow: MPI run with two processes using the manual but MPI-compatible Gram-Schmidt-QR-decomposition for identification of basis vectors.); ; **The code is WIP.** It needs a lot of additions, changes and testing, though the overall structure should be clear from what's already implemented. ToDo's:; - Remove Eigen dependencies, not needed anymore; - Add a meaningful testcase; - Add eigenvalue estimation / QR criterion values to screen and history output fields; - Implement a basisMaintenance()-routine; - Figure out a proper base class for both `CQuasiNewtonInvLeastSquares` and `CNewtonUpdateOnSubspace`; - Figure out further algorithmic strategies for multiphysics problems, now the default is to create the basis in the outer loop, and to apply it for corrections in the inner. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if nece",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1217:1695,test,testcase,1695,https://su2code.github.io,https://github.com/su2code/SU2/pull/1217,1,['test'],['testcase']
Testability,"d68184-2d20-4a93-abb2-0b6fd361846e); ![image](https://github.com/su2code/SU2/assets/50565314/57a76a0b-d8a2-4da7-b1e8-ddee848e7062); ![image](https://github.com/su2code/SU2/assets/50565314/afd310db-3aa2-48e3-813b-c20b198df8fe); ![image](https://github.com/su2code/SU2/assets/50565314/4863963a-533c-4e6b-8e45-c632e571704c). ## Validation Case. Validation analysis is conducted for the [hypersonic flat plate](https://turbmodels.larc.nasa.gov/ZPGflatplateSS_val.html). Two different wall temperature(T_w/T_free = 1.090 and T_w/T_free = 2.725) results are presented and compared with simulation results of ANSYS Fluent. . The CC of Fluent and Wilcox is almost same, but they have different coefficients(Wilcox : ![image](https://github.com/su2code/SU2/assets/50565314/a9e69d6e-7ad2-4752-8aa8-0dfe718306ce) / Fluent : ![image](https://github.com/su2code/SU2/assets/50565314/e2786d93-f933-424e-bd23-171ba1fa0347)). So, The results show a similar behavior to the Fluent results. ; ![image](https://github.com/su2code/SU2/assets/50565314/711274f0-ab32-4281-bc72-168445f24766); ![image](https://github.com/su2code/SU2/assets/50565314/9d8a39a2-423f-4ca1-b209-cbe613a9d76c). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2271:3614,test,test,3614,https://su2code.github.io,https://github.com/su2code/SU2/pull/2271,1,['test'],['test']
Testability,"dary condition, which is implemented in the `CEulerSolver.cpp`, the `Inflow_Mach_old` returned is 0.0, causing the computation of the updated pressure to be incorrect. In practice, this drives the pressure lower and lower until it becomes negative. To find this, I added debug statements to `SU2_CFD/src/solvers/CEulerSolver.cpp` where the FAN_FACE_MACH BC logic is to iterate on the outflow pressure. . // cout << endl << ""PRINTING DEBUG INFO FOR FAN_FACE_MACH"" << endl;; // cout << ""Rank = "" << rank << endl;; // cout << ""Kind_Engine_Inflow = "" << Kind_Engine_Inflow << endl;; // cout << ""Target_Inflow_Mach = "" << Target_Inflow_Mach << endl;; // cout << ""Inflow_Pressure_old = "" << Inflow_Pressure_old << endl;; // cout << ""Inflow_Mach_old = "" << Inflow_Mach_old << endl;; // cout << ""Inflow_Pressure_inc = "" << Inflow_Pressure_inc << endl;; // cout << ""Inflow_Pressure = "" << Inflow_Pressure << endl;. which resulted in the output:. PRINTING DEBUG INFO FOR FAN_FACE_MACH; Rank = 1; Kind_Engine_Inflow = 1; Target_Inflow_Mach = 0.64; Inflow_Pressure_old = 2.36396; Inflow_Mach_old = 0; ... So it seems the main issue is that in the `config` the `Inflow_Mach` quantity is never getting updated. I _believe_ this should happen in `src/solvers/CEulerSolver.cpp` starting at line 2855 `if (Engine) { ... ` . Here, a call to `config->SetInflow_Mach(iMarker_Inlet, Inlet_Mach_Total[iMarker_Inlet]);` is completely missing. I'm not familiar with the code base, so I'm not sure if it is supposed to be updated elsewhere. However, inserting that line appears to fix the problem and the above logic around FAN_FACE_MACH begins working as expected. **Reproduce**; Perhaps the only thing about my problem worth mentioning is it is ran as axisymmetric. I'm running RANS, with the SST model. . **Desktop (please complete the following information):**; - OS: [e.g., Linux (Centos 7)]; - C++ compiler and version: [g++ (GCC) 4.8.5]; - MPI implementation and version: [e.g., OpenMPI 4.0.1]; - SU2 Version: [v7.3.1]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1607:1690,log,logic,1690,https://su2code.github.io,https://github.com/su2code/SU2/issues/1607,1,['log'],['logic']
Testability,"dified it to suit there own needs. This resulted in a lot of if/switch statements and was hard to read ... one reason for this was that we have not really used an object oriented structure for the output. Despite rearranging everything into separate classes, here is a non-exhaustive list of new features and changes:. - Fully customizable screen, history and volume output; - New multizone screen output; - New flexible way so set convergence criteria (any residual and/or coefficient can be used as a monitor); - Consistent naming of iteration variables (TIME_ITER, OUTER_ITER, INNER_ITER); - Consistent file naming options (RESTART_FILENAME, SOLUTION_FILENAME); - On-the-fly writing of all visualization files; - New Singlezone and Multizone drivers are now used by default. Note that this is a very big change. And i apologize for any inconvenience and troubles that this might cause. I can only maintain features covered by the regression tests. So please test it with your cases and let me know if anything is missing (especially in the output). . I will create documentation for all the new features soon. If you want to test it already, please let me know, I need some feedback. . User Documentation on the changes:; https://su2code.github.io/docs/Solver-Setup; https://su2code.github.io/docs/Custom-Output; https://su2code.github.io/docs/Guide-to-v7/. ## Related Work; #715 is already included in this PR and should be merged before. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test cas",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/724:1231,test,test,1231,https://su2code.github.io,https://github.com/su2code/SU2/pull/724,1,['test'],['test']
Testability,discadj_incomp_turb_NACA0012_sa now fails with a small difference in residuals. But this case passed the regression test on my machine. I don't see what could have triggered this change.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1552#issuecomment-1081714870:116,test,test,116,https://su2code.github.io,https://github.com/su2code/SU2/pull/1552#issuecomment-1081714870,1,['test'],['test']
Testability,"e a small test for a small fix. In all of these cases, unit testing fills a unique role. Unit testing increases time spent in development, but decreases the amount of time spent in bug-fixing and maintaining. For more information, see this relevant Stack Exchange question.<https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes>. What do I propose?. My research group at UT Austing has implemented a unit testing framework on our branch, which we're happy with. Some choices were arbitrary, and some choices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more information on autotool's setup, see their documentation<https://www.gnu.org/software/automake/manual/html_node/Tests.html>. Since autotools is the build system for SU2, this involves minimal changes. Using automake, the build process for building unit tests becomes:. '''; ./bootstrap; ./configure; make; make check; '''. We use Boost's unit testing framework<https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>. This provides a convenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time we push commits or submit a pull request, the unit tests are run and checked. What is my vision for unit testing in SU2?. I am not proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. T",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:3020,test,tests,3020,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,1,['test'],['tests']
Testability,"e code clearer. . ## Related Work; CoolProp v6.5.0 has an updated EOS for CO2, with which I am currently playing around. This new version has the same EOS as NIST. It also comes with a variety of bug fixes and improvements. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - The code generates quite a few warning when compiling on Debian 12, which uses GCC12 , but none were introduced in this commit. I tested the compilation using an Apptainer/Singularity container.; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - I changed the Python code, for which I saw no entry in the style guide.; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - I did not run it as I did not know about it, but I do not think it applies for this (though maybe it does); - [ ] I have added a test case that demonstrates my contribution, if necessary.; - Not necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.; - No documentation related to SU2 should be affected. I do have one question which is not directly related to this PR. I have an Apptainer/Singularity container for SU2 which has most of the bells and whistles. I saw that you have docker containers, but for HPC (and normal computers) Docker [can have a large performance penalty](https://www.youtube.com/watch?v=2FPB74YB-ng). Would you like for me to contribute my Apptainer recipes? . Any and all feedback welcome!. P.S: I did not know that even after updating the hash commit of CoolProp in the meson script, I also had to update the submodule, that is not very intuitive. In this current state, the Meson commit hash has little to no value if it gets changed independently afterwards :); P.P.S: I also did not know that SU2 ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2136:1321,test,test,1321,https://su2code.github.io,https://github.com/su2code/SU2/pull/2136,1,['test'],['test']
Testability,"e fluids, which are solids) without a bunch of a priori or 'hard coded' assumptions. I intend to develop it further in near future which basically means to incorporate the existing sorts of interfaces (mixing plane, FSI, .. maybe it works out).; 1. A new finite-volume-based heat solver (CHeatSolverFVM). It can be run stand-alone in solids for pure heat conduction or weakly coupled to the incompressible mean flow solver.; 1. A new CTransfer child class (CTransfer_ConjugateHeatVars) to exchange CHT-related interface information. Most of these commits do not touch existing code but just use it. Exceptions are:; 1. Quite a few config options.; 1. A small new data structure in CDriver to store types of interfaces that is used by CMultiPhysicalZonesDriver. Some additions in **Interface_Preprocessing**.; 1. A change of **SetCFL_Number** so that the CFL adaption works for multiple zones. @salvovitale : One of your test cases is a multi-zones one that uses CFL adaption (the Jones one). This commit of course changes the solver behaviour in that case. I saw that you are averaging CFL numbers - maybe these problems are connected? Could you check if the test case is still alright? For now, I had to change the regression test values.; 1. Some more else if(...)-cases in output_structure.cpp... As this is my first pull request, it's very likely that I missed some good-practices. I would like to point out that many of the commits contain _purely copied code_.; There was always some reason when it could not re-use it, but please be a bit indulgent if I missed to reference the credits. I just don't know where to.. if something attracts your attention, I will change it asap :-) Furthermore I should mention that; 1. This branch contains are very **naive couling procedure**. I will add Robin-like BC's and conservative energy correction routines when I feel comfortable about them.; 1. The **discrete adjoint version** of all this works fine. I will add it, too, if you like these additions.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/505:1318,test,test,1318,https://su2code.github.io,https://github.com/su2code/SU2/pull/505,2,['test'],['test']
Testability,"e have done:; >; > The unit testing framework is compiled and run using autotools. For more; > information on autotool's setup, see their documentation; > <https://www.gnu.org/software/automake/manual/html_node/Tests.html>.; > Since autotools is the build system for SU2, this involves minimal changes.; >; > Using automake, the build process for building unit tests becomes:; >; > '''; > ./bootstrap; > ./configure; > make; > make check; > '''; >; > We use Boost's unit testing framework; > <https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>.; > This provides a convenient set of macros for instatiating tests, grouping; > tests into suites, and running checks. This choice was based on what is; > available in our development setup.; >; > We have integrated our unit tests into our Travis CI regression testing.; > Every time we push commits or submit a pull request, the unit tests are run; > and checked.; > What is my vision for unit testing in SU2?; >; > I am *not* proposing that we start trying to get 100% code coverage with; > pre-existing code. That would not provide a good return on investment.; >; > Instead, I see people adding unit tests as they write new code and as they; > find bugs. For each new behavior added to SU2, tests are first added to; > document the related existing behavior. These tests serve to check that the; > existing behavior isn't damaged by the new code. Then new tests are added; > to prove that the new behavior is working correctly. For bug fixes, the; > process is simpler. A test is added to confirm that something is not; > behaving as expected. Then the code is fixed to make the test pass.; > What frameworks are available?; >; > For a unit testing framework, here are the most popular options, with the; > following pros and cons:; > Roll-your-own; >; > - Requires no external dependencies; > - The most flexible option; > - Involves the most work to setup; > - Will lack some of the more advances features of mature unit-testing; > ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:4728,test,testing,4728,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,1,['test'],['testing']
Testability,"e models **as implemented** in SU2, i.e. link to an authoritative reference and highlighting any deviation from it. #1364 #1551; - Code refactoring to simplify adding turbulence model variants. #1413; - V&V; - Scale resolving methods #1120; - Transition (documentation, tutorial, implementation of additional models) #1496; - Wall functions (documentation, tutorial testcase) #1204. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum working examples"" (no redundant options, no duplication of descriptions from the config template, etc.).; - ""Obscure"" features (""things that SU2 does"" to some extent but are: incomplete, not validated / regression-tested, not documented) cleanup obsolete examples in TestCases, and identify features lacking test coverage, decide what to do with those features. ## Code maintenance; - Better support / documentation for building SU2 directly on Windows. #1468; - Replacing the legacy output #1316; - General C++ cleanup #1218; - Deprecate legacy build system. ## Robust convergence; - Multigrid issues on unstructured grids and less robust with MPI in general e.g. #1362 #1549; - Reduced stability of fluid-fluid interfaces #1414; - Reduced stability of periodic boundary conditions #1467; - Convergence in poor quality meshes, or anisotropically adapted. ## Customization; - More flexible outputs (user-defined #1478, consistent SCREEN and HISTORY #1493, file output frequency #1539); - Python wrapper: expose more inputs to allow e.g. time-dependent boundary conditions; tutorials. ## Optimization; - Add SU2_DOT to python wrapper, refactor to use CMeshSolver #1300; - Allowing more inputs as design variables.; - Overhaul the enti",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1487:2345,test,tested,2345,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487,3,"['Test', 'test']","['TestCases', 'test', 'tested']"
Testability,"e that your bug fix worked, but it doesn't seem logical to dedicate an entire validation case to one small bug fix. You want to write a small test for a small fix. In all of these cases, unit testing fills a unique role. Unit testing increases time spent in development, but decreases the amount of time spent in bug-fixing and maintaining. For more information, see this [relevant Stack Exchange question.](https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes). ## What do I propose?. Our research group at UT Austin has implemented a unit testing framework on our branch, which we're happy with. Some choices were arbitrary, and some choices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more information on autotool's setup, see [their documentation](https://www.gnu.org/software/automake/manual/html_node/Tests.html). Since autotools is the build system for SU2, this involves minimal changes. Using automake, the build process for building unit tests becomes:. ```; ./bootstrap; ./configure; make; make check; ```. We use [Boost's unit testing framework](https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html). This provides a convenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time we push commits or submit a pull request, the unit tests are run and checked. ## What is my vision for unit testing in SU2?. I am *not* proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698:2063,Test,Tests,2063,https://su2code.github.io,https://github.com/su2code/SU2/issues/698,1,['Test'],['Tests']
Testability,"e useful/worth the investment in some major codes he worked on. Best,. Juan. On Jun 4, 2019, at 2:14 PM, Clark Pederson <notifications@github.com<mailto:notifications@github.com>> wrote:. I propose adding a unit-testing framework and unit-tests to SU2. After chatting with @economon<https://github.com/economon>, I've decided to move the discussion here to get additional input. What is unit testing?. For those not familiar with unit testing, unit testing allows the testing of small bits of behavior, ideally using isolated bits of code. It is not intended to replace validation testing or formal verification tests. Instead, it serves a unique purpose. Consider the three following use cases:. * You're developing a new feature, and you want to test it to see if it works. You could do a full simulation, but that takes a lot of time and computing power. You want to check if your new behavior behaves as you suspect before you throw a lot of resources at it.; * You submit a PR and discover that one of the regression tests has failed. But...why? You know that something is broken, but its hard to track down what broke. You want more granular test coverage that can demonstrate what broke.; * You are fixing a very small bug. You know that you should prove that your bug fix worked, but it doesn't seem logical to dedicate an entire validation case to one small bug fix. You want to write a small test for a small fix. In all of these cases, unit testing fills a unique role. Unit testing increases time spent in development, but decreases the amount of time spent in bug-fixing and maintaining. For more information, see this relevant Stack Exchange question.<https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes>. What do I propose?. My research group at UT Austing has implemented a unit testing framework on our branch, which we're happy with. Some choices were arbitrary, and some choices were made based on our development envir",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:1631,test,tests,1631,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,1,['test'],['tests']
Testability,"e9-8acb-8ac04d555e2b.png). With the current SU2 implementation, the solution diverges due to the lack of interface boundary conditions. After only 10 iterations, the contours of velocity are:. ![former](https://user-images.githubusercontent.com/8706821/51894620-99017c00-23a8-11e9-938a-d8b0e38fa141.png). With this PR, the problem can be successfully solved with a multizone solution process. The contours of velocity and temperature are now:. ![velocity](https://user-images.githubusercontent.com/8706821/51894679-bdf5ef00-23a8-11e9-9466-d360fdc42733.png); ![temperature](https://user-images.githubusercontent.com/8706821/51894683-bfbfb280-23a8-11e9-8ffe-1901b33677bf.png). and also for unsteady problems. ![unsteady](https://user-images.githubusercontent.com/8706821/51894695-c4846680-23a8-11e9-87f5-35041d71fee4.gif). For the latter case I haven’t yet rotated the inner circle, because there are some missing features for dynamic meshes in the incompressible solver. The previous test case for steady-state flows has been added. One for unsteady flows will be enabled once the new output is in place, as the current output structure makes the regression scripts fail. The previous, however, opened a can of worms, as there were some physics based calls in the parent transfer structure (e.g. `GetnSlidingStates()`, `SetSlidingState()` and `SetnSlidingStates()`) that made the incompressible CHT cases run into problems. . So I’ve also taken the chance to move some initialization and some calls to the specific physics-based transfer structures, making use of the polymorphism of the transfer code. This way the parent class remains opaque to the physics. At the same time, I cleaned up some long-time unused routines, made the Broadcast_Data the default for zone interfaces, and removed the MATCHING_MESH option as it is just a particular case of Nearest Neighbour. ## Related Work. - Complements the sliding interface feature by @LaSerpe in #389 by adding the corresponding functions to the inco",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/638:1602,test,test,1602,https://su2code.github.io,https://github.com/su2code/SU2/pull/638,1,['test'],['test']
Testability,"e_names(kwds.get(""names"", None)); 617 # Create the parser.; --> 618 parser = TextFileReader(filepath_or_buffer, **kwds); 620 if chunksize or iterator:; 621 return parser. File ~/miniforge3/envs/cadquery/lib/python3.11/site-packages/pandas/io/parsers/readers.py:1618, in TextFileReader.__init__(self, f, engine, **kwds); 1615 self.options[""has_index_names""] = kwds[""has_index_names""]; 1617 self.handles: IOHandles | None = None; -> 1618 self._engine = self._make_engine(f, self.engine). File ~/miniforge3/envs/cadquery/lib/python3.11/site-packages/pandas/io/parsers/readers.py:1878, in TextFileReader._make_engine(self, f, engine); 1876 if ""b"" not in mode:; 1877 mode += ""b""; -> 1878 self.handles = get_handle(; 1879 f,; 1880 mode,; 1881 encoding=self.options.get(""encoding"", None),; 1882 compression=self.options.get(""compression"", None),; 1883 memory_map=self.options.get(""memory_map"", False),; 1884 is_text=is_text,; 1885 errors=self.options.get(""encoding_errors"", ""strict""),; 1886 storage_options=self.options.get(""storage_options"", None),; 1887 ); 1888 assert self.handles is not None; 1889 f = self.handles.handle. File ~/miniforge3/envs/cadquery/lib/python3.11/site-packages/pandas/io/common.py:873, in get_handle(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options); 868 elif isinstance(handle, str):; 869 # Check whether the filename is to be opened in binary mode.; 870 # Binary mode does not support 'encoding' and 'newline'.; 871 if ioargs.encoding and ""b"" not in ioargs.mode:; 872 # Encoding; --> 873 handle = open(; 874 handle,; 875 ioargs.mode,; 876 encoding=ioargs.encoding,; 877 errors=errors,; 878 newline="""",; 879 ); 880 else:; 881 # Binary mode; 882 handle = open(handle, ioargs.mode). FileNotFoundError: [Errno 2] No such file or directory: '/home/ebi/Master-Thesis/simulation_out/config1.csv'; ​; ##############################################################################################. Your guidance on this matter is highly appreciated.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2204:5912,assert,assert,5912,https://su2code.github.io,https://github.com/su2code/SU2/issues/2204,1,['assert'],['assert']
Testability,"earIndexHandler<int>, double> > >, _A2 = codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double,; codi::LinearIndexHandler<int>, double> > >]: no type named 'type' in 'std::__1::__lazy_enable_if<false,; std::__1::__promote<codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >, void> >'; hypot(_A1 __lcpp_x, _A2 __lcpp_y) _NOEXCEPT; ^; In file included from ../../../SU2_CFD/obj/../src/driver_structure.cpp:34:; In file included from ../../../SU2_CFD/obj/../src/../include/driver_structure.hpp:38:; In file included from ../../../SU2_CFD/obj/../src/../include/iteration_structure.hpp:41:; In file included from ../../../SU2_CFD/obj/../src/../include/solver_structure.hpp:49:; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/complex:673:24: error: no; matching function for call to 'fmax'; _Tp __logbw = logb(fmax(fabs(__c), fabs(__d)));; ^~~~; ../../../SU2_CFD/obj/../src/driver_structure.cpp:3532:38: note: in instantiation of function template specialization; 'std::__1::operator/<codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > >; >' requested here; complex<su2double> c = temp[i][k] / temp[k][k];; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/usr/include/math.h:546:15: note: ; candidate function not viable: no known conversion from 'Abs<double,; codi::ActiveReal<codi::JacobiTape<codi::ChunkTapeTypes<double, codi::LinearIndexHandler<int>, double> > > >' to 'double' for 1st; argument; extern double fmax(double, double);; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/cmath:1240:46: note: ; candidate function not viable: no known conversion from 'Abs<double,; codi::ActiveReal<codi::JacobiTape",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/319:35220,log,logb,35220,https://su2code.github.io,https://github.com/su2code/SU2/issues/319,1,['log'],['logb']
Testability,"earch group at UT Austin has implemented a unit testing framework on our branch, which we're happy with. Some choices were arbitrary, and some choices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more information on autotool's setup, see [their documentation](https://www.gnu.org/software/automake/manual/html_node/Tests.html). Since autotools is the build system for SU2, this involves minimal changes. Using automake, the build process for building unit tests becomes:. ```; ./bootstrap; ./configure; make; make check; ```. We use [Boost's unit testing framework](https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html). This provides a convenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time we push commits or submit a pull request, the unit tests are run and checked. ## What is my vision for unit testing in SU2?. I am *not* proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. ## What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. #### Roll-your-own. + Requires no external",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698:2594,test,tests,2594,https://su2code.github.io,https://github.com/su2code/SU2/issues/698,2,['test'],"['testing', 'tests']"
Testability,"earest neighbor which will lead to wrong results. . This PR introduces a small modification to the MatchPeriodic routine that will allow nodes on the axis to map onto themselves. . ## Related Work. As a test, consider the dummy geometry below. The domain is periodic about the Z-axis. I added a wall BC in the middle of the domain and the flow is supposed to separate at that point. This case is not very realistic but the main idea was to have periodic boundaries with points on the axis of rotation. The domain and the boundary conditions are similar to what we typically have when solving turbine blades. I wasn't sure if I can share the geometry, so I made this dummy test case. This case diverges with the develop branch. The image is from an intermediate result using the fix.; ![sample_test_case_fix](https://user-images.githubusercontent.com/28007882/70721921-b4425500-1cf6-11ea-829c-7d91ca8bb1ef.jpeg). A quick way to verify if the nodes are matched properly is to check the velocity on the nodes that lie on the axis of rotation. Due to the periodicity constraint, the velocities must be aligned with the axis (here the Z-axis) which can be seen here as well. ![vel](https://user-images.githubusercontent.com/28007882/70722647-eef8bd00-1cf7-11ea-9b25-971f9718e151.jpeg). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.; - [ X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/840:2236,test,test,2236,https://su2code.github.io,https://github.com/su2code/SU2/pull/840,1,['test'],['test']
Testability,"eature_adapt branch`. 2. downloaded the Adaptive 2D NACA 0012 example (https://pyamg.saclay.inria.fr/pyamgexamples.html#2dnaca): `adap_NACA0012.cfg`, `mesh_NACA0012_inv.su2`, `NACA0012_ini.dat`. 3. added the following lines to the config:; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```. 4. run the following command: `$ python3 SU2_RUN/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 8`. The response I have obtained is the following:; ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8; PYADAP_FLOW_ITER : (2999, 4999, 6999); PYADAP_ADJ_ITER : (2999, 4999, 6999); PYADAP_CFL : (10.0, 15.0, 20.0); PYADAP_RDG : NO. The ./adap folder was deleted. Generating GMF background surface mesh.; ## WARNING: MISSING SU2 MESH FILE KEYWORD: NCORNERS=.; Initial CFD solution is provided.; ```. As expected, a `./ADAP` folder was created, containing these docs: `amg_back_meshb`, `config_CFD.cfd`, `log.err`, `log.out` (sizes 0 byte), `mesh_NACA0012_inv.su2` (link to the mesh), `NACA0012_ini.dat` (link to the file.dat). Did I perform the procedure correctly? Or did I miss something?; If it is correct and complete, which file contains the adaptive mesh? How can I use it since there is no new .su2 file? . Thank you for the big help",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-737134105:1829,log,log,1829,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-737134105,2,['log'],['log']
Testability,"eckc.exe; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; None of 'AR' are defined in the environment, not changing global flags.; None of 'CXX' are defined in the environment, not changing global flags.; None of 'CXXFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity testing C++ compiler: c++; Is cross compiler: False.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: c++ D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.cc -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Build machine cpu family: x86_64; Build machine cpu: x86_64; Host machine cpu family: x86_64; Host machine cpu: x86_64; Target machine cpu family: x86_64; Target machine cpu: x86_64; Program python3 found: YES (C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe); Pkg-config binary for MachineChoice.HOST is not cached.; None of 'PKG_CONFIG' are defined in the environment, not changing global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:4771,test,test,4771,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['test'],['test']
Testability,"econditioner, and matrix-vector product) have a single template parameter, the data type (which can be passivedouble or su2double). There are no provisions for ""mixed"" arithmetic, except in CSysSolve where through ::Solve (and only through ::Solve) one can ask for the solution of a system with passive Jacobian and active RHS and solution (this is possible at the expense of temporaries that are allocated only once). Passive-Passive and Active-Active work without temporaries and Active-Passive is not supported as it does not make sense (see end of previous paragraph). This is to keep the need for template specialization to a minimum. Wherever mixing types was necessary small helper methods were defined to provide the compatibility instead of specializing larger methods, I think this keeps the code readable. The place where passive and active types mix the most is CSysMatrix. This happens because the blocks are prepared by the numerics in **su2double and are then ""Set"", ""Add"", or ""Subtract"", on a CSysMatrix<passivedouble>. The solution was to inline those routines and template them also for the data type of the block (or diagonal). I only tested on one fluid adjoint and one FSI adjoint case (fingers cross not to fail too many tests). ## Related Work; #594 Does not help with memory much but helps with speed.; #648 Makes it easier to interface with an external solver and still work with the discrete adjoint.; #650 Builds on top of what is proposed there.; #543 These MKL optimizations will now be possible for the discrete adjoint but I have not made them available yet.; Branch *feature_template_linear_solver*. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/653:1631,test,tested,1631,https://su2code.github.io,https://github.com/su2code/SU2/pull/653,3,['test'],"['test', 'tested', 'tests']"
Testability,"economon>, I've decided to move the discussion here to get additional input. What is unit testing?. For those not familiar with unit testing, unit testing allows the testing of small bits of behavior, ideally using isolated bits of code. It is not intended to replace validation testing or formal verification tests. Instead, it serves a unique purpose. Consider the three following use cases:. * You're developing a new feature, and you want to test it to see if it works. You could do a full simulation, but that takes a lot of time and computing power. You want to check if your new behavior behaves as you suspect before you throw a lot of resources at it.; * You submit a PR and discover that one of the regression tests has failed. But...why? You know that something is broken, but its hard to track down what broke. You want more granular test coverage that can demonstrate what broke.; * You are fixing a very small bug. You know that you should prove that your bug fix worked, but it doesn't seem logical to dedicate an entire validation case to one small bug fix. You want to write a small test for a small fix. In all of these cases, unit testing fills a unique role. Unit testing increases time spent in development, but decreases the amount of time spent in bug-fixing and maintaining. For more information, see this relevant Stack Exchange question.<https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes>. What do I propose?. My research group at UT Austing has implemented a unit testing framework on our branch, which we're happy with. Some choices were arbitrary, and some choices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more information on autotool's setup, see their documentation<https://www.gnu.org/software/automake/manual/html_node/Tests.html>. Since autotools is t",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:1917,log,logical,1917,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,1,['log'],['logical']
Testability,"ed as initial conditions for another SU2 run, or mesh format files like CGNS or STL files.; Furthermore, the user can choose to not overwrite these files, but rather add the current iteration number to the file name and keep dumping such files during the calculation. This is done using the three WRT_*_OVERWRITE flags mentioned above. However, the current implementation in develop only works correctly for PARAVIEW_MULTIBLOCK and for RESTART type output files. This is because in the case of PARAVIEW_MULTIBLOCK, the additional file output using the iteration number in the filename, is performed in the switch case block directly. . For all other output files, the switch case block only generates the correct filename with the iteration number appended. After the switch block, it is (wrongly) checked if (and only if) the WRT_RESTART_OVERWRITE flag is set to NO. If so, the additional file is written. Therefore, this logic only works correctly for RESTART files (and PARAVIEW_MULTIBLOCK files, because for that format, the file dump is independent of the file dump after the switch block. . The proposed fix here introduces a local boolean (doWriteIterFile) that acts as a switch for the additional file dump. It is set in the switch case block and afterwards it is checked if this variable is true or false. Based on this value, the file dump is executed or not. Furthermore, the fix introduces and corrects some comments to make the function easier to understand. ## Related Work; The flags are already available in the develop branch as config options but they don't work as expected. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when u",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2036:1342,log,logic,1342,https://su2code.github.io,https://github.com/su2code/SU2/pull/2036,1,['log'],['logic']
Testability,"ed the latest one and commented the old one. There have been numerous papers about some limitations of these models themselves however. The modification consists of changing the omega boundary condition at the wall to a different value based on local quantities. . This PR introduces two extra config options - one to specify whether a wall is rough or not and another to specify the sand grain roughness height for each of them. ; ; WALL_TYPE = SMOOTH/ROUGH; WALL_ROUGHNESS = <array of doubles>. By default all walls are smooth. If neither option is present in the config file, smooth walls are assumed everywhere. However, if there are multiple walls some rough, some smooth, they need to be listed (similar to INLET TYPE) in the order they appear in the MARKER_HEATFLUX definition. I have attached some examples here. . 1. Flatplate; Here is the input file [turb_flatplate_v7_cfg.txt](https://github.com/su2code/SU2/files/4198440/turb_flatplate_v7_cfg.txt),. The meshes can be found in TestCases/rans/flatplate or the NASA TMR database. Here are the results with both SA and SST; ![yplus_vs_uplus_sa_comparison](https://user-images.githubusercontent.com/28007882/74438338-3b808600-4e6a-11ea-9a83-c326384950d3.png). Here I am plotting the non-dimensionalised velocity u^+ against y^+. The clean results give fairly good agreement and we can see some over prediction in velocity shifts. This was also reported elsewhere. ![yplus_vs_uplus_sst_comparison](https://user-images.githubusercontent.com/28007882/74438363-49360b80-4e6a-11ea-9070-09f72810a40a.png). The same plot for SST. The results are not quite as good as SA in general, but I expected that considering some limitations reported in the literature (ex a min y^+ ~ 0.01 and so on). Here is a comparison against experimental data by Blanchard (1977); ![blanchard_compariosn](https://user-images.githubusercontent.com/28007882/74439558-bf3b7200-4e6c-11ea-881f-dd9567d3508c.png). Once again, the SA roughness model does fairly well as opposed ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/877:2244,Test,TestCases,2244,https://su2code.github.io,https://github.com/su2code/SU2/pull/877,1,['Test'],['TestCases']
Testability,"ed the results from the total ""iteration time"" from the history file. Doing that for before and after results allowed computing individual speedup factors for each important routine (in terms of time, otherwise they are all special and important in their own way) e.g. gradients, limiters, upwind/viscous residuals, etc.; ![image](https://user-images.githubusercontent.com/38071223/63292708-30cfa480-c2be-11e9-8d4a-5feb3dc61abf.png). Here is the data by the way: [results.xlsx](https://github.com/su2code/SU2/files/3517492/results.xlsx). As predicted the linear solvers stay the same and routines that are light see more speedup than their arithmetic-intensive friends.; What is surprising to me is how intensive the convective residuals appear to be with only a 7% improvement, so surprising in fact, I do not think the above paints the full picture. Maybe the outlet bandwidth bottleneck (into the Jacobian matrix) is more important.; To put that do the test I switched to Euler-explicit time marching and repeated the measurements:; ![image](https://user-images.githubusercontent.com/38071223/63293351-d8010b80-c2bf-11e9-8135-2502eac1128e.png); Better, but not by much, which means upwind and viscous residuals computations might gain a lot from vectorization (SIMD). And like @economon mentioned even more if they are somehow fused together.; It also means the writes to CSysMatrix are relatively expensive, I think there are two-three reasons for it.; - We do a linear search on each Add/SubtractBlock - This could be replaced by a map.; - The Jacobian contributions are first written into a temporary block - Interleaving the writes with the computation could help mask latency.; - That temporary is not stored contiguously - Which makes it hard to vectorize the writes to CSysMatrix. **So what do I think should be tackled next?**; Hybrid parallelism (wait what?!) from messing about with this case (and more refined versions) it is clear the MG puts some limits on how many cores can be used ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-522730951:4361,test,test,4361,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-522730951,1,['test'],['test']
Testability,"ed. ## What is my vision for unit testing in SU2?. I am *not* proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. ## What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. #### Roll-your-own. + Requires no external dependencies; + The most flexible option; + Involves the most work to setup; + Will lack some of the more advances features of mature unit-testing frameworks. #### Boost Test. + Can be header only, statically linked, or dynamically linked; + If statically or dynamically linked, then Boost is not very lightweight; + Easy to add if you're already using Boost. #### Google Test. + Most common unit-testing framework; + Can be easily combined with Google's powerful GMock mocking library; + Compiling and linking can be somewhat painful. #### Catch2. + Used by FEniCS; + Makes unit tests easily readable with lots of syntactic sugar.; + Has a very simple syntax; + Is header-only; + ~~Requires C++11 compilation~~ Requires C++11 for full feature set, but offers a C++03 branch; + Not as feature rich as Google Test or Boost Test. ## Questions. + How do developers feel about adding unit tests to SU2?; + If a unit-testing framework were added to SU2, would you actually use it?; + Do developers have a preference (or experience with) any of the unit testing frameworks?; + Should unit tests be expected when submitting PRs?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698:3773,Test,Test,3773,https://su2code.github.io,https://github.com/su2code/SU2/issues/698,11,"['Test', 'mock', 'test']","['Test', 'mocking', 'testing', 'tests']"
Testability,"ee this relevant Stack Exchange question.; > <https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes>; > What do I propose?; >; > My research group at UT Austing has implemented a unit testing framework; > on our branch, which we're happy with. Some choices were arbitrary, and; > some choices were made based on our development environment. Those choices; > may be different for other groups. Here's what we have done:; >; > The unit testing framework is compiled and run using autotools. For more; > information on autotool's setup, see their documentation; > <https://www.gnu.org/software/automake/manual/html_node/Tests.html>.; > Since autotools is the build system for SU2, this involves minimal changes.; >; > Using automake, the build process for building unit tests becomes:; >; > '''; > ./bootstrap; > ./configure; > make; > make check; > '''; >; > We use Boost's unit testing framework; > <https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>.; > This provides a convenient set of macros for instatiating tests, grouping; > tests into suites, and running checks. This choice was based on what is; > available in our development setup.; >; > We have integrated our unit tests into our Travis CI regression testing.; > Every time we push commits or submit a pull request, the unit tests are run; > and checked.; > What is my vision for unit testing in SU2?; >; > I am *not* proposing that we start trying to get 100% code coverage with; > pre-existing code. That would not provide a good return on investment.; >; > Instead, I see people adding unit tests as they write new code and as they; > find bugs. For each new behavior added to SU2, tests are first added to; > document the related existing behavior. These tests serve to check that the; > existing behavior isn't damaged by the new code. Then new tests are added; > to prove that the new behavior is working correctly. For bug fixes, the; > process is simple",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:4306,test,test,4306,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,1,['test'],['test']
Testability,"ee when does this error occur.; The first case is a RANS simulation for CRM wing. My configure file is opt_crm.txt in the attachment.; In this case, when I set FIXED_CL_MODE= YES, then in the end of the SU2_CFD execution, it will return messages below:. `Writing comma-separated values (CSV) surface files.; Merging coordinates in the Master node.; Merging solution in the Master node.; Writing SU2 native restart file.; Writing the forces breakdown file.; *** Error in `SU2_CFD': double free or corruption (!prev): 0x0000000007dc2aa0 ***; ======= Backtrace: =========; /lib/x86_64-linux-gnu/libc.so.6(+0x777e5)[0x7fbaa7b177e5]; /lib/x86_64-linux-gnu/libc.so.6(+0x7fe0a)[0x7fbaa7b1fe0a]; /lib/x86_64-linux-gnu/libc.so.6(cfree+0x4c)[0x7fbaa7b2398c]; SU2_CFD[0x8553d5]; SU2_CFD[0x855c59]; SU2_CFD[0x7583c2]; SU2_CFD[0x75ceb5]; SU2_CFD[0x40759c]; /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf0)[0x7fbaa7ac0830]; SU2_CFD[0x735109]; ======= Memory map: ========; 00400000-00d07000 r-xp 00000000 08:28 1068882 /home/wanghao/software/SU2-5.0.0_me/bin/SU2_CFD; 00f06000-00f2d000 r--p 00906000 08:28 1068882 /home/wanghao/software/SU2-5.0.0_me/bin/SU2_CFD; ......`. But, if i turn off the FIXED_CL_MODE, this error won't occur.; Then i tried an invisid test case, this case is orriginally from the TestCases folder of SU2 (TestCases/euler/naca0012). In this case, SU2 works well for both FIXED_CL_MODE and FIXED_AOA_MODE.; Finally, i tried another tutorial case for NACA0012 (from /TestCases/rans/naca0012), then SU2 has the same problem in FIXED_CL_MODE as in the first case. Furthermore, I have noticed that this bug is related to the compilers. ; 1. Intel C++ 2013 + Mpich2-3.0.4, fixed Cl model works; System: RHEL 5.3; 2. Intel C++ 2017 + Mpich2-3.0.4, fixed Cl model fails; System: Ubuntu 16.04; 3. GCC6.1.0 + Mpich2-3.0.4, fixed Cl model fails; System: RHEL 5.3; 4. GCC4.9 + Mpich2-3.0.4,fixed Cl model works; System: RHEL 5.3; 5. GCC5.4 + Mpich2-3.0.4,fixed Cl modelfails; System: Ubuntu 16.04",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/383#issuecomment-306425408:1386,test,test,1386,https://su2code.github.io,https://github.com/su2code/SU2/issues/383#issuecomment-306425408,4,"['Test', 'test']","['TestCases', 'test']"
Testability,"ega_LowerLimit = 1E-4. Estimating if these lower limits are sufficiently low is very difficult.; They may be too high. This is certainly the case whether one runs in a dimensional or non-dimensional mode. It may be sufficiently low for one mode but marginally low for the second mode. Therefore, we suggest clipping the solution relative to the TKE and Omega freestream values such that:. TKE_LowerLimit = C_k * TKE_infinity; Omega _LowerLimit = C_w * Omega_infinity. Where C_k and C_w are constants. . The control over these constants is given to the user, However based on our 20 years of experience with the k-w models, Omega will not drop below 1E-3 * Omega_infinity (converged solution). However, in the process of convergence, it may reach lower values. Therefore, a value of . C_w = 1E-6. is reasonable. The solution of TKE is not very sensitive to C_K (assume it is sufficiently low). We recommended:. C_K = 1E-20. setting these as default values. . ## Related Work; Results of the change on convergence of VFE2 test case are presented. Two configurations of CFL adaptation were tested on both the original and modified lower limit code, ; 1. CFL_ADAPT_PARAM= ( 0.99, 1.005, 5.0, 50.0, 0.0001 ) named max CFL 50 ; 2. CFL_ADAPT_PARAM= ( 0.99, 1.05, 5.0, 200.0, 0.0001 ) named max CFL 200. ![rms Rho](https://github.com/su2code/SU2/assets/139676851/6481464c-6da3-4565-8415-d19d9ea211ab). ![rms k](https://github.com/su2code/SU2/assets/139676851/e1582ea2-f77e-4814-9eda-dd41c006aabf). we point out that beyond the change in maximum CFL, also the acceleration rate is changed. . Beyond adding robustness allowing the the use of a CFL of 200 which diverges under the original limit , the modified limit allows for better convergence of the flow and turbulence residuals for CFL of 50. Plots of the Lift and drag Coefficients are added here showing that results are not affected by the new limit, and additionally convergence is slightly quicker for the lift coefficient even with a CFL of 50 . . ![",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2323:1365,test,test,1365,https://su2code.github.io,https://github.com/su2code/SU2/pull/2323,1,['test'],['test']
Testability,"ehensive set of V&V cases for SU2 that can showcase it's performance in comparison to other solvers. . I think the the [NASA TMR website](https://turbmodels.larc.nasa.gov/index.html) is a good model to base it on. The idea would be to present the V&V case, provide working configuration and mesh files, and provide results comparing performance to other solvers and to higher fidelity data (when available). This allows people to see the performance of SU2 and replicate it, if need be. . The first step would be compiling a list of cases that should be covered. The [SU2 2014 SciTech paper](https://su2code.github.io/documents/SU2_AIAA_SciTech2014.pdf) would be a good starting point as it already had a couple of validation cases. This list can be bolstered with some of the NASA TMR cases, and with grid convergence studies. I would like to propose an initial list that the community can talk through and make changes as we see fit. I am mostly only familiar with canonical CFD flows that are used in these cases. But it would be great to have other cases, such as Turbo-machinary or FSI cases, that show the full breadth of SU2's abilities. This is by no means an exhaustive list:. 1. Zero Gradient Flat Plate; 2. 2D and 3D Bump in Channel; 3. Asymmetric Diffuser; 4. Backward facing step; 5. Unsteady Square cylinder; 6. NACA0012; 7. NACA4412 Trailing Edge Seperation; 8. Joukowski Airfoil; 9. 30P30N High Lift airfoil; 10. ONERAM6 Wing; 11. NASA CRM; 12. Subsonic and Supersonic Jets. It would be ideal for these test cases to have either high-fidelity data (wind tunnel tests, or LES/DNS data), and/or published results of other solvers so that comparisons can be made. . I also want to point out the difference between this and the TestCases repository. The TestCases repo is used in regression tests to ensure that parts of the code don't break when changes are made. This is more a test of SU2's fidelity. It would feature large grids and configuration files that can be run to convergence.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581:1658,test,test,1658,https://su2code.github.io,https://github.com/su2code/SU2/issues/581,6,"['Test', 'test']","['TestCases', 'test', 'tests']"
Testability,"el. It defaults to 1e-6m. (Implemented); 3. CONVERTSA2SST. If the SA turbulence model is used, it is possible to use the LM version for SST by computing k and w from SA variables. Values: YES, NO. The default is NO. (Not yet Implemented). The turbulence index has been implemented for the turbulence models. It is used to detect transition when it is higher than 0. In theory, it should be equal to 1 for a fully-turbulent flow. However, in my simulations, this is not always the case, especially if SST is used (you can see in on the figure below). References are https://doi.org/10.1007/s10494-021-00288-5 for SST and https://doi.org/10.2514/6.1992-439 for SA. Validation test cases will be uploaded in the following days. . The most important results can be found in the pdf of my presentation at the SU2 Conference 2022. https://polimi365-my.sharepoint.com/:b:/g/personal/10507725_polimi_it/EUswl9Jw0XhIuozrOjXqX6sBdscM30lRZ7mwMZcr5anvyA?e=41db5P. One recent result is the application of the transition model to the Sickle wing test case for -2.67° of the angle of attack. SST+LM2015; ![Cf](https://user-images.githubusercontent.com/43813346/203034422-5a7fb987-208c-4da6-8282-5c912e671dbc.png). SA+LM2015; ![Cf](https://user-images.githubusercontent.com/43813346/203034460-7719f3ce-6674-4281-83fd-82ce064c452a.png). The lower surface is represented on the left, whereas the upper surface is on the right. At the moment the wind tunnel walls have not been taken into account. This can explain the spanwise shift of the transition with respect to the experimental results. More results are incoming. . Please, any suggestions on how to clean up the code or on how to make it more efficient are very well accepted. . ## Related Work; Work is related to the PR #1751. It extends it to SA turbulence model and includes cross-flow effects (LM2015) and turbulence index computations. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions,",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1810:1790,test,test,1790,https://su2code.github.io,https://github.com/su2code/SU2/pull/1810,1,['test'],['test']
Testability,"elevant markers which will move and introduce deformations into the domain are set using; `MARKER_DEFORM_MESH= ( wall )`; Hopefully, previous mesh deformation structures can be deprecated and removed soon, but we will need to adapt the rigid/imposed boundary deformation of other kinds of grid movement. I kindly ask for your help in there, as I'm not very familiar with some of the legacy code for this purpose. Additionally, in this PR I have done some refactoring so the AD-based adjoint routines are accessible from the python-wrapped version of the code. The SWIG wrapper now compiles the AD binaries and interfaces directly to sensitivity information, which should make it much easier to integrate SU2 within any python-based optimization framework. . ## Related Work; - Some work will be needed to adapt the new contiguous variable structure by @pcarruscag in #753; - I have added a couple of regression tests, but I will add tutorials once #724 is merged. As of now, a bug reported in #713 prevents me from adding any meaningful tutorial - but that should be fixed in #724 according to @talbring ; - I already started adding the mesh solver, numerics and transfer functions in separate files as discussed in #583 and already started in #725. For clarity and ease of merging, only new classes are split so far, but I will probably start splitting other structures soon in PRs to come. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/760:2989,test,test,2989,https://su2code.github.io,https://github.com/su2code/SU2/pull/760,1,['test'],['test']
Testability,"els (and the other solvers probably); - code this common interface and push all turb-specific things back into the respective files (that is why I didn't `git mv` ). In order to keep this somewhat limited I would focus on porting the Turbsolvers to the new structure (however that might look, but looking at #1223 is what I'll do first) and maybe a simple transported passive scalar or so. We want the turb solver to be integrated under that Scalar-class which is arguably what most/all people use, that's why I want to have in this work at the beginning. We also have quite a few RANS Testcases so it is directly visible if something in the actual computation is changed. In case there are comments, ideas foreseeable stepping stones from experience please let me know here. ## Related Work; #777 by @economon which is the initial push towards this separate scalar solver class for additionally transported scalars (not merged); #1223 by @danielmayer @bigfooted which builds up on #777 and extends it to its needs (but does not support the turb solvers e.g.); #1226 by @oleburghardt - In this PR is a discussion on creating the structure which this (and following) PR('s) try to achieve; #1332 by @mheimgartner - implementing multi component flow (or analytic mixing properties of said multicomp flow). That PR is built upon #1223 but will merge this PR (once it is done) and throw out all additional changes in order to be merged into develop without relying on feature_flamelet. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1330:2915,test,test,2915,https://su2code.github.io,https://github.com/su2code/SU2/pull/1330,1,['test'],['test']
Testability,"ement, rather than replace, validation and verification tests. They are most useful when you want to isolate a specific behavior. Unit-testing increases development time, but improves the quality of the code and reduces code-maintenance time \[[source](https://collaboration.csc.ncsu.edu/laurie/Papers/TDDpaperv8.pdf)\]. ### Vision. In my mind, the most efficient way to proceed is to add unit tests as new behaviors are added and bugs are fixed. With each new PR, we should ask ""Should this have a unit test to verify this behavior?"" Unit tests will provide a clear way to show that each PR does what the developer promises it will do. This will require refactoring some of the code. Some parts of the code, like the CConfig class, are not unit-testing friendly. Unit testing is hard when you have God-classes and ""do-it-all"" functions. The hope is that refactoring these classes will lead to more modular and easier-to-maintain code. ### Decision to use Catch2. Catch2 was chosen for the unit testing library for the following reasons:. + It can be included as a header-only library.; + It has a very clean, easy-to-use syntax; + It has widespread use, including the FEniCS library. ### Design choices. The following design choices are in place. If you disagree with them, then please start a discussion here:. + All tests are placed in a root-level directory named `UnitTests`. Inside this directory is a structure just like the existing folder structure (e.g. `SU2_CFD/numerics`), except that there are not separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tests or individual tests.; + When `ninja test` or `meson test` is run, the test executable is only run once, sweeping through all the unit tests. The result only shows a single failure",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/850:1177,test,testing,1177,https://su2code.github.io,https://github.com/su2code/SU2/pull/850,1,['test'],['testing']
Testability,"ementation we introduce 2 additional transported scalars: the progress variable **c** and the total enthalpy **h**. All fluid properties like density, viscosity, temperature, diffusivity, reaction source terms, etc. are obtained from a lookup table that is made by the user with external 1D detailed chemistry codes like Cantera. Since temperature is now a dependent variable, we do not need to solve the regular temperature equation. However, We keep the SU2 temperature field and simply write our lookup temperature T(c,h) into this field. . As a 'limiting case', a nonreacting passive scalar transport equation has also been implemented. All fluid properties for this passive scalar are constant, but this passive scalar can be easily extended to model nonreacting mixing flows of two fluids with different properties. This model has also been verified to work together with turbulence, although no turbulence chemistry interaction has been implemented for this WIP. . ## Related Work; This PR implements a generic scalar transport framework which can be aligned with other physics models that make use of transported scalars, e.g. turbulence models. It furthermore implements a generic lookup table framework that can be used as a basis for lookup table based physics models, such as real gas models. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Notes; As indicated, this is work in progress. The code compiles and runs with a test case but is far from being clean. Side effects in non-flamelet simulations might occur.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1223:2236,test,test,2236,https://su2code.github.io,https://github.com/su2code/SU2/pull/1223,2,['test'],['test']
Testability,"en new tests are added; > to prove that the new behavior is working correctly. For bug fixes, the; > process is simpler. A test is added to confirm that something is not; > behaving as expected. Then the code is fixed to make the test pass.; > What frameworks are available?; >; > For a unit testing framework, here are the most popular options, with the; > following pros and cons:; > Roll-your-own; >; > - Requires no external dependencies; > - The most flexible option; > - Involves the most work to setup; > - Will lack some of the more advances features of mature unit-testing; > frameworks.; >; > Boost Test; >; > - Can be header only, statically linked, or dynamically linked; > - If statically or dynamically linked, then Boost is not very; > lightweight; > - Easy to add if you're already using Boost; >; > Google Test; >; > - Most common unit-testing framework; > - Can be easily combined with Google's powerful GMock mocking library; > - Compiling and linking can be somewhat painful; >; > Catch2; >; > - Used by FEniCS; > - Makes unit tests easily readable with lots of syntactic sugar.; > - Has a very simple syntax; > - Is header-only; > - Requires C++11 compilation; > - Not as feature rich as Google Test or Boost Test; >; > Questions; >; > - How do developers feel about adding unit tests to SU2?; > - If a unit-testing framework were added to SU2, would you actually; > use it?; > - Do developers have a preference (or experience with) any of the unit; > testing frameworks?; > - Should unit tests be expected when submitting PRs?; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/698?email_source=notifications&email_token=AA5FFRG5U3Z55N4W2XWQED3PY3LJ5A5CNFSM4HTDQXQKYY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4GXUGGLA>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AA5FFRHOPE2MUJ2Z5RRV4HTPY3LJ5ANCNFSM4HTDQXQA>; > .; >; >; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:6402,Test,Test,6402,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,6,"['Test', 'test']","['Test', 'testing', 'tests']"
Testability,"entation) using `VISUALIZE_SURFACE_DEF` as a hooked boolean. ; With `VISUALIZE_VOLUME_DEF` one can change which convective scheme is used on the boundary, i.e. what is in the numerics container `CONV_BOUND_TERM`. The Default is `CUpwRoe_Flow` (`ROE`) and I added `CCentJST_Flow_BC` which is the normal `JST` without dissipation. ; The third option `MUSCL_ADJFLOW` has to be left on NO, this is work in progress :) . With the options given above you will use the new Euler wall implementation but using JST without dissipation term as a convective scheme for boundary nodes. This (as I say in point 2. in my above post) basically recovers the old euler wall implementation. . For the OneraM6 case the combination of new Euler + JST_BC recovers the CD & CL results of the old code. Can you also try running `CONV_NUM_METHOD_FLOW= ROE` with the code you labelled as 'SU2 FSI new (new bound condition)' and 'SU2 FSI new (oldbound condition)'. Because by doing so you switch the numerical method in the volume and to the same ROE scheme on the boundary -> just as the current default in the develop. So my current assumption is that it is a matter of convective scheme (on the boundary). ~~I'll try to attach my cases as a zip and two images here.~~; Here the green line represents the current develop if one uses MARKER_EULER or MARKER_SYM. Another info here is: by using the oldEuler wall (i.e. line 1&2) the choice of convective scheme on the boundary is irrelevant for the Euler_wall as the old implementation ""skips"" that step. The red line 4 is the setup I want you to try because this recovers the old results in this case.; ![image](https://user-images.githubusercontent.com/4933860/73058455-fb923880-3e93-11ea-9d49-baf87a4754e6.png); ![image](https://user-images.githubusercontent.com/4933860/73058476-0351dd00-3e94-11ea-8498-37ccfdb033b0.png). Here the testcase folder if someone wants to use the exact setup; [oneram6test.tar.gz](https://github.com/su2code/SU2/files/4107614/oneram6test.tar.gz)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-578048838:2363,test,testcase,2363,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-578048838,1,['test'],['testcase']
Testability,"erical scheme or the other options are changed. Which configuration file would you want?; > > By any chance, are you implementing or developing a transition model? Can you tell me what model you are willing to use if it's a model implementation? My next goal is to implement the AFT model or the k-w-gamma model, but I'm trying to implement a k-w-gamma model because it seems like the AFT model is being implemented by the other developer.; > ; > If you could send me the config files for the T3A, T3A- and NLF test cases it would be awesome!; > ; > I have implemented the same model as yours, the LM model, in parallel to you 'cause I needed it for some simulations. I also tried implementing the same version but related to the SA turbulence model, however it still is bothering me that I cannot seem to get good results on it.; > ; > If you want, I also tried the prolate spheroid test-case with good results. If you need I can give the configs and the meshes. The only thing about this test-case is that it is more related to the cross-flow transition, thus it needs to be implemented, which I think I'll do in these days.; > ; > I think that the k-w-gamma model is the way to go right after the implementation of the LM model since it has lots of equations in common. Do you think that you need another class for it or you will write on the same classes that you have already built (like the CTransLMSolver)?. The test case(T3A, T3A-, and NLF-0416) configuration files were uploaded to my git repository. Here is the [link](https://github.com/sun5k/SU2/tree/develop/TestCases/transition ). Suggestions for the prolate spheroid test-case is appreciated. However, my transition model is the LM-2009, and I have no plans for the 2015-LM model. Therefore, the cross-flow transition is left for future developers. I think the CTransGammaSolver, CTransGSolver, or the other name of classes will be added for the k-w-gamma transition model. It's a vague idea, I haven't really thought about detail yet.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1592#issuecomment-1201919830:1320,test,test-case,1320,https://su2code.github.io,https://github.com/su2code/SU2/pull/1592#issuecomment-1201919830,4,"['Test', 'test']","['TestCases', 'test', 'test-case']"
Testability,"ermittency and Retheta_tilde have been added to the SOLUTION field. Also, their respective residuals and linear solver residuals/iterations have been added.; 2. I have added the possibility of printing some variables related to transition. These are useful in the case of investigation of the transition phenomenon. The field associated is TRANS_VARS. I do not know if I can leave it as it is or if you want just the essential variables to be printed in the output. The turbulence index has been implemented for the turbulence models. It is used to detect transition when it is higher than 0. In theory, it should be equal to 1 for a fully-turbulent flow. However, in my simulations, this is not always the case, especially if SST is used (you can see in on the figure below). References are https://doi.org/10.1007/s10494-021-00288-5 for SST and https://doi.org/10.2514/6.1992-439 for SA. AD implementation is missing at the moment, but it will be added in the future. Validation test cases will be uploaded in the following days. . The most important results can be found in the pdf of my presentation at the SU2 Conference 2022. https://polimi365-my.sharepoint.com/:b:/g/personal/10507725_polimi_it/EUswl9Jw0XhIuozrOjXqX6sBdscM30lRZ7mwMZcr5anvyA?e=41db5P. One recent result is the application of the transition model to the Sickle wing test case for -2.67° of the angle of attack. SST+LM2015; ![Results](https://user-images.githubusercontent.com/43813346/195149921-6e85c1c7-2fc8-47e9-b935-246081ea17fd.png). SA+LM2015; ![Results](https://user-images.githubusercontent.com/43813346/195152304-e81c92f3-35da-4c50-9cd8-e5528c644cde.png). The lower surface is represented on the left, whereas the upper surface is on the right. At the moment the wind tunnel walls have not been taken into account. This can explain the spanwise shift of the transition with respect to the experimental results. More results are incoming. . Please, any suggestions on how to clean up the code or on how to make it more e",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1788:2288,test,test,2288,https://su2code.github.io,https://github.com/su2code/SU2/pull/1788,1,['test'],['test']
Testability,"es are definitely validation cases too. We can continue to add test cases to the TestCases repo, knowing that only a subset of those cases belong in the V&V list. 2. An important aspect of the V&V is the convergence of the solution as the mesh is refined. As Jayant knows well, this can help us catch bugs. This means that a well-constructed V&V suite needs to include a series of meshes (of increasing density), the corresponding configuration files, and the actual experimental data (or other numerical data from runs on different solvers). I strongly agree with the suggestions made that (a) the entire V&V suite needs to be run before every major release (with configuration files updated), (b) that this should be linked form the main SU2 page, (c) that the 2014 AIAA paper (and Tom’s AVIATION 2018 paper) should serve as a starting point, (d) that the NASA TMR website can give us ideas of additional access, and (e) that the SU2 V&V page should be managed within GitHub.com<http://GitHub.com> so the entire community can edit / add to this / these page/s to continue to grow the number of cases and their relevance. Best,. Juan. On Sep 20, 2018, at 3:02 AM, Ruben Sanchez <notifications@github.com<mailto:notifications@github.com>> wrote:. Thanks, Pedro, I think that's a great idea. As you mention, we would have to work out the logistics as this would require quite a bit of implication from the community, but the extra burden on the release would be compensated by avoiding big ""updating"" operations every now and then. Also as most users only work with the released versions, so it's a way to ensure they always know what updates have happened / which new features are available. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/581#issuecomment-423122949>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxJzh9dwbOM_5DoymCA6lAIqv3biyks5uc2eqgaJpZM4Ww0V4>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-423207120:1517,log,logistics,1517,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-423207120,1,['log'],['logistics']
Testability,"es were set up correctly. The remaining options like install location and compilers are handled by CMake. Tested this on Ubuntu with CMake 3.15.5 and everything except pySU2ad wrapper compiles. Haven't tested on earlier CMake versions so there might be bugs with them but they should be easy to resolve if any. Related Work. Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any. PR Checklist. Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution. * I am submitting my contribution to the develop branch.; * My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; * My contribution is commented and consistent with SU2 style.; * I have added a test case that demonstrates my contribution, if necessary. ________________________________; You can view, comment on, or merge this pull request online at:. https://github.com/su2code/SU2/pull/814. Commit Summary. * CMake support for SU2. File Changes. * A CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-0> (147); * A Common/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-1> (149); * A SU2_CFD/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-2> (143); * A SU2_DEF/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-3> (13); * A SU2_DOT/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-4> (25); * A SU2_GEO/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-5> (9); * A SU2_MSH/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-6> (8); * A SU2_PY/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-7> (24); * A SU2_PY/pySU2/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#d",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814#issuecomment-552242380:4026,test,test,4026,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380,1,['test'],['test']
Testability,"essure outlet. You see zebra shaded pressure contour lines:; ![p_incomp_2d](https://user-images.githubusercontent.com/31306376/53201787-2e4d0480-3625-11e9-8537-f1ca5ef39f9d.JPG). 3. 3D incompressible pin setup, SST turb model. You see Pressure-contour lines but more important are the velocity vectors. In the current code they have a normal component and therefore a (non-irrelevant) flux over the symmetry boundary:; ![closeup_vectors](https://user-images.githubusercontent.com/31306376/53201975-9c91c700-3625-11e9-95b7-8337cc159a23.jpg). Additional to that I tested in rotated domains such that the symmetry plane does not coincide with one of the axis. I tested the Navier-Stokes ONERA-M6 with SA turb-model and although this PR achieves a considerable lower velocity in symmetry-normal direction than current develop, it is still quite large. I suspect it is due to general ""bad"" convergence (2-3 orders of magnitude) of that case. ; So, I encourage everyone that has a well converging compressibe 3D case with symmetry plane to test that or to send it to me. Every regression test with symmetry plane in it will fail, so I didn't change the values yet. From what I have seen, only these are failing. I will correct these (fml) and commit if everyone is alright with the implementation otherwise. . Let me know if you have any comments/suggestions etc., or if you tested with your cases and can confirm (or not) that this PR is correct (that would be awesome). Cheers, Tobi. ## Related Work; None known to me. ## PR Checklist; I will check the warnings based on travis output and report. No new testcase is necessary in my opinion. Edit 25.02.: I checked the warnings for a serial and parallel build using the log-files of travis, comparing mine with the latest merged develop. No new compiler warnings are generated. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-em",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/657:3224,test,test,3224,https://su2code.github.io,https://github.com/su2code/SU2/pull/657,1,['test'],['test']
Testability,"est case are presented. Two configurations of CFL adaptation were tested on both the original and modified lower limit code, ; 1. CFL_ADAPT_PARAM= ( 0.99, 1.005, 5.0, 50.0, 0.0001 ) named max CFL 50 ; 2. CFL_ADAPT_PARAM= ( 0.99, 1.05, 5.0, 200.0, 0.0001 ) named max CFL 200. ![rms Rho](https://github.com/su2code/SU2/assets/139676851/6481464c-6da3-4565-8415-d19d9ea211ab). ![rms k](https://github.com/su2code/SU2/assets/139676851/e1582ea2-f77e-4814-9eda-dd41c006aabf). we point out that beyond the change in maximum CFL, also the acceleration rate is changed. . Beyond adding robustness allowing the the use of a CFL of 200 which diverges under the original limit , the modified limit allows for better convergence of the flow and turbulence residuals for CFL of 50. Plots of the Lift and drag Coefficients are added here showing that results are not affected by the new limit, and additionally convergence is slightly quicker for the lift coefficient even with a CFL of 50 . . ![CL](https://github.com/su2code/SU2/assets/139676851/61adc0af-9449-41e8-aac7-e985ca3c9bdb); ![CD](https://github.com/su2code/SU2/assets/139676851/17b877df-7eff-47d4-9a77-95e3ccd2afcd). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2323:3201,test,test,3201,https://su2code.github.io,https://github.com/su2code/SU2/pull/2323,1,['test'],['test']
Testability,"f501dc168cd7ef4a4d1f81140a0959a9d4382128 fixes divergence of the `disc_adj_fsi` case among the parallel regression tests that occurred when using the CoDiPack type `RealReverseIndex` instead of `RealReverse`. Since the bug is not obvious from the commit and there might be a better way to fix this, let me put this up for discussion. In `CDiscAdjMultizoneDriver::SetRecording`, the tape is recorded part by part. The part of the code that is at fault involves three of them.; - `DEPENDENCIES -> OBJECTIVE_FUNCTION`: an index is last used on a right hand side; - `OBJECTIVE_FUNCTION -> TRANSFER`: the index is available for reuse and used on the left hand side; - `recording for a zone`: the index is used on a right hand side. In `CDiscAdjMultizoneDriver.cpp::ComputeAdjoints`, however, the `TRANSFER -> OBJECTIVE_FUNCTION` part of the evaluation is skipped in some cases. After the `recording for a zone` evaluation accumulated adjoints for the said index, the adjoint reset that would be performed in the skipped tape part is missing. Instead, the tape evaluation `DEPENDENCIES -> OBJECTIVE_FUNCTION` receives the adjoints for this index, which is wrong because the index is associated with a different primal variable in this part of the tape. Have there been issues regarding dependencies between tape parts previously? Are there mechanisms established that address such issues?. If someone wants to give it a try, I added a build option for the tape type in 183c3ca7a3235c8293cf2242c66c82d35a3922c7. You can switch to the index tape by calling meson with `-Dcodi-tape=JacobianIndex`.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1294#issuecomment-859603733:115,test,tests,115,https://su2code.github.io,https://github.com/su2code/SU2/pull/1294#issuecomment-859603733,1,['test'],['tests']
Testability,"far. The new driver adapts many of the well-known routines for registering variables, recording, initializing and extracting adjoints. The main difference is the handling of multiple zones. . The adjoint (fixed point-) iteration approach in `CDiscAdjMultizoneDriver` is to initialize them per-zone in an outer loop and to extract adjoints with respect to _dependent variables from all zones_, thereby inherently capturing the cross dependencies.; Multiple successive evaluations of adjoints with respect to the same zone (equivalent to inner iterations in the multizone driver) are possible.; ; In order not to have to re-record a tape in the (outer) zone-loop as it can be quite costly, this branch includes some new functionalities in the underlying AD-structure which make it possible to record a ""full"" tape that holds all derivative information and that can be accessed flexibly for different input and output variables across zones.; This also overcomes the restriction that adjoints have to be evaluated in the same order as their variables had been registered.; ; This is the first version of the driver and my intention is to continue contributing to it in terms of both performance and coverage of different kinds of physical couplings in SU2. ## PR Checklist; A regression test for a heated cylinder array with conjugate heat transfer is added to `TestCases/coupled_cht/disc_adj_incomp_2d`. The very same case is used in a tutorial showcasing the new driver and CHT sensitivity analysis, see [Heated cylinders test case](https://github.com/su2code/su2code.github.io/pull/14). I'll check carefully for compiler warnings during test phase. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/774:1542,test,test,1542,https://su2code.github.io,https://github.com/su2code/SU2/pull/774,5,"['Test', 'test']","['TestCases', 'test']"
Testability,"files reverted - fyi, you can go ahead and revert the change to the regression test script so that it's using the older version.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/382#issuecomment-288223748:79,test,test,79,https://su2code.github.io,https://github.com/su2code/SU2/pull/382#issuecomment-288223748,1,['test'],['test']
Testability,fix logo path in README,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1911:4,log,logo,4,https://su2code.github.io,https://github.com/su2code/SU2/pull/1911,1,['log'],['logo']
Testability,"fixed set functions for NEMO axisymmetric, implemented auxvargrad correction in nemo axisymmetric source residual, fixed fluid model/transport model print statement. Signed-off-by: jtneedels <jneedels@stanford.edu>. ## Proposed Changes; This PR addresses an issue found with not setting primitive and conservative variables in computing the axisymmetric source residual, as well as implementing the auxvargrad indexing correction applied in the standard air axisymmetric source residual and fixing an issue with printing the fluid and transport models. . ## Related Work; This PR is related to #1192 and #1162. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1205:1203,test,test,1203,https://su2code.github.io,https://github.com/su2code/SU2/pull/1205,1,['test'],['test']
Testability,"for periodic boundary conditions. In the MatchPeriodic routine, there is a check to make sure we never map to the same point when finding periodic pairs. However, if a node lies on the axis of rotation it has to map on to itself. The checks in the MatchPeriodic routine does not allow for this possibility and this node would end up getting mapped to the nearest neighbor which will lead to wrong results. . This PR introduces a small modification to the MatchPeriodic routine that will allow nodes on the axis to map onto themselves. . ## Related Work. As a test, consider the dummy geometry below. The domain is periodic about the Z-axis. I added a wall BC in the middle of the domain and the flow is supposed to separate at that point. This case is not very realistic but the main idea was to have periodic boundaries with points on the axis of rotation. The domain and the boundary conditions are similar to what we typically have when solving turbine blades. I wasn't sure if I can share the geometry, so I made this dummy test case. This case diverges with the develop branch. The image is from an intermediate result using the fix.; ![sample_test_case_fix](https://user-images.githubusercontent.com/28007882/70721921-b4425500-1cf6-11ea-829c-7d91ca8bb1ef.jpeg). A quick way to verify if the nodes are matched properly is to check the velocity on the nodes that lie on the axis of rotation. Due to the periodicity constraint, the velocities must be aligned with the axis (here the Z-axis) which can be seen here as well. ![vel](https://user-images.githubusercontent.com/28007882/70722647-eef8bd00-1cf7-11ea-9b25-971f9718e151.jpeg). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.; - [ X] My contribution generates no new comp",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/840:1074,test,test,1074,https://su2code.github.io,https://github.com/su2code/SU2/pull/840,1,['test'],['test']
Testability,"for the incompressible discrete adjoint and python scripts, as well as new test cases for the incomp. primal and discrete adjoint.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/427:75,test,test,75,https://su2code.github.io,https://github.com/su2code/SU2/pull/427,1,['test'],['test']
Testability,"from a simple time average to a time averaged weighted with a windowing function. For the direct run this is just a post-processing step and changes happen only in signal_processing_toolbox and Coutput. ; - We adapted the seeding for the adjoint run from a the classic time average to a windowed time average. ; - Tests have shown, that higher order windowing regularizers, tend to converge quickly with respect to the averaged time span. We have implemented a ""timeConvergenceMonitor"", that acts similarly to the convergence monitoring of the inner convergence. It applies a cauchy convergence criterion to the chosen windowed time average output coefficients. ; - The cauchy convergence criterion works for direct run, adjoint run and shape optimization scripts; - In case of shape optimization, the script remembers the final time iteration of the direct run. If the final time step is smaller than the ""original"" final time step stated in the configuration file, it adapts the starting time of the adjoint run; and the time to seed the objective function, such that the seeding does not exceed the original time to end the seeding. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/836:2510,test,test,2510,https://su2code.github.io,https://github.com/su2code/SU2/pull/836,1,['test'],['test']
Testability,"from the original `issue_simplified` singlezone solution with implicit Euler and CFL=1000. ; - similar to the `issue_simplified` multizone solution with implicit Euler and CFL=0.1. . Similarly, the TKE plots:; - `issue_simplified` singlezone implicit Euler CFL=1000; ![tke-simplified-singlezone-impliciteuler](https://user-images.githubusercontent.com/72806890/140887227-fc2ed584-53cf-413d-b5ad-18d1a12f5e4a.png); - `issue_simplified` singlezone explicit Euler CFL=0.1; ![tke-simplified-singlezone-expliciteuler](https://user-images.githubusercontent.com/72806890/140887289-0d8725a2-e51b-4704-bdae-a51b492949bf.png); (it is ""red"" throughout the domain, except for the wall marker); - `issue_simplified` multizone explicit Euler CFL=0.1: (similar image, ""red"" everywhere except wall). **Thus, the difference in solutions observed above is due to the choice of implicit vs. explicit Euler and CFL, and not due to problems regarding the interface.**. Am I doing something wrong in the explicit Euler [cfg file](https://seafile.rlp.net/d/bb0fbb16eb414263b642/files/?p=%2Fsinglezone-simplfied-expliciteuler-cfl01.cfg&dl=1), whose diff to the [SU2/TestCases/rans/naca0012/turb_NACA0012_sst.cfg](https://github.com/su2code/SU2/blob/v7.2.0/TestCases/rans/naca0012/turb_NACA0012_sst.cfg) is as follows?. 27c27; < RESTART_SOL= NO; ---; > RESTART_SOL= YES; 45c45; < REYNOLDS_NUMBER= 1.0E6; ---; > REYNOLDS_NUMBER= 6.0E6; 70c70; < MARKER_HEATFLUX= ( circle, 0.0 ); ---; > MARKER_HEATFLUX= ( airfoil, 0.0 ); 76c76; < MARKER_PLOTTING= ( circle ); ---; > MARKER_PLOTTING= ( airfoil ); 79c79; < MARKER_MONITORING= ( circle ); ---; > MARKER_MONITORING= ( airfoil ); 88c88; < CFL_NUMBER= 0.1; ---; > CFL_NUMBER= 1000.0; 101c101; < ITER= 9999900; ---; > ITER= 99999; 162c162; < TIME_DISCRE_FLOW= EULER_EXPLICIT; ---; > TIME_DISCRE_FLOW= EULER_IMPLICIT; 177c177; < TIME_DISCRE_TURB= EULER_EXPLICIT; ---; > TIME_DISCRE_TURB= EULER_IMPLICIT; 203c203; < MESH_FILENAME= singlezone.su2; ---; > MESH_FILENAME= n0012_225-65.su2",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414#issuecomment-963921195:2707,Test,TestCases,2707,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414#issuecomment-963921195,2,['Test'],['TestCases']
Testability,"ft2_c, class ModVort_c>; class SA_Base : public CNumerics {; public:; SA_Base() {}. void computeResidual() final {; ft2 = ft2_c::Compute(); S_hat = ModVort_c::Compute(2.0,10); }; };. // the term ""bsl"" stands for baseline; class ft2_bsl { static double Compute() { return 0.0; } }; ; class ft2_nonzero { static double Copmute() { return ...; } };; class ModVort_bsl { static double Compute(const double x, const int y){ return x*y; } };; class ModVort_Neg { static double Compute(const double x, const int y){ return x*y; } };; class ModVort_Edw { static double Compute(const double x, const int y){ return x+y; } };. /*-- Numerics preprocessing --*/; // From the config file (.cfg) determine which corrections/variations we have to use: ft2_variant, ModVort_variant, etc; // Create Frankenstein SA; if(ft2_variant==0 && ModVort_variant==0) numerics[i] = new SA_Base<ft2_bsl, ModVort_bsl>();; if(ft2_variant==0 && ModVort_variant==1) numerics[i] = new SA_Base<ft2_bsl, ModVort_Neg>();; if(ft2_variant==0 && ModVort_variant==2) numerics[i] = new SA_Base<ft2_bsl, ModVort_Edw>();; if(ft2_variant==1 && ModVort_variant==0) numerics[i] = new SA_Base<ft2_nonzero, ModVort_bsl>();; if(ft2_variant==1 && ModVort_variant==1) numerics[i] = new SA_Base<ft2_nonzero, ModVort_Neg>();; // so on. // Proceed to compute the turbulent sources residual as always; ```. ## Related Work; This PR closes the PR #1066.; This PR closes the issue #1364.; This PR will hopefully close the discussion #1403. ## PR Checklist; - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1411:6483,test,test,6483,https://su2code.github.io,https://github.com/su2code/SU2/pull/1411,1,['test'],['test']
Testability,"ft2_c, class ModVort_c>; class SA_Base : public CNumerics {; public:; SA_Base() {}. void computeResidual() final {; ft2 = ft2_c::Compute(); S_hat = ModVort_c::Compute(2.0,10); }; };. // the term ""bsl"" stands for baseline; class ft2_bsl { static double Compute() { return 0.0; } }; ; class ft2_nonzero { static double Copmute() { return ...; } };; class ModVort_bsl { static double Compute(const double x, const int y){ return x*y; } };; class ModVort_Neg { static double Compute(const double x, const int y){ return x*y; } };; class ModVort_Edw { static double Compute(const double x, const int y){ return x+y; } };. /*-- Numerics preprocessing --*/; // From the config file (.cfg) determine which corrections/variations we have to use: ft2_variant, ModVort_variant, etc; // Create Frankenstein SA; if(ft2_variant==0 && ModVort_variant==0) numerics[i] = new SA_Base<ft2_bsl, ModVort_bsl>();; if(ft2_variant==0 && ModVort_variant==1) numerics[i] = new SA_Base<ft2_bsl, ModVort_Neg>();; if(ft2_variant==0 && ModVort_variant==2) numerics[i] = new SA_Base<ft2_bsl, ModVort_Edw>();; if(ft2_variant==1 && ModVort_variant==0) numerics[i] = new SA_Base<ft2_nonzero, ModVort_bsl>();; if(ft2_variant==1 && ModVort_variant==1) numerics[i] = new SA_Base<ft2_nonzero, ModVort_Neg>();; // so on. // Proceed to compute the turbulent sources residual as always; ```. ## Related Work; This PR closes the PR #1066.; This PR closes the issue #1364.; This PR will hopefully close the discussion #1403. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1413:6668,test,test,6668,https://su2code.github.io,https://github.com/su2code/SU2/pull/1413,1,['test'],['test']
Testability,fyi; 1. The failing tutorials.py regression test are solved elsewhere so that will disappear upon the next pushed commit; 2. The Complex Code error of CodeFactor can be (most likely) disregarded as a false positive. It does so for eg CSolver.cpp already so i guess we have ourselves a new hypochondriac-file,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1300#issuecomment-860118605:44,test,test,44,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-860118605,1,['test'],['test']
Testability,"g if there is a; mistake on lines 1322 to 1325 of Common/src/adt_structure.cpp .; It is currently; < parCoor[0] = -0.5*(parCoor[0] + parCoor[1] + parCoor[2] + 1.0);; < parCoor[1] = 0.5*(parCoor[0] + 1.0);; < parCoor[2] = 0.5*(parCoor[1] + 1.0);; < parCoor[3] = 0.5*(parCoor[2] + 1.0);. I believe it should be. > weightsInterpol[0] = -0.5*(parCoor[0] + parCoor[1] + parCoor[2] +; 1.0);; > weightsInterpol[1] = 0.5*(parCoor[0] + 1.0);; > weightsInterpol[2] = 0.5*(parCoor[1] + 1.0);; > weightsInterpol[3] = 0.5*(parCoor[2] + 1.0);; Can you please confirm if this is correct?. Thank you; Monika. On Wed, May 27, 2020 at 8:32 PM Eduardo Molina <notifications@github.com>; wrote:. > Hi Monika,; >; > We are in the V&V process of a new wall model LES implementation. Also, I; > took the opportunity to start fixing the RANS wall function since it will; > share the same code structure with the WMLES part, i.e. replace the wall; > shear stress in the NS fluxes.; >; > We didn’t extensively test the RANS wall functions, only very limited test; > cases. It will be great if you could run your own cases using the following; > branch:; >; > https://github.com/su2code/SU2/tree/feature_WallModelLES <; > https://github.com/su2code/SU2/tree/feature_WallModelLES>; >; > Please let me know if you need additional help and looking forward to hear; > from you.; >; > Best,; >; > Eduardo; >; >; >; > > On 27 May 2020, at 11:30, monika1387 <notifications@github.com> wrote:; > >; > >; > > Sure Juan! I would like to. Because I was running on RANS but I am; > working; > > on LES to make this wall functions work which is not working either.; > > Please let us know how we can support and work to get this working for; > LES; > > simulation (wall models in SU2).; > >; > > On Wed, May 27, 2020 at 12:29 PM Juan J. Alonso <; > notifications@github.com>; > > wrote:; > >; > > > Monika,; > > >; > > > There is a chance we could work together on this…Eduardo Molina; > (copied); > > > co-advised a short project last year ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-638479089:1053,test,test,1053,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-638479089,2,['test'],['test']
Testability,"g**; A general centrifugal compressor multi-zone case is simulated. . ![image](https://github.com/su2code/SU2/assets/96534491/e0990051-6996-4835-a6d3-fae00cdd0c88). The computational domain is composed by the following zones (_for this case, no return channel geometry is included_):. 1. Inlet channel; 2. Impeller; 3. Diffuser; 4. Cavity. The code prints out the following error: . ```; Error in ""virtual void CPhysicalGeometry::ComputeNSpan(CConfig*, short unsigned int, short unsigned int, bool)"":; -------------------------------------------------------------------------; At the moment only turbomachinery with the same amount of span-wise section can be simulated; nSpan inflow 0, nSpan outflow 57; ------------------------------ Error Exit -------------------------------; ```. However, spanwise nodes are indeed 57 (_checked manually and on Autogrid_). . A possible solution is indicated [here](https://www.cfd-online.com/Forums/su2/229875-rotor67-simulation-su2.html), but it is not a definitive one as it's dependent on the spanwise nodes number hard-coding.; Different SU2 version were tested, both on **Win10** and **Ubuntu 20.04**, but the issue persisted only to be resolved similarly to the way showed here below. **Additional files**; [error.txt](https://github.com/su2code/SU2/files/13976072/error.txt) -> SU2 initialization up to the error. **Bug report checklist**; - [✔ ] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [✔ ] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [✔ ] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop:**; - OS: UBUNTU 20.04 / Windows 10; - C++ compiler and version: g++ 9.4.0 / gcc 8.1.0; - MPI implementation and version: Open MPI 4.1.5; - SU2 Version: v7.3.0 - v7.4.0 - v7.5.0 - v7.5.1 - v8.0.0 - v8.0.0 new_turbo_outputs. Thank you in advance for your help.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2203:1114,test,tested,1114,https://su2code.github.io,https://github.com/su2code/SU2/issues/2203,1,['test'],['tested']
Testability,"ges. Using automake, the build process for building unit tests becomes:. ```; ./bootstrap; ./configure; make; make check; ```. We use [Boost's unit testing framework](https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html). This provides a convenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time we push commits or submit a pull request, the unit tests are run and checked. ## What is my vision for unit testing in SU2?. I am *not* proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. ## What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. #### Roll-your-own. + Requires no external dependencies; + The most flexible option; + Involves the most work to setup; + Will lack some of the more advances features of mature unit-testing frameworks. #### Boost Test. + Can be header only, statically linked, or dynamically linked; + If statically or dynamically linked, then Boost is not very lightweight; + Easy to add if you're already using Boost. #### Google Test. + Most common unit-testing framework; + Can be easily combined with Google's powerful GMock mocking library; + Compiling and linking can be somewhat painful. #### Catc",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698:3112,test,tests,3112,https://su2code.github.io,https://github.com/su2code/SU2/issues/698,1,['test'],['tests']
Testability,"github.com/su2code/SU2/commit/ac8b3bf7636cc66ca7f47e15935942a6598e1a9f), the `SetRoe_Dissipation` function checked to see if the sensor values were valid regardless of the type of blending selected. Commit [ac8b3bf](https://github.com/su2code/SU2/commit/ac8b3bf7636cc66ca7f47e15935942a6598e1a9f) changed the behavior to only check the sensor values if they will be used. The unit test sets the convective blending to `NTS`, feeds invalid sensor values into `SetRoe_Dissipation` and checks the output. ```cpp; // Used to set the Roe-low-dissipation option; void WriteCfgFile(unsigned short nDim, const char* filename,; std::string blending) {; std::ofstream cfg_file;. cfg_file.open(filename, ios::out);; cfg_file << ""PHYSICAL_PROBLEM= NAVIER_STOKES"" << std::endl;; cfg_file << ""ROE_LOW_DISSIPATION= "" << blending << std::endl;. cfg_file.close();; }. BOOST_AUTO_TEST_CASE(BadSensorsAllowedForNTS) {. /*--- Setup ---*/. const unsigned short nDim = 3;. /*--- Set up the config class for the test ---*/; char cfg_filename[100] = ""convective_blending_test.cfg"";; WriteCfgFile(nDim, cfg_filename, ""NTS"");; CConfig* config = new CConfig(cfg_filename, SU2_CFD, 0, 1, 2, VERB_NONE);; std::remove(cfg_filename);. /*--- Inputs ---*/; const su2double dissipation_i = 0.4;; const su2double dissipation_j = 0.6;; const su2double sensor_i = NAN; // Intentionally unphysical:; const su2double sensor_j = NAN; // Intentionally unphysical:. /*--- Outputs ---*/; su2double dissipation;. /*--- Test ---*/. CNumerics numerics;; numerics.SetRoe_Dissipation(dissipation_i, dissipation_j,; sensor_i, sensor_j,; dissipation, config);. const su2double tolerance = std::numeric_limits<su2double>::epsilon();; BOOST_CHECK_CLOSE_FRACTION(dissipation, 0.5, tolerance);. /*--- Teardown ---*/; delete config;; }; ```. There's a couple problems I would fix if I had more time. Ideally, I would be writing the cfg file to an in-memory stream and not to a file. And realistically, I shouldn't need to use a config file at all for a sim",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499999225:1288,test,test,1288,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499999225,1,['test'],['test']
Testability,"go through (picking BCs as an example):; > ; > * I should be able to construct my custom BC inheriting from one of the existing ones. Put this new BC_TYPE boundary condition in my dynamically-linked library.; > ; > * BUT no recompiling of SU2_CFD; the program should provide facilities to dynamically load libs at RUNTIME (e.g. list of custom ibs in case config file).; > ; > * Now, switching between my custom BC types and the standard ones only requires to edit the config file. For example, the inlet BC of the SA turbulence model is defined in CTurbSASolver::BC_Inlet(); We can place this definition in a separate file bcinit.cpp and dynamically link this file so you have a libbcinit.so file. SU2 knows about libbcinit.so and BC_Inlet() at compile time. ; In your testcases directory, you can put a copy of bcinit.cpp and redefine the boundary condition BC_Inlet. If you change the boundary condition, you only compile bcinit.cpp in your testcase directory and create a libbcinit.so in your testcase directory. You then make sure that when SU2 is looking for dynamically linked libraries, it searches your testcase directory before it searches the SU2 installation directory. . As you see, this can be used for redefining existing (at compile time) functions and modifying its content. I find it especially useful for creating custom initial conditions. If you want to create a completely new custom boundary condition BC_Custom(), it is probably easiest to predefine this structure and create a custom_bc option in the config file. In a CFD problem, there are only a limited number of possibilities (for types of boundary conditions, and systems of equations), so I'm not sure when a BC_Custom() is useful, or when the tipping point is where self-registering classes will become useful for its implementation. Recompiling the code completely takes maybe 2 minutes for me, so I never saw compiling times as a problem. However, this concept could reduce code duplication and improve readability a",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1058#issuecomment-680758665:1075,test,testcase,1075,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-680758665,1,['test'],['testcase']
Testability,"gs mentioned above. However, the current implementation in develop only works correctly for PARAVIEW_MULTIBLOCK and for RESTART type output files. This is because in the case of PARAVIEW_MULTIBLOCK, the additional file output using the iteration number in the filename, is performed in the switch case block directly. . For all other output files, the switch case block only generates the correct filename with the iteration number appended. After the switch block, it is (wrongly) checked if (and only if) the WRT_RESTART_OVERWRITE flag is set to NO. If so, the additional file is written. Therefore, this logic only works correctly for RESTART files (and PARAVIEW_MULTIBLOCK files, because for that format, the file dump is independent of the file dump after the switch block. . The proposed fix here introduces a local boolean (doWriteIterFile) that acts as a switch for the additional file dump. It is set in the switch case block and afterwards it is checked if this variable is true or false. Based on this value, the file dump is executed or not. Furthermore, the fix introduces and corrects some comments to make the function easier to understand. ## Related Work; The flags are already available in the develop branch as config options but they don't work as expected. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2036:2570,test,test,2570,https://su2code.github.io,https://github.com/su2code/SU2/pull/2036,1,['test'],['test']
Testability,"gy terms? I'm talking about terms like:. ![molecular and turbulent diffusion of tke](https://latex.codecogs.com/gif.latex?\left(&space;\mu&space;&plus;&space;\frac{\mu_t}{\sigma_k}\right)\frac{\partial&space;k}{\partial&space;x_j}). This term is listed both in Wilcox's ""Turbulence Modeling for CFD"" book and the [NASA TMR website](https://turbmodels.larc.nasa.gov/implementrans.html). NASA's page basically just copies what Wilcox states, and then says ""This expression in the energy equation is also sometimes neglected."". Rumsey clarified his position in a [2009 report](https://ntrs.nasa.gov/archive/nasa/casi.ntrs.nasa.gov/20090015399.pdf), saying that ""when considering high Mach number compressible boundary layer flows using k-omega models, the conservation of total energy should be configured to include the contribution of the turbulent kinetic energy k... It is sometimes common practice to ignore these effects, which is certainly justified when k is signficantly smaller than the square of the mean velocity."" . But he also states: ""Note that in CFL3D, the turbulence models are decoupled from the mean flow equations, k is *not* included in the definition of the total energy, and the diffusion of k does not appear in the mean flow energy equation for its models tested here."" He also omitted the 2/3 \rho k term in both the production and the turbulent stress tensor, and found that it made little difference even for M=10 wall-bounded flows. SU2's version of SST is in a weird spot right now, where it's using the turbulent kinetic energy in some places but not others. It's using it here:. + Total energy definition; + Production of turbulent kinetic energy; + RANS evolution equations; + Eddy viscosity definition. But not here:. + Molecular and turbulent diffusion of turbulent kinetic energy in the total energy conservation equation; + Isotropic part of the turbulent stress tensor. Is there any rationale behind this split, aside from simply stating that ""this seems to work?""",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/797#issuecomment-548886007:1442,test,tested,1442,https://su2code.github.io,https://github.com/su2code/SU2/issues/797#issuecomment-548886007,1,['test'],['tested']
Testability,"h the volume results, but the amplitude of the lift coefficient is too small. I guess that the velocities are not set properly / mixed up / require a call to some update function or similar. **I'm stuck at this point. Does someone have any idea what I'm doing wrong?? I feel that I am missing an important step here...**~~; - [ ] ~~final test: mesh deformation + moving grid + gust~~; - [x] final test: mesh deformation + gust. Apart from the steps above, the following questions / tasks remain:; - [ ] ~~The the Split Velocity Method (classes SetWind_GustField and CSourceWindGust) is not used in SU2 as far a I understand and for all gust types, the inputs are zero. Instead, the Field Velocity Method is used, but when trying to remove the functions SetWindGust and SetWindGustDer, I broke the code elsewhere. In order to enable 3D meshes, I simply set the outputs to zero for now. I believe that we should clean up the code, but my C++ skills are the limiting factor here, so I need some help with that.~~ --> In a new, dedicated pull request. ## Related Work; The gust encounter for 3D meshes was requested in #1319 and in the Forum https://www.cfd-online.com/Forums/su2/234021-gusts-3d.html and https://www.cfd-online.com/Forums/su2/225914-no-slip-condition-3d-gust.html. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1954:4603,test,test,4603,https://su2code.github.io,https://github.com/su2code/SU2/pull/1954,1,['test'],['test']
Testability,"has been an intrinsic part of the the modus operandi in many multi-physics codes at DoE and has been well worth the additional effort. In cases where it makes sense (as described by Clark and in the Stack Exchange discussion) I would advocate for using it moving forward. There may also be some issues that arise multiple times in existing code where a retroactive application of unit testing may also make sense. I am copying Pat Miller, formerly with DoE, who may have more experience on whether such unit testing approaches were useful/worth the investment in some major codes he worked on. Best,. Juan. On Jun 4, 2019, at 2:14 PM, Clark Pederson <notifications@github.com<mailto:notifications@github.com>> wrote:. I propose adding a unit-testing framework and unit-tests to SU2. After chatting with @economon<https://github.com/economon>, I've decided to move the discussion here to get additional input. What is unit testing?. For those not familiar with unit testing, unit testing allows the testing of small bits of behavior, ideally using isolated bits of code. It is not intended to replace validation testing or formal verification tests. Instead, it serves a unique purpose. Consider the three following use cases:. * You're developing a new feature, and you want to test it to see if it works. You could do a full simulation, but that takes a lot of time and computing power. You want to check if your new behavior behaves as you suspect before you throw a lot of resources at it.; * You submit a PR and discover that one of the regression tests has failed. But...why? You know that something is broken, but its hard to track down what broke. You want more granular test coverage that can demonstrate what broke.; * You are fixing a very small bug. You know that you should prove that your bug fix worked, but it doesn't seem logical to dedicate an entire validation case to one small bug fix. You want to write a small test for a small fix. In all of these cases, unit testing fills a un",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:1044,test,testing,1044,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,3,['test'],['testing']
Testability,"he existing inlet conditions (such as total pressure and total temperature) can be set to custom values. This is similar to the branch I mentioned in #467. The main difference is that the other branch uses hardcoded routines in C++ to read in a table of values and set the inlet conditions. This branch forgoes all of that and lets the user decide how to specify the inlet conditions. This allows both function-based inlet conditions (using python functions) or table-based inlet conditions (using python to read in the values from a file). I'm not opposed to a purely C++ approach to accomplishing the same objective, but I think the python way is much more flexible. Multigrid is **not** currently supported. I don't currently know enough about the agglomeration routines to ensure that I implemented it correctly. Multigrid is not a high priority for me, since periodic BCs and time-stepping are also incompatible with multigrid. ### Verification. As a test-case, I used the flat-plate boundary layer problem in the Tutorials/TestCases directories. I chopped the domain off around x=.5, then used the values from a converged simulation to set the inlet to the correct values at x=.5. You can see some of the results below. I can turn the truncated flat plate into a regression test, if you would like. ![x-momentumcontour](https://user-images.githubusercontent.com/13340225/35588322-e69ac5f4-05c5-11e8-902d-64941ab731fb.png); Figure 1: A comparison of the momentum in the x-direction between truncated and full domains. ![x-momentum_line](https://user-images.githubusercontent.com/13340225/35588290-cb0141c4-05c5-11e8-88d3-085018fabf52.png); Figure 2: A comparison of the momentum profiles at x~=1.5. ![nu_tildecontour](https://user-images.githubusercontent.com/13340225/35588241-9891e5a4-05c5-11e8-9861-50064b28689e.png); Figure 3: A comparison of the turbulent variable between truncated and full domains. ![nu_tilde_line](https://user-images.githubusercontent.com/13340225/35588249-9d94e3e4-05c5",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/503:1238,test,test-case,1238,https://su2code.github.io,https://github.com/su2code/SU2/pull/503,2,"['Test', 'test']","['TestCases', 'test-case']"
Testability,"he following design choices are in place. If you disagree with them, then please start a discussion here:. + All tests are placed in a root-level directory named `UnitTests`. Inside this directory is a structure just like the existing folder structure (e.g. `SU2_CFD/numerics`), except that there are not separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tests or individual tests.; + When `ninja test` or `meson test` is run, the test executable is only run once, sweeping through all the unit tests. The result only shows a single failure or a single success. If more detail is desired, then the test executable can be run manually.; + The relevant SU2 code is compiled as a library (e.g. `libSU2core`) and then linked into both the main executable (`SU2_CFD`) and the test program (`test_driver`). ### How to Run Unit Tests. If you compile SU2 using `ninja -C builddir`, then the test executable will automatically be compiled. You then have three options for running the tests:. + `meson test` (see documentation [here](https://mesonbuild.com/Unit-tests.html)); + `ninja test`; + Run the exectuable manually: `./UnitTests/test_driver`. When running the executable manually, there are many customization options. Run `./UnitTests/test_driver --help` to see them all. ### How to add unit tests. I have already included a single unit-test example (`UnitTests/SU2_CFD/src/numerics/CNumerics_tests.cpp`). Aside from the headaches with CConfig, this example should be clear. If not, raise questions and I will answer them. ~~I plan on adding a few more example tests, as well as a ""How-To"" page on the website.~~ Please see the PR on the website repo for more documentation. To learn more, check out the [great tutorial](https://github.com/catchor",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/850:2414,test,test,2414,https://su2code.github.io,https://github.com/su2code/SU2/pull/850,1,['test'],['test']
Testability,"he implementation works as follows:*; - Calculates new viscous eigenvalues for nodes in symmetry planes;; - ~Calculates new residuals to take into account the symmetry of the mesh;~ Only corrects momentum residual vector in current version.; - ~Uses a modified volume to calculate the solution in symmetry planes;~ Does not require modified volume in current version. ## Related Work; #657. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Results. For the sake of demonstrating the capability of the new Symmetry Boundary condition, the image shows a comparison of pressure at the surface, using the new implementation and the old symmetry boundary condition, for a flow over a 3D cylinder and considering the lateral and bottom surfaces as symmetry plane:. ### New Implementation vs Old Implementation for N2 mixture (2nd Order - NEMO_NS solver - AUSM scheme). ![Screenshot from 2021-01-20 23-28-31](https://user-images.githubusercontent.com/29612207/105253606-b6244c00-5b77-11eb-8689-c6e6190b4b5b.png). I have run this test without changing the viscous eigenvalues, and it converges to the same value. However, for unsteady simulations, changing the eigenvalues provides better results. ### New Implementation (on NEMO) vs Current SU2 Implementation for AIR5 mixture (2nd Order - NS so",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1168:1098,test,test,1098,https://su2code.github.io,https://github.com/su2code/SU2/pull/1168,1,['test'],['test']
Testability,"he most efficient way to proceed is to add unit tests as new behaviors are added and bugs are fixed. With each new PR, we should ask ""Should this have a unit test to verify this behavior?"" Unit tests will provide a clear way to show that each PR does what the developer promises it will do. This will require refactoring some of the code. Some parts of the code, like the CConfig class, are not unit-testing friendly. Unit testing is hard when you have God-classes and ""do-it-all"" functions. The hope is that refactoring these classes will lead to more modular and easier-to-maintain code. ### Decision to use Catch2. Catch2 was chosen for the unit testing library for the following reasons:. + It can be included as a header-only library.; + It has a very clean, easy-to-use syntax; + It has widespread use, including the FEniCS library. ### Design choices. The following design choices are in place. If you disagree with them, then please start a discussion here:. + All tests are placed in a root-level directory named `UnitTests`. Inside this directory is a structure just like the existing folder structure (e.g. `SU2_CFD/numerics`), except that there are not separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tests or individual tests.; + When `ninja test` or `meson test` is run, the test executable is only run once, sweeping through all the unit tests. The result only shows a single failure or a single success. If more detail is desired, then the test executable can be run manually.; + The relevant SU2 code is compiled as a library (e.g. `libSU2core`) and then linked into both the main executable (`SU2_CFD`) and the test program (`test_driver`). ### How to Run Unit Tests. If you compile SU2 using `ninja -C builddir`, then the te",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/850:1501,test,tests,1501,https://su2code.github.io,https://github.com/su2code/SU2/pull/850,1,['test'],['tests']
Testability,"he primal solution for the DiscAdjFluid Iteration for DualTimeStepping 1st order. ; 1. The solution for timestep n-1 should be loaded instead of n-2 -> I added an if statement there.; 2. solution_old is used as a temporary container for the freshly loaded solution. Then the solution which is currently at solution_time_n is pushed to be the ""main"" solution n+1. Afterwards the solution_old is put in the solution_time_n container -> That last step was wrong such that the loaded solution never gets involved. I used the regression test in disc_adj_rans/cylinder which covers DualTimeStepping 2nd order and reused it for a new Testcase which covers 1st order. ; For now, the .travis.yml has a different su2code/Testcases branch in it such that other are not hindered by this PR when running travis. If this PR is merged with the new Testcase, the TestCases repo has to be updated and the .travis.yml needs to be reverted. ; Let me know if adding a new TestCase is OK. I am aware that not every detail can get its own regression test. . I checked my changes against finite differences for that Testcase. I'll post the result below. Additionally I suppressed the output of .csv files in driver_structure.cpp for unsteady simulations if `WRT_CSV_SOL= NO` is set. . Regards, Tobi. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; Nothing I know of. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/554:1099,test,test,1099,https://su2code.github.io,https://github.com/su2code/SU2/pull/554,1,['test'],['test']
Testability,"he refactoring he was doing and will try to bring as much as possible into this, but I need to do it in smaller steps. Now this PR deals with some of the aforementioned refactoring, namely:; - CG, BCGSTAB, and GMRES have their working vectors and matrices as members of CSysSolve and allocate them only on the first call.; - CSysSolve is now a member of CSolver and CVolumetricMovement.; - BCGSTAB uses two fewer vectors than before and the ""p"" and ""v"" vectors are initialized to 0 instead of ""b"" (I think this was a small bug?).; - CSysSolve takes a ""mesh deformation"" flag at construction so that Solve can be called by CSolver and by CElasticityMovement, before the latter decided what Krylov method to call in place, kind of duplicating what is done by Solve. I did not do the same for CVolumetricMovement because there the differentiation is handled differently. This also allowed SetExternalSolve_Mesh to be merged with SetExternalSolve.; - Now when CSysSolve sets the external solve it passes itself (*this*) so that CSysSolve_b re-uses it in the reverse path instead of instantiating a CSysSolve every time.; - Part of CSysSolve_b::Solve_b was moved to CSysSolve::Solve_b to allow CSysSolve_b::Solve_g to be dropped. CSysSolve_b::Solve_b now simply prepares the RHS of the adjoint system and calls Solve_b on the pointer it gets through the AD data handler. I decided not to shoehorn Solve_b into Solve as that would be a bit unreadable. I will now start tackling the templating part, and once I can demonstrate that that works, start bringing in Tim's refactoring. ## Related Work; #648 ; *feature_template_linear_solver*. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/650:3284,test,test,3284,https://su2code.github.io,https://github.com/su2code/SU2/pull/650,1,['test'],['test']
Testability,"he tests I did over at #1388 where I will also add a inc+turb+2species-with-2-inlets reg test (and hopefully also non-dimensional). Inlet file non-dimensionalization: The inlet file writes dimensional values for the mean flow, and the values that are read are non-dimensionalized in the BC_Inlet routine itself -> I personally find this approach quite good, but I dont believe the SA+SST are adhering to that. See also [this cfd-online issue](https://www.cfd-online.com/Forums/su2/239313-inlet-profile-sst-nondimensional-treatment.html). I will try to fix this here as well.; - nu tilde is non-dimensionalized by multiplying with densityRef/viscosityRef (which I guess from the code); - TKE by multiplying with 1/VelocityRef^2 (which I guess from the code, and would fit with Feng Liu Non-Dim paper i have); - Omega ~~by multiplying with length_Ref/VelocityRef (which would fit with Feng Liu) or~~ by multiplying with ViscRef/(rhoRef*VelocityRef^2); Any info on this is appreciated.; My approach would be non-dimensionalize in the BC_Inlet routine for Turb as well to stay consistent with the mean flow, For the mean flow it has to be done like that because the meaning of the values is determined in the inlet routine. Otherwise one could do all that consistently a bit earlier. I have to remember to add a little hint to the laminar step tutorial to state that the inlet file should be dimensional. ## Related Work; https://github.com/su2code/SU2/pull/516 initial implementation. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1427:2193,test,test,2193,https://su2code.github.io,https://github.com/su2code/SU2/pull/1427,1,['test'],['test']
Testability,"hello,I meet a problem:meson test failed about su2@7.3.1 on centos8_aarch64 but sucesses on centos8_x86_64; ### Steps to reproduce the issue. ```console; aarch64:; [root@localhost spack-build]# meson test; ninja: Entering directory `/home/stage/root/spack-stage-su2-7.3.0-hclqgqw633hcplsgqfeortvmkzd3ee2m/spack-src/spack-build'; [2/2] Linking target UnitTests/test_driver; 1/1 Catch2 test driver FAIL 0.04s exit status 1; >>> MALLOC_PERTURB_=57 /home/stage/root/spack-stage-su2-7.3.0-hclqgqw633hcplsgqfeortvmkzd3ee2m/spack-src/spack-build/UnitTests/test_driver. Ok: 0; Expected Fail: 0; Fail: 1; Unexpected Pass: 0; Skipped: 0; Timeout: 0. Full log written to /home/stage/root/spack-stage-su2-7.3.0-hclqgqw633hcplsgqfeortvmkzd3ee2m/spack-src/spack-build/meson-logs/testlog.txt; logs:; 1/1 Catch2 test driver FAIL 0.04s exit status 1; 07:06:51 MALLOC_PERTURB_=57 /home/stage/root/spack-stage-su2-7.3.0-hclqgqw633hcplsgqfeortvmkzd3ee2m/spack-src/spack-build/UnitTests/test_driver; ----------------------------------- output -----------------------------------. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; test_driver is a Catch v2.11.1 host application.; Run with -? for options. -------------------------------------------------------------------------------; SIMD DOUBLE; -------------------------------------------------------------------------------; ../UnitTests/Common/vectorization.cpp:71; ............................................................................... ../UnitTests/Common/vectorization.cpp:82: FAILED:; CHECK( t[1] == 7 ); with expansion:; 0.0 == 7. ===============================================================================; test cases: 21 | 20 passed | 1 failed; assertions: 222 | 221 passed | 1 failed. x86_64:; [root@localhost spack-build]# meson test; ninja: Entering directory `/home/stage/root/spack-stage-su2-7.3.0-kuuiztf3o7iuzi424u4nekgw5ge6xv3r/spack-src/spack-build'; ninja: no work to do.; 1/1 Catch2 test driver OK 0.05s. ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1609:29,test,test,29,https://su2code.github.io,https://github.com/su2code/SU2/issues/1609,8,"['log', 'test']","['log', 'logs', 'test', 'testlog']"
Testability,"here to get additional input.; > What is unit testing?; >; > For those not familiar with unit testing, unit testing allows the testing; > of small bits of behavior, ideally using isolated bits of code. It is not; > intended to replace validation testing or formal verification tests.; > Instead, it serves a unique purpose. Consider the three following use cases:; >; > - You're developing a new feature, and you want to test it to see if; > it works. You could do a full simulation, but that takes a lot of time and; > computing power. You want to check if your new behavior behaves as you; > suspect before you throw a lot of resources at it.; > - You submit a PR and discover that one of the regression tests has; > failed. But...why? You know that something is broken, but its hard to track; > down what broke. You want more granular test coverage that can demonstrate; > what broke.; > - You are fixing a very small bug. You know that you should prove that; > your bug fix worked, but it doesn't seem logical to dedicate an entire; > validation case to one small bug fix. You want to write a small test for a; > small fix.; >; > In all of these cases, unit testing fills a unique role. Unit testing; > increases time spent in development, but decreases the amount of time spent; > in bug-fixing and maintaining.; >; > For more information, see this relevant Stack Exchange question.; > <https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes>; > What do I propose?; >; > My research group at UT Austing has implemented a unit testing framework; > on our branch, which we're happy with. Some choices were arbitrary, and; > some choices were made based on our development environment. Those choices; > may be different for other groups. Here's what we have done:; >; > The unit testing framework is compiled and run using autotools. For more; > information on autotool's setup, see their documentation; > <https://www.gnu.org/software/aut",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:2963,log,logical,2963,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,1,['log'],['logical']
Testability,"hi @BerkeCan97, thank you for your correction and for helping with the verification part. Indeed, that term seems really wrong, thus I expect that your correction would improve the results. However, the link that you have provided for the corrected version is broken, can you fix it please?. Regarding the test-cases, we were trying to run the NACA0021 at 60deg AoA, but with relatively poor results. Maybe we should start with the flatplate and the mixing layer proposed originally in the implementation of the DDES formulation coupled to the SA model in https://www.researchgate.net/profile/Cleber-Spode-2/publication/318143234_Hybrid_RANSLES_Calculations_in_SU2/links/59c07bfba6fdcca8e56fe3c3/Hybrid-RANS-LES-Calculations-in-SU2.pdf (or any other test-case in the paper you proposed, but I am not able to read that).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2150#issuecomment-2447143579:306,test,test-cases,306,https://su2code.github.io,https://github.com/su2code/SU2/pull/2150#issuecomment-2447143579,2,['test'],"['test-case', 'test-cases']"
Testability,"his PR applies the following bugfixes:; - correct retrieval of the wall roughness in a multizone setup, the original intention of this PR; - the non-MPI substitute for `SU2_MPI::Allgatherv` and `Alltoallv` now takes the displacement into account; - fix #1293, adding a missing `#include` statement . Below is the original PR description. ## Proposed Changes; I think that currently the roughness at the closest wall is retrieved in a wrong way for multizone setups. The current structure is like this:. def CGeometry::ComputeWallDistance:; for each iZone:; construct an ADT which stores the markers of iZone; for each jZone:; call CPhysicalGeometry::SetWallDistance to jZone geometry which \; reduces the stored wall distances of jZone's points according to iZone's markers in the ADT and\; sets wall roughnesses of jZone's points according to data from jZone's geometry. The issue I perceive here is that the closest wall in the ADT, identified by the `markerID`, belongs to `iZone`. `iZone`'s geometry and config must therefore be an additional argument to `CPhysicalGeometry::SetWallDistance`. We must not use the wall roughness from `jZone`'s geometry and config associated to the markerID, as it is currently done. ## Related Work; ?; ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1286:1899,test,test,1899,https://su2code.github.io,https://github.com/su2code/SU2/pull/1286,1,['test'],['test']
Testability,"his involves minimal changes.; >; > Using automake, the build process for building unit tests becomes:; >; > '''; > ./bootstrap; > ./configure; > make; > make check; > '''; >; > We use Boost's unit testing framework; > <https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>.; > This provides a convenient set of macros for instatiating tests, grouping; > tests into suites, and running checks. This choice was based on what is; > available in our development setup.; >; > We have integrated our unit tests into our Travis CI regression testing.; > Every time we push commits or submit a pull request, the unit tests are run; > and checked.; > What is my vision for unit testing in SU2?; >; > I am *not* proposing that we start trying to get 100% code coverage with; > pre-existing code. That would not provide a good return on investment.; >; > Instead, I see people adding unit tests as they write new code and as they; > find bugs. For each new behavior added to SU2, tests are first added to; > document the related existing behavior. These tests serve to check that the; > existing behavior isn't damaged by the new code. Then new tests are added; > to prove that the new behavior is working correctly. For bug fixes, the; > process is simpler. A test is added to confirm that something is not; > behaving as expected. Then the code is fixed to make the test pass.; > What frameworks are available?; >; > For a unit testing framework, here are the most popular options, with the; > following pros and cons:; > Roll-your-own; >; > - Requires no external dependencies; > - The most flexible option; > - Involves the most work to setup; > - Will lack some of the more advances features of mature unit-testing; > frameworks.; >; > Boost Test; >; > - Can be header only, statically linked, or dynamically linked; > - If statically or dynamically linked, then Boost is not very; > lightweight; > - Easy to add if you're already using Boost; >; > Google Test; >; > - Most common unit-test",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:5028,test,tests,5028,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,1,['test'],['tests']
Testability,"hmm, [](https://github.com/su2code/SU2/pull/1413/commits/0f4977f4b761df87737ac283518870fb7cbbd466)[0f4977f](https://github.com/su2code/SU2/pull/1413/commits/0f4977f4b761df87737ac283518870fb7cbbd466) must have introduced sth that made the two (streamwise periodic) testcases fail. I think the defining feature here is, that they use the SST-turb model. But looking at the mentioned commit, the changes look equal to me :thinking:",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1413#issuecomment-1057834812:264,test,testcases,264,https://su2code.github.io,https://github.com/su2code/SU2/pull/1413#issuecomment-1057834812,1,['test'],['testcases']
Testability,"hoices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more information on autotool's setup, see their documentation<https://www.gnu.org/software/automake/manual/html_node/Tests.html>. Since autotools is the build system for SU2, this involves minimal changes. Using automake, the build process for building unit tests becomes:. '''; ./bootstrap; ./configure; make; make check; '''. We use Boost's unit testing framework<https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>. This provides a convenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time we push commits or submit a pull request, the unit tests are run and checked. What is my vision for unit testing in SU2?. I am not proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. Roll-your-own. * Requires no external dependencies; * The most flexible option; * Involves the most work to setup; * Will lack some of the more advances features of mature unit-testing frameworks. ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:3569,test,testing,3569,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,1,['test'],['testing']
Testability,"https://github.com/su2code/SU2/blob/60270690cd749bd190e16b4c34cf724c42edbeb1/SU2_CFD/src/numerics/flow/convection/hllc.cpp#L543C3-L543C3. As per the https://www.sciencedirect.com/science/article/pii/S0021999197957934 (original paper), multiplying the Jacobian with \kappa = 0.5 is not right. It is leading to non-convergence. . Further, dpStar_dU[iVar] calculations need to be relooked. As per the original paper, density should be at ""j"" when it is being used at ""i"". Though I have not seen a major difference, but currently testing the same more for strong shock cases.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2198:526,test,testing,526,https://su2code.github.io,https://github.com/su2code/SU2/issues/2198,1,['test'],['testing']
Testability,i made a little Test for the Non-dimensionalization: Turns out the inc Testcases did not specify `INC_NONDIM` where the default is INITIAL_VALUES. I will specify that for the reg tests. I think the non-dim is currently correct: attached the incomp-SA case comparison INITIAL_VALUES against DIMENSIONAL. . ![image](https://user-images.githubusercontent.com/31306376/137587702-902059e6-dba4-4313-b6a9-360d725f3c4d.png). Here the non-dim value is dimensionalized using what gets printed in the screen output; ![image](https://user-images.githubusercontent.com/31306376/137587688-662b3d91-b478-4cbb-80f6-c374de39473d.png),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1360#issuecomment-944909404:16,Test,Test,16,https://su2code.github.io,https://github.com/su2code/SU2/pull/1360#issuecomment-944909404,3,"['Test', 'test']","['Test', 'Testcases', 'tests']"
Testability,"ic part of the the modus operandi in many multi-physics; > codes at DoE and has been well worth the additional effort. In cases where; > it makes sense (as described by Clark and in the Stack Exchange discussion); > I would advocate for using it moving forward. There may also be some; > issues that arise multiple times in existing code where a retroactive; > application of unit testing may also make sense. I am copying Pat Miller,; > formerly with DoE, who may have more experience on whether such unit; > testing approaches were useful/worth the investment in some major codes he; > worked on.; >; > Best,; >; > Juan; >; >; > On Jun 4, 2019, at 2:14 PM, Clark Pederson <notifications@github.com>; > wrote:; >; > I propose adding a unit-testing framework and unit-tests to SU2. After; > chatting with @economon <https://github.com/economon>, I've decided to; > move the discussion here to get additional input.; > What is unit testing?; >; > For those not familiar with unit testing, unit testing allows the testing; > of small bits of behavior, ideally using isolated bits of code. It is not; > intended to replace validation testing or formal verification tests.; > Instead, it serves a unique purpose. Consider the three following use cases:; >; > - You're developing a new feature, and you want to test it to see if; > it works. You could do a full simulation, but that takes a lot of time and; > computing power. You want to check if your new behavior behaves as you; > suspect before you throw a lot of resources at it.; > - You submit a PR and discover that one of the regression tests has; > failed. But...why? You know that something is broken, but its hard to track; > down what broke. You want more granular test coverage that can demonstrate; > what broke.; > - You are fixing a very small bug. You know that you should prove that; > your bug fix worked, but it doesn't seem logical to dedicate an entire; > validation case to one small bug fix. You want to write a small test for a; ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:2003,test,testing,2003,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,4,['test'],['testing']
Testability,"il now, the concept “Zones” could refer to either different subdomains in space (interacting with each other over a common interface, e.g. for conjugate heat transfer, turbomachinery or FSI), or to copies (or instances) of the same domain evaluated under different conditions (e.g., for Harmonic Balance there are several time instances). . The previous concepts are now separated, allowing for a consistent definition of zones and instances in the code which can potentially be used simultaneously, and without the loss of any functionality. The proposed scheme is better explained in the attached [diagram](https://github.com/su2code/SU2/files/1955507/zones_vs_instances.pdf). ## Related Work. - Further work will involve improvements in the config definition, to make it more clear for the community of users of SU2 (particularly in cases involving multiple zones/instances). The output will also be reorganized, to be consistent with the abstraction of the rest of the code. - I have adapted the HB problems to the new definition, so @arubino and @sravya91, if you have some time please do double check that this PR looks good to you! Apart from the regression tests, which should be passing, I have also double checked that the file output for these particular problems wasn’t affected by the changes. - Additionally, I have removed some warnings that were in the code from a recent PR. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/528:1558,test,tests,1558,https://su2code.github.io,https://github.com/su2code/SU2/pull/528,2,['test'],"['test', 'tests']"
Testability,"ild; Build type: native build; Project name: SU2; Project version: 7.5.1 ""Blackbird""; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc.exe (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++.exe (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (C:\Users\zeng\AppData\Local\Programs\Python\Python37\python.exe); WARNING: Python files installed by Meson might not be found by python interpreter.; This warning can be avoided by setting ""python.platlibdir"" option.; WARNING: Python files installed by Meson might not be found by python interpreter.; This warning can be avoided by setting ""python.purelibdir"" option.; Found pkg-config: C:\Program Files\mingw-w64\bin\pkg-config.EXE (0.26); mpicc found: NO; Run-time dependency MPI for c found: YES; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig, config-tool and system). meson.build:61:2: ERROR: Dependency ""mpi"" not found, tried pkgconfig, config-tool and system. A full log can be found at F:\suflow\code\Su-FVMu-Solver\build\meson-logs\meson-log.txt; ```. meson-log.txt: ; [meson-log.txt](https://github.com/su2code/SU2/files/12427739/meson-log.txt). **Bug report checklist**. - [x] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Windows/).; - [x] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [x] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: Windows 11; - C++ compiler and version: gcc.exe (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0; - MPI implementation and version: msmpi 10.1.2; - SU2 Version: 7.5.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2114:1559,log,log,1559,https://su2code.github.io,https://github.com/su2code/SU2/issues/2114,6,['log'],"['log', 'logs']"
Testability,"ime spent in development, but decreases the amount of time spent in bug-fixing and maintaining. For more information, see this relevant Stack Exchange question.<https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes>. What do I propose?. My research group at UT Austing has implemented a unit testing framework on our branch, which we're happy with. Some choices were arbitrary, and some choices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more information on autotool's setup, see their documentation<https://www.gnu.org/software/automake/manual/html_node/Tests.html>. Since autotools is the build system for SU2, this involves minimal changes. Using automake, the build process for building unit tests becomes:. '''; ./bootstrap; ./configure; make; make check; '''. We use Boost's unit testing framework<https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>. This provides a convenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time we push commits or submit a pull request, the unit tests are run and checked. What is my vision for unit testing in SU2?. I am not proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:3110,test,testing,3110,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,1,['test'],['testing']
Testability,"in the file /SU2_PY/SU2/io/config.py ...; The block that reads:; # read config if it exists. ```; if filename:; try:; self.read(filename); except:; raise IOError , 'Could not find config file: %s' % filename; ```. mask all assertion errors used to check the integrity of the config options as an 'IOError, Could not find the config file: known_and_present_config_file.cfg'. the block should read:; # read config if it exists. ```; if filename:; try:; self.read(filename); except IOError:; print 'IOError , 'Could not find config file: %s' % filename; except:; print ""Unexpected error:"", sys.exc_info()[0]; raise; ```. or just trap the IOError and let exceptions triggered by failed assertions propagate up the call stack",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/141:223,assert,assertion,223,https://su2code.github.io,https://github.com/su2code/SU2/issues/141,2,['assert'],"['assertion', 'assertions']"
Testability,"ironment locally on your machine. You can even download the compiled binaries produced on github and run them locally to further debug problems.; - It is faster and more flexible. Compiling and running all tests requires ~1h since a lot of things run in parallel now (e.g. building the base, reverse AD and forward AD binaries). There is potential to further speed things up by splitting the test case scripts into several files. All of that requires minimal work. Unfortunately there is no caching using ccache at the moment, but it is likely that github introduces this feature mid of november. ; - Additional tests like unit tests can make use of the same docker containers and can be easily set up by creating a new workflow file.; - We can easily add a deployment step to automatically create releases and/or nightly builds. **Note:** the linked docker containers are **only** for development/testing purposes. Hence we cannot give any support in this regard. For production use it is recommended to use singularity containers. But: the docker containers can be used as basis layers for singularity. I will get back with more information on that topic. ~~I had to change regression test values of two cases since apparently they are compiler dependent.~~ I changed it to the same versions as we have on Travis. There will be some documentation on how to use the containers locally soon. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/806:1667,test,test,1667,https://su2code.github.io,https://github.com/su2code/SU2/pull/806,2,['test'],['test']
Testability,"isoparametric interpolation, the method was incorrect for quadrilaterals (and the code too complex).; - Heavy refactoring of mirror (conservative) interpolation, the algorithm is perhaps more complex but the code is cleaner and 10x faster (this is in #833).; - Medium cleanup of CInterpolator (const correctness, unnecessary mpi ifdefs, etc.).; - Light cleanup of CDriver/CTransfer (deleting copy-pasted code); #### Other enhancements:; - Initialize the linear system solutions in CMeshSolver to speedup 3D FSI simulations, but especially to reduce overhead in FSI discrete adjoint cases.; - Too improve the quality of deformed grids in FSI cases with large ""out-of-plane"" displacements, a thicker layer of stiff cells can be imposed around the deforming boundaries. The thickness of the layer is defined by option `DEFORM_STIFF_LAYER_SIZE = [0]` when `DEFORM_STIFFNESS_TYPE = WALL_DISTANCE`. This allows refined regions around a wing tip to be dragged instead of sheared (which happens with the simple 1/x variation).; #### Other fixes:; - CFEASolver displacement boundary conditions (the weird bug detailed below).; - CFEASolver load integration for FSI simplified to fix mpi-related bug.; - Option CFL_REDUCTION_TURB having no effect.; - Restarts with moving wall cases work by default. I know, there's way too much stuff in this PR, but it was all required to make 3D FSI more reliable, and hey, it works!; ![3D_FSI](https://user-images.githubusercontent.com/38071223/78511123-34069a80-7792-11ea-950f-750cef80f1f8.png). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/914:2997,test,test,2997,https://su2code.github.io,https://github.com/su2code/SU2/pull/914,1,['test'],['test']
Testability,"it testing fills a unique role. Unit testing; > increases time spent in development, but decreases the amount of time spent; > in bug-fixing and maintaining.; >; > For more information, see this relevant Stack Exchange question.; > <https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes>; > What do I propose?; >; > My research group at UT Austing has implemented a unit testing framework; > on our branch, which we're happy with. Some choices were arbitrary, and; > some choices were made based on our development environment. Those choices; > may be different for other groups. Here's what we have done:; >; > The unit testing framework is compiled and run using autotools. For more; > information on autotool's setup, see their documentation; > <https://www.gnu.org/software/automake/manual/html_node/Tests.html>.; > Since autotools is the build system for SU2, this involves minimal changes.; >; > Using automake, the build process for building unit tests becomes:; >; > '''; > ./bootstrap; > ./configure; > make; > make check; > '''; >; > We use Boost's unit testing framework; > <https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>.; > This provides a convenient set of macros for instatiating tests, grouping; > tests into suites, and running checks. This choice was based on what is; > available in our development setup.; >; > We have integrated our unit tests into our Travis CI regression testing.; > Every time we push commits or submit a pull request, the unit tests are run; > and checked.; > What is my vision for unit testing in SU2?; >; > I am *not* proposing that we start trying to get 100% code coverage with; > pre-existing code. That would not provide a good return on investment.; >; > Instead, I see people adding unit tests as they write new code and as they; > find bugs. For each new behavior added to SU2, tests are first added to; > document the related existing behavior. These tests serve to",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:4131,test,tests,4131,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,1,['test'],['tests']
Testability,"ith ParaView from 'adjoint.vtu' looks reasonably similar to the image shown in the tutorial). Finally, I wanted to also try the algorithmic differentiation, so I changed the parameter MATH_PROBLEM to DISCRETE_ADJOINT in the configuration file and:. $ SU2_CFD_AD inv_dadj_NACA0012.cfg. I failed to obtain a correct adjoint solution (I expected to see something really similar to what I got with the CONTINUOUS_ADJOINT method): the density adjoint field seems to have a completely different scale (instead of having values in the approximate range -200 ÷ +200, it has values in the range -0.264 ÷ +0.217 and the values not too close to zero are concentrated in an area near the farfield boundary, far from the airfoil). What's wrong?; Does anything else need to be changed in the configuration file?. **Bug report checklist**. - [X] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/). From the above mentioned commit, I built with:. $ ./preconfigure.py --no-medi --no-opdi --no-mpp --no-coolprop; $ export CXXFLAGS='-march=native -mtune=native -O3 -msse -mfpmath=sse'; $ meson setup -Dwith-mpi=disabled -Denable-cgns=true -Denable-tecio=false -Denable-autodiff=true -Denable-directdiff=true --prefix=${HOME}/local build; $ ninja -C build install. N.B.: CPU is an Intel Core i5-6600 CPU @ 3.30GHz. - [X] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/). I haven't found any other GitHub issue about the Quick Start tutorial. - [X] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). I used the tip of the develop branch, as of yesterday. **Desktop:**; - OS: Debian GNU/Linux 12.0 'bookworm' (up-to-date Debian testing); - C++ compiler and version: g++ (Debian 12.2.0-14) 12.2.0; - MPI implementation and version: irrelevant (built without MPI support); - SU2 Version: commit 3f68501a7ccb107f05a44c2aa5747797541fb683 , branch 'develop'",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1993:2509,test,testing,2509,https://su2code.github.io,https://github.com/su2code/SU2/issues/1993,1,['test'],['testing']
Testability,"ith SU2. libROM captures solution data and either computes the proper orthogonal decomposition (POD) over the data, or saves the solution ""snapshot"" in an hdf5 file for later POD computation. The POD matrix is also saved in an hdf5 file. ## Related Work; There are a couple projects using libROM:; - For projection-based model order reduction (PROM) in the branch feature_MOR; - It is also being used with the NEMO solver to further test the PROM capabilities; - libROM was used in a prior project that used the POD matrix as input to a neural network (to be published). - libROM also has other features, like help choosing the hyper-parameter nodes (a PROM step) and under development are black-box modeling methods like dynamic mode decomposition (DMD). Please let me know if you have any questions / comments / recommendations!. I have tested this on macOS and linux. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Steps to Compile:. 1. Compile libROM; 2. Compile SU2 with the following meson options:; `./meson.py build --prefix=/your/prefix -Denable-librom=true -Dlibrom_root=/path/to/libROM`; 3. You may need to add the environment variable:; `export LD_LIBRARY_PATH=/path/to/libROM/build/:$LD_LIBRARY_PATH`; 4. You can test by adding `SAVE_LIBROM=YES` to the Quickstart config",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1310:1597,test,test,1597,https://su2code.github.io,https://github.com/su2code/SU2/pull/1310,2,['test'],['test']
Testability,"ive. Is it for continuous adjoint?; > ; > As far as I see it that function should not be called with the discrete adjoint solver. `CAdjEulerSolver::SetIntBoundary_Jump ` is only called by `CAdjFluidIteration::Preprocess` which should happen during a discrete adjoint run (but as far as i understand you that is not happening currently). All `CAdj<sth>` things are related to the continuous adjoint and `CDiscAdj<sth>` to the discrete adjoint.; > Boundary conditions (this one being internal) need to be explicitly derived and set in the continuous adjoint but not in the discrete adjoint so your understanding was going in the right direction. (Although I am no expert in cont.adj. things either :) ). So, it sounds like I don't need to care about it as long as I use discrete adjoint then. > > VENKATAKRISHNAN limiter: With MARKER_NEARFIELD defined, this limiter causes strange pressure disturbance near the nearfield boundary. I tried to find a cause but no luck so far. (That's why I'm using VAN_ALBADA_EDGE in the test cases.); > ; > you can try maybe to tune the `VENKAT_LIMITER_COEFF` in the cfg, but I have no better hint for now. I forgot to mention. I have tested VENKATAKRISHNAN limiter with v6. I am hoping that it is fixed by now after reading [this discussion](https://github.com/su2code/SU2/issues/917). > > Bad match for point 47742. Nearest donor distance: 3.6066950142e+00.: Lots of this message shows up. I don't know what this message is for. It doesn't seem to cause any real issues, so I've been ignoring them.; > ; > That is certainly sth I would not ignore :) Does this occur with the case you added (i.e. no periodic bc)? Does it also occur when you run single core? maybe it is matching between internal MPI boundaries. In that case yould can add RANK to the VOLUME_OUTPUT and take more and more cores and see when it fails -> look at the Rank boundaries and maybe you notice sth. Yes, it occurs with the case I added. I haven't tested with single core. As far as I see in `CP",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1329#issuecomment-885501847:1273,test,test,1273,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-885501847,1,['test'],['test']
Testability,"iversity of Technology.; In August 2017 my colleague and I attended SU2 Summer School in; Kaiserslautern and met the Sci-Comp team developing the SU2. I think moving the main tutorials to the main repository is a good idea. We; declared to contribute some validation cases and written tutorials and; having this in main repository will ease the process of adding/modifying; the docs to a simple pull request. I also have a suggestion regarding the Test Cases and Tutorial files. I; apologize if this is the wrong place or this has been discussed already,; but still will give it a try:; - Test cases folder from SU2/su2code repository shall be moved to the; SU2/TestCases repository. Rationale: this makes one repository to store the; test case *.cfg files and mesh files.; - There shall be a TestCases/Mesh folder to store all the meshes needed for; Test Cases files, without subdivisions for RANS, Euler etc subfolders.; Considering that multiple test cases use the same mesh and all the mesh; files are distinct, this solution generates one place to store all the mesh; files. Should a user perform a test case, he/she will find the mesh by name; referenced in the *.cfg file instead searching thru multiple folders. This; will also help avoiding unnecessary copies of mesh files.; - The same should be done for Tutorial files: Tutorial/Mesh folder for; storing meshes (duplicating these few files from TestCases/Mesh should not; be a problem IMO, but will really help a new user to get up to speed with; SU2); - I have no clear opinion on where the Tutorial files folder should be; stored. But considering moving written tutorials to main repository i think; that tutorial files should also be stored in main SU2/su2code repository. Best regards and Happy New Year; Jędrzej. 2017-12-30 23:45 GMT+01:00 Tim Albring <notifications@github.com>:. > What do you think of moving the written tutorials also to the main; > repository ? Then we can have links in the wiki to the markdown files like; > thi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/485#issuecomment-354736415:1014,test,test,1014,https://su2code.github.io,https://github.com/su2code/SU2/pull/485#issuecomment-354736415,1,['test'],['test']
Testability,"k's 2Temperature model. The system of equations to solve is the conservation of each chemical species mass, momentum, total energy and vibrational energy. Both inviscid and viscous simulations are available, respectively, solver NEMO_EULER and NEMO_NAVIER_STOKES. Most of the changes consisted in the addition of new files (listed below), and all the necessary changes in the high-level classes (drivers, integration, config).; ; new files concerning this solver:; output/CNEMOCompOutput.cpp; variables/CNEMOEulerVariable.cpp; variables/CNEMONSVariable.cpp; solvers/CNEMOEulerSolver.cpp; solvers/CNEMONSSolver.cpp; numerics/NEMO/convection/lax.cpp; numerics/NEMO/convection/roe.cpp; numerics/NEMO/convection/ausm.cpp; numerics/NEMO/convection/ausmplusup2.cpp; numerics/NEMO/convection/ausmpwplus.cpp; numerics/NEMO/convection/msw.cpp; numerics/NEMO/NEMO_diffusion.cpp; numerics/NEMO/NEMO_sources.cpp. Future/ongoing work is looking into making use of the CFluidModel class , introducing a new child class CNEMOGas to handle all mixture/thermodynamics/transport/chemistry related computations - follwing the generic SU2 structure. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [not yet] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1014:2038,test,test,2038,https://su2code.github.io,https://github.com/su2code/SU2/pull/1014,1,['test'],['test']
Testability,"k. This leads to a lot of if-conditions and special cases we have to consider and its hard to actually see what their overall task actually is. One example that I also used to demonstrate a possible solution is the Fixed CL computation. We have routines in CIteration and in CEulerSolver and they modify certain behavior of the baseline code. But its complicated to figure out which routines actually belong together, what they do and when they are called. ### Possible solution. To solve that problem I propose a modular structure that puts all routines that are responsible for a certain functional task together in the same class. At certain predefined places in the code they can modify things by overloading certain functions. These functions are called *Hooks*. What arguments these hooks provide can be different depending on where they are called. As an example I did a quick implementation of such a framework and defined a Fixed CL module. . Right now, I defined a global list of modules (with only one module currently). We can also define modules lists per class, e.g. for CDriver, CIteration, CSolver. But that would mean that we have to provide potentially more than one class per module, which kind of defeats the purpose again. I will add some further comments below. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/982:2184,test,test,2184,https://su2code.github.io,https://github.com/su2code/SU2/pull/982,1,['test'],['test']
Testability,"k.a. ""RPM"")](https://doi.org/10.1137/0730057) using the computational graph for precise derivative information. This preliminary result with one basis vector indicates that the procedure can be effective at very low additional cost (for n basis vectors, it mainly reduces to n scalar products of the current fixed-point iterate with the basis vectors, the Newton step is cheap as n is small). The residuals are obtained from a fully coupled adjoint CHT problem (2d heated cylinder in laminar flow) with a heatflux objective function. ![plot](https://user-images.githubusercontent.com/22639394/122736716-9ad18000-d280-11eb-9983-c2d47d434dc5.png). (Purple: No correction applied, Green/Blue: Usage of 1-dim. basis after extraction of one basis vector at around 500 iterations, Yellow: MPI run with two processes using the manual but MPI-compatible Gram-Schmidt-QR-decomposition for identification of basis vectors.); ; **The code is WIP.** It needs a lot of additions, changes and testing, though the overall structure should be clear from what's already implemented. ToDo's:; - Remove Eigen dependencies, not needed anymore; - Add a meaningful testcase; - Add eigenvalue estimation / QR criterion values to screen and history output fields; - Implement a basisMaintenance()-routine; - Figure out a proper base class for both `CQuasiNewtonInvLeastSquares` and `CNewtonUpdateOnSubspace`; - Figure out further algorithmic strategies for multiphysics problems, now the default is to create the basis in the outer loop, and to apply it for corrections in the inner. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-bo",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1217:1531,test,testing,1531,https://su2code.github.io,https://github.com/su2code/SU2/pull/1217,1,['test'],['testing']
Testability,"kc.exe; C compiler for the build machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the build machine: gcc ld.bfd 2.30; None of 'AR' are defined in the environment, not changing global flags.; None of 'CXX' are defined in the environment, not changing global flags.; None of 'CXXFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity testing C++ compiler: c++; Is cross compiler: False.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: c++ D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.cc -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe; C++ compiler for the build machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the build machine: c++ ld.bfd 2.30; None of 'CC' are defined in the environment, not changing global flags.; None of 'CFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity testing C compiler: gcc; Is cross compiler: False.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: gcc D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.c -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe -pipe; Sanity check compile stdout:; ; --",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:2646,test,test,2646,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['test'],['test']
Testability,"ke. You want more granular test coverage that can demonstrate what broke.; + You are fixing a very small bug. You know that you should prove that your bug fix worked, but it doesn't seem logical to dedicate an entire validation case to one small bug fix. You want to write a small test for a small fix. In all of these cases, unit testing fills a unique role. Unit testing increases time spent in development, but decreases the amount of time spent in bug-fixing and maintaining. For more information, see this [relevant Stack Exchange question.](https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes). ## What do I propose?. Our research group at UT Austin has implemented a unit testing framework on our branch, which we're happy with. Some choices were arbitrary, and some choices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more information on autotool's setup, see [their documentation](https://www.gnu.org/software/automake/manual/html_node/Tests.html). Since autotools is the build system for SU2, this involves minimal changes. Using automake, the build process for building unit tests becomes:. ```; ./bootstrap; ./configure; make; make check; ```. We use [Boost's unit testing framework](https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html). This provides a convenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time we push commits or submit a pull request, the unit tests are run and checked. ## What is my vision for unit testing in SU2?. I am *not* proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698:1885,test,testing,1885,https://su2code.github.io,https://github.com/su2code/SU2/issues/698,1,['test'],['testing']
Testability,"ke[2]: Leaving directory `/home/antodech/SU2-4.1.0/externals'; make[1]: Leaving directory `/home/antodech/SU2-4.1.0/externals'; Making all in Common/lib; make[1]: Entering directory `/home/antodech/SU2-4.1.0/Common/lib'; g++ -DPACKAGE_NAME=\""SU2\"" -DPACKAGE_TARNAME=\""SU2\"" -DPACKAGE_VERSION=\""4.1.0\"" -DPACKAGE_STRING=\""SU2\ 4.1.0\"" -DPACKAGE_BUGREPORT=\""su2code-dev@lists.stanford.edu\"" -DPACKAGE_URL=\""https://github.com/su2code\"" -DPACKAGE=\""SU2\"" -DVERSION=\""4.1.0\"" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DSIZEOF_SHORT_INT=2 -DSIZEOF_INT=4 -DSIZEOF_UNSIGNED_INT=4 -DSIZEOF_LONG_INT=8 -DSIZEOF_FLOAT=4 -DSIZEOF_DOUBLE=8 -DSIZEOF_VOID_P=8 -I. -DHAVE_CGNS -I/gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/include -g -O2 -MT libSU2_a-geometry_structure.o -MD -MP -MF .deps/libSU2_a-geometry_structure.Tpo -c -o libSU2_a-geometry_structure.o `test -f '../src/geometry_structure.cpp' || echo './'`../src/geometry_structure.cpp; ../src/geometry_structure.cpp: In member function ‘void CPhysicalGeometry::Read_CGNS_Format_Parallel(CConfig*, std::string, short unsigned int, short unsigned int)’:; ../src/geometry_structure.cpp:6727: error: ‘ZoneType_t’ was not declared in this scope; ../src/geometry_structure.cpp:6727: error: expected ‘;’ before ‘zonetype’; ../src/geometry_structure.cpp:6728: error: ‘DataType_t’ was not declared in this scope; ../src/geometry_structure.cpp:6728: error: expected ‘;’ before ‘datatype’; ../src/geometry_structure.cpp:6731: error: ‘ElementType_t’ was not declared in this scope; ../src/geometry_structure.cpp:6731: error: expected ‘;’ before ‘elemType’; ../src/geometry_structure.cpp:6938: error: ‘zonetype’ was not declared in this scope; ../src/geometry_structure.cpp:7031: error: ‘datatype’ was not declared in this scope; ../src/geometry_structure.cpp:7040: error: ‘datatype’ was not declared in this scope; ../",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250:1423,test,test,1423,https://su2code.github.io,https://github.com/su2code/SU2/issues/250,1,['test'],['test']
Testability,"ld prove that your bug fix worked, but it doesn't seem logical to dedicate an entire validation case to one small bug fix. You want to write a small test for a small fix. In all of these cases, unit testing fills a unique role. Unit testing increases time spent in development, but decreases the amount of time spent in bug-fixing and maintaining. For more information, see this relevant Stack Exchange question.<https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes>. What do I propose?. My research group at UT Austing has implemented a unit testing framework on our branch, which we're happy with. Some choices were arbitrary, and some choices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more information on autotool's setup, see their documentation<https://www.gnu.org/software/automake/manual/html_node/Tests.html>. Since autotools is the build system for SU2, this involves minimal changes. Using automake, the build process for building unit tests becomes:. '''; ./bootstrap; ./configure; make; make check; '''. We use Boost's unit testing framework<https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>. This provides a convenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time we push commits or submit a pull request, the unit tests are run and checked. What is my vision for unit testing in SU2?. I am not proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are fir",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:2879,Test,Tests,2879,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,1,['Test'],['Tests']
Testability,"ld; Build type: native build; None of 'PKG_CONFIG_PATH' are defined in the environment, not changing global flags.; None of 'PKG_CONFIG_PATH' are defined in the environment, not changing global flags.; Project name: SU2; Project version: 7.1.1 ""Blackbird""; None of 'CC' are defined in the environment, not changing global flags.; None of 'CFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity testing C compiler: gcc; Is cross compiler: False.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: gcc D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.c -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe; C compiler for the build machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the build machine: gcc ld.bfd 2.30; None of 'AR' are defined in the environment, not changing global flags.; None of 'CXX' are defined in the environment, not changing global flags.; None of 'CXXFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity testing C++ compiler: c++; Is cross compiler: False.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: c++ D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.cc -o D:\Programme\SU2-7.1.1\b",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:1543,test,test,1543,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['test'],['test']
Testability,"le besides the .su2 and the .cfg ones. Even the _Constrained shape design of a transonic turbulent airfoil tutorial_ does not work. The required files (_initial solution files for the solver and adjoint solution_flow.dat, solution_adj_cd.dat, and solution_adj_cmz.dat_) are given from the beginning and if they are not added to the path in which the tutorial will be run, it cannot be completed. I also tried the **turb_ONERAM6 Test case** and personal files as well. Furthermore, I tried to cheat (?) creating a solution_adj_cd.dat and solution_adj_cmz.dat files from the EULER ADJOINT problem because it was the only way I had to obtain that file: the RANS ADJOINT problem performed better than expected reaching a feasible geometry which is not the one obtained in the tutorial. I do not get why I have this problem, if it is correct or not. Has anyone experienced this before?. Actually, I think I will run this kind of problem with the cheating (?) procedure described before because I need to go ahead with the work and it seems to work relatively fine. In conclusion, the **ADJOINT** problem with **RANS/NAVIER_STOKES** solver does not work because it needs **solution_adj_*.dat** which are created autonomously with EULER solver. I am using SU2 V7.2.1 but I also tested them with versions from this to 7.0.0. The files from the tutorial without solution_*.dat files:; [turb_SA_RAE2822.zip](https://github.com/su2code/SU2/files/7639785/turb_SA_RAE2822.zip). Personal files:; [naca0012_8_1_0_700.zip](https://github.com/su2code/SU2/files/7640051/naca0012_8_1_0_700.zip). The command that I use is: python shape_optimization.py -n 8 -g CONTINUOUS_ADJOINT -o SLSQP -f used_file.cfg. UPDATE: I also compiled the code in Ubuntu 20.04 enabling the DISCRETE_ADJOINT functionality but I always receive the same message. How can I create those solution_adj_*.dat files to start the ADJOINT problem?. Have I missed something written in other tutorials?. Thank you very much for all of the support.</div>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1466:2135,test,tested,2135,https://su2code.github.io,https://github.com/su2code/SU2/issues/1466,1,['test'],['tested']
Testability,"le to have a good set of unit tests. Particularly when you don't have good acceptance tests (hard in a fast; moving research code), it gives a developer confidence that new changes; aren't being fundamental assumptions in the code. It lets sub module; developers build ""armor"" around those assumptions. It is a bit of a cultural thing. People who want robust bits write more.; Some people wire less. At the bank I once worked at, unit tests were required for every module.; Some people wrote code that tested almost nothing. And it would get; through code review that way. Eventually, I added coverage analysis to the check in that exposed this; practice that gave a false assurance that things were ok. More when I can think a bit more on this and get to a real keyboard!. Pat. On Wed, Jun 5, 2019 at 1:50 PM Juan Jose Alonso <jjalonso@stanford.edu>; wrote:. > Clark,; >; > Thanks for putting this idea out there. In my experience, unit testing; > has been an intrinsic part of the the modus operandi in many multi-physics; > codes at DoE and has been well worth the additional effort. In cases where; > it makes sense (as described by Clark and in the Stack Exchange discussion); > I would advocate for using it moving forward. There may also be some; > issues that arise multiple times in existing code where a retroactive; > application of unit testing may also make sense. I am copying Pat Miller,; > formerly with DoE, who may have more experience on whether such unit; > testing approaches were useful/worth the investment in some major codes he; > worked on.; >; > Best,; >; > Juan; >; >; > On Jun 4, 2019, at 2:14 PM, Clark Pederson <notifications@github.com>; > wrote:; >; > I propose adding a unit-testing framework and unit-tests to SU2. After; > chatting with @economon <https://github.com/economon>, I've decided to; > move the discussion here to get additional input.; > What is unit testing?; >; > For those not familiar with unit testing, unit testing allows the testing; > of small ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:1042,test,testing,1042,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,1,['test'],['testing']
Testability,"led by `CAdjFluidIteration::Preprocess` which should happen during a discrete adjoint run (but as far as i understand you that is not happening currently). All `CAdj<sth>` things are related to the continuous adjoint and `CDiscAdj<sth>` to the discrete adjoint.; > Boundary conditions (this one being internal) need to be explicitly derived and set in the continuous adjoint but not in the discrete adjoint so your understanding was going in the right direction. (Although I am no expert in cont.adj. things either :) ). So, it sounds like I don't need to care about it as long as I use discrete adjoint then. > > VENKATAKRISHNAN limiter: With MARKER_NEARFIELD defined, this limiter causes strange pressure disturbance near the nearfield boundary. I tried to find a cause but no luck so far. (That's why I'm using VAN_ALBADA_EDGE in the test cases.); > ; > you can try maybe to tune the `VENKAT_LIMITER_COEFF` in the cfg, but I have no better hint for now. I forgot to mention. I have tested VENKATAKRISHNAN limiter with v6. I am hoping that it is fixed by now after reading [this discussion](https://github.com/su2code/SU2/issues/917). > > Bad match for point 47742. Nearest donor distance: 3.6066950142e+00.: Lots of this message shows up. I don't know what this message is for. It doesn't seem to cause any real issues, so I've been ignoring them.; > ; > That is certainly sth I would not ignore :) Does this occur with the case you added (i.e. no periodic bc)? Does it also occur when you run single core? maybe it is matching between internal MPI boundaries. In that case yould can add RANK to the VOLUME_OUTPUT and take more and more cores and see when it fails -> look at the Rank boundaries and maybe you notice sth. Yes, it occurs with the case I added. I haven't tested with single core. As far as I see in `CPhysicalGeometry::MatchNearField`, the code looks for a nearest point to a point on the nearfield boundary. If it exceeds 1e-1 (which is usually the case if you have real scale mesh)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1329#issuecomment-885501847:1421,test,tested,1421,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-885501847,1,['test'],['tested']
Testability,"ll test for a small fix. In all of these cases, unit testing fills a unique role. Unit testing increases time spent in development, but decreases the amount of time spent in bug-fixing and maintaining. For more information, see this [relevant Stack Exchange question.](https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes). ## What do I propose?. Our research group at UT Austin has implemented a unit testing framework on our branch, which we're happy with. Some choices were arbitrary, and some choices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more information on autotool's setup, see [their documentation](https://www.gnu.org/software/automake/manual/html_node/Tests.html). Since autotools is the build system for SU2, this involves minimal changes. Using automake, the build process for building unit tests becomes:. ```; ./bootstrap; ./configure; make; make check; ```. We use [Boost's unit testing framework](https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html). This provides a convenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time we push commits or submit a pull request, the unit tests are run and checked. ## What is my vision for unit testing in SU2?. I am *not* proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698:2204,test,tests,2204,https://su2code.github.io,https://github.com/su2code/SU2/issues/698,1,['test'],['tests']
Testability,"lobal flags.; Sanity check compiler command line: gcc D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.c -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; None of 'AR' are defined in the environment, not changing global flags.; None of 'CXX' are defined in the environment, not changing global flags.; None of 'CXXFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity testing C++ compiler: c++; Is cross compiler: False.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: c++ D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.cc -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Build machine cpu family: x86_64; Build machine cpu: x86_64; Host machine cpu family: x86_64; Host machine cpu: x86_64; Target machine cpu family: x86_64; Target machine cpu: x86_64; Program python3 found: YES (C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe); Pkg-config binary for MachineChoice.HOST is not cached.; None of 'PKG_CONFIG' are defined i",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:4381,test,testing,4381,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['test'],['testing']
Testability,"looks good to me, except that there are conflicts. Please fix the conflict - see command line instructions provided by github - and push the change into your branch. When your branch is updated the pull request will be automatically updated and the regression test will be run.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/214#issuecomment-162606139:260,test,test,260,https://su2code.github.io,https://github.com/su2code/SU2/pull/214#issuecomment-162606139,1,['test'],['test']
Testability,"lve this issue:; - Stop removing multigrid levels in CMultiGridGeometry::CMultiGridGeometry() or improve the function. Why do we need to check whether the ratio is below a certain level? We should just check if the coarse level is empty, i.e., no control volumes.; - When removing a MG level in CMultiGridGeometry::CMultiGridGeometry() subtract one to the index of the finest grid, i.e., config->SubtractFinestMesh();. What are your thoughts?. After solving the previous issues, with mpirun and depending on the number of cores to be used SU2 will still produce a segmentation fault when using Full MG. This problem is not present when using mpiexec. I traced it back and found that in CFVMFlowSolverBase<V, FlowRegime>::Friction_Forces the method GetNormal_Neighbor() from CVertex returns a non existing point. Before delving into the problem would be nice if you could corroborate these findings. My versions of mpirun and mpiexec are 3.1.3 and 3.3 respectively. ## Additional Work; Additionally I have corrected the description of the variable Convergence_FullMG in CIntegration.hpp. Related to this same variable, what is the definition of convergence for the full multigrid?; Further, this parameter, Convergence_FullMG, is set to false in CIntegration::CIntegration() and never updated i.e., there is no evaluation whether the FullMG has converged or not. Consequently, the function SetProlongated_Solution() in CMultiGridIntegration::MultiGrid_Iteration() is never executed. ## PR Checklist; - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1362:3372,test,test,3372,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362,1,['test'],['test']
Testability,"m_plane_testcases.gz); tar xzf Sym_plane_testcases.gz. 1. Compressible half cylinder, navier-stokes, no Turb-model, Pin has a solid wall, farfield around. You see pressure contour lines:; ![compr_half_cyl_p](https://user-images.githubusercontent.com/31306376/53201756-19707100-3625-11e9-9cb6-8a62fcd6787e.JPG). 2. Incompressible half cylinder in channel, navier-stokes, no turb-model, velocity inlet pressure outlet. You see zebra shaded pressure contour lines:; ![p_incomp_2d](https://user-images.githubusercontent.com/31306376/53201787-2e4d0480-3625-11e9-8537-f1ca5ef39f9d.JPG). 3. 3D incompressible pin setup, SST turb model. You see Pressure-contour lines but more important are the velocity vectors. In the current code they have a normal component and therefore a (non-irrelevant) flux over the symmetry boundary:; ![closeup_vectors](https://user-images.githubusercontent.com/31306376/53201975-9c91c700-3625-11e9-95b7-8337cc159a23.jpg). Additional to that I tested in rotated domains such that the symmetry plane does not coincide with one of the axis. I tested the Navier-Stokes ONERA-M6 with SA turb-model and although this PR achieves a considerable lower velocity in symmetry-normal direction than current develop, it is still quite large. I suspect it is due to general ""bad"" convergence (2-3 orders of magnitude) of that case. ; So, I encourage everyone that has a well converging compressibe 3D case with symmetry plane to test that or to send it to me. Every regression test with symmetry plane in it will fail, so I didn't change the values yet. From what I have seen, only these are failing. I will correct these (fml) and commit if everyone is alright with the implementation otherwise. . Let me know if you have any comments/suggestions etc., or if you tested with your cases and can confirm (or not) that this PR is correct (that would be awesome). Cheers, Tobi. ## Related Work; None known to me. ## PR Checklist; I will check the warnings based on travis output and report. No ne",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/657:2752,test,tested,2752,https://su2code.github.io,https://github.com/su2code/SU2/pull/657,1,['test'],['tested']
Testability,"major codes he; > worked on.; >; > Best,; >; > Juan; >; >; > On Jun 4, 2019, at 2:14 PM, Clark Pederson <notifications@github.com>; > wrote:; >; > I propose adding a unit-testing framework and unit-tests to SU2. After; > chatting with @economon <https://github.com/economon>, I've decided to; > move the discussion here to get additional input.; > What is unit testing?; >; > For those not familiar with unit testing, unit testing allows the testing; > of small bits of behavior, ideally using isolated bits of code. It is not; > intended to replace validation testing or formal verification tests.; > Instead, it serves a unique purpose. Consider the three following use cases:; >; > - You're developing a new feature, and you want to test it to see if; > it works. You could do a full simulation, but that takes a lot of time and; > computing power. You want to check if your new behavior behaves as you; > suspect before you throw a lot of resources at it.; > - You submit a PR and discover that one of the regression tests has; > failed. But...why? You know that something is broken, but its hard to track; > down what broke. You want more granular test coverage that can demonstrate; > what broke.; > - You are fixing a very small bug. You know that you should prove that; > your bug fix worked, but it doesn't seem logical to dedicate an entire; > validation case to one small bug fix. You want to write a small test for a; > small fix.; >; > In all of these cases, unit testing fills a unique role. Unit testing; > increases time spent in development, but decreases the amount of time spent; > in bug-fixing and maintaining.; >; > For more information, see this relevant Stack Exchange question.; > <https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes>; > What do I propose?; >; > My research group at UT Austing has implemented a unit testing framework; > on our branch, which we're happy with. Some choices were arbitrary, and; ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:2663,test,tests,2663,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,1,['test'],['tests']
Testability,"measurement (see below). ## Parallel Unsteady Freq=100; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `OUTPUT_WRT_FREQ= 100`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Parallel Steady Freq=1; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `TIME_DOMAIN = NO` and comment out `TIME_MARCHING`, `TIME_STEP`, `TIME_ITER`; * `INNER_ITER= 20000`; * `OUTPUT_WRT_FREQ= 1`; * `mv restart_flow_00499.dat restart_flow.dat`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Parallel Steady Freq=100; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `TIME_DOMAIN = NO` and comment out `TIME_MARCHING`, `TIME_STEP`, `TIME_ITER`; * `INNER_ITER= 20000`; * `OUTPUT_WRT_FREQ= 100`; * `mv restart_flow_00499.dat restart_flow.dat`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below).; ; ## Serial Steady Freq=1; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `TIME_DOMAIN = NO` and comment out `TIME_MARCHING`, `TIME_STEP`, `TIME_ITER`; * `INNER_ITER= 20000`; * `OUTPUT_WRT_FREQ= 1`; * `mv restart_flow_00499.dat restart_flow.dat`; * `SU2_CFD unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Memory measurement; I measured the memory usage with a minutely cronjob of the following snippet:. ```; #!/bin/bash. dir=/path/to/testdir. #list of PIDs:; pid_list='XXXX XXXX'. cd $dir; for PID in $pid_list; do; 	now=$(date +""%Y%m%d%H%M""); 	current_kb=$(pmap $PID| tail -n 1 | awk '{print $3}') # current memory; 	echo $now,$current_kb >> memory_history_$PID.csv; done; ```. **Desktop (please complete the following information):**; - OS: openSUSE Leap 15.2; - C++ compiler and version: gcc 7.5.0; - MPI implementation and version: OpenMPI 4.1.0; - SU2 Version: v7.1.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1261:3758,test,testdir,3758,https://su2code.github.io,https://github.com/su2code/SU2/issues/1261,1,['test'],['testdir']
Testability,meson test failed about su2@7.3.1 on centos8_aarch64 but sucesses on centos8_x86_64,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1609:6,test,test,6,https://su2code.github.io,https://github.com/su2code/SU2/issues/1609,1,['test'],['test']
Testability,meson test failed about su2@master on canetos8_aarch64,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1859:6,test,test,6,https://su2code.github.io,https://github.com/su2code/SU2/issues/1859,1,['test'],['test']
Testability,"metric formulation. In the baseline model, the only term that has an impact is:; ![image](https://github.com/su2code/SU2/assets/65549824/2afb2da5-4fb5-460d-86da-dfec60fb689f); Rewriting it in cylindrical coordinates, an additional source term is obtained:; ![image](https://github.com/su2code/SU2/assets/65549824/7e2a7f15-acae-49b7-9db7-7e65630c0045). In the Negative variant of the model, this source varies slightly due to the presence of $f_n$:; ![image](https://github.com/su2code/SU2/assets/65549824/fdb23203-1c0a-45ea-94ce-e0e6190293db). The compressibility correction also requires a new source. Rewriting; ![image](https://github.com/su2code/SU2/assets/65549824/a639b5a9-18a8-4c6a-aa5a-dfdac00a2e38); in cylindrical coordinates yields the new source; ![image](https://github.com/su2code/SU2/assets/65549824/2c2d7c80-2db3-4a6c-bdd8-68a5e76aaa46). For the other model variants, it looks like the modification of strain magnitude (done for SST) takes care of the differences, but I might be mistaken. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; #1565 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2197:2008,test,test,2008,https://su2code.github.io,https://github.com/su2code/SU2/pull/2197,1,['test'],['test']
Testability,missing testcase and doc for implementation of 'prevention of mesh intersection',MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1154:8,test,testcase,8,https://su2code.github.io,https://github.com/su2code/SU2/issues/1154,1,['test'],['testcase']
Testability,"mulation utilizing Euler's convective scheme. ; Subsequently, the flow field is computed correctly and the solution is converged. The solution was obtained setting up the turbomachinery simulation options available in SU2. After this initial procedure the FFD Box was successfully generated ( FFD_DEGREE = 2,2,2 ) and attached to the domain as explained in the tutorials ( *using SU2_DEF* ). The FFD box appears as follows:. *FFD box edges: green ; FFD box control point: yellow; There is no intersection between FFD edges and periodic boundaries*. ![Screenshot (158)](https://user-images.githubusercontent.com/96534491/236707553-92fb9e5a-3808-4ea0-a02e-43b574de44c0.png). It was intended to operate each SU2 module manually: . 1. **SU2_DEF** -> FFD box generation; 2. **SU2_CFD** -> flow field computation; 3. **SU2_CFD_AD** -> adjoint solution; 4. **SU2_DOT_AD** -> gradient calculation; 5. **SU2_DEF** -> shape deformation. ## **Shape deformation test**; Before the actual gradients computation it was preferred to perform a deformation test with the presented settings: . % ----------------------- DESIGN VARIABLE PARAMETERS --------------------------%. DV_KIND= FFD_CONTROL_POINT, FFD_CONTROL_POINT, FFD_CONTROL_POINT, FFD_CONTROL_POINT; %; % Marker of the surface in which we are going apply the shape deformation; DV_MARKER= ( BLADE1 ); %; % Parameters of the shape deformation ; % 	- FFD_CONTROL_POINT ( FFD_BoxTag, i_Ind, j_Ind, k_Ind, x_Disp, y_Disp, z_Disp ); %; DV_PARAM= ( BLADE_BOX, 0, 0, 0, 1.0, 0.0, 0.0 ); ( BLADE_BOX, 0, 1, 0, 0.0, 1.0, 0.0 ); ( BLADE_BOX, 0, 1, 1, 0.0, 1.0, 0.0 ); ( BLADE_BOX, 1, 1, 1, 0.0, 1.0, 0.0 ); %; % New value of the shape deformation; DV_VALUE= 0.02, 0.02, 0.02, 0.02; %; OPT_RELAX_FACTOR = 1.0. Moreover, some surfaces were re-assigned to avoid any plane fixing (that was, intentionally, set as FFD_CONTINUITY = USER _INPUT): . MARKER_SYM = ( HUB, SHROUD, BLADE1, PER1, PER2 ). ## **Results**; For any given linear solver deformation and parameter the ar",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2025:1408,test,test,1408,https://su2code.github.io,https://github.com/su2code/SU2/issues/2025,2,['test'],['test']
Testability,"n for SU2_DEF; - Merge branch 'develop' into feature_dualoutput; - Removed deprecated options from quicstart config.; - Working version of the compressible actuator disk; - Updated fixed CL mode.; - Very minor change; - Merge branch 'develop' into feature_dualoutput; - Final push to 3.2.9; - Merge branch 'develop'; - Minor change; - Minor change; - Small change; - Minor change; - Bug fixing: unsigned short val_vertex --> unsigned long val_vertex; - CFL adapt now works for adjoint problems; - Merge branch 'develop' into feature_dualoutput; - Fixing a typo; - Fix in the Euler BC for grid movement cases; - merging and fixing conflicts bwtn feature_dealloc and develop; - dealloc; - Time spectral fix.; - Merging some recent bug fixes from master into the develop branch to keep nsync.; - Merge branch 'feature_gridvel_fix' into develop; - Merge remote-tracking branch 'upstream/develop' into feature_Deallocation; - correcting issues, adding more deallocation; - fixed uninitialized pointers in CConfig; - further deallocation; - some corrections needed to pass reg tests; - fixed some dealloc issues that caused errors in euler adj; - modifications needed to (mostly) pass reg tests; all run w/o segfault. File Changes; - D Articles/AIAA_2013-0287.pdf (0) ; - D Articles/AIAA_2014-0243.pdf (0) ; - M Common/doc/docmain.hpp (46) ; - M Common/include/config_structure.hpp (1038) ; - M Common/include/config_structure.inl (191) ; - M Common/include/dual_grid_structure.hpp (43) ; - M Common/include/dual_grid_structure.inl (17) ; - M Common/include/geometry_structure.hpp (432) ; - M Common/include/geometry_structure.inl (39) ; - M Common/include/grid_adaptation_structure.hpp (24) ; - M Common/include/grid_adaptation_structure.inl (15) ; - M Common/include/grid_movement_structure.hpp (330) ; - M Common/include/grid_movement_structure.inl (45) ; - M Common/include/linear_solvers_structure.hpp (78) ; - M Common/include/linear_solvers_structure.inl (15) ; - M Common/include/matrix_structure.h",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:10470,test,tests,10470,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['test'],['tests']
Testability,"n/docs/MIGRATION.md"">migration documentation</a>.</li>; <li>As well as the underlying npm package, <a href=""https://github.com/actions/toolkit/tree/main/packages/artifact""><code>@​actions/artifact</code></a> documentation.</li>; </ol>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/bflad""><code>@​bflad</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/download-artifact/pull/194"">actions/download-artifact#194</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/download-artifact/compare/v3...v4.0.0"">https://github.com/actions/download-artifact/compare/v3...v4.0.0</a></p>; <h2>v3.0.2</h2>; <ul>; <li>Bump <code>@actions/artifact</code> to v1.1.1 - <a href=""https://redirect.github.com/actions/download-artifact/pull/195"">actions/download-artifact#195</a></li>; <li>Fixed a bug in Node16 where if an HTTP download finished too quickly (&lt;1ms, e.g. when it's mocked) we attempt to delete a temp file that has not been created yet <a href=""hhttps://redirect.github.com/actions/toolkit/pull/1278"">actions/toolkit#1278</a></li>; </ul>; <h2>v3.0.1</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/download-artifact/pull/178"">Bump <code>@​actions/core</code> to 1.10.0</a></li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/download-artifact/commit/c850b930e6ba138125429b7e5c93fc707a7f8427""><code>c850b93</code></a> Merge pull request <a href=""https://redirect.github.com/actions/download-artifact/issues/307"">#307</a> from bethanyj28/main</li>; <li><a href=""https://github.com/actions/download-artifact/commit/6fd111f15ace90c9fbd0d73880db8338a776aaed""><code>6fd111f</code></a> update <code>@​actions/artifact</code></li>; <li><a href=""https://github.com/actions/download-artifact/commit/87c55149d96e628cc2ef7e6fc2aab372015aec85""><code>87c5514</code></a> Merge pull request <a href=""https://redirect.github.com/actions/dow",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2230:2164,mock,mocked,2164,https://su2code.github.io,https://github.com/su2code/SU2/pull/2230,1,['mock'],['mocked']
Testability,"ncing in the MUSCL scheme:; <img width=""359"" alt=""Screen Shot 2020-07-17 at 11 35 28 AM"" src=""https://user-images.githubusercontent.com/19416354/87819813-b981f800-c821-11ea-85b9-c9427e7b5378.png"">; where ; - X=0 gives the original unstructured formulation for second-order variable extrapolation (default); - X=-1 gives second-order fully-upwinded MUSCL-type variable extrapolation; - X=1/2 gives third-order variable extrapolation to the cell face; - X=1/3 gives a third-order approximation to the derivative at the node (the value used in the Piperno limiter to achieve 4th order dissipation). The reasons for these additions are; - The Piperno limiter is implemented in Inria's Wolf solver and seems to be used in a lot of their mesh adaptation work (see these references for [Euler](https://hal.inria.fr/hal-02378738v2/document) and [RANS](https://hal.inria.fr/tel-01962318/file/these_archivage_3570223.pdf)); - Some preliminary tests with the Piperno limiter have converged solutions on triangulated BL meshes that @jayantmukho and I couldn't get to converge with other limiters in SU2 (e.g. triangulated DSMA661 meshes from TMR); - The MUSCL parameter exists in other solvers (FUN3D, CFL3D, Wolf) and is used by the NASA codes for many of the TMR cases (e.g. CFL3D uses 1/3 and FUN3D uses 1/2 for the DSMA661 case). Further testing still needs to be done on the effect of the MUSCL parameter with other limiters, but leaving the value as default won't affect any of the test cases. ## Relevant config parameters; Piperno limiter:; ```; SLOPE_LIMITER_FLOW= PIPERNO; ```; MUSCL parameter:; ```; % Parameter to control upwinding in MUSCL extrapolation; % Kappa = 1/3 for Piperno limiter, Default = 0 otherwise; MUSCL_KAPPA= 0.0; ```. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1050:1200,test,tests,1200,https://su2code.github.io,https://github.com/su2code/SU2/pull/1050,1,['test'],['tests']
Testability,"nd swirl distributions across the propeller disc and is coupled to the SU2 solver. The blade loading and changes to the flow-field are calculated recursively. Propeller geometry details, airfoil characteristics, propeller speed and set blade angle are required as inputs. Using the thrust and power along the blade from BEM, and following the procedure of VLAD, axial and tangential velocities are imposed at the interface. BEM method is verified against the experimental results [Veldhuis, 2005] and found to be performing well. ## Related Work. This work was presented at; SU2 Conference 2022, 5--7 Sept 2022,; Propeller blade load calculation for actuator disk using blade element method.; https://www.youtube.com/watch?v=otM_Lz2MV4U. and published in; International Journal of Aeronautical and Space Sciences; https://doi.org/10.1007/s42405-023-00593-5. The grid file for the test case is in the new branch on the fork at; https://github.com/josy-nal/su2codeTestCases/tree/feature-actuatordisk-bem. This implementation is under active development seeking reviews, instructions and suggestions to meet SU2 code standards. References:. Saetta E, Russo L, Tgnaccini R (2020); Implementation and validation of a new actuator disk model in SU2.; SU2 conference 2020, virtual event. Veldhuis L (2005) Propeller-wing aerodynamic interface,; Ph.D. thesis, Delft University of Technology, Delft, Netherlands. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2142:2565,test,test,2565,https://su2code.github.io,https://github.com/su2code/SU2/pull/2142,1,['test'],['test']
Testability,"nearInterpolation which can be used for other purposes and can be initialized very simply by using pointers to C1DInterpolation class. The following is the Inlet file format that you can give now:. radius, TT, PT, unit_Vr, unit_Vtheta, turb variables... OR; radius, TT, PT, alpha, phi, turb variables.. *alpha is the angle taken normal to the direction of flow (swirl angle), phi is the flow angle taken from the direction of flow (more details in the velocity triangle pdf attached). The solver can then interpolate the data two ways: 1D Linear Interpolation or 1D Akima Interpolation. I added three new options in .cfg file:; INLET_INTERPOLATION_FUNCTION = None, Linear_1D, Akima_1D; INLET_INTERPOLATION_TYPE = vr_vtheta, alpha_phi; PRINT_INLET_INTERPOLATED_DATA = yes/no (for those curious what is the exact interpolated data). Given the generality of the approach, I have taken this will work for 2D cases or cases with multiple inlets without any issue. I am attaching a sample test case with detailed examination of results shown below. I am also attaching my equations that I used. Note that I define theta counterclockwise positive from x-axis. [testcase.zip](https://github.com/su2code/SU2/files/4217420/testcase.zip). I changed the inlet file angle to degrees rather than radians for alpha,phi option. All the graphs below have been plotted with radians. I have included both radians and degrees inlet file in the testcase. From now on, the inlet angles have to be in degrees! I have plotted graphs to verify the conversion was successful but I am not posting the graphs here as it is already a lot of data. For further details on Vr Vtheta and alpha, phi definitions you can refer this document: ; [velocity_triangles.pdf](https://github.com/su2code/SU2/files/4219369/velocity_triangles.pdf). These are the coordinate conversion equations I have used. The right ones are the ones used in SU2 to convert to Vx, Vy the left ones are used in python script for comparison along with the equati",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/815:1177,test,test,1177,https://su2code.github.io,https://github.com/su2code/SU2/pull/815,1,['test'],['test']
Testability,"ng restarts for prescribed massflow in streamwise periodic simulations (primal and adjoint). The massflow is achieved by dialing a pressure drop which is written and read to/from the `flow.meta` file. That file was used mainly for fixed CL stuff as far as I am aware of. The story is not done though really with this one change. There is still the restart-should-contain-everything-in-the-first-iteration-for-the-adjoint-taping issue which is currently not the case ... and not super straightforward to solve -> see https://github.com/su2code/SU2/commit/c11354115757d673a771e04562e6920024e013a2 description for more info. (EDIT: I will not tackle the massflow adjoint part in this PR, as with the PerSurf output it contains enough stuff which I like to have merged); - I added a `weight` to heat-solid zone OF's; - when `pressure_drop` is used, the first two entries of `MARKER_ANALYZE` are used as out-inlet but more than two markers are allowed. This comes in handy with `FLOW_COEFF_SURF` imo; - Adding per surface output for multizone cases. Was not working before in the way that `_SURF[0]` fields were reported to be ignored. A regression test is updated for that.; - Little fix to the regression system where Testcase.py had unsuitable default values such that failing reg tests were reported passing. So I will continue fiddling a little bit with massflow restarts but i already successfully optimized with that setup so it is not completely useless. ## Related Work; #773 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1527:1202,test,test,1202,https://su2code.github.io,https://github.com/su2code/SU2/pull/1527,4,"['Test', 'test']","['Testcase', 'test', 'tests']"
Testability,"nge question.](https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes). ## What do I propose?. Our research group at UT Austin has implemented a unit testing framework on our branch, which we're happy with. Some choices were arbitrary, and some choices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more information on autotool's setup, see [their documentation](https://www.gnu.org/software/automake/manual/html_node/Tests.html). Since autotools is the build system for SU2, this involves minimal changes. Using automake, the build process for building unit tests becomes:. ```; ./bootstrap; ./configure; make; make check; ```. We use [Boost's unit testing framework](https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html). This provides a convenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time we push commits or submit a pull request, the unit tests are run and checked. ## What is my vision for unit testing in SU2?. I am *not* proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. ## What framewo",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698:2442,test,tests,2442,https://su2code.github.io,https://github.com/su2code/SU2/issues/698,2,['test'],['tests']
Testability,"nges; Hi all,; there is a little bug in the loading of the primal solution for the DiscAdjFluid Iteration for DualTimeStepping 1st order. ; 1. The solution for timestep n-1 should be loaded instead of n-2 -> I added an if statement there.; 2. solution_old is used as a temporary container for the freshly loaded solution. Then the solution which is currently at solution_time_n is pushed to be the ""main"" solution n+1. Afterwards the solution_old is put in the solution_time_n container -> That last step was wrong such that the loaded solution never gets involved. I used the regression test in disc_adj_rans/cylinder which covers DualTimeStepping 2nd order and reused it for a new Testcase which covers 1st order. ; For now, the .travis.yml has a different su2code/Testcases branch in it such that other are not hindered by this PR when running travis. If this PR is merged with the new Testcase, the TestCases repo has to be updated and the .travis.yml needs to be reverted. ; Let me know if adding a new TestCase is OK. I am aware that not every detail can get its own regression test. . I checked my changes against finite differences for that Testcase. I'll post the result below. Additionally I suppressed the output of .csv files in driver_structure.cpp for unsteady simulations if `WRT_CSV_SOL= NO` is set. . Regards, Tobi. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; Nothing I know of. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/554:1023,Test,TestCase,1023,https://su2code.github.io,https://github.com/su2code/SU2/pull/554,1,['Test'],['TestCase']
Testability,"ning test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.exe; C++ compiler for the build machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the build machine: c++ ld.bfd 2.30; None of 'CC' are defined in the environment, not changing global flags.; None of 'CFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity testing C compiler: gcc; Is cross compiler: False.; None of 'CC_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: gcc D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.c -o D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe -pipe; Sanity check compile stdout:; ; -----; Sanity check compile stderr:; ; -----; Running test binary command: D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckc.exe; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; None of 'AR' are defined in the environment, not changing global flags.; None of 'CXX' are defined in the environment, not changing global flags.; None of 'CXXFLAGS' are defined in the environment, not changing global flags.; None of 'LDFLAGS' are defined in the environment, not changing global flags.; None of 'CPPFLAGS' are defined in the environment, not changing global flags.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity testing C++ compiler: c++; Is cross compiler: False.; None of 'CXX_LD' are defined in the environment, not changing global flags.; Sanity check compiler command line: c++ D:\Programme\SU2-7.1.1\build\meson-private\sanitycheckcpp.cc -o D:\Programme\SU2-7.1.1\bui",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:3670,test,test,3670,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['test'],['test']
Testability,"nja.exe -C C:\Users\qiang_zhang\Desktop\TestCases\SU2\build install; ninja: Entering directory `C:\Users\qiang_zhang\Desktop\TestCases\SU2\build'; [1/767] Linking target externals/cgns/hdf5/H5detect.exe; FAILED: externals/cgns/hdf5/H5detect.exe; ""gcc"" -o externals/cgns/hdf5/H5detect.exe externals/cgns/hdf5/H5detect.exe.p/H5detect.c.obj ""-Wl,--allow-shlib-undefined"" ""-Wl,-O1"" ""D:/Anaconda/Library/lib/z.lib"" ""-Wl,--start-group"" ""-lC:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\msmpi"" ""-Wl,--subsystem,console"" ""-lkernel32"" ""-luser32"" ""-lgdi32"" ""-lwinspool"" ""-lshell32"" ""-lole32"" ""-loleaut32"" ""-luuid"" ""-lcomdlg32"" ""-ladvapi32"" ""-Wl,--end-group""; D:/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/ld.exe: cannot find -lC:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\msmpi; collect2.exe: error: ld returned 1 exit status; [10/767] Compiling C object externals/cgns/hdf5/libsu2hdf5.a.p/H5Pint.c.obj; ninja: build stopped: subcommand failed.; ```. **To Reproduce**. I can sucess configure su2:; ![image](https://user-images.githubusercontent.com/29271051/159446256-dc866db4-9199-42d0-86b4-c38839753dd3.png); ![image](https://user-images.githubusercontent.com/29271051/159446307-354518f6-3382-401b-80c9-ac9e72f3d224.png). Then, I want to compile it by:; ```; ./ninja.exe -C C:\Users\qiang_zhang\Desktop\TestCases\SU2\build install; ```; And the bug is reported:. ```; cannot find -lC:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\msmpi; ```; However, I have install the `msmpisdk.msi` and `msmpisetup.exe`. . ![image](https://user-images.githubusercontent.com/29271051/159446649-f606a381-0896-461c-bd09-9e0b9243ce2e.png). **Desktop (please complete the following information):**; - OS: win10; - C++ compiler and version: as the recommanded `gcc version 8.1.0 (x86_64-posix-seh-rev0, Built by MinGW-W64 project)`; - MPI implementation and version: as the recommanded v10.1.2; - SU2 Version: Project version: 7.3.0 ""Blackbird"". Any suggestion is appreciated~~~",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1570:1408,Test,TestCases,1408,https://su2code.github.io,https://github.com/su2code/SU2/issues/1570,1,['Test'],['TestCases']
Testability,"nker flags: ; CGNS support: no; MPI support: yes; Metis support: yes; TecIO support: no; Mutation++ support: no; Jsoncpp support: no. Build SU2_CFD: yes; Build SU2_DDC: yes; Build SU2_GPC: yes; Build SU2_MAC: yes; Build SU2_MDC: yes; Build SU2_PBC: yes; Build SU2_SOL: yes; Build SU2_GDC: yes; Build SU2_UMC: yes; ```. There are some errors below:. Making all in Common/lib; make[1]: Entering directory `/parastor/users/isc01/zy/temp/SU2-master-back/Common/lib'; mpiicpc -DPACKAGE_NAME=\""SU\^2\"" -DPACKAGE_TARNAME=\""SU\^2\"" -DPACKAGE_VERSION=\""3.0.0\ \""eagle\""\"" -DPACKAGE_STRING=\""SU\^2\ 3.0.0\ \""eagle\""\"" -DPACKAGE_BUGREPORT=\""susquared-dev@lists.stanford.edu\"" -DPACKAGE_URL=\""http://su2.stanford.edu\"" -DPACKAGE=\""SU\^2\"" -DVERSION=\""3.0.0\ \""eagle\""\"" -I. -O3 -DNO_CGNS -I/parastor/users/isc01/zy/metis-64/include -DMETIS_5 -DNO_TECIO -DNO_MUTATIONPP -O3 -MT ../src/libSU2_a-config_structure.o -MD -MP -MF ../src/.deps/libSU2_a-config_structure.Tpo -c -o ../src/libSU2_a-config_structure.o`test -f '../src/config_structure.cpp' || echo './'`../src/config_structure.cpp; mv -f ../src/.deps/libSU2_a-config_structure.Tpo ../src/.deps/libSU2_a-config_structure.Po; mpiicpc -DPACKAGE_NAME=\""SU\^2\"" -DPACKAGE_TARNAME=\""SU\^2\"" -DPACKAGE_VERSION=\""3.0.0\ \""eagle\""\"" -DPACKAGE_STRING=\""SU\^2\ 3.0.0\ \""eagle\""\"" -DPACKAGE_BUGREPORT=\""susquared-dev@lists.stanford.edu\"" -DPACKAGE_URL=\""http://su2.stanford.edu\"" -DPACKAGE=\""SU\^2\"" -DVERSION=\""3.0.0\ \""eagle\""\"" -I. -O3 -DNO_CGNS -I/parastor/users/isc01/zy/metis-64/include -DMETIS_5 -DNO_TECIO -DNO_MUTATIONPP -O3 -MT ../src/libSU2_a-dual_grid_structure.o -MD -MP -MF ../src/.deps/libSU2_a-dual_grid_structure.Tpo -c -o ../src/libSU2_a-dual_grid_structure.o`test -f '../src/dual_grid_structure.cpp' || echo './'`../src/dual_grid_structure.cpp; /public/soft/intel/impi/3.2.2.006/include64/mpicxx.h(45): catastrophic error: #error directive: ""SEEK_SET is #defined but must not be for the C++ binding of MPI. Include mpi.h before stdio.h""; **#error ""S",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/31:2026,test,test,2026,https://su2code.github.io,https://github.com/su2code/SU2/issues/31,1,['test'],['test']
Testability,nl (15) ; - M Common/include/matrix_structure.hpp (95) ; - M Common/include/matrix_structure.inl (17) ; - M Common/include/option_structure.hpp (1228) ; - M Common/include/primal_grid_structure.hpp (65) ; - M Common/include/primal_grid_structure.inl (37) ; - M Common/include/su2mpi.hpp (29) ; - M Common/include/vector_structure.hpp (20) ; - M Common/include/vector_structure.inl (13) ; - M Common/lib/Makefile.am (28) ; - M Common/lib/Makefile.in (36) ; - M Common/src/config_structure.cpp (2907) ; - M Common/src/dual_grid_structure.cpp (29) ; - M Common/src/geometry_structure.cpp (16033) ; - M Common/src/grid_adaptation_structure.cpp (374) ; - M Common/src/grid_movement_structure.cpp (2754) ; - M Common/src/linear_solvers_structure.cpp (330) ; - M Common/src/matrix_structure.cpp (371) ; - M Common/src/primal_grid_structure.cpp (45) ; - M Common/src/su2mpi.cpp (41) ; - M Common/src/vector_structure.cpp (46) ; - D Doxygen/Doxyfile (2368) ; - M INSTALL (2) ; - D Logo/logo_su2.jpg (0) ; - D Logo/su2_eagle.png (0) ; - M Makefile.am (32) ; - M Makefile.in (53) ; - D MeshTools/Matlab/MergeSU2.m (77) ; - D MeshTools/Matlab/ReadSU2.m (160) ; - D MeshTools/Matlab/WriteSU2.m (91) ; - D MeshTools/Matlab/angle2dcm.m (28) ; - D MeshTools/Matlab/example_MergeMeshes.m (38) ; - D MeshTools/Matlab/getElemTypeInfo.m (52) ; - D MeshTools/Matlab/mesh_bipara_1.su2 (38465) ; - D MeshTools/Matlab/mesh_bipara_2.su2 (3248) ; - D MeshTools/Matlab/plotElem.m (45) ; - D MeshTools/Matlab/plotFace.m (60) ; - D MeshTools/Matlab/plotMarkers.m (64) ; - D MeshTools/PointwiseSU2plugin/FLAGS.linux (33) ; - D MeshTools/PointwiseSU2plugin/FLAGS.linux_x86_64 (33) ; - D MeshTools/PointwiseSU2plugin/FLAGS.macosx (112) ; - D MeshTools/PointwiseSU2plugin/FLAGS.win (14) ; - D MeshTools/PointwiseSU2plugin/FLAGS.win32 (33) ; - D MeshTools/PointwiseSU2plugin/Makefile (304) ; - D MeshTools/PointwiseSU2plugin/PluginSDK.sln (64) ; - D MeshTools/PointwiseSU2plugin/PluginSDK.suo (0) ; - D MeshTools/PointwiseSU2plugin/dep,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:12352,Log,Logo,12352,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,1,['Log'],['Logo']
Testability,"nlet file format that you can give now:. radius, TT, PT, unit_Vr, unit_Vtheta, turb variables... OR; radius, TT, PT, alpha, phi, turb variables.. *alpha is the angle taken normal to the direction of flow (swirl angle), phi is the flow angle taken from the direction of flow (more details in the velocity triangle pdf attached). The solver can then interpolate the data two ways: 1D Linear Interpolation or 1D Akima Interpolation. I added three new options in .cfg file:; INLET_INTERPOLATION_FUNCTION = None, Linear_1D, Akima_1D; INLET_INTERPOLATION_TYPE = vr_vtheta, alpha_phi; PRINT_INLET_INTERPOLATED_DATA = yes/no (for those curious what is the exact interpolated data). Given the generality of the approach, I have taken this will work for 2D cases or cases with multiple inlets without any issue. I am attaching a sample test case with detailed examination of results shown below. I am also attaching my equations that I used. Note that I define theta counterclockwise positive from x-axis. [testcase.zip](https://github.com/su2code/SU2/files/4217420/testcase.zip). I changed the inlet file angle to degrees rather than radians for alpha,phi option. All the graphs below have been plotted with radians. I have included both radians and degrees inlet file in the testcase. From now on, the inlet angles have to be in degrees! I have plotted graphs to verify the conversion was successful but I am not posting the graphs here as it is already a lot of data. For further details on Vr Vtheta and alpha, phi definitions you can refer this document: ; [velocity_triangles.pdf](https://github.com/su2code/SU2/files/4219369/velocity_triangles.pdf). These are the coordinate conversion equations I have used. The right ones are the ones used in SU2 to convert to Vx, Vy the left ones are used in python script for comparison along with the equations from velocity triangles (reference: [Link](https://ocw.mit.edu/courses/aeronautics-and-astronautics/16-07-dynamics-fall-2009/lecture-notes/MIT16_07F09_Lec",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/815:1348,test,testcase,1348,https://su2code.github.io,https://github.com/su2code/SU2/pull/815,1,['test'],['testcase']
Testability,"no-unused-parameter -Wno-deprecated-declarations -DHAVE_CGNS -DNDEBUG -DHAVE_TECIO -MD -MQ 'SU2_CFD/src/37e1b17@@SU2core@sta/output_CAdjElasticityOutput.cpp.o' -MF 'SU2_CFD/src/37e1b17@@SU2core@sta/output_CAdjElasticityOutput.cpp.o.d' -o 'SU2_CFD/src/37e1b17@@SU2core@sta/output_CAdjElasticityOutput.cpp.o' -c ../SU2_CFD/src/output/CAdjElasticityOutput.cpp; FAILED: SU2_CFD/src/37e1b17@@SU2core@sta/output_CAdjElasticityOutput.cpp.o ; c++ -ISU2_CFD/src/37e1b17@@SU2core@sta -ISU2_CFD/src -I../SU2_CFD/src -I../externals/CLI11 -I../externals/cgns/adf -I../externals/cgns/adfh -Iexternals/cgns -I../externals/cgns -Iexternals/cgns/hdf5 -I../externals/cgns/hdf5 -Iexternals/tecio -I../externals/tecio -Iexternals/tecio/teciosrc -I../externals/tecio/teciosrc -I../externals/mel -ICommon/src -I../Common/src -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -std=c++11 -O3 -fPIC -pthread -Wno-empty-body -Wno-unused-parameter -Wno-deprecated-declarations -DHAVE_CGNS -DNDEBUG -DHAVE_TECIO -MD -MQ 'SU2_CFD/src/37e1b17@@SU2core@sta/output_CAdjElasticityOutput.cpp.o' -MF 'SU2_CFD/src/37e1b17@@SU2core@sta/output_CAdjElasticityOutput.cpp.o.d' -o 'SU2_CFD/src/37e1b17@@SU2core@sta/output_CAdjElasticityOutput.cpp.o' -c ../SU2_CFD/src/output/CAdjElasticityOutput.cpp; In file included from ../SU2_CFD/src/output/../../include/output/CAdjElasticityOutput.hpp:30:0,; from ../SU2_CFD/src/output/CAdjElasticityOutput.cpp:29:; ../SU2_CFD/src/output/../../include/output/COutput.hpp:50:10: fatal error: mel.hpp: No such file or directory; #include ""mel.hpp""; ^~~~~~~~~; compilation terminated.; ...; ```. Do I miss some dependency or something ?. **To Reproduce**. 1) git clone https://github.com/su2code/SU2; 2) cd SU2; 3) mkdir build && cd build; 4) meson ../ -Denable-tests=true; 5) ninja -j16 -v. **Desktop (please complete the following information):**; - OS: Linux openEuler 20.03; - C++ compiler and version: g++ (GCC) 7.3.0; - MPI implementation and version: None; - SU2 Version: current master branch",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1608:3462,test,tests,3462,https://su2code.github.io,https://github.com/su2code/SU2/issues/1608,1,['test'],['tests']
Testability,"nomenon. The field associated is TRANS_VARS. I do not know if I can leave it as it is or if you want just the essential variables to be printed in the output. The turbulence index has been implemented for the turbulence models. It is used to detect transition when it is higher than 0. In theory, it should be equal to 1 for a fully-turbulent flow. However, in my simulations, this is not always the case, especially if SST is used (you can see in on the figure below). References are https://doi.org/10.1007/s10494-021-00288-5 for SST and https://doi.org/10.2514/6.1992-439 for SA. AD implementation is missing at the moment, but it will be added in the future. Validation test cases will be uploaded in the following days. . The most important results can be found in the pdf of my presentation at the SU2 Conference 2022. https://polimi365-my.sharepoint.com/:b:/g/personal/10507725_polimi_it/EUswl9Jw0XhIuozrOjXqX6sBdscM30lRZ7mwMZcr5anvyA?e=41db5P. One recent result is the application of the transition model to the Sickle wing test case for -2.67° of the angle of attack. SST+LM2015; ![Results](https://user-images.githubusercontent.com/43813346/195149921-6e85c1c7-2fc8-47e9-b935-246081ea17fd.png). SA+LM2015; ![Results](https://user-images.githubusercontent.com/43813346/195152304-e81c92f3-35da-4c50-9cd8-e5528c644cde.png). The lower surface is represented on the left, whereas the upper surface is on the right. At the moment the wind tunnel walls have not been taken into account. This can explain the spanwise shift of the transition with respect to the experimental results. More results are incoming. . Please, any suggestions on how to clean up the code or on how to make it more efficient are very well accepted. More comments to the code will be added in the following days. Especially to the declaration of some functions. I know that it is not the most good-looking code right now but I preferred uploading it now such that others can use it even if it is not really clean. . ## Relat",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1788:2646,test,test,2646,https://su2code.github.io,https://github.com/su2code/SU2/pull/1788,1,['test'],['test']
Testability,"nother place (or lab server) and in Github we only had the config files, unfortunately we checked that for some users it was frustrating to download the config files and then go to another place to download the grids. From our practical point of view, the current setting is ideal to run the regression tests. But we are open to any change that benefits the SU2 users/developers community. . Now, it is very easy to download and modify the TestCases (keep in mind that the options in the config files change frequently) but, the price to pay is a large GitHub repository that it is difficult to download if you don’t have a good internet connection. Anyway, I think you are coming to Stanford in one week, it would be great to chat with you. We would love to have you and your group as a SU2 developer/user. Looking forward to meeting you and thanks for testing SU2. Best; Francisco. ## . Dr. Francisco Palacios; Engineering Research Associate at Stanford University; AIAA Senior Member, SIAM Member, and SU2 lead developer; Editorial Board Member for Scientific Report (Nature Publishing Group); Intel Parallel Computing Center. Personal webpage: http://adl.stanford.edu/people/fpalacios.html; SU2 webpage: http://su2.stanford.edu/. Department of Aeronautics and Astronautics; Durand Building. Room 357; Stanford University; Stanford CA 94305; United States. On Feb 3, 2015, at 1:32 PM, Lorena A. Barba notifications@github.com wrote:. > And why is your Test repo so large?; > Perhaps some data files would be happier living elsewhere?; > ; > I'm thinking that if your Tests load large mesh files, for example, these mesh files could be placed in a data repository (like Figshare, Data Dryad, Zenodo), and your configuration files for each test could fetch the data it needs. I would imagine that the input data does not change often (or perhaps ever?) and one permalink and DOI is better suited for data than a version-controlled repo.; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/152#issuecomment-72909446:1739,Test,Test,1739,https://su2code.github.io,https://github.com/su2code/SU2/issues/152#issuecomment-72909446,3,"['Test', 'test']","['Test', 'Tests', 'test']"
Testability,"ns. . I also attach a couple zooms of the signal: first at time 0 which gives the GAF for the steady initial simulation and second for the converged values. It can be seen how (even if less important) some discrepancies are found here as well.; ![Time_zoom](https://user-images.githubusercontent.com/23583209/72832115-869ce400-3c84-11ea-93cb-dffeba31878c.jpg); ![Time_zoom2](https://user-images.githubusercontent.com/23583209/72832121-8a306b00-3c84-11ea-8303-b55888b8fb38.jpg). To check which one of the two time evolution is physically representative you can observe the GAF in the frequency domain. The following figure plots module of the Fourier transform of the preceding signals together with the DLM reference as a function of the reduced frequency (proportional to omega/V_inf). ; ![Frequency](https://user-images.githubusercontent.com/23583209/72832220-be0b9080-3c84-11ea-99da-3bfc5d31aa5b.jpg). Old SU2 has been validated vs DLM in another test which I don't show here for sake of brevity and differences with respect to DLM are justified by the thickness of the ONERA M6 and high speed. It can be seen how new SU2 with old boundary conditions gives back an almost identical result to old SU2 (my reference). Anyway for the new boundary conditions values are too distant from the reference.; Little note: the Module of the GAF in frequency domain at K=0 is proportional to the difference of the value of the gaf in time domain between t=0 and t=infinite: namely GAF(t=infinite) - GAG(t=0). The same value sums other coefficients due to the unsteadiness of the signal at K different than 0. We can see how for both the boundary conditions the value approximates the original one (as we already pointed out at the beginning, noticing that both steady and converged values were very very similar for the two boundary conditions) Anyway, by increasing the frequency, we notice that differences increase rapidly pointing out the problem must be somehow related to the rate of unsteadiness of the ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-576826669:2694,test,test,2694,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-576826669,1,['test'],['test']
Testability,"nt.com/31306376/53201787-2e4d0480-3625-11e9-8537-f1ca5ef39f9d.JPG). 3. 3D incompressible pin setup, SST turb model. You see Pressure-contour lines but more important are the velocity vectors. In the current code they have a normal component and therefore a (non-irrelevant) flux over the symmetry boundary:; ![closeup_vectors](https://user-images.githubusercontent.com/31306376/53201975-9c91c700-3625-11e9-95b7-8337cc159a23.jpg). Additional to that I tested in rotated domains such that the symmetry plane does not coincide with one of the axis. I tested the Navier-Stokes ONERA-M6 with SA turb-model and although this PR achieves a considerable lower velocity in symmetry-normal direction than current develop, it is still quite large. I suspect it is due to general ""bad"" convergence (2-3 orders of magnitude) of that case. ; So, I encourage everyone that has a well converging compressibe 3D case with symmetry plane to test that or to send it to me. Every regression test with symmetry plane in it will fail, so I didn't change the values yet. From what I have seen, only these are failing. I will correct these (fml) and commit if everyone is alright with the implementation otherwise. . Let me know if you have any comments/suggestions etc., or if you tested with your cases and can confirm (or not) that this PR is correct (that would be awesome). Cheers, Tobi. ## Related Work; None known to me. ## PR Checklist; I will check the warnings based on travis output and report. No new testcase is necessary in my opinion. Edit 25.02.: I checked the warnings for a serial and parallel build using the log-files of travis, comparing mine with the latest merged develop. No new compiler warnings are generated. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have add",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/657:3272,test,test,3272,https://su2code.github.io,https://github.com/su2code/SU2/pull/657,1,['test'],['test']
Testability,"numerics`), except that there are not separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tests or individual tests.; + When `ninja test` or `meson test` is run, the test executable is only run once, sweeping through all the unit tests. The result only shows a single failure or a single success. If more detail is desired, then the test executable can be run manually.; + The relevant SU2 code is compiled as a library (e.g. `libSU2core`) and then linked into both the main executable (`SU2_CFD`) and the test program (`test_driver`). ### How to Run Unit Tests. If you compile SU2 using `ninja -C builddir`, then the test executable will automatically be compiled. You then have three options for running the tests:. + `meson test` (see documentation [here](https://mesonbuild.com/Unit-tests.html)); + `ninja test`; + Run the exectuable manually: `./UnitTests/test_driver`. When running the executable manually, there are many customization options. Run `./UnitTests/test_driver --help` to see them all. ### How to add unit tests. I have already included a single unit-test example (`UnitTests/SU2_CFD/src/numerics/CNumerics_tests.cpp`). Aside from the headaches with CConfig, this example should be clear. If not, raise questions and I will answer them. ~~I plan on adding a few more example tests, as well as a ""How-To"" page on the website.~~ Please see the PR on the website repo for more documentation. To learn more, check out the [great tutorial](https://github.com/catchorg/Catch2/blob/master/docs/tutorial.md) for Catch2. You can also find more in-depth documentation there. ### I still don't understand unit tests. Where can I learn more?. I highly recommend reading at least one of these two books:. + ""Working Effectively with Legacy Co",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/850:2635,test,test,2635,https://su2code.github.io,https://github.com/su2code/SU2/pull/850,1,['test'],['test']
Testability,"o identify the symmetry planes and mirror the flux through the faces. ; Blazek continues: ""The second methodology computes the fluxes for the halved control volume (but not accross the boundary). The components of **the residual normal to the symmetry plane** are then zeroed out. It is also necessary to correct normal vectors of those faces of the control volume, which touch the boundary. The modification consists of removing all components of the face vector, which are normal to the symmetry plane. The gradients also have to be corrected according to Eq. (8.40) [points 2,3,4 above]"". 1. Modify Green-Gauss and Least-Squares gradient computation for symmetry planes; -> This seems to work fine; 2. Fix normal components of edges connected to symmetry plane; -> This seems to work fine; 3. Fix residual components of velocity on the symmetry plane; -> This seems to work fine; 4. Multiple symmetry planes, including Euler walls; -> This seems to work fine; 6. multigrid; -> Works fine now that we use the agglomeration as in the paper of Diskin.; 7. grid movement; 8. -> Works fine with the new fix to the residuals (energy update). ## Related Work; #1168 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2194:3005,test,test,3005,https://su2code.github.io,https://github.com/su2code/SU2/pull/2194,1,['test'],['test']
Testability,"oc/libs/1_70_0/libs/test/doc/html/index.html>. This provides a convenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time we push commits or submit a pull request, the unit tests are run and checked. What is my vision for unit testing in SU2?. I am not proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. Roll-your-own. * Requires no external dependencies; * The most flexible option; * Involves the most work to setup; * Will lack some of the more advances features of mature unit-testing frameworks. Boost Test. * Can be header only, statically linked, or dynamically linked; * If statically or dynamically linked, then Boost is not very lightweight; * Easy to add if you're already using Boost. Google Test. * Most common unit-testing framework; * Can be easily combined with Google's powerful GMock mocking library; * Compiling and linking can be somewhat painful. Catch2. * Used by FEniCS; * Makes unit tests easily readable with lots of syntactic sugar.; * Has a very simple syntax; * Is header-only; * Requires C++11 compilation; * Not as feature rich as Google Test or Boost Test. Qu",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:4119,test,test,4119,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,1,['test'],['test']
Testability,"ode:; 1.) @fmpmorgado Introduced the AUSM+M convective scheme that avoids the carbuncle phenomena in hypersonic blunt bodies (https://doi.org/10.1016/j.apm.2019.09.005); 2.) Wally - A full refactoring of the AUSM schemes within NEMO; 3.) Removal of AUSMPW+ scheme; ; ## Related Work; This work is a follow-up and a cleaner version of the work in the branch **feature_NEMO_AUSMPLUSM**. I will delete both branches after merge. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary. ### Benchmark. I have conducted a comparison between the AUSM and AUSM+M for a 2D axisymmetric non-equilibrium flow over a cylinder with a 0.1 meter diameter and a freestream of M=24, P = 10.23 N and T = 224.5 K. ![image](https://user-images.githubusercontent.com/29612207/192250118-eb074187-3002-468a-8406-b01047c790bd.png); The left image represents the converged 2nd order solution using AUSM+M and the right image using the standard AUSM scheme. The new AUSM+M scheme enables to get rid of the pressure oscillations near the stagnation area. ![image](https://user-images.githubusercontent.com/29612207/192250632-85b64454-c54c-4815-8664-f72fc17d705d.png); Temperature at the stagnation line (solid line is AUSM+M and dashed line is AUSM). ![image](https://user-images.githubusercontent.com/29612207/192250763-ee3b96db-b42f-4ebe-a256-bcb9043ecb24.png",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1773:1047,test,test,1047,https://su2code.github.io,https://github.com/su2code/SU2/pull/1773,1,['test'],['test']
Testability,"ogical to dedicate an entire; > validation case to one small bug fix. You want to write a small test for a; > small fix.; >; > In all of these cases, unit testing fills a unique role. Unit testing; > increases time spent in development, but decreases the amount of time spent; > in bug-fixing and maintaining.; >; > For more information, see this relevant Stack Exchange question.; > <https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes>; > What do I propose?; >; > My research group at UT Austing has implemented a unit testing framework; > on our branch, which we're happy with. Some choices were arbitrary, and; > some choices were made based on our development environment. Those choices; > may be different for other groups. Here's what we have done:; >; > The unit testing framework is compiled and run using autotools. For more; > information on autotool's setup, see their documentation; > <https://www.gnu.org/software/automake/manual/html_node/Tests.html>.; > Since autotools is the build system for SU2, this involves minimal changes.; >; > Using automake, the build process for building unit tests becomes:; >; > '''; > ./bootstrap; > ./configure; > make; > make check; > '''; >; > We use Boost's unit testing framework; > <https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>.; > This provides a convenient set of macros for instatiating tests, grouping; > tests into suites, and running checks. This choice was based on what is; > available in our development setup.; >; > We have integrated our unit tests into our Travis CI regression testing.; > Every time we push commits or submit a pull request, the unit tests are run; > and checked.; > What is my vision for unit testing in SU2?; >; > I am *not* proposing that we start trying to get 100% code coverage with; > pre-existing code. That would not provide a good return on investment.; >; > Instead, I see people adding unit tests as they write new code",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:3981,Test,Tests,3981,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,1,['Test'],['Tests']
Testability,"olvers at ~10k nodes per core and about the same on a newer architecture but only at ~1k node per core.; Since hybrid parallel is supposed to be good for strong scaling, this was not good enough... With the new strategy it is ok (see ""performance"" below), hence this is ready for review. ### Overall Strategy; The strategy now is to start a parallel section in CSysSolve::Solve that covers building the preconditioner and solving the linear system.; Linear algebra routines called within this section have _worksharing_ constructs instead of _parallel_ ones, i.e. the work is distributed by however many threads arrive to that routine. This also makes the routines safe to call in serial.; The only ""dangerous"" things to do in parallel are to: manage memory for a shared object (multiple threads call `new` but there is only one shared pointer on which to call `delete`); writing to the same memory locations concurrently.; I tried to make the first issue debugable by asserting that the initialization routines of CSysMatrix and CSysVector are only called by the master thread.; For the second issue I made the associated classes as const-correct as possible, that should at least make someone think twice before changing a member variable of those classes. The risk is still there for input variables as an algorithm development aspect... For example `MatrixVectorProductTransposed` cannot be made thread-parallel as simply/naively as its normal counterpart. ### Communication Model; The MPI + Threads communication model is very simple, currently only the master thread calls MPI routines (including `Error`), this requires thread barriers before and after the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does not seem to be a significant bottleneck.; _Worksharing_ constructs have implicit barriers at completion, for CSysVector routines I used `nowait` modifiers, it is safe to call tho",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/830#issuecomment-562646766:1147,assert,asserting,1147,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766,1,['assert'],['asserting']
Testability,"on autotool's setup, see [their documentation](https://www.gnu.org/software/automake/manual/html_node/Tests.html). Since autotools is the build system for SU2, this involves minimal changes. Using automake, the build process for building unit tests becomes:. ```; ./bootstrap; ./configure; make; make check; ```. We use [Boost's unit testing framework](https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html). This provides a convenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time we push commits or submit a pull request, the unit tests are run and checked. ## What is my vision for unit testing in SU2?. I am *not* proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. ## What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. #### Roll-your-own. + Requires no external dependencies; + The most flexible option; + Involves the most work to setup; + Will lack some of the more advances features of mature unit-testing frameworks. #### Boost Test. + Can be header only, statically linked, or dynamically linked; + If statically or dynamically linked, then Boost is not very lightweight; + Easy to add if you're already using Boost",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698:2953,test,tests,2953,https://su2code.github.io,https://github.com/su2code/SU2/issues/698,1,['test'],['tests']
Testability,"on here in a few sentences.*; Reimplemented pressure-based solver from feature_Pressure_based into the development branch. . ## Related Work; branch: feature_Pressure_based. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary. Euler Solver: Incompressible cylinder case Pressure based (PB) vs Density Based (DB); ![incomp_cylinder](https://github.com/su2code/SU2/assets/22835014/c37cb127-88fe-4945-b712-c0ef450a3c43); ![incomp_cylinder_history](https://github.com/su2code/SU2/assets/22835014/3cf4c72c-445f-4086-87ea-162159d06cb7). Navier Stokes Solver: Incompressible Hydrofoil case Pressure-based (PB) vs Density Based (DB); ![NACA0012_hydrofoil](https://github.com/su2code/SU2/assets/22835014/cab1e73e-a60a-47af-aeef-ba50eb46e0eb); ![NACA0012_hydrofoil_history](https://github.com/su2code/SU2/assets/22835014/d71f09fd-73f9-44bb-861a-8f033408c6ba). Still TODOs; * Fixing RANS: Current CIncPBVariable inherits CVariable instead of CFlowVariable, if this is fixed RANS should work.; * Fixing MPI: The problem is currently unknown; * Fixing ND: non-dimensionalization is different in the two solvers. It should be harmonized.; * Multigrid: A PB multigrid is available but has not been tested.; * Small style changes.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2210:2031,test,tested,2031,https://su2code.github.io,https://github.com/su2code/SU2/pull/2210,1,['test'],['tested']
Testability,"onomon, I've decided to move the discussion here to get additional input. ## What is unit testing?. For those not familiar with unit testing, unit testing allows the testing of small bits of behavior, ideally using isolated bits of code. It is not intended to replace validation testing or formal verification tests. Instead, it serves a unique purpose. Consider the three following use cases:. + You're developing a new feature, and you want to test it to see if it works. You could do a full simulation, but that takes a lot of time and computing power. You want to check if your new behavior behaves as you suspect before you throw a lot of resources at it.; + You submit a PR and discover that one of the regression tests has failed. But...why? You know that something is broken, but its hard to track down what broke. You want more granular test coverage that can demonstrate what broke.; + You are fixing a very small bug. You know that you should prove that your bug fix worked, but it doesn't seem logical to dedicate an entire validation case to one small bug fix. You want to write a small test for a small fix. In all of these cases, unit testing fills a unique role. Unit testing increases time spent in development, but decreases the amount of time spent in bug-fixing and maintaining. For more information, see this [relevant Stack Exchange question.](https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes). ## What do I propose?. Our research group at UT Austin has implemented a unit testing framework on our branch, which we're happy with. Some choices were arbitrary, and some choices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more information on autotool's setup, see [their documentation](https://www.gnu.org/software/automake/manual/html_node/Tests.html). Since autotoo",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698:1094,log,logical,1094,https://su2code.github.io,https://github.com/su2code/SU2/issues/698,1,['log'],['logical']
Testability,"ons and better optimization.; ![pullrequest1](https://user-images.githubusercontent.com/16785869/143250126-e5bdd360-e265-40ca-9d24-5811ecbb759c.jpg). Application is done as a post-processing step in the SU2_DOT_AD executable.; The new solver constructs the necessary operator and solves it using the features of the finite element implementation in SU2. For this, it uses the same elements as the FEA solver but extends the definitions of the Gauss quadrature to be second order.; It can operate in two different modes:. 1) The smoothing can be applied to the mesh sensitivities, either in the complete mesh or only design boundaries. See the picture below for an example of this.; ![PicforSU2](https://user-images.githubusercontent.com/16785869/149150313-a996ecba-fe7f-4de7-983e-560410b840b4.jpeg). 2) It also includes the possibility to take the mesh parameterization into account, compute the derivatives (dM/dp), and smooth the sensitivities w.r.t. the design parameters. This is done by the same AD logic used in SU2_DOT.cpp::SetProjection_AD. The routines are extended, such that AD can compute arbitrary matrix-vector products with the Jacobian of the parameterization and apply the smoothing operator to the gradient. This is a continuation of draft #1439 with a new rebased branch. It has a cleaner commit history and not so much legacy from previous versions. The regression tests for this pull request need the files for the accompanying pull request [su2code/TestCases/pull/88](https://github.com/su2code/TestCases/pull/88). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or s",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1446:2573,log,logic,2573,https://su2code.github.io,https://github.com/su2code/SU2/pull/1446,1,['log'],['logic']
Testability,"onvenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time we push commits or submit a pull request, the unit tests are run and checked. ## What is my vision for unit testing in SU2?. I am *not* proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. ## What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. #### Roll-your-own. + Requires no external dependencies; + The most flexible option; + Involves the most work to setup; + Will lack some of the more advances features of mature unit-testing frameworks. #### Boost Test. + Can be header only, statically linked, or dynamically linked; + If statically or dynamically linked, then Boost is not very lightweight; + Easy to add if you're already using Boost. #### Google Test. + Most common unit-testing framework; + Can be easily combined with Google's powerful GMock mocking library; + Compiling and linking can be somewhat painful. #### Catch2. + Used by FEniCS; + Makes unit tests easily readable with lots of syntactic sugar.; + Has a very simple syntax; + Is header-only; + ~~Requires C++11 compilation~~ Requires C++11 for full feature set, but offers a C++03 branch; + Not as feature rich ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698:3414,test,test,3414,https://su2code.github.io,https://github.com/su2code/SU2/issues/698,1,['test'],['test']
Testability,"operties (geometry->node and geometry->edge) and so some speedup is expected due to that, but in the absence of evidence I prefer to be conservative.; Here are the numbers:; ![image](https://user-images.githubusercontent.com/38071223/66394872-15376f00-e9ce-11e9-80ed-193aea2aae6f.png); The take home number is **1.7**. Cumulative with the 1.4 from contiguous storage, so 2.4 total. Despite most of my posts being focused on SIMD my main motivation is the hybrid parallelization which will allow important algorithmic improvements when running on hundreds of cores, namely the multigrid and additive linear preconditioners will retain their effectiveness at much larger core counts.; I will not hazard an estimate for this. ## Proposed changes (Summary); **Hybrid parallel**; - Gradients (GG) and limiters converted to point loops (embarrassing parallel, no edge colouring needed).; - Residual loops parallelized with edge colouring, if anyone has suggestions regarding algorithms send them my way, so far I only tested greedy colouring on edge groups to preserve spatial locality (this aspect is absolutely fundamental).; - Matrix multiplication, BCSR format is also embarrassing parallel.; - Linear preconditioners, additive decomposition within each MPI rank over a number of threads that need not be the same as that used for other areas. **SIMD**; - For gradients, limiters, and numerics a SIMD-friendly type will be used, by and large the high level code will look the same (see my examples above) but multiple points/edges will be processed simultaneously.; - No changes will be required to the data layout of CVariable, which means there will be no penalty to scalar code, new overloads for accessor methods will be required to set/get SIMD-arrays of data instead of scalars.; - The geometric properties and graph information associated with CGeometry will require the same contiguous storage treatment received by CVariable.; - Linear algebra, dimension-specific multiplication kernels with m",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-539523312:1770,test,tested,1770,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-539523312,1,['test'],['tested']
Testability,"ork; > on our branch, which we're happy with. Some choices were arbitrary, and; > some choices were made based on our development environment. Those choices; > may be different for other groups. Here's what we have done:; >; > The unit testing framework is compiled and run using autotools. For more; > information on autotool's setup, see their documentation; > <https://www.gnu.org/software/automake/manual/html_node/Tests.html>.; > Since autotools is the build system for SU2, this involves minimal changes.; >; > Using automake, the build process for building unit tests becomes:; >; > '''; > ./bootstrap; > ./configure; > make; > make check; > '''; >; > We use Boost's unit testing framework; > <https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>.; > This provides a convenient set of macros for instatiating tests, grouping; > tests into suites, and running checks. This choice was based on what is; > available in our development setup.; >; > We have integrated our unit tests into our Travis CI regression testing.; > Every time we push commits or submit a pull request, the unit tests are run; > and checked.; > What is my vision for unit testing in SU2?; >; > I am *not* proposing that we start trying to get 100% code coverage with; > pre-existing code. That would not provide a good return on investment.; >; > Instead, I see people adding unit tests as they write new code and as they; > find bugs. For each new behavior added to SU2, tests are first added to; > document the related existing behavior. These tests serve to check that the; > existing behavior isn't damaged by the new code. Then new tests are added; > to prove that the new behavior is working correctly. For bug fixes, the; > process is simpler. A test is added to confirm that something is not; > behaving as expected. Then the code is fixed to make the test pass.; > What frameworks are available?; >; > For a unit testing framework, here are the most popular options, with the; > following pros and ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:4558,test,tests,4558,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,2,['test'],"['testing', 'tests']"
Testability,"ormation on autotool's setup, see their documentation<https://www.gnu.org/software/automake/manual/html_node/Tests.html>. Since autotools is the build system for SU2, this involves minimal changes. Using automake, the build process for building unit tests becomes:. '''; ./bootstrap; ./configure; make; make check; '''. We use Boost's unit testing framework<https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>. This provides a convenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time we push commits or submit a pull request, the unit tests are run and checked. What is my vision for unit testing in SU2?. I am not proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. Roll-your-own. * Requires no external dependencies; * The most flexible option; * Involves the most work to setup; * Will lack some of the more advances features of mature unit-testing frameworks. Boost Test. * Can be header only, statically linked, or dynamically linked; * If statically or dynamically linked, then Boost is not very lightweight; * Easy to add if you're already using Boost. Google Test",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:3762,test,tests,3762,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,1,['test'],['tests']
Testability,"ormation test with the presented settings: . % ----------------------- DESIGN VARIABLE PARAMETERS --------------------------%. DV_KIND= FFD_CONTROL_POINT, FFD_CONTROL_POINT, FFD_CONTROL_POINT, FFD_CONTROL_POINT; %; % Marker of the surface in which we are going apply the shape deformation; DV_MARKER= ( BLADE1 ); %; % Parameters of the shape deformation ; % 	- FFD_CONTROL_POINT ( FFD_BoxTag, i_Ind, j_Ind, k_Ind, x_Disp, y_Disp, z_Disp ); %; DV_PARAM= ( BLADE_BOX, 0, 0, 0, 1.0, 0.0, 0.0 ); ( BLADE_BOX, 0, 1, 0, 0.0, 1.0, 0.0 ); ( BLADE_BOX, 0, 1, 1, 0.0, 1.0, 0.0 ); ( BLADE_BOX, 1, 1, 1, 0.0, 1.0, 0.0 ); %; % New value of the shape deformation; DV_VALUE= 0.02, 0.02, 0.02, 0.02; %; OPT_RELAX_FACTOR = 1.0. Moreover, some surfaces were re-assigned to avoid any plane fixing (that was, intentionally, set as FFD_CONTINUITY = USER _INPUT): . MARKER_SYM = ( HUB, SHROUD, BLADE1, PER1, PER2 ). ## **Results**; For any given linear solver deformation and parameter the arbitrary mesh deformation test failed _(even after hugely increasing both DV_VALUE and OPT_RELAX_FACTOR to exclude a dimensional issue_):. - **FGMRES** solved by initial guess.; - **CONJUGATE_GRADIENT** reached the convergency conditions but being MAX DIFF. = 0 no deformation was applied to the mesh. Similarly, SU2_DOT_AD behaved in the same manner even if adjoint solution was tightly converged. To exclude any non-dependency from the objective function, different options were investigated (DRAG, LIFT, SURFACE_MACH, SURFACE_TOTAL_PRESSURE, ENTROPY_GENERATION) and nothing changed. Moreover, the vaned diffuser scenario (_not visualized in here for simplicity_) seems to be affected too, even if very similar to basic flow scenarios (_basically, it is just an internal 3D-flow over airfoil case_). I thought this behavior could be traced to a bug since my previous mesh deformation always proceeded smoothly (_from flow past cylinder to other internal flow scenarios_), either with arbitrary or gradient based deformation. Howe",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2025:2484,test,test,2484,https://su2code.github.io,https://github.com/su2code/SU2/issues/2025,1,['test'],['test']
Testability,"oth boundary conditions for the ONERA M6 case after the changes you've tested for the convective flux residuals. The differences seen in the dynamic results are important and since the change in boundary condition wasn't intended to cause these changes in the dynamic solution, I think we should be able to reproduce what we had originally. I think the same is also true for the problems with grid motion, as a minimum we should be able to reproduce the same result with the new boundary condition as we had with the old Euler wall. If it then comes down to choices of different convective schemes that we can employ with the new boundary condition then perhaps as further work the different available choices could be investigated to explore which option gives the most accurate result compared against references in literature?. I ran some tests for 2D cases with grid motion using both boundary conditions for us to use here. I started with the NACA64A010 airfoil @RoccoBombardieri tested, now with the pitching motion re-included, and looked at the periodic behaviour. [pitching_NACA64A010.zip](https://github.com/su2code/SU2/files/3963760/pitching_NACA64A010.zip). ![NACA64A010](https://user-images.githubusercontent.com/33747655/70848141-f7223b00-1e64-11ea-876c-0751b187fea4.png). Using the Euler wall boundary condition, the results still match exactly to @economon 's thesis (no real surprise as I suspect the code hasn't changed much for this comparison) and this agrees pretty closely with other inviscid reference results like Jamesons's unsteady flow past airfoils. With the symmetry plane, the results differ from the other inviscid solutions but the agreement to the experiment is better. I couldn't get hold of reference drag or moment results to compare against, therefore the comparison is only against lift. I also tested the pitching NACA 0012 airfoil using Batina's ""Unsteady Euler Airfoil Solutions Using Unstructured Dynamic Meshes"" as reference. In this case with the NACA 0012",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-565716260:1041,test,tested,1041,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-565716260,1,['test'],['tested']
Testability,"otstrap; ./configure; make; make check; ```. We use [Boost's unit testing framework](https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html). This provides a convenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time we push commits or submit a pull request, the unit tests are run and checked. ## What is my vision for unit testing in SU2?. I am *not* proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. ## What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. #### Roll-your-own. + Requires no external dependencies; + The most flexible option; + Involves the most work to setup; + Will lack some of the more advances features of mature unit-testing frameworks. #### Boost Test. + Can be header only, statically linked, or dynamically linked; + If statically or dynamically linked, then Boost is not very lightweight; + Easy to add if you're already using Boost. #### Google Test. + Most common unit-testing framework; + Can be easily combined with Google's powerful GMock mocking library; + Compiling and linking can be somewhat painful. #### Catch2. + Used by FEniCS; + Makes unit tests easily readable with lots of syntactic s",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698:3200,test,tests,3200,https://su2code.github.io,https://github.com/su2code/SU2/issues/698,1,['test'],['tests']
Testability,"ouping; > tests into suites, and running checks. This choice was based on what is; > available in our development setup.; >; > We have integrated our unit tests into our Travis CI regression testing.; > Every time we push commits or submit a pull request, the unit tests are run; > and checked.; > What is my vision for unit testing in SU2?; >; > I am *not* proposing that we start trying to get 100% code coverage with; > pre-existing code. That would not provide a good return on investment.; >; > Instead, I see people adding unit tests as they write new code and as they; > find bugs. For each new behavior added to SU2, tests are first added to; > document the related existing behavior. These tests serve to check that the; > existing behavior isn't damaged by the new code. Then new tests are added; > to prove that the new behavior is working correctly. For bug fixes, the; > process is simpler. A test is added to confirm that something is not; > behaving as expected. Then the code is fixed to make the test pass.; > What frameworks are available?; >; > For a unit testing framework, here are the most popular options, with the; > following pros and cons:; > Roll-your-own; >; > - Requires no external dependencies; > - The most flexible option; > - Involves the most work to setup; > - Will lack some of the more advances features of mature unit-testing; > frameworks.; >; > Boost Test; >; > - Can be header only, statically linked, or dynamically linked; > - If statically or dynamically linked, then Boost is not very; > lightweight; > - Easy to add if you're already using Boost; >; > Google Test; >; > - Most common unit-testing framework; > - Can be easily combined with Google's powerful GMock mocking library; > - Compiling and linking can be somewhat painful; >; > Catch2; >; > - Used by FEniCS; > - Makes unit tests easily readable with lots of syntactic sugar.; > - Has a very simple syntax; > - Is header-only; > - Requires C++11 compilation; > - Not as feature rich as Google T",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:5416,test,test,5416,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,1,['test'],['test']
Testability,"ovides a convenient set of macros for instatiating tests, grouping; > tests into suites, and running checks. This choice was based on what is; > available in our development setup.; >; > We have integrated our unit tests into our Travis CI regression testing.; > Every time we push commits or submit a pull request, the unit tests are run; > and checked.; > What is my vision for unit testing in SU2?; >; > I am *not* proposing that we start trying to get 100% code coverage with; > pre-existing code. That would not provide a good return on investment.; >; > Instead, I see people adding unit tests as they write new code and as they; > find bugs. For each new behavior added to SU2, tests are first added to; > document the related existing behavior. These tests serve to check that the; > existing behavior isn't damaged by the new code. Then new tests are added; > to prove that the new behavior is working correctly. For bug fixes, the; > process is simpler. A test is added to confirm that something is not; > behaving as expected. Then the code is fixed to make the test pass.; > What frameworks are available?; >; > For a unit testing framework, here are the most popular options, with the; > following pros and cons:; > Roll-your-own; >; > - Requires no external dependencies; > - The most flexible option; > - Involves the most work to setup; > - Will lack some of the more advances features of mature unit-testing; > frameworks.; >; > Boost Test; >; > - Can be header only, statically linked, or dynamically linked; > - If statically or dynamically linked, then Boost is not very; > lightweight; > - Easy to add if you're already using Boost; >; > Google Test; >; > - Most common unit-testing framework; > - Can be easily combined with Google's powerful GMock mocking library; > - Compiling and linking can be somewhat painful; >; > Catch2; >; > - Used by FEniCS; > - Makes unit tests easily readable with lots of syntactic sugar.; > - Has a very simple syntax; > - Is header-only; > - Req",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:5309,test,test,5309,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,1,['test'],['test']
Testability,"ow the CPU pipelining magic to mask the latency of the latter (even if it looks like you can only write the block after it is computed, CPU's have all kinds of buffers that allow the next loop iteration to begin while data is in flight). **Therefore colouring is the way to go.**. _Note: With vectorized numerics we insert blocks for 4 or 8 edges into the matrix at a time, the data for those inserts will be in a slightly weird format, which will make `SparseMatrix::updateBlocks` a bit harder on the eye, more on that later._. ## MUSCL Reconstruction; The MUSCL reconstruction, characteristic of upwind schemes, is the simplest building block to show the (negative) implications of storing the data as structures of arrays (SoA) on the performance of some operations.; Here is the most basic numerics you can think of, reconstruct and average (the dummy matrix loop was to benchmark the writes this is to benchmark the reads); ```c++; void computeResidual(size_t nVar,; size_t nDim,; const vector<size_t>& colorStart,; const vector<size_t>& edgeIdx,; const vector<pair<size_t,size_t> >& connectivity,; const Matrix& coords,; const Matrix& phi,; const VectorOfMatrix& grad,; const Matrix& limiter,; Matrix& residual); {; residual.setZero();. for(size_t color=0; color<colorStart.size()-1; ++color); #pragma omp parallel for schedule(dynamic,CHUNK_SIZE); for(size_t k=colorStart[color]; k<colorStart[color+1]; ++k); {; size_t iEdge = edgeIdx[k];; size_t iPoint = connectivity[iEdge].first;; size_t jPoint = connectivity[iEdge].second;. double d_ij[MAXNDIM];; for(size_t iDim=0; iDim<nDim; ++iDim); d_ij[iDim] = 0.5*(coords(jPoint,iDim)-coords(iPoint,iDim));. for(size_t iVar=0; iVar<nVar; ++iVar); {; double phiL = phi(iPoint,iVar);; double phiR = phi(jPoint,iVar);. for(size_t iDim=0; iDim<nDim; ++iDim); {; phiL += limiter(iPoint,iVar)*grad(iPoint,iVar,iDim)*d_ij[iDim];; phiR -= limiter(jPoint,iVar)*grad(jPoint,iVar,iDim)*d_ij[iDim];; }. double flux = 0.5*(phiL+phiR);. residual(iPoint,iVar) += f",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:5934,benchmark,benchmark,5934,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,2,['benchmark'],['benchmark']
Testability,"p team developing the SU2. I think moving the main tutorials to the main repository is a good idea. We; declared to contribute some validation cases and written tutorials and; having this in main repository will ease the process of adding/modifying; the docs to a simple pull request. I also have a suggestion regarding the Test Cases and Tutorial files. I; apologize if this is the wrong place or this has been discussed already,; but still will give it a try:; - Test cases folder from SU2/su2code repository shall be moved to the; SU2/TestCases repository. Rationale: this makes one repository to store the; test case *.cfg files and mesh files.; - There shall be a TestCases/Mesh folder to store all the meshes needed for; Test Cases files, without subdivisions for RANS, Euler etc subfolders.; Considering that multiple test cases use the same mesh and all the mesh; files are distinct, this solution generates one place to store all the mesh; files. Should a user perform a test case, he/she will find the mesh by name; referenced in the *.cfg file instead searching thru multiple folders. This; will also help avoiding unnecessary copies of mesh files.; - The same should be done for Tutorial files: Tutorial/Mesh folder for; storing meshes (duplicating these few files from TestCases/Mesh should not; be a problem IMO, but will really help a new user to get up to speed with; SU2); - I have no clear opinion on where the Tutorial files folder should be; stored. But considering moving written tutorials to main repository i think; that tutorial files should also be stored in main SU2/su2code repository. Best regards and Happy New Year; Jędrzej. 2017-12-30 23:45 GMT+01:00 Tim Albring <notifications@github.com>:. > What do you think of moving the written tutorials also to the main; > repository ? Then we can have links in the wiki to the markdown files like; > this (the link will be much shorter if the files are in the master branch):; > https://github.com/su2code/SU2/blob/0e36facc031aa",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/485#issuecomment-354736415:1169,test,test,1169,https://su2code.github.io,https://github.com/su2code/SU2/pull/485#issuecomment-354736415,1,['test'],['test']
Testability,"p towards an automatic identification of the aerodynamic transfer functions for state-space models.; * Some changes in the outputs; * The introduction of a test case for this feature. Regarding the last point, I am having issues trying to understand how to appropriately set up the regression. In particular, the fsi interface needs two additional packages to run (libspatialindex and petsc) with their counterparts in python (rtree and petsc4py). @pcarruscag suggested me to add the apt-get lines in the regression.yml file, but I am really not sure where to place them and I do not want to mess it up. ; Further, the files in the tutorial folder cannot be used for this scope. Indeed, in the tutorial, there are the cfg files that can be used to reproduce the same behaviour predicted by the theory of Theodorsen. However, in order to do so, some iterations of fluid only simulation must be performed before the coupling. This takes time so I prepared a test case where the two solvers (fluid and structure) are coupled from the beginning. Unfortunately, the mesh is ignored by git in the TestCase folder, so I am not sure how to make it run. I would really appreciate if you could help me with this last point.; ; ## Related Work; #1124 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1148:1286,Test,TestCase,1286,https://su2code.github.io,https://github.com/su2code/SU2/pull/1148,2,"['Test', 'test']","['TestCase', 'test']"
Testability,pack-src/spack-build'; [2/2] Linking target UnitTests/test_driver; 1/1 Catch2 test driver FAIL 0.04s exit status 1; >>> MALLOC_PERTURB_=57 /home/stage/root/spack-stage-su2-7.3.0-hclqgqw633hcplsgqfeortvmkzd3ee2m/spack-src/spack-build/UnitTests/test_driver. Ok: 0; Expected Fail: 0; Fail: 1; Unexpected Pass: 0; Skipped: 0; Timeout: 0. Full log written to /home/stage/root/spack-stage-su2-7.3.0-hclqgqw633hcplsgqfeortvmkzd3ee2m/spack-src/spack-build/meson-logs/testlog.txt; logs:; 1/1 Catch2 test driver FAIL 0.04s exit status 1; 07:06:51 MALLOC_PERTURB_=57 /home/stage/root/spack-stage-su2-7.3.0-hclqgqw633hcplsgqfeortvmkzd3ee2m/spack-src/spack-build/UnitTests/test_driver; ----------------------------------- output -----------------------------------. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; test_driver is a Catch v2.11.1 host application.; Run with -? for options. -------------------------------------------------------------------------------; SIMD DOUBLE; -------------------------------------------------------------------------------; ../UnitTests/Common/vectorization.cpp:71; ............................................................................... ../UnitTests/Common/vectorization.cpp:82: FAILED:; CHECK( t[1] == 7 ); with expansion:; 0.0 == 7. ===============================================================================; test cases: 21 | 20 passed | 1 failed; assertions: 222 | 221 passed | 1 failed. x86_64:; [root@localhost spack-build]# meson test; ninja: Entering directory `/home/stage/root/spack-stage-su2-7.3.0-kuuiztf3o7iuzi424u4nekgw5ge6xv3r/spack-src/spack-build'; ninja: no work to do.; 1/1 Catch2 test driver OK 0.05s. Ok: 1; Expected Fail: 0; Fail: 0; Unexpected Pass: 0; Skipped: 0; Timeout: 0. Full log written to /home/stage/root/spack-stage-su2-7.3.0-kuuiztf3o7iuzi424u4nekgw5ge6xv3r/spack-src/spack-build/meson-logs/testlog.txt; ```; I want to know what's causing this difference. Does su2 not support aarch64 testing?,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1609:1691,test,test,1691,https://su2code.github.io,https://github.com/su2code/SU2/issues/1609,8,"['assert', 'log', 'test']","['assertions', 'log', 'logs', 'test', 'testing', 'testlog']"
Testability,"parallel_computation.py -n 12`. ; ```; tjim@t3500:/opt/su2/SU2/TestCases/rans/oneram6$ parallel_computation.py -n 12 -f turb_ONERAM6.cfg ; Traceback (most recent call last):; File ""/opt/su2/SU2v6.0.0/bin/parallel_computation.py"", line 116, in <module>; main(); File ""/opt/su2/SU2v6.0.0/bin/parallel_computation.py"", line 67, in main; options.compute ); File ""/opt/su2/SU2v6.0.0/bin/parallel_computation.py"", line 94, in parallel_computation; info = SU2.run.CFD(config) ; File ""/opt/su2/SU2v6.0.0/bin/SU2/run/interface.py"", line 122, in CFD; run_command( the_Command ); File ""/opt/su2/SU2v6.0.0/bin/SU2/run/interface.py"", line 302, in run_command; raise exception(message); SU2.EvaluationFailure: Path = /opt/su2/SU2/TestCases/rans/oneram6/,; Command = mpirun -n 12 /opt/su2/SU2v6.0.0/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '1'; --------------------------------------------------------------------------; There are not enough slots available in the system to satisfy the 12 slots; that were requested by the application:; /opt/su2/SU2v6.0.0/bin/SU2_CFD. Either request fewer slots for your application, or make more slots available; for use.; --------------------------------------------------------------------------; ```; It works if `-n 6` is used instead but then only half of the availalbe processes are being used. I'm not sure if this is a bug with parallel_computation.py (or just a ""feature"" which has not yet been implemented) but using SU2 6.0.0, not all my processing threads can be used when using OpenMPI 3.0.0. I think this is due to the fact that it's not possible to pass `--use-hwthread-cpus` to `mpirun` as is mentioned on the StackOverflow page, [here](https://stackoverflow.com/questions/48835603/unable-to-use-all-cores-with-mpirun). As a workaround, have tried; `tjim@t3500:/opt/su2/SU2/TestCases/rans/oneram6$ mpirun --use-hwthread-cpus -np 12 SU2_CFD turb_ONERAM6.cfg`; which seems to work ok. Is there any way to incorporate this into parallel_computation.py?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/526:1951,Test,TestCases,1951,https://su2code.github.io,https://github.com/su2code/SU2/issues/526,1,['Test'],['TestCases']
Testability,"pecifically from the Testcases I tried:; ; - `turbomachinery/APU_turbocharger/Jones_rst.cfg`; - `sliding_interface/rotating_cylinders/rot_cylinders_WA.cfg` (I saw a regression test failing for @economon which I was able to reproduce). I did some debugging and I think the code is wrong in `CBaseLineSolver::LoadRestart(...)` in solver_structure.cpp starting in line 3925. Inside that routine the `geometry` container is called as `geometry[iZone]` to address the final `C(Physical)Geometry` object. I think that the addressable level is the instance level i.e. it should be `geometry[iInst]`. ; As the Jones_rst case has two zones but only one instance the object `geometry[iZone=1]` in LoadRestart refers to what is `geometry_container[iZone=1][iInst=1]` in SU2_SOL.cpp - which does not exists and should be `geometry_container[iZone=1][iInst=0]`. Unfortunately it does not fail there directly for as it reaches (I guess) valid memory and simply interprets what it finds which leads to wrong evaluation of e.g. `GetnDim()=2376` or so. . I extracted a patch (apply with `patch -p1 < _patchfile_ ` in the root of the code directory) for the current develop branch which fixes the segfault problem for the above mentioned cases but I don't know whether it works correctly if multiple Instances are computed. ; [SU2_SOL_segfault_patch.txt](https://github.com/su2code/SU2/files/2328459/SU2_SOL_segfault_patch.txt) (github does not accept *.patch files...). Is there a testcase which covers multiple zones and multiple instances. At best with nZones!=nInstances? Can somebody confirm that this is actually a bug and if the patch fixes it? I probably don't know if it occurs somewhere else, so if somebody thinks their problems are related let me know. It is no problem to do a PR if I get some feedback. The (possible) bug was introduced here https://github.com/su2code/SU2/commit/1a75ebd0343694977a98c945833928bcc96932c1 . I hope my explanation of the bug above is somewhat understandable :); Cheers Tobi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/568:1581,test,testcase,1581,https://su2code.github.io,https://github.com/su2code/SU2/issues/568,1,['test'],['testcase']
Testability,"pi/../../../generated/medi/ampiFunctions.hpp: In function ‘int medi::AMPI_T_pvar_write(MPI_T_pvar_session, MPI_T_pvar_handle, const void*)’:; ../../../externals/medi/include/medi/ampi/../../../generated/medi/ampiFunctions.hpp:9732:49: error: invalid conversion from ‘const void*’ to ‘void*’ [-fpermissive]; return MPI_T_pvar_write(session, handle, buf);; ^; In file included from ../../../Common/lib/../src/../include/./mpi_structure.hpp:42:0,; from ../../../Common/lib/../src/../include/config_structure.hpp:41,; from ../../../Common/lib/../src/config_structure.cpp:38:; /usr/include/mpich-x86_64/mpi.h:1460:5: error: initializing argument 3 of ‘int MPI_T_pvar_write(MPI_T_pvar_session, MPI_T_pvar_handle, void*)’ [-fpermissive]; int MPI_T_pvar_write(MPI_T_pvar_session session, MPI_T_pvar_handle handle, void *buf);; ^; make[2]: *** [../src/libSU2_AD_a-config_structure.o] Error 1; make[2]: Leaving directory `/home/bu/SU2/SU2_AD/Common/lib'; make[1]: *** [all-recursive] Error 1; make[1]: Leaving directory `/home/bu/SU2/SU2_AD'; make: *** [SU2_AD] Error 2; ```; Following is the config log:; ```; checking build system type... x86_64-unknown-linux-gnu; checking host system type... x86_64-unknown-linux-gnu; checking target system type... x86_64-unknown-linux-gnu; checking for a BSD-compatible install... /usr/bin/install -c; checking whether build environment is sane... yes; checking for a thread-safe mkdir -p... /usr/bin/mkdir -p; checking for gawk... gawk; checking whether make sets $(MAKE)... yes; checking whether make supports nested variables... yes; checking for style of include used by make... GNU; checking whether the C++ compiler works... yes; checking for C++ compiler default output file name... a.out; checking for suffix of executables... ; checking whether we are cross compiling... no; checking for suffix of object files... o; checking whether we are using the GNU C++ compiler... yes; checking whether /usr/lib64/mpich/bin/mpicxx accepts -g... yes; checking dependency st",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:2747,log,log,2747,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['log'],['log']
Testability,platform.processor() in TestCase.py,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2159:24,Test,TestCase,24,https://su2code.github.io,https://github.com/su2code/SU2/issues/2159,1,['Test'],['TestCase']
Testability,"ps in reducing numerical diffusion offered by the scheme. Results from the literature shows that using the vorticity confinement technique, a better resolution is achieved in the problems like flow behind bluff bodies, rotors, wings etc. References. J. Steinhoff and D. Underhill, ``Modification of the euler equations for vorticity confinement: Application to the computation of interacting vortex rings,'' Physics of Fluids, vol.6, no.8, pp. 2738--2744, 1994. https://doi.org/10.1063/1.868164. D. A. Caughey and M. M. Hafez, Frontiers of Computational Fluid Dynamics 2006. WORLD SCIENTIFIC, 2005. https://www.worldscientific.com/doi/abs/10.1142/5963. R. Loehner and C. Yang, Vorticity confinement on unstructured grids, 40th AIAA Aerospace Sciences Meeting &amp; Exhibit, 2002. [Online]. Available: https://arc. aiaa.org/doi/abs/10.2514/6.2002-137. A. Povitsky and K. C. Pierson, ``Vorticity confinement applied to accurate prediction of convection of wing tip vortices and induced drag,'' International Journal of Computational Fluid Dynamics, vol. 35, no. 3, pp. 143--156, 2021. https://doi.org/10.1080/10618562.2020.1856822. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1854:2520,test,test,2520,https://su2code.github.io,https://github.com/su2code/SU2/pull/1854,1,['test'],['test']
Testability,"put should either be the average WCT for one time-iteration or the accumulated WCT since simulation start.; The screen output of `WALL_TIME ` should either be the average WCT for a time-iteration ( thus the same for all inner iterations ) or (better) correctly compute the average WCT of one inner iteration. **To Reproduce**; See attached mesh and config, but any transient simulation with activated WALL_TIME and implicit time integration should do.; [MeshAndConfig.zip](https://github.com/su2code/SU2/files/8034224/MeshAndConfig.zip). **Desktop (please complete the following information):**; - OS: SLES 15; - C++ compiler and version: icpc (intel 19.0.5.281); - MPI implementation and version: intelMPI 2019; - SU2 Version: 7.3.0 (master/develop). <div type='discussions-op-text'>. <sup>Originally posted by **ChristianBauerEng** February 8, 2022</sup>; Hi All!. I'm currently running transient, 2D axisymmetric simulations of an oscillating resonator. For now I'm still in the validation and testing phase, but the results look promising!. However, I've noticed that solver performance (as in Time/Iteration) seems to degrade over runtime, so I wanted to measure that by including `WALL_TIME` in screen and history output. I still have trouble understanding the outputs, though. The screen output looks like this:. > +-------------------------------------; > | Time_Iter| Inner_Iter| Time(sec); > +-------------------------------------; > | 45330| 0| 6.3412e+02; > | 45330| 5| 1.0572e+02; > | 45330| 10| 5.7680e+01; > +-------------------------------------; > | Time_Iter| Inner_Iter| Time(sec); > +-------------------------------------; > | 45340| 0| 6.3783e+02; > | 45340| 5| 1.0633e+02; > | 45340| 9| 6.3815e+01. The Time(sec) values of the 0th inner iteration seems to monotonically increase and represent the accumulated wall clock time since simulation start I assume. But what do the `Time(sec)` values for the inner iterations mean?. ~~In the history output, the `Time(sec)` field looks ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1542:1735,test,testing,1735,https://su2code.github.io,https://github.com/su2code/SU2/issues/1542,1,['test'],['testing']
Testability,"r DualTimeStepping 1st order. ; 1. The solution for timestep n-1 should be loaded instead of n-2 -> I added an if statement there.; 2. solution_old is used as a temporary container for the freshly loaded solution. Then the solution which is currently at solution_time_n is pushed to be the ""main"" solution n+1. Afterwards the solution_old is put in the solution_time_n container -> That last step was wrong such that the loaded solution never gets involved. I used the regression test in disc_adj_rans/cylinder which covers DualTimeStepping 2nd order and reused it for a new Testcase which covers 1st order. ; For now, the .travis.yml has a different su2code/Testcases branch in it such that other are not hindered by this PR when running travis. If this PR is merged with the new Testcase, the TestCases repo has to be updated and the .travis.yml needs to be reverted. ; Let me know if adding a new TestCase is OK. I am aware that not every detail can get its own regression test. . I checked my changes against finite differences for that Testcase. I'll post the result below. Additionally I suppressed the output of .csv files in driver_structure.cpp for unsteady simulations if `WRT_CSV_SOL= NO` is set. . Regards, Tobi. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; Nothing I know of. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/554:1164,Test,Testcase,1164,https://su2code.github.io,https://github.com/su2code/SU2/pull/554,2,"['Test', 'test']","['Testcase', 'test']"
Testability,"r in a hover state in order to compute the thrust. The blade is surrounded by a cylinder. The markers for each surfaces are:; -""inlet"" for the top of the cylinder; -""farfield"" for the sides of the cylinder; -""outlet"" for the bottom of the cylinder. The blade has been divided into 4 surfaces which have the following self explanatory marker names:; - ""propellerUpperSurface""; - ""propellerLowerSurface""; - ""propellerRightTip""; - ""propellerLeftTip"". Many combinations of the possible boundary conditions setup were tested for the ""inlet"", ""farfield"" and ""outlet"" markers. Furthermore the Inlet BC were tried with many different vertical speeds (vx=0/0.001/0.01/0.1/1/10). Simulations with the inlet, farfield and outlet as TOTAL_INLET, FARFIELD, OUTLET and EULER and some (not all) combination between these BC were tried. The mesh was generated with Salome-Meca. It is a tetrahedral mesh. I have a script that permits to change the domain size with ease. So from the mesh perspective it is fairly easy to test different mesh sizes and domain sizes.; Generally the outer domain radius was between 1.5*propRadius to 10*propRadus. Domain height between 3*propRadius to 15*propRadius. The prop was at 2/3 of the total height (1/2 and 3/4 were also tested). Some simulations approximated from a far experimental results (thrust +/-10% error, torque +/-15%). Some completely diverged some converge towards something way out of the 10% error range. **To Reproduce**. You can find the configuration file below.; I cannot provide the mesh at the moment.; If needed I will change the geometry for ""reproduction"". `%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%; % %; % SU2 configuration file %; % Case description: Caradonna & Tung rotor in hover (still air) %; % Author: Thomas D. Economon %; % Institution: Stanford University %; % Date: 2020.05.24 %; % File Version 7.3.1 ""Blackbird"" %; % %; %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%. ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1669:1946,test,test,1946,https://su2code.github.io,https://github.com/su2code/SU2/issues/1669,1,['test'],['test']
Testability,"rage that can demonstrate; > what broke.; > - You are fixing a very small bug. You know that you should prove that; > your bug fix worked, but it doesn't seem logical to dedicate an entire; > validation case to one small bug fix. You want to write a small test for a; > small fix.; >; > In all of these cases, unit testing fills a unique role. Unit testing; > increases time spent in development, but decreases the amount of time spent; > in bug-fixing and maintaining.; >; > For more information, see this relevant Stack Exchange question.; > <https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes>; > What do I propose?; >; > My research group at UT Austing has implemented a unit testing framework; > on our branch, which we're happy with. Some choices were arbitrary, and; > some choices were made based on our development environment. Those choices; > may be different for other groups. Here's what we have done:; >; > The unit testing framework is compiled and run using autotools. For more; > information on autotool's setup, see their documentation; > <https://www.gnu.org/software/automake/manual/html_node/Tests.html>.; > Since autotools is the build system for SU2, this involves minimal changes.; >; > Using automake, the build process for building unit tests becomes:; >; > '''; > ./bootstrap; > ./configure; > make; > make check; > '''; >; > We use Boost's unit testing framework; > <https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>.; > This provides a convenient set of macros for instatiating tests, grouping; > tests into suites, and running checks. This choice was based on what is; > available in our development setup.; >; > We have integrated our unit tests into our Travis CI regression testing.; > Every time we push commits or submit a pull request, the unit tests are run; > and checked.; > What is my vision for unit testing in SU2?; >; > I am *not* proposing that we start trying to get 100% ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:3798,test,testing,3798,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,1,['test'],['testing']
Testability,"rder variable extrapolation to the cell face; - X=1/3 gives a third-order approximation to the derivative at the node (the value used in the Piperno limiter to achieve 4th order dissipation). The reasons for these additions are; - The Piperno limiter is implemented in Inria's Wolf solver and seems to be used in a lot of their mesh adaptation work (see these references for [Euler](https://hal.inria.fr/hal-02378738v2/document) and [RANS](https://hal.inria.fr/tel-01962318/file/these_archivage_3570223.pdf)); - Some preliminary tests with the Piperno limiter have converged solutions on triangulated BL meshes that @jayantmukho and I couldn't get to converge with other limiters in SU2 (e.g. triangulated DSMA661 meshes from TMR); - The MUSCL parameter exists in other solvers (FUN3D, CFL3D, Wolf) and is used by the NASA codes for many of the TMR cases (e.g. CFL3D uses 1/3 and FUN3D uses 1/2 for the DSMA661 case). Further testing still needs to be done on the effect of the MUSCL parameter with other limiters, but leaving the value as default won't affect any of the test cases. ## Relevant config parameters; Piperno limiter:; ```; SLOPE_LIMITER_FLOW= PIPERNO; ```; MUSCL parameter:; ```; % Parameter to control upwinding in MUSCL extrapolation; % Kappa = 1/3 for Piperno limiter, Default = 0 otherwise; MUSCL_KAPPA= 0.0; ```. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1050:1597,test,testing,1597,https://su2code.github.io,https://github.com/su2code/SU2/pull/1050,2,['test'],"['test', 'testing']"
Testability,"rding the Test Cases and Tutorial files. I; apologize if this is the wrong place or this has been discussed already,; but still will give it a try:; - Test cases folder from SU2/su2code repository shall be moved to the; SU2/TestCases repository. Rationale: this makes one repository to store the; test case *.cfg files and mesh files.; - There shall be a TestCases/Mesh folder to store all the meshes needed for; Test Cases files, without subdivisions for RANS, Euler etc subfolders.; Considering that multiple test cases use the same mesh and all the mesh; files are distinct, this solution generates one place to store all the mesh; files. Should a user perform a test case, he/she will find the mesh by name; referenced in the *.cfg file instead searching thru multiple folders. This; will also help avoiding unnecessary copies of mesh files.; - The same should be done for Tutorial files: Tutorial/Mesh folder for; storing meshes (duplicating these few files from TestCases/Mesh should not; be a problem IMO, but will really help a new user to get up to speed with; SU2); - I have no clear opinion on where the Tutorial files folder should be; stored. But considering moving written tutorials to main repository i think; that tutorial files should also be stored in main SU2/su2code repository. Best regards and Happy New Year; Jędrzej. 2017-12-30 23:45 GMT+01:00 Tim Albring <notifications@github.com>:. > What do you think of moving the written tutorials also to the main; > repository ? Then we can have links in the wiki to the markdown files like; > this (the link will be much shorter if the files are in the master branch):; > https://github.com/su2code/SU2/blob/0e36facc031aaf6b411fd30a0aab80; > 29ebe325d8/Tutorials/Inviscid_Bump/Inviscid_Bump.md; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/485#issuecomment-354572803>, or mute; > the thread; > <https://github.co",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/485#issuecomment-354736415:1471,Test,TestCases,1471,https://su2code.github.io,https://github.com/su2code/SU2/pull/485#issuecomment-354736415,1,['Test'],['TestCases']
Testability,"re when I can think a bit more on this and get to a real keyboard!. Pat. On Wed, Jun 5, 2019 at 1:50 PM Juan Jose Alonso <jjalonso@stanford.edu>; wrote:. > Clark,; >; > Thanks for putting this idea out there. In my experience, unit testing; > has been an intrinsic part of the the modus operandi in many multi-physics; > codes at DoE and has been well worth the additional effort. In cases where; > it makes sense (as described by Clark and in the Stack Exchange discussion); > I would advocate for using it moving forward. There may also be some; > issues that arise multiple times in existing code where a retroactive; > application of unit testing may also make sense. I am copying Pat Miller,; > formerly with DoE, who may have more experience on whether such unit; > testing approaches were useful/worth the investment in some major codes he; > worked on.; >; > Best,; >; > Juan; >; >; > On Jun 4, 2019, at 2:14 PM, Clark Pederson <notifications@github.com>; > wrote:; >; > I propose adding a unit-testing framework and unit-tests to SU2. After; > chatting with @economon <https://github.com/economon>, I've decided to; > move the discussion here to get additional input.; > What is unit testing?; >; > For those not familiar with unit testing, unit testing allows the testing; > of small bits of behavior, ideally using isolated bits of code. It is not; > intended to replace validation testing or formal verification tests.; > Instead, it serves a unique purpose. Consider the three following use cases:; >; > - You're developing a new feature, and you want to test it to see if; > it works. You could do a full simulation, but that takes a lot of time and; > computing power. You want to check if your new behavior behaves as you; > suspect before you throw a lot of resources at it.; > - You submit a PR and discover that one of the regression tests has; > failed. But...why? You know that something is broken, but its hard to track; > down what broke. You want more granular test coverage th",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:1813,test,testing,1813,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,2,['test'],"['testing', 'tests']"
Testability,"res python 3, so implicitly we get this requirement now. But I think it is less of a problem than some of you probably might think. A lot of problems we have come from the fact the we support python 2 and python 3. As I was setting up travis (getting there in a moment) I noticed that is easily possible to compile the code with python 3 (for the python wrapper) and run the python scripts with python 2 and vice versa, which eventually leads to errors and crashes. If we require(!) version 3 (which should be installed on all machines now ...) we can avoid such problems from the beginning. Furthermore, python 2 is deprecated anyway ... - I already changed travis to use the new build system. This as one major advantage: we can now properly use ccache and the caching feature of travis (that means only files that have changed will be compiled if a cache is available). This should speed up the runs by a lot. . - automake and meson can coexist without any problems. Maybe we can keep this compatibility for version 7 and remove it later if we all agree. Also the preconfigure.py should not be necessary anymore then. - (unit) tests can be easily added and integrated into the build process. - I will add a proper documentation soon. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. #685 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/745:3362,test,tests,3362,https://su2code.github.io,https://github.com/su2code/SU2/pull/745,2,['test'],"['test', 'tests']"
Testability,"research group at UT Austing has implemented a unit testing framework on our branch, which we're happy with. Some choices were arbitrary, and some choices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more information on autotool's setup, see their documentation<https://www.gnu.org/software/automake/manual/html_node/Tests.html>. Since autotools is the build system for SU2, this involves minimal changes. Using automake, the build process for building unit tests becomes:. '''; ./bootstrap; ./configure; make; make check; '''. We use Boost's unit testing framework<https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>. This provides a convenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time we push commits or submit a pull request, the unit tests are run and checked. What is my vision for unit testing in SU2?. I am not proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. Roll-your-own. * Requires no external dependencies",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:3408,test,tests,3408,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,2,['test'],"['testing', 'tests']"
Testability,"ression for Linux and macOS runners (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/184"">actions/cache#184</a>)</li>; <li>Allowed caching for all events with a ref (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/63"">actions/cache#63</a>)</li>; <li>Created the <a href=""https://github.com/actions/toolkit/tree/master/packages/cache""><code>@actions/cache</code></a> npm package to allow other actions to utilize caching (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/55"">actions/cache#55</a>)</li>; <li>Added a best-effort step to delete the archive after extraction to reduces storage space (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/209"">actions/cache#209</a>)</li>; </ul>; <h2>v1.2.0</h2>; <h1>Bug Fixes</h1>; <ul>; <li>Fall back to GNU tar on older versions of Windows that do not have BSD tar installed (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/252"">#252</a>)</li>; <li>Fixed chunk upload retry logic (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/305"">#305</a>)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>3.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 16</li>; </ul>; <h3>3.0.1</h3>; <ul>; <li>Added support for caching from GHES 3.5.</li>; <li>Fixed download issue for files &gt; 2GB during restore.</li>; </ul>; <h3>3.0.2</h3>; <ul>; <li>Added support for dynamic cache size cap on GHES.</li>; </ul>; <h3>3.0.3</h3>; <ul>; <li>Fixed avoiding empty cache save when no files are available for caching. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/624"">issue</a>)</li>; </ul>; <h3>3.0.4</h3>; <ul>; <li>Fixed tar creation error while trying",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:4415,log,logic,4415,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['log'],['logic']
Testability,restart file update https://github.com/su2code/TestCases/pull/85,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1438#issuecomment-968060030:47,Test,TestCases,47,https://su2code.github.io,https://github.com/su2code/SU2/pull/1438#issuecomment-968060030,1,['Test'],['TestCases']
Testability,"rg/software/automake/manual/html_node/Tests.html>.; > Since autotools is the build system for SU2, this involves minimal changes.; >; > Using automake, the build process for building unit tests becomes:; >; > '''; > ./bootstrap; > ./configure; > make; > make check; > '''; >; > We use Boost's unit testing framework; > <https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>.; > This provides a convenient set of macros for instatiating tests, grouping; > tests into suites, and running checks. This choice was based on what is; > available in our development setup.; >; > We have integrated our unit tests into our Travis CI regression testing.; > Every time we push commits or submit a pull request, the unit tests are run; > and checked.; > What is my vision for unit testing in SU2?; >; > I am *not* proposing that we start trying to get 100% code coverage with; > pre-existing code. That would not provide a good return on investment.; >; > Instead, I see people adding unit tests as they write new code and as they; > find bugs. For each new behavior added to SU2, tests are first added to; > document the related existing behavior. These tests serve to check that the; > existing behavior isn't damaged by the new code. Then new tests are added; > to prove that the new behavior is working correctly. For bug fixes, the; > process is simpler. A test is added to confirm that something is not; > behaving as expected. Then the code is fixed to make the test pass.; > What frameworks are available?; >; > For a unit testing framework, here are the most popular options, with the; > following pros and cons:; > Roll-your-own; >; > - Requires no external dependencies; > - The most flexible option; > - Involves the most work to setup; > - Will lack some of the more advances features of mature unit-testing; > frameworks.; >; > Boost Test; >; > - Can be header only, statically linked, or dynamically linked; > - If statically or dynamically linked, then Boost is not very; > lightwe",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:4937,test,tests,4937,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,1,['test'],['tests']
Testability,"rmation on this topic in the documentation would be extremely helpful to a new user in understanding the differences between the available limiters and their respective strengths/weaknesses. There exists an [open pull request](https://github.com/su2code/su2code.github.io/pull/83/commits/4dcff98256e61d9d478e5af677859cbcfc6c80f1) within the documentation repo that starts this idea. However, it is incomplete and contains very little new information. . **Describe the solution you'd like**; We would like to contribute more to this idea. Specifically, we would like to add. - A description of why slope limiters are used in a FVM formulation. This can explain the concept of Total Variation Diminishing methods, monotonic schemes, and 2nd order accuracy requirements. ; - Mathematically describe the limiters available to the user in SU2. This will include a brief discussion of their properties (e.g., diffusivity, tunable parameters) and potential Sweby plots. ; - An empirical comparison of the available limiters on a test problem(s). One problem that was considered was the laminar cylinder, or the viscous wedge cases. The flowfield colored by the limiter value can be shown to the user. . **Describe alternatives you've considered**; N/A. **Additional context**; This issue ticket is part of an open-source community contribution assignment in our graduate studies ""Numerical Solutions to Partial Differential Equations"". Our team is comprised of four graduate students: Thomas Calascione (@tomtom252525) Grant Norman (@gnorman7), Kal Monroe (@kamo6346), Mitch Wall (@mitchwall85). Our academic research is highly coupled with CFD and numerical methods. For this reason, we chose SU2 as a community we wished to contribute to. . A secondary goal of this project is to familiarize ourselves with the workings of an open-source community. These include issue submission, pull-requests, and code reviews. Please let us know of any suggestions/comments on this, as we plan to begin work on this im",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1823:1250,test,test,1250,https://su2code.github.io,https://github.com/su2code/SU2/issues/1823,1,['test'],['test']
Testability,"rmetis \; --enable-metis \; --enable-cgns \; --prefix=$HOME/share/SU2/6.1.0-AD \. # ...; **Running configure in folder SU2_BASE; =====================================================================; Command: ../configure --with-HDF5-lib=/apps2/hdf5/1.8.17-ics-impi/lib --with-HDF5-include=/apps2/hdf5/1.8.17-ics-impi/include --with-ZLIB-lib=/apps2/zlib/1.2.8-ics/lib --with-ZLIB-include=/apps2/zlib/1.2.8-ics/include --with-SZIP-lib=/home/dic17007/share/szip/2.1.1/lib --with-SZIP-include=/home/dic17007/share/szip/2.1.1/include --enable-tecio=--enable-parmetis --enable-metis=--enable-cgns --prefix=/home/dic17007/share/SU2/6.1.0-AD --enable-mpi --enable-PY_WRAPPER. There was an error while running command '../configure --with-HDF5-lib=/apps2/hdf5/1.8.17-ics-impi/lib --with-HDF5-include=/apps2/hdf5/1.8.17-ics-impi/include --with-ZLIB-lib=/apps2/zlib/1.2.8-ics/lib --with-ZLIB-include=/apps2/zlib/1.2.8-ics/include --with-SZIP-lib=/home/dic17007/share/szip/2.1.1/lib --with-SZIP-include=/home/dic17007/share/szip/2.1.1/include --enable-tecio=--enable-parmetis --enable-metis=--enable-cgns --prefix=/home/dic17007/share/SU2/6.1.0-AD --enable-mpi --enable-PY_WRAPPER '.; === Error Log ===; configure: error: bad value --enable-parmetis for --enable-tecio; **; ```. a work-around: add `=yes` at certain `enable-xxx` options.; ```; CPPFLAGS=""-qopenmp -O3"" \; LDFLAGS=""-parallel"" \; PYTHON_CONFIG=`which python3-config` \; CC=`which mpiicc` \; CXX=`which mpiicpc` \; ./preconfigure.py --enable-autodiff \; --with-HDF5-lib=/apps2/hdf5/1.8.17-ics-impi/lib \; --with-HDF5-include=/apps2/hdf5/1.8.17-ics-impi/include \; --with-ZLIB-lib=/apps2/zlib/1.2.8-ics/lib \; --with-ZLIB-include=/apps2/zlib/1.2.8-ics/include \; --with-SZIP-lib=/home/dic17007/share/szip/2.1.1/lib \; --with-SZIP-include=/home/dic17007/share/szip/2.1.1/include \; --enable-tecio=yes \; --enable-parmetis=yes \; --enable-metis=yes \; --enable-cgns=yes \; --enable-PY_WRAPPER \; --enable-mpi \; --prefix=$HOME/share/SU2/6.1.0-AD ; ```",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/567:1810,Log,Log,1810,https://su2code.github.io,https://github.com/su2code/SU2/issues/567,1,['Log'],['Log']
Testability,"roughout the calculation.; - Results are the same, this is just a refactoring to improve performance, scalability, etc. while making the code much simpler and separating the periodic part. For the periodic BC:; - No longer need a preprocessing with SU2_MSH - use the original grid and just call SU2_CFD.; - Adjacent periodic faces are now possible, e.g., triply-periodic cube.; - Concept is now based on completing the residuals from partial control volumes on either side of a periodic face instead of creating extra halo cells.; - All periodic comms have been separated from the MPI point-to-point comms and are performed first for consistency. In a follow-up PR, I will remove many lines of code that are no longer needed (all Set_MPI_* routines, many outdated geometry routines, etc.). ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ~~I could use some help with testing this one, in particular the rotational periodicity, which might still need some changes. Unfortunately, I do not have the original meshes for the periodic cases in the repo that are failing (other than Poiseuille)..~~. ~~@salvovitale @LaSerpe @arubino: do you have the original grids for the periodic cases before adding the halos with SU2_MSH? I would like to make sure that everything is working ok for all previous capability.~~. All periodic meshes in the regressions have been updated for the new periodic BC, and a python script has been added to remove halo cells from old meshes that were preprocessed with SU2_MSH for the previous periodic BC implementation. Resolves #550 ; Resolves #431 ; Resolves #416 ; Resolves #252 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contributio",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/652:1790,test,testing,1790,https://su2code.github.io,https://github.com/su2code/SU2/pull/652,1,['test'],['testing']
Testability,"round first:. When a massflow is prescribed for periodic flow (`KIND_STREAMWISE_PERIODIC= MASSFLOW`), then a pressure drop is iterated(/adapted in each iteration) to fulfill that massflow requirement. In the Volume Source term only this pressure drop is used. The initial value at solver start is the value given in `STREAMWISE_PERIODIC_PRESSURE_DROP= ??` and for restarted/adjoint simulations the `STREAMWISE_PERIODIC_PRESSURE_DROP` from `flow.meta` is taken. Now this PR:. Until now, the update of the pressure drop, based on the difference between current and prescribed massflow, was done in the Flow solver Preprocessing. That causes some trouble as that routine is called multiple times during normal starts, restarts and even twice(!) for every normal iteration. So do not put any iterated quantities in those like I did. I now did put the update right in front of where it is used -> in the Source_Residual. Like so there shoulnd't be that much trouble of correct taping in that one iteration for the adjoint and it makes the logic of `Inner_iter/outer_iter==0` etc unnecessary. I am not sure the changes up until now are necessary but I am not sure whether they are enough tbh. I will update this description accordingly:. Update: So to give you an idea of the current state of gradient validation. My setup is the good'ol 2D periodic Pin case (fluid-only) with the Design variables being FFD-parameters only around the middle pin (so no Periodic Interface shenanigans up to now) and I have 4 OF: Avg_Temp and Drag on the middle-Pin Surface as well as the Pressure-drop between In/outlet plus massflow through in- OR outlet (which is the same in value but maybe not for the gradient :thinking: ):; 1. For prescribed pressure drop I get a very good agreement for Avg_Temp and Drag (below 0.1% relative diff across the board).; ![image](https://user-images.githubusercontent.com/31306376/152566341-c2d7dc06-c968-41d4-b655-6ba94c211684.png); For Massflow and pressure drop the gradients are off ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1536:1079,log,logic,1079,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536,1,['log'],['logic']
Testability,"roups of tests or individual tests.; + When `ninja test` or `meson test` is run, the test executable is only run once, sweeping through all the unit tests. The result only shows a single failure or a single success. If more detail is desired, then the test executable can be run manually.; + The relevant SU2 code is compiled as a library (e.g. `libSU2core`) and then linked into both the main executable (`SU2_CFD`) and the test program (`test_driver`). ### How to Run Unit Tests. If you compile SU2 using `ninja -C builddir`, then the test executable will automatically be compiled. You then have three options for running the tests:. + `meson test` (see documentation [here](https://mesonbuild.com/Unit-tests.html)); + `ninja test`; + Run the exectuable manually: `./UnitTests/test_driver`. When running the executable manually, there are many customization options. Run `./UnitTests/test_driver --help` to see them all. ### How to add unit tests. I have already included a single unit-test example (`UnitTests/SU2_CFD/src/numerics/CNumerics_tests.cpp`). Aside from the headaches with CConfig, this example should be clear. If not, raise questions and I will answer them. ~~I plan on adding a few more example tests, as well as a ""How-To"" page on the website.~~ Please see the PR on the website repo for more documentation. To learn more, check out the [great tutorial](https://github.com/catchorg/Catch2/blob/master/docs/tutorial.md) for Catch2. You can also find more in-depth documentation there. ### I still don't understand unit tests. Where can I learn more?. I highly recommend reading at least one of these two books:. + ""Working Effectively with Legacy Code,"" by Michael Feathers; + ""Modern C++ Programming with Test-Driven Development,"" by Jeff Langr. ## Remaining work. + ~~Add unit-testing to Travis CI~~; + ~~Add support for unit testing in AD builds~~; + ~~Add more examples of unit tests~~; + ~~Add ""How-To Add Unit Tests"" documentation~~. ## Related Work; This resolves issue #698. ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/850:2978,test,test,2978,https://su2code.github.io,https://github.com/su2code/SU2/pull/850,1,['test'],['test']
Testability,"rrently working on the backward facing step and I will work on the flatplate too. The choice of the validation test cases is key since the computational cost is quite large, thus if you have any suggestions that may speed up this part then feel free to write them down. . Implemented versions:; - SST-DDES; - SST-IDDES; - SST-SIDDES. I am also working on the Scale Adaptive Simulations (SAS) implementations for SST, following the work in ""ON URANS SOLUTIONS WITH LES-LIKE BEHAVIOUR"", Travis et al., and ""[Evaluation of scale-adaptive simulation for transonic cavity flows"", Babu et al., (https://www.inderscienceonline.com/doi/abs/10.1504/IJESMS.2016.075510). The last one, especially, is quite tricky due to the computation of the velocity laplacian. I tried computing it in Paraview as the divergence of the gradient field and it seems quite similar, but it is the first time that I've touched that section of the code, thus some work might still be needed. Implemented versions:; - SST-SAS_Simple (better naming is necessary), from the article of Travis et al.; - SST-SAS_Complicated (better naming is necessary), it is related to the article from Babu et al. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2150:2175,test,test,2175,https://su2code.github.io,https://github.com/su2code/SU2/pull/2150,1,['test'],['test']
Testability,"rth the additional effort. In cases where it makes sense (as described by Clark and in the Stack Exchange discussion) I would advocate for using it moving forward. There may also be some issues that arise multiple times in existing code where a retroactive application of unit testing may also make sense. I am copying Pat Miller, formerly with DoE, who may have more experience on whether such unit testing approaches were useful/worth the investment in some major codes he worked on. Best,. Juan. On Jun 4, 2019, at 2:14 PM, Clark Pederson <notifications@github.com<mailto:notifications@github.com>> wrote:. I propose adding a unit-testing framework and unit-tests to SU2. After chatting with @economon<https://github.com/economon>, I've decided to move the discussion here to get additional input. What is unit testing?. For those not familiar with unit testing, unit testing allows the testing of small bits of behavior, ideally using isolated bits of code. It is not intended to replace validation testing or formal verification tests. Instead, it serves a unique purpose. Consider the three following use cases:. * You're developing a new feature, and you want to test it to see if it works. You could do a full simulation, but that takes a lot of time and computing power. You want to check if your new behavior behaves as you suspect before you throw a lot of resources at it.; * You submit a PR and discover that one of the regression tests has failed. But...why? You know that something is broken, but its hard to track down what broke. You want more granular test coverage that can demonstrate what broke.; * You are fixing a very small bug. You know that you should prove that your bug fix worked, but it doesn't seem logical to dedicate an entire validation case to one small bug fix. You want to write a small test for a small fix. In all of these cases, unit testing fills a unique role. Unit testing increases time spent in development, but decreases the amount of time spent in bug-fi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:1190,test,testing,1190,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,2,['test'],"['testing', 'tests']"
Testability,run unit-test failed,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1331:9,test,test,9,https://su2code.github.io,https://github.com/su2code/SU2/issues/1331,1,['test'],['test']
Testability,"rward. There may also be some issues that arise multiple times in existing code where a retroactive application of unit testing may also make sense. I am copying Pat Miller, formerly with DoE, who may have more experience on whether such unit testing approaches were useful/worth the investment in some major codes he worked on. Best,. Juan. On Jun 4, 2019, at 2:14 PM, Clark Pederson <notifications@github.com<mailto:notifications@github.com>> wrote:. I propose adding a unit-testing framework and unit-tests to SU2. After chatting with @economon<https://github.com/economon>, I've decided to move the discussion here to get additional input. What is unit testing?. For those not familiar with unit testing, unit testing allows the testing of small bits of behavior, ideally using isolated bits of code. It is not intended to replace validation testing or formal verification tests. Instead, it serves a unique purpose. Consider the three following use cases:. * You're developing a new feature, and you want to test it to see if it works. You could do a full simulation, but that takes a lot of time and computing power. You want to check if your new behavior behaves as you suspect before you throw a lot of resources at it.; * You submit a PR and discover that one of the regression tests has failed. But...why? You know that something is broken, but its hard to track down what broke. You want more granular test coverage that can demonstrate what broke.; * You are fixing a very small bug. You know that you should prove that your bug fix worked, but it doesn't seem logical to dedicate an entire validation case to one small bug fix. You want to write a small test for a small fix. In all of these cases, unit testing fills a unique role. Unit testing increases time spent in development, but decreases the amount of time spent in bug-fixing and maintaining. For more information, see this relevant Stack Exchange question.<https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-wr",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:1357,test,test,1357,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,1,['test'],['test']
Testability,"ry it on my mesh I get a `UCX ERROR`. On running: `mpirun -n 40 --use-hwthread-cpus /opt/su2/SU2v7_adap/bin/SU2_CFD test.cfg`, I seem to get variations on this message in my screen output:; ```; | 49| -2.095057| 0.015781| 0.001431| 0.000000| 9.1667e+04|; | 50| -2.140503| 0.015781| 0.001431| 0.000000| 9.1667e+04|; +-----------------------------------------------------------------------+; | File Writing Summary | Filename |; +-----------------------------------------------------------------------+; |SU2 restart |restart_flow.dat |; |Paraview binary |flow.vtk |; |Paraview binary surface |surface_flow.vtk |; [1609922278.175246] [super:1134625:0] sock.c:344 UCX ERROR recv(fd=56) failed: Bad address; [1609922278.175301] [super:1134625:0] sock.c:344 UCX ERROR recv(fd=54) failed: Connection reset by peer; [1609922278.175551] [super:1134625:0] sock.c:344 UCX ERROR sendv(fd=-1) failed: Bad file descriptor. SU2_CFD: ../externals/parmetis/libparmetis/match.c:243: libparmetis__Match_Global: Assertion `k >= firstvtx && k < lastvtx' failed.; [super:1134138] *** Process received signal ***; [super:1134138] Signal: Aborted (6); [super:1134138] Signal code: (-6); [super:1134138] [ 0] /lib64/libpthread.so.0(+0x12b20)[0x7fb93d021b20]; [super:1134138] [ 1] /lib64/libc.so.6(gsignal+0x10f)[0x7fb93c1507ff]; [super:1134138] [ 2] /lib64/libc.so.6(abort+0x127)[0x7fb93c13ac35]; [super:1134138] [ 3] /lib64/libc.so.6(+0x21b09)[0x7fb93c13ab09]; [super:1134138] [ 4] /lib64/libc.so.6(+0x2fde6)[0x7fb93c148de6]; [super:1134138] [ 5] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a9be03]; [super:1134138] [ 6] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a94e76]; [super:1134138] [ 7] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a9590d]; [super:1134138] [ 8] /opt/su2/SU2v7_adap/bin/SU2_CFD[0xabb1bb]; [super:1134138] [ 9] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7ddf6b]; [super:1134138] [10] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7ded07]; [super:1134138] [11] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7df356]; [super:1134138] [12] /opt/su2/SU2v7_adap/bin/S",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1156:1410,Assert,Assertion,1410,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156,1,['Assert'],['Assertion']
Testability,"s : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. Name : lapack; Version : 3.9.0-2; Description : Linear Algebra PACKage; Architecture : x86_64; URL : https://www.netlib.org/lapack; Licenses : custom; Groups : None; Provides : None; Depends On : blas; Optional Deps : None; Required By : arpack qrupdate suitesparse; Optional For : None; Conflicts With : None; Replaces : None; Installed Size : 7.03 MiB; Packager : Antonio Rojas <arojas@archlinux.org>; Build Date : Sun 24 Nov 2019 04:13:58 PM IST; Install Date : Sat 22 Feb 2020 01:05:19 PM IST; Install Reason : Installed as a dependency for another package; Install Script : No; Validated By : Signature. Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. ```. I tried it without enabling openblas, it did move forward but broke further later in the build with a ridiculously long error message. For the sake of readability I am attaching a [logfile](https://github.com/su2code/SU2/files/4652822/su2_build_NoOpenBlas.log) here. For obvious reasons I think this is because of the `-Denable-pywrapper=true` flag. What is the problem here? I want to build SU2 with all these options available. I am also thinking maybe I should install mpich instead of openmpi to use mpi features.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-631053271:2370,log,logfile,2370,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631053271,2,['log'],"['log', 'logfile']"
Testability,"s a convenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time we push commits or submit a pull request, the unit tests are run and checked. What is my vision for unit testing in SU2?. I am not proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. Roll-your-own. * Requires no external dependencies; * The most flexible option; * Involves the most work to setup; * Will lack some of the more advances features of mature unit-testing frameworks. Boost Test. * Can be header only, statically linked, or dynamically linked; * If statically or dynamically linked, then Boost is not very lightweight; * Easy to add if you're already using Boost. Google Test. * Most common unit-testing framework; * Can be easily combined with Google's powerful GMock mocking library; * Compiling and linking can be somewhat painful. Catch2. * Used by FEniCS; * Makes unit tests easily readable with lots of syntactic sugar.; * Has a very simple syntax; * Is header-only; * Requires C++11 compilation; * Not as feature rich as Google Test or Boost Test. Questions. * How do developers feel about adding unit tests ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:4223,test,test,4223,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,1,['test'],['test']
Testability,"s pyBeam, a non-linear open source beam solver, into the SU2 infrastructure as a subproject, and adds support for coupled FSI simulations using SU2's flow solver and pyBeam's structural solver. Tutorials on how to use the implementation will come soon. At this point, only minor changes to the compilation and the python scripts are required. The impact to the core of the code is minor. I will be away for a few days, but please go ahead and have a look/comment/find room for improvement in the meantime :) I will reply to your comments as soon as I'm back to office. I also added a couple of test cases, but I haven't yet found the best way to hook them to our regression test system. I'll definitely look into it before the PR is merged, but due to personal time constraints, it'd be great if this could be integrated for 7.0.3. ## Related Work; This work is the result of a collaboration with @RoccoBombardieri and @crauno from the University Carlos III Madrid. . Please refer to a recent [paper at EUROGEN 2019](https://www.researchgate.net/publication/335972259_Towards_an_open-source_framework_for_aero-structural_design_and_optimization_within_the_SU2_suite) with regards to this work. Full reference will be provided here upon publication in an Springer ECCOMAS book series. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/902:1872,test,test,1872,https://su2code.github.io,https://github.com/su2code/SU2/pull/902,1,['test'],['test']
Testability,"s were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more information on autotool's setup, see [their documentation](https://www.gnu.org/software/automake/manual/html_node/Tests.html). Since autotools is the build system for SU2, this involves minimal changes. Using automake, the build process for building unit tests becomes:. ```; ./bootstrap; ./configure; make; make check; ```. We use [Boost's unit testing framework](https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html). This provides a convenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time we push commits or submit a pull request, the unit tests are run and checked. ## What is my vision for unit testing in SU2?. I am *not* proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. ## What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. #### Roll-your-own. + Requires no external dependencies; + The most flexible option; + Involves the most work to setup; + Will lack some of the more advances features of mature unit-testing f",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698:2758,test,testing,2758,https://su2code.github.io,https://github.com/su2code/SU2/issues/698,1,['test'],['testing']
Testability,"s. . In the present approach, the Blade Element Method (BEM) is used to calculate the pressure jump and swirl distributions across the propeller disc and is coupled to the SU2 solver. The blade loading and changes to the flow-field are calculated recursively. Propeller geometry details, airfoil characteristics, propeller speed and set blade angle are required as inputs. Using the thrust and power along the blade from BEM, and following the procedure of VLAD, axial and tangential velocities are imposed at the interface. BEM method is verified against the experimental results [Veldhuis, 2005] and found to be performing well. ## Related Work. This work was presented at; SU2 Conference 2022, 5--7 Sept 2022,; Propeller blade load calculation for actuator disk using blade element method.; https://www.youtube.com/watch?v=otM_Lz2MV4U. and published in; International Journal of Aeronautical and Space Sciences; https://doi.org/10.1007/s42405-023-00593-5. The grid file for the test case is in the new branch on the fork at; https://github.com/josy-nal/su2codeTestCases/tree/feature-actuatordisk-bem. This implementation is under active development seeking reviews, instructions and suggestions to meet SU2 code standards. References:. Saetta E, Russo L, Tgnaccini R (2020); Implementation and validation of a new actuator disk model in SU2.; SU2 conference 2020, virtual event. Veldhuis L (2005) Propeller-wing aerodynamic interface,; Ph.D. thesis, Delft University of Technology, Delft, Netherlands. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2142:1610,test,test,1610,https://su2code.github.io,https://github.com/su2code/SU2/pull/2142,1,['test'],['test']
Testability,"s/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes>; > What do I propose?; >; > My research group at UT Austing has implemented a unit testing framework; > on our branch, which we're happy with. Some choices were arbitrary, and; > some choices were made based on our development environment. Those choices; > may be different for other groups. Here's what we have done:; >; > The unit testing framework is compiled and run using autotools. For more; > information on autotool's setup, see their documentation; > <https://www.gnu.org/software/automake/manual/html_node/Tests.html>.; > Since autotools is the build system for SU2, this involves minimal changes.; >; > Using automake, the build process for building unit tests becomes:; >; > '''; > ./bootstrap; > ./configure; > make; > make check; > '''; >; > We use Boost's unit testing framework; > <https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>.; > This provides a convenient set of macros for instatiating tests, grouping; > tests into suites, and running checks. This choice was based on what is; > available in our development setup.; >; > We have integrated our unit tests into our Travis CI regression testing.; > Every time we push commits or submit a pull request, the unit tests are run; > and checked.; > What is my vision for unit testing in SU2?; >; > I am *not* proposing that we start trying to get 100% code coverage with; > pre-existing code. That would not provide a good return on investment.; >; > Instead, I see people adding unit tests as they write new code and as they; > find bugs. For each new behavior added to SU2, tests are first added to; > document the related existing behavior. These tests serve to check that the; > existing behavior isn't damaged by the new code. Then new tests are added; > to prove that the new behavior is working correctly. For bug fixes, the; > process is simpler. A test is added to confirm that something is not; > behaving as expected. Then the co",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:4394,test,tests,4394,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,2,['test'],['tests']
Testability,"scid bump; b) 2D oblique shocks interaction; c) ...; 2) RANS simulations: ; a) Flatplate; b) NACA0012; c) ...; 3) Unsteady simulations:; a) Square Cylinder; b) ...; 4) Turbomachinary: ; a) ... And so on. Each of the directories would have sub-directories for different mesh sizes, with configuration files for each mesh level that have optimized parameters for best results. So for example if we are talking about the NACA0012 case, we would have something along the lines of: . a) NACA0012; i) 113 x 33; ii) 225 x 65 ; iii) 449 x 129; iv) ... This way we have a family of meshes and configuration files that are specifically built for the purpose of validating the code and comparing with other solvers. I might be useful to compress meshes that are larger than a certain size (say 10MB). We should also put a limit on the size of a single mesh that the repository can handle (say 50MB?). . Within the home directory, the README file should list all the cases in the repository, who the custodian of the test case is (person with meshes in case the meshes are too large), and which version it was last run on. . I thought about splitting it up into Verification cases and Validation cases, but I thought it would be more informative and intuitive to split up according to the physics of the simulations. My thinking might be limited because that's how I have seen the TestCases folder organized, so any other suggestions are welcome. I think it is imperative that this is accompanied with a section on the SU2 website that showcases just the results of the validation test cases (grid convergence studies, residual reductions etc) and links to the v&v repo appropriately. This way, if people are just inquisitive about SU2's performance, they can get a quick snapshot of the results, without the need to run the cases themselves. . I also wanted to broach the topic of convergence here. Would it be a good idea to standardize the termination criteria wherever possible? For example, in the NACA0012 c",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-426026053:1204,test,test,1204,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-426026053,1,['test'],['test']
Testability,"separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tests or individual tests.; + When `ninja test` or `meson test` is run, the test executable is only run once, sweeping through all the unit tests. The result only shows a single failure or a single success. If more detail is desired, then the test executable can be run manually.; + The relevant SU2 code is compiled as a library (e.g. `libSU2core`) and then linked into both the main executable (`SU2_CFD`) and the test program (`test_driver`). ### How to Run Unit Tests. If you compile SU2 using `ninja -C builddir`, then the test executable will automatically be compiled. You then have three options for running the tests:. + `meson test` (see documentation [here](https://mesonbuild.com/Unit-tests.html)); + `ninja test`; + Run the exectuable manually: `./UnitTests/test_driver`. When running the executable manually, there are many customization options. Run `./UnitTests/test_driver --help` to see them all. ### How to add unit tests. I have already included a single unit-test example (`UnitTests/SU2_CFD/src/numerics/CNumerics_tests.cpp`). Aside from the headaches with CConfig, this example should be clear. If not, raise questions and I will answer them. ~~I plan on adding a few more example tests, as well as a ""How-To"" page on the website.~~ Please see the PR on the website repo for more documentation. To learn more, check out the [great tutorial](https://github.com/catchorg/Catch2/blob/master/docs/tutorial.md) for Catch2. You can also find more in-depth documentation there. ### I still don't understand unit tests. Where can I learn more?. I highly recommend reading at least one of these two books:. + ""Working Effectively with Legacy Code,"" by Michael Feathers; + ""Modern C+",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/850:2695,test,tests,2695,https://su2code.github.io,https://github.com/su2code/SU2/pull/850,1,['test'],['tests']
Testability,serial_regression_AD.py file comparison for the RHT-CFD Adjoint test,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1431:64,test,test,64,https://su2code.github.io,https://github.com/su2code/SU2/issues/1431,1,['test'],['test']
Testability,"several (multiblock structured) meshes:; - Gmsh (1M cells), SU2 and CGNS format; - ICEM (10M cells), CGNS format. At the preprocessing stage when computing the projection area of the EBW in the z-plane, I noticed that the meshes generated by Gmsh gave a wrong projection (~30 m2 instead of ~40 m2!).; I increased the height of the first cell in the boundary layer (which was set to match y+ ~ 1) and the problem disappeared when y+ got close to 30. Of course, this mesh is not usable without wall functions...; However, it does not seem to be the only problem since:; - the ICEM mesh does not converge to the expected value of Cl; - a colleague ran both (Gmsh and ICEM) meshes with identical settings on the commercial solver CFD++ and got the expected results (Cl = [0.4;0.5]). I also tried to tune these different numerical parameters, without success:; - ROE (2nd order with Vankatakrishnan/Vankatakrishnan-Wang limiter) and JST numerical schemes; - Green-Gauss or Weighted Least Square for gradients; - LU_SGS and ILU linear solver preconditionners. To make sure that SU2 was correctly compiled, I also:; - ran those simulations on SU2 v6.0.0 and v4.3.0, both compiled on Linux. I got the same results in both cases; - ran the Onera M6 test case provided with SU2; - created the same mesh that I used for the EBW with my Gmsh script but around the Onera M6 (I just changed the height of the first cell which is smaller for the M6 than for my wing). I recovered the expected results. Finally, I also ran the case with the Euler equations, on the EBW meshed with Gmsh, and recovered the expected results. In summary, I have tried several meshes from different software, with different numerical parameters on different SU2 versions, but always got bad results when solving RANS equations.; Particularly, the Gmsh mesh preprocessing on SU2 gave a bad z-projection of the EBW.; However, the same meshes gave converged results on CFD++. Any help or ideas would be appreciated.; Many thanks in advance.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/533:1721,test,test,1721,https://su2code.github.io,https://github.com/su2code/SU2/issues/533,1,['test'],['test']
Testability,"sing `SU2_MSH` for periodic mesh construction can be buggy due to its sorting of nodes. Under certain conditions, nodes can be duplicated and/or missing from the output *.su2 file. This pull request implements a more robust sorting process, where the sorting occurs in the following steps:. 1. Send/receive nodes are explicitly identified; 2. The sorted list is created without any send/receive nodes.; 3. The receive and then send nodes are added to the sorted list. Here's a few comments about the pull request:; + Since this routine is only run once, I felt the usability of std::vector outweighed the computational efficiency of raw arrays.; + I had to create two lists, NewSort and ReverseSort, instead of the original one list (NewSort). That's because two different mappings between node numbers need to occur. In the old code, where the list was sorted by switching elements, the two mappings _should_ have been identical. Since the improved method does not use switching, two lists are necessary.; + There's a lot of memory leaks/uninitialized values when checking this pull request with Valgrind. I checked them, and this pull request doesn't create any _new_ memory issues. Apparently both `SU2_CFD` and `SU2_MSH` have memory issues. #### Verification; Since none of the existing regression tests run `SU2_MSH`, I created a separate case to verify both the bug and the fix. It's a simple 3x3 cube that's periodic in the z-direction. I've attached the files below. Here's the steps:. 1. Run `SU2_MSH MSH.cfg`; 2. Run `SU2_CFD per_CFD_dev.cfg`. Using the existing develop branch, the verification case runs into a segfault when writing the output. This pull request allows the verification case to complete successfully. You can also check the original test case from Issue #431 to verify the bug fix. If any of you know of additional verification tests I could run, then please let me know. Test case: [cube.tar.gz](https://github.com/su2code/SU2/files/1639835/cube.tar.gz). This fixes #431",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/500:1331,test,tests,1331,https://su2code.github.io,https://github.com/su2code/SU2/pull/500,4,"['Test', 'test']","['Test', 'test', 'tests']"
Testability,"source : https://github.com/su2code/SU2/blob/72b2fa977b64b9683a388920f05298a40d39e5c5/Common/include/code_config.hpp#L42. is this a mistake?. this won't crash the code, but will most likely increase binary size when the purpose of NEVERINLINE is to prevent inlining. might cause performance degradation due to increasing binary size and causing instruction cache misses,. NEVERINLINE is being used in 2 places in the code base, one of them being in the simd numerics library : https://github.com/su2code/SU2/blob/72b2fa977b64b9683a388920f05298a40d39e5c5/SU2_CFD/include/numerics_simd/flow/diffusion/common.hpp#L98. i didn't do any further tests. thanks",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1584:639,test,tests,639,https://su2code.github.io,https://github.com/su2code/SU2/issues/1584,1,['test'],['tests']
Testability,"ss returned error '254'; cmap[28922] == -1; cmap[28853] == -1; cmap[28858] == -1; cmap[28966] == -1; cmap[28989] == -1; cmap[28943] == -1; cmap[28915] == -1; cmap[28950] == -1; cmap[28923] == -1; cmap[28871] == -1; cmap[28941] == -1; cmap[28887] == -1; cmap[28889] == -1; cmap[37] == -1; cmap[32342] == -1; cmap[24652] == -1; cmap[50507] == -1; cmap[51850] == -1; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun detected that one or more processes exited with non-zero status, thus causing; the job to be terminated. The first process to do so was:. Process name: [[57069,1],11]; Exit code: 254; --------------------------------------------------------------------------; ```. When I check the `log.out`, I see that it occurs when calling ParMETIS (`log.err` is empty):; ```; ------------------- Geometry Preprocessing ( Zone 0 ) -------------------; Three dimensional problem.; 7860157 grid points before partitioning.; 11486658 volume elements before partitioning.; 3 surface markers.; 32148 boundary elements in index 0 (Marker = BODY).; 76160 boundary elements in index 1 (Marker = FARFIELD).; 291440 boundary elements in index 2 (Marker = SYMMETRY).; Executing the partitioning functions.; Building the graph adjacency structure.; Calling ParMETIS...; ```. I figured that that this might not be an AMG issue but a 7.0.3 build issue, so I tried running `mpirun --use-hwthread-cpus -n 40 /opt/su2/SU2v7_adap/bin/SU2_CFD inv_test.cfg` on its own and also got a similar error:; ```; ------------------- Geometry Preprocessing ( Zone 0 ) -------------------; Three dimensional problem.; 7860157 grid points before partitioning.; 11486658 volume elements before partitioning.; 3 surface ma",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-754504570:2630,log,log,2630,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-754504570,1,['log'],['log']
Testability,"still don't know exactly why it sometimes fails all sst tests, I probably made some stupid error that I couldn't see. But at least the current situation is that it passes the regression tests...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1560#issuecomment-1097248226:56,test,tests,56,https://su2code.github.io,https://github.com/su2code/SU2/pull/1560#issuecomment-1097248226,2,['test'],['tests']
Testability,"sting './SU2/mesh'...; Listing './SU2/opt'...; Listing './SU2/run'...; Listing './SU2/util'...; Compiling './SU2/util/filter_adjoint.py'...; *** File ""./SU2/util/filter_adjoint.py"", line 182; raise Exception, 'unknown filter type'; ^; SyntaxError: invalid syntax. Compiling './compute_uncertainty.py'...; *** File ""./compute_uncertainty.py"", line 69; print ""\n\n =================== Performing "" + str(comp) + "" Component Perturbation =================== \n\n""; ^; SyntaxError: invalid syntax. Compiling './fsi_computation.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (fsi_computation.py, line 77); Listing './pySU2'...; ```; After fixing them and running `python -m compileall .` again the next set of similar error messages appears. This patch fix such `TabError`, `SyntaxError` (for `raise` and `print` functions), replace some indent tabs with spaces (generally with 8 spaces) before comments, remove trailing spaces where needed. Please fix this small issue as resulting patch to fix it for distributive build script is rather huge (~ 100 Kb). Many changes are in `SU2_PY/FSI/FSIInterface.py` and the `Split` mode of github change preview is more suitable to compare and to recheck the correctness of new indentation (or via Meld application). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/983:3108,test,test,3108,https://su2code.github.io,https://github.com/su2code/SU2/pull/983,1,['test'],['test']
Testability,"sting allows the testing of small bits of behavior, ideally using isolated bits of code. It is not intended to replace validation testing or formal verification tests. Instead, it serves a unique purpose. Consider the three following use cases:. * You're developing a new feature, and you want to test it to see if it works. You could do a full simulation, but that takes a lot of time and computing power. You want to check if your new behavior behaves as you suspect before you throw a lot of resources at it.; * You submit a PR and discover that one of the regression tests has failed. But...why? You know that something is broken, but its hard to track down what broke. You want more granular test coverage that can demonstrate what broke.; * You are fixing a very small bug. You know that you should prove that your bug fix worked, but it doesn't seem logical to dedicate an entire validation case to one small bug fix. You want to write a small test for a small fix. In all of these cases, unit testing fills a unique role. Unit testing increases time spent in development, but decreases the amount of time spent in bug-fixing and maintaining. For more information, see this relevant Stack Exchange question.<https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes>. What do I propose?. My research group at UT Austing has implemented a unit testing framework on our branch, which we're happy with. Some choices were arbitrary, and some choices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more information on autotool's setup, see their documentation<https://www.gnu.org/software/automake/manual/html_node/Tests.html>. Since autotools is the build system for SU2, this involves minimal changes. Using automake, the build process for building unit tests becomes:. '''; ./bootstrap; ./confi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:2061,test,testing,2061,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,1,['test'],['testing']
Testability,"sting allows the testing of small bits of behavior, ideally using isolated bits of code. It is not intended to replace validation testing or formal verification tests. Instead, it serves a unique purpose. Consider the three following use cases:. + You're developing a new feature, and you want to test it to see if it works. You could do a full simulation, but that takes a lot of time and computing power. You want to check if your new behavior behaves as you suspect before you throw a lot of resources at it.; + You submit a PR and discover that one of the regression tests has failed. But...why? You know that something is broken, but its hard to track down what broke. You want more granular test coverage that can demonstrate what broke.; + You are fixing a very small bug. You know that you should prove that your bug fix worked, but it doesn't seem logical to dedicate an entire validation case to one small bug fix. You want to write a small test for a small fix. In all of these cases, unit testing fills a unique role. Unit testing increases time spent in development, but decreases the amount of time spent in bug-fixing and maintaining. For more information, see this [relevant Stack Exchange question.](https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes). ## What do I propose?. Our research group at UT Austin has implemented a unit testing framework on our branch, which we're happy with. Some choices were arbitrary, and some choices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more information on autotool's setup, see [their documentation](https://www.gnu.org/software/automake/manual/html_node/Tests.html). Since autotools is the build system for SU2, this involves minimal changes. Using automake, the build process for building unit tests becomes:. ```; ./bootstrap; ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698:1238,test,testing,1238,https://su2code.github.io,https://github.com/su2code/SU2/issues/698,1,['test'],['testing']
Testability,"sts as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. Roll-your-own. * Requires no external dependencies; * The most flexible option; * Involves the most work to setup; * Will lack some of the more advances features of mature unit-testing frameworks. Boost Test. * Can be header only, statically linked, or dynamically linked; * If statically or dynamically linked, then Boost is not very lightweight; * Easy to add if you're already using Boost. Google Test. * Most common unit-testing framework; * Can be easily combined with Google's powerful GMock mocking library; * Compiling and linking can be somewhat painful. Catch2. * Used by FEniCS; * Makes unit tests easily readable with lots of syntactic sugar.; * Has a very simple syntax; * Is header-only; * Requires C++11 compilation; * Not as feature rich as Google Test or Boost Test. Questions. * How do developers feel about adding unit tests to SU2?; * If a unit-testing framework were added to SU2, would you actually use it?; * Do developers have a preference (or experience with) any of the unit testing frameworks?; * Should unit tests be expected when submitting PRs?. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/698?email_source=notifications&email_token=AA5FFRG5U3Z55N4W2XWQED3PY3LJ5A5CNFSM4HTDQXQKYY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4GXUGGLA>, or mute the thread<ht",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:4766,Test,Test,4766,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,1,['Test'],['Test']
Testability,"sts. If you compile SU2 using `ninja -C builddir`, then the test executable will automatically be compiled. You then have three options for running the tests:. + `meson test` (see documentation [here](https://mesonbuild.com/Unit-tests.html)); + `ninja test`; + Run the exectuable manually: `./UnitTests/test_driver`. When running the executable manually, there are many customization options. Run `./UnitTests/test_driver --help` to see them all. ### How to add unit tests. I have already included a single unit-test example (`UnitTests/SU2_CFD/src/numerics/CNumerics_tests.cpp`). Aside from the headaches with CConfig, this example should be clear. If not, raise questions and I will answer them. ~~I plan on adding a few more example tests, as well as a ""How-To"" page on the website.~~ Please see the PR on the website repo for more documentation. To learn more, check out the [great tutorial](https://github.com/catchorg/Catch2/blob/master/docs/tutorial.md) for Catch2. You can also find more in-depth documentation there. ### I still don't understand unit tests. Where can I learn more?. I highly recommend reading at least one of these two books:. + ""Working Effectively with Legacy Code,"" by Michael Feathers; + ""Modern C++ Programming with Test-Driven Development,"" by Jeff Langr. ## Remaining work. + ~~Add unit-testing to Travis CI~~; + ~~Add support for unit testing in AD builds~~; + ~~Add more examples of unit tests~~; + ~~Add ""How-To Add Unit Tests"" documentation~~. ## Related Work; This resolves issue #698. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/850:3526,test,tests,3526,https://su2code.github.io,https://github.com/su2code/SU2/pull/850,7,"['Test', 'test']","['Test-Driven', 'Tests', 'test', 'testing', 'tests']"
Testability,"t broke. You want more granular test coverage that can demonstrate what broke.; * You are fixing a very small bug. You know that you should prove that your bug fix worked, but it doesn't seem logical to dedicate an entire validation case to one small bug fix. You want to write a small test for a small fix. In all of these cases, unit testing fills a unique role. Unit testing increases time spent in development, but decreases the amount of time spent in bug-fixing and maintaining. For more information, see this relevant Stack Exchange question.<https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes>. What do I propose?. My research group at UT Austing has implemented a unit testing framework on our branch, which we're happy with. Some choices were arbitrary, and some choices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more information on autotool's setup, see their documentation<https://www.gnu.org/software/automake/manual/html_node/Tests.html>. Since autotools is the build system for SU2, this involves minimal changes. Using automake, the build process for building unit tests becomes:. '''; ./bootstrap; ./configure; make; make check; '''. We use Boost's unit testing framework<https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>. This provides a convenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time we push commits or submit a pull request, the unit tests are run and checked. What is my vision for unit testing in SU2?. I am not proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investmen",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:2703,test,testing,2703,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,1,['test'],['testing']
Testability,"t in bug-fixing and maintaining. For more information, see this [relevant Stack Exchange question.](https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes). ## What do I propose?. Our research group at UT Austin has implemented a unit testing framework on our branch, which we're happy with. Some choices were arbitrary, and some choices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more information on autotool's setup, see [their documentation](https://www.gnu.org/software/automake/manual/html_node/Tests.html). Since autotools is the build system for SU2, this involves minimal changes. Using automake, the build process for building unit tests becomes:. ```; ./bootstrap; ./configure; make; make check; ```. We use [Boost's unit testing framework](https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html). This provides a convenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time we push commits or submit a pull request, the unit tests are run and checked. ## What is my vision for unit testing in SU2?. I am *not* proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is no",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698:2357,test,test,2357,https://su2code.github.io,https://github.com/su2code/SU2/issues/698,1,['test'],['test']
Testability,"t in development, but decreases the amount of time spent in bug-fixing and maintaining. For more information, see this [relevant Stack Exchange question.](https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes). ## What do I propose?. Our research group at UT Austin has implemented a unit testing framework on our branch, which we're happy with. Some choices were arbitrary, and some choices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more information on autotool's setup, see [their documentation](https://www.gnu.org/software/automake/manual/html_node/Tests.html). Since autotools is the build system for SU2, this involves minimal changes. Using automake, the build process for building unit tests becomes:. ```; ./bootstrap; ./configure; make; make check; ```. We use [Boost's unit testing framework](https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html). This provides a convenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time we push commits or submit a pull request, the unit tests are run and checked. ## What is my vision for unit testing in SU2?. I am *not* proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is s",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698:2295,test,testing,2295,https://su2code.github.io,https://github.com/su2code/SU2/issues/698,1,['test'],['testing']
Testability,"t iterate with the basis vectors, the Newton step is cheap as n is small). The residuals are obtained from a fully coupled adjoint CHT problem (2d heated cylinder in laminar flow) with a heatflux objective function. ![plot](https://user-images.githubusercontent.com/22639394/122736716-9ad18000-d280-11eb-9983-c2d47d434dc5.png). (Purple: No correction applied, Green/Blue: Usage of 1-dim. basis after extraction of one basis vector at around 500 iterations, Yellow: MPI run with two processes using the manual but MPI-compatible Gram-Schmidt-QR-decomposition for identification of basis vectors.); ; **The code is WIP.** It needs a lot of additions, changes and testing, though the overall structure should be clear from what's already implemented. ToDo's:; - Remove Eigen dependencies, not needed anymore; - Add a meaningful testcase; - Add eigenvalue estimation / QR criterion values to screen and history output fields; - Implement a basisMaintenance()-routine; - Figure out a proper base class for both `CQuasiNewtonInvLeastSquares` and `CNewtonUpdateOnSubspace`; - Figure out further algorithmic strategies for multiphysics problems, now the default is to create the basis in the outer loop, and to apply it for corrections in the inner. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1217:2704,test,test,2704,https://su2code.github.io,https://github.com/su2code/SU2/pull/1217,1,['test'],['test']
Testability,"t like. ```cpp; if (rank == MASTER_NODE) {; cout << ""My Message"" << endl;; }; ```; This is not a good example from many points of view. From performance-wise overly used `std::endl` is a killer. If one needs to redirect output to file it is additional loss etc. ; From the user's perspective, it is not possible to set the logging level. At least a three-level logging would be nice (INFO/WARNING/DEBUG) this also makes life easier for developers too. It is also nice to have a rotating log file if one runs longer cases on the HPC systems. After a while the log files getting so bloating . **Describe the solution you'd like**. A configurable logger would be better with defaults not changing the current system. ```text; % LOGGING LOCATIONS default is SCREEN; LOG= (SCREEN, FILE); % Default is SU2.log; LOG_FILE = ""myLog.log""; % Logging level INFO/DEBUG ; LOG_LEVEL = ""DEBUG"" ; ```; In the code . For general messages ; ```cpp; INFO << ""My useful information"";; DEBUG << ""Operation done in "" << time << "" seconds"";; ```. There is also a lot of `--------------- Start Solver ----------` type headers in the code we can automate this as . ```cpp; HEADER << ""Start Solver""; ; ```. **Describe alternatives you've considered**. A proper choice of logging library is required. Alternatives I considered: . [AixLog](https://github.com/badaix/aixlog). - Header only; - Vanilla C++11, no dependencies; - Uses `<<` operator; - MIT licence. [spdlog](https://github.com/gabime/spdlog); - Header only/compiled; - C++11; - Uses LOG("""") syntax ; - More users/mature project ; - MIT licence. [easylogging](https://github.com/amrayn/easyloggingpp); - Header only; - C++11; - Uses `<<` operator; - MIT licence . [glog](https://github.com/google/glog); - C++14 required the codebase must be bumped (may not be worth it); - Uses `<<` operator ; - Google Licence (IDK if it comp. with GPL). I am in favor of spdlog library . **Additional context**; *Add any other context or screenshots about the feature request here.*",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1991:1312,log,logging,1312,https://su2code.github.io,https://github.com/su2code/SU2/issues/1991,2,"['LOG', 'log']","['LOG', 'logging']"
Testability,"t normal (and a tangent to this normal) the current implementation of BC_Sym cannot be ""exploited"" to serve as an ""inviscid (slip) wall"" for non-straight markers. Using `MARKER_EULER= ( sym )` is not correct either as the gradients of the velocity components (used in the viscous stress tensor of the momentum equations) are not computed correctly for the reflected state. Although using MARKER_EULER in the current develop will give you the same results as the master (or older develop before #657 ) with MARKER_SYM (... as it uses the same implementation). If you pull the ""Preprocessing"" part from the develop Sym_BC into the loop over all vertices of the boundary marker, the unit normal (and tangential) gets recomputed for each vertex. That gives you results which should be a lot closer to what happens in the master. Plus handling the velocity gradient correctly. From my point of view this would be the correct way.; Apply this patch in the root of the latest develop code using `patch -p1 < SymAsInviscidSlipWall.diff` to get the code I mean. [SymAsInviscidSlipWall.diff.txt](https://github.com/su2code/SU2/files/3417354/SymAsInviscidSlipWall.diff.txt). The implementation of the Symmetry_BC could serve double as 'Inviscid (slip) wall' (which is prescribed in the NASA documents) for viscous flow if the 'Preprocessing' part gets recomputed for each boundary vertex. But how to integrate that best is s.th. to discuss. One could just pull it in at some higher computational cost, put a conditional together with a boolean (e.g. SYMMETRY_AS_SLIP_WALL= YES) or fixing and using MARKER_EULER for that case. I hope that clarifies what happens with that boundary. Please let me know if that works for you and fixes the issue. When I fixed the Regression Testcases for #657 i think that this one was not part of it, right? Maybe this validation case goes into the su2code/VandV repo :) . Cheers,Tobi. Edit: I think we can all agree, that it is Toms fault due to his requested changes in the PR 😉",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/735#issuecomment-513801538:2673,Test,Testcases,2673,https://su2code.github.io,https://github.com/su2code/SU2/issues/735#issuecomment-513801538,1,['Test'],['Testcases']
Testability,"t to discussion…in essence both are performing similar duties, but people should express their opinions. With that said, how about a boolean such as USE_WALL_FUNCTIONS / USE_WALL_MODEL (YES or NO) with an optional argument WALL_FUNCTION_TYPE / WALL_MODEL_TYPE that can taken one of many pre-specified values that can be added as these options are developed and tested? Certainly options like STANDARD_WALL_FUNCTION, ADAPTIVE_WALL_FUNCTION, SCALABLE_WALL_FUNCTION, compressible and incompressible versions, and even EQUILIBRIUM_WALL_MODEL and NONEQUILIBRIUM_WALL_MODEL are things that are likely to be in the code in the near future. Thoughts?. Juan. On Sep 5, 2017, at 2:27 PM, Thomas D. Economon <notifications@github.com<mailto:notifications@github.com>> wrote:. @petebachant<https://github.com/petebachant>: the paper that I linked earlier on this thread had some fairly simple examples similar to the one you propose.. different flat plates and so on with varying y^+. You can likely reuse the grid(s) in the TestCases repo. @vdweide<https://github.com/vdweide>: it was very simple in this first implementation. It checks for a single boolean for whether or not to apply wall functions (WALL_FUNCTIONS= YES or NO, https://github.com/su2code/SU2/blob/43b8a4015c4b09b01d78e4243d32011c663c2b70/SU2_CFD/src/solver_direct_mean.cpp#L15339), and then assumes they should be applied to all no-slip walls (heat flux or isothermal, https://github.com/su2code/SU2/blob/43b8a4015c4b09b01d78e4243d32011c663c2b70/SU2_CFD/src/solver_direct_mean.cpp#L16653). This could of course be made more specific for individual markers using a config structure like MARKER_MONITORING to list them, or by making a dedicated BC type for it potentially. —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/399#issuecomment-327308587>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxJUhyEBSuSzHV1a7BZM_Frxbtb5sks5sfb",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-327313634:1342,Test,TestCases,1342,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-327313634,1,['Test'],['TestCases']
Testability,"t:7.2pt;}; -->. </head>. <body>; <!--StartFragment-->.   | Fluent | SU2; -- | -- | --; Flux | Roe-FDS | L2ROE; Gradient | Least Squares Cell Based | WEIGHTED_LEAST_SQUARES; Spatial Discretization Flow | Third-order MUSCL | MUSCL_FLOW; Spatial Discretization Turbulence | First-order Upwind | MUSCL_NO. <!--EndFragment-->; </body>. </html>; The CFL number is set constant value. Some high-resolution grid-level results are missed because I don't have enough computational resources.; Here is Result. T3A : . ![image](https://user-images.githubusercontent.com/50565314/180910576-f6ebcaca-eafe-47bf-8e97-e5ea90033991.png); ![image](https://user-images.githubusercontent.com/50565314/180909770-0bceb6e3-2b1a-4112-bfd8-51b45d7ea082.png); ![image](https://user-images.githubusercontent.com/50565314/180909897-2eb4d123-68f5-4e0b-b09a-c201c7a5d8ad.png); ![image](https://user-images.githubusercontent.com/50565314/180909936-f5766fd8-a5b3-428e-9ed4-bfe43de9f911.png). T3A-: ; The gird test result is not converged, but It's enough to compare the model. ![image](https://user-images.githubusercontent.com/50565314/180910790-a68881b3-9be6-45c4-aab3-333665d90798.png); ![image](https://user-images.githubusercontent.com/50565314/180910812-12dd3fa9-7c04-4319-845e-b37628752b2c.png); ![image](https://user-images.githubusercontent.com/50565314/180910818-4cdb2b80-d0fd-4303-9f25-d3b2f6b4fe6b.png); ![image](https://user-images.githubusercontent.com/50565314/180910823-88a0d2bd-3439-4318-a749-44867e259436.png). NLF : ; AoA 0 case is shown. In this case, the flow separation occurred on the upper surface. So, not fully converged, and I show only Fine level grid results according to the number of iterations. ; ![image](https://user-images.githubusercontent.com/50565314/180913288-e8d3bc9c-f153-4889-a2ea-d2527f81f897.png); Zoom to the separation region : ; ![image](https://user-images.githubusercontent.com/50565314/180913656-410185d5-2466-41a6-b074-6f0dbeb8afea.png). ## PR Checklist; *Put an X by all that apply.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1751:3104,test,test,3104,https://su2code.github.io,https://github.com/su2code/SU2/pull/1751,1,['test'],['test']
Testability,"t:7.2pt;}; -->. </head>. <body>; <!--StartFragment-->.   | Fluent | SU2; -- | -- | --; Flux | Roe-FDS | L2ROE; Gradient | Least Squares Cell Based | WEIGHTED_LEAST_SQUARES; Spatial Discretization Flow | Third-order MUSCL | MUSCL_FLOW; Spatial Discretization Turbulence | First-order Upwind | MUSCL_NO. <!--EndFragment-->; </body>. </html>; The CFL number is set constant value. Some high-resolution grid-level results are missed because I don't have enough computational resources.; Here is Result. T3A : . ![image](https://user-images.githubusercontent.com/50565314/180910576-f6ebcaca-eafe-47bf-8e97-e5ea90033991.png); ![image](https://user-images.githubusercontent.com/50565314/180909770-0bceb6e3-2b1a-4112-bfd8-51b45d7ea082.png); ![image](https://user-images.githubusercontent.com/50565314/180909897-2eb4d123-68f5-4e0b-b09a-c201c7a5d8ad.png); ![image](https://user-images.githubusercontent.com/50565314/180909936-f5766fd8-a5b3-428e-9ed4-bfe43de9f911.png). T3A-: ; The gird test result is not converged, but It's enough to compare the model. ![image](https://user-images.githubusercontent.com/50565314/180910790-a68881b3-9be6-45c4-aab3-333665d90798.png); ![image](https://user-images.githubusercontent.com/50565314/180910812-12dd3fa9-7c04-4319-845e-b37628752b2c.png); ![image](https://user-images.githubusercontent.com/50565314/180910818-4cdb2b80-d0fd-4303-9f25-d3b2f6b4fe6b.png); ![image](https://user-images.githubusercontent.com/50565314/180910823-88a0d2bd-3439-4318-a749-44867e259436.png). NLF : ; AoA 0 case is shown. In this case, the flow separation occurred on the upper surface. So, not fully converged, and I show only Fine level grid results according to the number of iterations. ; ![image](https://user-images.githubusercontent.com/50565314/180913288-e8d3bc9c-f153-4889-a2ea-d2527f81f897.png); Zoom to the separation region : ; ![image](https://user-images.githubusercontent.com/50565314/180913656-410185d5-2466-41a6-b074-6f0dbeb8afea.png). Now I'm testing on effect of the numerical sc",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1592#issuecomment-1194936824:2450,test,test,2450,https://su2code.github.io,https://github.com/su2code/SU2/pull/1592#issuecomment-1194936824,1,['test'],['test']
Testability,"taken from the direction of flow (more details in the velocity triangle pdf attached). The solver can then interpolate the data two ways: 1D Linear Interpolation or 1D Akima Interpolation. I added three new options in .cfg file:; INLET_INTERPOLATION_FUNCTION = None, Linear_1D, Akima_1D; INLET_INTERPOLATION_TYPE = vr_vtheta, alpha_phi; PRINT_INLET_INTERPOLATED_DATA = yes/no (for those curious what is the exact interpolated data). Given the generality of the approach, I have taken this will work for 2D cases or cases with multiple inlets without any issue. I am attaching a sample test case with detailed examination of results shown below. I am also attaching my equations that I used. Note that I define theta counterclockwise positive from x-axis. [testcase.zip](https://github.com/su2code/SU2/files/4217420/testcase.zip). I changed the inlet file angle to degrees rather than radians for alpha,phi option. All the graphs below have been plotted with radians. I have included both radians and degrees inlet file in the testcase. From now on, the inlet angles have to be in degrees! I have plotted graphs to verify the conversion was successful but I am not posting the graphs here as it is already a lot of data. For further details on Vr Vtheta and alpha, phi definitions you can refer this document: ; [velocity_triangles.pdf](https://github.com/su2code/SU2/files/4219369/velocity_triangles.pdf). These are the coordinate conversion equations I have used. The right ones are the ones used in SU2 to convert to Vx, Vy the left ones are used in python script for comparison along with the equations from velocity triangles (reference: [Link](https://ocw.mit.edu/courses/aeronautics-and-astronautics/16-07-dynamics-fall-2009/lecture-notes/MIT16_07F09_Lec05.pdf)). ![equations for coordinate conversion](https://user-images.githubusercontent.com/46273732/74617194-fbcfcd80-50f9-11ea-8d3b-76c1da2fe6b7.png). Following are the plots for the interpolated data for every quantity. Akima is definitely",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/815:1618,test,testcase,1618,https://su2code.github.io,https://github.com/su2code/SU2/pull/815,1,['test'],['testcase']
Testability,"tantiateSpeciesNumerics<CIncEulerVariable::CIndices<unsigned short> >(unsigned short, int, CConfig const*, CSolver const*, CNumerics****&) const (CDriver.cpp:1366); 357 ==139924== by 0x463C0B: CDriver::Numerics_Preprocessing(CConfig*, CGeometry**, CSolver***, CNumerics****&) const (CDriver.cpp:2053); 358 ==139924== by 0x458FAB: CDriver::CDriver(char*, unsigned short, ompi_communicator_t*, bool) (CDriver.cpp:207); 359 ==139924== by 0x48ADD5: CSinglezoneDriver::CSinglezoneDriver(char*, unsigned short, ompi_communicator_t*) (CSinglezoneDriver.cpp:38); 360 ==139924== by 0x415ACE: main (SU2_CFD.cpp:124); ```; i.e. the norm of the residual; (this does not occur for the same case with only 1 species). My first thought: ok if it comes from species_diffusion and i get pointed to the `nrm` then it sth going with the residual so I put a conditional for the `Flux` after its computation which should trigger valgrind to show another error there which it doesn't. ... And it only shows up when using inlet files with more than 1 species (meanign the general problem and the above valgrind problem). . That whole debugging experience was total garbage because the whole problem is super flaky where I feel I cannot rely on the problem to show up consistently and seemingly unrelated changes shift the whole problem... my favorite was: at some point I got the classic `FGMRES diverged` thing at the simulation start -> I thought lets go and check for NAN's and comment in fenv -> with the two additonal lines commented in + compiled the problem was gone -> ok, well revert the change and test again -> Problem Still gone and not seen again UNTIL i look at what the github regression test do because there it shows up again whereas I can run that no problem locally. ; I dont know what to do about this, I tried quite a few things without success but I am glad for each suggestion. Oh and in all of this the mean flow (and turbulence) residuals are perfectly matching. So it is a species specific problem",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1388#issuecomment-968058603:6316,test,test,6316,https://su2code.github.io,https://github.com/su2code/SU2/pull/1388#issuecomment-968058603,2,['test'],['test']
Testability,"te well as shown below. I haven't finished calculating for all design variables, but I think it is enough. ![Comparison_gradient](https://user-images.githubusercontent.com/18245846/129564585-d7812108-d315-4606-83d9-e39a8c9403b3.png). In terms of flow field, the capture below is from the current develop branch. The boundary between structured grid and unstructured gird is a nearfield boundary. An object is above this capture and pressure wave propagates from there. Since this grid is inclined by Mach angle, pressure distribution on the nearfield should be fairly similar to the region above but this capture shows some strange pressure disturbance. Limiter: VAN_ALBADA_EDGE; ![NF_before](https://user-images.githubusercontent.com/18245846/129564639-030fe1b7-7e50-4bb1-9951-21f5ea27bb52.png). Limiter: VENKATAKRISHNAN_WANG; ![NF_before_VEN](https://user-images.githubusercontent.com/18245846/129568934-137681db-04db-40f1-819f-7bcc8c7e0d88.png). The capture below is from the branch with this PR. The issue I mentioned above does not exist. Limiter: VAN_ALBADA_EDGE; ![NF_after](https://user-images.githubusercontent.com/18245846/129564659-cec5a848-1b0b-4051-8298-e3d383dacc6d.png). I think the residuals for direct solver will be different like the adjoint if you run it for some hundreds more iterations (currently, the test case has only 20 iterations). However, since the nearfield boundary is a bit far from an object, it takes some iterations for pressure waves to reach the nearfield boundary. This PR also solves an issue with VENKATAKRISHNAN_WANG limiter. It seems to be much easier for convergence than VAN_ALBADA_EDGE, so it is fairly useful. I still have a gradient un-match issue with my bigger mesh but I believe it is coming from something else. > I'm sorry that you had to spend time fixing that MPI code... But at least we found out we could clean all this obsolete code. Yeah, I noticed it had been deleted. It's OK. It was still a good opportunity for me to learn how MPI works.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1351#issuecomment-899498618:1795,test,test,1795,https://su2code.github.io,https://github.com/su2code/SU2/pull/1351#issuecomment-899498618,1,['test'],['test']
Testability,"terature for F_length and ReTheta_c variables. Values are MALAN, SULUKSNA, KRAUSE, MEDIDA_BAEDER, MEDIDA, MENTER_LANGTRY. It defaults to the MENTER_LANGTRY If the underlying turbulence model is SST or to MALAN in the case of SA. (Implemented); 2. HROUGHNESS. RMS value of roughness for LM2015 transition model. It defaults to 1e-6m. (Implemented); 3. CONVERTSA2SST. If the SA turbulence model is used, it is possible to use the LM version for SST by computing k and w from SA variables. Values: YES, NO. The default is NO. (Not yet Implemented). The turbulence index has been implemented for the turbulence models. It is used to detect transition when it is higher than 0. In theory, it should be equal to 1 for a fully-turbulent flow. However, in my simulations, this is not always the case, especially if SST is used (you can see in on the figure below). References are https://doi.org/10.1007/s10494-021-00288-5 for SST and https://doi.org/10.2514/6.1992-439 for SA. Validation test cases will be uploaded in the following days. . The most important results can be found in the pdf of my presentation at the SU2 Conference 2022. https://polimi365-my.sharepoint.com/:b:/g/personal/10507725_polimi_it/EUswl9Jw0XhIuozrOjXqX6sBdscM30lRZ7mwMZcr5anvyA?e=41db5P. One recent result is the application of the transition model to the Sickle wing test case for -2.67° of the angle of attack. SST+LM2015; ![Cf](https://user-images.githubusercontent.com/43813346/203034422-5a7fb987-208c-4da6-8282-5c912e671dbc.png). SA+LM2015; ![Cf](https://user-images.githubusercontent.com/43813346/203034460-7719f3ce-6674-4281-83fd-82ce064c452a.png). The lower surface is represented on the left, whereas the upper surface is on the right. At the moment the wind tunnel walls have not been taken into account. This can explain the spanwise shift of the transition with respect to the experimental results. More results are incoming. . Please, any suggestions on how to clean up the code or on how to make it more efficient a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1810:1432,test,test,1432,https://su2code.github.io,https://github.com/su2code/SU2/pull/1810,1,['test'],['test']
Testability,test,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/6:0,test,test,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/6,1,['test'],['test']
Testability,test issue,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/6:0,test,test,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/6,1,['test'],['test']
Testability,"tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. Roll-your-own. * Requires no external dependencies; * The most flexible option; * Involves the most work to setup; * Will lack some of the more advances features of mature unit-testing frameworks. Boost Test. * Can be header only, statically linked, or dynamically linked; * If statically or dynamically linked, then Boost is not very lightweight; * Easy to add if you're already using Boost. Google Test. * Most common unit-testing framework; * Can be easily combined with Google's powerful GMock mocking library; * Compiling and linking can be somewhat painful. Catch2. * Used by FEniCS; * Makes unit tests easily readable with lots of syntactic sugar.; * Has a very simple syntax; * Is header-only; * Requires C++11 compilation; * Not as feature rich as Google Test or Boost Test. Questions. * How do developers feel about adding unit tests to SU2?; * If a unit-testing framework were added to SU2, would you actually use it?; * Do developers have a preference (or experience with) any of the unit testing frameworks?; * Should unit tests be expected when submitting PRs?. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/698?email_source=notifications&email_token=AA5FFRG5U3Z55N4W2XWQED3PY3LJ5A5CNFSM4HTDQXQKYY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4GXUGGLA>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AA5FFRHOPE2MUJ2Z5RRV4HTPY3LJ5ANCNFSM4",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:4791,test,testing,4791,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,2,"['mock', 'test']","['mocking', 'testing']"
Testability,"thanks tom!. On Tue, Oct 14, 2014 at 12:30 AM, Thomas D. Economon <; notifications@github.com> wrote:. > Added the following system calls during the update/build phase to the; > serial and parallel regression python scripts in order to force testing of; > the develop branch:; > ; > $ git fetch; > $ git checkout develop; > $ git pull origin develop; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/su2code/SU2/issues/75#issuecomment-59000470. ## ; - Trent Lukaczyk; Stanford University Engineering; Cornell University Engineering 2010; twl26@stanford.edu",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/75#issuecomment-59069424:242,test,testing,242,https://su2code.github.io,https://github.com/su2code/SU2/issues/75#issuecomment-59069424,1,['test'],['testing']
Testability,"the AD build fails with OpenMPI 4.0.0. I don't really know where the source of error is, but I suspect it's with CGNS and how it's handled by OpenMPI?. The error is as follows:. In file included from ../../../Common/lib/../src/../include/./mpi_structure.hpp:42:0,; from ../../../Common/lib/../src/../include/geometry_structure.hpp:41,; from ../../../Common/lib/../src/fem_cgns_elements.cpp:34:; /usr/local/include/mpi.h:2633:20: note: declared here; OMPI_DECLSPEC int MPI_Keyval_free(int *keyval); ^~~~~~~~~~~~~~~; Makefile:1504: recipe for target '../src/libSU2_AD_a-fem_cgns_elements.o' failed; make[2]: *** [../src/libSU2_AD_a-fem_cgns_elements.o] Error 1; make[2]: Leaving directory '/home/akb1r19/CFD_Solvers/SU2/SU2-6.2.0/SU2_AD/Common/lib'; Makefile:441: recipe for target 'install-recursive' failed; make[1]: *** [install-recursive] Error 1; make[1]: Leaving directory '/home/akb1r19/CFD_Solvers/SU2/SU2-6.2.0/SU2_AD'; Makefile:13: recipe for target 'install-SU2_AD' failed; make: *** [install-SU2_AD] Error 2. My pregonfigure command is:. `export CXXFLAGS=""-O3"" && sudo ./preconfigure.py --enable-autodiff --prefix=/home/akb1r19/CFD_Solvers/SU2/Instldir --enable-mpi --with-cc=/usr/local/bin/mpicc --with-cxx=/usr/local/bin/mpicxx &>preconfig.out`. Attaching the whole make output, and the preconfigure log files here too.; I have successfully been able to compile with AD on a cluster with Intel MPI (2017.4.239). I run the exact same commands and it compiles without issue. I haven't tried mpich yet to see if the error persists. Any thoughts?. Thanks,; Amir. [config.log.ad.txt](https://github.com/su2code/SU2/files/2926538/config.log.ad.txt); [config.log.base.txt](https://github.com/su2code/SU2/files/2926539/config.log.base.txt); [conf_SU2_AD.log.txt](https://github.com/su2code/SU2/files/2926540/conf_SU2_AD.log.txt); [conf_SU2_BASE.log.txt](https://github.com/su2code/SU2/files/2926541/conf_SU2_BASE.log.txt); [make.out.txt](https://github.com/su2code/SU2/files/2926542/make.out.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/659:1335,log,log,1335,https://su2code.github.io,https://github.com/su2code/SU2/issues/659,9,['log'],['log']
Testability,"the CFL adaption with. ```; % Parameters of the adaptive CFL number (factor down, factor up, CFL min value,; % CFL max value ); CFL_ADAPT= YES; CFL_ADAPT_PARAM= ( 0.1, 2.0, 10.0, 1e10); ```. It is important that the linear solve behaves well for each nonlinear iteration, so if this does not converge immediately, adjust the tolerance or number of linear iterations. Roe seems very stable, but some of the other upwind schemes or centered schemes may require improved Jacobian accuracy (to recover fast convergence) with:. ```; USE_ACCURATE_FLUX_JACOBIANS= YES; CENTRAL_JACOBIAN_FIX_FACTOR= 4.0; ```. ### RANS; Due to the segregated approach for the turbulence models, you have to be more conservative with the CFL adaption. All else is the same as above, but I recommend. ```; % Parameters of the adaptive CFL number (factor down, factor up, CFL min value,; % CFL max value ); CFL_ADAPT= YES; CFL_ADAPT_PARAM= ( 0.1, 1.2, 10.0, 1e3); ```. Most inviscid/laminar cases that I have tested so far converge to machine precision within a couple of hundred iterations. RANS cases within a few thousand. Ultra fine RANS meshes can still slow things down (MG could help there), but otherwise, speedups of an order of magnitude (or more) are possible for most problems. Experiment yourselves.. sometimes you can get even more performance, sometimes less, case depending. I could use help testing this one with your cases, since I think almost all regression tests will change. As a start, I have run all of the NASA TMR 2D bump-in-channel cases. Everything looks good with that (see figures). I have also checked that the inviscid and laminar MMS give 2nd-order accuracy properly. ![bump_cd_gridconv](https://user-images.githubusercontent.com/4896083/64910870-09f36b00-d6d0-11e9-9e1c-553fd09b42c8.png); ![bump_cf_0p63_gridconv](https://user-images.githubusercontent.com/4896083/64910871-09f36b00-d6d0-11e9-8148-f211260dbf8f.png); ![bump_cf_0p75_gridconv](https://user-images.githubusercontent.com/4896083/64910",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790:2901,test,tested,2901,https://su2code.github.io,https://github.com/su2code/SU2/pull/790,1,['test'],['tested']
Testability,"the SST turbulence model. The radial mesh has a boundary layer at the circle of radius 1 (adiabatic wall), and a ""boundary-layer-like"" structure around a circle of radius (approximately) 4. Having this ""boundary-layer-like"" structure does not make sense here, but in our project we later want to change the area `1<=radius<=4` to a ""porous material"" zone and this would introduce a boundary layer there. Both the [attached](https://seafile.rlp.net/d/bb0fbb16eb414263b642/) `issue_complicated.zip`, `issue_simplified.zip` contain subdirectories `singlezone`, `multizone`. I observed the problem best for `issue_complicated.zip`. With `issue_simplified.zip` I try to provide a minimal working example, and it reproduces the same convergence/divergence behaviour, but I'm not sure whether it really covers the complete problem. `issue_simplified.zip` has been created as follows:; - In the singlezone setup, the whole mesh has been exported to `singlezone.su2`. The `singlezone.cfg` is `TestCases/rans/naca0012/turb_NACA0012_sst.cfg` with adapted mesh filename, marker names and Reynolds number, and `RESTART_SOL=NO`.; - In the multizone setup, the mesh has been split into two zones. `multizone-0.su2` is the inner ""ring"" of `1 <= radius <= 4` between the circle and the ""boundary-layer-like"" structure. `multizone-1.su2` is the remaining part `4 <= radius`. I created a `multizone.cfg` that refers to `multizone-0.cfg`, `multizone-1.cfg` and joins the zones by a `MARKER_FLUID_INTERFACE`. The two `multizone-i.cfg`s are identical to the `singlezone.cfg` except that the mesh filename and markers we adapted again, and the `ITER=` option was removed. In `issue_complicated.zip`, filenames and cfg files are a bit different but the meshes are the same. Observed and expected behaviour; ===========================; I would expect that the two simulations give similar results. However, the singlezone setup converges while the multizone setup diverges (`SU2 has diverged (NaN detected).` or `SU2 has dive",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414:2100,Test,TestCases,2100,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414,1,['Test'],['TestCases']
Testability,"the calculation of `Baux`, which leads `Baux` to have units of 1/time. That throws off the nondimensionalization of the blending constant.; + The square root in the calculation of `Lturb` is in the wrong place. Travin only takes the square root of the denominator.; + Travin _et al._ took the variables `Lturb` and `g` and used them to build a new variable, `A`, that was used to set the blending parameter. In the code, `LTurb` is simply multiplied by `Gaux`. This doesn't match the paper, and it's not going to scale correctly either. `Lturb` should have units of length, and multiplying a length by a nondimensional parameter does not give you a nondimensional parameter.; + The variable `Omega` isn't consistent with `StrainMag`. `StrainMag` has a factor of sqrt(2) built in, but `Omega` doesn't. The original paper actually doesn't specify if the factor of sqrt(2) should be included, but the code should at least be consistent.; + The value of the variable `ch3` is 2 in the code, but 0.5 in the paper. I've corrected these mistakes, but I wanted to get feedback on the results. This section of code was not covered by any existing regression tests, and the validation cases in the [SU2-DDES paper](http://dx.doi.org/10.2514/6.2017-4284) don't use the NTS blending. Meaningful verification and validation of hybrid RANS/LES is both tricky and computationally expensive (compared to RANS). So any input (especially from @EduardoMolina) on what tests to use would be appreciated. Otherwise, I'll come up with my own test. ## Related Work; This hybrid upwind/central blending was introduced by @EduardoMolina as part of PR #490. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/532:1889,test,tests,1889,https://su2code.github.io,https://github.com/su2code/SU2/pull/532,4,['test'],"['test', 'tests']"
Testability,"the desired python version with `CONFIGURE_OPTS=--enable-shared pyenv install <version>`. To recap, a ""workflow for newbies"" which appears to be working for me is. 1. install pyenv either from [source](https://github.com/pyenv/pyenv#installation) or from your distibution repositories, if available. IMPORTANT: make sure the environment variables are correctly set and `pyenv init` is added to your shell, as per the installation instructions.; 2. install the desired python version (for example 3.7.8), enabling shared libraries: ; `CONFIGURE_OPTS=--enable-shared pyenv install 3.7.8`; 3. clone/download the [feature_adap](https://github.com/su2code/SU2/tree/feature_adap) branch of SU2;; 4. in the SU2 folder, configure meson ; `./meson.py build` ; and make sure to update the environment variables in your `.bashrc` as indicated by meson's output.; 5. use ninja to build and install SU2 ; `./ninja -C build install`;; if you run into a permission error, specify an installation directory passing the `--prefix` option to meson, as explained [here](https://www.cfd-online.com/Forums/su2-installation/227676-su-installation-failed-due-insufficient-permissions.html). These passages, at least for me, result in a running SU2 with mesh adaptation, although I have made no tests on running actual simulations. That being said, the involvement of pyenv is due to the fact that the provided python wheel for pyamg is for python 3.7 only. If I understand correctly, the library itself is proprietary, sadly, so I assume @bmunguia has access either to the source files or to someone who can package them. Depending on the actual compatibility of the code, it would be nice if the wheel was updated to the latest python version, or at least the dependency on 3.7.* was removed. . @chesiv you can also try checking the logs in the `log.err` and `log.out` files to see if anything has gone wrong. Keep in mind all SU2 output is redirected to them, so you might not get any useful information on your terminal.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-751823130:2192,test,tests,2192,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751823130,4,"['log', 'test']","['log', 'logs', 'tests']"
Testability,"the older preconfig/mame/make install procedure.; Just do the preconfig process (with -u parameter) on a machine that is; connected to the internet so codi/medi versions will be updated; Next step: search the preconfig.py file for the codi/medi version (look; for ""sha_version_codi="" and ""sha_version_medi="").; Write down the two strings somewhere.; Then transfer the whole install folder to the disconnected cluster.; Once on the cluster, go to folder external/codi and touch a file by the; name of the string you have written down.; Repeat the same with medi (external/medi).; Now do on the cluster preconfig.py/make/make install (without -u). The; codi/medi versions will match now and the installation should work.; The problem with this procedure is that it is not supported anymore. It; still worked for me a short time ago with the develop branch (but failed on; the master branch). Meson/ninja installation is significantly more; efficient and most of the developers here ain't familiar with life without; an internet connection ... Last warning: the above-listed messages seem to point over a compiler; issue. If indeed this is the case then the bypass that I suggested is; irrelevant. On Tue, Apr 28, 2020 at 7:43 PM SumanVajjala <notifications@github.com>; wrote:. > @economon <https://github.com/economon> I have personally installed SU2; > software (from versions 3 to 6) in our cluster without problems. I think; > the issues could be because of lack of C11 features. I tried to run a; > sample code with aligned_alloc and I had problems with both Intel and GCC; > compilers. I'll test this again. I think I'll have to install gcc myself.; >; > Regards; > Suman; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/955#issuecomment-620724039>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADZI3G66H554WAUPBYMWVADRO4BUNANCNFSM4MR3ATFA>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/955#issuecomment-621078198:1638,test,test,1638,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-621078198,1,['test'],['test']
Testability,"the residual for the adjoint-restart is better than expected, and not even by a tiny amount. This naturally leads to the hypothesis that the direct-solution is not reset after the CLEAR_INDICES run. But that is the case, I checked and I also Print the DirectResdiual for all DIrectIterations (2 flow + 2 mesh ones) and they are always the same. If the residual were to drop dramatically for the adjoint restart that would prob be easier to debug. I of course also checked whether the correct Solution values are read, which I am somewhat sure they are... also I can only do spot checks.; ; 4000 iterations; ```; -17.5190807322 -17.7163086125 -17.8778784145 -5.70791061685 -11.6640663533; -17.418063519 -17.5356055663 -17.7081078178 -5.70791062246 -11.6640664169; -17.418063519 -17.5356055663 -17.7081078178 -5.70791062246 -11.7881662873; ```. ## CHT Pin in Crossflow 2D. For another CHT testcase the findings are similar with one notable difference: The solid_T res between the primal restarted and adjoint restarted now match much better (although still diffreent) but both differ quite significantly from the X+1st ground truth. 10 Iter; ```; -4.926899175 -7.918963781 -8.148204896 1.135311148 -4.163756124; -4.926899175 -7.918963781 -8.148204896 1.135311148 -4.163756124; -4.926899175 -7.918963781 -8.148204896 1.135311148 -4.472390292; ```. 200 Iter; ```; -16.0186192 -18.98207162 -19.03351791 -2.806755076 -5.585674129; -16.00510692 -18.97843574 -19.03334954 -2.806755076 -5.585674129; -16.00510692 -18.97843574 -19.03334954 -2.806755076 -5.602103211; ```. 2000 Iter; ```; -16.50635481 -19.9763931 -20.42969871 -10.29288196 -14.21416876; -16.44211089 -19.76100653 -20.35694756 -10.23037364 -13.79321985; -16.44211089 -19.76100653 -20.35694756 -10.23037364 -13.79321861; ```. Note that for this specific 2000 Iter case the adjoint(-primal)-residual for the solid_T is worse compared to the ground truth X+1 ... which is the other way round for all other here seen cht cases (the ""no-coupling"" cas",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1395:4940,test,testcase,4940,https://su2code.github.io,https://github.com/su2code/SU2/issues/1395,1,['test'],['testcase']
Testability,"time spent in bug-fixing and maintaining. For more information, see this relevant Stack Exchange question.<https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes>. What do I propose?. My research group at UT Austing has implemented a unit testing framework on our branch, which we're happy with. Some choices were arbitrary, and some choices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more information on autotool's setup, see their documentation<https://www.gnu.org/software/automake/manual/html_node/Tests.html>. Since autotools is the build system for SU2, this involves minimal changes. Using automake, the build process for building unit tests becomes:. '''; ./bootstrap; ./configure; make; make check; '''. We use Boost's unit testing framework<https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>. This provides a convenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time we push commits or submit a pull request, the unit tests are run and checked. What is my vision for unit testing in SU2?. I am not proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not beh",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:3171,test,test,3171,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,1,['test'],['test']
Testability,"tions are equivalent for smooth surfaces and clearly surface neighbors are always volume neighbors as well. However, at surfaces with sharp edges, two vertices can be volume neighbors without being surface neighbors. This happens when the edge of the volume element connecting the vertices lies inside the domain. `CInterpolator::ReconstructBoundary` is called from `CSlidingMesh::SetTransferCoeff`, which then hands the connectivity structure to `CSlidingMesh::Build_3D_surface_element`. The latter function forms a circular ordering of the neighbors of each vertex s: e.g. if there are four neighbors a,b,c,d of s with connectivity a-b,c-d,b-c,a-d then it performs an iteration over e.g. a-b-c-d. If we understand ""neighbors"" as ""surface neighbors"", the neighbors of any vertex s can be brought into a ""closed circle"" or ""open chain"" ordering where each of them is neighbor only to its direct predecessor and successor. This is not true for the volume neighbor relation however, and in this case the iteration might enter an infinite loop e-a-b-c-d-a-b-... (until the access to `element[ iElementNode ]` segfaults). That's approximately how we (@maxaehle,@mcmorelli,@BeckettZhou,@EduardoMolina) noticed the bug.; ; ## Related Work; #1344 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1346:2360,test,test,2360,https://su2code.github.io,https://github.com/su2code/SU2/pull/1346,1,['test'],['test']
Testability,"tml_node/Tests.html). Since autotools is the build system for SU2, this involves minimal changes. Using automake, the build process for building unit tests becomes:. ```; ./bootstrap; ./configure; make; make check; ```. We use [Boost's unit testing framework](https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html). This provides a convenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time we push commits or submit a pull request, the unit tests are run and checked. ## What is my vision for unit testing in SU2?. I am *not* proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. ## What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. #### Roll-your-own. + Requires no external dependencies; + The most flexible option; + Involves the most work to setup; + Will lack some of the more advances features of mature unit-testing frameworks. #### Boost Test. + Can be header only, statically linked, or dynamically linked; + If statically or dynamically linked, then Boost is not very lightweight; + Easy to add if you're already using Boost. #### Google Test. + Most common unit-testing framework; + Can be easily combined with Google",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698:3041,test,tests,3041,https://su2code.github.io,https://github.com/su2code/SU2/issues/698,1,['test'],['tests']
Testability,tname = master; uname -m = x86_64; uname -r = 2.6.32-279.el6.x86_64; uname -s = Linux; uname -v = #1 SMP Wed Jun 13 18:24:36 EDT 2012. /usr/bin/uname -p = unknown; /bin/uname -X = unknown. /bin/arch = x86_64; /usr/bin/arch -k = unknown; /usr/convex/getsysinfo = unknown; /usr/bin/hostinfo = unknown; /bin/machine = unknown; /usr/bin/oslevel = unknown; /bin/universe = unknown. PATH: /opt/xcat/bin; PATH: /opt/xcat/sbin; PATH: /opt/pbs/default/bin; PATH: /opt/pbs/tools/bin; PATH: /usr/lpp/mmfs/bin/; PATH: /gshare/soft/star-ccm+/STAR-View+9.02.007; PATH: /gshare/soft/star-ccm+/STAR-CCM+9.02.007/star/bin; PATH: /opt/xcat/bin; PATH: /opt/xcat/sbin; PATH: /usr/lib64/qt-3.3/bin; PATH: /opt/pbs/default/bin; PATH: /opt/pbs/tools/bin; PATH: /usr/lpp/mmfs/bin/; PATH: /usr/local/bin; PATH: /bin; PATH: /usr/bin; PATH: /usr/local/sbin; PATH: /usr/sbin; PATH: /sbin; PATH: /gshare/soft/init; PATH: /gshare/soft/scripts; PATH: .; PATH: /gshare/soft/init; PATH: /gshare/soft/scripts; PATH: . ## ----------- ##; ## Core tests. ##; ## ----------- ##. configure:2465: checking build system type; configure:2479: result: x86_64-unknown-linux-gnu; configure:2499: checking host system type; configure:2512: result: x86_64-unknown-linux-gnu; configure:2532: checking target system type; configure:2545: result: x86_64-unknown-linux-gnu; configure:2587: checking for a BSD-compatible install; configure:2655: result: /usr/bin/install -c; configure:2666: checking whether build environment is sane; configure:2721: result: yes; configure:2872: checking for a thread-safe mkdir -p; configure:2911: result: /bin/mkdir -p; configure:2918: checking for gawk; configure:2934: found /bin/gawk; configure:2945: result: gawk; configure:2956: checking whether make sets $(MAKE); configure:2978: result: yes; configure:3075: checking whether make supports nested variables; configure:3092: result: yes; configure:3117: checking for style of include used by make; configure:3145: result: GNU; configure:3196: result: >>> MPI su,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:1561,test,tests,1561,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,1,['test'],['tests']
Testability,"tting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ X ] I have added a test case that demonstrates my contribution, if necessary.; - [ X ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Work Overview. I have optimized the initialization time of SU2-NEMO. You can check the time comparison between the old and new version at the table below. ![image](https://user-images.githubusercontent.com/29612207/127698090-e4924a77-a5f0-40fc-90eb-ce218c413aaf.png). Some steps that I have done:; ### CNEMOEulerVariable.cpp ; * Removed constant calculations inside a for loop; * Passed the Solution_Old = Solution to outside the loop. ### CNEMOEulerSolver.cpp; * Removed the ""for"" loop that fills the Nodes Primitive Fields (already done in the Preprocessing phase); * Removed the error counter (already done in the Preprocessing phase). ### CSolverFactory.cpp; * Removed the Preprocessing step after the CNEMOEulerSolver instantiation (**This is done before the start of the iterative process, regardless. Additionally, the Navier-Stokes do not have any preprocess phase after the instantiation, why is that ?** ). The residuals may slightly different, because of the removal of the for loop inside CNEMOEulerSolver.cpp. Notice that inside that for loop, the soundspeed is obtained using the function FluidModel->GetSoundSpeed(), which gives a slight different value than the one calculated inside CNEMOEulerVariable.cpp using FluidModel->ComputeSoundSpeed(). This means that the regression tests may fail.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1340:2175,test,tests,2175,https://su2code.github.io,https://github.com/su2code/SU2/pull/1340,1,['test'],['tests']
Testability,"tually a first step towards an automatic identification of the aerodynamic transfer functions for state-space models.; * Some changes in the outputs; * The introduction of a test case for this feature. Regarding the last point, I am having issues trying to understand how to appropriately set up the regression. In particular, the fsi interface needs two additional packages to run (libspatialindex and petsc) with their counterparts in python (rtree and petsc4py). @pcarruscag suggested me to add the apt-get lines in the regression.yml file, but I am really not sure where to place them and I do not want to mess it up. ; Further, the files in the tutorial folder cannot be used for this scope. Indeed, in the tutorial, there are the cfg files that can be used to reproduce the same behaviour predicted by the theory of Theodorsen. However, in order to do so, some iterations of fluid only simulation must be performed before the coupling. This takes time so I prepared a test case where the two solvers (fluid and structure) are coupled from the beginning. Unfortunately, the mesh is ignored by git in the TestCase folder, so I am not sure how to make it run. I would really appreciate if you could help me with this last point.; ; ## Related Work; #1124 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cp",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1148:1151,test,test,1151,https://su2code.github.io,https://github.com/su2code/SU2/pull/1148,1,['test'],['test']
Testability,"tude (or more) are possible for most problems. Experiment yourselves.. sometimes you can get even more performance, sometimes less, case depending. I could use help testing this one with your cases, since I think almost all regression tests will change. As a start, I have run all of the NASA TMR 2D bump-in-channel cases. Everything looks good with that (see figures). I have also checked that the inviscid and laminar MMS give 2nd-order accuracy properly. ![bump_cd_gridconv](https://user-images.githubusercontent.com/4896083/64910870-09f36b00-d6d0-11e9-9e1c-553fd09b42c8.png); ![bump_cf_0p63_gridconv](https://user-images.githubusercontent.com/4896083/64910871-09f36b00-d6d0-11e9-8148-f211260dbf8f.png); ![bump_cf_0p75_gridconv](https://user-images.githubusercontent.com/4896083/64910872-09f36b00-d6d0-11e9-8772-6e26a8bd08b0.png); ![bump_cf_0p87_gridconv](https://user-images.githubusercontent.com/4896083/64910873-0a8c0180-d6d0-11e9-8c61-208809ff64e0.png); ![bump_cl_gridconv](https://user-images.githubusercontent.com/4896083/64910874-0a8c0180-d6d0-11e9-8add-2489b1c42a5c.png); ![residual_convergence](https://user-images.githubusercontent.com/4896083/64910875-0a8c0180-d6d0-11e9-8c0c-0ec2008734a2.png). ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Gradient method strategy in #789 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790:5077,test,test,5077,https://su2code.github.io,https://github.com/su2code/SU2/pull/790,1,['test'],['test']
Testability,"u have God-classes and ""do-it-all"" functions. The hope is that refactoring these classes will lead to more modular and easier-to-maintain code. ### Decision to use Catch2. Catch2 was chosen for the unit testing library for the following reasons:. + It can be included as a header-only library.; + It has a very clean, easy-to-use syntax; + It has widespread use, including the FEniCS library. ### Design choices. The following design choices are in place. If you disagree with them, then please start a discussion here:. + All tests are placed in a root-level directory named `UnitTests`. Inside this directory is a structure just like the existing folder structure (e.g. `SU2_CFD/numerics`), except that there are not separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tests or individual tests.; + When `ninja test` or `meson test` is run, the test executable is only run once, sweeping through all the unit tests. The result only shows a single failure or a single success. If more detail is desired, then the test executable can be run manually.; + The relevant SU2 code is compiled as a library (e.g. `libSU2core`) and then linked into both the main executable (`SU2_CFD`) and the test program (`test_driver`). ### How to Run Unit Tests. If you compile SU2 using `ninja -C builddir`, then the test executable will automatically be compiled. You then have three options for running the tests:. + `meson test` (see documentation [here](https://mesonbuild.com/Unit-tests.html)); + `ninja test`; + Run the exectuable manually: `./UnitTests/test_driver`. When running the executable manually, there are many customization options. Run `./UnitTests/test_driver --help` to see them all. ### How to add unit tests. I have already included a single u",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/850:1941,test,test,1941,https://su2code.github.io,https://github.com/su2code/SU2/pull/850,3,['test'],"['test', 'tests']"
Testability,"ubmit a pull request, the unit tests are run and checked. ## What is my vision for unit testing in SU2?. I am *not* proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. ## What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. #### Roll-your-own. + Requires no external dependencies; + The most flexible option; + Involves the most work to setup; + Will lack some of the more advances features of mature unit-testing frameworks. #### Boost Test. + Can be header only, statically linked, or dynamically linked; + If statically or dynamically linked, then Boost is not very lightweight; + Easy to add if you're already using Boost. #### Google Test. + Most common unit-testing framework; + Can be easily combined with Google's powerful GMock mocking library; + Compiling and linking can be somewhat painful. #### Catch2. + Used by FEniCS; + Makes unit tests easily readable with lots of syntactic sugar.; + Has a very simple syntax; + Is header-only; + ~~Requires C++11 compilation~~ Requires C++11 for full feature set, but offers a C++03 branch; + Not as feature rich as Google Test or Boost Test. ## Questions. + How do developers feel about adding unit tests to SU2?; + If a unit-testing framework were added to SU2, would you actually use it?; + Do developers have a preference (or experience with) any of the unit testing frameworks?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698:3742,test,testing,3742,https://su2code.github.io,https://github.com/su2code/SU2/issues/698,1,['test'],['testing']
Testability,"ular and easier-to-maintain code. ### Decision to use Catch2. Catch2 was chosen for the unit testing library for the following reasons:. + It can be included as a header-only library.; + It has a very clean, easy-to-use syntax; + It has widespread use, including the FEniCS library. ### Design choices. The following design choices are in place. If you disagree with them, then please start a discussion here:. + All tests are placed in a root-level directory named `UnitTests`. Inside this directory is a structure just like the existing folder structure (e.g. `SU2_CFD/numerics`), except that there are not separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tests or individual tests.; + When `ninja test` or `meson test` is run, the test executable is only run once, sweeping through all the unit tests. The result only shows a single failure or a single success. If more detail is desired, then the test executable can be run manually.; + The relevant SU2 code is compiled as a library (e.g. `libSU2core`) and then linked into both the main executable (`SU2_CFD`) and the test program (`test_driver`). ### How to Run Unit Tests. If you compile SU2 using `ninja -C builddir`, then the test executable will automatically be compiled. You then have three options for running the tests:. + `meson test` (see documentation [here](https://mesonbuild.com/Unit-tests.html)); + `ninja test`; + Run the exectuable manually: `./UnitTests/test_driver`. When running the executable manually, there are many customization options. Run `./UnitTests/test_driver --help` to see them all. ### How to add unit tests. I have already included a single unit-test example (`UnitTests/SU2_CFD/src/numerics/CNumerics_tests.cpp`). Aside from the headaches with CConfig",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/850:2040,test,test,2040,https://su2code.github.io,https://github.com/su2code/SU2/pull/850,4,['test'],"['test', 'tests']"
Testability,"ults. So for example if we are talking about the NACA0012 case, we would have something along the lines of: . a) NACA0012; i) 113 x 33; ii) 225 x 65 ; iii) 449 x 129; iv) ... This way we have a family of meshes and configuration files that are specifically built for the purpose of validating the code and comparing with other solvers. I might be useful to compress meshes that are larger than a certain size (say 10MB). We should also put a limit on the size of a single mesh that the repository can handle (say 50MB?). . Within the home directory, the README file should list all the cases in the repository, who the custodian of the test case is (person with meshes in case the meshes are too large), and which version it was last run on. . I thought about splitting it up into Verification cases and Validation cases, but I thought it would be more informative and intuitive to split up according to the physics of the simulations. My thinking might be limited because that's how I have seen the TestCases folder organized, so any other suggestions are welcome. I think it is imperative that this is accompanied with a section on the SU2 website that showcases just the results of the validation test cases (grid convergence studies, residual reductions etc) and links to the v&v repo appropriately. This way, if people are just inquisitive about SU2's performance, they can get a quick snapshot of the results, without the need to run the cases themselves. . I also wanted to broach the topic of convergence here. Would it be a good idea to standardize the termination criteria wherever possible? For example, in the NACA0012 case we can ensure that residuals are reduced by 8 orders of magnitude for all meshes. Or for the ONERAM6, we use Cauchy convergence and make sure the C_L is converged to 6 orders of magnitude. This would have to be flexible since the same level of convergence might not apply to all the cases in the repository. But for within a test case, I think it would be good to ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-426026053:1568,Test,TestCases,1568,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-426026053,1,['Test'],['TestCases']
Testability,"ummary>; <p><em>Sourced from <a href=""https://github.com/actions/upload-artifact/releases"">actions/upload-artifact's releases</a>.</em></p>; <blockquote>; <h2>v3.0.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Update default runtime to node16 (<a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/293"">#293</a>)</li>; <li>Update package-lock.json file version to 2 (<a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/302"">#302</a>)</li>; </ul>; <h3>Breaking Changes</h3>; <p>With the update to Node 16, all scripts will now be run with Node 16 rather than Node 12.</p>; <h2>v2.3.1</h2>; <p>Fix for empty fails on Windows failing on upload <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/281"">#281</a></p>; <h2>v2.3.0 Upload Artifact</h2>; <ul>; <li>Optimizations for faster uploads of larger files that are already compressed</li>; <li>Significantly improved logging when there are chunked uploads</li>; <li>Clarifications in logs around the upload size and prohibited characters that aren't allowed in the artifact name or any uploaded files</li>; <li>Various other small bugfixes &amp; optimizations</li>; </ul>; <h2>v2.2.4</h2>; <ul>; <li>Retry on HTTP 500 responses from the service</li>; </ul>; <h2>v2.2.3</h2>; <ul>; <li>Fixes for proxy related issues</li>; </ul>; <h2>v2.2.2</h2>; <ul>; <li>Improved retryability and error handling</li>; </ul>; <h2>v2.2.1</h2>; <ul>; <li>Update used actions/core package to the latest version</li>; </ul>; <h2>v2.2.0</h2>; <ul>; <li>Support for artifact retention</li>; </ul>; <h2>v2.1.4</h2>; <ul>; <li>Add Third Party License Information</li>; </ul>; <h2>v2.1.3</h2>; <ul>; <li>Use updated version of the <code>@action/artifact</code> NPM package</li>; </ul>; <h2>v2.1.2</h2>; <ul>; <li>Increase upload chunk size from 4MB to 8MB</li>; <li>Detect case insensitive file uploads</li>; </ul>; <h2>v2.1.1</h2>; <ul>; <li>Fix for certain symlinks not correctly being identified as ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1756:1067,log,logging,1067,https://su2code.github.io,https://github.com/su2code/SU2/pull/1756,2,['log'],"['logging', 'logs']"
Testability,unable to run TestCases on SU2 4.1,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/222:14,Test,TestCases,14,https://su2code.github.io,https://github.com/su2code/SU2/issues/222,1,['Test'],['TestCases']
Testability,update to TestCases/optimization_euler/steady_oneram6/inv_ONERM6_basic.cfg,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/362:10,Test,TestCases,10,https://su2code.github.io,https://github.com/su2code/SU2/pull/362,1,['Test'],['TestCases']
Testability,"update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these lines to your .bashrc file:; ; export SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ; Use './ninja -C D:\Programme\SU2-7.1.1\build install' to compile and install SU2; ; Build targets in project: 20; ; Found ninja.exe-1.9.0 at D:\Programme\SU2-7.1.1\ninja.exe; Running compile:; Working directory: C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32; Command line: c++ C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32\testfile.cpp -o C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32\output.obj -pipe -c -std=c++11 ; ; Code:; int i = static_cast<int>(0);; Compiler stdout:; ; Compiler stderr:; ; Compiler accepts -std=c++11: YES; Running compile:; Working directory: D:\Programme\SU2-7.1.1\build\meson-private\tmp380_12oo; Command line: c++ D:\Programme\SU2-7.1.1\build\meson-private\tmp380_12oo\testfile.cpp -o D:\Programme\SU2-7.1.1\build\meson-private\tmp380_12oo\output.obj -pipe -c -O0 -fpermissive --print-search-dirs ; ; Code:; ; Compiler stdout:; install: C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/; programs: =C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../libexec/gcc/x86_64-w64-mingw32/8.1.0/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../libexec/gcc/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/x86_64-w64-mingw32/8.1.0/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/bin/; libraries: =C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-r",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:10003,test,testfile,10003,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['test'],['testfile']
Testability,"update/simplify the info in [these pages](https://su2code.github.io/docs_v7/Code-Review/)~~([done](https://github.com/su2code/su2code.github.io/pull/70)), etc.). ## Turbulence models; - Precise documentation of fluid and turbulence models **as implemented** in SU2, i.e. link to an authoritative reference and highlighting any deviation from it. #1364 #1551; - Code refactoring to simplify adding turbulence model variants. #1413; - V&V; - Scale resolving methods #1120; - Transition (documentation, tutorial, implementation of additional models) #1496; - Wall functions (documentation, tutorial testcase) #1204. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum working examples"" (no redundant options, no duplication of descriptions from the config template, etc.).; - ""Obscure"" features (""things that SU2 does"" to some extent but are: incomplete, not validated / regression-tested, not documented) cleanup obsolete examples in TestCases, and identify features lacking test coverage, decide what to do with those features. ## Code maintenance; - Better support / documentation for building SU2 directly on Windows. #1468; - Replacing the legacy output #1316; - General C++ cleanup #1218; - Deprecate legacy build system. ## Robust convergence; - Multigrid issues on unstructured grids and less robust with MPI in general e.g. #1362 #1549; - Reduced stability of fluid-fluid interfaces #1414; - Reduced stability of periodic boundary conditions #1467; - Convergence in poor quality meshes, or anisotropically adapted. ## Customization; - More flexible outputs (user-defined #1478, consistent SCREEN and HISTORY #1493, file output frequency #1539); - Python wrapper:",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1487:2038,Test,Testing,2038,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487,4,"['Test', 'test']","['TestCases', 'Testing', 'test', 'tests']"
Testability,"update: validated with the incompressible solver with SA and SST, will add that as a validation and tutorial. To do: validation with a compressible test case.; Future work: validation for heated walls. Less data is available for validation. Let me know if you have a good test case.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1204#issuecomment-811858115:148,test,test,148,https://su2code.github.io,https://github.com/su2code/SU2/pull/1204#issuecomment-811858115,2,['test'],['test']
Testability,"updating solver_direct_tne2.cpp. ## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/556:825,test,test,825,https://su2code.github.io,https://github.com/su2code/SU2/pull/556,1,['test'],['test']
Testability,"ur contribution here in a few sentences.*; Based on the observations of Albring et al. in ""Challenges in Sensitivity Computations for (D)DES and URANS"" we implemented the windowing regularizers proposed in the work of Krakos et al. ""Sensitivity analysis of limit cycle oscillations"" and adapted it to the AD framework of SU2. ; We call the feature in the following ""windowing"". ; Windowing can be applied if one takes the (windowed) time average of a periodic function, i.e. in the case of an instationary flow field that exhibits periodic behaviour. ; - We changed the functionality of the output-field-prefix TAVG and D_TAVG from a simple time average to a time averaged weighted with a windowing function. For the direct run this is just a post-processing step and changes happen only in signal_processing_toolbox and Coutput. ; - We adapted the seeding for the adjoint run from a the classic time average to a windowed time average. ; - Tests have shown, that higher order windowing regularizers, tend to converge quickly with respect to the averaged time span. We have implemented a ""timeConvergenceMonitor"", that acts similarly to the convergence monitoring of the inner convergence. It applies a cauchy convergence criterion to the chosen windowed time average output coefficients. ; - The cauchy convergence criterion works for direct run, adjoint run and shape optimization scripts; - In case of shape optimization, the script remembers the final time iteration of the direct run. If the final time step is smaller than the ""original"" final time step stated in the configuration file, it adapts the starting time of the adjoint run; and the time to seed the objective function, such that the seeding does not exceed the original time to end the seeding. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the P",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/836:990,Test,Tests,990,https://su2code.github.io,https://github.com/su2code/SU2/pull/836,1,['Test'],['Tests']
Testability,"urbed solution).; This linear system is much more ill-conditioned, and so in addition to the classical linear preconditioners, it is possible to use the traditional linear system as the preconditioner (you gotta love the kind of stuff SU2 lets you get away with sometimes).; This nesting makes each iteration potentially very expensive, it is crucial not to ""over solve"" the linear systems, and to use adaptive CFL to run always at the highest CFL possible. Notwithstanding the preconditioner madness, this also works for explicit solvers, but that may only be good enough for dual time methods with relatively small time steps. This seems to be good at converging problems that would otherwise not get past a limit cycle.; I do not expect it to be faster when that is not a problem. Some references:; https://arc.aiaa.org/doi/abs/10.2514/6.2021-0857; https://arc.aiaa.org/doi/10.2514/1.J052255. Example config for the RANS ONERA M6 in the repo: [turb_ONERAM6_nk.txt](https://github.com/su2code/SU2/files/5947580/turb_ONERAM6_nk.txt); It contains the explanation and recommendations for the different parameters. The initial idea was to couple all solvers (flow, turbulence, etc.) but that makes the problem even more ill-conditioned and so I took a step back (as that also makes the implementation simpler...).; The skeleton of the coupled iteration exists in commit c97221b6f7dfd315dfceb9f59f8928790c78e0ce and it was functional... if anyone wants to take it further, it's there. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1183:2121,test,test,2121,https://su2code.github.io,https://github.com/su2code/SU2/pull/1183,1,['test'],['test']
Testability,"us, TT, PT, unit_Vr, unit_Vtheta, turb variables... OR; radius, TT, PT, alpha, phi, turb variables.. *alpha is the angle taken normal to the direction of flow (swirl angle), phi is the flow angle taken from the direction of flow (more details in the velocity triangle pdf attached). The solver can then interpolate the data two ways: 1D Linear Interpolation or 1D Akima Interpolation. I added three new options in .cfg file:; INLET_INTERPOLATION_FUNCTION = None, Linear_1D, Akima_1D; INLET_INTERPOLATION_TYPE = vr_vtheta, alpha_phi; PRINT_INLET_INTERPOLATED_DATA = yes/no (for those curious what is the exact interpolated data). Given the generality of the approach, I have taken this will work for 2D cases or cases with multiple inlets without any issue. I am attaching a sample test case with detailed examination of results shown below. I am also attaching my equations that I used. Note that I define theta counterclockwise positive from x-axis. [testcase.zip](https://github.com/su2code/SU2/files/4217420/testcase.zip). I changed the inlet file angle to degrees rather than radians for alpha,phi option. All the graphs below have been plotted with radians. I have included both radians and degrees inlet file in the testcase. From now on, the inlet angles have to be in degrees! I have plotted graphs to verify the conversion was successful but I am not posting the graphs here as it is already a lot of data. For further details on Vr Vtheta and alpha, phi definitions you can refer this document: ; [velocity_triangles.pdf](https://github.com/su2code/SU2/files/4219369/velocity_triangles.pdf). These are the coordinate conversion equations I have used. The right ones are the ones used in SU2 to convert to Vx, Vy the left ones are used in python script for comparison along with the equations from velocity triangles (reference: [Link](https://ocw.mit.edu/courses/aeronautics-and-astronautics/16-07-dynamics-fall-2009/lecture-notes/MIT16_07F09_Lec05.pdf)). ![equations for coordinate conversi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/815:1407,test,testcase,1407,https://su2code.github.io,https://github.com/su2code/SU2/pull/815,1,['test'],['testcase']
Testability,"via pull request #132 into the develop branch - tested on naca0012 in euler and navier stokes continuous adjoint test cases, CFL number is updated and the solution convergs faster.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/131#issuecomment-62266439:48,test,tested,48,https://su2code.github.io,https://github.com/su2code/SU2/issues/131#issuecomment-62266439,2,['test'],"['test', 'tested']"
Testability,"w` but there is only one shared pointer on which to call `delete`); writing to the same memory locations concurrently.; I tried to make the first issue debugable by asserting that the initialization routines of CSysMatrix and CSysVector are only called by the master thread.; For the second issue I made the associated classes as const-correct as possible, that should at least make someone think twice before changing a member variable of those classes. The risk is still there for input variables as an algorithm development aspect... For example `MatrixVectorProductTransposed` cannot be made thread-parallel as simply/naively as its normal counterpart. ### Communication Model; The MPI + Threads communication model is very simple, currently only the master thread calls MPI routines (including `Error`), this requires thread barriers before and after the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does not seem to be a significant bottleneck.; _Worksharing_ constructs have implicit barriers at completion, for CSysVector routines I used `nowait` modifiers, it is safe to call those routines in sequence since the loop sizes, and static work scheduling specifications are identical.; However, routines that access a CSysVector in a different way, should have an explicit barrier before using the vector (or risk having undefined behaviour). You will see these barriers on entry to matrix-vector product, and every `ComputeXXXPreconditioner` (if you don't, let me know xD). I think those routines are large enough to amortise the cost of this. ### Performance; Disclaimer:; - We are talking about linear solvers only, **you will not see a global improvement yet**.; - The large global improvements from ""hybridization"" will come from the multigrid behaving better on less decomposed domains, and from the ability to independently tune the number of cores used in the linear precondition",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/830#issuecomment-562646766:1934,test,test,1934,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766,1,['test'],['test']
Testability,"was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time we push commits or submit a pull request, the unit tests are run and checked. ## What is my vision for unit testing in SU2?. I am *not* proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. ## What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. #### Roll-your-own. + Requires no external dependencies; + The most flexible option; + Involves the most work to setup; + Will lack some of the more advances features of mature unit-testing frameworks. #### Boost Test. + Can be header only, statically linked, or dynamically linked; + If statically or dynamically linked, then Boost is not very lightweight; + Easy to add if you're already using Boost. #### Google Test. + Most common unit-testing framework; + Can be easily combined with Google's powerful GMock mocking library; + Compiling and linking can be somewhat painful. #### Catch2. + Used by FEniCS; + Makes unit tests easily readable with lots of syntactic sugar.; + Has a very simple syntax; + Is header-only; + ~~Requires C++11 compilation~~ Requires C++11 for full feature set, but offers a C++03 branch; + Not as feature rich as Google Test or Boost Test. ## Questions. + How do developers feel about adding unit tests to SU2?; + If a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698:3471,test,testing,3471,https://su2code.github.io,https://github.com/su2code/SU2/issues/698,1,['test'],['testing']
Testability,"when doing unsteady optimization in parallel, SU2 can not compute the gradients. Ive tested this issue on many cases (pitching, plunging, gist simulation, ....) with both SU2v4.0.0 and SU2-4.2.0 but each time the gradients are NaN. ; both flow and adjoint equations converged well and also the results on single possessor is ok.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/296:85,test,tested,85,https://su2code.github.io,https://github.com/su2code/SU2/issues/296,1,['test'],['tested']
Testability,"which we're happy with. Some choices were arbitrary, and some choices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more information on autotool's setup, see [their documentation](https://www.gnu.org/software/automake/manual/html_node/Tests.html). Since autotools is the build system for SU2, this involves minimal changes. Using automake, the build process for building unit tests becomes:. ```; ./bootstrap; ./configure; make; make check; ```. We use [Boost's unit testing framework](https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html). This provides a convenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time we push commits or submit a pull request, the unit tests are run and checked. ## What is my vision for unit testing in SU2?. I am *not* proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. ## What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. #### Roll-your-own. + Requires no external dependencies; + The most flexible option; + Involves the most work to setup; + W",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698:2701,test,tests,2701,https://su2code.github.io,https://github.com/su2code/SU2/issues/698,1,['test'],['tests']
Testability,"wind schemes or centered schemes may require improved Jacobian accuracy (to recover fast convergence) with:. ```; USE_ACCURATE_FLUX_JACOBIANS= YES; CENTRAL_JACOBIAN_FIX_FACTOR= 4.0; ```. ### RANS; Due to the segregated approach for the turbulence models, you have to be more conservative with the CFL adaption. All else is the same as above, but I recommend. ```; % Parameters of the adaptive CFL number (factor down, factor up, CFL min value,; % CFL max value ); CFL_ADAPT= YES; CFL_ADAPT_PARAM= ( 0.1, 1.2, 10.0, 1e3); ```. Most inviscid/laminar cases that I have tested so far converge to machine precision within a couple of hundred iterations. RANS cases within a few thousand. Ultra fine RANS meshes can still slow things down (MG could help there), but otherwise, speedups of an order of magnitude (or more) are possible for most problems. Experiment yourselves.. sometimes you can get even more performance, sometimes less, case depending. I could use help testing this one with your cases, since I think almost all regression tests will change. As a start, I have run all of the NASA TMR 2D bump-in-channel cases. Everything looks good with that (see figures). I have also checked that the inviscid and laminar MMS give 2nd-order accuracy properly. ![bump_cd_gridconv](https://user-images.githubusercontent.com/4896083/64910870-09f36b00-d6d0-11e9-9e1c-553fd09b42c8.png); ![bump_cf_0p63_gridconv](https://user-images.githubusercontent.com/4896083/64910871-09f36b00-d6d0-11e9-8148-f211260dbf8f.png); ![bump_cf_0p75_gridconv](https://user-images.githubusercontent.com/4896083/64910872-09f36b00-d6d0-11e9-8772-6e26a8bd08b0.png); ![bump_cf_0p87_gridconv](https://user-images.githubusercontent.com/4896083/64910873-0a8c0180-d6d0-11e9-8c61-208809ff64e0.png); ![bump_cl_gridconv](https://user-images.githubusercontent.com/4896083/64910874-0a8c0180-d6d0-11e9-8add-2489b1c42a5c.png); ![residual_convergence](https://user-images.githubusercontent.com/4896083/64910875-0a8c0180-d6d0-11e9-8c0c-0ec2008734",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790:3300,test,testing,3300,https://su2code.github.io,https://github.com/su2code/SU2/pull/790,2,['test'],"['testing', 'tests']"
Testability,"wing:; - A new fluid model for incompressible ideal gas with variable Cp via polynomial fit as Cp(T) : b0 + b1.T + b2.T^2 + b3.T^3 + b4.T^4 where the user specifies b coefficients.; - Polynomial viscosity model (incompressible only) with Mu(T) : b0 + b1.T + b2.T^2 + b3.T^3 + b4.T^4 (user specifies b's).; - Polynomial laminar thermal conductivity model (incompressible only) with Kt(T) : b0 + b1.T + b2.T^2 + b3.T^3 + b4.T^4 (user specifies b's).; - New option for TURBULENT_CONDUCTIVITY_MODEL, which is CONSTANT_PRANDTL_TURB by default, but gives flexibility for more options in the future. This was not exposed before, which can be dangerous, depending on the choice of laminar conductivity model. Now, any of the laminar models can still include the effect of turbulence on heat transfer with a constant turbulent Prandtl number, or it can be deactivated.; - A few fixes for FFD parameterization, including ParaView output and handling of symmetry planes. The polynomial models have only been added to the incompressible solver to start. However, one could activate them in the compressible solver(s) too, since they are in the shared fluid/transport model classes. A cylinder test case has been added for the polynomial fluid models. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/624:1301,test,test,1301,https://su2code.github.io,https://github.com/su2code/SU2/pull/624,2,['test'],['test']
Testability,"with a) sudden jump in heave velocity w, b) sinusoidal velocity w at different frequencies to observe influence of unsteady aerodynamics (phase shift and reduction of resulting lift)~~; - [x] mesh deformation via python interface --> plausibility check with sinusoidal displacement z, scaled and shifted by 90° to correspond to velocity w from above, leads to same results; - [ ] ~~mesh deformation + moving grid --> differences with respect to farfield onflow condition / does NOT lead to same results as above. The grid velocities look right though, both on the temporary screen output and when plotting them by slicing through the volume results, but the amplitude of the lift coefficient is too small. I guess that the velocities are not set properly / mixed up / require a call to some update function or similar. **I'm stuck at this point. Does someone have any idea what I'm doing wrong?? I feel that I am missing an important step here...**~~; - [ ] ~~final test: mesh deformation + moving grid + gust~~; - [x] final test: mesh deformation + gust. Apart from the steps above, the following questions / tasks remain:; - [ ] ~~The the Split Velocity Method (classes SetWind_GustField and CSourceWindGust) is not used in SU2 as far a I understand and for all gust types, the inputs are zero. Instead, the Field Velocity Method is used, but when trying to remove the functions SetWindGust and SetWindGustDer, I broke the code elsewhere. In order to enable 3D meshes, I simply set the outputs to zero for now. I believe that we should clean up the code, but my C++ skills are the limiting factor here, so I need some help with that.~~ --> In a new, dedicated pull request. ## Related Work; The gust encounter for 3D meshes was requested in #1319 and in the Forum https://www.cfd-online.com/Forums/su2/234021-gusts-3d.html and https://www.cfd-online.com/Forums/su2/225914-no-slip-condition-3d-gust.html. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1954:3106,test,test,3106,https://su2code.github.io,https://github.com/su2code/SU2/pull/1954,2,['test'],['test']
Testability,"with viscous solver (**RANS/NAVIER_STOKES**) using the **shape_optimization.py** script but I can't complete it because I receive the following message:. `Error in ""void CSolver::Read_SU2_Restart_Binary(CGeometry*, const CConfig*, std::__cxx11::string)"":`; `-------------------------------------------------------------------------`; `Unable to open SU2 restart file solution_adj_cd.dat`. With EULER solver it works fine, it creates the **solution_adj_*.dat** files everytime it runs the ADJOINT problem so, at the beginning, the process does not require any further file besides the .su2 and the .cfg ones. Even the _Constrained shape design of a transonic turbulent airfoil tutorial_ does not work. The required files (_initial solution files for the solver and adjoint solution_flow.dat, solution_adj_cd.dat, and solution_adj_cmz.dat_) are given from the beginning and if they are not added to the path in which the tutorial will be run, it cannot be completed. I also tried the **turb_ONERAM6 Test case** and personal files as well. Furthermore, I tried to cheat (?) creating a solution_adj_cd.dat and solution_adj_cmz.dat files from the EULER ADJOINT problem because it was the only way I had to obtain that file: the RANS ADJOINT problem performed better than expected reaching a feasible geometry which is not the one obtained in the tutorial. I do not get why I have this problem, if it is correct or not. Has anyone experienced this before?. Actually, I think I will run this kind of problem with the cheating (?) procedure described before because I need to go ahead with the work and it seems to work relatively fine. In conclusion, the **ADJOINT** problem with **RANS/NAVIER_STOKES** solver does not work because it needs **solution_adj_*.dat** which are created autonomously with EULER solver. I am using SU2 V7.2.1 but I also tested them with versions from this to 7.0.0. The files from the tutorial without solution_*.dat files:; [turb_SA_RAE2822.zip](https://github.com/su2code/SU2/fi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1466:1292,Test,Test,1292,https://su2code.github.io,https://github.com/su2code/SU2/issues/1466,1,['Test'],['Test']
Testability,"y commits (34b0464e898dd167d8a865f47aa630019a5978ac), a call to GetNodes() was added in `CFlowOutput::SetAnalyzeSurface` which calls the function `GetNodes()`. ```const auto flow_nodes = solver[FLOW_SOL]->GetNodes();```. There is an assertion in `GetNodes()` that further mandates the `CVariable` `base_nodes` to be set properly. However, in the FEM/DG solver, the `base_nodes` is defaulted to `nullptr` and we have workarounds in the FEM/DG sovler that does not require a call to `GetNodes()` in other parts of the code (we use elements instead of nodes, so the concept of nodes is not really well-defined in the FEM/DG solver). . At the moment, the develop branch will fail at this line if anyone attempts to use the FEM/DG solver. . E.g., Taking the `hom_euler/NACA0012_5thOrder` test case in the repo gives the following error message:; ```SU2_CFD: ../SU2_CFD/src/output/../../include/solvers/CSolver.hpp:230: const CVariable* CSolver::GetNodes() const: Assertion `base_nodes!=nullptr && ""CSolver::base_nodes was not set properly, see brief for CSolver::SetBaseClassPointerToNodes()""' failed.``` at the pre-processing stage before any computation is done. Hence, a conditional operator is added to avoid this call for DG solvers. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; @vdweide and I are working on a new version of the DG solver that needs this workaround anyway. This is just added for now in case anyone else wants to work on the current version of DG solver available. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meso",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1772:1138,Assert,Assertion,1138,https://su2code.github.io,https://github.com/su2code/SU2/pull/1772,1,['Assert'],['Assertion']
Testability,"y conditions for us to use here. I started with the NACA64A010 airfoil @RoccoBombardieri tested, now with the pitching motion re-included, and looked at the periodic behaviour. [pitching_NACA64A010.zip](https://github.com/su2code/SU2/files/3963760/pitching_NACA64A010.zip). ![NACA64A010](https://user-images.githubusercontent.com/33747655/70848141-f7223b00-1e64-11ea-876c-0751b187fea4.png). Using the Euler wall boundary condition, the results still match exactly to @economon 's thesis (no real surprise as I suspect the code hasn't changed much for this comparison) and this agrees pretty closely with other inviscid reference results like Jamesons's unsteady flow past airfoils. With the symmetry plane, the results differ from the other inviscid solutions but the agreement to the experiment is better. I couldn't get hold of reference drag or moment results to compare against, therefore the comparison is only against lift. I also tested the pitching NACA 0012 airfoil using Batina's ""Unsteady Euler Airfoil Solutions Using Unstructured Dynamic Meshes"" as reference. In this case with the NACA 0012 airfoil, the reduced frequency (k=0.0814) is lower than the previous case and the amplitude is slightly higher at 2.51deg. . [pitching_NACA0012.zip](https://github.com/su2code/SU2/files/3963762/pitching_NACA0012.zip); ![NACA0012_CL](https://user-images.githubusercontent.com/33747655/70848145-115c1900-1e65-11ea-9f5d-7e73e6ac349e.png). Once again, using reference from computational and experimental results, the lift results are very similar for both boundary conditions. For this case, moment results were also available. . ![NACA0012_CM](https://user-images.githubusercontent.com/33747655/70848146-115c1900-1e65-11ea-9e24-4c55550ee945.png). The sign convention was inverted in the paper and neither BC matched exactly to the reference which had a coarser mesh than the one used here but the Euler wall looks to be in better agreement with the reference and captures the overall shape. I've att",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-565716260:1889,test,tested,1889,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-565716260,1,['test'],['tested']
Testability,"yeah the sst test are not happy now of course, oh well, I can help re-running and updating.; Maybe we should go over the equations once more while we are at it :shushing_face:",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1784#issuecomment-1277824517:13,test,test,13,https://su2code.github.io,https://github.com/su2code/SU2/pull/1784#issuecomment-1277824517,1,['test'],['test']
Testability,yep :) maybe still today if I can figure out how and where I broke the disc_adj_fsi testcase ... ; Note to self: Read what people did before writing things,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1129#issuecomment-743360152:84,test,testcase,84,https://su2code.github.io,https://github.com/su2code/SU2/pull/1129#issuecomment-743360152,1,['test'],['testcase']
Testability,"yes, I see it. Do you know why this is done? I think we should remove the Div term to make it compatible with literature. This will then probably change all turbulence regression tests.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1784#issuecomment-1277195535:179,test,tests,179,https://su2code.github.io,https://github.com/su2code/SU2/pull/1784#issuecomment-1277195535,1,['test'],['tests']
Testability,"~~Convergence history is non deterministic when running the RANS solver with SA model using OMP-only parallelism. When fixing the min RMS residual, the computation stops at a different iteration each time I run the solver.~~. ~~That does not happen with the EULER or NAVIER_STOKES solvers.~~. Convergence history is non deterministic when using the NEWTON_KRYLOV solver using OMP-only parallelism. When fixing the min RMS residual, the computation stops at a different iteration each time I run the solver.; That happens with the EULER or NAVIER_STOKES and RANS solvers. I am using a common setup for each case i.e. ROE+MUSCL convective fluxes, WLSQ for viscous gradients, LSQ for MUSCL gradients. Tried also switching ON and OFF the CFL adaptation and limiters, different linear solvers, and precision (single/double) of the linear solver but that doesn't change the outcome of the test (RANS conv history remains non deterministic while EULER and NS have always the same convergence history). I compiled in release (-O3), with OMP support and exported the mtune/march variables to enable SIMD types. ~~I'll be looking in the SA/Scalar solver for some uninitialized vars. Any other idea?~~. I'll be looking in the CNewtonIntegration files for some uninitialized vars/thread safety issue. Any other idea? . **Bug report checklist**; - [x] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [x] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [x] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: Linux (Ubuntu 18.4 LTS); - C++ compiler and version: g++ (GCC) 7.5.0; - MPI implementation and version: OpenMPI 2.1.1; - SU2 Version: 8.0.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2259:883,test,test,883,https://su2code.github.io,https://github.com/su2code/SU2/issues/2259,1,['test'],['test']
Testability,"👍 for doing this @maxaehle . ; - I am in favor of removing the `_ADJ_` options with the `GRAD_OBJFUNC_FILENAME`.; - As Roe is used the `JST_SENSOR_COEFF` can go. Limiter are turned off so either the slope limiter section with 2 options can be removed or be moved down below the `FLOW NUMERICAL METHOD DEFNITION`.; - `CONV_CRITERIA` will be gone once you merge develop and you can add `CONV_FIELD=RMS_DENSITY` as that is also the default. Removign the `_CAUCHY_` options is prob debatable, but in this very cfg they are unused. ; - The `CFL_ADAPT*` stuff can go (unless the values are chosen in such a way by you that they do work well, otherwise it might even do negative advertisement for an option). I guess I am also a bit aggressive on stripping options from files, so take it with a grain of salt 🧂 . Another aspect ,which is of course nothing to be changed in this PR and is also a bit off-topic, is that lists like `SOLVER` change over time but the list in the comment over the option in the Testcase cfg does not get updated (there might of course be good examples of people doing so ;) ). `WAVE_EQUATION` and `POISSON_EQUATION` e.g. are not available anymore, yet they are in the cfg description of `SOLVER` here... and 200 other Testcases. So a way might be to strip those and sth like ; ```; % See the config_template.cfg in the code root for more information on the options; ```; ... although the info there are not always perfect either, but one place to maintain is easier than a couple hundred",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1240#issuecomment-804890763:999,Test,Testcase,999,https://su2code.github.io,https://github.com/su2code/SU2/pull/1240#issuecomment-804890763,2,['Test'],"['Testcase', 'Testcases']"
Usability," Boost's unit testing framework<https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>. This provides a convenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time we push commits or submit a pull request, the unit tests are run and checked. What is my vision for unit testing in SU2?. I am not proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. Roll-your-own. * Requires no external dependencies; * The most flexible option; * Involves the most work to setup; * Will lack some of the more advances features of mature unit-testing frameworks. Boost Test. * Can be header only, statically linked, or dynamically linked; * If statically or dynamically linked, then Boost is not very lightweight; * Easy to add if you're already using Boost. Google Test. * Most common unit-testing framework; * Can be easily combined with Google's powerful GMock mocking library; * Compiling and linking can be somewhat painful. Catch2. * Used by FEniCS; * Makes unit tests easily readable with lots of syntactic sugar.; * Has a very simple syntax; * Is header-only; * Requires C++11 compilation;",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:4108,simpl,simpler,4108,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,1,['simpl'],['simpler']
Usability," Changes; *As mentioned in the last few dev meetings, there was some error with GradVal for the streamwise solver with Massflow. This was because the tape was not cleared during SetRecoding. In the current version, the register of extra solutions is moved to Register Variables and gradients look consistent.*. ## Related Work; *SWP-Isothermal with mass flow also shows good gradient validation after implementing this fix. In theory, this should not break any other part of the code.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ x ] I am submitting my contribution to the develop branch.; - [ x ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ x ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.; ![CAD_GRAD_AFTER](https://github.com/su2code/SU2/assets/22835014/e0bfa7aa-0347-48a7-abf6-8e0526a706b6); CAD Sensitivites after making changes, gradients are symmetric for the upper and lower variables.; ![CAD_GRAD_BEFORE](https://github.com/su2code/SU2/assets/22835014/49f9d6fa-040c-4ee2-9fe8-da7e6c5d5b72); CAD Sensitivities before making changes, gradients are not-symmetric for the upper and lower variables.; ![Case_Image_RTemp](https://github.com/su2code/SU2/assets/22835014/a1335570-f0a4-412f-aceb-fc2a7dcd754a); Test Case!; ![FFD_GRAD_AFTER](https://github.com/su2code/SU2/assets/22835014/4e3eb1ff-51ed-4adc-afc7-00ec16d17506); FFD Sensitives also co-relate well",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2272:1030,Guid,Guide,1030,https://su2code.github.io,https://github.com/su2code/SU2/pull/2272,1,['Guid'],['Guide']
Usability," Changes; This PR makes several changes to the NEMO code:; 1.) @fmpmorgado Introduced the AUSM+M convective scheme that avoids the carbuncle phenomena in hypersonic blunt bodies (https://doi.org/10.1016/j.apm.2019.09.005); 2.) Wally - A full refactoring of the AUSM schemes within NEMO; 3.) Removal of AUSMPW+ scheme; ; ## Related Work; This work is a follow-up and a cleaner version of the work in the branch **feature_NEMO_AUSMPLUSM**. I will delete both branches after merge. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary. ### Benchmark. I have conducted a comparison between the AUSM and AUSM+M for a 2D axisymmetric non-equilibrium flow over a cylinder with a 0.1 meter diameter and a freestream of M=24, P = 10.23 N and T = 224.5 K. ![image](https://user-images.githubusercontent.com/29612207/192250118-eb074187-3002-468a-8406-b01047c790bd.png); The left image represents the converged 2nd order solution using AUSM+M and the right image using the standard AUSM scheme. The new AUSM+M scheme enables to get rid of the pressure oscillations near the stagnation area. ![image](https://user-images.githubusercontent.com/29612207/192250632-85b64454-c54c-4815-8664-f72fc17d705d.png); Temperature at the stagnation line (solid line is AUSM+M and dashed line is AUSM). ![image](https://user-images.githubusercontent.com/296122",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1773:1016,Guid,Guide,1016,https://su2code.github.io,https://github.com/su2code/SU2/pull/1773,1,['Guid'],['Guide']
Usability," I hear the opinion of the SU2 community. As a validation test case for turbulence models, I am running the NASA Hump test case (https://turbmodels.larc.nasa.gov/nasahump_val.html). However, the results obtained from the develop and master branch are quite different, specially the pressure distribution over the hump. The same difference also appears when other numerical scheme is used (SLAU2 instead of Roe). On the other hand, the skin friction seems not be affected. Please see attached figures. Also, I attached the plot of the residual over iterations, showing that all simulations converged nicely. Firstly, I thought that this was related to pull request #670 but I ran the same case with an older version of the dev branch and the results were identical. This suggest that the difference started from pull requests that were merged before #670. I also attached the config and mesh files if someone wants to reproduce. Thanks to Danah Park (PhD student) for pointed me out. I appreciate your time and feedback. Best,. Eduardo. ![rans_cf_compare-branch_roe](https://user-images.githubusercontent.com/9790985/61551958-7113dc80-aa0b-11e9-8074-7d754d36a99c.png); ![rans_cf_compare-branch_slau2](https://user-images.githubusercontent.com/9790985/61551959-7113dc80-aa0b-11e9-83c2-918d89d26f07.png); ![rans_cp_compare-branch_roe](https://user-images.githubusercontent.com/9790985/61551960-71ac7300-aa0b-11e9-9f1a-e1be993377cb.png); ![rans_cp_compare-branch_slau2](https://user-images.githubusercontent.com/9790985/61551962-71ac7300-aa0b-11e9-80c6-2ee9390e61f9.png); ![rans_rho0Res_compare-branch](https://user-images.githubusercontent.com/9790985/61551963-71ac7300-aa0b-11e9-962a-7ea04a98ecd4.png). **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*; [hump_ddes_full.su2.gz](https://github.com/su2code/SU2/files/3412065/hump_ddes_full.su2.gz); [turb_SA_hump.cfg.txt](https://github.com/su2code/SU2/files/3412070/turb_SA_hump.cfg.txt). **Deskt",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/735:1096,feedback,feedback,1096,https://su2code.github.io,https://github.com/su2code/SU2/issues/735,1,['feedback'],['feedback']
Usability," PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be thinking in a broad enough fashion. I would love to get input from the community for any functionality that they might want to see in this framework. The more robust this is, the more widely useful it will be. I am also a newbie to the python wrapper world of SU2. If there are any glaring road blocks or things that have been tried before but failed, please let me know. ; ; ## Related Work; #733 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/922:3775,guid,guide,3775,https://su2code.github.io,https://github.com/su2code/SU2/pull/922,2,['guid'],['guide']
Usability," a lot of if/switch statements and was hard to read ... one reason for this was that we have not really used an object oriented structure for the output. Despite rearranging everything into separate classes, here is a non-exhaustive list of new features and changes:. - Fully customizable screen, history and volume output; - New multizone screen output; - New flexible way so set convergence criteria (any residual and/or coefficient can be used as a monitor); - Consistent naming of iteration variables (TIME_ITER, OUTER_ITER, INNER_ITER); - Consistent file naming options (RESTART_FILENAME, SOLUTION_FILENAME); - On-the-fly writing of all visualization files; - New Singlezone and Multizone drivers are now used by default. Note that this is a very big change. And i apologize for any inconvenience and troubles that this might cause. I can only maintain features covered by the regression tests. So please test it with your cases and let me know if anything is missing (especially in the output). . I will create documentation for all the new features soon. If you want to test it already, please let me know, I need some feedback. . User Documentation on the changes:; https://su2code.github.io/docs/Solver-Setup; https://su2code.github.io/docs/Custom-Output; https://su2code.github.io/docs/Guide-to-v7/. ## Related Work; #715 is already included in this PR and should be merged before. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/724:1447,feedback,feedback,1447,https://su2code.github.io,https://github.com/su2code/SU2/pull/724,3,"['Guid', 'feedback', 'guid']","['Guide-to-', 'feedback', 'guide']"
Usability," aerodynamic shape and structural sizing optimization using dedicated frameworks (e.g. OpenMDAO). . Startup development costs include the creation of modular tools that are _designed to be driven_ by another framework like OpenMDAO, rather than _to drive execution_ themselves. However, leveraging those MDAO frameworks assumes that software codes and modules to be coupled exist, have appropriate data structures, execution and query APIs, and are wrapped in Python for flexibility and ease of use. The proposed changes were motivated with the goal of making SU2 more modular and flexible, particularly to facilitate its integration into large-scale MDAO frameworks. For more details on the motivation, methodology, and verification & validation results, please refer to our [paper from AIAA Aviation 2022](https://doi.org/10.2514/6.2022-3358). . ## Proposed Changes; @aa-g and I propose the following code updates:. 1. Implementation of residual-based discrete adjoint solver as `CDiscAdjResidualSolver`; a. New config option: `KIND_DISC_ADJ` . 2. Enhancements and standardization of SU2 Python API; a. Add pysu2/pysu2ad methods; b. Standardize Python API and function names ; c. Overloaded getter/setter methods to make data handling more flexible. ## Related Work; These efforts are related to Issue #1262, Pull Request #1300, and Discussion [#1325](https://github.com/su2code/SU2/discussions/1325). . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used pre-commit run --all to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1750:2221,Guid,Guide,2221,https://su2code.github.io,https://github.com/su2code/SU2/pull/1750,1,['Guid'],['Guide']
Usability," first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. Roll-your-own. * Requires no external dependencies; * The most flexible option; * Involves the most work to setup; * Will lack some of the more advances features of mature unit-testing frameworks. Boost Test. * Can be header only, statically linked, or dynamically linked; * If statically or dynamically linked, then Boost is not very lightweight; * Easy to add if you're already using Boost. Google Test. * Most common unit-testing framework; * Can be easily combined with Google's powerful GMock mocking library; * Compiling and linking can be somewhat painful. Catch2. * Used by FEniCS; * Makes unit tests easily readable with lots of syntactic sugar.; * Has a very simple syntax; * Is header-only; * Requires C++11 compilation; * Not as feature rich as Google Test or Boost Test. Questions. * How do developers feel about adding unit tests to SU2?; * If a unit-testing framework were added to SU2, would you actually use it?; * Do developers have a preference (or experience with) any of the unit testing frameworks?; * Should unit tests be expected when submitting PRs?. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/698?email_source=notifications&email_token=AA5FFRG5U3Z55N4W2XWQED3PY3LJ5A5CNFSM4HTDQXQKYY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4GXUGGLA>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AA5FFRHOPE2MUJ2Z5RRV4HTPY3LJ5ANCNFSM4HTDQXQA>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:5035,simpl,simple,5035,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,1,['simpl'],['simple']
Usability," for the optimized geometry. This seemed strange to me, so I investigated it and realized, that the CD in SU2 seems to be computed incorrectly in some cases. . During the investigation, I computed the drag force in Paraview based on the SU2 flow result and compared it to the drag force computed by SU2 both for the initial and the final optimization geometry. The results did not match, which is not what I would have expected. . In SU2, I compute the drag force by multiplying CD with the non-dimensional factor written to the forces_breakdown file. For Paraview, I wrote a script which does the following to compute the drag force:; - Load surface flow solution for the wing surface; - Compute surface normals; - Compute Drag = -Pressure*(Normals_X * cos(AoA/180 * 3.1415) + Normals_Z * sin(AoA/180 * 3.1415)); - Integrate this over the whole wing surface to get the total drag force. You can also find this Paraview script attached.; I validated the Paraview script for multiple simple testcases, for which SU2 and Paraview gave me exactly the same drag force. When I applied it to the initial optimization geometry, I however realized, that SU2 computes a drag force of 60.95 N while Paraview gets 143.6 N. Furthermore, for the final optimization geometry, Paraview computes 53.3 N while SU2 gets a drag force of -55.95 N. . To my understanding, the drag computed from pressure integration over the surface should be independent of the solver, the flow conditions and (ideally) even the programme. Furthermore, the Paraview result seems more trustworthy than the SU2 result as SU2 calculates a negative drag, which should physically not be possible, not even with the Euler equations. This leads me to the conclusion that there might be something wrong with the drag computation in SU2 for some geometries. Has anybody encountered a similar issue? Or are there specific criteria a geometry must fulfill in order that the drag is computed correctly?. **To Reproduce**; To reproduce the drag force",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1716:1107,simpl,simple,1107,https://su2code.github.io,https://github.com/su2code/SU2/issues/1716,1,['simpl'],['simple']
Usability," heat flux over different surfaces during runtime would be a good metric for judging convergence and quality of the design. Currently (as of 7.3.0) this does not seem to be possible. *A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]*; In my mesh I have defined various markers which indicate the surfaces of interest, where I would like the average heat-flux to evaluate over time. As suggested by the DryRun info I've indicated the surfaces with the MARKER_MONITORING specifier in the config file:. `MARKER_MONITORING = (NS_WALL_RESONATORTIP, NS_WALL_RESONATOR3, NS_WALL_RESONATOR2)`. However, the history and screen output shows only the heat flux aggregated over all surfaces. **Describe the solution you'd like**; *A clear and concise description of what you want to happen.*. I would like the values of the HEAT group to behave just like those of the FLOW_COEFF group, where the heat flux is indicated on a per-surface basis. This would allow me to track the development of the heat fluxes with good time resolution, without having to write an excessive amount of surface files. The output in the solution history could be similar to that of other output groups, i. e.:; `""Avg_HeatFlux(SURF1)"",""Avg_HeatFlux(SURF2)"",...`. **Describe alternatives you've considered**; *A clear and concise description of any alternative solutions or features you've considered.*; Regularly exporting the entire surface data to discrete files and analyzing them during post-processing is a possible work-around, but leads to an excessive amount of files. **Additional context**; *Add any other context or screenshots about the feature request here.*; My cases are highly transient and require quite some timesteps until a quasi-stationary limit cycle is reached. In the limit cycle the cycle-averaged net heat fluxes should be nearly zero. However, the magnitude of the heat transport is also of interest, which is why I would like to monitor these properties over time.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1531:1539,clear,clear,1539,https://su2code.github.io,https://github.com/su2code/SU2/issues/1531,1,['clear'],['clear']
Usability," is to have a ""CMatrixDense"" class, to give concrete examples:; - For RBF interpolation the guy who worked on it before me implemented his own Cholesky and LU factorizations, matrix-matrix, matrix-vector routines, etc.; - @jayantmukho recently needed some eigenvector decomposition's for the uncertainty quantification feature.; - I imagine in some other places of the code similar routines were needed, for example small matrix inversion when computing gradients by weighted least squares (indeed what I need now is a QR decomposition). And, as an added bonus, I think some other areas of the code could be simplified / optimized by adopting a dense matrix format, for example:; - This snipped from the viscous numerics refactoring`for (iDim = 0; iDim < nDim; iDim++) {; TauElem[iDim] = 0.0;; for (jDim = 0; jDim < nDim; jDim++); TauElem[iDim] += tau[iDim][jDim]*UnitNormal[jDim];; }` would simply become `TauElem=tau*UnitNormal`; - Cumbersome allocations like `tau_jacobian_i = new su2double* [nDim];; for (iDim = 0; iDim < nDim; iDim++) {; tau_jacobian_i[iDim] = new su2double [nVar];; }` become `Matrix tau_jacobian_i(nDim,nVar);` and the cleanup is dealt with by the destructor of the object automatically. Now to answer some questions.; @juanjosealonso @erangit LAPACK and BLAS are indeed the standard, so much so that most (all?) newer libraries will call their routines behind the scenes.; However they considerably simplify the user interface by encapsulating the aforementioned construction/destruction and by exposing natural ways of manipulating the matrices, e.g. access entire rows, columns, blocks, etc.; Another issue with using BLAS routines is that we then need to provide a portable version that can be differentiated with CoDi or to implement the exact differentiation (similar to what is done in the ""solve_b"" routines). @vdweide that is not an issue with Eigen because everything is templated and therefore compatible with any type or class that overloads the appropriate arithme",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-459653772:1428,simpl,simply,1428,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-459653772,1,['simpl'],['simply']
Usability," of the airfoil.; This PR adds floor values, but in the form of *fixed values*: The turbulence quantities are just set to the far-field values in the upstream region. This has been implemented in analogy to the strong boundary conditions. The correction can be activated like this:. TURB_FIXED_VALUES= YES; TURB_FIXED_VALUES_DOMAIN= -1.0. The second parameter specifies the half-plane on which fixed values are applied. This half-plane consists of those points for which the dot product of their coordinate vector with the normalized far-field velocity vector is less than `TURB_FIXED_VALUES_DOMAIN`. . This is the turbulence kinetic energy with AoA=0° and 10°:; ![kk_sst_copr_floor_TKE](https://user-images.githubusercontent.com/72806890/111278035-63c45080-8639-11eb-8ae9-194a5a1ca5f8.png); ![kk_sst_copr_floor_aoa10_TKE](https://user-images.githubusercontent.com/72806890/111278050-68890480-8639-11eb-9065-adac2e8cba15.png). The SA model does not suffer from a decaying turbulence variable, but the proposed changes are also functional there. [1] Philippe R. Spalart and Christopher L. Rumsey, Effective Inflow Conditions for Turbulence Models in Aerodynamic Calculations, https://arc.aiaa.org/doi/pdf/10.2514/1.29373. ## Related Work; ?. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1236:2559,guid,guide,2559,https://su2code.github.io,https://github.com/su2code/SU2/pull/1236,2,"['guid', 'simpl']","['guide', 'simply']"
Usability," of the code. So I want to know what is exactly of the develop branch, can't be the code if you understand the tags as I do. Maybe you refer to the develop code at the time where these tags were introduced. But maybe sth different. > I guess they converge eventually to the same values. I tried to compare the same case but steady (I attach the summary). Results in this case are fairly similar and (in my opinion) raise no warnings. That is good to hear. ; Luckily @cvencro (Thanks for that 👍 ) ran some tests and found that #740 (which rewrites Euler Wall boundaries for compressible and incompressible flows ... which was me btw) introduces the changes you see. The Euler wall for compressible is changed a bit in the way the boundary condition is enforced. Upon convergence both version should recover (close to) the same value. If the results in a steady state are the same/very-similar and if an unsteady simulation at low enough Reynolds-number converges to the same steady result (or oscillate in the same bounds) -> I would say it is simply some purely numerical effect based on the unphysical initialization and different treatment of the euler wall boundary. . 1 thing one could test additionally is to force a very high convergence in each physical timestep, i.e. usually one converges ~3 orders of magnitude in each ts -> now try converging until residual stalling in each ts. If the code versions get the same/closer results in the temporal evolution my euler wall boundary explanation would be quite reasonable.; Together with the long running unsteady simulation proposed above, I would feel more comfortable to judge. @cvencro (bringing the conversation to this place 😉 ) concerning the pitching case: the `if (dynamic_grid)` statements in the 'old' version are not necessary as that is handled by the numerics class. In the new version an appropriate 'reflected state' is constructed and the numerics container is called to compute the residual. Before, the code of one numerics ->Co",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-562621057:1234,simpl,simply,1234,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-562621057,1,['simpl'],['simply']
Usability," of the directories would have sub-directories for different mesh sizes, with configuration files for each mesh level that have optimized parameters for best results. So for example if we are talking about the NACA0012 case, we would have something along the lines of: . a) NACA0012; i) 113 x 33; ii) 225 x 65 ; iii) 449 x 129; iv) ... This way we have a family of meshes and configuration files that are specifically built for the purpose of validating the code and comparing with other solvers. I might be useful to compress meshes that are larger than a certain size (say 10MB). We should also put a limit on the size of a single mesh that the repository can handle (say 50MB?). . Within the home directory, the README file should list all the cases in the repository, who the custodian of the test case is (person with meshes in case the meshes are too large), and which version it was last run on. . I thought about splitting it up into Verification cases and Validation cases, but I thought it would be more informative and intuitive to split up according to the physics of the simulations. My thinking might be limited because that's how I have seen the TestCases folder organized, so any other suggestions are welcome. I think it is imperative that this is accompanied with a section on the SU2 website that showcases just the results of the validation test cases (grid convergence studies, residual reductions etc) and links to the v&v repo appropriately. This way, if people are just inquisitive about SU2's performance, they can get a quick snapshot of the results, without the need to run the cases themselves. . I also wanted to broach the topic of convergence here. Would it be a good idea to standardize the termination criteria wherever possible? For example, in the NACA0012 case we can ensure that residuals are reduced by 8 orders of magnitude for all meshes. Or for the ONERAM6, we use Cauchy convergence and make sure the C_L is converged to 6 orders of magnitude. This would hav",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-426026053:1437,intuit,intuitive,1437,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-426026053,1,['intuit'],['intuitive']
Usability," pass when compiling Tecio and TecioMPI; * SU2_TECIOMPI_CPPFLAGS: flags to pass when compiling TecioMPI, requires SU2_ENABLE_MPI. There is an additional variable that is recognized by CMake scripts - DEBUG, turning it ON enables additional STATUS messages, mainly to check that correct include directories, compile definitions and linked libraries were set up correctly. The remaining options like install location and compilers are handled by CMake. Tested this on Ubuntu with CMake 3.15.5 and everything except pySU2ad wrapper compiles. Haven't tested on earlier CMake versions so there might be bugs with them but they should be easy to resolve if any. Related Work. Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any. PR Checklist. Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution. * I am submitting my contribution to the develop branch.; * My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; * My contribution is commented and consistent with SU2 style.; * I have added a test case that demonstrates my contribution, if necessary. ________________________________; You can view, comment on, or merge this pull request online at:. https://github.com/su2code/SU2/pull/814. Commit Summary. * CMake support for SU2. File Changes. * A CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-0> (147); * A Common/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-1> (149); * A SU2_CFD/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-2> (143); * A SU2_DEF/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-3> (13); * A SU2_DOT/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-4",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814#issuecomment-552242380:3666,guid,guide,3666,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380,1,['guid'],['guide']
Usability," periodic faces are now possible, e.g., triply-periodic cube.; - Concept is now based on completing the residuals from partial control volumes on either side of a periodic face instead of creating extra halo cells.; - All periodic comms have been separated from the MPI point-to-point comms and are performed first for consistency. In a follow-up PR, I will remove many lines of code that are no longer needed (all Set_MPI_* routines, many outdated geometry routines, etc.). ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ~~I could use some help with testing this one, in particular the rotational periodicity, which might still need some changes. Unfortunately, I do not have the original meshes for the periodic cases in the repo that are failing (other than Poiseuille)..~~. ~~@salvovitale @LaSerpe @arubino: do you have the original grids for the periodic cases before adding the halos with SU2_MSH? I would like to make sure that everything is working ok for all previous capability.~~. All periodic meshes in the regressions have been updated for the new periodic BC, and a python script has been added to remove halo cells from old meshes that were preprocessed with SU2_MSH for the previous periodic BC implementation. Resolves #550 ; Resolves #431 ; Resolves #416 ; Resolves #252 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/652:2702,guid,guide,2702,https://su2code.github.io,https://github.com/su2code/SU2/pull/652,1,['guid'],['guide']
Usability," require almost no changes to the solver classes when switching between different solutions by using polymorphism (other than maybe where they get instantiated).; * applicable for any of the following: imposing initial conditions, analytic solutions, or manufactured solutions. There is also now a user-defined solution class that folks can use to prescribe initial conditions as a function of space for any type of calculation. It should be easy to add new solutions to the library by creating new child classes. We are placing a few cases in the regressions, but we will also add full cases with analysis to the V&V repo. It will also be discussed in a presentation at the developers meeting. You will find a few other small bug fixes in the PR as well. As an example, here are some (particularly nice) sample observed order of accuracy results for the compressible FV solver with a laminar N-S MMS (to be fair, not all look this clean):. ![accuracy_rms_rho](https://user-images.githubusercontent.com/4896083/56620511-fc80fb80-65dd-11e9-942f-b7add7edeae8.png); ![slope_rms_rho](https://user-images.githubusercontent.com/4896083/56620512-fd199200-65dd-11e9-97db-537f6bd00114.png). ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Cases to be added as part of the V&V repo discussed in #581 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/672:2065,guid,guide,2065,https://su2code.github.io,https://github.com/su2code/SU2/pull/672,1,['guid'],['guide']
Usability," rough wall, the WALL_TYPE option must specified for all the markers and WALL_ROUGHNESS set to 0.0 for smooth walls and the desired value for rough walls. ; [Sample input file for airfoil with smooth and rough walls](https://github.com/su2code/SU2/files/4198580/turb_naca62215_v7cfg.txt). The airfoil used here is the NACA 622215 and I can send the mesh and experimental data in case anyone is interested. . ## Additional notes. Modification of wall distance computation required some changes to the ADT routines and subsequently to some FEM stuff as well. To modify the wall distance with roughness, I needed to know which marker was the closest wall and add the corresponding roughness. However, I wasn't sure how to properly do this in MPI. My solution was to pass the marker roughness information to the ADT class itself. This meant I had to add a dummy argument whenever the corresponding ADT classes were called elsewhere. Just to clarify, the modification is only in CADTElem class constructor and ComputeWallDistance routines. I hope this will not be a problem. I made this as a draft PR in case there are some issues with this. Also, if there are any issues with how the config file is changed, I can update that as well. I haven't modified the config_template for this yet. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/877:5004,guid,guide,5004,https://su2code.github.io,https://github.com/su2code/SU2/pull/877,1,['guid'],['guide']
Usability," scheme for a multi-physics problem. To obtain the design accuracy in time, this implies that the loop over the number of time stages is outside the loop over the number of physical disciplines. Hence at a very high level in the hierarchy, the details of the time integration should then be known. The situation becomes even more complicated when one would like to employ time integration schemes that allow for time accurate local time stepping, e.g. the ones we are currently working on for the DG solver. I won't bore you with all the details here, but those schemes basically require the loop over the multiple disciplines to be between the predictor and corrector step, while both these steps consist of multiple stages. Although it is probably possible to come up with a data structure that supports all this, the question is whether this is desirable. Apart from the fact that it would require a major overhaul in the high level design of SU2, the implementation will be less readable, especially for people that will be starting with the code. Also the parallelization may become significantly more complicated. The alternative is that for unsteady multi-physics problems, we put the restriction that only single stage time integration schemes can be used, e.g. DT_STEPPING_1ST and DT_STEPPING_2ND. In that case, the details of the time integration scheme can be hidden at the driver level, where we then simply have a loop over the number of physical disciplines. The consequence of course is that more advanced time integration schemes will not be available for multi-physics problems. In the above I just tried to picture what, in my opinion, the consequences are for either option. I don't have a preference for one of them. The only thing I wanted to make clear is that it is not possible to hide all the details of the time integration scheme at the driver level, while also having support for all possible time integration schemes for an unsteady multi-physics problem. Regards,. Edwin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437#issuecomment-328441926:1780,simpl,simply,1780,https://su2code.github.io,https://github.com/su2code/SU2/issues/437#issuecomment-328441926,2,"['clear', 'simpl']","['clear', 'simply']"
Usability," silicon, by and large vector instructions have the same latency and throughput of their scalar versions, therefore speedups proportional to the number of SIMD lanes are possible in compute-bound code.; As we saw in #716 there is some of that in the numerics, do not expect 4x speed-ups though, low order unstructured FVM is known to be bandwidth-bound, vectorization helps a bit there too (instructions are also data that needs to travel to the CPU) (maybe for explicit schemes and 8 SIMD lanes, maybe). **Relation with data structures**; There is only one efficient way to move data between memory and registers, via `load` and `store` instructions (they do come in multiple flavors). That is, pointing to a memory location and reading or writing N elements of contiguous data.; It is not the only way, it is also possible to `gather` and `scatter` data. That is populating the register from non-contiguous locations and vice versa. This is about one order of magnitude slower, to the point where if the computations are very simple it may not pay-off to vectorize. **Relation with algorithms**; Some form of `gather` and `scatter` is required in unstructured CFD, which means SIMD has a price of admission. Some thought needs to go into designing algorithms that amortize that cost by maximizing the so called FLOP/Byte ratio, and mask the latency of those operations by being able to start computing as soon as the first element of data is available. **What elements should we try to process simultaneously?**; The choice is between multiple geometric primitives (edges/points) or multiple solution primitives (variables). The latter sounds like a sensible idea until we get to areas of the code where different primitives require different treatment, that and the fact that the number of variables might not fit evenly in the number of lanes can lead to very tricky and non-generic code. Nevertheless if the same code were to be applied to e.g. 4 solution variables, this strategy would likely pe",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-529662724:1617,simpl,simple,1617,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-529662724,1,['simpl'],['simple']
Usability," so I consider that to be ok; 2. For prescribed massflow (and I differentiate here between the code before this PR and ...well this PR): The gradient for Avg_Temp and drag are okay-ish but far from being validated (just like for massflow and dp for prescribed dp); ![image](https://user-images.githubusercontent.com/31306376/152564385-4ce45439-ec60-459a-a16b-7ec61b0c1cec.png); For massflow OF I get wrongly reported gradients by the adjoints, both before and after this PR; ![image](https://user-images.githubusercontent.com/31306376/152565095-f84084c6-3568-495b-bc14-19278b2a5eb6.png); and pressure drop OF; ![image](https://user-images.githubusercontent.com/31306376/152565915-1f5a9bd8-203a-4711-81f7-7021e307c756.png). Two other aspects.; 1. the PRESSURE_DROP OF is computed in streamwise periodic flow using the Recovered_Pressure (as the ""standard"" Pressure is the same on both faces). There I need to make sure that the recovered values are computed as well after the iteration (but with the Flow Preprocessing after the MultiGridCycle that seems to be the case); 2. As pressure drop is iterated to get the correct flow solution, is it necessary to treat is specially in the adjoint like a solution variable? <- turns out, that was the case and also is the majority of work done in this PR. Le fin. ## Related Work; #773 initial implementation; #1527 first step in getting a consistent restart for massflow prescribed flow by storing the pressure drop in massflow-meta file. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1536:4024,simpl,simply,4024,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536,1,['simpl'],['simply']
Usability," the features of the finite element implementation in SU2. For this, it uses the same elements as the FEA solver but extends the definitions of the Gauss quadrature to be second order.; It can operate in two different modes:. 1) The smoothing can be applied to the mesh sensitivities, either in the complete mesh or only design boundaries. See the picture below for an example of this.; ![PicforSU2](https://user-images.githubusercontent.com/16785869/149150313-a996ecba-fe7f-4de7-983e-560410b840b4.jpeg). 2) It also includes the possibility to take the mesh parameterization into account, compute the derivatives (dM/dp), and smooth the sensitivities w.r.t. the design parameters. This is done by the same AD logic used in SU2_DOT.cpp::SetProjection_AD. The routines are extended, such that AD can compute arbitrary matrix-vector products with the Jacobian of the parameterization and apply the smoothing operator to the gradient. This is a continuation of draft #1439 with a new rebased branch. It has a cleaner commit history and not so much legacy from previous versions. The regression tests for this pull request need the files for the accompanying pull request [su2code/TestCases/pull/88](https://github.com/su2code/TestCases/pull/88). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1446:3278,guid,guide,3278,https://su2code.github.io,https://github.com/su2code/SU2/pull/1446,2,"['guid', 'simpl']","['guide', 'simply']"
Usability," the solution at the inlet corner is completely wrong, while the outlet is ok most likely because characteristics are outgoing as it is supersonic. The artifacts disappear if we disable MUSCL everywhere (1st order solution) or disable it only on boundaries (not ideal solution, but disabling only on corners would still be good enough for now I believe). Using ```WEIGHTED_LEAST_SQUARES``` seems to not present the same issue, in this test case at least, as the stencil ""does not care"" about the boundary states. The boundary conditions are:; - ```MARKER_SYMMETRY``` at centerline; - ```MARKER_EULER``` at wall; - ```MARKER_RIEMANN= (INLET, TOTAL_CONDITIONS_PT, 904388, 542.13, 1.0, 0.0, 0.0)``` at inlet; - ```MARKER_RIEMANN= (OUTLET, STATIC_PRESSURE, 200000.0, 0.0, 0.0, 0.0, 0.0)``` at outlet. I tried both with and without a slope limiter as there are no discontinuities, but it makes no difference on the artifacts:. ```; SLOPE_LIMITER_FLOW= VENKATAKRISHNAN_WANG; VENKAT_LIMITER_COEFF= 0.1; ```. # Complete test case ZIP; [mdm_coolprop_nozzle.zip](https://github.com/su2code/SU2/files/15403732/mdm_coolprop_nozzle.zip). # Inlet pressure zoom; ![Screenshot from 2024-05-22 15-06-36](https://github.com/su2code/SU2/assets/79575547/9ba71127-cb12-4c5f-8e49-3ea9e839b1f4). # Notation: ; - ""1st order"" no MUSCL; - ""2nd order"" MUSCL as implemented in SU2; - ""2nd order (BC 1st order)"" I simply disabled MUSCL on ALL physical boundaries in the upwind residual computations, see code snippet below. # Proof of concept code modification for ""2nd order (BC 1st order)"":; To show that the error lies in MUSCL/gradients at boundaries I added these two lines of code in the upwind gradient computation; ![image](https://github.com/su2code/SU2/assets/79575547/27f2a79b-824d-4a32-a626-73cd87750c0c). # Residuals:; ![image](https://github.com/su2code/SU2/assets/79575547/3f0800fe-478e-433d-8495-cd4964d0f8ee). # Mesh:; ![image](https://github.com/su2code/SU2/assets/79575547/0ebaf86b-fbf9-40b1-aeb9-8764a90a1440)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2285#issuecomment-2124781449:1693,simpl,simply,1693,https://su2code.github.io,https://github.com/su2code/SU2/issues/2285#issuecomment-2124781449,1,['simpl'],['simply']
Usability," threads arrive to that routine. This also makes the routines safe to call in serial.; The only ""dangerous"" things to do in parallel are to: manage memory for a shared object (multiple threads call `new` but there is only one shared pointer on which to call `delete`); writing to the same memory locations concurrently.; I tried to make the first issue debugable by asserting that the initialization routines of CSysMatrix and CSysVector are only called by the master thread.; For the second issue I made the associated classes as const-correct as possible, that should at least make someone think twice before changing a member variable of those classes. The risk is still there for input variables as an algorithm development aspect... For example `MatrixVectorProductTransposed` cannot be made thread-parallel as simply/naively as its normal counterpart. ### Communication Model; The MPI + Threads communication model is very simple, currently only the master thread calls MPI routines (including `Error`), this requires thread barriers before and after the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does not seem to be a significant bottleneck.; _Worksharing_ constructs have implicit barriers at completion, for CSysVector routines I used `nowait` modifiers, it is safe to call those routines in sequence since the loop sizes, and static work scheduling specifications are identical.; However, routines that access a CSysVector in a different way, should have an explicit barrier before using the vector (or risk having undefined behaviour). You will see these barriers on entry to matrix-vector product, and every `ComputeXXXPreconditioner` (if you don't, let me know xD). I think those routines are large enough to amortise the cost of this. ### Performance; Disclaimer:; - We are talking about linear solvers only, **you will not see a global improvement yet**.; - The large global ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/830#issuecomment-562646766:1710,simpl,simple,1710,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766,1,['simpl'],['simple']
Usability," to be able to calculate a gust encounter of a free-flying, elastic aircraft. The rigid body reaction (in terms of velocities u, v, w and rotation rates p, q, r) as well as the elastic structural dynamic reaction (displacement of all surface nodes of the CFD mesh) are calculated by our own aeroelastic solver, coupled via the python interface, while SU2 shall provide the aerodynamic side, as a higher fidelity alternative to panel methods such as VLM & DLM. . Update, 13.04.2023: The combination of grid velocities from the moving + deforming grid turned out to be more complicated as expected (at least for me) and the moving grid is not fully implemented for unsteady simulations (according to Pedro, some source terms are missing). The new approach uses a farfield onflow condition at alpha=0.0 and translates and rotates the whole aircraft in the elastic mesh for the rigid body + structural dynamic reaction. This is more laborious on my side (transformation of the surface, the deformation vector and the forces about the Euler angles) but simplifies the work on the SU2 side:. - extend the gust to 3D meshes (current implementation only for 2D meshes); - ~~update the grid movement during the time domain simulation via the python interface; Involved parameters: ; GRID_MOVEMENT= ROTATING_FRAME; TRANSLATION_RATE= u v w ; ROTATION_RATE= p q r~~; - update the surface mesh deformation during the time domain simulation via the python interface ; Involved parameters: ; DEFORM_MESH= YES; MARKER_DEFORM_MESH= ( list of markers ). Summing up, I will need to combine the grid velocities due to aircraft movement, elasticity and gust. Currently, this is not possible in SU2. ; I split the work into the following steps. Here is what is working / not working:; - [x] gust with 3D meshes --> plausibility check with rectangular, 3 meter wing at 2° + long gust equivalent to 2° = approx doubling of the lift coefficient; - [x] ~~gust + moving grid --> plausibility check by comparison with farfield o",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1954:1081,simpl,simplifies,1081,https://su2code.github.io,https://github.com/su2code/SU2/pull/1954,1,['simpl'],['simplifies']
Usability," to find system libraries and compilers (MKL, Mutationpp, MPI and Python currently). No longer need to specify paths to compilers/libraries if they are in standard locations. In addition, compile flags can be modified from CMake. There is no need to use `preconfigure.py` anymore since downloading/unpacking is handled by CMake and is system-agnostic. At the moment, all library targets are static but that could be easily changed to be configurable from CMake. The installation directory is `${CMAKE_PREFIX_PATH}/bin`. Similarly to autotools, some build options are disabled if built with Codi forward/reverse datatypes or without MPI. Note that SWIG fails to compile `pySU2ad` with `Nothing known about namespace 'medi'` in `Common/include/mpi_structure.hpp:57` without `-includeall` SWIG option but then it takes forever to generate the wrapper (more than 15 minutes on my machine, stopped early). I suggest removing `using namespace` declarations and either importing used symbols explicitly with `using` or prepending namespace name, `clang-tidy` warns against them and it makes the code clearer. SU2 CMake options are:; * Build modules:; * `SU2_BUILD_CFD`: `ON|OFF`; * `SU2_BUILD_DEF`: `ON|OFF`, disabled when building with Codi; * `SU2_BUILD_DOT`: `ON|OFF`, disabled when building with Codi forward; * `SU2_BUILD_GEO`: `ON|OFF`, disabled when building with Codi; * `SU2_BUILD_MSH`: `ON|OFF`, disabled when building with Codi; * `SU2_BUILD_PY_WRAPPER`: `ON|OFF`, disabled when building with Codi forward; * `SU2_BUILD_SOL`: `ON|OFF`, disabled when building with Codi; * Enable modules:; * `SU2_ENABLE_CGNS`: ; * `SU2_CGNS_CPPFLAGS`: flags to pass when compiling CGNS; * `SU2_ENABLE_CODI`: `no|forward|reverse`; * `SU2_CODI_CPPFLAGS`: flags to pass to SU2 modules when compiling with Codi; * `SU2_ENABLE_METIS`: `ON|OFF`; * `SU2_METIS_CPPFLAGS`: flags to pass when compiling Metis; * `SU2_ENABLE_MKL`: `ON|OFF`; * `SU2_ENABLE_MPI`: `ON|OFF`; * `SU2_ENABLE_MUTATIONPP`: `ON|OFF`; * `SU2_ENABLE_PAR",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814:1443,clear,clearer,1443,https://su2code.github.io,https://github.com/su2code/SU2/pull/814,1,['clear'],['clearer']
Usability," to v6.5.0 which was recently released. I picked the commit of the release, but newer commits are available. I also ""cleaned up"" a bit the submodule function so that it would become easier to update CoolProp in the future and make the intent of the code clearer. . ## Related Work; CoolProp v6.5.0 has an updated EOS for CO2, with which I am currently playing around. This new version has the same EOS as NIST. It also comes with a variety of bug fixes and improvements. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - The code generates quite a few warning when compiling on Debian 12, which uses GCC12 , but none were introduced in this commit. I tested the compilation using an Apptainer/Singularity container.; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - I changed the Python code, for which I saw no entry in the style guide.; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - I did not run it as I did not know about it, but I do not think it applies for this (though maybe it does); - [ ] I have added a test case that demonstrates my contribution, if necessary.; - Not necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.; - No documentation related to SU2 should be affected. I do have one question which is not directly related to this PR. I have an Apptainer/Singularity container for SU2 which has most of the bells and whistles. I saw that you have docker containers, but for HPC (and normal computers) Docker [can have a large performance penalty](https://www.youtube.com/watch?v=2FPB74YB-ng). Would you like for me to contribute my Apptainer recipes? . Any and all feedback welcome!. P.S: I did not know that even after updating the hash commit of",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2136:1068,guid,guide,1068,https://su2code.github.io,https://github.com/su2code/SU2/pull/2136,1,['guid'],['guide']
Usability,"# Import issues. In Python 3, relative import behaviour changes.; In Python 2, ""import module"" loads first local module, then system module. In Python 3, it is the opposite. ## Import patterns in SU2 code. If we consider, to simplify, these generic packages:; `package1/p1m1.py`; `package1/p1m2.py`; `package1/__init__.py`. `package2/p2m1.py`; `package2/__init__.py`. In SU2 code we find these patterns:. **Pattern 1**; `package1/__init__.py`; contains. ``` python; import p1m1; import p1m2; ```. These instructions are useless as it is the common behaviour of package.; If a `__init__.py` is defined, I can do from package1 import p1m1 or import package1.p1m1. Do you know why this happens ? Is there an historical reason or other ?; For example, in [`SU2_PY/SU2/__init__.py`](https://github.com/su2code/SU2/blob/master/SU2_PY/SU2/__init__.py) or [`SU2_PY/SU2/mesh/__init__.py`](https://github.com/su2code/SU2/blob/master/SU2_PY/SU2/mesh/__init__.py). **Pattern 2**; `package1/__init__.py`; contains. ``` python; from p1m1 import f; ```. **Pattern 3**; `package1/p1m1.py`; contains. ``` python; from ..p1m2 import f; ```. **Pattern 4**. ``` python; import cPickle as pickle; ```. ## Solution. I suggest these solutions:. **Pattern 1**; delete imports. **Pattern 2**; replace `from p1m1 import f` with `from .p1m1 import f` . See also next solution. **Pattern 3**. This is OK. Another approach is to always use absolute imports, for example. ``` python; from ..p1m2 import f; ```. becomes. ``` python; from package1.p1m2 import f; ```. Result is the same except that it is recommended in [PEP8](https://www.python.org/dev/peps/pep-0008/#id20) but first approach is ok too.; I can do it if you want. **Pattern 4**; Py3 pickle now manage both accelerated cPickle and pure python pickle; See https://docs.python.org/3/whatsnew/3.0.html#library-changes, 4th item.; So replace it with. ``` python; if sys.version_info.major > 2:; # Py3 pickle now manage both accelerated cPickle and pure python pickle; # S",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/246#issuecomment-197397273:225,simpl,simplify,225,https://su2code.github.io,https://github.com/su2code/SU2/issues/246#issuecomment-197397273,1,['simpl'],['simplify']
Usability,"## Disclaimer; This is my first ever contribution to any GitHub project. Please give feedback on what I can Improve if I haven't done something that is expected of me. ## Proposed Changes; Added Velocity output, since I am interested in that and adding it only in the config just gets ignored and no output happens; . ## Related Work. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2077:85,feedback,feedback,85,https://su2code.github.io,https://github.com/su2code/SU2/pull/2077,2,"['Guid', 'feedback']","['Guide', 'feedback']"
Usability,"## Proposed Changes & related work; See issue #1928:. The filename of the Paraview multiblock is set to the case name / config filename. For all other volume outputs, the filename is specified with 'VOLUME_FILENAME' in the config file. See e.g. the Paraview XML filename. This is counter-intuitive and the user is not able to change the multiblock filename in the config file. . This PR aligns the filename handling of the Paraview multiblock output with the other volume outputs, besides calling the `config->GetUnsteady_FileName` function instead of the `config->GetFilename` function which is used for the other volume outputs. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1930:288,intuit,intuitive,288,https://su2code.github.io,https://github.com/su2code/SU2/pull/1930,3,"['Guid', 'guid', 'intuit']","['Guide', 'guide', 'intuitive']"
Usability,"## Proposed Changes. - Added non-polytropic Peng-Robinson (NPPR_GAS) equation of state (CP temperature dependant model): the specific heat ratio is not constant but a polynomial model (CP = n0 + n1T + n2T^2 +n3T^3 + n4T^4) can be specified for the specific heat via the input file option (CP_POLYCOEFFS). - The NPPR fluid model uses the polytropic Peng-Robinson fluid model as a base class. Therefore, the polytropic Peng-Robinson class now allows for inheritance. - New test case (TestCases/nicfd/edge_NPPR) to compare the results of the NPPR with a constant CP model (CP = n0) and the polytropic Peng-Robinson models. The results of both simulations for this test case are equivalent. ## Related Work. - The polytropic Peng-Robinson remains functionally unchanged. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1717:939,guid,guide,939,https://su2code.github.io,https://github.com/su2code/SU2/pull/1717,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes. - Added the missing config->SetInflow_Mach(iMarker_Inlet, Inlet_Mach_Total[iMarker_Inlet]) to CEulerSolver::GetPower_Properties; - Added a new option,BC_EVAL_FREQ for setting the evaluation frequency for the Actuator Disk and Engine Markers, in order to control the stability of the marker. ## Related Work; Fix for issue #2274 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2278:523,guid,guide,523,https://su2code.github.io,https://github.com/su2code/SU2/pull/2278,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes. - Adding newline to some files, removing extraneous newlines. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1391:272,guid,guide,272,https://su2code.github.io,https://github.com/su2code/SU2/pull/1391,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes. - Addition of species diffusion terms to surface energy balance in NEMO, important for highly dissociated flows; - Addition of vector for s species, ""enthalpys"", to variable to store values accessed in solver.; - General cleanup/commenting of the NEMO heat flux computation in CFVMFlowSolverBase.inl. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1383:511,guid,guide,511,https://su2code.github.io,https://github.com/su2code/SU2/pull/1383,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes. - Temporarily remove sumJhs term from surface energy balance. The species density gradients provided by WLS and GG are very different, and the GG values give incorrect results for surface heating. I want to remove this term for now, until the gradient difference sorted, so it does not result in incorrect surface heating prediction if the user specifies GG. . ## Related Work; This reverts the changes in PR #1383 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1400:610,guid,guide,610,https://su2code.github.io,https://github.com/su2code/SU2/pull/1400,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes. - This PR addresses an issue I found in my previous implementation where the chemistry source residual was being computed incorrectly when the axisymmetric source residual was called. ; - This implementation fixes that issue, caused by using outer and inner loops. ; - This PR eliminates redundant set functions, and restructures the code blocks to minimize the number of loops. . ## Related Work. - Fixes bug found in PR #1162 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1170:623,guid,guide,623,https://su2code.github.io,https://github.com/su2code/SU2/pull/1170,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes. . ## Related Work. related to Tutorial for composition-dependent model #113 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1886:271,guid,guide,271,https://su2code.github.io,https://github.com/su2code/SU2/pull/1886,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes. . 1. fixed factor of 100 in the transition turbulence models; 2. changed initialization of inlet profile from 0.0 to values taken from config file. I guess this was done to make this routine more general (for other boundaries) in the future. However, I think generating a default file that works out of the box is better.; 3. added a descriptive comment line to the inlet profile file (one for each marker) with the names of the columns. This line is intended to make editing easier for the user. This comment line is not mandatory and is ignored by the profile reader.; 4. do not write residuals of temperature to output file when energy equation is off. ## Related Work; Related to #1263 and #1265 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1268:946,simpl,simply,946,https://su2code.github.io,https://github.com/su2code/SU2/pull/1268,1,['simpl'],['simply']
Usability,"## Proposed Changes. 1. fixed factor of 100 in the transition turbulence models; 2. changed initialization of inlet profile from 0.0 to values taken from config file. I guess this was done to make this routine more general (for other boundaries) in the future. However, I think generating a default file that works out of the box is better. ; 3. added a descriptive comment line to the inlet profile file (one for each marker) with the names of the columns. This line is intended to make editing easier for the user. This comment line is not mandatory and is ignored by the profile reader. ; 3. do not write residuals of temperature to output file when energy equation is off. ## Related Work; Related to issue #1265 and #1263. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1267:951,simpl,simply,951,https://su2code.github.io,https://github.com/su2code/SU2/pull/1267,1,['simpl'],['simply']
Usability,"## Proposed Changes. Add `workflow_call` event to `regression.yml` Github Actions workflow. This way it is possible to [re-use](https://docs.github.com/en/actions/using-workflows/reusing-workflows) it from another workflow. Add a new workflow - `scheduled-arm64.yml`. It is a scheduled workflow that just executes `regressions.yml` on a self-hosted runner. ## Related Work. https://github.com/su2code/Docker-Builds/pull/1 - A PR that updates the build and test Docker images to Ubuntu 20.04 so that they could be used on both AMD64 and ARM64. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1619:766,simpl,simply,766,https://su2code.github.io,https://github.com/su2code/SU2/pull/1619,1,['simpl'],['simply']
Usability,"## Proposed Changes. As promised in #806 , this adds caching to the regression test workflow. This potentially should speed up the compilation. I am not quite sure whether it works as I think it does, but lets see. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/810:404,guid,guide,404,https://su2code.github.io,https://github.com/su2code/SU2/pull/810,1,['guid'],['guide']
Usability,"## Proposed Changes. Changes the loading of zlib and szip libraries from static (.a) to dynamic (.so).; Suggested by @aa-g at https://github.com/su2code/SU2/issues/1568#issuecomment-1083104460. ## Related Work. None. ## PR Checklist. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1632:440,simpl,simply,440,https://su2code.github.io,https://github.com/su2code/SU2/pull/1632,1,['simpl'],['simply']
Usability,"## Proposed Changes. CoDiPack update that fixes out-of-bounds accesses. Those lead to deadlocks in hybrid parallel discrete adjoint test cases. ## Related Work. work on hybrid parallel AD, e. g. #2039 . ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2153:489,Guid,Guide,489,https://su2code.github.io,https://github.com/su2code/SU2/pull/2153,1,['Guid'],['Guide']
Usability,"## Proposed Changes. Continuation of previous pull request https://github.com/su2code/SU2/pull/2281. [CHT + flamelet was only working if there was an additional isothermal wall present.] . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2283:378,guid,guide,378,https://su2code.github.io,https://github.com/su2code/SU2/pull/2283,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes. Current situation: The translation velocities and rotation rates of a moving frame (activated with GRID_MOVEMENT= ROTATING_FRAME) can only be set in the config file using parameters TRANSLATION_RATE and ROTATION_RATE. During a trim analysis of a free-flying aircraft, these parameters are modified until an equilibrium is achieved. Problem: A change of these parameters requires a new initialization of the solver, which can be time-consuming depending on the mesh size. Proposed solution: A python interface is implemented that allows to change the parameters on-the-fly. The grid velocities are updated before a new iteration. . ## Related Work; This is an extension to pull request #1621. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2024:885,guid,guide,885,https://su2code.github.io,https://github.com/su2code/SU2/pull/2024,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes. Even though the website has a style guide and the repo has a `.clang-format` file it has not strictly applied to pull requests. There is no style-checking workflow. As different users use different environment sometimes pull request contains unrelated style changes which makes the PR unreadable. This PR proposes to use [pre-commit-hooks ](https://pre-commit.com/) which are easy to use and enforce the style and adds a workflow check for formatting. There is no formatted/style proposed for python files. This PR additionally proposes a[ black](https://pypi.org/project/black/) based python formatting that ensures the python files are consistent maximum line length is set to 120 to increase readability. Moreover, pre-commit has additional hooks for the style of files. ; The following ones are proposed: ; `trailing-whitespace - trims trailing whitespace.` -> Especially useful for config files.; `mixed-line-ending - replaces or checks mixed line ending.`; `end-of-file-fixer - ensures that a file is either empty or ends with one newline.`. the pre-commit hooks can be easily installed via pip `pip install pre-commit`. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1948:57,guid,guide,57,https://su2code.github.io,https://github.com/su2code/SU2/pull/1948,3,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes. Extend the Github Actions workflows to run the regression tests on Linux ARM64 too. ## Related Work. https://github.com/su2code/SU2/pull/1619. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1663:336,guid,guide,336,https://su2code.github.io,https://github.com/su2code/SU2/pull/1663,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes. Extend the Github Actions workflows to run the regression tests on Linux ARM64 too. . ## Related Work. https://github.com/su2code/SU2/pull/1619. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1662:338,guid,guide,338,https://su2code.github.io,https://github.com/su2code/SU2/pull/1662,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes. Fixing the CONSTANT_SCHMIDT diffusivity model and removing the Constant_SchimdtRANS class because it is not needed. Additionally, the class CUnityLewisDiffusivity has been modified to CConstantLewisDiffusivity in order to allow users to use constant Lewis number for each species but different to one, which is the assumption of Unity_Lewis. ; The option UNITY_LEWIS is still available in order to allow users to use that option. New option, CONSTANT_LEWIS, is added for the purpose aforementioned.; I can add a test case for the additional option if it is needed. ## Related Work; This pull request is related to #1762. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1787:814,guid,guide,814,https://su2code.github.io,https://github.com/su2code/SU2/pull/1787,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes. Follow up of #1987 . Can be merged after, #1986 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1988:243,guid,guide,243,https://su2code.github.io,https://github.com/su2code/SU2/pull/1988,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes. I added a separate test script file for the tutorial cases. This way they can run in parallel on github actions. Not all of the tutorial cases are included at the moment though. I am also working on a way to analyze all the test cases we have at the moment to eventually remove redundant ones. The analysis will be based on a coverage of the config options. . On a related note, we moved all the config files/meshes for the tutorials into their own repository (Tutorials). This way people don't have to clone the whole website just to get the files ... ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/899:763,guid,guide,763,https://su2code.github.io,https://github.com/su2code/SU2/pull/899,1,['guid'],['guide']
Usability,"## Proposed Changes. I used the OptimalPropeller function for another project a saw a lot of code that could be cleanup in order to be a bit more pythonic and easy to read.; ; ## Related Work; - no. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1846:371,guid,guide,371,https://su2code.github.io,https://github.com/su2code/SU2/pull/1846,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes. In line with what we presented in the hackathon, this PR comes to be the first stage of a major reformatting that we are planning for the Driver structure. The goal is to converge to a structure that is more constant in time and that easily accommodates multi-physics via config file definition, instead on a *case by case* new CDriver class. The goal of this PR is not to be merged immediately, but rather to initiate discussion on the topic. I have created a project in; https://github.com/su2code/SU2/projects/8; where the stages of this process will be done. . ## Related Work. I run a presentation together with @talbring on input/output reformatting during the hackathon that took place at the annual SU2 Developers Meeting. The relevant slides for this PR are shared:. [ReformattingDriver.pdf](https://github.com/su2code/SU2/files/2405682/ReformattingDriver.pdf). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/585:1064,guid,guide,1064,https://su2code.github.io,https://github.com/su2code/SU2/pull/585,1,['guid'],['guide']
Usability,"## Proposed Changes. In the calculation of the stiffness for the mesh deformation, if the symmetry plane for the deformation is too stiff, cells may get distorted and the simulation may crash. This occurred when the wall distance stiffness was used, and the symmetry plane for the deformation was also a solid wall boundary. This small fix should avoid the issue. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1200:587,simpl,simply,587,https://su2code.github.io,https://github.com/su2code/SU2/pull/1200,1,['simpl'],['simply']
Usability,"## Proposed Changes. In the last developer meeting, there were some mentions of changing the meson build process for some of the executables. . The idea is to use the static libraries su2_cfd_lib and su2_cfd_lib_ad for linking when building SU2_DEF, SU2_DOT, SU2_SOL. This way it is no longer necessary to extract the needed sources for building the executables by hand in the meson.build files of each subdirectory. The linking process should ensure that only the necessary sources are linked and the size of the executables does not change too much. Please feel free to comment on this pull request, whether you think it is a good change to the build process? . - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1470:870,simpl,simply,870,https://su2code.github.io,https://github.com/su2code/SU2/pull/1470,1,['simpl'],['simply']
Usability,"## Proposed Changes. In this pull request, we aim to add the option of turbulent intensity and ratio turbulent to laminar viscosity per inlet for the SST model as follows: . MARKER_INLET_TURBULENT= (Inlet_1, TurbIntensity_1, ViscRatio_1, Inlet_2, TurbIntensity_2, ViscRatio_2,......). In the case that the inlet markers are not provided, we aim to keep the current SU2 implementation. ## Related Work. This pull request is related to the previous pull request #1796. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1843:639,guid,guide,639,https://su2code.github.io,https://github.com/su2code/SU2/pull/1843,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes. It would be good to extend the CFL_ADAPT option to include species transport for compressible flows. I can add a test case if it is needed. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2298:333,guid,guide,333,https://su2code.github.io,https://github.com/su2code/SU2/pull/2298,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes. Move `radiation/p1adjoint/of_grad_cd.csv.ref` from https://github.com/su2code/TestCases.git to `TestCases/` folder. Discussion: https://su2devteam.slack.com/archives/C2A1JLGDR/p1654254077647149. ## Related Work. https://github.com/su2code/TestCases/pull/102. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1668:503,simpl,simply,503,https://su2code.github.io,https://github.com/su2code/SU2/pull/1668,1,['simpl'],['simply']
Usability,"## Proposed Changes. Optimize the SU2-NEMO solver initialization time . ## Related Work; None that I remember. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ X ] I have added a test case that demonstrates my contribution, if necessary.; - [ X ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Work Overview. I have optimized the initialization time of SU2-NEMO. You can check the time comparison between the old and new version at the table below. ![image](https://user-images.githubusercontent.com/29612207/127698090-e4924a77-a5f0-40fc-90eb-ce218c413aaf.png). Some steps that I have done:; ### CNEMOEulerVariable.cpp ; * Removed constant calculations inside a for loop; * Passed the Solution_Old = Solution to outside the loop. ### CNEMOEulerSolver.cpp; * Removed the ""for"" loop that fills the Nodes Primitive Fields (already done in the Preprocessing phase); * Removed the error counter (already done in the Preprocessing phase). ### CSolverFactory.cpp; * Removed the Preprocessing step after the CNEMOEulerSolver instantiation (**This is done before the start of the iterative process, regardless. Additionally, the Navier-Stokes do not have any preprocess phase after the instantiation, why is that ?** ). The residuals may slightly different, because of the removal of the for loop inside CNEMOEulerSolver.cpp. Notice that inside that for loop, the soundspeed is obtained using the function FluidModel->GetS",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1340:283,guid,guide,283,https://su2code.github.io,https://github.com/su2code/SU2/pull/1340,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes. SU2 writes an inlet profile for you when none is present and `SPECIFIED_INLET_PROFILE= YES` . When there are multiple inlets, and when using mpi, the routine fails because the total number of inlet profiles `maxProfiles` was not the total number of inlet profiles but only the maximum number of inlet profiles encountered in a rank. Some other info was also not communicated like column names and column values. This fixes the issue. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Reported here:; https://www.cfd-online.com/Forums/su2/248779-inlet-profile-su2-fluid-mixture.html; And connected to PR #1786 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1999:904,guid,guide,904,https://su2code.github.io,https://github.com/su2code/SU2/pull/1999,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes. SU2 writes an inlet profile for you when none is present and `SPECIFIED_INLET_PROFILE= YES` . When there are multiple inlets, and when using mpi, the routine fails because the total number of inlet profiles `maxProfiles` was not the total number of inlet profiles but only the maximum number of inlet profiles encountered in a rank. This fixes the issue. . [At the moment the code does not crash anymore but still only one profile is being written]. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Reported here:; https://www.cfd-online.com/Forums/su2/248779-inlet-profile-su2-fluid-mixture.html; And connected to PR #1786 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1997:918,guid,guide,918,https://su2code.github.io,https://github.com/su2code/SU2/pull/1997,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes. Small cleaning of CFluidScalar Constructor. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.; - [ X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2357:254,guid,guide,254,https://su2code.github.io,https://github.com/su2code/SU2/pull/2357,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes. Some method names make no sense like `GetNodeDomain` the user/coder has to look explanation and it is also not clear `Get the halo flag of a mesh node.` give no information and also provides no information, whether true indicates halo node or domain node. Python wrapper functions are almost complete in the camel case just a few of them in the snake case. Now all of them are in camel case, consistently. Similarly in the codebase, even inside same class some functions are the snake and others are in the camel case. In terms of the SU2 style guide, it is okay but pretty annoying for a developer. I am changing method names to at least provide some consistency inside the classes. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1981:132,clear,clear,132,https://su2code.github.io,https://github.com/su2code/SU2/pull/1981,4,"['Guid', 'clear', 'guid']","['Guide', 'clear', 'guide']"
Usability,"## Proposed Changes. The Boundary conditions in the SST turbulence model are based on the free stream conditions. However if we mix two stream with different fluid properties at the inlets, the Turbulent Kinetic Energy, omega and eddy viscosity at the inlets should be based on these local fluid properties. So in this pull request, we aim to use the known fluid properties at the inlets in order to set the BC for the SST model. ; I can add a test case if it is needed. ## Related Work. This pull request is related to #1784. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1796:701,guid,guide,701,https://su2code.github.io,https://github.com/su2code/SU2/pull/1796,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes. The SU2 logo has been move in #1771 but its path has not been modified in the README. I update it and improve a bit the formatting of the markdown. ## Related Work. No. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1911:362,guid,guide,362,https://su2code.github.io,https://github.com/su2code/SU2/pull/1911,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes. The current work implements the BAY and jBAY vortex generator source-term model using a jBAY cell selection method in the compressible and incompressible solver. The model allows to simulate triangular and rectangular vortex generators. The model is based of [https://doi.org/10.4233/uuid:704d764a-6803-4cad-991f-45dc4ea38f6d](https://doi.org/10.4233/uuid:704d764a-6803-4cad-991f-45dc4ea38f6d; ). . ## PR Checklist. - [ x ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ x ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2273:708,Guid,Guide,708,https://su2code.github.io,https://github.com/su2code/SU2/pull/2273,1,['Guid'],['Guide']
Usability,"## Proposed Changes. The draft pull request has changes to fix couple of issues in the incompressible solver for rotating frame and convergence rate of unsteady problems (both with and without grid movement).; ; For the rotating frame, there was a confusion between conservative and primitive variables being used for the numerics. For the convergence rate of unsteady problems, the Jacobian contributions in the dual time residual calculations had been altered to include the preconditioner. However, this slows down the convergence from only an order of 100 iterations needed for converged solution per time step to the order of 1000 iterations. Therefore this has been reverted to regain the previous faster convergence rate and further work is necessary to understand the reason for this change. ## Related Work; PR #652 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1067:999,guid,guide,999,https://su2code.github.io,https://github.com/su2code/SU2/pull/1067,1,['guid'],['guide']
Usability,"## Proposed Changes. The driver method `Postprocessing()` actually frees all the containers and finalizes the driver. As it does not reflect what is actually done and is easy to confuse with the method `Postprocess()`, the PR proposes renaming the method to `Finalize()`. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1976:444,guid,guide,444,https://su2code.github.io,https://github.com/su2code/SU2/pull/1976,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes. The goal of this PR is to establish AD support for the OpenMP features of SU2. AD support in SU2 is provided by [CoDiPack](https://www.scicomp.uni-kl.de/software/codi), which is coupled with [MeDiPack](https://www.scicomp.uni-kl.de/software/medi) for the differentiation of MPI. OpenMP support is added by coupling it in addition with [OpDiLib](https://www.scicomp.uni-kl.de/software/opdi) so that all in all, hybrid parallel AD is achieved. This involves at least the following steps.; 1. Incorporate OpDiLib into the AD workflow.; 2. Establish thread-safety and parallelization of the discrete adjoint code.; 3. Testing of hybrid parallel adjoints.; 4. Performance optimizations. ## Related Work. OpenMP features introduced in #789, #824, #830, #834, #843, #861, #895, #975, #1178, possibly others. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1214:1045,simpl,simply,1045,https://su2code.github.io,https://github.com/su2code/SU2/pull/1214,1,['simpl'],['simply']
Usability,"## Proposed Changes. The python wrapper instantiates drivers directly. To ensure that SU2 is initialized properly, also if used from python, some initialization code is already placed in the driver constructor. This PR moves additional initialization code to the driver constructor. ## Related Work; This came up during #1903. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1966:613,Guid,Guide,613,https://su2code.github.io,https://github.com/su2code/SU2/pull/1966,1,['Guid'],['Guide']
Usability,"## Proposed Changes. This PR adds the following features:; - New pressure inlet BC (specify total pressure) for the incompressible solver; - New mass flow outlet BC (specify target mass flow) for the incompressible solver; - Added outlet BC values to multipoint optimization options in python. It is now required to specify the type for each inlet and outlet BC in the incompressible solver. A descriptive error is thrown if this is not the case. For two inlet and outlets with different types, you would specify it as:. INC_INLET_TYPE= PRESSURE_INLET VELOCITY_INLET; INC_OUTLET_TYPE= MASS_FLOW_OUTLET PRESSURE_OUTLET. and the type order corresponds to the order of the markers given in MARKER_INLET and MARKER_OUTLET, respectively. An inviscid nozzle test case has been added to demonstrate the new features. Will update residuals in regressions once reported. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/621:1187,guid,guide,1187,https://su2code.github.io,https://github.com/su2code/SU2/pull/621,1,['guid'],['guide']
Usability,"## Proposed Changes. This PR enforces the continuity of velocity explicitly at the fluid structure interface for each time step. The velocity was previously recalculated for the fluid nodes based on displacement history of the nodes. This is still needed for fluid only problems with deforming meshes. However, for FSI problems, the velocity at the interface can be transferred from the structural solution and propagated to the fluid nodes similarly to the displacement which ensures exact agreement at the interface at each time-step. This change has been validated using a typical FSI benchmark of square cylinder with a flexible cantilever beam, which gives good agreement in peak tip displacement and Strouhal number.; . ## Related Work. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174:966,simpl,simply,966,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174,1,['simpl'],['simply']
Usability,"## Proposed Changes. This PR just contains two small changes:. 1. I added the capability to use multi-line statements in the config file. That should make the file a little bit more readable, especially for list options. To continue a statement in the next line, use `\` at the end of the current line. Commented lines and everything after the `\` are skipped. That means the following way to specify an option works now:; ```; SCREEN_OUTPUT=(INNER_ITER, \ % A comment that is ignored; WALL_TIME, \; RMS_DENSITY, \; LIFT, \; DRAG, \; %CAUCHY_SENS_PRESS, \ Option value is ignored; CAUCHY_DRAG, \; %RMS_ADJ_DENSITY, \ Option value is ignored; RMS_ADJ_ENERGY); ```; Furthermore, if an error occurs now during the processing of the config file, the line number is also printed in order to quickly identify the location.; ; 2. Paraview XML format is now the default format (*.vtu) if the option `OUTPUT_FILES` is not present. I wanted to do that already when I added the XML format in January, but I simply forgot... The old format can be used with `PARAVIEW_LEGACY` and `SURFACE_PARAVIEW_LEGACY`. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/996:996,simpl,simply,996,https://su2code.github.io,https://github.com/su2code/SU2/pull/996,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes. This divides the iteration files and adds a factory class for their creation. A rework of the iteration class is still necessary, but I don't have time to do that at the moment. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [] I have added a test case that demonstrates my contribution, if necessary.; - [] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1015:519,guid,guide,519,https://su2code.github.io,https://github.com/su2code/SU2/pull/1015,1,['guid'],['guide']
Usability,"## Proposed Changes. This is a draft PR to discuss and document a much needed overhaul of the shape optimization features in SU2. There have been significant improvements to the main code base (for example, python wrapper integration, the new output structure, new mesh solver etc.) which haven't been leveraged by the shape optimization structure of SU2. . The main idea behind this overhaul is to move as much of the functionality of the current shape optimization framework to python. This creates a more user-friendly and robust interface for defining design variables and constraints. Its easy to make that claim, but let me elucidate it with an example:. > Suppose I am trying to optimize a wing for a given flight condition but I want more design freedom than altering the airfoil shapes along the wing using FFDs. I want to be able to control wing span, taper ratio, dihedral angle, twist, and any number of other geometrical representations of the wing. Currently, I would have to create a new Design Variable (DV) for most of those variables. If anyone has tried this, they know it is a tedious task with having to make alterations in various parts of the code.; >; > But all of these design variables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/922:508,user-friendly,user-friendly,508,https://su2code.github.io,https://github.com/su2code/SU2/pull/922,2,['user-friendly'],['user-friendly']
Usability,"## Proposed Changes. This is a further effort in automating as much as we can in our development process. It enables the release drafter action (https://github.com/toolmantim/release-drafter) which will automatically keep an release draft with a changelog up to date as soon as there is a push to develop. . The change log entries are categorized depending on the labels `feature`, `fix`, `chore` for new features, bug fixes and maintenance. If you don't want your PR listed, add the label `no_changelog`.; So remember to always add a label to your PR (maybe we will automate that soon)!. Here is the most current draft (https://github.com/su2code/SU2/releases). ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/813:983,guid,guide,983,https://su2code.github.io,https://github.com/su2code/SU2/pull/813,1,['guid'],['guide']
Usability,"## Proposed Changes. This is an attempt to add some unit testing for the geometry structure that checks all routines necessary to construct it. I know that I stretch the term ""unit test"" a little bit here, but because of the structure of the code, its not possible to implement small, independent tests ... but this is the closest we can get to a real unit testing framework I think. With this approach it is not possible to run tests in a random order for example, but at least the order in one translation unit is fixed by default anyway.; ; I added a basic, reusable setup which is based on the box mesh reader that can be included in other tests. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1012:973,guid,guide,973,https://su2code.github.io,https://github.com/su2code/SU2/pull/1012,1,['guid'],['guide']
Usability,"## Proposed Changes. This is intended to be a small PR, but a big design shift. As discussed in issue #698, unit tests can serve an important role in software development. They complement, rather than replace, validation and verification tests. They are most useful when you want to isolate a specific behavior. Unit-testing increases development time, but improves the quality of the code and reduces code-maintenance time \[[source](https://collaboration.csc.ncsu.edu/laurie/Papers/TDDpaperv8.pdf)\]. ### Vision. In my mind, the most efficient way to proceed is to add unit tests as new behaviors are added and bugs are fixed. With each new PR, we should ask ""Should this have a unit test to verify this behavior?"" Unit tests will provide a clear way to show that each PR does what the developer promises it will do. This will require refactoring some of the code. Some parts of the code, like the CConfig class, are not unit-testing friendly. Unit testing is hard when you have God-classes and ""do-it-all"" functions. The hope is that refactoring these classes will lead to more modular and easier-to-maintain code. ### Decision to use Catch2. Catch2 was chosen for the unit testing library for the following reasons:. + It can be included as a header-only library.; + It has a very clean, easy-to-use syntax; + It has widespread use, including the FEniCS library. ### Design choices. The following design choices are in place. If you disagree with them, then please start a discussion here:. + All tests are placed in a root-level directory named `UnitTests`. Inside this directory is a structure just like the existing folder structure (e.g. `SU2_CFD/numerics`), except that there are not separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tes",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/850:743,clear,clear,743,https://su2code.github.io,https://github.com/su2code/SU2/pull/850,1,['clear'],['clear']
Usability,"## Proposed Changes. This is the modified version of SU2 code that supports CUDA usage for the FGMRES solver and the use of NVBLAS. The main focus is the offloading of the Matrix Vector Product in the FGMRES solver to the GPU using CUDA Kernels. This implementation shows promise with marginally better run times (all benchmarks were carried out with the GPU Error Checking switched off and in debug mode to check if the correct functions were being called). The use of NVBLAS is secondary and while functionality has been added to make it usable, it is not activated as it doesn't cause an appreciative increase in performance. ## Compilation and Usage. Compile using the following MESON Flag; ```; -Denable-cuda=true; ```; And activate the functions using the following Config File Option; ```; ENABLE_CUDA=YES; ```. ## NOTE ON IMPLEMENTATION. I've decided to go with a single version of the code where the CPU and GPU implementations co-exist in the same linear solver and can be disabled or switched using a combination of Meson and Config File options. This is why I have defined three classes - one over-arching class that is named CExecutionPath that has two child classes - CCpuExecution and CGpuExecution. These child classes contain the correct member function for each path - CPU or GPU functioning. . All of this could also be easily achieved with an if statement that switches between the two - but that particular implementation will access and run the statement for each call. In our case once a Matrix Vector Product object is created, it will immediately know whether to use CPU or GPU mode of execution. . Recommendations are most welcome to improve or make this implementation better. ## PR Checklist. Warning Levels do come (only at level 3) but they are all of the following type. ```; style of line directive is a GCC extension; ```. The documentation for compiling with CUDA needs to be added by forking the SU2 site repo and adding the relevant changes to it? Or do I need to c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2346:540,usab,usable,540,https://su2code.github.io,https://github.com/su2code/SU2/pull/2346,1,['usab'],['usable']
Usability,"## Proposed Changes. This pull request adds the thermal conductivity, heat capacity and diffusivity as output for the incompressible solver in order to help the process of debugging inside SU2. During this process, we found some bugs regarding the diffusivity and thermal conductivity when the FLUID_MIXTURE model is used. Additionally, unused variables for computing the diffusivity have been removed. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1956:592,guid,guide,592,https://su2code.github.io,https://github.com/su2code/SU2/pull/1956,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes. This pull request restricts the use of the FLUID_MIXTURE model only when the KIND_SCALAR_MODEL is SPECIES_TRANSPORT. . ## Related Work. Reported in CDF-Online; https://www.cfd-online.com/Forums/su2/257519-kind_scalar_model-mixture.html. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2345:430,guid,guide,430,https://su2code.github.io,https://github.com/su2code/SU2/pull/2345,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes. This updates ninja and meson submodules. . ## Related Work. Should solve e.g. the problem of finding python 3.8 mentioned in #991 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/998:325,guid,guide,325,https://su2code.github.io,https://github.com/su2code/SU2/pull/998,1,['guid'],['guide']
Usability,"## Proposed Changes. To satisfy the code standard in SU2. Refactorization of method names in Output family class methods to CamelCase. . Will follow up with other class families. Depends on #1985, can be merged after. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1987:390,guid,guide,390,https://su2code.github.io,https://github.com/su2code/SU2/pull/1987,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes. Updating Xcode project after file division. ## Related Work. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/732:259,guid,guide,259,https://su2code.github.io,https://github.com/su2code/SU2/pull/732,1,['guid'],['guide']
Usability,"## Proposed Changes. With this pull request, we aim to initialize the fluid models based on the Ideal gas laws for incompressible flows in a standard way using the THERMODYNAMIC_PRESSURE($P_{op}$) and the INC_TEMPERATURE_INIT ($T_{init}$), the initial density is computed based on the ideal gas law :. $\rho_{init}= P_{op} / R T_{init}$. When the FLUID_MODEL is CONSTANT_DENSITY, the constant density must be given in the config file using the option DENSITY_CONSTANT, similar as it is done when viscosity, thermal conductivity and diffusivity models are chosen as constant. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2137:764,guid,guide,764,https://su2code.github.io,https://github.com/su2code/SU2/pull/2137,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes. [clang-tidy ](https://clang.llvm.org/extra/clang-tidy/) is a well-known tool. This PR adds clang-tidy file with common checks and applies to the code base. ## PR Checklist. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1989:463,Guid,Guide,463,https://su2code.github.io,https://github.com/su2code/SU2/pull/1989,1,['Guid'],['Guide']
Usability,"## Proposed Changes. build-su2-cross should extend from build-su2 Docker image to use the same GCC version. . Failed build: https://github.com/su2code/SU2/runs/7125551739?check_suite_focus=true. The PR is draft because it depends on the build of https://github.com/su2code/Docker-Builds/pull/7. ## Related Work. https://github.com/su2code/SU2/pull/1619 - Updates Ubuntu to 20.04 and GCC from 7.x to 9.x. . ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1693:629,simpl,simply,629,https://su2code.github.io,https://github.com/su2code/SU2/pull/1693,1,['simpl'],['simply']
Usability,"## Proposed Changes; ![image](https://github.com/su2code/SU2/assets/38071223/019c08ab-6ef4-44d0-8d6e-302318fa27ab). I'm also working on an unsteady version, but there is something wrong with the unsteady adjoint. ## Related Work; Fixes #2058. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2059:529,Guid,Guide,529,https://su2code.github.io,https://github.com/su2code/SU2/pull/2059,1,['Guid'],['Guide']
Usability,"## Proposed Changes; * Fix `mpi4py` include directories when it is installed in python user directory.; * Fix `mkl` dependency when it is installed outside a master directory such as when installing from Ubuntu PPA.; . ## Related Work; Fixes #823. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/826:420,guid,guide,420,https://su2code.github.io,https://github.com/su2code/SU2/pull/826,2,['guid'],['guide']
Usability,"## Proposed Changes; *As mentioned in the last few dev meetings, there was some error with GradVal for the streamwise solver with Massflow. This was because the tape was not cleared during SetRecoding. In the current version, the register of extra solutions is moved to Register Variables and gradients look consistent.*. ## Related Work; *SWP-Isothermal with mass flow also shows good gradient validation after implementing this fix. In theory, this should not break any other part of the code.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ x ] I am submitting my contribution to the develop branch.; - [ x ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ x ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.; ![CAD_GRAD_AFTER](https://github.com/su2code/SU2/assets/22835014/e0bfa7aa-0347-48a7-abf6-8e0526a706b6); CAD Sensitivites after making changes, gradients are symmetric for the upper and lower variables.; ![CAD_GRAD_BEFORE](https://github.com/su2code/SU2/assets/22835014/49f9d6fa-040c-4ee2-9fe8-da7e6c5d5b72); CAD Sensitivities before making changes, gradients are not-symmetric for the upper and lower variables.; ![Case_Image_RTemp](https://github.com/su2code/SU2/assets/22835014/a1335570-f0a4-412f-aceb-fc2a7dcd754a); Test Case!; ![FFD_GRAD_AFTER](https://github.com/su2code/SU2/assets/22835014/4e3eb1ff-51ed-4adc-afc7-00ec16d17506); FFD Sensitives also co-r",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2272:174,clear,cleared,174,https://su2code.github.io,https://github.com/su2code/SU2/pull/2272,2,"['clear', 'guid']","['cleared', 'guide']"
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2140:412,guid,guide,412,https://su2code.github.io,https://github.com/su2code/SU2/pull/2140,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2240:412,guid,guide,412,https://su2code.github.io,https://github.com/su2code/SU2/pull/2240,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*. - add frequency for each filename in OUTPUT_FILES: ; ` OUTPUT_WRT_FREQ= 10, 100, 50`. - for dual timestepping, write only the restart files twice (for timestep n and n-1) and not the visualisation files.; - history output accepts fields; - marker_inlet does not need normalized vectors (removed the error message). ```diff; - DONE; The suggestion was to just extend the OUTPUT_WRT_FREQ instead of introducing a new keyword VOLUME_OUTPUT_FREQUENCIES. . ```. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; #1495 ; #1539 ; #1493 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1552:893,guid,guide,893,https://su2code.github.io,https://github.com/su2code/SU2/pull/1552,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*. Following to what was done in the pull request #1796 , we aim with this pull request to use the known fluid properties at the inlets in order to set the BC for the SA model. Also, we extent the use of the turbulent marker options for this case as It was done in the previous pull request for SST #1843. ; I can add a test case if it is needed. . ## Related Work. related to pull request #1796 , #1843 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1953:667,guid,guide,667,https://su2code.github.io,https://github.com/su2code/SU2/pull/1953,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*. Using the python interface to modify the config file, it may happen that the temporary config file is accessed at once by multiple SU2 runs, leading to io conflicts. Thus, the name of the temporary file should not be hard-coded. This bugfix simply adds a '_tmp' to the original config file name. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1576:333,simpl,simply,333,https://su2code.github.io,https://github.com/su2code/SU2/pull/1576,3,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; - During time-averaging, the weighted sum over previous timesteps is re-used to quickly update the time-average during inner iterations.; - Square-windowing now does not save the entire sample history, which should eliminate performance degradation when time-averaging is performed over many timesteps. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; #1545 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary. (UnitTest); - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1548:723,guid,guide,723,https://su2code.github.io,https://github.com/su2code/SU2/pull/1548,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; - fixed a small bug in the wall model; - added config options (replace as many hard coded constants as possible); - aerodynamic heating (wall temperature imposed in compressible flow, still needs a high mach testcase); - added a test case for SA model; - cleaned up a bit. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1360:685,guid,guide,685,https://su2code.github.io,https://github.com/su2code/SU2/pull/1360,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1912:414,guid,guide,414,https://su2code.github.io,https://github.com/su2code/SU2/pull/1912,6,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/616:414,guid,guide,414,https://su2code.github.io,https://github.com/su2code/SU2/pull/616,4,['guid'],['guide']
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/856:414,guid,guide,414,https://su2code.github.io,https://github.com/su2code/SU2/pull/856,19,['guid'],['guide']
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1512:414,guid,guide,414,https://su2code.github.io,https://github.com/su2code/SU2/pull/1512,8,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; 1. arrays in gettriangle need to be size 2 instead of 3; 2. error message that checks species clipping only checks if the keyword is present, not if clipping is on; 3. added setblock_zero ""per-species"" to CSysVector (added here to reduce the mega-PR for the flamelet model); 4. fix speling eror. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1761:708,guid,guide,708,https://su2code.github.io,https://github.com/su2code/SU2/pull/1761,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; * Bug fix for surface-based objectives so that they are not counted multiple times when multiple surfaces are being designed; * Segfault fix for ParaView binary in serial.; * Fixes so that ParaView binary works properly with SU2_SOL (writing ASCII instead) and the python scripts for gradients and shape design; * Fixes line endings of SU2_PY/SU2/run/mergy.py; * Fixes TecIO typecasting issue found in #339; * Removes y^+ output from laminar Navier-Stokes (now RANS only); * Adjustment to output variables for incompressible flows; * Removes some warnings; * Xcode project file update. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Includes fix from #339, which will be closed.; Resolves #62 ; Resolves #54 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/598:1077,guid,guide,1077,https://su2code.github.io,https://github.com/su2code/SU2/pull/598,1,['guid'],['guide']
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; 1st of multiple PRs that remove unused, old code related to the geometry classes, point-to-point MPI calls, and periodic BCs. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/677:545,guid,guide,545,https://su2code.github.io,https://github.com/su2code/SU2/pull/677,1,['guid'],['guide']
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; 3rd and final pass (I think) to remove dead code after #652. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/701:480,guid,guide,480,https://su2code.github.io,https://github.com/su2code/SU2/pull/701,1,['guid'],['guide']
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; A couple of memory issues that should be fixed right away in develop. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/517:489,guid,guide,489,https://su2code.github.io,https://github.com/su2code/SU2/pull/517,1,['guid'],['guide']
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Adapting and fixing mixing density model when species transport equations are being solved.; The species dependent properties will be added in 3 PRs:; 1/3 : mixture density model (this PR); 2/3 : mixture viscosity + heat capacity; 3/3 : mixture mass diffusivity + thermal conductivity. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; Mark Heimgartner implemented the MIXTURE_FLUID model during his master thesis at Bosch. In this pull request, we aim to adapt his implementation to the latest version of develop branch, fixing some implementations that we think were causing numerical issues in his original implementation. EDIT: Here, the mixture density will be implemented, based on the ideal gas law (computing mixture molecular weights). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1620:1109,guid,guide,1109,https://su2code.github.io,https://github.com/su2code/SU2/pull/1620,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Adds ParaView binary output (legacy format) in both serial and parallel with MPI IO. Activate by setting OUTPUT_FORMAT= PARAVIEW_BINARY. Binary VTK files are now written when running SU2_CFD in parallel, so SU2_SOL is not required to get these files. ~~ParaView binary requires writing data in big endian. A header from the public domain that helps with the portability of endian conversion routines has been added and documented in externals/endian/.~~. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/562:874,guid,guide,874,https://su2code.github.io,https://github.com/su2code/SU2/pull/562,1,['guid'],['guide']
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Adds all missing override specifiers to be better in line with C++11. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/960:489,guid,guide,489,https://su2code.github.io,https://github.com/su2code/SU2/pull/960,1,['guid'],['guide']
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Adds an interface to SU2_DOT_AD for volume -> surface sensitivity projection. New option to write out sensitivities at each surface vertex to a generic ASCII file for use with an external parameterization. Includes some minor code clean up and fixes some compiler warnings. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/625:693,guid,guide,693,https://su2code.github.io,https://github.com/su2code/SU2/pull/625,1,['guid'],['guide']
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Adds const specifier to member functions and also const to some function input args where applicable. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/993:521,guid,guide,521,https://su2code.github.io,https://github.com/su2code/SU2/pull/993,1,['guid'],['guide']
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Adjustment to include grid velocity in the reflected BC state for dynamic grid calculations. . Checking to see how this behaves with the regressions - there are some other tests ongoing too. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Resolves #828 ; Resolves #997 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1004:637,guid,guide,637,https://su2code.github.io,https://github.com/su2code/SU2/pull/1004,1,['guid'],['guide']
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Also removes checks for nullptr before delete. These checks are not necessary, since deleting nullptr is perfectly valid. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/969:541,guid,guide,541,https://su2code.github.io,https://github.com/su2code/SU2/pull/969,1,['guid'],['guide']
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Bug fixes and consistent naming of flow output variables so that both Tecplot and ParaView correctly render vector quantities. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/546:546,guid,guide,546,https://su2code.github.io,https://github.com/su2code/SU2/pull/546,1,['guid'],['guide']
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Fixes (I think) the current implementation of the wall model. Some work still needs to be done, regarding compressible vs incompressible and validation of heated walls. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. related to #1155 ; Also took some ideas from feature_WallModelLES. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1204:652,guid,guide,652,https://su2code.github.io,https://github.com/su2code/SU2/pull/1204,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Fixes a bug causing inlet profiles to fail when two adjacent inlets that share a vertex are prescribed with different values by file (especially with MG). Fixed by adding an explicit check on the marker tag for a match. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/560:639,guid,guide,639,https://su2code.github.io,https://github.com/su2code/SU2/pull/560,1,['guid'],['guide']
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Fixes a bug in the Q-criterion and replaces it with a more efficient implementation. It is now computed directly as the second invariant of the velocity gradient tensor. @EduardoMolina : since you had asked about this, can you please check my math :) ?. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/704:673,guid,guide,673,https://su2code.github.io,https://github.com/su2code/SU2/pull/704,1,['guid'],['guide']
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Fixes a bug that I introduced in #598. When the energy eqn. is not active, the temperature is not written to the restart file, but this was not taken into account for the restart loader. This corrects the restart loader to read the correct number of variables when energy is inactive. I have also taken the opportunity to improve the regression cases for the incompressible solver. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Thanks to @TobiKattmann and @talbring for finding this so quickly!. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/601:864,guid,guide,864,https://su2code.github.io,https://github.com/su2code/SU2/pull/601,1,['guid'],['guide']
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Fixes some warnings throughout (mainly for LLVM) and fixes an issue where heat flux was not being re-dimensionalized for history file output. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/637:561,guid,guide,561,https://su2code.github.io,https://github.com/su2code/SU2/pull/637,1,['guid'],['guide']
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Hi, all. This PR is resuming the #1496. I'm not familiar with the git, so the branch is unfortunately disconnected. ## Now working on . [Langtry and Menter model](https://doi.org/10.2514/1.42362). ## Current State . Code is well running. But, the result is not satisfactory. 😂; The LM(Langtry and Menter) model implemented to Su2 is under debugging compared to the results of Fluent's LM model. Transition onset is located upward then Fluent result. But, the good news is that when the correlations are set fixed value, the transition onset location is similar to the Fluent result. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1592:849,guid,guide,849,https://su2code.github.io,https://github.com/su2code/SU2/pull/1592,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; I believe it would be helpful if the user can choose between relative or absolute values for cauchy convergence. ; Example: For the clean aircraft, the rolling moment coefficient MOMENT_X is close to zero and thus will never reach a relative cauchy convergence ->> dividing tiny numbers is not a good idea. Using absolute cauchy convergence is more robust in this case. At the same time, I understand that a more complex input / more parameters might confuse users. An automatic switch, as propsed in this pull request, is a good compromise. The code now switches automatically to absolut cauchy convergence if the coefficient is < 0.1 to avoid the problem described above. The config file is unchanged. . See short discussion here: https://www.cfd-online.com/Forums/su2/240148-cauchy-convergence-criteria-cmx-cmy-cmz.html. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1577:1238,guid,guide,1238,https://su2code.github.io,https://github.com/su2code/SU2/pull/1577,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; In this pull request, we extend the previous pull request of the mixing model adding the options of viscosity, thermal conductivity and other properties based on the species mass fractions. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. This corresponds to the 2/3 part of the complete mixing model which started with the feature_mixturedensity in the previous pull request. We expect to add the final properties and the mixture specific heat capacity in the next pull request. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1687:847,guid,guide,847,https://su2code.github.io,https://github.com/su2code/SU2/pull/1687,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Memory fix for some periodic situations. Updated release_su2.sh script for creating binary releases with bootstrap call. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/708:540,guid,guide,540,https://su2code.github.io,https://github.com/su2code/SU2/pull/708,1,['guid'],['guide']
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; More dead code removed after merging #652. Likely one or two more PRs to come with more removals. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/699:517,guid,guide,517,https://su2code.github.io,https://github.com/su2code/SU2/pull/699,1,['guid'],['guide']
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; More efficient loops/maps for sorting of grid points and connectivity during initial reading/partitioning. This is important for very large meshes when running on limited resources. Due to the changes in the initial ordering of the connectivity, this PR results in minor differences in the residuals for the regressions. They have been updated accordingly. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/576:776,guid,guide,776,https://su2code.github.io,https://github.com/su2code/SU2/pull/576,1,['guid'],['guide']
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Multizone does not work yet for species transport; This is a WIP to discuss the implementation details online. It does not work yet! . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; As mentioned in #1818 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1821:573,guid,guide,573,https://su2code.github.io,https://github.com/su2code/SU2/pull/1821,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; N/A. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/678:424,guid,guide,424,https://su2code.github.io,https://github.com/su2code/SU2/pull/678,1,['guid'],['guide']
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Part 2/3 of fluid mixing model. In this part, viscosity, thermal conductivity and other properties based on species mass fractions have been added. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. It is the continuation of the previous pull request of mixing density #1620. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1690:641,guid,guide,641,https://su2code.github.io,https://github.com/su2code/SU2/pull/1690,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Preparing for large mesh support by switching from int32 to int64 in the ParMETIS library header. This change causes nearly all of the parallel regressions to fail due to slightly different partitioning behavior, but the final results stay the same. All regressions have been updated accordingly. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/561:716,guid,guide,716,https://su2code.github.io,https://github.com/su2code/SU2/pull/561,1,['guid'],['guide']
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Quick update for Xcode for the Driver file changes. Minor change in the include paths for each driver .cpp file. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ n/a] My contribution is commented and consistent with SU2 style.; - [ n/a] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/750:527,guid,guide,527,https://su2code.github.io,https://github.com/su2code/SU2/pull/750,1,['guid'],['guide']
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Removing CFL adaption for the Quick Start. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Fixes #887. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/958:469,guid,guide,469,https://su2code.github.io,https://github.com/su2code/SU2/pull/958,1,['guid'],['guide']
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Separates all classes related to the fluid properties and moves them to a new folder. Also cleans up and refactors some of the classes. For example, the viscosity and conductivity classes are now pure abstract classes (interfaces). I have moved them to a folder named thermophysical/, which makes sense given the current contents (equations of state and transport properties), but once we add chemistry and more advanced models, I am not sure this will make sense. @CatarinaGarbacz, since you are going to be working this area, is there a name you would prefer?. p.s. in a future pass, there is room for improvement in the current CFluidModel class. I think it is best practice not to use the type of implementation inheritance found there. Instead, the EoS classes could be given a dedicated interface class and moved inside the CFluidModel class (just like the viscosity and conductivity classes). Then, the CFluidModel class can simply be a composition of those classes (with no data members) and serve back their data to the client. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. #583 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1010:1026,simpl,simply,1026,https://su2code.github.io,https://github.com/su2code/SU2/pull/1010,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; The latest llvm version on mac throws a compile error due to not being able to find some overloaded functions for complex numbers. Moving the overloads from the cpp file to the inline file appears to fix the linkage issue. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/664:642,guid,guide,642,https://su2code.github.io,https://github.com/su2code/SU2/pull/664,1,['guid'],['guide']
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; The mass flow rate uses AxiFactor. The computation of axifactor in CIncEulerSolver::GetOutletProperties is inconsistent with GetAxiFactor in CFlowOutput.cpp, leading to a different mass flow rate used for the target mass flow rate boundary condition (reported as screen output) compared to the mass flow rate reported in the history file. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1780:755,guid,guide,755,https://su2code.github.io,https://github.com/su2code/SU2/pull/1780,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; The thermodynamic pressure influences the density at the inlet boundaries, especially when the mixture consists of more than 2 gases. So, with this pull request, we aim to obtain the pressure_thermodynamic as a user value or a default value, as 101325 [pa]. and based on this value compute the density. This is consistent with the low-mach approximation used in combustion.; I can add a test case if it is needed. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; This is pull request is related to #1826. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1839:870,guid,guide,870,https://su2code.github.io,https://github.com/su2code/SU2/pull/1839,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR adds LES capabilities to the compressible Finite Volume solver. It uses the current SGS models implemented for the DG code. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [x ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/928:551,guid,guide,551,https://su2code.github.io,https://github.com/su2code/SU2/pull/928,1,['guid'],['guide']
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR adds the necessary base classes (solver, numerics, variable) for having an arbitrary number of scalar transport equations added to flow problems in a segregated manner (alongside a turbulence model, if necessary). Most of the numerics is shared with the scalar methods for the turb. solvers to eliminate duplication, and it should be easy now to add child classes for any new scalar transport models. In this PR, only a passive scalar has been implemented, but we are also building on this framework to add a flamelet model for combustion as a child class. A passive scalar test case will be added. It still needs more work, but it is important to have the skeleton merged now to lessen the burden of fixing conflicts with the ongoing restructuring in driver, variable, output, etc. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/777:1212,guid,guide,1212,https://su2code.github.io,https://github.com/su2code/SU2/pull/777,1,['guid'],['guide']
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR changes the convergence criteria for mesh deformation with SU2_DEF. The existing tolerance is related to the smallest cell in the grid, but this results in a criteria that depends on the grid scale and can be hard to tune. Instead, we switch to a standard relative residual reduction criteria for the linear solver during deformation, which brings it in line with other solvers. The change will break existing config files with 'DEFORM_TOL_FACTOR', so a clear error message has been added informing users of the change. Changes to the su2code.github.io repo for the tutorial configs need to be merged simultaneously. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/623:556,clear,clear,556,https://su2code.github.io,https://github.com/su2code/SU2/pull/623,2,"['clear', 'guid']","['clear', 'guide']"
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR contains a new routine to compute 3 mesh quality metrics (similar to what you may find in commercial codes): orthogonality angle, cell aspect ratio, and cell volume ratio. It replaces an old routine that was not being used. Note that this is for the **dual control volumes of the finite volume solver** (not the primal elements), so the values are vertex-based. The min & max of the 3 metrics are reported to the console during preprocessing, and if you would like the fields to be written to the viz. files, you can use . ```; WRT_MESH_QUALITY= YES; ```. For now, it is just for sanity checks. In the future, we can use this as an optimization objective/constraint, for automatically improving grids (r-adaptation), or as part of advanced limiters/numerical methods. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/778:1190,guid,guide,1190,https://su2code.github.io,https://github.com/su2code/SU2/pull/778,1,['guid'],['guide']
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR contains the following:; * More strict SU2_DEF error checking; * Improved SURFACE_FILE mode for SU2_DEF for external parameterizations (plus new regression); * New SCALE_GRID, TRANSLATE_GRID, and ROTATE_GRID options for SU2_DEF for quick volume mesh transformations (separated from the SCALE, TRANSLATION, ROTATION, design variables); * Bug fixes for the incompressible solver; * More consistent naming in the incompressible solver (ArtComp -> Inc, ROE -> FDS); * Removes warnings not already fixed by PR #528 . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Resolves #134. Resolves #151. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/535:964,guid,guide,964,https://su2code.github.io,https://github.com/su2code/SU2/pull/535,1,['guid'],['guide']
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR integrates the DG-FEM solver in the develop branch. Although still under development this solver is now in a state where other people can start to contribute, if desired. Furthermore, additional functionalities in terms of searching and interpolating are present in the DG solver that can also be used for the FV solver. Especially a true wall distance search instead of a point search to the nearest node on the wall would be possible. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.; - [ X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X] My contribution is commented and consistent with SU2 style.; - [ X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/565:864,guid,guide,864,https://su2code.github.io,https://github.com/su2code/SU2/pull/565,1,['guid'],['guide']
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR is a clean up of the configure options and bindings. I have removed unused bindings: HDF5, ZLIB, SZIP, JSON, and LAPACK. If anyone needs these, just let me know and we can put the necessary bindings back into configure. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. We can also think about changing the autotools here as discussed in #584. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/586:716,guid,guide,716,https://su2code.github.io,https://github.com/su2code/SU2/pull/586,1,['guid'],['guide']
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR will close the release of SU2 v6.1.0. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. #535 and #516 will be merged and included here before release. Feel free to comment below if there are any outstanding items that you would like to add to develop via PR before release. For significant changes, please wait for the next release (it won't be long). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/540:724,guid,guide,724,https://su2code.github.io,https://github.com/su2code/SU2/pull/540,1,['guid'],['guide']
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR will close the release of v6.2.0. The goal is to tag it within the next week or two once this is merged. Soon, folks in the community will be submitting PRs for major changes to the I/O, drivers, MPI, and more, as we prepare for a major v7 release (scheduled around the time of the developers meeting in May). This v6.2.0 is a minor/maintenance release that will serve as a good snapshot before the major changes. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. We will merge some of the currently open PRs before the release, especially smaller PRs and clean up PRs. Feel free to comment below if there are any outstanding items that you would like to add to develop via PR before release. For significant changes, please wait for the v7 release. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/641:1122,guid,guide,1122,https://su2code.github.io,https://github.com/su2code/SU2/pull/641,1,['guid'],['guide']
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This is joint work with @MicK7. The CGNS mesh reader (ADF format, serial) has been rewritten to improve performance, and the underlying CGNS library has been updated to v3.4.0, along with some other modifications for mixed element grids. This new version is capable of running meshes > 100 million cells. I was able to run an X-Fine mesh for the high-lift CRM, which contains 210 million grid nodes and 400 million cells. . If folks have resources to try, please use the attached config file and meshes here: . https://hiliftpw-ftp.larc.nasa.gov/HiLiftPW3/HL-CRM_Grids/Committee_Grids/B3-HLCRM_UnstrHexPrismPyrTet_PW/FullGap/. [turb_hl_crm.txt](https://github.com/su2code/SU2/files/3388290/turb_hl_crm.txt). ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Resolves #727 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/728:1138,guid,guide,1138,https://su2code.github.io,https://github.com/su2code/SU2/pull/728,1,['guid'],['guide']
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This is one for v7 and needs some testing. This PR contains a complete refactoring of the point-to-point MPI infrastructure and an entirely new implementation of the periodic BC for the FV solvers. For the MPI refactoring:; - All calls are abstracted to parent classes (geometry, solver, matrix), meaning we will remove all Set_MPI_* routines.; - Point-to-point comms are all non-blocking calls that have been separated into InitiateComms() & CompleteComms(), so that, in theory, they can be overlapped with computation where possible. It would also be possible now to group the comms into larger messages easily. These optimizations are a next step (not for this PR).; - Persistent communication schedules and memory are used throughout the calculation.; - Results are the same, this is just a refactoring to improve performance, scalability, etc. while making the code much simpler and separating the periodic part. For the periodic BC:; - No longer need a preprocessing with SU2_MSH - use the original grid and just call SU2_CFD.; - Adjacent periodic faces are now possible, e.g., triply-periodic cube.; - Concept is now based on completing the residuals from partial control volumes on either side of a periodic face instead of creating extra halo cells.; - All periodic comms have been separated from the MPI point-to-point comms and are performed first for consistency. In a follow-up PR, I will remove many lines of code that are no longer needed (all Set_MPI_* routines, many outdated geometry routines, etc.). ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ~~I could use some help with testing this one, in particular the rotational periodicity, which might still need some changes. Unfortunately, I do not have the original meshes for the periodic cases in the repo that are failing (other than P",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/652:970,simpl,simpler,970,https://su2code.github.io,https://github.com/su2code/SU2/pull/652,1,['simpl'],['simpler']
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This is v6.0.1, which contains bug fixes, memory clean up, and maintenance. This will be tagged as a release once the tests pass. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Resolves #499. Closes #459. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/525:572,guid,guide,572,https://su2code.github.io,https://github.com/su2code/SU2/pull/525,1,['guid'],['guide']
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; To make updating the regressions that rely on file diffs easier, this PR moves those reference files to the code repo. They are very small files, and as they are what needs to be updated for the tests to pass, it makes sense to have them with the config files and regression scripts in the main repo. This will help avoid the chicken-egg problem with the two repos that sometimes happens when updating them. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/589:827,guid,guide,827,https://su2code.github.io,https://github.com/su2code/SU2/pull/589,1,['guid'],['guide']
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Updated the Xcode projects so that they are clean and building out of the box for all modules. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/602:514,guid,guide,514,https://su2code.github.io,https://github.com/su2code/SU2/pull/602,1,['guid'],['guide']
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; add incompressible turbulent bend to tutorial regression tests. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. https://github.com/su2code/Tutorials/pull/33; https://github.com/su2code/su2code.github.io/pull/111. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1898:579,guid,guide,579,https://su2code.github.io,https://github.com/su2code/SU2/pull/1898,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; ongoing work on implementing enum classes.; This changes the turbulent transition keyword to enum class. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1453:521,guid,guide,521,https://su2code.github.io,https://github.com/su2code/SU2/pull/1453,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Add a probe function in latest SU2. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/553:448,guid,guide,448,https://su2code.github.io,https://github.com/su2code/SU2/pull/553,1,['guid'],['guide']
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Added finite volume discretization for Poisson problem that I am merging into a new branch for the pressure-based system that I will be working on. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; Edwin van der Weide at University of Twente. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; Most of the test cases I have are analytical problems and have not added them here.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/527:605,guid,guide,605,https://su2code.github.io,https://github.com/su2code/SU2/pull/527,1,['guid'],['guide']
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Added surface analyse options for direct differentiation and fixed a bug for multiple ffd boxes with multiple dv markers.; The feature_directdiff_obj branch in TestCases repo needs to be merged in conjunction with this pull request. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/569:645,guid,guide,645,https://su2code.github.io,https://github.com/su2code/SU2/pull/569,1,['guid'],['guide']
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Adds the functionality of reading fluid data from an unstructured triangulated lookup table and interpolating. No coupling with a solver (combustion) yet, at this point we will only add a verification test. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; We split #1223 into smaller chunks. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1637:655,guid,guide,655,https://su2code.github.io,https://github.com/su2code/SU2/pull/1637,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Based on the observations of Albring et al. in ""Challenges in Sensitivity Computations for (D)DES and URANS"" we implemented the windowing regularizers proposed in the work of Krakos et al. ""Sensitivity analysis of limit cycle oscillations"" and adapted it to the AD framework of SU2. ; We call the feature in the following ""windowing"". ; Windowing can be applied if one takes the (windowed) time average of a periodic function, i.e. in the case of an instationary flow field that exhibits periodic behaviour. ; - We changed the functionality of the output-field-prefix TAVG and D_TAVG from a simple time average to a time averaged weighted with a windowing function. For the direct run this is just a post-processing step and changes happen only in signal_processing_toolbox and Coutput. ; - We adapted the seeding for the adjoint run from a the classic time average to a windowed time average. ; - Tests have shown, that higher order windowing regularizers, tend to converge quickly with respect to the averaged time span. We have implemented a ""timeConvergenceMonitor"", that acts similarly to the convergence monitoring of the inner convergence. It applies a cauchy convergence criterion to the chosen windowed time average output coefficients. ; - The cauchy convergence criterion works for direct run, adjoint run and shape optimization scripts; - In case of shape optimization, the script remembers the final time iteration of the direct run. If the final time step is smaller than the ""original"" final time step stated in the configuration file, it adapts the starting time of the adjoint run; and the time to seed the objective function, such that the seeding does not exceed the original time to end the seeding. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that ap",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/836:683,simpl,simple,683,https://su2code.github.io,https://github.com/su2code/SU2/pull/836,1,['simpl'],['simple']
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Correct default value error (identified in version 6.1.0) and typos. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; Resolve issue #545. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/547:501,guid,guide,501,https://su2code.github.io,https://github.com/su2code/SU2/pull/547,1,['guid'],['guide']
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Correct default value error (identified in version 6.1.0) and typos. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; Resolve issue #545. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/548:501,guid,guide,501,https://su2code.github.io,https://github.com/su2code/SU2/pull/548,1,['guid'],['guide']
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Ffor wall functions a warning is issued when y+ < 5, but the value 5 should be the user defined limit obtained from the config option.; Furthermore, some spelling errors are correcred. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1753:597,guid,guide,597,https://su2code.github.io,https://github.com/su2code/SU2/pull/1753,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Fix a minor spelling error for a comment in CNumerics. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/945:467,guid,guide,467,https://su2code.github.io,https://github.com/su2code/SU2/pull/945,1,['guid'],['guide']
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Fix incompressible inlet when corner nodes are shared by a viscous wall; https://github.com/su2code/SU2/discussions/1613. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1631:534,guid,guide,534,https://su2code.github.io,https://github.com/su2code/SU2/pull/1631,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Fixed a spelling error in the top comment of the file CTemplateSolver.cpp in SU2_CFD/src/solvers/. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/925:511,guid,guide,511,https://su2code.github.io,https://github.com/su2code/SU2/pull/925,1,['guid'],['guide']
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Fixing some spelling mistakes. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.; - [ X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1586:445,guid,guide,445,https://su2code.github.io,https://github.com/su2code/SU2/pull/1586,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; INCINLET_USENORMALS= YES will use the normals of the inlet boundary faces instead of the normal from MARKER_INLET.; This was only active for pressure inlets and not for velocity inlets. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1643:598,guid,guide,598,https://su2code.github.io,https://github.com/su2code/SU2/pull/1643,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; My changes allow the changing of moving wall velocities when using the py_wrapper. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; There has been some previous work, where functionality for changing mesh rotation rates was added. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2095:596,guid,guide,596,https://su2code.github.io,https://github.com/su2code/SU2/pull/2095,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Nodes shared by an inlet and a wall show nonphysical values in the corner node for energy, temperature, pressure, density. This fixes the issue. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2266:557,guid,guide,557,https://su2code.github.io,https://github.com/su2code/SU2/pull/2266,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Part 3/3 of fluid mixing model. In this part, Heat capacities and mass diffusivity based on species mass fractions have been added. I am still working in checking the Non-dimensional case, I expect to complete it during this week. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. It is the continuation of the previous pull request of mixing density #1620 and #1690. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1758:730,guid,guide,730,https://su2code.github.io,https://github.com/su2code/SU2/pull/1758,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Part 3/3 of fluid mixing model. In this part, Heat capacities and mass diffusivity based on species mass fractions have been added. I am still working in checking the Non-dimensional case, I expect to complete it during this week. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; It is the continuation of the previous pull request of mixing density #1620 and #1690. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1762:730,guid,guide,730,https://su2code.github.io,https://github.com/su2code/SU2/pull/1762,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Reimplemented pressure-based solver from feature_Pressure_based into the development branch. . ## Related Work; branch: feature_Pressure_based. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary. Euler Solver: Incompressible cylinder case Pressure based (PB) vs Density Based (DB); ![incomp_cylinder](https://github.com/su2code/SU2/assets/22835014/c37cb127-88fe-4945-b712-c0ef450a3c43); ![incomp_cylinder_history](https://github.com/su2code/SU2/assets/22835014/3cf4c72c-445f-4086-87ea-162159d06cb7). Navier Stokes Solver: Incompressible Hydrofoil case Pressure-based (PB) vs Density Based (DB); ![NACA0012_hydrofoil](https://github.com/su2code/SU2/assets/22835014/cab1e73e-a60a-47af-aeef-ba50eb46e0eb); ![NACA0012_hydrofoil_history](https://github.com/su2code/SU2/assets/22835014/d71f09fd-73f9-44bb-861a-8f033408c6ba). Still TODOs; * Fixing RANS: Current CIncPBVariable inherits CVariable instead of CFlowVariable, if this is fixed RANS should work.; * Fixing MPI: The problem is currently unknown; * Fixing ND: non-dimensionalization is different in the two solvers. It should be harmonized.; * Multigrid: A PB multigrid ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2210:408,guid,guide,408,https://su2code.github.io,https://github.com/su2code/SU2/pull/2210,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Simple update of link to download for Operating Systems in ReadMe. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1320:92,Simpl,Simple,92,https://su2code.github.io,https://github.com/su2code/SU2/pull/1320,3,"['Simpl', 'guid', 'simpl']","['Simple', 'guide', 'simply']"
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Since #724, equivalent area calculation and its use as objective function when EQUIV_AREA is set to YES have not been functioning. I have moved `SpecialOutput_SonicBoom` from output_structure_legacy.cpp to CFlowOutput.cpp and called it out in CFlowCompOutput.cpp similarly to inverse design Cp function mentioned in #1311. This PR fixes #841. This is my first PR on github, so let me know if I should fix anything. Mesh file and TargetEA.dat; [NACA64206_EA.zip](https://github.com/su2code/SU2/files/6839247/NACA64206_EA.zip). ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; #724 ; #1311 ; #841 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1329:960,guid,guide,960,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; The comment and the code are inconsistent regarding RefElemLength. Propose to change the comment from 0.1m to 1.0m.; ```cpp; /*--- Length based parameter for slope limiters uses a default value of; 0.1m ---*/. RefElemLength = 1.0;; ```. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; Resolve #1830. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1831:664,guid,guide,664,https://su2code.github.io,https://github.com/su2code/SU2/pull/1831,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; The proposed changes consist in providing an hdf5 enabled cgns library inside SU2.; This is done by embedding the needed hdf5 sources inside the cgns directory.; A basic meson.build file helps with compilation (instead of original cmake). ## Related Work; None. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1500:526,guid,guide,526,https://su2code.github.io,https://github.com/su2code/SU2/pull/1500,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; The wall function variable y+ was not computed on the halo nodes, leading to visual 'spots' in the solution. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; #1768 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1791:531,guid,guide,531,https://su2code.github.io,https://github.com/su2code/SU2/pull/1791,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; This PR introduces a tabulated chemistry approach. The focus for this PR is on laminar and premixed flames in the incompressible framework, but it is generalizable to non-premixed and partially premixed flames, turbulent flames and compressible flames. ; In this approach, 2 transport equations are solved for progress variable and total enthalpy. The lookup table retrieves quantities (temperature, density, viscosity, diffusivity, source terms, etc) as a function of these independent control variables. 2 additional independent transport equations are solved for the species NO and CO. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## Nijso Checklist; - [ ] Replace bloated initialization (burnt and unburnt region) with python wrapper; - [ ] Check Conjugate Heat Transfer; - [ ] Check adjoint optimization workflow; - [x] Check axisymmetric setup; - [x] Check diffusivity; - [x] Check primal restart; - [x] Check adjoint restart; - [x] Adjoint comparison with FD. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1826:1334,guid,guide,1334,https://su2code.github.io,https://github.com/su2code/SU2/pull/1826,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; This PR introduces a tabulated chemistry approach. The focus for this PR is on laminar and premixed flames in the incompressible framework, but it is generalizable to non-premixed and partially premixed flames, turbulent flames and compressible flames.; In this approach, 2 transport equations are solved for progress variable and total enthalpy. The lookup table retrieves quantities (temperature, density, viscosity, diffusivity, source terms, etc) as a function of these independent control variables. Additional independent transport equations are optionally solved for the species like NO and CO. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1917:866,guid,guide,866,https://su2code.github.io,https://github.com/su2code/SU2/pull/1917,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; This is a draft pull request for the implementation of a supersonic inlet profile feature. So far, the only changes made have been in CEulerSolver.cpp, where the uniform temperature, pressure, and velocity at the inlet for a supersonic inlet BC have been replaced with vertex values (please verify I did this correctly). ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; I have been in communication with @bigfooted regarding the first steps for this implementation. I created a feature request for this on 5/25/2022. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1652:880,guid,guide,880,https://su2code.github.io,https://github.com/su2code/SU2/pull/1652,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; This is a small update of the lookup table routines to prepare for the implementation of the flamelet model. A bug was fixed and the header file definition changed (keywords in sentences are capitalized). Some small textual changes were made. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; related to the upcoming PR for feature_new_flamelet. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1792:708,guid,guide,708,https://su2code.github.io,https://github.com/su2code/SU2/pull/1792,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; WRT_RESTART_OVERWRITE= NO; WRT_VOLUME_OVERWRITE= NO; WRT_SURFACE_OVERWRITE= NO; will create, every WRT_FREQ iterations, output files with the iteration number appended. This is additional to the normal output, so the restart.dat, etc files will always contain the most recent results. Other features that we can add:; WRT_RESTART_MAX_FILES_TO_KEEP= 5; will keep only the 5 most recently written restart_xxxx.dat files, throwing away older ones. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; related to the issue #1463. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [] I have added a test case that demonstrates my contribution, if necessary.; - [] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1465:885,guid,guide,885,https://su2code.github.io,https://github.com/su2code/SU2/pull/1465,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; We need a different treatment of the convective scalar fluxes to improve results for the species solver. ; This PR deals with the specific case of the incompressible species solver. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; connected to #726 and #721, and discussion #1695. ## my checklist:; [] check residual convergence for old and new testcase (primitive venturi mixer); [] check convergence for turbulence problems, still problematic? Should we implement upwind scheme for species only (for now)?; [] check implementation of inlet/outlet bc; [] compressible flow vs incompressible flow; []. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1697:965,guid,guide,965,https://su2code.github.io,https://github.com/su2code/SU2/pull/1697,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; When `(Objective < Value ) * Scale` ('<' can be '>') is added to OPT_OBJECTIVE in the configuration file, it is treated as a penalty function. When the constraint is satisfied, the penalty function value should be zero. However, it is currently set to the function value. The same `elif` condition as in `obj_dp` should be used. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; Resolve #1968. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1969:758,guid,guide,758,https://su2code.github.io,https://github.com/su2code/SU2/pull/1969,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; When no inlet profile exists, su2 creates one for you. There was a bug where the index of the marker was used to look up the string of column names, instead of the index of the inlet markers. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2267:606,guid,guide,606,https://su2code.github.io,https://github.com/su2code/SU2/pull/2267,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; When using wall functions in combination with heat transfer, a thermal law of the wall is needed to accurately solve for velocity as well as temperature. . This is a first implementation, only for isothermal walls, and only for the incompressible solver. During the WIP, this will be generalized. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; Improvement of the wall function implementation. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1748:760,guid,guide,760,https://su2code.github.io,https://github.com/su2code/SU2/pull/1748,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; change MPI_QUANTITIES to enum class. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2279:398,Guid,Guide,398,https://su2code.github.io,https://github.com/su2code/SU2/pull/2279,1,['Guid'],['Guide']
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; continuing work on making making enum classes for all addEnumOption. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1452:481,guid,guide,481,https://su2code.github.io,https://github.com/su2code/SU2/pull/1452,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; edit:; - Implement the SST2004,SST2004m, SST2003 and SST2003m model according to the NASA website https://turbmodels.larc.nasa.gov/sst.html; - implementation compatible with ongoing work on SA model. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; #1551 ; #1364 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1557:628,guid,guide,628,https://su2code.github.io,https://github.com/su2code/SU2/pull/1557,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; make kind_solver an enum class . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; continuing work on making enums into enum classes. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x ] I am submitting my contribution to the develop branch.; - [x ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1451:496,guid,guide,496,https://su2code.github.io,https://github.com/su2code/SU2/pull/1451,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ongoing effort to change to enum class. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1457:452,guid,guide,452,https://su2code.github.io,https://github.com/su2code/SU2/pull/1457,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; the axisymmetric terms in the production term of the SST model are not correct and the current implementation is prone to error. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; #1783 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1784:551,guid,guide,551,https://su2code.github.io,https://github.com/su2code/SU2/pull/1784,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; updated catch.hpp from the catchorg github repository. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1726:319,guid,guide,319,https://su2code.github.io,https://github.com/su2code/SU2/pull/1726,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; when using an inlet profile, and the inlet profile does not exist, SU2 will write a profile for you. When you do this when using mpi, this sometimes fails, depending on the number of ranks. This PR fixes the issue. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; #1767 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1786:635,guid,guide,635,https://su2code.github.io,https://github.com/su2code/SU2/pull/1786,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; *Implementation of NISHIKAWA Rp Limiters (R3, R4, R5); Reference - ""New Unstructured-Grid Limiter Functions"", Hiroaki Nishikawa, AIAA 2022-1473*; . ## Related Work; *1- Less dissipative in comparison to Venkatakrishnan limiter; 2- Can preserve higher order accuracy (3rd, 4th and 5th with R3, R4 and R5 limiters, probably future proof); 3- May help in better convergence for certain cases with different K.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2006:602,guid,guide,602,https://su2code.github.io,https://github.com/su2code/SU2/pull/2006,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; *Implementation of Streamwise periodic Iso-thermal BCs*; . ## Related Work; *This is an add-on to the already existing Streamwise periodic flow solver. As a result, there are new source terms which are accounted for in the solution.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1799:428,guid,guide,428,https://su2code.github.io,https://github.com/su2code/SU2/pull/1799,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; *Implementation of a new boundary condition for symmetry plane instead of using Euler Wall.; The implementation works as follows:*; - Calculates new viscous eigenvalues for nodes in symmetry planes;; - ~Calculates new residuals to take into account the symmetry of the mesh;~ Only corrects momentum residual vector in current version.; - ~Uses a modified volume to calculate the solution in symmetry planes;~ Does not require modified volume in current version. ## Related Work; #657. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Results. For the sake of demonstrating the capability of the new Symmetry Boundary condition, the image shows a comparison of pressure at the surface, using the new implementation and the old symmetry boundary condition, for a flow over a 3D cylinder and considering the lateral and bottom surfaces as symmetry plane:. ### New Implementation vs Old Implementation for N2 mixture (2nd Order - NEMO_NS solver - AUSM scheme). ![Screenshot from 2021-01-20 23-28-31](https://user-images.githubusercontent.com/29612207/105253606-b6244c00-5b77-11eb-8689-c6e6190b4b5b.png). I have run this test without changing the viscous eigenvalues, and it converges to the same value. However, for unsteady simulations, changing the eigenvalues provides",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1168:678,guid,guide,678,https://su2code.github.io,https://github.com/su2code/SU2/pull/1168,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; *This PR adds the capability of a radiative equilibrium wall boundary condition to the standard air and NEMO solvers. ; . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1703:332,guid,guide,332,https://su2code.github.io,https://github.com/su2code/SU2/pull/1703,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; *This branch includes steady state turbomachinery features like multi-zone mixing plane, pressure ramps and rotations ramps essential for convergence. In additions, multi-zone performance computations with screen output is also implemented here.*; . ## Related Work; * The code now follows the same path as that of fluid driver, CTurbomachineryDriver will be removed after verification. There is some implementation of boost currently, it will be re-coded soon.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. *Please note, this is a draft pull request. I wish to get more comments on the section of code which are working like, mixing plane and performance computations. Config, tutorial and comments will be updated follow soon after.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1316:657,guid,guide,657,https://su2code.github.io,https://github.com/su2code/SU2/pull/1316,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; *add Cur_Time column to the default history.csv file for transient analysis*. ## Related Work; *I propose this change mainly for third-party post-processing purposes, the post module can easily acquire the time information from the history file. In addition, the time data in the history file allows the users to know the current simulation time intuitively.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2141:367,intuit,intuitively,367,https://su2code.github.io,https://github.com/su2code/SU2/pull/2141,3,"['Guid', 'guid', 'intuit']","['Guide', 'guide', 'intuitively']"
Usability,"## Proposed Changes; *in driver_structure.cpp, a few lines have been included to force reading the Target files when running discrete adjoint. I tested it on MacOS El Capitán and OpenSUSE 42.3 with the most recent g++. Under MacOS, the MPI flavour is openmpi; on openSUSE, the MPI flavour is mpich2psm2*; . ## Related Work; This fix forces the reading of Target Files in an inverse design project when using discrete adjoint. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600:598,guid,guide,598,https://su2code.github.io,https://github.com/su2code/SU2/pull/600,1,['guid'],['guide']
Usability,"## Proposed Changes; *restoring original testcase repository for regression tests.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2371:257,guid,guide,257,https://su2code.github.io,https://github.com/su2code/SU2/pull/2371,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; + remove some obsolete code. This is to make clearer what can be called from python.; ; ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1996:66,clear,clearer,66,https://su2code.github.io,https://github.com/su2code/SU2/pull/1996,2,"['Guid', 'clear']","['Guide', 'clearer']"
Usability,"## Proposed Changes; - Added non-polytropic Peng-Robinson (NPPR_GAS) equation of state (CP temperature dependant model): the specific heat ratio is not constant but a polynomial model (CP = n0 + n1T + n2T^2 +n3T^3 + n4T^4) can be specified for the specific heat via the input file option (CP_POLYCOEFFS). - The NPPR fluid model uses the polytropic Peng-Robinson fluid model as a base class. Therefore, the polytropic Peng-Robinson class now allows for inheritance. - New test case (TestCases/nicfd/edge_NPPR) to compare the results of the NPPR with a constant CP model (CP = n0) and the polytropic Peng-Robinson models. The results of both simulations for this test case are equivalent. ## Related Work; - The polytropic Peng-Robinson remains functionally unchanged. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1718:939,guid,guide,939,https://su2code.github.io,https://github.com/su2code/SU2/pull/1718,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; - Protect `AD::GetDerivative()` call trees by `AD::BeginUseAdjoints()`, `AD::EndUseAdjoints()`.; - `GetAdjointSolution_time_n()` and `GetAdjointSolution_time_n1()` use lock-free adjoints access now. ## Related Work; continues #2146; related to #1984. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2161:558,Guid,Guide,558,https://su2code.github.io,https://github.com/su2code/SU2/pull/2161,1,['Guid'],['Guide']
Usability,"## Proposed Changes; - Qualify member functions `CPrimalGrid::Get...` as const; - `CPrimalGridFEM::GetCornerPointsAllFaces` did set the member `nFaces`. To make it const, I introduced `CPrimalGridFEM::elementtype_to_nFaces` and initialized `nFaces` in the constructor.; - Now we can use `const CPrimalGrid* elem` in `CInterpolator::ReconstructBoundary` (#1346).; - **EDIT**: see more changes below. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1352:571,guid,guide,571,https://su2code.github.io,https://github.com/su2code/SU2/pull/1352,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; - The CoDiPack update fixes a rare data race.; - For consistency, the explicit adjoints resizing introduced previously is complemented by explicit adjoints locking. ## Related Work; #2039 . ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2146:497,Guid,Guide,497,https://su2code.github.io,https://github.com/su2code/SU2/pull/2146,1,['Guid'],['Guide']
Usability,"## Proposed Changes; - This PR proposes to add CGNS format as a possible writing format for FFD box; . ## Related Work; - This should address #148 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/674:321,guid,guide,321,https://su2code.github.io,https://github.com/su2code/SU2/pull/674,1,['guid'],['guide']
Usability,"## Proposed Changes; - remove unused CONV_CRITERIA from code and Testcases (223); - remove unused Set/GetGeometryPlanes funciton; - Re-add SURFACE_STATIC_TEMPERATURE objective function for flow_solver; ; ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1238:427,simpl,simply,427,https://su2code.github.io,https://github.com/su2code/SU2/pull/1238,1,['simpl'],['simply']
Usability,"## Proposed Changes; -This PR addresses re-activating the super-catalytic wall boundary, which enforces full recombination of monatomic species to their free-stream concentrations.; -This work is conducted as part of a larger effort to implement more complex gas-surface interaction boundary conditions in NEMO.; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1396:635,guid,guide,635,https://su2code.github.io,https://github.com/su2code/SU2/pull/1396,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; -This work is focused on fixing some of the axisymmetric loop structures within NEMO, which prevented residual evolution. This also changes a viscous planar wedge regression to an axisymmetric case. . -Code updates to make NEMO more-in-line with SU2 code style. i.e. variable declarations, SU2 MPI errors, etc. -Fixes bug in vibrational-electronic functionality for CSU2TCLib. -Updating ionization/nheavy loops so CSU2TCLib and CMutationTCLib are consistent. . ## Related Work; This addresses/builds on #1106 #1205 . ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1326:761,simpl,simply,761,https://su2code.github.io,https://github.com/su2code/SU2/pull/1326,1,['simpl'],['simply']
Usability,"## Proposed Changes; . - Additional source terms are implemented in the residual computation for NEMO planar axisymmetric flows. This allows inviscid and viscous axisymmetric simulations. . ## Related Work. - Built upon framework in PR #1106 by FlorianDM, which introduced viscous axisymmetric source terms for non-reacting flows. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1162:503,guid,guide,503,https://su2code.github.io,https://github.com/su2code/SU2/pull/1162,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; 1 - Generalize the conservative interpolation approach for the following interpolation schemes:; NEAREST_NEIGHBOR, ISOPARAMETRIC, and RADIAL_BASIS_FUNCTION; The therefore redundant CONSISTCONSERVE option can be recovered with:; KIND_INTERPOLATION= ISOPARAMETRIC; CONSERVATIVE_INTERPOLATION= YES; If you guys think the conservative option also makes sense for the WEIGHTED_AVERAGE (sliding mesh) scheme I will put that in too (I am not familiar so left it alone). 2 - In CTransfer_FlowTraction, if not matching mesh and not conservative interpolation:; Compute the donor variables as stresses instead of forces;; Integrate the target variables on the structural side before transferring them. 3 - Removed a bit of code duplication in transfer_physics.cpp while I was there. I have yet to test this for the FSI adjoint but for the direct problem it looks ok. ## Related Work; #596 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/597:1074,guid,guide,1074,https://su2code.github.io,https://github.com/su2code/SU2/pull/597,1,['guid'],['guide']
Usability,"## Proposed Changes; 1 - Local indices for solution variables (which are overwritten during recording), even in singlezone problems (it was already used in multizone), to make things consistent for the two drivers. 2 - SU2_TYPE::GetDerivative was based on a global counter and a shared vector of input indices, which meant derivatives had to be extracted in the same order they were registered, and made the whole process not thread-safe. This is gone, if an input variable is overwritten during recording its (initial) index needs to be managed explicitly. 3 - Simplify and improve the restart logic because of unsteady FSI issues (not an Hybrid AD topic, but I had enough branches). ## Related Work; Continues #1214 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1284:562,Simpl,Simplify,562,https://su2code.github.io,https://github.com/su2code/SU2/pull/1284,2,"['Simpl', 'simpl']","['Simplify', 'simply']"
Usability,"## Proposed Changes; 1) Modified the BFM input file and source code to cover machines with curved streamlines on the meridional plane. Axial distance replaced by streamwise distance.; 2) During Ray-Casting algorithm enlarged the research zone to include also nodes on curved boundaries that would be excluded by standard procedure. ## Related Work; 1) Modified the BFM input file and source code to cover machines with curved streamlines on the meridional plane. Axial distance replaced by streamwise distance.; 2) During Ray-Casting algorithm enlarged the research zone to include also nodes on curved boundaries that would be excluded by standard procedure. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2328:832,guid,guide,832,https://su2code.github.io,https://github.com/su2code/SU2/pull/2328,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; 1) Updated Xcode to include all the new files and not include deleted files. Compiles successfully for me. 2) I encountered one bug while doing this... In adt_structure.cpp, I got many errors that looked like this:. ```; In file included from /Users/jessie/Software/SU2-quickfix/Common/src/adt_structure.cpp:29:; /Users/jessie/Software/SU2-quickfix/Common/src/../include/adt_structure.hpp:161:34: error: implicit instantiation of undefined template 'std::__1::array<std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >, 1>'; array<vector<unsigned long>,1> FrontLeaves;; ```. So I turned to Google / StackOverflow: https://stackoverflow.com/questions/12797051/implicit-instantiation-of-undefined-template-when-forward-declaring-template-c. And ``#include <array>`` worked for me. Didn't think too much of it, but I also don't have a PC or Linux readily available to test on another OS. I assumed it's a clang thing.; ; Tagging known Xcode users if any of you have a moment to review...; @economon @EduardoMolina @jayantmukho . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ n/a] My contribution is commented and consistent with SU2 style.; - [ n/a] I have added a test case that demonstrates my contribution, if necessary.; - [ n/a] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/981:1257,guid,guide,1257,https://su2code.github.io,https://github.com/su2code/SU2/pull/981,1,['guid'],['guide']
Usability,"## Proposed Changes; 1. Fix preaccumulation issues with `RealReverseIndex`.; 2. ~~Fix~~ Identify issues regarding index reuse and partial tape evaluations.; 3. Add regression tests for hybrid parallel AD (subset of parallel_regression_AD).; 4. Re-enable parallel preaccumulation.; 5. Shared reading optimizations. ## Related Work; continues #1284. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1294:571,simpl,simply,571,https://su2code.github.io,https://github.com/su2code/SU2/pull/1294,1,['simpl'],['simply']
Usability,"## Proposed Changes; ; Add execute permission to SU2_PY/fsi_computation.py. This appears to be the intent - installs to $prefix/bin and starts with a shebang. ## Related Work. Resolve sbopkglint complaint when building Slackware package. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2072:410,guid,guide,410,https://su2code.github.io,https://github.com/su2code/SU2/pull/2072,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; ; Do not write Z-velocity or temperature when the (adjoint) equations are not solved. . ## Related Work. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1920:412,Guid,Guide,412,https://su2code.github.io,https://github.com/su2code/SU2/pull/1920,1,['Guid'],['Guide']
Usability,"## Proposed Changes; ; The visc_numerics' coordinates were often set to the coordinates; of the boundary vertex and its closest normal neighbour. Setting; them to the boundary vertex and the reflection of the closest; normal neighbour at the vertex is more systematic however.; Normally this should not change much, because the boundary numerics; do not apply gradient correction, so they only depend on the; distance between Coord_i, Coord_j. ## Related Work; #1185 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1189:641,guid,guide,641,https://su2code.github.io,https://github.com/su2code/SU2/pull/1189,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; @jtneedels and I have worked on implementing the Air-7 gas model to the NEMO native fluid model. This allows for simulations of inviscid weakly ionized flows with the addition of NO+ and e-. . I am open to adding a test case for this, similar to the thermal bath case, since they run extremely fast, though I am open to idea. Work is ongoing to extend this viscous simulations.; Updates from #1533 are added here as well. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1555:666,simpl,simply,666,https://su2code.github.io,https://github.com/su2code/SU2/pull/1555,1,['simpl'],['simply']
Usability,"## Proposed Changes; @maxaehle and I analyzed SU2 with `gcc` with the thread sanitizer enabled and fixed various race conditions both in hybrid parallel and hybrid parallel AD code. The thread sanitizer records of the hybrid regression tests and hybrid regression AD tests are clean now. ## Related Work; #1384, this PR works towards fixing it. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1679:517,guid,guide,517,https://su2code.github.io,https://github.com/su2code/SU2/pull/1679,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; @oleburghardt, according to @talbring this was supposed to go AFTER #653. Is my work a joke around here or what?!; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/667:458,guid,guide,458,https://su2code.github.io,https://github.com/su2code/SU2/pull/667,1,['guid'],['guide']
Usability,"## Proposed Changes; @patelha57 @aa-g @Nicola-Fonzi @bigfooted ; I'm proposing this as the way to interact with volume fields via the python wrapper.; We create a matrix view (does not copy data) into the coordinates, solution, primitives, etc. which then allows point-wise or row-wise access to the data (read or write). We can extend it to also expose derivative information.; For example:; ```python; coords = driver.Coordinates(); print(coords(iPoint, 1)) # read a value; coords.Set(iPoint, (x, y, z)) # write a row; coords.Set(iPoint, 0, coords.Get(iPoint, 0)) # set a value and different way of reading a value. solversIndices = driver.GetSolverIndices() # maps solver names to our solver integers, similar to what we do with markers; solution = driver.Solution(solverIndices[""C.FLOW""]) # same object type as coords. primitiveIndices = driver.GetPrimitiveIndices() # maps primitive names to their indices.; temperatureIndex = primitiveIndices[""TEMPERATURE""]; primitives = driver.Primitives(); print(primitives(iPoint, temperatureIndex)); ```. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1938:1335,Guid,Guide,1335,https://su2code.github.io,https://github.com/su2code/SU2/pull/1938,1,['Guid'],['Guide']
Usability,"## Proposed Changes; A cout line for debugging purposes was left in the paraview writer. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1491:295,simpl,simply,295,https://su2code.github.io,https://github.com/su2code/SU2/pull/1491,1,['simpl'],['simply']
Usability,"## Proposed Changes; A differentiable maximum VM stress function for optimization.; Simplifies the ""DoubleArray"" option to avoid one array of default values and another of actual values. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1176:84,Simpl,Simplifies,84,https://su2code.github.io,https://github.com/su2code/SU2/pull/1176,2,"['Simpl', 'simpl']","['Simplifies', 'simply']"
Usability,"## Proposed Changes; AUSM+ -up scheme of Liou (A sequel to AUSM, Part II: AUSM + -up for all speeds) has been implemented . It is an all speed scheme and is more robust and accurate in comparison to the AUSM scheme. Also It has relatively fewer issues in comparison to the Roe scheme.; (I tried it over a relatively complex geometry (unstructured hybrid mesh), implementation looks fine). . ## Related Work; **. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/628:584,guid,guide,584,https://su2code.github.io,https://github.com/su2code/SU2/pull/628,1,['guid'],['guide']
Usability,"## Proposed Changes; AUSM+-up scheme of Liou has been implemented (A sequel to AUSM, Part II: AUSM + -up for all speeds).; - This scheme is more robust and accurate in comparison to existing AUSM scheme in the code; - Relatively fewer issues in comparison to Roe scheme; - Proper scaling of numerical dissipation at lower Mach numbers; - I tried it over a relatively complex geometry, implementation seems to be fine. . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/629:609,guid,guide,609,https://su2code.github.io,https://github.com/su2code/SU2/pull/629,1,['guid'],['guide']
Usability,"## Proposed Changes; Add ""native"" option to enable executable to use the build environment to generate headers instead of the host. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1510:454,guid,guide,454,https://su2code.github.io,https://github.com/su2code/SU2/pull/1510,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; Add feature to record a tape for debug purposes (as a tool for AD / discrete adjoint / .. developers), using CoDiPack's `codi::RealReverseTag`. ## Related Work; Supposed to help finding remaining errors in #2317. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2343:406,guid,guide,406,https://su2code.github.io,https://github.com/su2code/SU2/pull/2343,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; Add further parallel regions in discrete adjoint computations. Changes in this PR also reduce the memory footprint of hybrid parallel AD, by avoiding that freed indices end up in tapes not used thereafter, and by aligning the serial and parallel parts between flow and mesh recording. ## Related Work; #1214. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2208:616,Guid,Guide,616,https://su2code.github.io,https://github.com/su2code/SU2/pull/2208,1,['Guid'],['Guide']
Usability,"## Proposed Changes; Add option `-Dextra-deps=a,b,c` to meson to provide a simpler work around for build problems with MPICH and LAPACK.; For example if you have MPICH but it is not detected (because its pkg config name is not ""mpi"" but ""mpich"" instead), you would do `-Dcustom-mpi=true -Dextra-deps=mpich`.; If you have linker errors because the blas library does not contain LAPACK functions, you would do `-Dextra-deps=lapack`.; The option takes a comma-separated list. I will update the documentation once this goes through. ## Related Work; #991; #1000. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1102:75,simpl,simpler,75,https://su2code.github.io,https://github.com/su2code/SU2/pull/1102,2,['simpl'],"['simpler', 'simply']"
Usability,"## Proposed Changes; Add periodic BCs with dummy points. With internal markers, we could probe data from any inner surfaces, and here, we choose to construct periodic boundaries using dummy points which is preset on the input domain just like the internal markers. Four layers in both side is needed for MUSCL: the inner two layers send and the outer layers recieve.; With this way, we can use a larger CFL number similar to the cases using symmetry BCs and avoid passing too many variables with mpi.; ; ## Related Work; #1467 or other works about periodic BCs. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2038:734,guid,guide,734,https://su2code.github.io,https://github.com/su2code/SU2/pull/2038,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; Add the Kenway-Martins separation sensor for buffet-onset detection (see [doi.org/10.2514/1.J055172](https://doi.org/10.2514/1.J055172) for details). Config options include:. 1. BUFFET_MONITORING= YES will compute; a. The sensor value (between 0 and 1) on NS marker vertices, stored in CNSSolver as Buffet_Sensor; b. The integral of the sensor values normalized by reference area (percent of reference area over which separation occurs), stored in CNSSolver as Buffet_Metric (per-surface) and Total_Buffet_Metric; 2. BUFFET_K and BUFFET_LAMBDA specify the sharpness and offset of the Heaviside function used to compute the nodal sensor value; 3. Objective function option BUFFET, which uses the integrated metric as a cost function; . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/614:950,guid,guide,950,https://su2code.github.io,https://github.com/su2code/SU2/pull/614,1,['guid'],['guide']
Usability,"## Proposed Changes; Added CGNS output format. Master node writes the output files and receives data from other processes (one at a time for each field to avoid memory limit problems). Some suggestions from [feature_CGNS_output](https://github.com/su2code/SU2/pull/1131) are included in the code. However, this first version produce a new file, mesh and solution, at each call as in the Paraview format. The code support `CGNS` and `SURFACE_CGNS` in the `OUTPUT_FILES` option. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1387:700,simpl,simply,700,https://su2code.github.io,https://github.com/su2code/SU2/pull/1387,1,['simpl'],['simply']
Usability,"## Proposed Changes; Added `SelectZone` function to `CDriverBase` that dynamically sets the zone index; . ## Example Usage; ```python; import pysu2; from mpi4py import MPI. def execute_su2():; # Import mpi4py for parallel run; comm = MPI.COMM_WORLD; rank = comm.Get_rank(); num_zones = 2; # Initialize the corresponding driver of SU2, this includes solver preprocessing; SU2Driver = pysu2.CMultizoneDriver(config_path, num_zones, comm) # type: ignore. # Get all the markers defined on this rank and their associated indices.; allMarkerIDs = SU2Driver.GetMarkerIndices(). # Time loop is defined in Python so that we have acces to SU2 functionalities at each time step; comm.Barrier(). # Time iteration preprocessing; SU2Driver.Preprocess(0). # Run one time-step (static: one simulation); SU2Driver.Run(). # Update the solver for the next time iteration; SU2Driver.Update(). # Monitor the solver and output solution to file if required; SU2Driver.Monitor(0). for izone in range(num_zones):; SU2Driver.SelectZone(izone); # Get all the markers defined on this rank and their associated indices.; allMarkerIDs = SU2Driver.GetMarkerIndices(); print(allMarkerIDs). # Output the solution to file; SU2Driver.Output(0). # Finalize the solver and exit cleanly; SU2Driver.Finalize(); ```. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2019:1449,guid,guide,1449,https://su2code.github.io,https://github.com/su2code/SU2/pull/2019,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; Added a dry run mode (can be enabled by adding -d as flag to the SU2_CFD binary). If this mode is enabled, all of the expensive geometrical preprocessing steps are skipped and no solver is started, but all other steps during the driver construction are executed. This is great to check whether the setup is sane and the physical settings are correct without having to wait until the mesh is read and the partitioning is done. For the implementation I created a dummy geometry class with zero elements and points and a dummy driver which does essentially nothing. Initially I thought it would be more work, but apparently it almost worked out of the box. I also added a table output during the solver preprocessing for the DG solver. Furthermore I moved parts of the Input_Preprocessing() routine dealing with the geometry to the Geometrical_Preprocessing() routine where it should belong. The changes in SU2_CFD.cpp look more complicated then they are. Just hide white space changes. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/734:1194,guid,guide,1194,https://su2code.github.io,https://github.com/su2code/SU2/pull/734,1,['guid'],['guide']
Usability,"## Proposed Changes; Added a github action that changes the version number as soon as there is a branch created called ""release_v*"". This should make the release process even more automated. . Another quick change is that the regression builds now fail on warnings. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/874:438,guid,guide,438,https://su2code.github.io,https://github.com/su2code/SU2/pull/874,1,['guid'],['guide']
Usability,"## Proposed Changes; Added files; - README which explains the files and why they are there; - cfg files which contain notes how to be changed for primal/findiff and serious adjoint run; - findiff.py FADO script for finite differences; - postprocess.py to compare the gradients of DA and FD (only screen output); - gmsh .geo file with which the mesh was created. parallel_reg_AD will fail until the [Testcases PR 63](https://github.com/su2code/TestCases/pull/63) is merged. ## Related Work; Depends on #1260 and contains all of those changes (i.e. best reviewed after that is merged .. or just look at the last commit :) ). Meant to be merged shortly after but before #1284 to have an additional safeguarded case. . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1288:938,simpl,simply,938,https://su2code.github.io,https://github.com/su2code/SU2/pull/1288,1,['simpl'],['simply']
Usability,"## Proposed Changes; Added local timestep and local CFL as volume output for both the flow and turbulence variables; . ## Related Work; In relation to #2056. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2060:330,guid,guide,330,https://su2code.github.io,https://github.com/su2code/SU2/pull/2060,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; Added parallel output of Tecplot binary .szplt files.; Updated TecIO source to the latest version. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/656:309,guid,guide,309,https://su2code.github.io,https://github.com/su2code/SU2/pull/656,1,['guid'],['guide']
Usability,"## Proposed Changes; Added profiling option through `gprof`. This allows you to profile your SU2 application to see where it spends most of its time and therefore figure out which of your new features could use some better efficiency. . How to enable profiling? Add the flag `-Denable-gprof` to your `meson.py` command and re-configure. . Now you can run SU2 or SU2 AD as normal. However, at the end, a file called `gmon.out` will be generated in your working directory. . In order to get the analysis from the profiling, run `gprof <path/to/SU2/executable> > analysis.txt`. Now, the file `analysis.txt` contains the profiling analysis which you can use to assess the efficiency of your code. Added instructions for enabling and using the gprof option on the su2code.github.io repository under PR #145 ; ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2243:1090,Guid,Guide,1090,https://su2code.github.io,https://github.com/su2code/SU2/pull/2243,1,['Guid'],['Guide']
Usability,"## Proposed Changes; Added required files for test case VV sandia jet and changed regression.yml to get residual values required for vandv.py; @bigfooted @Cristopher-Morales. (This PR is created to get the residual values for the vandv.py script.); . ## Related Work; -. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2097:557,Guid,Guide,557,https://su2code.github.io,https://github.com/su2code/SU2/pull/2097,1,['Guid'],['Guide']
Usability,"## Proposed Changes; Added the new files from a previous commit to the Xcode IDE project file. ; There is also a change to printing_toolbox.cpp in Common/src/toolboxes/; - slight modification to the relative path of a include file. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/634:559,guid,guide,559,https://su2code.github.io,https://github.com/su2code/SU2/pull/634,1,['guid'],['guide']
Usability,"## Proposed Changes; Adding an implicit flag to prevent segfault while running Roe scheme explicitly.; ; ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x ] I am submitting my contribution to the develop branch.; - [x ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/654:299,guid,guide,299,https://su2code.github.io,https://github.com/su2code/SU2/pull/654,1,['guid'],['guide']
Usability,"## Proposed Changes; Adding cstdint header to printing_toolbox.hpp. ## Reason; I was building SU2 from source this morning. Running ninja threw an compilation error with a comment to import cstdint in printing_toolbox.hpp since uint8_t is not defined in the scope:. ```; ...; ../SU2_CFD/src/output/filewriter/CParaviewXMLFileWriter.cpp:240:10: error: ‘uint8_t’ was not declared in this scope; 240 | vector<uint8_t> typeBuf(myElem);; | ^~~~~~~; ../SU2_CFD/src/output/filewriter/CParaviewXMLFileWriter.cpp:30:1: note: ‘uint8_t’ is defined in header ‘<cstdint>’; did you forget to ‘#include <cstdint>’?; 29 | #include ""../../../../Common/include/toolboxes/printing_toolbox.hpp""; +++ |+#include <cstdint>; 30 | ; ...; ```; Adding the header solves the issue. . Here some additional information:; OS: Fedora 38; Configuration: MPI, pythonwrapper, autodiff; Compiler: g++ 13.1.1. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2099:1046,guid,guide,1046,https://su2code.github.io,https://github.com/su2code/SU2/pull/2099,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; Adding in history output residuals of species flamelet controlling variables for multizone simulations. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2269:314,guid,guide,314,https://su2code.github.io,https://github.com/su2code/SU2/pull/2269,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; Adding the new solver NEMO to the develop branch. The NEMO solver concerns the simulation of hypersonic flows, accounting for thermal nonequilibrium and finite-rate chemistry, following Park's 2Temperature model. The system of equations to solve is the conservation of each chemical species mass, momentum, total energy and vibrational energy. Both inviscid and viscous simulations are available, respectively, solver NEMO_EULER and NEMO_NAVIER_STOKES. ## Related Work; This is a new solver, therefore is mostly new and independent work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X ] I am submitting my contribution to the develop branch.; - [? ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags). I was not able to test this, since these commands do not seem to work with meson/ninja. . - [ X ] My contribution is commented and consistent with SU2 style.; - [ X ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1006:731,guid,guide,731,https://su2code.github.io,https://github.com/su2code/SU2/pull/1006,1,['guid'],['guide']
Usability,"## Proposed Changes; Addition and cleanup of isothermal catalytic wall boundary, integration with rest of code. Code optimization of catalytic wall routines, removal of array allocations. Submitting this draft PR primarily to get comments on approach, style, not looking to PR into develop quite yet. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1417:621,guid,guide,621,https://su2code.github.io,https://github.com/su2code/SU2/pull/1417,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; Addition of multi-layer perceptron class which can be used to evaluate trained multi-layer perceptrons in processes such as thermodynamic state evaluation in data-driven fluid models.; . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. In the Tutorials repository, branch feature_multilayer_perceptron, one can find under ""common/multilayer_perceptron"" some python scripts which demonstrate how to translate a model trained through Tensorflow to an input file compatible with the CLookUp_ANN class. The README.md file in that tutorial folder also lists some important information regarding the functionality of the CLookUp_ANN class, datadriven fluid model, and MLP input file format. . Shall I leave those there or should these be uploaded elsewhere?. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1757:397,guid,guide,397,https://su2code.github.io,https://github.com/su2code/SU2/pull/1757,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; Addition of preferential diffusion model for modeling of hydrogen-rich reactants.; The new features allow for an additional transported scalar; the mixture fraction. This enables the solution process for partially pre-mixed, laminar flame problems, as well as the implementation of preferential diffusion. . A detailed description of the SU2 FGM solver can be found on the SU2 website repository (https://github.com/su2code/su2code.github.io) under feature_new_flamelet. . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2156:683,guid,guide,683,https://su2code.github.io,https://github.com/su2code/SU2/pull/2156,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; Adds epistemic uncertainty quantification capabilities for the SST turbulence model. Details on methodology, implementation, and performance on test cases, are available here: https://arxiv.org/abs/1803.00725; . ## Related Work; NA. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X ] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ X ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/570:426,guid,guide,426,https://su2code.github.io,https://github.com/su2code/SU2/pull/570,1,['guid'],['guide']
Usability,"## Proposed Changes; Adds the simplest type of custom output to all solvers. Add coverage for custom functions in some discrete adjoint cases. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2020:30,simpl,simplest,30,https://su2code.github.io,https://github.com/su2code/SU2/pull/2020,2,"['Guid', 'simpl']","['Guide', 'simplest']"
Usability,"## Proposed Changes; After surface deformation, the surface points are checked for self-intersection within the FFD box. If that is the case, a recursive procedure is done to prevent those. After grid deformation, all elements are checked on convexity. If there are nonconvex elements, a procedure is started that starts from the undeformed mesh and recursively changes the deformation magnitude until no nonconvex elements are present. ## Related Work; None that I know of. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. - With respect to the test case: this can be used with virtually any case that has deformation. If the scale in OPT_OBJECTIVE is set to a high enough value, the deformation will be so big that intersections will occur.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1076:647,guid,guide,647,https://su2code.github.io,https://github.com/su2code/SU2/pull/1076,1,['guid'],['guide']
Usability,"## Proposed Changes; Allow for conjugate heat transfer between solid domains and the modeling of contact resistance. . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] Configuration option for contact resistance at interfaces.; - [x] Communicate contact resistance values between config and CInterface.; - [x] Test grid independence of contact resistance model.; - [x] Test case with both solid-solid and solid-fluid.; - [x] Add test case to regression tests.; - [x] Update documentation.; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2152:308,guid,guide,308,https://su2code.github.io,https://github.com/su2code/SU2/pull/2152,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; Allows specifying an objective function via a math expression using the history outputs and typical math functions.; General cleanup of dead code and output fixes. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1478:408,simpl,simply,408,https://su2code.github.io,https://github.com/su2code/SU2/pull/1478,1,['simpl'],['simply']
Usability,"## Proposed Changes; Allows this type of ""language"" to create new history outputs.; ```; CUSTOM_OUTPUTS= 'mach : Macro{hypot(VELOCITY_X, VELOCITY_Y) / SOUND_SPEED};\; avg_mach : AreaAvg{$mach}[inlet];\; var_mach : AreaAvg{pow($mach - avg_mach, 2)}[inlet];\; dev_mach : Function{sqrt(var_mach)}'; ```. ## Related Work; #1478 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1705:549,simpl,simply,549,https://su2code.github.io,https://github.com/su2code/SU2/pull/1705,1,['simpl'],['simply']
Usability,"## Proposed Changes; An option of supersonic inlet profile will be added, the uniform temperature, pressure, and velocity at the inlet for a supersonic inlet BC will be replaced with vertex values. ## Related Work; Modification to related files. ; e.g. CFVMFlowSolverBase.inl, CEulerSolver.cpp, etc.; Recompelling the codes and debugging; Testing using proper cases and doing iterations. ## PR Checklist; - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2325:674,Guid,Guide,674,https://su2code.github.io,https://github.com/su2code/SU2/pull/2325,1,['Guid'],['Guide']
Usability,"## Proposed Changes; As agreed during today's developer's meeting, this PR adds a general square matrix utility to the toolboxes such that it can be used by other people. It is not used in the current source tree of the develop branch and therefore it should not have any affect on current simulations.; . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1068:500,guid,guide,500,https://su2code.github.io,https://github.com/su2code/SU2/pull/1068,1,['guid'],['guide']
Usability,"## Proposed Changes; As an alternative to `MARKER_HEATFLUX = (heat_flux_marker, q,... )`, this PR adds `MARKER_HEATTRANSFER = (heat_transfer_marker, h, Twall)` to the list of wall boundary conditions where the wall heat flux is computed by q = h*(Twall-Tref). h is the heat transfer coefficient, Tref is to be set by default or by a further option.; ; @bigfooted Is this what you've been thinking of? If so, I'd go ahead adding this to the compressible and the heat solver as well, if not, we should get this right for the incompressible solver first :-). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1226:728,guid,guide,728,https://su2code.github.io,https://github.com/su2code/SU2/pull/1226,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; Avoid calls to external functions when compiling in AD and the datatype becomes incompatible.; (The HAVE_LAPACK flag is compatible with AD in the RBF interpolation but not in the HOM feature).; @vdweide please have a look at this. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X ] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/603:424,guid,guide,424,https://su2code.github.io,https://github.com/su2code/SU2/pull/603,1,['guid'],['guide']
Usability,"## Proposed Changes; Brief update of Xcode; . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x ] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1660:218,guid,guide,218,https://su2code.github.io,https://github.com/su2code/SU2/pull/1660,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; Changed the wall distance calculation to calculate the distance to the nearest element rather than calculating the distance to the nearest node. This significantly improves the performance of turbulence models for meshes where the mesh doesn't grow perpendicular to the wall. This pull request also contains a simple improvement to the AD recording in CADTElemClass::DetermineNearestElement that significantly reduces memory usage when running the Discrete Adjoint. . This will likely break any regression test that requires a wall distance calculation, i.e. any test that has a turbulence model. Is there a easy way of changing the regression test values that doesn't require manual changing of the values? . ## Related Work; NA. ## PR Checklist. - [ X ] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/604:331,simpl,simple,331,https://su2code.github.io,https://github.com/su2code/SU2/pull/604,1,['simpl'],['simple']
Usability,"## Proposed Changes; Changed the wall distance calculation to calculate the distance to the nearest element rather than calculating the distance to the nearest node. This significantly improves the performance of turbulence models for meshes where the mesh doesn't grow perpendicular to the wall. This pull request also contains a simple improvement to the AD recording in CADTElemClass::DetermineNearestElement that significantly reduces memory usage when running the Discrete Adjoint. This will likely break any regression test that requires a wall distance calculation, i.e. any test that has a turbulence model. Is there a easy way of changing the regression test values that doesn't require manual changing of the values?. (I mistakenly submitted the previous PR to merge with master) . ## Related Work; NA. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/605:331,simpl,simple,331,https://su2code.github.io,https://github.com/su2code/SU2/pull/605,1,['simpl'],['simple']
Usability,"## Proposed Changes; Changes in CoDiPack accelerate parallel preaccumulations.; ; ## Related Work; #2039, previous work on hybrid AD. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2092:420,Guid,Guide,420,https://su2code.github.io,https://github.com/su2code/SU2/pull/2092,1,['Guid'],['Guide']
Usability,"## Proposed Changes; Check for Nan in the monitored values of COutput (was already done for time domain).; For SU2_CFD_AD and SU2_DOT_AD the default MATH_PROBLEM becomes DISCRETE_ADJOINT; When the MATH_PROBLEM is DISCRETE_ADJOINT the linear solver and preconditioner of primal solvers is made the same as the DISCADJ_** ones, i.e. LINEAR_SOLVER and LINEAR_SOLVER_PREC are ignored (see why I think it makes sense in #942, and let me know if you think it doesn't make sense). ## Related Work; #942 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1105:721,simpl,simply,721,https://su2code.github.io,https://github.com/su2code/SU2/pull/1105,1,['simpl'],['simply']
Usability,"## Proposed Changes; Clean up the turbomachinery functions in CEulerSolver.cpp and apply SU2 coding rules. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2155:296,guid,guide,296,https://su2code.github.io,https://github.com/su2code/SU2/pull/2155,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; Cleaned up the Riemann boundary condition in CEulerSolver. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2176:269,guid,guide,269,https://su2code.github.io,https://github.com/su2code/SU2/pull/2176,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; Cleanup CHeatSolver.cpp; - define loop vars in the loop; - make stuff const auto; - remove unnecessary vars - or move definition&allocation where needed; - some minor logical changes which hopefully are equivalent ( and therefore don't change the reg test 🤞 ); - Fix primal unsteady Heat restarts. @oleburghardt might be interested in these changes ;). Can be seen as a follow up to #1256 of @maxaehle (although I dont specifically fix memory leaks). ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1281:695,simpl,simply,695,https://su2code.github.io,https://github.com/su2code/SU2/pull/1281,1,['simpl'],['simply']
Usability,"## Proposed Changes; Collection of improvements to fix SU2 bugs:; - Inconsistency between NO_DEFORMATION (index 24) and NONE (index = 0). I have updated and sorted the numbering of the design variables and set NO_DEFORMATION to index 0 (for consistency with the rest of the code).; - SU2_GEO was not working properly for 2D cases and the wing slicing routine was extremely expensive for the AD.; - VISUALIZE_DEFORMATION was very expensive and not useful, I have divided VISUALIZE_DEFORMATION between surface VISUALIZE_SURFACE_DEF and volume VISUALIZE_VOLUME_DEF.; - The actuator disk was not working properly when a pressure ratio (total pressures) was prescribed (the restart was not working either).; - The FFD twist design variable was not working properly. ## Related Work; This commit resolves the issues (bugs) described above without adding any extra capabilities to the software. It should be approved as soon as possible because some of the changes directly impact most of the the user's community. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/563:1180,guid,guide,1180,https://su2code.github.io,https://github.com/su2code/SU2/pull/563,1,['guid'],['guide']
Usability,"## Proposed Changes; Collection of minor improvements including, typos, warnings, better names, etc.; . ## Related Work; Not related with other PRs. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/541:321,guid,guide,321,https://su2code.github.io,https://github.com/su2code/SU2/pull/541,1,['guid'],['guide']
Usability,"## Proposed Changes; Creating new fork to work on the LM feature. Starting from the Develop branch; . ## Related Work; LM feature. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1464:303,guid,guide,303,https://su2code.github.io,https://github.com/su2code/SU2/pull/1464,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; Dear all,. Here are some updates for the python fsi interface. Namely:. - Better use of mpi4py, using always numpy array (more computationally efficient); - Fix of the restarted coupled simulation; - Automatic use of default values, in case of wrong inputs; - Introduction of a sort of dry run, which actually prints out the mapped modes and the normals of the aerodynamic surface mesh. This is yet another step towards the automatic creation of ROM from aerodynamic response; - Fix of small bugs. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1357:742,simpl,simply,742,https://su2code.github.io,https://github.com/su2code/SU2/pull/1357,1,['simpl'],['simply']
Usability,"## Proposed Changes; Description of `LINEAR_SOLVER_ILU_FILL_IN` wrote Linael instead of Linear .. and that was copied quite a few times; Done using `find ./ -type -f -exec sed -i -e 's/Linael/Linear/g' {} \;` in ./Testcases on Linux. As in none of the appearances the option is not using the default of zero, that option could be removed from all those testcases imo, but I put that up to discussion. As @pcarruscag mentioned in #1195 `[...]simplify the config by removing options that are not needed, this is to make it easier to maintain the testcases if there are changes to some options.`. Feel free to chip any other typos here. . ## Related Work; Seen in #1195 and annoyed me enough to open a PR, but of course not introduced there. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1201:441,simpl,simplify,441,https://su2code.github.io,https://github.com/su2code/SU2/pull/1201,2,['simpl'],"['simplify', 'simply']"
Usability,"## Proposed Changes; Detect when meson can run configuration test or if cross compiling for cgns hdf5 backend; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1508:433,guid,guide,433,https://su2code.github.io,https://github.com/su2code/SU2/pull/1508,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; During multigrid prolongation the no-slip (visc.) wall BC are set again. If there is Grid velocity it was multiplied by the 0th solution entry, both inc and compr. For compr flow it is density which is correct but for inc flow that is pressure. That is corrected by overloading.; ; In a little test with `TestCases/unsteady/pitching_naca0015_rans_inc/config_incomp_turb_sa.cfg` the linear solver diverged in the first iteration before, and now it works. Discovered by @pcarruscag and discussed in last weeks DevMeeting, so props to him. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary. *not necessary*; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1194:781,simpl,simply,781,https://su2code.github.io,https://github.com/su2code/SU2/pull/1194,1,['simpl'],['simply']
Usability,"## Proposed Changes; Edge coloring tends to perform better than reductions for the hybrid parallel discrete adjoint because it uses less memory and enables the shared reading optimization. This PR puts two additional strategies in place for the discrete adjoint that help with obtaining a coloring before resorting to reductions, making successful coloring more likely. 1. If the requested edge color group size does not produce an efficient coloring, the maximum edge color group size that still produces an efficient coloring is chosen instead. This decision is made per rank.; 2. The discrete adjoint is allowed to use more colors. ## Related Work; work on hybrid parallel AD, like #2039. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2167:978,Guid,Guide,978,https://su2code.github.io,https://github.com/su2code/SU2/pull/2167,1,['Guid'],['Guide']
Usability,"## Proposed Changes; Enable time integration by the explicit Euler scheme for e.g. turbulence solvers, by implementing ``CScalarSolver<>::ExplicitEuler_Iteration``. ## Related Work; This fixes #1432 with respect to explicit Euler. I need the feature for further investigation of #1414. ``CScalarSolver`` was introduced in #1330. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1435:503,guid,guide,503,https://su2code.github.io,https://github.com/su2code/SU2/pull/1435,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; Enhance CoolProp model by:; 1. add checkTemperature function to avoid critical temperature.; 2. impose gas phase by shifting temperature slightly.; . ## Related Work; This work is an extension of PR #1947. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2021:399,guid,guide,399,https://su2code.github.io,https://github.com/su2code/SU2/pull/2021,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; Explore a workaround along the lines of https://github.com/openvswitch/ovs/commit/fa0dfa18d5344c82bc8387b4f79f4257a59d6f58 to fix #2241. ## Related Work; #2241. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2242:468,Guid,Guide,468,https://su2code.github.io,https://github.com/su2code/SU2/pull/2242,1,['Guid'],['Guide']
Usability,"## Proposed Changes; Extend the Turbulence CFL reduction option, such that it can be used for adaptive CFL too. Turbulence cfl reduction was previously implemented only for a constant cfl, here the treatment is extended also for adaptive cfl. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [] I have added a test case that demonstrates my contribution, if necessary.; - [] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2295:565,guid,guide,565,https://su2code.github.io,https://github.com/su2code/SU2/pull/2295,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; Extends the custom outputs with point probes (nearest point, no interpolation is done). ## Related Work; #1907 cc @DonalMcC. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1909:432,Guid,Guide,432,https://su2code.github.io,https://github.com/su2code/SU2/pull/1909,1,['Guid'],['Guide']
Usability,"## Proposed Changes; Fix #1190; Prevent possible OpenMP bug for van Albada limiter.; Fix frozen limiter logic, freezing means ""do not compute"", and not ""do not apply"".; Fix limiter outputs for turbulence variables. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1193:438,simpl,simply,438,https://su2code.github.io,https://github.com/su2code/SU2/pull/1193,1,['simpl'],['simply']
Usability,"## Proposed Changes; Fix NEMO inlet BC.; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1882:363,guid,guide,363,https://su2code.github.io,https://github.com/su2code/SU2/pull/1882,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; Fix Xcode project and relative paths.; . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1145:256,guid,guide,256,https://su2code.github.io,https://github.com/su2code/SU2/pull/1145,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; Fix the output of FFD paraview files;; Maybe fix #1123 (@TobiKattmann give it a try if you can); Deprecate VISUALIZE_VOLUME/SURFACE_DEF options for the reasons in #942;; Implements ""HOLD_GRID_FIXED"" for CMeshSolver. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1126:460,simpl,simply,460,https://su2code.github.io,https://github.com/su2code/SU2/pull/1126,1,['simpl'],['simply']
Usability,"## Proposed Changes; Fixed a small memory leak in CConfig by adding CFL_AdaptParam to the destructor of CConfig; . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1187:309,guid,guide,309,https://su2code.github.io,https://github.com/su2code/SU2/pull/1187,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; Fixed all the compiler warnings in SU2 itself when using -Wpedantic for GNU and some warnings of the tecio library. The only remaining warnings using -Wpedantic now come from the tecio library and are of the type -Wmisleading-indentation and -Wclass-memaccess, the latter coming from the calls to memcpy. However, I think it is up to Tecplot to resolve those ones.; . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1092:583,guid,guide,583,https://su2code.github.io,https://github.com/su2code/SU2/pull/1092,1,['guid'],['guide']
Usability,"## Proposed Changes; Fixes #857, an error during dry-run. I know @pcarruscag added the fixing commit to his PR #824 already and mentioned it below the issue, i.e. all kudos regarding the first commit go to him. I only changed the omp_structure.hpp of ded9c08e90496634a38b4998d9fe7aa5b72cdcc3 as I guess that bit is enough for this PR. ; Additionally I hinder the dry-run to overwrite the history files, which is kind of annoying. If anyone as an elegant solution to simply check for EXIT_SUCCES in the regression test one could add some dry_run regression tests. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/858:466,simpl,simply,466,https://su2code.github.io,https://github.com/su2code/SU2/pull/858,1,['simpl'],['simply']
Usability,"## Proposed Changes; Fixes AD compilation of parallel Tecplot binary output.; . ## Related Work; AD build failure noted by Tom Economon on Mac w/ configure command:; ./preconfigure.py --enable-mpi --with-cc=mpicc --with-cxx=mpicxx --enable-autodiff --enable-direct-diff --enable-tecio. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/665:458,guid,guide,458,https://su2code.github.io,https://github.com/su2code/SU2/pull/665,1,['guid'],['guide']
Usability,"## Proposed Changes; Fixes a bug introduced in #756 for incompressible FSI cases. ## Related Work; This kind of bugs could be avoided with a strategy as suggested by @pcarruscag in #770. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/897:359,guid,guide,359,https://su2code.github.io,https://github.com/su2code/SU2/pull/897,1,['guid'],['guide']
Usability,"## Proposed Changes; Fixes bug that causes rotational grid velocity ramp to not be applied correctly if the ramp is specified in a multizone configuration file. ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2320:355,guid,guide,355,https://su2code.github.io,https://github.com/su2code/SU2/pull/2320,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; Following up on #583 this is a restructuring of the fiels related to the driver. In addition I rearranged preprocessing routines in the driver constructor. I added arguments to the calls to make it more clear what the dependencies are and what is allocated. Furthermore I merged all loops over zones and instances into a single loop. This should make it much more readable. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/736:224,clear,clear,224,https://su2code.github.io,https://github.com/su2code/SU2/pull/736,2,"['clear', 'guid']","['clear', 'guide']"
Usability,"## Proposed Changes; For RIGID_PITCHING movement, add PHASE parameter to angular velocities. Pitching angle: angle=Ampl * sin(Omega * Time + Phase); Original augular velocity: AlphaDot = Omega * Ampl * cos(Omega *Time); Updated angular velocity: AlphaDot = Omega * Ampl * cos(Omega *Time + Phase); . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1656:472,guid,guide,472,https://su2code.github.io,https://github.com/su2code/SU2/pull/1656,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; For classical RK4 explict, arent the time coefficients suppose to go (1.0, 0.5, 0.5, 1.0)? The functional step are correct as (1/6, 1/3, 1/3, 1/6). I couldnt use the explicit RK4 on the tutorial to test this because it says SU2 diverges. ; . ## Related Work; Modified time coefficient in classical RK4. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/961:496,guid,guide,496,https://su2code.github.io,https://github.com/su2code/SU2/pull/961,1,['guid'],['guide']
Usability,"## Proposed Changes; For pure conjugate heat transfer problems, the temperature at the walls is initialized using the free stream temperature. Using the Isothermal_Temperature[0] for pure CHT problems results in a segmentation fault error. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2281:429,guid,guide,429,https://su2code.github.io,https://github.com/su2code/SU2/pull/2281,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; For volume names, we assume that the filename is filename.ext and we strip the extension using find_last_of('.'); But:; 1. This can lead to unwanted file stripping when you want the filename or folder to be volume.a; 2. We already mention in the documentation that the volume filename should be given without an extension. I think we should simply remove the find_last_of lines. There are more of those, for now I have simply removed the one connected to #2074 . ## Related Work; Issue: #2074 . ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2079:362,simpl,simply,362,https://su2code.github.io,https://github.com/su2code/SU2/pull/2079,3,"['Guid', 'simpl']","['Guide', 'simply']"
Usability,"## Proposed Changes; Found while debugging differences between legacy and new mesh deformation with @Nicola-Fonzi in #1197.; Explained below. ## Related Work; #1197 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1199:390,simpl,simply,390,https://su2code.github.io,https://github.com/su2code/SU2/pull/1199,1,['simpl'],['simply']
Usability,"## Proposed Changes; Generalize the variables in the CLookUpTable class for use in general look-up cases (not only progress variable-enthalpy).; Add dimension to CLookUpTable class to allow for quasi-3D interpolation (linear interpolation between two trapezoidal maps stacked in the third dimension).; ; I added a unit test as a test case with the quasi-3D table to show the correct use of syntax for 3D look-up operations. ## Related Work; Can be used in feature_multilayer_perceptron in the CDataDrivenFluid fluid model for look-up operations. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1825:718,guid,guide,718,https://su2code.github.io,https://github.com/su2code/SU2/pull/1825,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; Hello to everyone,; I added a tutorial for the actuator disk with variable load in the Tutorials repository.; Because of this I changed the regression tests moving from parallel_regression.py to tutorials.py.; Hope this could be useful. ## Related Work; PR from SU2 repository: #1027; PR from su2code.github.io repository: #44; PR from Tutorials repository: #4. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1128:606,simpl,simply,606,https://su2code.github.io,https://github.com/su2code/SU2/pull/1128,1,['simpl'],['simply']
Usability,"## Proposed Changes; Hello to everyone,; I would like to propose a slight change in the Actuator Disk with Variable Load function. The change consists in re-writing the computation of the axial, radial and tangential force coefficients by developing the advance ratio term. In this way it is possible to eliminate the explicit dependence with the free-stream velocity.; Thanks to this change, it is possible to simulate the hover condition (free-stream velocity equal to zero) since we eliminated the free-stream velocity from the denominator.; ; In addition, we do not need the input of the advance ratio J, but the RPM of the propeller. This is a draft PR since a validation is needed and will be provided soon. Regards,; Ettore.; TAARG, University of Naples Federico II. ## Related Work; #1027 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1648:1022,simpl,simply,1022,https://su2code.github.io,https://github.com/su2code/SU2/pull/1648,1,['simpl'],['simply']
Usability,"## Proposed Changes; Hello to everyone,; my research group and I are working on the implementation of the CGNS output format.; We think that this could be an useful feature. For the moment, in order to provide the output file in CGNS format you should choose `CGNS` in the `OUTPUT_FILES` option.; This is a first implementation that will need some improvements.; We hope that this could be useful. Authors: Ettore Saetta, Lorenzo Russo, Renato Tognaccini.; TAARG (Theoretical and Applied Aerodynamics Research Group), University of Naples Federico II. ## Related Work. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1131:792,simpl,simply,792,https://su2code.github.io,https://github.com/su2code/SU2/pull/1131,1,['simpl'],['simply']
Usability,"## Proposed Changes; Here I am adding Sutherland's law for viscosity and thermal conductivity for NEMO problems using the native library. Experiments for these types of problems often are run using very low temperatures (~65K). Our current models aren't suited well for these temperature ranges. There is also some general clean up work in the still-not-working Gupta-Yos model and viscous numerics. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1702:572,guid,guide,572,https://su2code.github.io,https://github.com/su2code/SU2/pull/1702,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; Hi all, . This draft PR contains all work on composition dependent fluid properties for multicomponent flow. . What I did so far: . •	Implemented new CFluidScalar class (which inherits from CFluidModel) and can be accessed via a new fluid model: MIXTURE_FLUID_MODEL. ; •	Verified the current implementation by comparing with Fluent. ; •	Added regression test case for two component incomp_rans flow with variable fluid properties. . Future work:. •	Fix variable specific heat capacity and convergence issues in case of axisymmetric flow. ; •	Add possibility to have more than a single transported scalar (i.e. mixture containing more than two components). ; •	Remove flamelet implementation from feature_multicomp in order to have this work self-contained. **Note:** Currently this is a PR into feature_flamelet to make the diff easier. In case there are comments, ideas, foreseeable stepping stones from experience please let me know. . ## Related Work; #1223 by @danielmayer @bigfooted which feature_multicomp currently branches from. ; #1330 by @TobiKattmann which cuts the scalar transport necessary for this work out to merge it separately into develop. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1332:1352,guid,guide,1352,https://su2code.github.io,https://github.com/su2code/SU2/pull/1332,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; Hi all,. - Little change to make streamwise and spanwise periodic simulations possible (in CIncNSSolver.cpp). ; - Some cleanup in CConjugateHeatInterface; - Added a CFVMOutput class that only has a CommonFVMoutput for Volume output (COORD-XYZ (fresh addition), MESH_QUALITY, Multigrid visualization and RANK); - in the output folder(s) there were quite some wrong doxygen `\file <filename>`, i changed that. I renamed `CAdjFlowOutput.hpp` -> `CAdjFlowCompOutput.hpp` as the cpp as that name and that class as well.; - little changes/additions to unst CHT gradient validation case . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1290:775,guid,guide,775,https://su2code.github.io,https://github.com/su2code/SU2/pull/1290,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; Hi all,. The title gives it away. I imagine that piece by piece some commits are chipped in to remove more and more enum numbers. Like that it is more obvious if sth breaks because somewhere someone uses builds on knowing the actual number to do some shenanigans. ; Maybe just removing all in a big blow saves time bit #1220 already shows some limitations. I used the following command (for streamwise periodic in this case) and looked over the results whether I notice sth fishy. Not perfect but might help catchin some easy problems.; ```bash; grep -r 'NO_STREAMWISE_PERIODIC\|PRESSURE_DROP\|STREAMWISE_MASSFLOW\|Streamwise_Periodic_Map\|GetKind_Streamwise_Periodic' SU2_CFD SU2_DOT SU2_GEO SU2_DEF Common --include=*cpp --include=*hpp --include=*inl; ```. So feel free to commit your removals in here and if it breaks and one doesn't want to search for it just revert that and mention the specific enum so that no-one repeats that. Happy enum-removal . ## Related Work; @bigfooted mentioned that a couple of times and #1220 discusses some limitations. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1242:1299,simpl,simply,1299,https://su2code.github.io,https://github.com/su2code/SU2/pull/1242,1,['simpl'],['simply']
Usability,"## Proposed Changes; Hi all,. This PR adds the possibility to write ASCII STL files. Example usage:; `OUTPUT_FILES= (RESTART,PARAVIEW, STL, ...)`; All surfaces in `MARKER_PLOTTING` will be used, just like the surface files. The major problem was to re-process the element connectivity for parallel cases from what the data available after the parallel data sorter does its thing. You'll notice that in the `CSTLFileWriter.cpp` : Part of the code was copied over from the TecIO stuff and modified to our needs. The code probably could be nicer and it could be better documented, but I already forgot some details and it most likely would still be a mess to understand. Big thanks to @talbring for making this code work. I added a simple regression test by `diff`ing against a reference stl-file from in the Testcases repo. I'll add that information [on the website here](https://su2code.github.io/docs_v7/Custom-Output/) once this PR is merged. ## Related Work; Resolves issue #694 (which was marked stale and was closed in the meantime). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/847:729,simpl,simple,729,https://su2code.github.io,https://github.com/su2code/SU2/pull/847,2,"['guid', 'simpl']","['guide', 'simple']"
Usability,"## Proposed Changes; Hi all,. This PR implements a passive species transport solver. The passive means, that the mass fraction at each location does not influence any fluid-properties and thereby the mean flow (which reminds me that this is a good sanity check to compare mean flow residuals). A new `CSpeciesSolver` and `CSpeciesVariable` were added based on the `CScalar*` things done in #1330 . Additionally `species_convection/diffusion/sources` were added just as it is the case for the turbulence solver (both based on the general scalar* framework). Please note that prob ~1000 lines are cfg's, README's, helping scripts. . ## Related Work; Preliminary work was done in #1330 with creating a base class for scalar transport equations. #1223 and #1332 already mostly implement the here shown species solver and big chunks were copied over from there, but they are not based on the new CScalarSolver. In order to chunk the work for these branches this PR will not contain any species mixing properties or TableLookUps. . After this PR #1332 will be tackled next. Whether we try to merge develop then into those branches or copy stuff over in a new branch will be seen when we get there. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1388:1415,simpl,simply,1415,https://su2code.github.io,https://github.com/su2code/SU2/pull/1388,1,['simpl'],['simply']
Usability,"## Proposed Changes; Hi all,. volume heatflux output is not non-dimensional which is inconsistent with how the rest of volume output is handled.; Note that the History outputs (like TOTAL_HEATFLUX over a bunch of surfaces) is re-dimensionalized -> Apparently that hasn't bothered too many people until now but generally that might be sth we/I want to change (?) Let me know. I fixed it in a way that follows the current convention. In CConjugateHeatInteface.cpp the required heat_flux is (re)computed on its own so I do not expect a problem there but I will check manually as well; - [ ] Reminder Checkmark to actually do so; If there is other places which might be affected let me know. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2109:974,Guid,Guide,974,https://su2code.github.io,https://github.com/su2code/SU2/pull/2109,1,['Guid'],['Guide']
Usability,"## Proposed Changes; Hi all,; Following a bit the idea of #942 this PR mostly gets rid of stuff. - `WRT_RESIDUALS` unused; - `WRT_LIMITERS` unused; - `WRT_CON_FREQ_DUALTIME` only used in legacy output ... so I thought I just go for it; - removed `SetMeshFile` function as it not used anywhere and CSU2MeshFileWriter is the new cool kid on the block 🛴 ; - Added some options to the config_template which were missing; - Added output of the mpi rank to volume output of (in-)compressible and heat solver. I used that for debugging mostly but it might be interesting for others as well. Yes yes I know, one could think of putting COORDS, MESH_QUALITY (except for FEM) and now RANK into a centralized place to avoid duplication... next PR... I promise ... maybe; - and a few tiny things; - EDIT: yeah and some more options after my initial PR, see CConfig.cpp in `files changed` for all. There is a lot of other things to deprecate so feel free to add here. I have to check the tutorials for these options as well... ✔️ done and open PR (see below) but not merged yet to wait for reviews. This fails to reg tests of tutorials. (p.s. github now has a dark mode, which makes writing this on Thursday nights much nicer 🕶️). ## Related Work; none. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary. **not necessary**; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. **not necessary**",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1129:1463,simpl,simply,1463,https://su2code.github.io,https://github.com/su2code/SU2/pull/1129,1,['simpl'],['simply']
Usability,"## Proposed Changes; Hi all,; I have implemented the PGOmega S-A turbulence model(TM) which is proposed by Xiao He(2022). This TM enables us to get a more accurate prediction of stall margin which is very important in turbomachinery. This TM has been used in the simulations of ROTOR67, TUDarmstadt single stage compressor, and the validation work is shown in GPPS 2024 conference.; I also added the option related in configuration file.; The paper related is ""He, X., Zhao, F., and Vahdati, M. (September 19, 2022). ""A Turbo-Oriented Data-Driven Modification to the Spalart–Allmaras Turbulence Model."". ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2354:776,guid,guide,776,https://su2code.github.io,https://github.com/su2code/SU2/pull/2354,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; Hi everyone! I am starting to implement the Simplified version of the Langtry-Menter transition model following the work in https://doi.org/10.2514/6.2012-672. More updates will follow. ## Related Work; This follows the implementation of the LM model as #1751. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1901:65,Simpl,Simplified,65,https://su2code.github.io,https://github.com/su2code/SU2/pull/1901,2,"['Guid', 'Simpl']","['Guide', 'Simplified']"
Usability,"## Proposed Changes; Hi, . A small one: For 1 zone heat equation, the primal restart for the adjoint run was missing the solution reset after the CLEAR_INDICES run. Additionally I added a output_precision to the primal Residual Table for the adjoint. My recommendation is to set OUTPUT_PRECISION= 12 (because that is the fixed field Width of the table) and compare those screen residuals to the history output of the comparing primal simulations. I noticed this problem while looking at non-perfect restarts for CHT cases, which I am currently still debugging. I will make an issue for that soon (Edit #1395 ). Note though that the discrepancies seem subtle and a gradient comparison with FD shows and showed good agreement in the past. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1394:960,simpl,simply,960,https://su2code.github.io,https://github.com/su2code/SU2/pull/1394,1,['simpl'],['simply']
Usability,"## Proposed Changes; Hi, I found some problems with the implementation of the SA-NEG and SA-NEG-R models wrt to what is described on TMR. Plus, I found a suggestion on the computation of the SHat variable to avoid clipping for negative values (also reported on TMR).; . ## Related Work; - Implementation of new computation of SHat (Jacobian was computed by hand and is somewhat complex. Probably I could derive a simplified formulation); - Added CRot constant for SA-R model; - Modified computation of var.S for the combination SA-NEG-R; - Slightly change the computation of muT from nu_tilde: now muT = 0 if nu_tilde <0. Before it was muT = max(muT, 0.0), which should not always coincide with nu_tilde > 0.; - Not related to SA: added viscous drag as output in the history file. . I should also try to add the maximum value of nu_tilde within the mesh to the history file, although I still have to implement it. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2014:413,simpl,simplified,413,https://su2code.github.io,https://github.com/su2code/SU2/pull/2014,2,"['Guid', 'simpl']","['Guide', 'simplified']"
Usability,"## Proposed Changes; Hi, I noticed that the mesh quality metrics are not available in the current output structure, so here they are. ; I removed WRT_MESH_QUALITY and just check&set in the configs postprocessing routine.; Compressible, Incompressible, Heat and Mesh Output are added here as the FEM solvers dont have the dual grid as stated in the original PR. . **Bonus issue:** I noticed that Coordinates are not written in the Volume Output for the cases I tested (also the Quickstart) but haven't really figured out why yet. Doesn't matter whether VOLUME_OUTPUT is set with COORDINATES or not at all. I will look into this again but if you have a hint that would be appreciated💐 **Edit:** of course they are written implicitly otherwise on couldn't open a visu file but what do we have the volume output field COORDINATES for then? Maybe I am just blind, but this is not really part of this PR anyway. Cheers, Tobi. ## Related Work; Initial implementation #778 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1104:1190,simpl,simply,1190,https://su2code.github.io,https://github.com/su2code/SU2/pull/1104,1,['simpl'],['simply']
Usability,"## Proposed Changes; I added new output file formats. First of all support for the VTK XML file format ([see this pdf](https://vtk.org/wp-content/uploads/2015/04/file-formats.pdf)) (file ending *.vtu). This adds support for possible compression, portable binary encoding, random access, big endian and little endian byte order, multiple file representation of piece data. I made this the new default format if `PARAVIEW` has been added to `OUTPUT_FILES`. The old *.vtk format can still be used with `PARAVIEW_LEGACY`. However, the main reason for this new format is that it is required for new Multiblock file (*.vtm) output. This file is a simple XML file which defines a data hierarchy in order to represent individual parts of the domain (which are stored as *.vtu files). With this it is possible to directly select and visualize the solution in individual zones and/or on boundaries. This new format can be enabled with `PARAVIEW_MULTIBLOCK` as value for `OUTPUT_FILES`. At the moment all boundaries are written, I might add an option to disable/enable some of them (maybe re-using the `MARKER_PLOTTING` option). In order not to cluster the working directory, the individual *.vtu files are placed in subfolders, since they are more or less opaque to the user. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/845:641,simpl,simple,641,https://su2code.github.io,https://github.com/su2code/SU2/pull/845,2,"['guid', 'simpl']","['guide', 'simple']"
Usability,"## Proposed Changes; I am going through the CConfig.cpp file and adding all the options to config_template.cfg that are not there yet.; I have found some options that do not seem to be used in the code, I will remove them.; There are probably also options in config_template.cfg that do not exist anymore, I will remove them as well. ; ## Related Work. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1934:639,Guid,Guide,639,https://su2code.github.io,https://github.com/su2code/SU2/pull/1934,1,['Guid'],['Guide']
Usability,"## Proposed Changes; I changed the wall distance computation so that it correctly incorporates also viscous walls in other zones. I am not 100% happy where it is implemented, but I have not found a better place for this computation. Furthermore this splits the nice indepedent preprocessing routines in the driver constructor. Nevertheless, I think it should be fine. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/924:540,guid,guide,540,https://su2code.github.io,https://github.com/su2code/SU2/pull/924,1,['guid'],['guide']
Usability,"## Proposed Changes; I discovered that the Aachen regression test was actually on its way to divergence. I think this explains why the regression test was behaving inconsistently, although I'm not sure about what caused this problem. I made a new mesh, introduced wall functions as suggested by @joshkellyjak, and switched to second order directly. ; The convergence history is good. See the attached convergence histories obtained with JST starting from scratch with outlet pressure ramp.; ![conv_hist_rotor1](https://github.com/user-attachments/assets/ec30422a-2d31-474e-8b1f-808b95f50599); ![conv_hist_stator1](https://github.com/user-attachments/assets/5f4b27d4-f849-47ef-9ae3-474e18bbd5ce); ![conv_hist_stator2](https://github.com/user-attachments/assets/4f89a191-45bd-47d0-acfc-a384409528c8). I have finally updated the restart files accordingly. ## Related Work; I think these small changes could fix the issues encountered in the past with this test case. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2367:1136,guid,guide,1136,https://su2code.github.io,https://github.com/su2code/SU2/pull/2367,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; I have been implementing for SU2 the radial basis function mesh deformation method with the selection of the control points using a greedy algorithm and a volume reduction technique to reduce the computational cost. The method can be used inside the shape optimization framework when calling SU2_DEF, keeping the standard ELA differentiated by codipack for the mesh sensitivity. ; References:; Abergo, Luca, Myles Morelli, and Alberto Guardone. ""Aerodynamic Shape Optimization Based on Discrete Adjoint and RBF."" Journal of Computational Physics (2023): 111951. M. Morelli, T. Bellosta, A. Guardone, Efficient radial basis function mesh deformation methods for aircraft icing, J. Comput. Appl. Math. (2021) 113492,. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1959:1057,guid,guide,1057,https://su2code.github.io,https://github.com/su2code/SU2/pull/1959,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; I have found it useful to be able to adaptively change deltaT using the Python wrapper -- this PR implements that functionality. Instead of `CDriver::GetUnsteadyTimeStep` returning `CConfig::GetTime_Step`, it was updated to return the actual dimensional timestep used in iterations. A new `CDriver::SetUnsteadyTimeStep` function was implemented that updates both `Delta_UnstTimeND` and `Delta_UnstTime` in `CConfig`. A new setter function for `Delta_UnstTime` had to be implemented to do this as well. A quick grep showed me that the only usage of `CConfig::GetTime_Step` appears to be in SU2_SOL, initialization, and outputting in the NonDimTable. However, I did see one usage of it here, which appears to be called every iteration:. https://github.com/su2code/SU2/blob/2c9fbb6cfc0f9dfbb4a1f6afb9cf5004c33b1c25/SU2_CFD/src/integration/CFEM_DG_Integration.cpp#L75. I can update that line if necessary to instead call `CConfig::GetDelta_UnstTime`. I don't _believe_ that there are any additional issues that may be arisen beyond this. ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2190:1249,guid,guide,1249,https://su2code.github.io,https://github.com/su2code/SU2/pull/2190,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; I just added a new folder in the Turbomachinery test cases, containing the configuration files for the Aachen turbine test case. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2158:419,Guid,Guide,419,https://su2code.github.io,https://github.com/su2code/SU2/pull/2158,1,['Guid'],['Guide']
Usability,"## Proposed Changes; I never found this scheme to be useful (not an improvement in either accuracy or robustness) and it is not used in any tests. MUSCL_FLOW= YES is currently ignored for centered schemes, if we ever want to change that it would lead to backward compatibility issues, since we now have a chance to break it, I'm disallowing setting MUSCL_FLOW= YES with centered schemes. . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1990:676,Guid,Guide,676,https://su2code.github.io,https://github.com/su2code/SU2/pull/1990,1,['Guid'],['Guide']
Usability,"## Proposed Changes; I removed the calls to SetConsVarGradient in NEMO. It was causing a segfault locally when running any viscous case, though I couldn't produce the issue on other machines. If anyone has an explanation, I'm all ears! These seem to be superfluous anyway. ## Related Work; This is a continuation of PR #1375. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1386:498,guid,guide,498,https://su2code.github.io,https://github.com/su2code/SU2/pull/1386,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; I think one sign was flipped in the Jacobian of the CHT boundary.; I replaced the isothermal BC for a stronger(?) alternative (flying by the seat of my pants here, if it's wrong let me know, but the solver converges better like this).; Fixes issues with deforming heat domains by generalising CDiscAdjMeshSolver::SetSensitivity to accept any solver as ""target"" (instead of considering always the ADJFLOW_SOL position in the solver container). ## Related Work; #951 ; #1061 ; (third time lucky I hope...). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1107:749,simpl,simply,749,https://su2code.github.io,https://github.com/su2code/SU2/pull/1107,1,['simpl'],['simply']
Usability,"## Proposed Changes; I tried to do something about the OF's that are not working with the python scripts.; If I got it right, the OF string needs to match the name used for history/screen output, at least to allow the automatically generated history map to be used. ## Related Work; #1075. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1167:513,simpl,simply,513,https://su2code.github.io,https://github.com/su2code/SU2/pull/1167,1,['simpl'],['simply']
Usability,"## Proposed Changes; Implemented updated turboperformance methods and adds improved history ouput of turboperformance variables to match screen output. ## Related Work; Follows on from removal of legacy output - https://github.com/su2code/SU2/pull/2003. Implements improved turboperformance calculations used in feature_turbomachinery_restruct_singlezone - https://github.com/su2code/SU2/pull/1316. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2011:685,Guid,Guide,685,https://su2code.github.io,https://github.com/su2code/SU2/pull/2011,1,['Guid'],['Guide']
Usability,"## Proposed Changes; Improve the configuration file for the turbulence_models SA Neg test case. With this new config file we should be better able to detect bugs in the code. For instance, with this new config file and number of iterations for the regression test, we will be able to detect bd4021020147e8e03d519cad2ddbaeef10c0bf3d. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1559:556,simpl,simply,556,https://su2code.github.io,https://github.com/su2code/SU2/pull/1559,1,['simpl'],['simply']
Usability,"## Proposed Changes; Improvements in CoDiPack make hybrid AD tape evaluations slightly faster. ## Related Work; follow-on PR for #2208 . ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2228:423,Guid,Guide,423,https://su2code.github.io,https://github.com/su2code/SU2/pull/2228,1,['Guid'],['Guide']
Usability,"## Proposed Changes; Improvements to time averaged history output for dynamic multizone problems, which now also include the structural zone. The averaging logic has been updated to include values only for the final solution in each time iteration. To test the fixes in this PR, time averaged history output has been added to the existing dynamic fsi test case. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1259:551,guid,guide,551,https://su2code.github.io,https://github.com/su2code/SU2/pull/1259,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; In `SU2/meson.build`, specify the version of the C standard used when compiling SU2, as C99. It must be at least C99 because of the for loop initial declarations in `externals/cgns/cgnslib.c`. (One could probably use a newer C standard as well.). This change was necessary to compile SU2 on a system where `cc` is the GCC 4.8.5 (from 2015), which used `-std=gnu89` by default. ## Related Work; The change was not necessary in v7.1.0. I suppose it has something to do with the recent CGNS updates (#1500, #1507, ...). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1532:710,guid,guide,710,https://su2code.github.io,https://github.com/su2code/SU2/pull/1532,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; In current release of SU2, having, for example, a `MARKER_ISOTHERMAL=(marker, 300)` and `MARKER_PYTHON_CUSTOM=(marker)` causes the BC temperature to be set to a _nondimensional_ value of 300, which is inconsistent with what that marker's value is supposed to mean. This can be seen being set here:. https://github.com/su2code/SU2/blob/b80e4ce0e4fd05afa136af0990a17dd619cdce42/Common/src/geometry/CGeometry.cpp#L2441-L2461. and called for example here:. https://github.com/su2code/SU2/blob/b80e4ce0e4fd05afa136af0990a17dd619cdce42/SU2_CFD/src/solvers/CNSSolver.cpp#L712-L714. This PR nondimensionalizes any custom boundary temperatures or heat fluxes appropriately so that any setting of them does not need to be nondimensionalized manually before, both in `MARKER_ISOTHERMAL` and `MARKER_HEATFLUX` **and** in any Python code setting values of them. ## Related Work; None that I am aware of. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2078:1084,guid,guide,1084,https://su2code.github.io,https://github.com/su2code/SU2/pull/2078,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; In order to structure the construction of the solvers a little bit and to remove the dependency of the driver on the solver, I created a static solver factory class. There are routines to create individual instances as well as the whole container. It should be much easier now to see what position in the containers are actually allocated for the different solvers. The `createSolver` routine is a generic one that simply calls `new`. The others have some additional checks or calls for the construction. The idea here was to remove any `if` statements in the `createSolverContainer` routine to ease readability. . If everybody agrees, we could use a similar structure for other classes as well. Let me know what you think. Note from TobiKattmann: This PR depends on #861 . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/881:436,simpl,simply,436,https://su2code.github.io,https://github.com/su2code/SU2/pull/881,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; In some cases we use relative frame for rotor zone to perform URANS, e.g., in aeroelasticity analysis, we want the grid movement comes only from blade deformation. The problem is that the sliding plane in SU2 works only for absolute frame. In relative frame, the grid is not rotating, so the interpolation at sliding interface is not changed as time step is marching. The proposed changes rotate the sliding interface in accordance with physical time steps to perform interpolation. This function is activated only for relative frame. The grid itself is not rotating.; Currently, this is only implemented in CNearestneighbor class, other interpolation method should be changed as well in the near future. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2311:1046,guid,guide,1046,https://su2code.github.io,https://github.com/su2code/SU2/pull/2311,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; Initialize the omp_partitions vector with the number of points, skip the for loop if the last partition has been calculated. A light-weight checker is added also to verify the partition vector, promote a warning or error message if necessary.; . ## Related Work; Fix #1667 Potential crash for the OpenMP multi-thread running. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1678:519,guid,guide,519,https://su2code.github.io,https://github.com/su2code/SU2/pull/1678,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; Instead of computing transposed matrix vector products, which are harder to parallelize with OpenMP, and having special handling for transposed preconditioners, the matrix is transposed in place, then any preconditioner can be applied.; Some tweaks to support better Krylov discrete adjoint. ## Related Work; #1214. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1228:560,simpl,simply,560,https://su2code.github.io,https://github.com/su2code/SU2/pull/1228,1,['simpl'],['simply']
Usability,"## Proposed Changes; Introduce a ""matrix view"" type to avoid ** for example when passing gradients of primitives into the numerics. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1312:355,simpl,simply,355,https://su2code.github.io,https://github.com/su2code/SU2/pull/1312,1,['simpl'],['simply']
Usability,"## Proposed Changes; Introduction of mixture fraction transport equation to flamelet species solver. This allows for solving partially premixed, laminar combustion problems with heat transfer. The controlling variable names are generalized and have to be specified in the configuration file, such that they can be matched to the controlling variable names in the table. ; Additionally, the output writing for the flamelet variables has been generalized such that it can generate all the necessary outputs for any number of controlling variables.; . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2057:738,guid,guide,738,https://su2code.github.io,https://github.com/su2code/SU2/pull/2057,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; It had mpi problems and others: https://www.cfd-online.com/Forums/su2/236677-mpi-returns-wrong-objective-function-values.html. The target Cp file was also not formatted correctly, the residuals will change because of that. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1311:467,simpl,simply,467,https://su2code.github.io,https://github.com/su2code/SU2/pull/1311,1,['simpl'],['simply']
Usability,"## Proposed Changes; Just small changes suggested by @TobiKattmann (Thank you) in #1357. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1359:312,simpl,simply,312,https://su2code.github.io,https://github.com/su2code/SU2/pull/1359,1,['simpl'],['simply']
Usability,"## Proposed Changes; Just your periodic small xcode update, including header search update for mel.hpp. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x ] I am submitting my contribution to the develop branch.; - [x ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x ] My contribution is commented and consistent with SU2 style.; - [ n/a] I have added a test case that demonstrates my contribution, if necessary.; - [ n/a] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1535:276,guid,guide,276,https://su2code.github.io,https://github.com/su2code/SU2/pull/1535,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; Keep track of which points have been moved. ## Related Work; closes #2215 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2216:269,guid,guide,269,https://su2code.github.io,https://github.com/su2code/SU2/pull/2216,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; Leaks and stuff, @WallyMaier I did not check if the method is implemented correctly, looked decent on the naca0012. ## Related Work; fix #1161. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1166:388,simpl,simply,388,https://su2code.github.io,https://github.com/su2code/SU2/pull/1166,1,['simpl'],['simply']
Usability,"## Proposed Changes; Let NdFlattener use a wrapped [MPI_Allgatherv](https://www.mpich.org/static/docs/v3.2/www3/MPI_Allgatherv.html) function which checks the number of participating MPI ranks. If there is only one, perform a simple copy operation instead. I hope that this fixes #1893, which I believe to be the result of a bug in MPICH. In my Ubuntu MPICH container, the `[NdFlattener]` test succeeds with these changes. . ## Related Work; #1893 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1897:226,simpl,simple,226,https://su2code.github.io,https://github.com/su2code/SU2/pull/1897,3,"['Guid', 'guid', 'simpl']","['Guide', 'guide', 'simple']"
Usability,"## Proposed Changes; Minor revision on the header file path. ; ; ## Related Work; May resolve a building issue at building SU2_GEO. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2084:304,guid,guide,304,https://su2code.github.io,https://github.com/su2code/SU2/pull/2084,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; Minor update to the output of the elasticity adjoint solver. . ## Related Work; I'm working on some tutorials related to this for version 7.0.3. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/901:338,guid,guide,338,https://su2code.github.io,https://github.com/su2code/SU2/pull/901,1,['guid'],['guide']
Usability,"## Proposed Changes; Move a few files, mainly mpi_structure.hpp, remove the .inl and make the mpi functions const correct according to the modern versions of the MPI standard.; Compilation with ancient MPI will probably need -fpermissive. ## Related Work; #583 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1133:486,simpl,simply,486,https://su2code.github.io,https://github.com/su2code/SU2/pull/1133,1,['simpl'],['simply']
Usability,"## Proposed Changes; Move from CGeometry to an interpolation class (solves the ""numerical recipes problem"", let's not do that again...). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1303:360,simpl,simply,360,https://su2code.github.io,https://github.com/su2code/SU2/pull/1303,1,['simpl'],['simply']
Usability,"## Proposed Changes; Move more routines to the FVM flow solver base class.; At the risk of sounding like a broken record, one function means:; One test, one optimization, one debug, one fix.; Implementing new features by copy-paste-modify is like eating your legs to get to the end of a marathon, it ain't gonna work in the long run xD; Cut, Paste, Abstract, Survive. ## Related Work; #1044. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1177:615,simpl,simply,615,https://su2code.github.io,https://github.com/su2code/SU2/pull/1177,1,['simpl'],['simply']
Usability,"## Proposed Changes; Multi-passage or full-annulus simulation is very important for turbomachinery case. For example, say one wants to simulate the circumferential features like rotating-stall or inlet distortion effect. Usually one first conducts single-passage RANS computation, then starts multi-passage or even full-annulus URANS from that converged single-passage solution. To do this in SU2, one meets two problems:; 1) Replicate the single-passage grid to user-defined number of passages (including full-annulus); 2) Replicate the single-passage solution. The proposed changes solve the two above mentioned problems.; This function is one of a series of features that enable SU2 to run URANS for turbomachinery cases, which have been shared to the SU2-Turbo group recently. ; This function has been used for my research for almost one year. If necessary, I could add simple test cases as well. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2312:874,simpl,simple,874,https://su2code.github.io,https://github.com/su2code/SU2/pull/2312,3,"['Guid', 'guid', 'simpl']","['Guide', 'guide', 'simple']"
Usability,"## Proposed Changes; New output to visualize the coarse grids.; It is based on coloring nodes, which is a little difficult to visualize with Paraview since it interpolates to elements, anyway:; ![image](https://user-images.githubusercontent.com/38071223/115119619-4ae4ed00-9fa1-11eb-8974-5cd6000c5b21.png). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1266:530,simpl,simply,530,https://su2code.github.io,https://github.com/su2code/SU2/pull/1266,1,['simpl'],['simply']
Usability,"## Proposed Changes; On the RANS onera m6 case (43k hex grid) the tape for the geometric recording becomes 13% smaller by:; - Computing element CG's together with their contributions to the dual volumes and edge normal vectors;; - Using preaccumulation ""per element"" instead of for each of the individual computations done for each element. On the hybrid grid for the same geometry we have in TestCases the reduction is 32%. Some additional memory reduction is achieved by not storing the primal element face CG's and the edge CG's, these are only needed when building dual volumes and they are easy to recompute with the data already accessed where they are currently needed. ## Related Work; #594. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1159:923,simpl,simply,923,https://su2code.github.io,https://github.com/su2code/SU2/pull/1159,1,['simpl'],['simply']
Usability,"## Proposed Changes; OpDiLib update.; . ## Related Work; Fixes #1368. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1369:242,guid,guide,242,https://su2code.github.io,https://github.com/su2code/SU2/pull/1369,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; Optimization of the Preprocessing phase;; Inclusion of the Chapmann-Enskog option for Mutation++. ## Related Work; None. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X ] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ X ] I have added a test case that demonstrates my contribution, if necessary.; - [ X ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Work Performed. I have reduced almost by half the time of the preprocessing phase, leading to a ~10% less time per iteration. This was done by:; * Calculate dPdU, dTdU, dTvedU only for the implicit case; * Avoid the calculation of eve_min and eve_max using Mutation++. Instead, return nonphysical if the vibrational temperatures reach the specified minimum and maximum value. Additionally, I have included the option of using Chapmann-Enskog for the calculation of transport equations and thermal conductivity using Mutation++",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1343:314,guid,guide,314,https://su2code.github.io,https://github.com/su2code/SU2/pull/1343,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; Pointers are pure evil. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1225:268,simpl,simply,268,https://su2code.github.io,https://github.com/su2code/SU2/pull/1225,1,['simpl'],['simply']
Usability,"## Proposed Changes; Prior to this PR, tape statistics were collected and printed for the tape of thread 0 of rank 0, with special handling for the memory usage of thread 0, which was reduced across MPI processes. This PR extends this to also take OpenMP parallel parts into account (threads other than thread 0), and reduces everything (not only used memory) across MPI processes. ## Related Work; any prior work on hybrid AD. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2235:714,Guid,Guide,714,https://su2code.github.io,https://github.com/su2code/SU2/pull/2235,1,['Guid'],['Guide']
Usability,"## Proposed Changes; Provide a function `CNumerics::ComputeStressTensor` to compute the laminar and turbulent stress tensor. Replace the code blocks currently computing it, which exist at many locations inside the code, by function calls. ## Related Work; ?. ## To be discussed; Is CNumerics the best location for this function? . 4 of the 5 `rans_uq` regression tests fail (in addition to those that failed before the change already). This seems to be due to floating-point errors in `CSourcePieceWise_TurbSST::SetReynoldsStressMatrix`, `CAvgGrad_Base::SetReynoldsStressMatrix`. These little deviations (relative difference around 1e-16) are probably amplified over the 10 iterations, so that the solver takes a notably different path to the steady state solution and the intermediate logarithmic residuals differ. I checked (for the `1c` and `2c` test cases) that the converged solutions are nearly equal though. (I can supply vtu files and plots if requested.); Should I update the stored residual values in `serial_regression.py` then?. Also I am not sure whether I have found all code blocks that can be replaced by the new function. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1127:1311,guid,guide,1311,https://su2code.github.io,https://github.com/su2code/SU2/pull/1127,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; Radial Basis Function interpolation for zone to zone transfer without matching meshes.; Main purpose is to use it with the FSI solvers, direct and adjoint. . ## Related Work; Also:; Adds under-relaxation to the adjoint FSI solver to facilitate convergence of strongly coupled problems.; Fixes missing turbulence solver dependencies.; Adds fluid node sensitivities to the output (before they were not set). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/555:599,guid,guide,599,https://su2code.github.io,https://github.com/su2code/SU2/pull/555,1,['guid'],['guide']
Usability,"## Proposed Changes; Re-adding required files for test case VV sandia jet and changed regression.yml to get residual values required for vandv.py; @bigfooted @Cristopher-Morales. (This PR is created to get the residual values for the vandv.py script.); . ## Related Work. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2100:558,Guid,Guide,558,https://su2code.github.io,https://github.com/su2code/SU2/pull/2100,1,['Guid'],['Guide']
Usability,"## Proposed Changes; Recompute rho and h instead of reconstructing (for performance). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2356:372,Guid,Guide,372,https://su2code.github.io,https://github.com/su2code/SU2/pull/2356,1,['Guid'],['Guide']
Usability,"## Proposed Changes; Reduce duplication and maybe make it a bit faster. We were reading the entire mesh file in four passes (open-close, open-close, ...) one for metadata (NDIME, NELEM, etc.) one for points, one for elements, and then one for markers.; Now we have a maximum of 2 (meta + reading) and if the points are listed before the elements we do it in 1 pass (there are some meshes like that in TestCases).; If we need to split actuator disk surfaces there are more passes, don't ask me how many because I'm not going to touch that function (it is probably not used often). We still do a lot of reading for single-file multizone meshes to get to each zone, and usually we put smaller meshes at the end right :sweat_smile: I won't get into that now. ## Related Work; #1345 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1361:1003,simpl,simply,1003,https://su2code.github.io,https://github.com/su2code/SU2/pull/1361,1,['simpl'],['simply']
Usability,"## Proposed Changes; Register TauWall as preaccumulation input. ## Related Work; #1204 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1374:261,guid,guide,261,https://su2code.github.io,https://github.com/su2code/SU2/pull/1374,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; Regression tests will fail (code will not compile) on pedantic warnings, i.e. -Wall -Wextra -Wpedantic -Werror; For external libraries many warnings were manually disabled, because I don't know a better way of not having -Werror defined for them via meson. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1203:501,simpl,simply,501,https://su2code.github.io,https://github.com/su2code/SU2/pull/1203,1,['simpl'],['simply']
Usability,"## Proposed Changes; Remove `CSolver::Convective_Residual`, as it does nothing and no derived class overrides it. There is one call in `CIntegration.cpp`, which I would like to replace by an error message. . Note that in the present version, usage of `numerics[CONV_TERM]` would not be thread-safe, it should be `numerics[CONV_TERM + omp_get_thread_num()*MAX_TERMS]` (see also #1214). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1222:557,guid,guide,557,https://su2code.github.io,https://github.com/su2code/SU2/pull/1222,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; Remove divergence terms from the source term, use 2003m by default. ## Related Work; Closes #1551. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2062:406,Guid,Guide,406,https://su2code.github.io,https://github.com/su2code/SU2/pull/2062,1,['Guid'],['Guide']
Usability,"## Proposed Changes; Remove some more duplication, fix some issues, and make the incompressible solvers compatible with OpenMP. ## Related Work; Fix #1175. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1178:379,simpl,simply,379,https://su2code.github.io,https://github.com/su2code/SU2/pull/1178,1,['simpl'],['simply']
Usability,"## Proposed Changes; Remove the legacy output and run turbomachinery cases with the single and multizone drivers.; The special turbomachinery outputs have been lost in the process but folks in the Turbo group are working on re-introducing them under the ""new"" (3 years old already :smile:) output classes. The harmonic balance driver loses very little, it only had one small special output file in the legacy output, we do not have one output per time instance and so the output from all instances is shown on screen and piped to the same history file.; I'm leaving it like this hoping that the vacuum sucks in some new development into HB in SU2.; ; ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2003:937,Guid,Guide,937,https://su2code.github.io,https://github.com/su2code/SU2/pull/2003,1,['Guid'],['Guide']
Usability,"## Proposed Changes; Remove ununsed multigrid options in cfg file of the new NACA 0012 fixed_values testcase and the SST_SUST testcase, and some other small changes. ## Related Work; Continuation of #1236, comments by @pcarruscag and @TobiKattmann . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1240:422,guid,guide,422,https://su2code.github.io,https://github.com/su2code/SU2/pull/1240,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; Remove unused `CPhysicalGeometry::Local_to_Global_Marker`, `Global_to_Local_Marker`; . ## Related Work; #1110. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1169:304,guid,guide,304,https://su2code.github.io,https://github.com/su2code/SU2/pull/1169,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; Remove use of `'U'` mode from Python `open()` function in TestCase.py. . ## Related Work; Issue #2170. Identifies test case that didn't run from `serial_regression.py`. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2171:362,guid,guide,362,https://su2code.github.io,https://github.com/su2code/SU2/pull/2171,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; Removing a couple unused variables to quash compiler warnings on Mac.; . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/702:283,guid,guide,283,https://su2code.github.io,https://github.com/su2code/SU2/pull/702,1,['guid'],['guide']
Usability,"## Proposed Changes; Replace references to the global MPI communicator `MPI_COMM_WORLD` with `SU2_MPI::GetComm()` where appropriate. This prevents deadlocking in cases where SU2 is given an MPI communicator other than `MPI_COMM_WORLD`, for example when creating an instance of `CDriver` through the Python interface. ## Related Work; Issue #1179 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1180:571,simpl,simply,571,https://su2code.github.io,https://github.com/su2code/SU2/pull/1180,1,['simpl'],['simply']
Usability,"## Proposed Changes; Replacement for a TecIO source file that does not compile with GCC version 9. Functionally identical, just contains shorter lines (more newlines).; . ## Related Work; None. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/692:366,guid,guide,366,https://su2code.github.io,https://github.com/su2code/SU2/pull/692,1,['guid'],['guide']
Usability,"## Proposed Changes; Restarted FGMRES was running to ""LINEAR_SOLVER_ITER"" once, instead of running to ""LINEAR_SOLVER_RESTART_FREQUENCY"" multiple times. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/557:324,guid,guide,324,https://su2code.github.io,https://github.com/su2code/SU2/pull/557,1,['guid'],['guide']
Usability,"## Proposed Changes; Run a bunch of loops to nPoint instead of communicating. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1181:301,simpl,simply,301,https://su2code.github.io,https://github.com/su2code/SU2/pull/1181,1,['simpl'],['simply']
Usability,"## Proposed Changes; Setting MUSCL reconstruction in CNEMOEulerSolver to use the minimum limiter val for all primitives, consistent with the feature_NEMO branch, to try and address issues with non-physical points using MUSCL with the NEMO solver in Develop.; . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1428:450,guid,guide,450,https://su2code.github.io,https://github.com/su2code/SU2/pull/1428,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; Should not be multiplied by Roe kappa. ## Related Work; #2198 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2339:371,Guid,Guide,371,https://su2code.github.io,https://github.com/su2code/SU2/pull/2339,1,['Guid'],['Guide']
Usability,"## Proposed Changes; Single and Multizone driver now write restart files for last and second last iteration, if windowed time convergence happend and 2nd order time marching is active.; . ## Related Work; Solve issue #1211. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1237:396,guid,guide,396,https://su2code.github.io,https://github.com/su2code/SU2/pull/1237,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; Small PR to fix a memory leak in CConfig by deleting CFL_AdaptParam in the destructor.; . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1188:305,guid,guide,305,https://su2code.github.io,https://github.com/su2code/SU2/pull/1188,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; Small change in the way an airfoil section is created when the geometry is evaluated. Previously the slicing of the geometry would fail if there were quads on the surface. This PR fixes that and now geometries are correctly evaluated regardless of the type of element on the surface. . It has been tested on a set of oneraM6 grids with different surface elements. All Triangles:; ![image](https://user-images.githubusercontent.com/30271435/70572050-dbacec80-1b53-11ea-82ea-dcb236c3562d.png). Mix of Quads and Triangles; ![image](https://user-images.githubusercontent.com/30271435/70571972-b61fe300-1b53-11ea-8a14-275e9780eebc.png). Mostly Quads; ![image](https://user-images.githubusercontent.com/30271435/70572104-fb441500-1b53-11ea-8bf4-4990331651c4.png). Taking 25 cuts along the span for each of these meshes, the computed airfoil sections are identical. In the image below, you see the 25 slices of the wing taken from all three meshes. Each airfoil section has 3 lines overlaid lines (one from each mesh): . ![image](https://user-images.githubusercontent.com/30271435/70572309-6a216e00-1b54-11ea-8ea8-65df47f2fd78.png). ## Related Work; NA. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/835:1340,guid,guide,1340,https://su2code.github.io,https://github.com/su2code/SU2/pull/835,1,['guid'],['guide']
Usability,"## Proposed Changes; Small fix to add the rotating frame coefficients (CT, CQ and CMerit) to the output. ; ; ## Related Work; Issue #957 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/962:311,guid,guide,311,https://su2code.github.io,https://github.com/su2code/SU2/pull/962,1,['guid'],['guide']
Usability,"## Proposed Changes; Small fixes and replacing the last ** and *** in CEulerSolver. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1224:307,simpl,simply,307,https://su2code.github.io,https://github.com/su2code/SU2/pull/1224,1,['simpl'],['simply']
Usability,"## Proposed Changes; Small fixes for FFD deformation of FSI problem using SU2_DEF. . - SetMesh_Files which writes the output .su2 file was called only for single zone, which has now been changed to the number of zones in the problem. - When writing the output mesh, SetSU2_MeshASCII closes the file after the first zone but it doesn't get reopened for the second zone. This function is only called by SetMesh_Files in COutput, where the the output file is opened and closed by the master node, therefore it is not necessary to the close the output file inside SetSU2_MeshASCII. . - When writing the deformed surface for the structural mesh, the same file name as the original was used thus overwriting the original file. '_def' has been appended to the filename similar to the fluid only case. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x ] I am submitting my contribution to the develop branch.; - [x ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/617:1116,guid,guide,1116,https://su2code.github.io,https://github.com/su2code/SU2/pull/617,1,['guid'],['guide']
Usability,"## Proposed Changes; Small follow-on from #2039. Fixes two data races that did not affect the results but polluted the thread sanitizer findings (write-write for value that is not read and read-write for value that is overwritten with itself). ## Related Work; #2039. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2046:440,guid,guide,440,https://su2code.github.io,https://github.com/su2code/SU2/pull/2046,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; Small update of the Xcode project. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; None. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/832:382,guid,guide,382,https://su2code.github.io,https://github.com/su2code/SU2/pull/832,1,['guid'],['guide']
Usability,"## Proposed Changes; Small updates due to changes in libROM API (corresponds to PR https://github.com/LLNL/libROM/pull/80 ). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ x] My contribution is commented and consistent with SU2 style.; - [ n/a] I have added a test case that demonstrates my contribution, if necessary.; - [ x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1436:297,guid,guide,297,https://su2code.github.io,https://github.com/su2code/SU2/pull/1436,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; Some tests in the `parallel_regression.py` was running in serial with the `SU2_CFD` command this PR changes them to default (`mpirun -np 2 SU2_CFD`). . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1977:345,guid,guide,345,https://su2code.github.io,https://github.com/su2code/SU2/pull/1977,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; Sorry for the separate PR... we are working to include more solid solvers that can be used with the interface. This PR introduces few modifications that are required to include other solvers. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1363:436,simpl,simply,436,https://su2code.github.io,https://github.com/su2code/SU2/pull/1363,1,['simpl'],['simply']
Usability,"## Proposed Changes; Special signal handling for SIGTERM. When SIGTERM is sent to the solver, we catch it and simply exit the for-loop for the number of iterations. Files will then automatically be saved. ## Related Work; Related to Github discussion #2094 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2110:110,simpl,simply,110,https://su2code.github.io,https://github.com/su2code/SU2/pull/2110,3,"['Guid', 'guid', 'simpl']","['Guide', 'guide', 'simply']"
Usability,"## Proposed Changes; Test if the ASLR fix (#2241, #2242) is still needed. ASAN and TSAN tests pass without the fix, the issue has probably been fixed in the GitHub runner. ## Related Work; #2241, #2242. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2341:489,Guid,Guide,489,https://su2code.github.io,https://github.com/su2code/SU2/pull/2341,1,['Guid'],['Guide']
Usability,"## Proposed Changes; The CRot value was set to 1.0 for the HLPW5 but the standard value is 2.0 as suggested in TMR. Plus, there may be some inconsistencies with the negative branch of SA when used with the R variant. $\hat{S}$ should be used in the computation of the production term when $\hat{\nu}>0$. When $\hat{\nu}<0$, instead, the vorticity $\Omega$ should be used together with the $c_{t3}$ constant. Citing TMR:. ""This model is the same as the ""standard"" version (SA), except that the (SA-R) production term becomes: . $c_{b1}(1-f_{t2})[\hat{S}+C_{rot}min(0,S-\Omega)]\hat{\nu}$. ... However, a negative production term is not acceptable for the negative branch ($\hat{\nu} < 0$) of the (SA-neg) model. If coding (SA-neg-R), a possible C0 continuous production term in the negative (SA-neg-R) branch is the following: . $c_{b1}(1-c_{t3})[\hat{\Omega}+C_{rot}min(0,S-\Omega)]\hat{\nu}$. "". I don't understand if the second production term has to be used everytime SA-neg is considered or only at the points where $\hat{\nu}<0$. If it is already taken into account, then I'll modify the PR. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2352:1286,guid,guide,1286,https://su2code.github.io,https://github.com/su2code/SU2/pull/2352,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; The PR changes the current limiter routine with the NEMO solver from a conservative variable limiter scheme to limiting on the basis of the primitive variables. This also updates some routines within SU2-NEMO to look/behave/take advantage of the standard SU2 implementations. I also tried tried to remove any other compiler errors. ## Related Work; This was first done with the AUSM scheme by @fmpmorgado. ; This is working towards functional implicit and dual-time capabilities in SU2-NEMO. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1139:685,guid,guide,685,https://su2code.github.io,https://github.com/su2code/SU2/pull/1139,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; The RHS is defined as the residual instead of the force vector, this is required because in Solve_b the adjoints of the Jacobian are tacitly assumed to be 0, this assumption is only valid if the solution of the primal linear system is 0 and that only happens when the RHS is 0 (e.g. the residual of a converged problem).; In a nutshell linear elasticity is now done like nonlinear, i.e. compute 'delta U' instead of 'U' (even if we only need one 'delta U' in the direct solver). This led to changes in how the RHS for time domain problems is computed (I would appreciate a second pair of eyes especially on those changes).; This fix also adds support for multiple materials in linear elasticity simulations.; I will add a regression test for this if the fix is found to be good. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/571:972,guid,guide,972,https://su2code.github.io,https://github.com/su2code/SU2/pull/571,1,['guid'],['guide']
Usability,"## Proposed Changes; The ```CLookUpTable``` class allows for the fast interpolation of unstructured 2D data. It was found that the query time of this class scaled significantly with the number of output variables, indicating inefficiencies in the query process.; ; These inefficiencies came from string comparison routines in the ```GetIndexOfVar``` function of the ```CLookUpTable``` class. By implementing overloaded instances of the look-up functions which retrieve data from data indices directly, the query time efficiency scaling was significantly improved. . Also reduced duplicate code within the ```CLookUpTable``` class. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2214:803,guid,guide,803,https://su2code.github.io,https://github.com/su2code/SU2/pull/2214,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; The conjugate heat variables were not communicated properly between the flow and flamelet solver, resulting in the interface temperature between the fluid and solid to be always maintained at 300 kelvin for flamelet simulations. The changes mainly regard the recognition of the inclusion of energy for flamelet problems for the CHT methods, while in the flamelet solver, the conjugate variables are obtained from the flow solver instead of the flamelet solver itself. ; . ## Related Work; Related work includes the pull requests regarding the flamelet solver, as well as the related regression tests. The latter were obtained with this bug included, so the solution files have to be updated and the residual values in the regression tests have to be updated. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2067:954,guid,guide,954,https://su2code.github.io,https://github.com/su2code/SU2/pull/2067,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; The current code only applies the option WINDOW_START_ITER to the history output, but the flow vars are counted from the first step after the restart. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2251:492,guid,guide,492,https://su2code.github.io,https://github.com/su2code/SU2/pull/2251,4,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; The current file comparison that is used for regression tests, does not feature a possibility to specify a tolerance or a threshold. This PR implements such a feature and does not affect the existing regression tests.; . ## Related Work; Currently, there are no regression tests that make use of this feature and the PR does not include a new test that would use it. However, the feature_new_flamelet branch already uses this feature. This branch here is to split off the feature as it is not related to flamelet models but it is a general feature that can used for a variety of regression tests that use a file comparison. . ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [O] I have added a test case that demonstrates my contribution, if necessary.; - [O] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2031:933,Guid,Guide,933,https://su2code.github.io,https://github.com/su2code/SU2/pull/2031,1,['Guid'],['Guide']
Usability,"## Proposed Changes; The doc for `merge` says the function should be skipped if `NUMBER_PART > 1` . The if statement had a typo in it and my models were error in the function. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1739:365,guid,guide,365,https://su2code.github.io,https://github.com/su2code/SU2/pull/1739,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; The files of the external CGNS library included with SU2 are upgraded to 4.4 release.; This will allow reading files generated with recent version of CGNS that are currently rejected because SU2 included version is a bit old. ## Related Work; No issue created yet but some users did comment about it. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2179:494,guid,guide,494,https://su2code.github.io,https://github.com/su2code/SU2/pull/2179,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; The following members of `CHeatSolver` were allocated but never freed: `Primitive_Flow_i`, `Primitive_Flow_j`, `HeatFlux_per_Marker`, `AverageT_per_Marker`, `Surface_Areas`, `ConjugateVar`. I propose to correct this in the spirit of #1225, using containers (`std::vector`) instead of pointers. There is a bit of additional cleanup. ## Related Work; #1225 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1256:550,guid,guide,550,https://su2code.github.io,https://github.com/su2code/SU2/pull/1256,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; The is a first step in updating the output structure in order to make it a little bit more flexible and easier to maintain. The plan is to eventually have a consistent way of defining objective functions and/or define custom output quantities on individual surfaces. . I introduced a new structure to store scalar quantities for the history output. This makes it much easier to filter and loop through a specific subset of fields. Next step is to have per surface values stored in the same structure. Furthermore, creating structure to compute problem-specific outputs like aerodynamic coefficients, time-averaged quantities, surface quantities and so on. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/913:866,guid,guide,866,https://su2code.github.io,https://github.com/su2code/SU2/pull/913,1,['guid'],['guide']
Usability,"## Proposed Changes; The multizone discrete adjoint driver is extended for dynamic problems. A time loop is added to the multizone DA driver, with additional handling for the external container to store the intermediate values and cumulative sensitivities per time step. @TobiKattmann - the changes to the DA multizone driver have been kept generic, they should be transferrable for CHT problems. Adjoint gradients for both dynamic FSI and dynamic CHT have been verified against finite differences. Dynamic adjoint test case has been added similar to an existing steady FSI test. . ## Related Work; #1259 (time averaged history output); #1174 (velocity transfer at FSI boundary). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1260:852,guid,guide,852,https://su2code.github.io,https://github.com/su2code/SU2/pull/1260,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; The thread sanitizer analysis of the hybrid AD regression tests is clean, including the tests added in #1966. Given that the deviations observed in the CI pipeline (see #1980) are small, this is probably due to inherent non-determinism like varying orders of atomic updates on adjoint variables. This PR sets the tolerance of the recently added tests to the same tolerance that was already used for the other hybrid AD tests. . ## Related Work; #1966, fixes #1980. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1984:772,Guid,Guide,772,https://su2code.github.io,https://github.com/su2code/SU2/pull/1984,1,['Guid'],['Guide']
Usability,"## Proposed Changes; The velocity component used in the axisymmetric residual is now considered as an input for preaccumulation in the residual computation. When not considered, the use of axisymmetry and the SST model will result in wrong sensitivities when using the discrete adjoint method. I also wanted to note that there does not seem to be any treatment of axisymmetric cases for the SA model. Is this correct or does it make sense to include a warning? We could, for example, do that in the context of this pull request. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1571:703,guid,guide,703,https://su2code.github.io,https://github.com/su2code/SU2/pull/1571,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; The wall function model of Nichols and Nelson was basically implemented in the same way for the compressible and the incompressible solver. But for the incompressible solver, the frictional heating part does not make sense, so it is removed. In the compressible part, some lines have been moved to make comparison between the comp/incomp model easier. . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1741:564,guid,guide,564,https://su2code.github.io,https://github.com/su2code/SU2/pull/1741,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; There was a bug in the CTurbSolver::ComputeUnderRelaxation() that would return a negative UR if the change in solution was too negative (less than the allowable decrease), which could cause the solution to head in the wrong direction. I'm not really sure why the turbulent solver version of this function was written differently than the flow solver (maybe the intention was to have a different allowable increase and decrease but they ended up being the same in the end?), but I changed it to make it consistent with the flow solver version. Also, as I mentioned in #1036, the UR parameters for the flow solver and turbulent solver both took the min of each other and were never reset for steady, meaning it was non-increasing. While on the topic of UR, I was wondering what the community's thoughts are on changing the SST models to use UR instead of solution clipping. The limits seem somewhat arbitrary to me (is there a ref?), and the tests I've done on my mesh adaptation cases have performed well where I've replaced clipping with UR. I realize this is a very limited dataset so if anyone has any strong opinions of why we should be clipping, let me know. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1057:1356,guid,guide,1356,https://su2code.github.io,https://github.com/su2code/SU2/pull/1057,1,['guid'],['guide']
Usability,"## Proposed Changes; There were some merge issues in the previous pull request that were causing lots of issues in #2209. Hopefully this is resolved here. . Update to the interface initialisation to enable both mixing plane and sliding interfaces within the same turbomachinery simulation. Addition of mass flow outlet to Giles BC. ## Related Work. This issue solves a problem reported by a number of users, when simulating radial turbomachinery cases a second-order accurate solution cannot be achieved in some cases when using mixing plane interfaces. This is due to circumfrential averaging in regions where the flow exhibits large circumfrential nonuniformity and/or interspace gaps between adjacent blade-rows/zones small. This issue has been reported by @LorenzoFabris, in a presentation at the SU2 Conference 2022 ""Performance Analysis and Shape Optimization of a Radial Compressor with the Open-Source Software SU2"" and by myself. Mass flow outlet included in the PR as requested by users. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2349:1170,guid,guide,1170,https://su2code.github.io,https://github.com/su2code/SU2/pull/2349,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; These are rather smaller changes and fixes so that the unsteady multizone framework can be used for CHT. A test case together with a tutorial (mainly on how - and how easy it is - to turn a steady simulation into an unsteady one) will be added. ## Related Work; [Tutorial](https://github.com/su2code/su2code.github.io/pull/26); [Trailer on Youtube ;-)](https://www.youtube.com/watch?v=MqN8GalSyzk). @TobiKattmann @ScSteffen Please follow this so that we can set up Unsteady Adjoint CHT computations afterwards. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/854:704,guid,guide,704,https://su2code.github.io,https://github.com/su2code/SU2/pull/854,1,['guid'],['guide']
Usability,"## Proposed Changes; These are some minor bugfixes that I detected while preparing some tutorials for FEA. ## Related Work; I have prepared the following tutorials:; - [Linear Elasticity](https://su2code.github.io/tutorials/Linear_Elasticity/); - [Linear Dynamics](https://su2code.github.io/tutorials/Linear_Dynamics/); - [Nonlinear Elasticity](https://su2code.github.io/tutorials/Nonlinear_Elasticity/); - [Nonlinear Elasticity with Multiple Materials](https://su2code.github.io/tutorials/Multiple_Material/); - [Static FSI](https://su2code.github.io/tutorials/Static_FSI/). They could be linked to the main tutorials site as soon as these changes are included in a released version (e.g., 7.0.2). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/873:871,guid,guide,871,https://su2code.github.io,https://github.com/su2code/SU2/pull/873,1,['guid'],['guide']
Usability,"## Proposed Changes; These changes integrate MKL into SU2 linear algebra operations. The changes are guarded by a HAVE_MKL preprocessor flag, and require MKL 2019 Beta or newer, as they use the most recent features designed to optimize small matrix operations. Observe 18% performance improvement on Broadwell systems and 24% performance improvement on Skylake systems. Additionally, change adds call to memcpy in Gauss Elimination since overlapping source/dest would break functionality at a higher level, and memcpy improves performance. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary. -- Not necessary, existing tests cover functionality when HAVE_MKL flag is in place.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/542:712,guid,guide,712,https://su2code.github.io,https://github.com/su2code/SU2/pull/542,1,['guid'],['guide']
Usability,"## Proposed Changes; This PR addresses adding in the Jacobians for the NEMO convective, viscous and source terms. Much improvement and testing is still needed, but I was hoping to get feedback on some coding methodologies/strategies to avoid code bloat, etc. I would very much appreciate thoughts and feedback!. ## Related Work; This is a continuation of the recent NEMO improvements/modernization #1343 and #1347 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1356:184,feedback,feedback,184,https://su2code.github.io,https://github.com/su2code/SU2/pull/1356,4,"['feedback', 'guid', 'simpl']","['feedback', 'guide', 'simply']"
Usability,"## Proposed Changes; This PR adds Wall Model LES (and also Wall Resolved LES) capabilities to SU2. Several wall models were included, including the Equilibrium Algebraic and Adverse Pressure Gradient Wall Models. The Vreman and WALE with constant model coefficients are used to model the subgrid-scales but others SGS models can be easily added.; It is worth noting that the exchange location interpolation for the wall model inputs is not included here (see feature_WallModelLES branch). Thus, the wall model will use the information of the 1st grid point off the wall.; ; ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X ] My contribution is commented and consistent with SU2 style.; - [X ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1120:746,guid,guide,746,https://su2code.github.io,https://github.com/su2code/SU2/pull/1120,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; This PR adds the capability to simulate the AIR-7 gas model using SU2TCLib for viscous problems. Specific contributions include:; - Fix Gupta-Yos transport models for all flows (including ionized); - inclusion of Coulomb interaction cross sections for ion-ion collisions. Following the implementation detailed in Scalabrin's thesis. ## Related Work; PRs #1497 #1555 . Update to NEMO documentation includes description of GY model, see: https://github.com/su2code/su2code.github.io/pull/116. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1887:684,guid,guide,684,https://su2code.github.io,https://github.com/su2code/SU2/pull/1887,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; This PR adds the non-constant thermal conductivities to the NEMO output. ## Related Work; Discussion #1888 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1889:302,guid,guide,302,https://su2code.github.io,https://github.com/su2code/SU2/pull/1889,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; This PR automates the address sanitizer analysis that lead to the fixes in #2212. I'll make the additions step by step, to see if things in the CI pipeline work as expected. ## Related Work; https://github.com/su2code/Docker-Builds/pull/24, #2212, #2068, #2213. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2246:569,Guid,Guide,569,https://su2code.github.io,https://github.com/su2code/SU2/pull/2246,1,['Guid'],['Guide']
Usability,"## Proposed Changes; This PR breaks up the following files:; 1. grid_movement_structure; 2. adt_structure. It also gets rid of grid_adaptation_structure and the entire SU2_MSH module. These files have not be updated in a long time are are deprecated. None of the new work in mesh adaptation by @bmunguia uses any of these routines. . ## Related Work; #583 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1035:530,guid,guide,530,https://su2code.github.io,https://github.com/su2code/SU2/pull/1035,1,['guid'],['guide']
Usability,"## Proposed Changes; This PR changes the Area computation loops with the geometry toolbox. There may be better ways to include the ; toolboxes, and Im happy to change that around.; ; There is a still a lot of dot products, norms, etc. that can be updated. One step at a time. ## Related Work; General Maintenance work. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1137:493,guid,guide,493,https://su2code.github.io,https://github.com/su2code/SU2/pull/1137,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; This PR continues the CoDiPack 2 update #1903 after further testing. Fixes a data race. ## Related Work; #1903 . ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2009:420,Guid,Guide,420,https://su2code.github.io,https://github.com/su2code/SU2/pull/2009,1,['Guid'],['Guide']
Usability,"## Proposed Changes; This PR fixes a bug in the restart of problems which involve dynamic meshes and turbulence.; Given that the Grid Velocities are written in the restart files after the turbulence variables, the indices must me incremented when the restart file is being read in.; At this moment that does not happen, as the variable index is incremented but later reset, and therefore the GridVel container receives incorrect values. ## Related Work; -. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/618:629,guid,guide,629,https://su2code.github.io,https://github.com/su2code/SU2/pull/618,1,['guid'],['guide']
Usability,"## Proposed Changes; This PR fixes a couple issues in the nonlinear adaptive CFL scheme. - Convergence of the linear solver was assumed if the residual was greater than 0.5, which is quite large. I replaced this with the linear solver tolerance.; - The sum of nonlinear residuals was never computed for steady since `TimeIter` was used.; - The under-relaxation parameters for the flow solver and turbulent solver both took the min of each other and were never reset for steady, meaning it was non-increasing. @jayantmukho and I wanted to discuss more possible improvements to the scheme. I wanted to open this up before making any actual changes. - Currently there is a check for stalling residuals (the sum over 100 iterations of delta_Res must be > 0.1 Res), but this doesn't protect against increasing residuals. We should implement another check to prevent divergence.; - Instead of computing a single local CFL for flow/turbulence with a reduction factor for turbulence, maybe it would be better to have both solvers make their own call to `AdaptCFLNumber` and compute their own local CFL based on their own ResRMS. I feel like this would make more sense since the solvers are decoupled anyway. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1036:1372,guid,guide,1372,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036,1,['guid'],['guide']
Usability,"## Proposed Changes; This PR fixes a couple of bugs I found recently. I also adapted the config preprocessing output to reflect the new output and convergence criteria options. . Furthermore it fixes the artifacts mentioned by @TobiKattmann in #774 regarding the Heatflux sensitivity. . Feel free to add any other fixes that you might came across. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/798:537,guid,guide,537,https://su2code.github.io,https://github.com/su2code/SU2/pull/798,1,['guid'],['guide']
Usability,"## Proposed Changes; This PR fixes a couple of bugs identified in the incompressible solver:; - In the computation of the FDS fluxes, we need to use DensityInc_i and DensityInc_j in the computation of the preconditioner, instead of Density_i/Density_j, which are not initialized in the function.; - The per-surface output for heatflux and max heatflux was receiving information from an incorrect container. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/588:579,guid,guide,579,https://su2code.github.io,https://github.com/su2code/SU2/pull/588,1,['guid'],['guide']
Usability,"## Proposed Changes; This PR fixes an issue in the discrete adjoint multizone driver where adjoints are seeded before sufficient adjoint vector size is guaranteed, resulting in an objective function gradient of zero. The PR also contains other small fixes.; ; ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2112:546,Guid,Guide,546,https://su2code.github.io,https://github.com/su2code/SU2/pull/2112,1,['Guid'],['Guide']
Usability,"## Proposed Changes; This PR fixes small issues in the meson build system that I noticed during recent work on SU2.; 1. deprecation warnings about `meson.source_root()`; 2. an incorrectly displayed `ninja` command. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2093:501,Guid,Guide,501,https://su2code.github.io,https://github.com/su2code/SU2/pull/2093,1,['Guid'],['Guide']
Usability,"## Proposed Changes; This PR fixes the version numbers of files and test cases up to the 7.1.1. (Mostly in NEMO) All files should be consistent now, but I may have missed some. . I am not sure if the test cases were intentionally left old, but I can change that. EDIT:; After taking a look through, I used my best judgement regarding what is up-to-date. The biggest issue I had was in the sliding_interface sections where configs for Kind_Interpolation= Weight-Average and Nearest-Neighbor. In this case I assumed that these options or used interchangeably among test cases, that I can update both _NN and _WA. I did similar things for some SST vs SA options. Below are the only cases that Im not sure if they are being used/up-to-date with develop: . fea_fsi/SquareCyl_Beam/; incomp_rans/rough_wall/ [pretty sure this is up-to-date, but not used in regressions]; optimization_euler/steady_inverse_design/; sliding_interface/incompressible_unsteady/ [Commented out, so I left this one alone]; sliding_interface/single_stage/; turbomachinery/centrifugal_*/ . I also went ahead and removed:; rans/naca0012/*_sa_neg [SA_neg is already used in turb_NACA0012_sa.cfg] ?; rans/naca0012/*_sa_binary. ## Related Work; This is a chore. ## PR Checklist; - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x ] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1271:1451,simpl,simply,1451,https://su2code.github.io,https://github.com/su2code/SU2/pull/1271,1,['simpl'],['simply']
Usability,"## Proposed Changes; This PR goes in line with the driver reorganisation started in #585. At this time, it is the single-zone adjoint driver that is introduced, which inherits from the primal single-zone driver class. Problem properties are set at time of driver instantiation, and routines are mostly opaque to the physics (not yet completely as some further work is required in input/output). The functions are exposed to python so in a later PR the adjoint can also be used with the AD mode enabled. Some old driver classes are already removed. ## Related Work; - Further work by @oleburghardt to follow on the multizone adjoint driver.; - Some features awaiting the input/output restructuring PR by @talbring. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/671:886,guid,guide,886,https://su2code.github.io,https://github.com/su2code/SU2/pull/671,1,['guid'],['guide']
Usability,"## Proposed Changes; This PR includes a fix that will reenable CHT for compressible flow (unintentionally out of service in v7 so far). A regression test was added to protect this functionality together with some general CHT-related cleanups.; ; ## Related Work; Fixes issue #838 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/839:454,guid,guide,454,https://su2code.github.io,https://github.com/su2code/SU2/pull/839,1,['guid'],['guide']
Usability,"## Proposed Changes; This PR incorporates a P1 solver for Radiative Heat Transfer to SU2. The P1 model is a popular 1-equation model to solve the infinite-dimensional Radiative Heat Equation (RHE) that works under the assumption that the energy distribution is linearly isotropic (1). The implementation is general and thought to allow further extension of the radiation solvers in SU2, e.g., to discrete ordinates or partial moment approximations. The solution method is staggered and works in a very similar way to the turbulence models in SU2. . (1) Frank, M., _et al._ (2006), Partial moment entropy approximation to radiative heat transfer. _Journal of Computational Physics 218(1), 1–18._ DOI: [10.1016/j.jcp.2006.01.038](https://doi.org/10.1016/j.jcp.2006.01.038). ## Related Work; - I'm preparing some tutorials at the moment that I hope to have finalised by the time of the release of 7.0.2. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/872:1073,guid,guide,1073,https://su2code.github.io,https://github.com/su2code/SU2/pull/872,1,['guid'],['guide']
Usability,"## Proposed Changes; This PR introduces the implicit time-stepping capability for viscous problems using NEMO. ; The is a ""clean"" of PR #1356 (which should be closed by the time you read this). Most of the implementation discussion can be found there. Thanks to @pcarruscag for helping modernize the approach taken!. There are also several small fixes throughout addressing some LGTM.com and codefactor issues. Future work will include extracting Jacobians from the Mutation++ to be used with NEMO. As of right now, only the native library can be used with the implementation. ## Related Work; Related PRs include #1356, #1343, and #1347. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1422:811,guid,guide,811,https://su2code.github.io,https://github.com/su2code/SU2/pull/1422,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; This PR is for fixing #2276. With the observations in #2276 and after discussion with @joshkellyjak, the fix proposed in #2246 is probably the correct one. ## Related Work; #2158, #2246, #2260. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2293:501,Guid,Guide,501,https://su2code.github.io,https://github.com/su2code/SU2/pull/2293,1,['Guid'],['Guide']
Usability,"## Proposed Changes; This PR makes several changes to the NEMO code:; 1.) @fmpmorgado Introduced the AUSM+M convective scheme that avoids the carbuncle phenomena in hypersonic blunt bodies (https://doi.org/10.1016/j.apm.2019.09.005); 2.) Wally - A full refactoring of the AUSM schemes within NEMO; 3.) Removal of AUSMPW+ scheme; ; ## Related Work; This work is a follow-up and a cleaner version of the work in the branch **feature_NEMO_AUSMPLUSM**. I will delete both branches after merge. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary. ### Benchmark. I have conducted a comparison between the AUSM and AUSM+M for a 2D axisymmetric non-equilibrium flow over a cylinder with a 0.1 meter diameter and a freestream of M=24, P = 10.23 N and T = 224.5 K. ![image](https://user-images.githubusercontent.com/29612207/192250118-eb074187-3002-468a-8406-b01047c790bd.png); The left image represents the converged 2nd order solution using AUSM+M and the right image using the standard AUSM scheme. The new AUSM+M scheme enables to get rid of the pressure oscillations near the stagnation area. ![image](https://user-images.githubusercontent.com/29612207/192250632-85b64454-c54c-4815-8664-f72fc17d705d.png); Temperature at the stagnation line (solid line is AUSM+M and dashed line is AUSM). ![image](https://user-images.githubusercontent",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1773:662,guid,guide,662,https://su2code.github.io,https://github.com/su2code/SU2/pull/1773,1,['guid'],['guide']
Usability,"## Proposed Changes; This PR refactors the SST model implementation to include (hopefully) the KL, RC, V, m, SUST models. ; Mainly for the models SST-V(m) and SST-Vsust(-m). These tend to be used in higher speed flows. https://turbmodels.larc.nasa.gov/sst.html. A quick summary of some of the changes are:. Adding the""V"" term simply changes the P-term from; `Eddy_Viscosity_i * pow(StrainMag,2)` to; `Eddy_Viscosity_i * pow(VorticityMag,2)`. Adding the ""KL"" source term changes the P-term to; `Eddy_Viscosity_i *StrainMag*VorticityMag`. Adding the ""RC"" term:; Multiplying the P-term by a function, f. . Many of the Options can be used together -> SST-V-sust-m. The NASA TMR doesn't explicitly mention something like SST-2003-V-RC-sust-m,so I don't know if that is a valid permutation. That being said, the amount of options is fairly so I'm not sure the best way to approach this formulation, without unnecessarily bloating the code. Hence this isn't operational yet. Work will need to be done to validate the addition. ## Related Work; This is part of the larger turbulence fixes/additions/modernization efforts seen in #1557. It also addresses some comments in #1551 and #1413. Also as @pcarruscag pointed out below, this falls out in the larger discussion mentioned in #1364. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1560:326,simpl,simply,326,https://su2code.github.io,https://github.com/su2code/SU2/pull/1560,2,['simpl'],['simply']
Usability,"## Proposed Changes; This PR removes python2.7 from the test matrix in travis. We have a lot of development right now and until we have found a better way to speed up regression tests, this is, I think, the best approach to remove that roadblock at the moment:. - There is no real development done in the python framework at the moment; - Usually the incompatibilities between python 2 and 3 can be resolved quite easily.; - Python 2 is marked as deprecated anyway. If you have other thoughts let me know. There might be other ways like the caching feature of travis, but it takes effort and time to modify our system. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/709:808,guid,guide,808,https://su2code.github.io,https://github.com/su2code/SU2/pull/709,1,['guid'],['guide']
Usability,"## Proposed Changes; This PR restructures the CTransfer parent and child classes following discussions in #583 and #725. Given that I already started it in #760, I just went ahead and moved all the remaining classes. It should be compared to `feature_elastic_mesh_solver`. ## Related Work; Depends on #760 and should be merged afterwards. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/769:511,guid,guide,511,https://su2code.github.io,https://github.com/su2code/SU2/pull/769,1,['guid'],['guide']
Usability,"## Proposed Changes; This PR started as a collection of small fixes for issues I came across during recent work with SU2, mostly in the build/test system, but then the focus shifted towards general cleanup of the regression tests. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1764:517,Guid,Guide,517,https://su2code.github.io,https://github.com/su2code/SU2/pull/1764,1,['Guid'],['Guide']
Usability,"## Proposed Changes; This PR updates codi and medi to the newest version. For externally differentiated functions and preaccumulation it now uses the interfaces provided by codi. . ## Related Work; This fixes #659. . PRs #650 and #653 should be merged in before (I will deal with this next week). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/660:469,guid,guide,469,https://su2code.github.io,https://github.com/su2code/SU2/pull/660,1,['guid'],['guide']
Usability,"## Proposed Changes; This PR updates some of the NEMO viscous routines to be more inline with the overall SU2 structure. Hopefully paving the way for an easier merge with turbulence solvers in the future. ## Related Work; This is coming with an effort to update and optimize NEMO, like in #1343. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1347:468,guid,guide,468,https://su2code.github.io,https://github.com/su2code/SU2/pull/1347,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; This PR will help address issues seen in SU2 when symmetry planes are applied. These include pressure oscillations at sym plane & solid wall interfaces (i.e. blunt bodies). It will also change the implementation of the sym plane in SU2-NEMO to that used by the rest of the code, the template function in CFVMFlowSolverBase.inl.; . ## Related Work; This PR will largely utilize the work done in #1168 by Fabio Morgado. It is in addition to #657. It will address several open issues #1625 and #1125. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1635:691,guid,guide,691,https://su2code.github.io,https://github.com/su2code/SU2/pull/1635,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; This PR; -changes the name of the class CUserDefinedTCLib to CSU2TCLib (class that refers to the SU2 native fluid model for nonequilibrium flows); -introduces another nonequilibrium fluid model that refers to the support of Mutation++ library. CMutationTCLib class is introduced at the same level of CSU2TCLib, as a child of CFluidModel; -sets up the meson configuration of Mutation++ as a git submodule (since Mutation++ is a cmake library, it needs to be treated as meson subproject). For appropriate review of this PR; 1. please test the link to mutation++ with:; `$./meson.py <build_dir> --prefix=<path_to_su2> -Denable-mpp=true`; and follow the instructions at the end of the meson log; 2. run the regression test in TestCases/nonequilibrium/viscwedge_mpp. ## Related Work; This PR follows a series of PRs to migrate the full NEMO solver to the develop/master branch, with @WallyMaier and @fmpmorgado . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1160:1101,guid,guide,1101,https://su2code.github.io,https://github.com/su2code/SU2/pull/1160,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; This a initial merge to begin incorporating some modification to the sliding mesh interface which we are planning to improve in the next future. ## Related Work; Mostly performance improvements in the creation of the super mesh for the Weighted Average sliding mesh approach.; ADT is now used to initialize the supermesh construction. Some portions of the code were re-implemented using a smarter algorithm which reduces the code length. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2334:631,guid,guide,631,https://su2code.github.io,https://github.com/su2code/SU2/pull/2334,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; This a initial merge to begin incorporating some modification to the sliding mesh interface which we are planning to improve in the next future. . ## Related Work; Mostly performance improvements in the creation of the super mesh for the Weighted Average sliding mesh approach.; ADT is now used to initialize the supermesh construction. Some portions of the code were re-implemented using a smarter algorithm which reduces the code length. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2332:633,guid,guide,633,https://su2code.github.io,https://github.com/su2code/SU2/pull/2332,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; This address the issue in #1916 to resolve the Intel compiler warnings generated by NEMO. Turns out I don't have access to an intel compiler, but -warnlevel=3 using GCC does not give any issues. @vdweide, @pcarruscag, @bigfooted could you make sure the issue is resolved?. ## Related Work; Issue #1916. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1918:610,Guid,Guide,610,https://su2code.github.io,https://github.com/su2code/SU2/pull/1918,1,['Guid'],['Guide']
Usability,"## Proposed Changes; This adds more AUSM family schemes. . ## Related Work; This is a continuation of PR #1773 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1943:285,guid,guide,285,https://su2code.github.io,https://github.com/su2code/SU2/pull/1943,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; This adds the source term for axisymmetry to the residual computation for species transport. The source term is zero for non-axisymmetric cases. . ## Related Work; This builds upon the closed pull request #1762 and is connected to #card-71271518 as an aspect of feature_flamelet. ; The change uses the implementation by @bigfooted on feature_flamelet. The implemented source term was checked against literature/own derivation by @Cristopher-Morales. ; I would like to set up a regression test as soon as #1784 is merged. ## PR Checklist; - [x ] I am submitting my contribution to the develop branch.; - [x ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1785:831,Guid,Guide,831,https://su2code.github.io,https://github.com/su2code/SU2/pull/1785,1,['Guid'],['Guide']
Usability,"## Proposed Changes; This adds/extends the turbulence solver for NEMO. As of right now, there is a lot of repeated code. ; Much testing is still needed, but the base structure is here. I hoping to get some early comments, and ideas of how to reduces the code repetition. ## Related Work; Other feature developments in NEMO, as PR #1356 and PR #1383 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1385:523,guid,guide,523,https://su2code.github.io,https://github.com/su2code/SU2/pull/1385,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; This allows UQ and NICF features to be used with the vectorized centered schemes.; UQ can also be used with the vectorized Roe scheme, but not NICF as that would not be equivalent to the general Roe implementation.; With this the older implementations were removed as they are never used as boundary numerics. ## Related Work; #1022. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1149:578,simpl,simply,578,https://su2code.github.io,https://github.com/su2code/SU2/pull/1149,1,['simpl'],['simply']
Usability,"## Proposed Changes; This change makes it easier to use system-wide Meson and Ninja in order to build SU2 from source. ## Related Work; See issue #1945 for more information. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1951:346,guid,guide,346,https://su2code.github.io,https://github.com/su2code/SU2/pull/1951,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; This changes a boolean check in CNEMONumerics.cpp which always seems to be true. This has been causing some segfaults in 10-11 species viscous cases. I suspect this is causes because the Kind_TimeNumScheme is not updated before the numerics constructor. Some work that still needs to be done is confirm/test 10 and 11 species gases do work when the problem is supposed implicit. ; ; ## Related Work; PR#1422. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1482:602,guid,guide,602,https://su2code.github.io,https://github.com/su2code/SU2/pull/1482,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; This continues the CoDiPack 2 Update. The multithreading features in CoDiPack have been merged, this PR updates SU2 to the merged CoDiPack version. ## Related Work; #1903 #2009. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2013:485,Guid,Guide,485,https://su2code.github.io,https://github.com/su2code/SU2/pull/2013,1,['Guid'],['Guide']
Usability,"## Proposed Changes; This draft PR aims to generalize and template the turbulence solver/ scalar solvers to reduce code duplication and allow NEMO access to the turbulence solvers. The ideas were discussed with @pcarruscag, @TobiKattmann and @suargi, ; I am opening up the draft PR very early, so this is very much a work in process. The main idea is use templates to introduce differing variable index values into the Scalar/Turb solvers. ## Related Work; This idea follows PR #1375 and PR #1330. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1392:670,guid,guide,670,https://su2code.github.io,https://github.com/su2code/SU2/pull/1392,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; This feature allows for computationally efficient through-flow computations for turbomachinery applications in the form of body-force modeling. The body-force model (BFM) generates density, momentum and energy source terms which turn the flow according to the local flow conditions and blade geometry. The blade geometry is defined through the camberline and blade thickness parameters, which are interpolated onto the mesh nodes prior to the solution process. ; Two BFM formulations are currently implemented: Hall (2015) and Thollet (2017). The code is up-to-date with ""develop"", version 7.1.1. ; Upcoming milestones will be MPI integration and coupling with adjoint. The latter will allow for computationally efficient design workflows of turbomachinery components. This will be especially useful for distortion-tolerant machines, as the design variable count and computational requirements are significantly higher than for machines experiencing uniform inflow. ; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1348:1311,guid,guide,1311,https://su2code.github.io,https://github.com/su2code/SU2/pull/1348,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; This feature allows of employing cubic equation of state based on the **CoolProp** library's Peng-Robinson backend [1,2]. The present Peng-Robinson fluid model implementation (CPenRobinson.cpp file) requires '_Specific heat ratio_' (_gamma_) as an input which is not always possible to know in advance, especially for organic fluids (refrigerants).; The fluid model (titled as **PR_COOLPROP_GAS** in config file) in the proposed branch is completely free of any '_gamma_' in particular functions and allows of utilizing the spatially variable of isobaric and isochoric specific heats. The full set of available fluids is presented in the **config_template.cfg** file. One must be aware that the reviewed fluid model assumes imposing pure substance in gas phase (no mixtures or multiphase flows). The implemented fluid model improves the thermodynamic consistency however there is performance penalty related to algorithmic overhead. . 1. http://coolprop.org/; 2. https://github.com/CoolProp/CoolProp. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [+ ] I am submitting my contribution to the develop branch.; - [+ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ +] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ +] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1402:1342,guid,guide,1342,https://su2code.github.io,https://github.com/su2code/SU2/pull/1402,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; This fix resolves a problem related to mismatched gradients between the forward and reverse mode of AD when considering EFFICIENCY as the objective function. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1074:351,guid,guide,351,https://su2code.github.io,https://github.com/su2code/SU2/pull/1074,1,['guid'],['guide']
Usability,"## Proposed Changes; This fixes the update of the dual time step for species transport, enabling transient simulations. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2260:309,guid,guide,309,https://su2code.github.io,https://github.com/su2code/SU2/pull/2260,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; This implementation allows the connection of an inlet surface with an outlet surface (e.g. to simulate internal channels inside a model). In order to do so, it has been necessary to create an option OUTLET_TYPE that will be used in the future (e.g. to add a mass flow driver for the outlet - currently only static pressure is implemented - ). To sum up, to connect an inlet with an outlet you should type the following:. % Inlet boundary type (TOTAL_CONDITIONS, MASS_FLOW, SURFACE_OUTLET); INLET_TYPE= SURFACE_OUTLET; % Outlet boundary type (PRESSURE_OUTLET, SURFACE_INLET); OUTLET_TYPE= SURFACE_INLET. In the future, we should be able to specify pressure losses inside the ""pipe"" that connect the surfaces.; ; ## Related Work; This is a new implementation that solves passive flow control problems where we are not interested in creating a complicated mesh inside the main volume to define the internal channels/pipes. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/538:1113,guid,guide,1113,https://su2code.github.io,https://github.com/su2code/SU2/pull/538,1,['guid'],['guide']
Usability,"## Proposed Changes; This introduces the implicit solver for the Euler solver with SU2-NEMO. I created this branch/PR for a clean commit history version. ; This PR also does some general cleanup (declaring variables, use of geometry toolbox) to be more consistent in the SU2 style. ## Related Work; This is based on the previous draft PR #1356. And in general work continued from other NEMO cleanups #1343 and #1347. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1399:589,guid,guide,589,https://su2code.github.io,https://github.com/su2code/SU2/pull/1399,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; This is a bugfix for the mesh writer, which was outputting the wrong number of elements when run in parallel. . ## Related Work; [Post on CFD online](https://www.cfd-online.com/Forums/su2-shape-design/224088-segfault-second-dsn-iteration.html#post757055) that made me aware of that problem. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/862:484,guid,guide,484,https://su2code.github.io,https://github.com/su2code/SU2/pull/862,1,['guid'],['guide']
Usability,"## Proposed Changes; This is a chore PR to const variables when allowed and to alter loops to prevent declared iterators. This may be unnecessary/overkill. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1923:330,guid,guide,330,https://su2code.github.io,https://github.com/su2code/SU2/pull/1923,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; This is a draft pull request for the implementation of a supersonic inlet profile feature. the uniform temperature, pressure, and velocity at the inlet for a supersonic inlet BC will replaced with vertex values. ## Related Work; Modifications to related codes, recompelling it and doing proper tests using supersonic cases.; Iterations. ## PR Checklist. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2326:644,Guid,Guide,644,https://su2code.github.io,https://github.com/su2code/SU2/pull/2326,1,['Guid'],['Guide']
Usability,"## Proposed Changes; This is a little improvement to the multipoint optimization setup. Currently if you want to run multipoint optimization with restarts, the python scripts only keep track of one restart file (the first of the multipoint conditions). This is acceptable when the multipoint conditions are similar, but does not work when the conditions are very different. For example, if one point is supersonic and the other is subsonic, and the subsonic case is restarted from the supersonic solution, it immediately diverges. . This PR allows the python scripts to keep track of restarts for each point in the multipoint set up. It is robust in the sense that you can start with 0 restart files or some subset of restart files. For example, if you are running a 3 point optimization but only have the restart for one of the points, this will handle that case by starting the other two points from scratch, but keeping track of the restart files after the first design iteration. There is a naming convention that is presumed. The restarts get 'point#' added to its base name. So for example, if the SOLUTION_FILENAME= solution_flow.dat then it will look for files named solution_flow_point0.dat, solution_flow_point1.dat and so on. For adjoints this is solution_adj_point0_cd.dat etc. This naming convention can be tweaked according to comments. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/781:1525,guid,guide,1525,https://su2code.github.io,https://github.com/su2code/SU2/pull/781,1,['guid'],['guide']
Usability,"## Proposed Changes; This is a preparation for the upcoming release 7 ""Blackbird"". The schedule is planned like this:. - **08/27**: Pull request opening window ends. PRs with **new features** opened after this date will not be considered for v7.0.0.; - **09/01 - 09/29**: Testing phase. Only PRs with **bugfixes** and remaining PRs opened before **08/27** will be merged during that phase. ; - **09/30**: Release date. Note that we will have a stricter policy for new features for this release: Features with no documentation or tutorial(s) will not be advertised. Please also remember to prepare for #724. . If you have any questions, please let me know. Also if you can offer any help with testing/updating documentation. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/762:896,guid,guide,896,https://su2code.github.io,https://github.com/su2code/SU2/pull/762,1,['guid'],['guide']
Usability,"## Proposed Changes; This is a restructuring of the solver classes in the fashion of what has been done for variable classes, output classes etc. Changes include:. - Moving all solver .hpp and .cpp files into individual class specific files; - Moving all inline functions into the header files ; - Some bits of code cleanup. Things still left to be done: . - Updating the IDE files; - Any other things that might come up in the review process. This has mostly just been copying and pasting things around. If there any thing else to address in the solver classes (menial or significant) that would be appropriate to include in this restructuring, let me know in the comments!. ## Related Work; @pcarruscag is already working on the CFEASolver in #843. I have split the files here as well since it was already automated. But I can just merge with his branch in the likely case that his PR is ready for merging before this one. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/849:1099,guid,guide,1099,https://su2code.github.io,https://github.com/su2code/SU2/pull/849,1,['guid'],['guide']
Usability,"## Proposed Changes; This is a simple enhancement of the fixed CL mode. Currently the Fixed CL mode only exits when the specified iteration limit is reached. With these changes, the mode is a little more robust and checks for the specified Residual or Cauchy convergence and additionally checks that the CL is converged to the target CL value to within CAUCHY_EPS. I have currently preserved the Finite Differencing that occurs at the end of the Fixed CL mode. I am not sure why this is required and would like to get rid of it if possible. If there is a reason for the finite differencing to calculate dCL/dAlpha, please let me know. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/779:31,simpl,simple,31,https://su2code.github.io,https://github.com/su2code/SU2/pull/779,4,"['guid', 'simpl']","['guide', 'simple']"
Usability,"## Proposed Changes; This is a simple re-shuffling to have matrix-vector products (and therefore linear systems) that are aware of periodic connections.; It uses something like:; - A ""`PERIODIC_RESIDUAL`"" communication (sum contributions) applied to the result of matrix-vector products.; - A ""`PERIODIC_IMPLICIT`"" communication (enforce periodicity) applied to the result of preconditioners. It seems to avoid the performance degradation that @TobiKattmann saw when implementing periodicity for heat transfer, and also the issues in issue #1467. However, making the matrix-vector product ""periodicity-aware"" through comms, without modifying the matrix, means that any preconditioner derived from the matrix is not consistent with the product, thus it is a worse preconditioner and more linear iterations are needed for the same reduction in residuals. ## Related Work; Should help #1467; Should avoid #763. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1585:31,simpl,simple,31,https://su2code.github.io,https://github.com/su2code/SU2/pull/1585,2,['simpl'],"['simple', 'simply']"
Usability,"## Proposed Changes; This is a solver I have been working on for some time.; The proposed solver is a treatment of the discrete adjoint sensitivities based on the idea of Sobolev gradient smoothing. This is done by solving an elliptic PDE with the sensitivities, i.e., ( e1 Id - e2 Laplace) delta_x = - dF / dx, with different weights e1, e2.; Such treatment can help prevent noise in the derivative computation and leads to smoother design updates. Especially, when working in a One Shot optimization context.; The new solver constructs the necessary operator and solves it using the finite elements features in SU2. It also includes the possibility to take the mesh parameterization into account and smooth the sensitivities w.r.t. the design parameters. I will update this draft and the comments, but I wanted to share this first version. I would be happy if anyone wants to comment on it. The draft needs some steps to be done, including:; - clean up the comments and make them consistent with SU2 style; - remove the dependency on Eigen. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1439:1215,guid,guide,1215,https://su2code.github.io,https://github.com/su2code/SU2/pull/1439,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; This is further step in restructuring the files. In this PR I splitted the primal_grid_structure and dual_grid_structure. Further I moved the mesh readers in to a separate directory. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/848:526,guid,guide,526,https://su2code.github.io,https://github.com/su2code/SU2/pull/848,1,['guid'],['guide']
Usability,"## Proposed Changes; This is mainly to address #721 but it may have good side effects in other areas (see comments below).; Every turbulent testcase will fail and so far I only tested SA and SST on a simple airfoil case. ## Related Work; Addresses #721 ; Should help a bit with #594; May help with #711. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/726:200,simpl,simple,200,https://su2code.github.io,https://github.com/su2code/SU2/pull/726,1,['simpl'],['simple']
Usability,"## Proposed Changes; This is the beginning of the work proposed in #716 .; Comments will follow as work progresses.; I would appreciate if we could keep the restructuring of files that use CVariable heavily for when this is done. ## Related Work; #716. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/753:425,guid,guide,425,https://su2code.github.io,https://github.com/su2code/SU2/pull/753,1,['guid'],['guide']
Usability,"## Proposed Changes; This is the continuation to #650, so please compare these changes to the ones therein. The linear systems solved in the discrete adjoint are now in passivedouble which speeds the discrete adjoint by a factor of about 1.5 (less for low CFL, more for stiff Jacobians like those in structural FEM). This is possible because we only carry the derivatives of the residual. I tried to keep the design simple. CSysSolve and all related classes (vector, matrix, preconditioner, and matrix-vector product) have a single template parameter, the data type (which can be passivedouble or su2double). There are no provisions for ""mixed"" arithmetic, except in CSysSolve where through ::Solve (and only through ::Solve) one can ask for the solution of a system with passive Jacobian and active RHS and solution (this is possible at the expense of temporaries that are allocated only once). Passive-Passive and Active-Active work without temporaries and Active-Passive is not supported as it does not make sense (see end of previous paragraph). This is to keep the need for template specialization to a minimum. Wherever mixing types was necessary small helper methods were defined to provide the compatibility instead of specializing larger methods, I think this keeps the code readable. The place where passive and active types mix the most is CSysMatrix. This happens because the blocks are prepared by the numerics in **su2double and are then ""Set"", ""Add"", or ""Subtract"", on a CSysMatrix<passivedouble>. The solution was to inline those routines and template them also for the data type of the block (or diagonal). I only tested on one fluid adjoint and one FSI adjoint case (fingers cross not to fail too many tests). ## Related Work; #594 Does not help with memory much but helps with speed.; #648 Makes it easier to interface with an external solver and still work with the discrete adjoint.; #650 Builds on top of what is proposed there.; #543 These MKL optimizations will now be possible",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/653:416,simpl,simple,416,https://su2code.github.io,https://github.com/su2code/SU2/pull/653,1,['simpl'],['simple']
Usability,"## Proposed Changes; This is the first part of a series of PRs which completely refactor the output (and parts of the input). In this one I introduce the sub-config file feature for multizone/multiphysics problems. More information on how it works can be found here:. https://su2code.github.io/docs/Multizone. Note that the automatic deduction of the correct interface type is *not* working at the moment. So the `MARKER_FLUID_INTERFACE` or `MARKER_CHT_INTERFACE` still has to be there at the moment ... Furthermore this changes the way grid movement is specified in the config files. Examples can be found also using the link above or by simply looking at the `sliding_interface` test cases. . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/715:639,simpl,simply,639,https://su2code.github.io,https://github.com/su2code/SU2/pull/715,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; This new feature aims to get viscosity and conductivity from CoolProp library.; . ## Related Work; This project is an extension of PR #1806. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1819:334,guid,guide,334,https://su2code.github.io,https://github.com/su2code/SU2/pull/1819,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; This project aims to couple the free and open-source thermodynamics library CoolProp with SU2. There are **two advantages:**. 1. More accurate numerical results. ; CoolProp can provide accurate thermodynamics properties (P, T, rho, ect) of commone fluids by either extracting experiment data from published papers, or computing based on the state-of-the-art Helmholtz energy formulations. ; So, thermodynamics properties obtained from CoolProp should be more accurate than those obtained from Van der Waals or peng robinson gas model embedded in SU2. Also, the numerical results should be more accurate.; 2. More user-friendly; To use CoolProp feature, the ony input from the user is the name of fluid. Then all other thermodynamics can be provided by CoolProp.; %FLUID_MODEL = COOLPROP; %FLUID_NAME = nitrogen; ; ## Related Work; This project references the following work:; 1.the work of coupling 'Mutationpp' with SU2.; 4. the pull request of 'Feature nppr gas #1718'. ## PR Checklist. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings.; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] Simulations with the following test fluids succeed: nitrogen, oxygen, carbon dioxide, MM.; - [ ] Currently, this new feature is applied for only Euler flow. For viscous flow, further work need to be done, including viscosity, conductivity from CoolProp. ; - [ ] CoolProp does not support non-dimension.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1782:634,user-friendly,user-friendly,634,https://su2code.github.io,https://github.com/su2code/SU2/pull/1782,2,"['Guid', 'user-friendly']","['Guide', 'user-friendly']"
Usability,"## Proposed Changes; This project aims to couple the free and open-source thermodynamics library CoolProp with SU2. There are **two advantages:**. 1. More accurate numerical results. ; CoolProp can provide accurate thermodynamics properties (P, T, rho, ect) of commone fluids by either extracting experiment data from published papers, or computing based on the state-of-the-art Helmholtz energy formulations. ; So, thermodynamics properties obtained from CoolProp should be more accurate than those obtained from Van der Waals or peng robinson gas model embedded in SU2. Also, the numerical results should be more accurate.; 2. More user-friendly; To use CoolProp feature, the ony input from the user is the name of fluid. Then all other thermodynamics can be provided by CoolProp.; %FLUID_MODEL = COOLPROP; %FLUID_NAME = nitrogen; ; ## Related Work; This project references the following work:; 1.the work of coupling 'Mutationpp' with SU2.; 4. the pull request of 'Feature nppr gas #1718'. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings.; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] Simulations with the following test fluids succeed: nitrogen, oxygen, carbon dioxide, MM.; - [x] Currently, this new feature is applied for only Euler flow. For viscous flow, further work need to be done, including viscosity, conductivity from CoolProp. ; - [ ] CoolProp does not support non-dimension.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1806:634,user-friendly,user-friendly,634,https://su2code.github.io,https://github.com/su2code/SU2/pull/1806,4,"['Guid', 'user-friendly']","['Guide', 'user-friendly']"
Usability,"## Proposed Changes; This pull request adds the test case that we used for the Fuel paper. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2239:411,guid,guide,411,https://su2code.github.io,https://github.com/su2code/SU2/pull/2239,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; This pull request adds the test case that we used for the Fuel paper. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2237:411,guid,guide,411,https://su2code.github.io,https://github.com/su2code/SU2/pull/2237,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; This pull request is the second part of plan (B) described in https://github.com/su2code/su2code.github.io/pull/134#issuecomment-1616012091. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2066:448,Guid,Guide,448,https://su2code.github.io,https://github.com/su2code/SU2/pull/2066,1,['Guid'],['Guide']
Usability,"## Proposed Changes; This pull request removes the old Poisson and Wave solvers, which are currently unsupported, and replaces the legacy heat solver with the FVM heat solver incorporated in #505. ## Related Work; This is an intermediate step before there is a general restructuring of the input and output, currently under development. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/573:509,guid,guide,509,https://su2code.github.io,https://github.com/su2code/SU2/pull/573,1,['guid'],['guide']
Usability,"## Proposed Changes; This pull request represents progress towards exposing the mesh deformation routines and their adjoint counterparts to Python through pysu2 and pysu2ad, respectively. This refactorization introduced:. 1. `CDriverBase`; a. Parent class for `CDriver`, `CDeformationDriver`, `CDiscAdjDeformationDriver`; b. Common methods regarding geometry, markers, MPI, etc. 2. `CDeformationDriver` and `CDiscAdjDeformationDriver`. In addition, the `CDeformationDriver` was modified to use the new mesh deformation solver `CMeshSolver`. The integration of `CMeshSolver` required introducing the `numerics_container` and `solver_container`, as well as minor changes to `CMeshSolver` (e.g., `DeformMesh` and `SetMesh_Stiffness`). Both the legacy mesh deformation solver `SU2_DEF` and the newer `CMeshSolver` can be used with these new drivers, depending on how the `DEFORM_MESH` option is set in the SU2 config file. . ## Related Work; These efforts are related to Issue #1262. The purpose of this work is to enable the coupling of SU2 with external solvers like Nastran, particularly for aerostructural MDAO. The goal is to apply this for coupled discrete adjoint sensitivities. . In the future, these driver classes will be extended to include more methods accessible via Python (i.e., for setting or extracting variables, config parameters, etc.). Currently `CDiscAdjDeformationDriver` is not integrated with `CMeshSolver`, but this will be addressed in the future. . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1300:1696,simpl,simply,1696,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300,1,['simpl'],['simply']
Usability,"## Proposed Changes; This removes some leftovers from when we deprecated the mesh adaptation.; I had a look at the ""adap"" branches and it seems that the new interface has completely new scripts and these are not needed, @bmunguia correct me if I am wrong. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1153:479,simpl,simply,479,https://su2code.github.io,https://github.com/su2code/SU2/pull/1153,1,['simpl'],['simply']
Usability,"## Proposed Changes; This replaces the bisection method in NEMO to compute the Tve values. The NR solver should be faster and offer some speed up, I believe the ComputeTemperatures function is the slowest in NEMO. So I have some cases running to highlight the speedup (hopefully not a slowdown). From a quick glance, it seems the iteration time is very sensitive to the scaling factor. . Lastly, this will probably destroy the regression tests for NEMO, since our temperatures will be slightly different now. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1627:882,simpl,simply,882,https://su2code.github.io,https://github.com/su2code/SU2/pull/1627,1,['simpl'],['simply']
Usability,"## Proposed Changes; This simply adds a quick calculation so the proper value of Reynolds number is displayed when INIT_OPTION=TD_CONDITIONS. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1370:26,simpl,simply,26,https://su2code.github.io,https://github.com/su2code/SU2/pull/1370,3,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; This small PR fixes a bug in the ADT that occurs in extreme situations. Basically the less than is replaced by less equal than (and similar for greater than); . ## Related Work; None. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/640:377,guid,guide,377,https://su2code.github.io,https://github.com/su2code/SU2/pull/640,1,['guid'],['guide']
Usability,"## Proposed Changes; This small PR fixes a number of compiler warnings for g++ 8.2 in full debug mode. It should not change any functionality. Also there is a small bug fix in the ADT, where the Jacobian matrix for the containment search inside a quadrilateral was computed wrongly.; . ## Related Work; None. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/639:481,guid,guide,481,https://su2code.github.io,https://github.com/su2code/SU2/pull/639,1,['guid'],['guide']
Usability,"## Proposed Changes; This small PR fixes the interpolation weights of the function CADTElemClass::CoorInTetrahedron. Thanks @monika1387 for bringing that to our attention.; . ## Related Work; None. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.; - [ X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1016:370,guid,guide,370,https://su2code.github.io,https://github.com/su2code/SU2/pull/1016,1,['guid'],['guide']
Usability,"## Proposed Changes; This small PR introduces the SST turbulence model with sustaining terms, such that the model is free-stream preserving. Especially for external flows, where the farfield boundary is far away from the body, the turbulent intensity decays from the prescribed free stream values. This is not too much an issue when the model is run in fully turbulent mode, but it becomes important when it is combined with a transition model. It is the intention to add the transition model later on.; . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/764:700,guid,guide,700,https://su2code.github.io,https://github.com/su2code/SU2/pull/764,2,['guid'],['guide']
Usability,"## Proposed Changes; This small PR modifies the error handling, such that the error message is also written when the call to the error handler is not collective. The function CBaseMPIWrapper::Error is not so small anymore, so it may be an idea to move it to the .cpp file instead of inlining it.; ; ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.; - [ X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/574:493,guid,guide,493,https://su2code.github.io,https://github.com/su2code/SU2/pull/574,1,['guid'],['guide']
Usability,"## Proposed Changes; This small PR reverses the sequence of y+ and muT for Tecplot output files. Now it is consistent with the paraview sequence as well as the actual output.; . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.; - [ X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/607:372,guid,guide,372,https://su2code.github.io,https://github.com/su2code/SU2/pull/607,1,['guid'],['guide']
Usability,"## Proposed Changes; This temporarily disables the compilation of TecIO in travis to reduce the overall runtime of the jobs. We are not checking the tecplot binary output anyway at the moment.; . ## Related Work; -. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/611:388,guid,guide,388,https://su2code.github.io,https://github.com/su2code/SU2/pull/611,1,['guid'],['guide']
Usability,"## Proposed Changes; This updates the version of MPP for use in the NEMO solver. . Is there a way to include a MPP test case for the regressions?. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [?] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1935:319,guid,guide,319,https://su2code.github.io,https://github.com/su2code/SU2/pull/1935,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; This very small PR fixes the valgrind warning mentioned in issue #1040 ; . ## Related Work; Bug fix for issue #1040 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1041:311,guid,guide,311,https://su2code.github.io,https://github.com/su2code/SU2/pull/1041,1,['guid'],['guide']
Usability,"## Proposed Changes; Throw error for LM, print message that BC is the 2020 version. ## Related Work; #1132; #1130. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1157:338,simpl,simply,338,https://su2code.github.io,https://github.com/su2code/SU2/pull/1157,1,['simpl'],['simply']
Usability,"## Proposed Changes; To simplify the maintenance of hybrid parallel SU2, we want to run thread sanitizer tests as part of the CI pipeline. We use thread-sanitizer enabled containers for this. This is work in progress and there are things that need testing, so I want to take it step by step while observing the behaviour of the CI pipeline. ## Related Work; https://github.com/su2code/Docker-Builds/pull/17 and follow-on PRs, #1679. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2068:24,simpl,simplify,24,https://su2code.github.io,https://github.com/su2code/SU2/pull/2068,2,"['Guid', 'simpl']","['Guide', 'simplify']"
Usability,"## Proposed Changes; To simulate a gust in CFD, typically the Field Velocity Method is used. This method prescribes a given velocity on each node and neglects any influence of the aircraft on the gust. The Split Velocity Method is an approach that allows to capture the influence of the aircraft on the gust. . As far a I understand, the Split Velocity Method is only partially implemented in SU2 and isn't used for any gust type because all gust derivatives are zero / commented out in the code. This is in line with Padron et al. (https://doi.org/10.2514/6.2014-3013) who report that ""... combining the GCL with the SVM does not work."". This pull request cleans up / removes the unused code. ## Related Work; The issue was identified during the work on pull request #1954. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2051:947,guid,guide,947,https://su2code.github.io,https://github.com/su2code/SU2/pull/2051,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; Transferring turbomachinery outputs from legacy format to current format; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2001:417,guid,guide,417,https://su2code.github.io,https://github.com/su2code/SU2/pull/2001,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; Try to fix #1219 based on Stephan's insight in #990. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1221:297,simpl,simply,297,https://su2code.github.io,https://github.com/su2code/SU2/pull/1221,1,['simpl'],['simply']
Usability,"## Proposed Changes; Try to improve the configuration detection of hdf5.; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1511:396,guid,guide,396,https://su2code.github.io,https://github.com/su2code/SU2/pull/1511,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; Trying to make the python vertex tractions and vertex traction adjoints independent of a specific marker to allow #1174 to go forward without side effects on how FSI is done via the python wrapper at the moment. ## Related Work; #1174 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1197:481,simpl,simply,481,https://su2code.github.io,https://github.com/su2code/SU2/pull/1197,1,['simpl'],['simply']
Usability,"## Proposed Changes; Two bugs related to CoolProp fluid model are found and solved:; 1.Since there is no solver for two phase flow, then I ask CoolProp to assume the flow is single gas phase if the thermodynamics states are located on the liquid-vapor saturation curve.; 2. CoolProp has some issues to update the thermodynamics states if the input pressure is very close critical pressure Pc, see [here](https://github.com/CoolProp/CoolProp/issues/1678). So I let pressure equal to 0.99 Pc if pressure is very close to Pc. ## Related Work; This work is related to PR #1806. ## PR Checklist; - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1947:860,Guid,Guide,860,https://su2code.github.io,https://github.com/su2code/SU2/pull/1947,1,['Guid'],['Guide']
Usability,"## Proposed Changes; Update CoDiPack, MeDiPack, and OpDiLib. . The CoDiPack updates contains a fix regarding static initialization order in the context of hybrid parallel AD. ## Related Work; previous hybrid AD things. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2206:505,Guid,Guide,505,https://su2code.github.io,https://github.com/su2code/SU2/pull/2206,1,['Guid'],['Guide']
Usability,"## Proposed Changes; Update CoolProp to v6.5.0 which was recently released. I picked the commit of the release, but newer commits are available. I also ""cleaned up"" a bit the submodule function so that it would become easier to update CoolProp in the future and make the intent of the code clearer. . ## Related Work; CoolProp v6.5.0 has an updated EOS for CO2, with which I am currently playing around. This new version has the same EOS as NIST. It also comes with a variety of bug fixes and improvements. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - The code generates quite a few warning when compiling on Debian 12, which uses GCC12 , but none were introduced in this commit. I tested the compilation using an Apptainer/Singularity container.; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - I changed the Python code, for which I saw no entry in the style guide.; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - I did not run it as I did not know about it, but I do not think it applies for this (though maybe it does); - [ ] I have added a test case that demonstrates my contribution, if necessary.; - Not necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.; - No documentation related to SU2 should be affected. I do have one question which is not directly related to this PR. I have an Apptainer/Singularity container for SU2 which has most of the bells and whistles. I saw that you have docker containers, but for HPC (and normal computers) Docker [can have a large performance penalty](https://www.youtube.com/watch?v=2FPB74YB-ng). Would you like for me to contribute my Apptainer recipes? . Any and all feedback welcome!. P.S: I did not know that ev",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2136:290,clear,clearer,290,https://su2code.github.io,https://github.com/su2code/SU2/pull/2136,2,"['Guid', 'clear']","['Guide', 'clearer']"
Usability,"## Proposed Changes; Update SU2 to a CoDiPack version that contains the fixes discussed in #1087.; . ## Related Work; #1087. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1096:297,guid,guide,297,https://su2code.github.io,https://github.com/su2code/SU2/pull/1096,1,['guid'],['guide']
Usability,"## Proposed Changes; Update SU2 to a recent version of CoDiPack. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1903:351,Guid,Guide,351,https://su2code.github.io,https://github.com/su2code/SU2/pull/1903,1,['Guid'],['Guide']
Usability,"## Proposed Changes; Update SU2 to recent versions of CoDiPack, MeDiPack, and OpDiLib. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2351:373,Guid,Guide,373,https://su2code.github.io,https://github.com/su2code/SU2/pull/2351,1,['Guid'],['Guide']
Usability,"## Proposed Changes; Update to the interface initialisation to enable both mixing plane and sliding interfaces within the same turbomachinery simulation. Addition of mass flow outlet to Giles BC. ## Related Work; This issue solves a problem reported by a number of users, when simulating radial turbomachinery cases a second-order accurate solution cannot be achieved in some cases when using mixing plane interfaces. This is due to circumfrential averaging in regions where the flow exhibits large circumfrential nonuniformity and/or interspace gaps between adjacent blade-rows/zones small. This issue has been reported by @LorenzoFabris, in a presentation at the SU2 Conference 2022 ""Performance Analysis and Shape Optimization of a Radial Compressor with the Open-Source Software SU2"" and by myself. Mass flow outlet included in the PR as requested by users. TBC:; -Update APU Turbocharger test case and regression test to include this feature, add diffuser and converge 2nd order. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2209:1157,guid,guide,1157,https://su2code.github.io,https://github.com/su2code/SU2/pull/2209,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; Updated Xcode to latest version of develop.; Also re-organized so the files are in ABC order / match Finder so its easier to find things. Thats most of the file diff. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x ] I am submitting my contribution to the develop branch.; - [x ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ x] My contribution is commented and consistent with SU2 style.; - [ n/a] I have added a test case that demonstrates my contribution, if necessary.; - [ n/a] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1405:362,guid,guide,362,https://su2code.github.io,https://github.com/su2code/SU2/pull/1405,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; Updated the MLPCpp submodule which is now able to use different scaling methods ([standard](https://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.StandardScaler.html#sklearn.preprocessing.StandardScaler), [robust](https://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.RobustScaler.html#sklearn.preprocessing.RobustScaler), and [min-max](https://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.MinMaxScaler.html#sklearn.preprocessing.MinMaxScaler)) for scaling the neural network inputs and outputs. . ## Related Work; This update relates to the parts of SU2 regarding data-driven simulations (CDataDrivenFluid and CFlameletFluid). . ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2369:128,learn,learn,128,https://su2code.github.io,https://github.com/su2code/SU2/pull/2369,4,"['Guid', 'learn']","['Guide', 'learn']"
Usability,"## Proposed Changes; Updated the Term2 of the BC Transition model, which eliminates some deficiencies in the previous version.The update is based on:. 1- Cakmakcioglu, S. C., Bas, O., Mura, R., and Kaynak, U., ""A Revised One-Equation Transitional Model for External Aerodynamics,"" AIAA Paper 2020-2706, June 2020, https://doi.org/10.2514/6.2020-2706.; 2- Mura, R. and Cakmakcioglu, S. C., ""A Revised One-Equation Transitional Model for External Aerodynamics - Part I: Theory, Validation and Base Cases,"" AIAA Paper 2020-2714, June 2020, https://doi.org/10.2514/6.2020-2714. which is also presented here: https://turbmodels.larc.nasa.gov/sa-bc_1eqn.html. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X ] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1132:974,guid,guide,974,https://su2code.github.io,https://github.com/su2code/SU2/pull/1132,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; Use Isend instead of Bsend (to avoid having to attach / resize buffers).; Disclaimer: No idea if this is the right way, like a good programmer I got the solution from stackoverflow. ## Related Work; Should fix #1150. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1163:461,simpl,simply,461,https://su2code.github.io,https://github.com/su2code/SU2/pull/1163,1,['simpl'],['simply']
Usability,"## Proposed Changes; Use TIME_STEP and MAX_TIME in the FEA solver instead of DYN_*. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2008:370,Guid,Guide,370,https://su2code.github.io,https://github.com/su2code/SU2/pull/2008,1,['Guid'],['Guide']
Usability,"## Proposed Changes; Use inlet profile for supersonic inlets.; @ShukaiWang1110 see if this branch works for you. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2327:399,Guid,Guide,399,https://su2code.github.io,https://github.com/su2code/SU2/pull/2327,1,['Guid'],['Guide']
Usability,"## Proposed Changes; Use of pre-accumulation in the structural solver numerics to provide order of magnitude reduction in the adjoint structural solver memory footprint. Using the fact that only the RHS of linear systems is differentiated, we can use pre-accumulation on the nodal stress residual computed in CFEAElasticity::Compute_Tangent_Matrix and CFEAElasticity::Compute_NodalStress_Term.; The implementation accounts for material properties and nodal coordinates, the latter are not strictly required at the moment but this future proofs the implementation for structural shape derivatives. . The above routines where chosen because ""everything"" happens inside them: computation of element gradients, constitutive terms, stress tensors, etc. So it is where the technique would be most effective. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/592:1122,guid,guide,1122,https://su2code.github.io,https://github.com/su2code/SU2/pull/592,1,['guid'],['guide']
Usability,"## Proposed Changes; V & V testcase for axisymmetric jet (SST and SA); Reproducing the self-similar jet properties reported in Wygnanski & Fiedler (1969) and Hussein, Capp & George (1994). ## Related Work; Related to #2197 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2335:511,Guid,Guide,511,https://su2code.github.io,https://github.com/su2code/SU2/pull/2335,1,['Guid'],['Guide']
Usability,"## Proposed Changes; WIP of the extension of FSI discrete adjoint to time-domain. This originally started with the legacy FSI drivers but is being migrated to the new multizone drivers in this draft.; . ## Related Work; @oleburghardt mentioned unsteady adjoints to follow PR #854 for CHT which will be closely related to this. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/868:499,guid,guide,499,https://su2code.github.io,https://github.com/su2code/SU2/pull/868,1,['guid'],['guide']
Usability,"## Proposed Changes; We aim to implement 2 things:; 1. Restart files contain variables that are not necessary for restarts. with the keyword WRT_RESTART_COMPACT= YES we can write compact restart files containing only necessary fields.; 2. Other output contains variables that are not requested (all SOLUTION variables are always written). When WRT_RESTART_COMPACT= YES, we do not automatically write the SOLUTION fields to e.g. paraview.; 3. When WRT_RESTART_COMPACT= NO, we keep the original behavior for backward compatibility. ## Related Work; Mentioned in Issue (request) #2118 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2372:870,Guid,Guide,870,https://su2code.github.io,https://github.com/su2code/SU2/pull/2372,1,['Guid'],['Guide']
Usability,"## Proposed Changes; We need to do something about these 20k lines of legacy.; ATM it is a little hard to see what might need to be ported so I'm trying to remove unused chunks to hopefully make the task easier.; @vdweide it looks like all the legacy output FEM routines are not needed, it that right?. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1115:526,simpl,simply,526,https://su2code.github.io,https://github.com/su2code/SU2/pull/1115,1,['simpl'],['simply']
Usability,"## Proposed Changes; We propose to integrate the latest functionalities of the DG solver into the develop branch. The most important one is the parallel binary output functionality for paraview and tecplot, which is needed for the branch feature_input_output. ## Related Work; This PR is needed to complete the overhaul in the output classes (work of @talbring and @rsanfer) in the feature_input_output branch. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/676:583,guid,guide,583,https://su2code.github.io,https://github.com/su2code/SU2/pull/676,1,['guid'],['guide']
Usability,"## Proposed Changes; When accessing the adjoints, bounds checking acquires an internal lock in CoDiPack. This turned out to be a bottleneck in `InitializeAdjoint` and `IterateDiscreteAdjoint`. Therefore, we ensure sufficient size up front and skip the bounds checking. ## Related Work; Previous work on hybrid parallel AD, like #1214, #1284, #1294. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2039:635,Guid,Guide,635,https://su2code.github.io,https://github.com/su2code/SU2/pull/2039,1,['Guid'],['Guide']
Usability,"## Proposed Changes; When not restarting unsteady problems, set file iteration to 0 (instead of the -1/-2 logic). ## Related Work; https://www.cfd-online.com/Forums/su2/235485-parabolic-velocity-inlet-profile-error.html. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1264:444,simpl,simply,444,https://su2code.github.io,https://github.com/su2code/SU2/pull/1264,1,['simpl'],['simply']
Usability,"## Proposed Changes; While I was writing some documentation on how to set up a basic problem, I noticed that the `PHYSICAL_PROBLEM` had lost its meaning over the the last couple of years and it is hard to explain why it is called like that. It now refers actually to a numerical method that solves a particular problem and not to the physical problem. So I renamed it to `SOLVER`. . Additionally, I removed the `REGIME_TYPE` option and added the incompressible solvers as dedicated values (`INC_EULER`, `INC_RANS`, `INC_NAVIER_STOKES`) for the new `SOLVER` option. The method `GetRegime_Type()` is also removed and it is now explicitly checked for the kind of solvers. This way we remove the implicit assumption that every feature also works with the incompressible solvers. Developers have to deliberately add a check now ... It is a lot of code copy at the moment, but once the restructuring is finished we should be able to remove a lot of it. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/756:1267,guid,guide,1267,https://su2code.github.io,https://github.com/su2code/SU2/pull/756,1,['guid'],['guide']
Usability,"## Proposed Changes; With steady computations, the pywrapper call to `SU2Driver.Run()` will run it for the number of iterations in the config file. The first change this PR makes is that a call to `SU2Driver.Preprocess(nIter)` will overwrite the number of inner iterations when the case is not time dependent. We can now do `SU2Driver.Run()` for a single iteration by setting `SU2Driver.Preprocess(1)`. A call to `SU2Driver.Monitor(Iter)` will check the stopping criteria, including the maximum number of iterations. When you have set this to 1 using `SU2Driver.Preprocess(1)`, a call to `SU2Driver.Monitor(0)` will still stop the calculations because we are checking if (iter+1)>=nIter. The second change is that we now check if (iter >= nIter). I also change this behavior for time dependent problems to make this behavior consistent. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1960:1009,guid,guide,1009,https://su2code.github.io,https://github.com/su2code/SU2/pull/1960,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; `CInterpolator::ReconstructBoundary` builds arrays `Buffer_Receive_StartLinkedNodes`, `_LinkedNodes`,... that store the connectivity of the marker, i.e. the list of neighbor vertices for each vertex. In the previous version of the code, two vertices were considered ""neighbors"" if they were connected through an edge of a volume element (""volume neighbors""). We propose to consider vertices as ""neighbors"" only if they are connected through an edge of a surface element (""surface neighbors""). These two notions are equivalent for smooth surfaces and clearly surface neighbors are always volume neighbors as well. However, at surfaces with sharp edges, two vertices can be volume neighbors without being surface neighbors. This happens when the edge of the volume element connecting the vertices lies inside the domain. `CInterpolator::ReconstructBoundary` is called from `CSlidingMesh::SetTransferCoeff`, which then hands the connectivity structure to `CSlidingMesh::Build_3D_surface_element`. The latter function forms a circular ordering of the neighbors of each vertex s: e.g. if there are four neighbors a,b,c,d of s with connectivity a-b,c-d,b-c,a-d then it performs an iteration over e.g. a-b-c-d. If we understand ""neighbors"" as ""surface neighbors"", the neighbors of any vertex s can be brought into a ""closed circle"" or ""open chain"" ordering where each of them is neighbor only to its direct predecessor and successor. This is not true for the volume neighbor relation however, and in this case the iteration might enter an infinite loop e-a-b-c-d-a-b-... (until the access to `element[ iElementNode ]` segfaults). That's approximately how we (@maxaehle,@mcmorelli,@BeckettZhou,@EduardoMolina) noticed the bug.; ; ## Related Work; #1344 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1346:571,clear,clearly,571,https://su2code.github.io,https://github.com/su2code/SU2/pull/1346,1,['clear'],['clearly']
Usability,"## Proposed Changes; `CSlidingInterface::GetDonor_Variable` needs to access the `Primitive` of flow variables and the `Solution` of turbulent variables. Which one is the case, is currently decided by checking `donor_solution->GetnPrimVar() == 2` (true->turbulent, false->flow). If the SA turbulence model is used, the non-overidden ""virtual placeholder"" `CVariable::GetPrimitive(unsigned long,unsigned long) const` returning zero is incorrectly called. We propose to fix this by additionally checking for `donor_solution->GetnPrimVar() == 1`. ## Related Work; @maxaehle, @mcmorelli, @BeckettZhou, @EduardoMolina. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1344:785,guid,guide,785,https://su2code.github.io,https://github.com/su2code/SU2/pull/1344,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; `JacobianIndex`, one of the `codi-tape` build options, was prone to misunderstandings since it was not clear whether or not the underlying type supports copy optimizations. There are two options now, `JacobianReuse`, which does not support copy optimizations and is similar to the hybrid AD type in that regard, and `JacobianMultiUse`, which does support copy optimizations and is similar to the default type with linear management in that regard.; ; I took the opportunity to also add options for primal value tapes in a consistent manner, they were there previously but less detailed and commented out. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2107:124,clear,clear,124,https://su2code.github.io,https://github.com/su2code/SU2/pull/2107,2,"['Guid', 'clear']","['Guide', 'clear']"
Usability,"## Proposed Changes; ```; SetMarkerCustomInletFlowVar0(marker, vertext, val); SetMarkerCustomInletFlowVar1(marker, vertext, val); SetMarkerCustomInletFlowDirection(marker, vertext, xyz); ``` . ## Related Work; #1079 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2296:504,Guid,Guide,504,https://su2code.github.io,https://github.com/su2code/SU2/pull/2296,1,['Guid'],['Guide']
Usability,"## Proposed Changes; added testcase to check and repair self-intersecting mesh and nonconvex cells after deformation ; ; ## Related Work; fixes #1154, addition to implementation of #1076. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1158:411,simpl,simply,411,https://su2code.github.io,https://github.com/su2code/SU2/pull/1158,1,['simpl'],['simply']
Usability,"## Proposed Changes; adding basic protection for the case of a nonequilibrium viscous flow with ionization; . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x ] I am submitting my contribution to the develop branch.; - [x ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ x] My contribution is commented and consistent with SU2 style.; - [x ] I have added a test case that demonstrates my contribution, if necessary.; - [x ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1497:299,guid,guide,299,https://su2code.github.io,https://github.com/su2code/SU2/pull/1497,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; change limiter to enum class. . Note: For some reason this fixes a problem for the species transport, where the discrete adjoint solver would stop in computelimiters.hpp with the message ""unknown limiter type"". This only happens when a computation is run over more than one node (more than one core is OK though). This is because in CSolver::SetSolution_Limiter, GetKind_SlopeLimit() does not return a valid value for an existing slope limiter. Kind_SlopeLimit is set in CConfig::SetKind_ConvNumScheme, called in CConfig::SetGlobalParam, but this looks OK to me. . I did just notice that in CConfig:: line 3454 we check for MUSCL_Flow, MUSCL_Turb and MUSCL_AdjFlow and MUSCL_AdjTurb, but not for MUSCL_Species or MUSCL_Adj_Species(does not even exist). It looks like there is still something missing here. I do not know why the error ""unknown limiter type"" occured and why it is now fixed by only changing to enum class. ## Related Work; continuing effort to change all enums to enum class. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1550:1184,guid,guide,1184,https://su2code.github.io,https://github.com/su2code/SU2/pull/1550,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; fixed a comment bug . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/904:237,guid,guide,237,https://su2code.github.io,https://github.com/su2code/SU2/pull/904,1,['guid'],['guide']
Usability,"## Proposed Changes; mini-PR that adds missing privatization to a loop variable. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2350:367,Guid,Guide,367,https://su2code.github.io,https://github.com/su2code/SU2/pull/2350,1,['Guid'],['Guide']
Usability,"## Proposed Changes; small Fix regarding marker_inlet_species in the CConfig.cpp. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2139:271,guid,guide,271,https://su2code.github.io,https://github.com/su2code/SU2/pull/2139,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed Changes; small follow-up to #1571, stripping comments and removing some unnecessary options . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1578:278,guid,guide,278,https://su2code.github.io,https://github.com/su2code/SU2/pull/1578,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"## Proposed Changes; the GetFluidProblem() function was returning false for the NEMO_RANS solver. And therefore the CFD_ADAPT feature could not be used with the NEMO_RANS solver. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2193:368,guid,guide,368,https://su2code.github.io,https://github.com/su2code/SU2/pull/2193,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Proposed changes. Dear all,. I am very new to collaboration on a open source project, but I have been working on an update for the FSI computation in python that I think may be useful also for other researcher. Would you mind giving me a feedback about the modifications?. In few words, I have updated the python interface for fluid structure interaction to the new version of SU2, including the new driver, the new mesh deformation methods and few other modifications in the python scripts. It works with python3. As far as the C++ code is concerned, I only added the possibility to separate the symmetry boundary conditions for the fluid solver from the ones of the mesh solver. There is an explanation of this modification in the ReadMe file in SU2_PY/FSI_tools, together with an example of application. . The interface is still general and new structural solvers can be coupled by adding it to the fsi_computation.py file. With the present pull request I only include one structural solver, which provides a coupling with the commercial code Nastran. I added ReadMe files to explain in detail all the modifications and also the keywords to be used in the config files. Finally, there is also a complete test case where the flutter of a flat plate is studied. I am looking forward for your comments. Nicola. ## PR checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1124:241,feedback,feedback,241,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124,2,"['feedback', 'simpl']","['feedback', 'simply']"
Usability,"## Pull request description; This pull request introduces a series of regression cases for the Spalart-Allmaras turbulence model variations and corrections:. - Baseline; - Negative; - Edwards; - Compressibility; - Compressibility and Edwards; - QCR2000; ; ~~The residuals on the python scripts are wrong. These values are temporary and will be updated once the regression tests are run on the Travis CI system.~~; Since this pull request does not introduce any code modification, the residuals on the python scripts have been updated on commit https://github.com/su2code/SU2/pull/1418/commits/1a1661f6cf51be9cdc3c642a7d0424016c7ea3fc with the Travis Cl (sim_vals (computed)) values. ## Related Work; These tests will be further used to verify the correct implementation of #1413 . - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1418:987,simpl,simply,987,https://su2code.github.io,https://github.com/su2code/SU2/pull/1418,1,['simpl'],['simply']
Usability,"## Related Work; 1. I add some code about **CST** to CSurfaceMovement.cpp and it can work well. 2. I add a test case named ""cst"" in **TestCases/deformation**. It contains test case for CST mesh deformation. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2124:379,guid,guide,379,https://su2code.github.io,https://github.com/su2code/SU2/pull/2124,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"## Related Work; oversight in #2293. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2314:323,Guid,Guide,323,https://su2code.github.io,https://github.com/su2code/SU2/pull/2314,1,['Guid'],['Guide']
Usability,"## Steps to reproduce the underlying issue. Compile SU2 with Clang and `-fsanitize=address` (and possibly `-fno-omit-frame-pointer`), and run the testcases as usual. AddressSanitizer warnings appear in the output (if any). So far, only the tests in serial_regression.py have been analyzed. ## Proposed Changes. Depending on the context of the memory leak, ; - add `delete` / `delete[]` statement; - turn `new`-allocated arrays into `std::vector`s, or; - for one bug caused by a `delete` to a base class pointer, make its destructor `virtual`. . ## Related Work. #2211 and #2213 have been detected in the same way, but I'm not sure how to properly fix them. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [not necessary] I have added a test case that demonstrates my contribution, if necessary.; - [not necessary] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2212:829,guid,guide,829,https://su2code.github.io,https://github.com/su2code/SU2/pull/2212,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"### Discussed in https://github.com/su2code/SU2/discussions/1877. <div type='discussions-op-text'>. <sup>Originally posted by **ChristianBauerEng** January 5, 2023</sup>; I would like to monitor the average fluid temperatures in parts of the domain volume. For example here i the part marked red.; ![grafik](https://user-images.githubusercontent.com/42602495/210860583-4e521476-096e-454c-9824-33de652b8e40.png); </div>. In the discussion it became clear, that surface-averages and integrals are supported by means of specifying an MARKER_INTERNAL in the mesh. Could it be possible to extend this functionality to support also volume-elements for MARKER_INTERNAL?. Which code changes would be required to make this happen?. Kind regards,. Christian",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1894:448,clear,clear,448,https://su2code.github.io,https://github.com/su2code/SU2/issues/1894,1,['clear'],['clear']
Usability,"### Discussed in https://github.com/su2code/SU2/discussions/2101. <div type='discussions-op-text'>. <sup>Originally posted by **albenstein** July 26, 2023</sup>; *If this is a general question or difficulty building/using the code, please open a ""Discussion"" instead.*. **Describe the bug**; *Give a clear and concise description of what the bug is and what you expect the behavior to be instead. Please provide enough instructions and data for a developer to reproduce the problem (config, mesh, commands, etc.). Please provide the smallest working example that reproduces the problem.*. **Bug report checklist**; *Please make sure that you have followed the checklist below, many common problems can be solved by:*. - [x] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [x] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [x] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: [e.g., Linux (Redhat 7.9)]; - C++ compiler and version: [e.g., g++ (GCC) 8.5.0]; - MPI implementation and version: [e.g., OpenMPI 4.0.3]; - SU2 Version: [e.g., v7.5.1]. When I use SU2 with QuickStart config file with OpenMPI, it gives error like in attached file.; Command is:; `mpirun -np 8 --allow-run-as-root SU2_CFD inv_NACA0012.cfg`. [segmentation_fault.txt](https://github.com/su2code/SU2/files/12170716/segmentation_fault.txt); </div>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2103:300,clear,clear,300,https://su2code.github.io,https://github.com/su2code/SU2/issues/2103,1,['clear'],['clear']
Usability,"'s unit testing framework](https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html). This provides a convenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time we push commits or submit a pull request, the unit tests are run and checked. ## What is my vision for unit testing in SU2?. I am *not* proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. ## What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. #### Roll-your-own. + Requires no external dependencies; + The most flexible option; + Involves the most work to setup; + Will lack some of the more advances features of mature unit-testing frameworks. #### Boost Test. + Can be header only, statically linked, or dynamically linked; + If statically or dynamically linked, then Boost is not very lightweight; + Easy to add if you're already using Boost. #### Google Test. + Most common unit-testing framework; + Can be easily combined with Google's powerful GMock mocking library; + Compiling and linking can be somewhat painful. #### Catch2. + Used by FEniCS; + Makes unit tests easily readable with lots of syntactic sugar.; + Has a very simple syntax; + Is header-only; + ~~Re",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698:3299,simpl,simpler,3299,https://su2code.github.io,https://github.com/su2code/SU2/issues/698,1,['simpl'],['simpler']
Usability,"(Krylov solvers, sparse approximate factorizations, etc.) is relatively independent from what I have in mind.; Nevertheless being able to use PETSc or HYPRE would be interesting as it would give us access to AMG, and @talbring 's branch feature_template_linear_solver would make such an integration compatible with AD.; What I would like is to have a ""CMatrixDense"" class, to give concrete examples:; - For RBF interpolation the guy who worked on it before me implemented his own Cholesky and LU factorizations, matrix-matrix, matrix-vector routines, etc.; - @jayantmukho recently needed some eigenvector decomposition's for the uncertainty quantification feature.; - I imagine in some other places of the code similar routines were needed, for example small matrix inversion when computing gradients by weighted least squares (indeed what I need now is a QR decomposition). And, as an added bonus, I think some other areas of the code could be simplified / optimized by adopting a dense matrix format, for example:; - This snipped from the viscous numerics refactoring`for (iDim = 0; iDim < nDim; iDim++) {; TauElem[iDim] = 0.0;; for (jDim = 0; jDim < nDim; jDim++); TauElem[iDim] += tau[iDim][jDim]*UnitNormal[jDim];; }` would simply become `TauElem=tau*UnitNormal`; - Cumbersome allocations like `tau_jacobian_i = new su2double* [nDim];; for (iDim = 0; iDim < nDim; iDim++) {; tau_jacobian_i[iDim] = new su2double [nVar];; }` become `Matrix tau_jacobian_i(nDim,nVar);` and the cleanup is dealt with by the destructor of the object automatically. Now to answer some questions.; @juanjosealonso @erangit LAPACK and BLAS are indeed the standard, so much so that most (all?) newer libraries will call their routines behind the scenes.; However they considerably simplify the user interface by encapsulating the aforementioned construction/destruction and by exposing natural ways of manipulating the matrices, e.g. access entire rows, columns, blocks, etc.; Another issue with using BLAS routines is th",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-459653772:1144,simpl,simplified,1144,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-459653772,1,['simpl'],['simplified']
Usability,") and then linked into both the main executable (`SU2_CFD`) and the test program (`test_driver`). ### How to Run Unit Tests. If you compile SU2 using `ninja -C builddir`, then the test executable will automatically be compiled. You then have three options for running the tests:. + `meson test` (see documentation [here](https://mesonbuild.com/Unit-tests.html)); + `ninja test`; + Run the exectuable manually: `./UnitTests/test_driver`. When running the executable manually, there are many customization options. Run `./UnitTests/test_driver --help` to see them all. ### How to add unit tests. I have already included a single unit-test example (`UnitTests/SU2_CFD/src/numerics/CNumerics_tests.cpp`). Aside from the headaches with CConfig, this example should be clear. If not, raise questions and I will answer them. ~~I plan on adding a few more example tests, as well as a ""How-To"" page on the website.~~ Please see the PR on the website repo for more documentation. To learn more, check out the [great tutorial](https://github.com/catchorg/Catch2/blob/master/docs/tutorial.md) for Catch2. You can also find more in-depth documentation there. ### I still don't understand unit tests. Where can I learn more?. I highly recommend reading at least one of these two books:. + ""Working Effectively with Legacy Code,"" by Michael Feathers; + ""Modern C++ Programming with Test-Driven Development,"" by Jeff Langr. ## Remaining work. + ~~Add unit-testing to Travis CI~~; + ~~Add support for unit testing in AD builds~~; + ~~Add more examples of unit tests~~; + ~~Add ""How-To Add Unit Tests"" documentation~~. ## Related Work; This resolves issue #698. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, i",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/850:3319,learn,learn,3319,https://su2code.github.io,https://github.com/su2code/SU2/pull/850,1,['learn'],['learn']
Usability,") then a good approach is to ; 1. make your `enum` of choice an `enum class` and remove the associated numbers. ; 2. Rename here if reasonable, i,.e. `ENUM_INLET_TYPE` can be just `INLET_TYPE`. Also the option names to not be redundant so e.g. `INLET_TYPE::PRESSURE_INLET_TYPE` could become `INLET_TYPE::PRESSURE`; 3. Add a `NONE` or `NO_THING` option if needed. Often the global `NONE` option is and that made a lot of people very angry and has been widely regarded as a bad move 🧙 ; 2. then you go to `CConfig.c/hpp` and change the option type and everything there (because in the `CConfig` class the variable is usually defined). Find the `GetKind_yourOption` and search the code base for that `Get` function.; 3. Once all search results and the following function bodies are changed just compile and fix until the code builds; 4. Special care for switch statements: If not all options are present make a `default; break;` line -> otherwise the automated builds will fail on a warning (clang is used, I found gcc does only complain with an additional flag); 4. commit at best just 1 commit with a clear message and push. That makes reverting easier if it fails and introduced some non-obvious error; ; Have fun :). ## Related Work; #1242. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1258:1509,clear,clear,1509,https://su2code.github.io,https://github.com/su2code/SU2/pull/1258,3,"['clear', 'guid', 'simpl']","['clear', 'guide', 'simply']"
Usability,"); (still CFL = 1.0; Same multigrid configuration); SU2 converged quickly.; ![cusp3levcfl1limiterbarth](https://user-images.githubusercontent.com/32992485/32143902-c058ebdc-bceb-11e7-9b55-32ca093fd729.png); What's more, the result is also acceptable. Based on above results, I set no multigrid working.; SU2 still oscillating when CFL number is 4.0 (Both VENKATAKRISHNAN and BARTH_JESPERSEN limiter); BARTH_JESPERSEN ; ![cusp0levcfl1limiterbarth](https://user-images.githubusercontent.com/32992485/32144074-55ab5434-bcee-11e7-9492-2228fedce56d.png); VENKATAKRISHNAN; ![cusp0levcfl1limiterven](https://user-images.githubusercontent.com/32992485/32144104-a49af86a-bcee-11e7-8918-5328e404a4c6.png); Analogously, I set CFL to 1 again.; But VENKATAKRISHNAN converged but BARTH_JESPERSEN still oscillating. I don't why CUSP occur this situation. Is there any bug in multigrid, limiter and CUSP scheme?. ; I know my ability and knowledge are limited, but I still try to read the code. Some simple ""bugs"" I've found but I doubt it.; In numerics_direct_mean.cpp , I've read compute_residual of CUSP and found something doubtly.; ; At line 643 . > for (iDim = 0; iDim < nDim; iDim++) {; Velocity_i[iDim] = V_i[iDim+1];; Velocity_j[iDim] = V_j[iDim+1];; sq_vel_i += 0.5*Velocity_i[iDim]*Velocity_i[iDim];; sq_vel_j += 0.5*Velocity_j[iDim]*Velocity_j[iDim];; }; ; SoundSpeed_i = sqrt(Gamma*Gamma_Minus_One*(Energy_i-0.5*sq_vel_i));; SoundSpeed_j = sqrt(Gamma*Gamma_Minus_One*(Energy_j-0.5*sq_vel_j));. Here I assume is computing Roe-Sound-Speed, but sq_vel_j's coefficient is not 1/4 but 1/2.; >sqrt(Gamma*Gamma_Minus_One*(Energy_j-0.5*sq_vel_j)). And I don't know whether it's suitable to mix original CUSP and simplified CUSP.; Here, in computing dissipation parameters, SU2 used a simplified Lamda. > LamdaNeg = ProjVelocity - MeanSoundSpeed;; LamdaPos = ProjVelocity + MeanSoundSpeed;. I've read paper and there are two kind of computing-dissipation-parameter method, SU2 seems mixed them. Whether it's legal",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/465:3327,simpl,simple,3327,https://su2code.github.io,https://github.com/su2code/SU2/issues/465,1,['simpl'],['simple']
Usability,"*(Note: I am prototyping a new format for a PR template with this submission. We can set a default template in the repo to help guide new contributors and to make future code reviews easier. Please also comment on this general format/idea or share any suggestions to improve.)*. ## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR is a joint effort with @clarkpede for specifying inlet profiles from a file within the C++ code. For now, it is nearest neighbor, but interpolation can be added in the future. If no file is present, a template file will be generated for your modification (ASCII file, one row per DOF on each inlet marker). It works in parallel and for any number of inlet markers. It operates similarly to restarts: there is a single file reader in CSolver, a single file writer in COutput, and solver-specific load functions in the child solver classes. Therefore, this structure can be expanded in the future for data on any marker type in any solver. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Resolves #467 ; Interacts with work by @tobadavid @oleburghardt . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/516:128,guid,guide,128,https://su2code.github.io,https://github.com/su2code/SU2/pull/516,2,['guid'],['guide']
Usability,"**Describe the bug**. Periodic boundary conditions work well for steady problems and dual-time-stepping. But when I try to use time-stepping (not dual-time-stepping), the periodic boundary condition shows some artifacts. For a problem that's homogeneous in the periodic direction, the transient solution is not homogeneous in the periodic direction. **To Reproduce**. To verify the problem, I looked at the ""navierstokes/poiseuille"" test case. This case is homogeneous in the y direction, and has periodic boundaries. Instead of treating it as a steady-state problem, I did time-marching wit simple time-stepping. I then compared the results with the same simulation on v6.2.0 (before PR #652 changed the periodic boundaries). The y-momentum is very similar in both cases. However, the x-momentum shows inhomogeneity on the develop branch:. ![comparison](https://user-images.githubusercontent.com/13340225/63468140-bc674380-c42c-11e9-976a-ba94def43bd8.gif). Here are the files to recreate my test case:; [periodic_timestepping.tar.gz](https://github.com/su2code/SU2/files/3527333/periodic_timestepping.tar.gz). **My Analysis**. One of my colleagues pointed out that `CSolver::InitiatePeriodicComms` and `CSolver::CompletePeriodicComms` only communicate the residual and the Jacobian of point ""i"" with respect to point ""i"". The Jacobian of point ""i"" with respect to point ""j"" is *not* communicated. This means that a different problem is being passed to the linear solver at the periodic nodes. In v6.2.0, a halo node approach was used, so the linear solver problem was identical for all nodes along a homogeneous direction. If this analysis is correct, then this could be fixed by communicating the full Jacobian (with respect to all neighbors) at the periodic points. **Desktop**; - OS: Ubuntu 18.04; - C++ compiler and version: icc 19.0.2.187; - MPI implementation and version: mpich2/3.2; - SU2 Version: develop branch",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/763:592,simpl,simple,592,https://su2code.github.io,https://github.com/su2code/SU2/issues/763,1,['simpl'],['simple']
Usability,"**Describe the bug**. SU2_DEF fails in FFD_SETTING mode when the options DV_PARAM and DV_VALUE are commented out. Without those options present, SU2_DEF simply reads the mesh and exits without creating an FFD box. Should be a simple fix in the preprocessing to check for this situation and correct it or throw a proper error. **To Reproduce**. Try any case with the options mentioned above commented.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/768:153,simpl,simply,153,https://su2code.github.io,https://github.com/su2code/SU2/issues/768,2,['simpl'],"['simple', 'simply']"
Usability,"**Describe the bug**. You will have to bear with me, I might get some of this wrong, I am not entirely sure what is going on here so I will try and include as much information as possible. Using the tape tagging method developed by @oleburghardt in #2343 and presented at the most recent SU2 Conference, a run of the full tape reveals that a variable used in a preaccumulation output is not properly recorded. The variable is the `val` in the function `PassiveAssign` in `CSysMatrix.hpp` line 215. `FORCEINLINE static ScalarType PassiveAssign(const SrcType& val) {; return SU2_TYPE::GetValue(val);; }`. Following the call stack of the error reveals that the problem variables in `val` are the jacobian components calculated in the Roe and JST scheme (these are the two options I have tested). It is possible to resolve this error by simply moving the stopping of the preaccumulation region from before the call to `updateLinearSystem` in the `ComputeFlux` method of both these schemes, to after, as show below. `/*--- Update the vector and system matrix. ---*/. updateLinearSystem(iEdge, iPoint, jPoint, implicit, updateType,; updateMask, flux, jac_i, jac_j, vector, matrix);. /*--- Stop preaccumulation. ---*/. stopPreacc(flux);`. However, whilst this resolve the error in this location, the next error appears in the Giles boundary condition. Here the two jacobian components within the residual object are not recorded correctly in the preaccumulation output region also. This in `CEulerSolver.cpp:6556`. `/*--- Compute the residual using an upwind scheme ---*/; auto residual = conv_numerics->ComputeResidual(config);. /*--- Update residual value ---*/; LinSysRes.AddBlock(iPoint, residual);`. I have tried simpy adding these components as preacc outputs however they are SIMD arrays and the datatype cannot be converted using the existing implementation. . I am not sure what is going on here, or the next steps to resolve this problem. Any further assistance would be greatly appreciated, thank ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2368:833,simpl,simply,833,https://su2code.github.io,https://github.com/su2code/SU2/issues/2368,1,['simpl'],['simply']
Usability,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. **Desktop (please complete the following information):**; - OS: [e.g., Linux (Redhat 6.6)]; - C++ compiler and version: [e.g., g++ (GCC) 4.8.5]; - MPI implementation and version: [e.g., OpenMPI 3.0.0]; - SU2 Version: [e.g., v6.2.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/855:25,clear,clear,25,https://su2code.github.io,https://github.com/su2code/SU2/issues/855,1,['clear'],['clear']
Usability,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. 2D axisymmetry source terms for the SA turbulence model are not implemented. There is also no warning/error to the user.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1565:25,clear,clear,25,https://su2code.github.io,https://github.com/su2code/SU2/issues/1565,1,['clear'],['clear']
Usability,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. As I used SU2 develop version for shape optimization, it gave a keyerror in TestCase ; disc_adj_rans/naca0012, ; shape_optimization.py -f turb_NACA0012_sa.cfg; and disc_adj_rans/cylinder,; shape_optimization.py -f cylinder_Windowing.cfg. I have compiled SU2 with AD enabled. ; Also try disc_adj_turbomachinery/transonic_stator_2d, gave the same error.; I would like to know if I make some mistakes to run the testcases. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. Found: mesh_cylinder.su2; New Project: ./; Traceback (most recent call last):; File ""/home/wkholy/su2/bin/SU2/io/config.py"", line 164, in __getitem__; return super(Config,self).__getitem__(k); KeyError: 'OPT_OBJECTIVE'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""/home/wkholy/su2/bin/shape_optimization.py"", line 183, in <module>; main(); File ""/home/wkholy/su2/bin/shape_optimization.py"", line 92, in main; shape_optimization( options.filename ,; File ""/home/wkholy/su2/bin/shape_optimization.py"", line 155, in shape_optimization; project = SU2.opt.Project(config,state); File ""/home/wkholy/su2/bin/SU2/opt/project.py"", line 114, in __init__; def_objs = config['OPT_OBJECTIVE']; File ""/home/wkholy/su2/bin/SU2/io/config.py"", line 166, in __getitem__; raise KeyError('Config parameter not found: %s' % k); KeyError: 'Config parameter not found: OPT_OBJECTIVE'. **Desktop (please complete the following information):**; - OS: [e.g., Linux (Redhat 6.6)]; - C++ compiler and version: [e.g., g++ (GCC) 4.8.5]; - MPI implementation and version: [e.g., OpenMPI 3.0.0]; - SU2 Version: [e.g., v6.2.0]. Ubuntu 20.04; C++ gcc version 9.4.0; SU2 version 7.3.1 develop",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1714:25,clear,clear,25,https://su2code.github.io,https://github.com/su2code/SU2/issues/1714,1,['clear'],['clear']
Usability,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. Hi all,. The STL-file writer does not write quad surface elements (So far so good :) ). So in case of a Hexa-Grid (i.e. quad surface elements) the .stl is pretty much empty, which is not really what we want.; I will attach an image later (firewall's at it again) down below which shows a mixed surface mesh (tris and quads). On the left will be the current version of SU2 where quads are simply not written and on the right a fixed version where each quad is separated into 2 tris. ![stl_quads_tris](https://user-images.githubusercontent.com/31306376/58827759-17667700-8644-11e9-9e6f-4643d2e7fdb7.JPG). That was found (and fixed) by Fabian Woerenkaemper @ElGarno . As the output is currently overhauled, I shortly chatted with its adoptive father @talbring and I will adapt the fixed STL-writer to the new structure and it will (hopefully) go into develop with that in a somewhat near future. If you desperately ;) need that fix right now, I can add a patch for the current develop down below. Cheers, Tobi. **Desktop (please complete the following information):**; - SU2 Version: latest develop, but this problem is probably also present in older versions.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/694:25,clear,clear,25,https://su2code.github.io,https://github.com/su2code/SU2/issues/694,2,"['clear', 'simpl']","['clear', 'simply']"
Usability,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. Hi,. I am currently using SU2 to do some test cases for AIAA 1st Stability and Control Workshop. These cases need to run with a fixed-Cl as the DPW6 cases did. When I tried to use the knobs “FIXED_CL_MODE= YES” and “TARGET_CL= 0.50” in the .cfg input file to run these cases, the Cl change always got some odd significant jumps even though the AoA change was quite small and then the computations diverged after a while. . I am not sure if I used a correct way for the fixed-Cl computations (no optimization and design needed). I know some reported research did use SU2 for DPW6 cases with fixed-Cls. . Thank you very much!. Wei. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%; % %; % SU2 configuration file %; % Case description: CRM model for S&C workshop %; % Author: %; % Institution: %; % Date: %; % File Version 7.1.1 ""Blackbird"" %; % %; %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%. % ------------- DIRECT, ADJOINT, AND LINEARIZED PROBLEM DEFINITION ------------%; %; % Physical governing equations (EULER, NAVIER_STOKES,RANS,; % WAVE_EQUATION, HEAT_EQUATION, FEM_ELASTICITY,; % POISSON_EQUATION) ; SOLVER= RANS; %; % Specify turbulence model (NONE, SA, SA_NEG, SST); KIND_TURB_MODEL= SST; %; % Mathematical problem (DIRECT, CONTINUOUS_ADJOINT, DISCRETE_ADJOINT); MATH_PROBLEM= DIRECT; %; % Restart solution (NO, YES); RESTART_SOL= YES; %; % System of measurements (SI, US); % International system of units (SI): ( meters, kilograms, Kelvins,; % Newtons = kg m/s^2, Pascals = N/m^2, ; % Density = kg/m^3, Speed = m/s,; % Equiv. Area = m^2 ); % United States customary units (US): ( inches, slug, Rankines, lbf = slug ft/s^2, ; % p",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1297:25,clear,clear,25,https://su2code.github.io,https://github.com/su2code/SU2/issues/1297,1,['clear'],['clear']
Usability,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. I am running a WMLES channel flow test case with grid size 102 x 31 x 52 = 164424 nodes. When running the problem on a large number of cores, e.g. 128 cores, SU2 fails during the preprocessing step. Running valgrind gives the error; ![image](https://user-images.githubusercontent.com/41386609/97629439-580a2180-19eb-11eb-9e9f-023fc96c05aa.png); which for my version corresponds to this line; ![image](https://user-images.githubusercontent.com/41386609/97629473-66f0d400-19eb-11eb-89c8-9b677c720240.png); It seems that theres a mismatch on the receiver end. The problem disappears if I use smaller number of cores, e.g. 64, and everything will look normal (solution converges and SU2 exit normally). The actual number of MPI cores that triggers the bug seems to be problem dependent. I also ran a couple of finer grids but started to see the bug with 64 cores. For these finer mesh, reducing to a smaller number like 48 cores makes the problem disappear again. Similar problem has been observed by @clarkpede and mentioned in pecos-hybrid/su2#53 but he was using an older version of SU2 (v6.2.0). I should mention another common thing is that we are both using periodic boundary conditions. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*; [wmles_chan_re5200.zip](https://github.com/su2code/SU2/files/5461150/wmles_chan_re5200.zip); (Reminder: This has to be ran with very large number of cores though. I see the problem with 128 cores). **Desktop (please complete the following information):**; - OS: CentOS Linux release 7.6.1810; - C++ compiler and version: gcc/6.3.0 ; - MPI implementation and version: openmpi/3.1.2; - SU2 Version: v7.0.3",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1099:25,clear,clear,25,https://su2code.github.io,https://github.com/su2code/SU2/issues/1099,1,['clear'],['clear']
Usability,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. I've used SU2 off and on for a long time. I fairly recently set up a 4 machine cluster (16 cores each) to run CFD problems on. The cluster is connected together with 1G ethernet. On SU2 v6.2 and earlier, when I ran a problem on multiple machines the time per iteration would improve up until i hit a limit where presumably network overhead exceeded the benefit of adding another machine (The limit for my set up was something like 0.5 s/iteration. . I just tried SU2 v7 on this same cluster and consistently the time per iteration gets worse when I add a second machine and double the process count. I've tried this on smaller problems (~1Mill cells) but I've also tried it on larger ones (~27Million cells). On the larger problem, one machine with 16 processes ran at 34s/iteration and 2 machines with 32 processes also ran at 34s/iteration. For that problem size, I would expect a near 2x improvement in iteration time when doubling processes. Other than this, the apples to apples comparison between SU2 v6 and v7 is otherwise very impressive where iteration times have come down even for higher CFL's. I did compile SU2 from source. I tried to compile it the same way for both v6.2 and v7 though with the different build system its a little bit harder to be certain that its all exactly the same. Given that v7 performs fine going up to 16 processes on one machine, I don't think that its a compilation issue, but admittedly I don't know all the intricacies of mpi. . Since its just multi machine that's an issue, I wonder if there's something about v7 that make it more bandwidth/latency dependent that would go away with a faster network. Or is this just a regression do to (compiler version, mpi version, a network misconfiguration...)?. Anyway I know this a bit rambling, but any help would be appreciated. I",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894:25,clear,clear,25,https://su2code.github.io,https://github.com/su2code/SU2/issues/894,1,['clear'],['clear']
Usability,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. It was brought to our attention that what we currently define as the ""Standard"" SA model is not using the ft2 term in the source implementation:. https://github.com/su2code/SU2/blob/20888f488752e4e8aaa5230e56c5417923c7c344/SU2_CFD/src/numerics/turbulent/turb_sources.cpp#L137. which means it is actually the SA-noft2 variant:. https://turbmodels.larc.nasa.gov/spalart.html#sanoft2. In practice, this should make little difference for most problems, but it can be important for DES/DDES (where the ft2 term is typically avoided). However, it is also important that we be clear about the different variants of the turbulence models to users, since having confidence in the models for V&V, reproducibility, etc., is so critical. I would vote that we reinstate the ""standard"" model and make a new SA variant for SA-noft2 as a separate option (without duplicating a ton of code, if possible). Anyone else feel strongly about this topic?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/992:25,clear,clear,25,https://su2code.github.io,https://github.com/su2code/SU2/issues/992,2,['clear'],['clear']
Usability,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. Python wrapper hangs on Set_MPI_ActDisk in CEulerSolver.cpp line 1091 ""SU2_MPI::Barrier(MPI_COMM_WORLD);""; If the SU2_CFD is called without python wrapper, it runs ok. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. Go to the test case solver, choose the propeller one and run the following script. mpirun -np 2 python launch_su2.py --parallel -f propeller.cfg; [launch_su2.py.txt](https://github.com/su2code/SU2/files/5762218/launch_su2.py.txt). There is no issue when SU2_CFD is called directly:; mpirun -np 2 SU2_CFD propeller.cfg. **Desktop (please complete the following information):**; - OS: [Ubuntu 16.04.6 LTS]; - C++ compiler and version: [g++ (GCC) 9.3.0]; - MPI implementation and version: [OpenMPI 4.0.5]; - SU2 Version: [develop]; - Python Version: 3.6.12; - MPI4Py Version: 3.0.3. In order to fully reproduce the error one can try running the following commands under Anaconda Python Manager, although the same error appears using the default ubuntu python3 and openmpi compilers :; ->conda create -n su2code python=3.6; ->conda activate su2code; ->conda install -c conda-forge c-compiler compilers cxx-compiler openmpi swig mpi4py numpy scipy. Install SU2 with the following script:. #!/bin/bash; export CC=/path/anaconda3/envs/su2code/bin/mpicc; export CXX=/path/anaconda3/envs/su2code/bin/mpicxx; export CXXFLAGS=${CXXFLAGS}:""-lmpi""; rm -rf SU2/build; rm -rf SU2_exec_dev/bin; cd SU2; ./meson.py build -Denable-pywrapper=true -Dcustom-mpi=true --prefix=/path/SU2_exec_dev; ./ninja -C build install",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1150:25,clear,clear,25,https://su2code.github.io,https://github.com/su2code/SU2/issues/1150,1,['clear'],['clear']
Usability,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. This issue is a follow-up of a discussion here: https://www.cfd-online.com/Forums/su2/241889-rotating_frame-grid-velocity-correct-flow-physics-wrong.html. Summary: To calculate an aircraft during pitch-up as a steady Euler simulation, I use the dynamic / moving mesh module with GRID_MOVEMENT= STEADY_TRANSLATION and/or ROTATING_FRAME and set the farfield mach number = 0.0. The results look fine, but when reading the nodal forces f_xyz on the surface via pysu2 and GetFlowLoad(), I now receive NaNs... My first idea was that maybe the forces are calculated from the pressure coefficients, which show ""strange"" values in Tecplot, probably due to the division by V_inf=0.0. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*; I derived a test case from the Naca0012 example and added a short python script that should reproduce the NaNs in line 66.; [testcase_dynamic_mesh.zip](https://github.com/su2code/SU2/files/8396025/testcase_dynamic_mesh.zip). **Desktop (please complete the following information):**; - OS: Red Hat Enterprise Linux Workstation 7.9; - C++ compiler and version: mpicc (gcc 4.8.5 ""gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-44)""); - MPI implementation and version: MPICH 3.4.2; - SU2 Version: 7.3.0 ""Blackbird""",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1588:25,clear,clear,25,https://su2code.github.io,https://github.com/su2code/SU2/issues/1588,1,['clear'],['clear']
Usability,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. related to #1631 . A similar fix is necessary for supersonic inlets. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1639:25,clear,clear,25,https://su2code.github.io,https://github.com/su2code/SU2/issues/1639,1,['clear'],['clear']
Usability,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. some recent changes causes SU2/develop to fail to compile on older compilers. Specifically:; I cannot compile SU2 with gnu compilers older than 7.4.0. My next most recent compiler gnu/10.2.1 works.; I cannot compile SU2 with intel compilers < 17.0, which is the most recent compiler installed on our system; I cannot compile SU2 with openmpi support, even for the gnu compiler gnu/10.2.1 that works. ; EDIT: The HPC guys added openmpi/4.0.4 which, together with gnu/10.2.1, compiles; I have mpich on my local machine, together with gnu 10.3.0, which still works.; What I understood from @Cristopher-Morales is that even the most recent openmpi/4.1.3 does not work (@Cristopher-Morales what was the gnu compiler version you used?). . So this issue affects the RB HPC as well as the TU/e HPC.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1701:25,clear,clear,25,https://su2code.github.io,https://github.com/su2code/SU2/issues/1701,1,['clear'],['clear']
Usability,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*; For axisymmetric flows where the outflow is aligned with the symmetry axis (horizontal axisymmetry, vertical outlet), the computed outlet area of the circular outlet can be off by 10%.; This is due (I think) to the fact that the node normals are used for the computation of the edge size and integrated area and mass flux. This computation is performed e.g. in CIncEulerSolver::GetOutlet_Properties. An approach where the marker edges are used instead to compute the edge sizes leads to the correct area and mass flux computations. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. **Desktop (please complete the following information):**; - SU2 Version: current develop",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1710:25,clear,clear,25,https://su2code.github.io,https://github.com/su2code/SU2/issues/1710,1,['clear'],['clear']
Usability,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*; I say ""newer ubuntu linux distributions"" cause that's what I have, but this is probably due to some compiler/glibc change that will affect all newer systems that upgrade glibc.; When compiling with -Denable-tests=true, we are using catch2.hpp from the externals/ folder. This catch version is v2.11.1. However, the behavior of glibc(? what I understood from some bug reports) changed somewhere last year, specifically MINSIGSTKSZ became non-constant, leading to the following errors below. To prevent this issue, catch needs to be upgraded to version>2.13.5. In my case, recompiling with the system version of catch2-2.13.8-1 was sufficient to be able to compile again. . ```; FAILED: UnitTests/test_driver.p/test_driver.cpp.o ; /usr/bin/mpicxx.mpich -IUnitTests/test_driver.p -IUnitTests -I../UnitTests -ISU2_CFD/src -I../SU2_CFD/src -ICommon/src -I../Common/src -I../externals/CLI11 -I../externals/cgns/adf -I../externals/cgns/adfh -Iexternals/cgns -I../externals/cgns -Iexternals/cgns/hdf5 -I../externals/cgns/hdf5 -I../externals/metis/include -I../externals/metis/GKlib -I../externals/metis/libmetis -I../externals/parmetis/include -I../externals/parmetis/libparmetis -I../externals/mel -I../externals/catch2 -I/usr/include/x86_64-linux-gnu/mpich -fdiagnostics-color=always -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -Wnon-virtual-dtor -Wextra -std=c++11 -O3 -fPIC -Wno-empty-body -Wno-unused-parameter -Wno-deprecated-declarations -Wno-non-virtual-dtor -DHAVE_CGNS -DNDEBUG -DHAVE_MPI -DHAVE_METIS -DHAVE_PARMETIS -MD -MQ UnitTests/test_driver.p/test_driver.cpp.o -MF UnitTests/test_driver.p/test_driver.cpp.o.d -o UnitTests/test_driver.p/test_driver.cpp.o -c ../UnitTests/test_driver.cpp; In file included from /usr/include/signal.h:328,; from ../externals/catch2/catch.hpp:7955,; from ../UnitTests/test_driver",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1724:25,clear,clear,25,https://su2code.github.io,https://github.com/su2code/SU2/issues/1724,1,['clear'],['clear']
Usability,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*; I try to build SU2 from source on cluster. but it failed in Generating 'SU2_PY/pySU2/_pysu2.so.p/pySU2.cxx'. The log of meson build info is like the figure shows; ![image](https://user-images.githubusercontent.com/54931653/165111891-b9f26f7f-efe4-4e08-a7af-0945f916748a.png); ![image](https://user-images.githubusercontent.com/54931653/165111974-25211d0c-72e0-401e-8619-ab8c30163fd5.png); ![image](https://user-images.githubusercontent.com/54931653/165112038-98e00c96-c2fb-4662-b98d-6b7a9be4581a.png); ![image](https://user-images.githubusercontent.com/54931653/165112129-cd00f7ef-1195-4a39-86a5-608fb0b036eb.png); ![image](https://user-images.githubusercontent.com/54931653/165112177-4dbef8c9-cb54-48ec-9787-6ef7213ce934.png). when using ninja, it shows the error like the figure show; ![image](https://user-images.githubusercontent.com/54931653/165111571-a795012b-e0f4-4fb7-9f87-f78c67242a2f.png). **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*; The meson command for build is; ./meson.py build -Dcustom-mpi=true -Denable-pywrapper=true --prefix=$HOME/SU2_prefix . **Desktop (please complete the following information):**; - OS: [Red Hat 8.5.0-4]())); - C++ compiler and version: [gcc 8.5.0]; - MPI implementation and version: [intel MPI]; - SU2 Version: [ v7.3.1]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1617:25,clear,clear,25,https://su2code.github.io,https://github.com/su2code/SU2/issues/1617,1,['clear'],['clear']
Usability,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*; When I build a parallel version of SU2 under Win10, I get an error like. “OSError: [WinError 123] 文件名、目录名或卷标语法不正确。: 'D:\\mingw-w64\\x86_64\\mingw64\\bin\\..\\lib\\gcc\\x86_64-w64-mingw32\\8.1.0\\libC:\\Program Files (x86)\\Microsoft SDKs\\MPI\\Lib\\x64\\msmpi.a'”. I noticed that other people on Github have also raised this issue, but it hasn't been resolved, and I'm curious to know, what should I deal with it.; thanks！. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*; [wrong _information.txt](https://github.com/su2code/SU2/files/7734843/wrong._information.txt); [meson-info_json.txt](https://github.com/su2code/SU2/files/7734868/meson-info_json.txt). **Desktop (please complete the following information):**; - OS: [win10 ]; - C++ compiler and version: [ g++ (GCC) 8.1.0]; - MPI implementation and version: [Microsoft MPI v10.1.2]; - SU2 Version: [v7.2.1]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1471:25,clear,clear,25,https://su2code.github.io,https://github.com/su2code/SU2/issues/1471,1,['clear'],['clear']
Usability,"**Describe the bug**; *Give a clear and concise description of what the bug is and what you expect the behaviour to be instead. Please provide enough instructions and data for a developer to reproduce the problem (config, mesh, commands, etc.). Please provide the smallest working example that reproduces the problem.*. Hi all,. I posted this on the CFD forum, and one of the members mentioned it may be a bug and post it here. . I am simulating flow over an inlet at hypersonic speeds (Mach 7) in 2D using the JST scheme. I have done a mesh convergence study with an inviscid simulation and the residuals go to machine accuracy for all the meshes and works fine. I am using the Navier-Stokes solver for the viscous simulations. I have 5 meshes (very_coarse, coarse, medium, fine, very_fine) to do a mesh convergence study. The very_coarse (VC) and coarse (C) meshes converge to a residual rho of -8.5 and -9 with Cauchy on drag = -10 orders of magnitude. The finer meshes barely converge to -4 to -5, before increasing -2 where they plateau. For all of the meshes (including the converged VC and C), there is an abnormal region with a higher Mach number at the leading edge (11 for VC and 9 for C). Following one of the discussion on the CFD forum (https://www.cfd-online.com/Forums/su2/142261-anomalous-mach-number.html), I extended the domain around the leading edge, but that had no effect on this region. I played around with the 2nd and 4th coefficients in the scheme; the 4th coefficient has not effect on this region. Increasing 2nd coefficient smooths discontinuities, so it decreases the Mach number in those regions but its still higher than freestream. Increasing the 2nd coefficient also makes the shock resolution in the rest of the flow field very smooth (looks like a smudge on the screen). Is there a reason why this happens? I did a few first order upwind simulations; they converge almost instantly and the higher Mach region does not exist. Nor does it exist in 2nd order upwind sc",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2330:30,clear,clear,30,https://su2code.github.io,https://github.com/su2code/SU2/issues/2330,1,['clear'],['clear']
Usability,"**Describe the bug**; 1.; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. When I tried to run the TestCases/disc_adj_turbomachinery/transonic_stator_2D, it showed the error.; Seem the error was reported in https://github.com/su2code/SU2/issues/889.; But in version 7.3.1, it still has similar issues.; May I ask how to use updateHistoryMap.py to add custom objectives? Thanks. raceback (most recent call last):; File ""/usr/local/bin/shape_optimization.py"", line 183, in <module>; main(); File ""/usr/local/bin/shape_optimization.py"", line 92, in main; shape_optimization( options.filename ,; File ""/usr/local/bin/shape_optimization.py"", line 155, in shape_optimization; project = SU2.opt.Project(config,state); File ""/usr/local/bin/SU2/opt/project.py"", line 129, in __init__; group = historyOutFields[this_obj]['GROUP']; KeyError: 'ENTROPY_GENERATION'. 2; When I run the case in TestCases/turbomachinery/axial_stage_2D, the value for Total-Total Eff is increased with the total iterative step. When I set Number of total iterations = 3000, the EFF is increased than Number of total iterations =1000. But the pressure ratio remains unchanged. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. TestCases/turbomachinery/axial_stage_2D. **Desktop (please complete the following information):**; - OS: [e.g., Linux (Ubuntu 20.04)]; - C++ compiler and version: [e.g., g++ (GCC) 9.4.0]; - MPI implementation and version: [e.g., OpenMPI 4.0.3]; - SU2 Version: [e.g., v7.3.1]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1628:29,clear,clear,29,https://su2code.github.io,https://github.com/su2code/SU2/issues/1628,1,['clear'],['clear']
Usability,"**Describe the bug**; Hello everyone, . I'm trying to study the secondary flows around a compressor stator blade. To do so, I need to simulate the 3d blade, the hub and the shroud (as shown in the picture below).; ![blade](https://user-images.githubusercontent.com/24920252/140755903-23c7ad28-3b91-4476-9eae-8907b20a8bf7.png). To simplify a bit the problem, the geometry is assumed to be constant along the span. Therefore, a hybrid mesh is used on a 2d surface and is extruded along the span. The following pictures represented a global view of the test case, the hybrid mesh and the mesh distribution for the extrusion:. ![global](https://user-images.githubusercontent.com/24920252/140758176-d1e5da98-5e54-457e-9a80-92878a1e88ba.png); ![2dmesh](https://user-images.githubusercontent.com/24920252/140756176-4560688b-1c6c-42e7-b404-95589764acad.png). ![extrusion](https://user-images.githubusercontent.com/24920252/140756190-d5a423b7-c172-4fff-9fe3-53ed0364756e.png). As we can see, the mesh is refined near the two walls (the hub/shroud) to get a y+ of 1 and here starts my issue. . While I can retrieve a correct y+ near the blade, I have trouble to get a y+ lower than 65 near the walls. At y+ = 65, SU2 runs and converges to some results. For y+ < 65, SU2 raises a segmentation fault at this location: ; ![segfault](https://user-images.githubusercontent.com/24920252/140756620-db3ed08f-05cd-4811-b037-642a221ea501.png); Here are the results of the gdb analysis. It seems that the seg faut comes from the Giles BC part of the initialisation of the turbo data containers. Especially those lines (CEulerSolver.cpp line 435-436). `CkInflow[iMarker].resize(nSpanWiseSections,2*geometry->GetnFreqSpanMax(INFLOW)+1) = complex<su2double>(0.0,0.0);`. `CkOutflow1[iMarker].resize(nSpanWiseSections,2*geometry->GetnFreqSpanMax(OUTFLOW)+1) = complex<su2double>(0.0,0.0);`. but I don't understand why. ![issue](https://user-images.githubusercontent.com/24920252/140783485-0d856d2a-7353-468f-aeab-c78b742d8582.p",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1429:330,simpl,simplify,330,https://su2code.github.io,https://github.com/su2code/SU2/issues/1429,1,['simpl'],['simplify']
Usability,"**Describe the bug**; Hello to everyone,; my research group and I found some differences in the computation of the skin friction coefficient between the JST and ROE schemes near the symmetry plane.; The difference is that when using the JST scheme, there is a gradient of the skin friction coefficient at the symmetry plane.; I expect that on the symmetry plane there would be no gradient. This issue is present only for the skin friction coefficient.; We found this difference for a straight wing, but we reproduced the same issue for the SU2 test case OneraM6.; <img src=""https://user-images.githubusercontent.com/53580993/101330251-ab855000-3872-11eb-90df-561ddfe3ed38.png"" width=""400"" height=""400""> <img src=""https://user-images.githubusercontent.com/53580993/101330317-be982000-3872-11eb-9b55-4fa87e55bef6.png"" width=""400"" height=""400"">. For the case of our straight wing, maybe it could be more clear, so here is the comparison for our case.; <img src=""https://user-images.githubusercontent.com/53580993/101330692-36fee100-3873-11eb-8638-827bc9008128.png"" width=""400"" height=""400""> <img src=""https://user-images.githubusercontent.com/53580993/101330706-3bc39500-3873-11eb-8d35-bc28fe432ffc.png"" width=""400"" height=""400"">. I think that there could be a problem on the symmetry plane boundary condition when using the JST scheme.; This issue is present since SU2 V6.2.0 until the latest release 7.0.8.; Thank you in advance for your help. **To Reproduce**; To reproduce the problem you can use the OneraM6 test case in the TestCases folder, just changing the scheme between ROE and JST. **Desktop (please complete the following information):**; - OS: Linux (Ubuntu 20.04.1 LTS); - C++ compiler and version: gcc 9.3.0; - MPI implementation and version: mpich 3.3.2; - SU2 Version: from 6.2.0 to 7.0.8",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1125:901,clear,clear,901,https://su2code.github.io,https://github.com/su2code/SU2/issues/1125,1,['clear'],['clear']
Usability,"**Describe the bug**; It looks like we do not actually need to prescribe unit normal vectors for MARKER_INLET, because it is normalized in the code, e.g. in BC_Inlet. When a 2D inlet is at a 45 degree angle, the normal vector of the inlet can be given as [1.0, 1.0] in the config file. However, when you want to generate and use an inlet profile for this, you will get an error message . ```; ERROR: Found these values in columns 4 - 5; [1.000000e+00, 1.000000e+00]; These values should be components of a unit vector for direction,; but their magnitude is: 1.414214e+00; ```; I suggest to accept non-normalized vectors as input. This simply means that we remove this check for inlet profiles and update the description for the inlet boundary condition: **accepts surface normal vector** instead of **accepts surface unit normal vector**",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1495:635,simpl,simply,635,https://su2code.github.io,https://github.com/su2code/SU2/issues/1495,1,['simpl'],['simply']
Usability,"**Describe the bug**; The rotating frame grid velocities are not set properly if used in 2-D. This is due to the error in SetRotationalVelocity routine in CGeomtery class (Cgeometry.cpp line 3881). The loop counter to find the Omega only goes upto nDim and in 2-D any rotation about the Z-axis is not considered. . **To Reproduce**; https://github.com/su2code/SU2/tree/master/TestCases/turbomachinery/centrifugal_blade is an example of a test case using rotating frame simulations in 2-D. Some of the turbomachinery options did not work for me, so I changed the turbomachinery markers to simple inlet and outlet just to get something running in this [config file.](https://github.com/su2code/SU2/files/4158761/centrifugal_blade.txt). The fix is fairly straightforward to change the loop counter to 3 in line 3891, but I wasn't sure if it is appropriate to make a PR for just this. Is it possible to add it into one of the existing ones?. Regards,; Akshay",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/860:588,simpl,simple,588,https://su2code.github.io,https://github.com/su2code/SU2/issues/860,1,['simpl'],['simple']
Usability,**Describe the bug**; When I run the meson script for building it gives the wrong build command. This is both for the master and develop version. **To Reproduce**; Simply type; ./meson.py build. One of the last output lines is; Use './ninja -C false install' to compile and install SU2. while it should be; Use './ninja -C build install' to compile and install SU2. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - C++ compiler and version: GCC 8.4.0; - MPI implementation and version: Sequential; - SU2 Version: 7.0.5,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1011:164,Simpl,Simply,164,https://su2code.github.io,https://github.com/su2code/SU2/issues/1011,1,['Simpl'],['Simply']
Usability,"**Describe the bug**; When compiling the master branch or v7.1.1 of SU2, as described in the [Quick compilation guide](https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/#quick-compilation-guide) with gcc version 11.1.0, the ninja command fails, saying that `'numeric_limits' is not a member of 'std'`. **Likely reason**; There were [header dependency changes in GCC 11](https://www.gnu.org/software/gcc/gcc-11/porting_to.html#header-dep-changes). Probably because of this, the header `<limits>` is not (recursively) `#include`d from the file. Common/include/geometry/primal_grid/CPrimalGrid.hpp. any more. Thus `std::numeric_limits` has not been declared when it is used in line 243. **Solution**; `#include <limits>` in `CPrimalGrid.hpp`",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1293:112,guid,guide,112,https://su2code.github.io,https://github.com/su2code/SU2/issues/1293,2,['guid'],['guide']
Usability,"**Disclaimer**; The performance numbers that follow are based on simple implementations of the methods, I do not claim any of my implementations or choice of methods to be optimal. If you know better speak up.; The data is from the case used to benchmark #753 (see #716), it is by no means an extensive collection of different grid types. I will share code and data with anyone who wants to repeat the tests on the condition they post detailed results. With that out of the way :) ... ### Green-Gauss Gradients. This is the plain edge-loop version of the code with boundary contributions omitted for simplicity:; ```C++; void computeGradients(size_t nEdge,; size_t nPoint,; size_t nVar,; size_t nDim,; const vector<pair<size_t,size_t> >& connectivity,; const Matrix& area,; const vector<double>& volume,; const Matrix& phi,; VectorOfMatrix& grad); {; grad.setZero();. for(size_t iEdge=0; iEdge<nEdge; ++iEdge); {; size_t iPoint = connectivity[iEdge].first;; size_t jPoint = connectivity[iEdge].second;. for(size_t iVar=0; iVar<nVar; ++iVar); {; double phi_ave = 0.5*(phi(iPoint,iVar)+phi(jPoint,iVar));. for(size_t iDim=0; iDim<nDim; ++iDim); {; double flux = phi_ave*area(iEdge,iDim);. grad(iPoint,iVar,iDim) += flux;; grad(jPoint,iVar,iDim) -= flux;; }; }; }. for(size_t iPoint=0; iPoint<nPoint; ++iPoint); for(size_t iVar=0; iVar<nVar; ++iVar); for(size_t iDim=0; iDim<nDim; ++iDim); grad(iPoint,iVar,iDim) /= volume[iPoint];; }; ```; This is more or less what SU2 does with minor differences on how the edges (`connectivity`) and area are stored, there is no vectorization nor easy way to make the loop parallel, this will be the reference for execution times. Suppose now that due to a perfect storm the number of variables is 4, here is how with a few pragmas we get gcc to vectorize:; ```C++; template<size_t nVar>; void computeGradients_impl(size_t nEdge,; size_t nPoint,; size_t nDim,; const vector<pair<size_t,size_t> >& connectivity,; const Matrix& area,; const vector<double>& volume,; con",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530328194:65,simpl,simple,65,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530328194,2,['simpl'],"['simple', 'simplicity']"
Usability,"**Is your feature request related to a problem? Please describe.**. Hello guys,. Have you ever heard about MHD(magnetohydrodynamics) simulation? That's used in plasma physics with the hypothesis that most of the particles in a control volume have the same velocity. However, the atoms' first electrons are stripped and, hence, magnetic field confinement to the plasma is possible due to ions and electrons' net charge. Moreover, due to the huge mass difference between ion and electron, they are normally treated as two-fluid interacting with each other. The most successful MHD code is produced by [PPPL](https://w3.pppl.gov/~nferraro/m3dc1.html), but not open source. I want to base on SU2 to make a flexible one. Do you think a feature_* or develop branch is better?. feature_ExMHD(extended MHD) may be a good branch name?. **Describe alternatives you've considered**; If there already exists the relevant module concerning the electromagnetic content, please let me know. Importantly, if there exists a chemical diffusion problem solver, it would reduce my coding time significantly by imitating the code. . If anyone can give some guidance on how to change the governing equations quickly and safely, please inform me.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/741:1136,guid,guidance,1136,https://su2code.github.io,https://github.com/su2code/SU2/issues/741,1,['guid'],['guidance']
Usability,"**Is your feature request related to a problem? Please describe.**; * Following the SU2 style guide, I understand that we should try to keep things as consistent as possible. One thing that I note is the style for single `if` and `for` statement. Sometimes, there are no braces and other time, there are braces. An example would be in line 223 of `CDriver.cpp` vs line 382 of the same file. An example for the `for` statement can be seen in line 420 of the same file as well. Sometimes, this is hard to read. . **Describe the solution you'd like**; * Could you please let me know the prefer style? I understand that this is a very minor thing but should I go ahead and make sure every single if/for fits this ""prefer style""?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1013:94,guid,guide,94,https://su2code.github.io,https://github.com/su2code/SU2/issues/1013,1,['guid'],['guide']
Usability,**Is your feature request related to a problem? Please describe.**; *A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]*. **Describe the solution you'd like**; *A clear and concise description of what you want to happen.*. **Describe alternatives you've considered**; *A clear and concise description of any alternative solutions or features you've considered.*. **Additional context**; *Add any other context or screenshots about the feature request here.*,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1141:71,clear,clear,71,https://su2code.github.io,https://github.com/su2code/SU2/issues/1141,3,['clear'],['clear']
Usability,"**Is your feature request related to a problem? Please describe.**; *A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]*. I would like to know if SU2 can run the discrete adjoint case for multizone problem of turbomachinery. I found; "" if (nZone != 1); SU2_MPI::Error(""The required solver doesn't support multizone simulations"", CURRENT_FUNCTION);"" in the code. I am currently working on the optimization of axial turbine stage. I have revised the code for ENTROPY_GENERATION and Total toal efficiency output in the history output file and run the tutorial case ""transonic_stator_2D"" using ""shape_optimization.py"" successfully. But I failed to run ""discrete_adjoint.py -f xxx.cfg"" for turbiens stage optimization, whist the flow simulation using ""SU2_CFD xxx.cfg"" runs successfully. Seem the currect develop version is not applicable to the problem. **Describe the solution you'd like**; *A clear and concise description of what you want to happen.*. May I ask for the implementation of multizone discrete adjoint solve for turbomachinery? Or if there is any solution for it.; I found the work from Vitale's paper in 2020 includes such capability in SU2 at https://github.com/su2code/SU2/tree/ feature_turbomachinery, yet I fail to run the multizone case. **Describe alternatives you've considered**; *A clear and concise description of any alternative solutions or features you've considered.*. I would like to try FADO for alternatives and may concern about the solver of the discrete adjoint for multizone problems in turbomachinery will still be needed. . **Additional context**; *Add any other context or screenshots about the feature request here.*. Here is the function I have added for turbo coeffcient output in CFlowOutput.cpp:. void CFlowOutput::AddTurbomachineryCoefficients(const CConfig* config) {; ; if (!config->GetBoolTurbomachinery()) return;; /// BEGIN_GROUP: AERO_COEFF, DESCRIPTION: Sum of the aerodynamic coefficients and forces on all s",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1720:71,clear,clear,71,https://su2code.github.io,https://github.com/su2code/SU2/issues/1720,2,['clear'],['clear']
Usability,**Is your feature request related to a problem? Please describe.**; *A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]*. Now Is Version 8.x. See https://su2code.github.io/docs_v7/Guide-to-v7/. **Describe the solution you'd like**; *A clear and concise description of what you want to happen.*. guide to v8 . **Describe alternatives you've considered**; *A clear and concise description of any alternative solutions or features you've considered.*. **Additional context**; *Add any other context or screenshots about the feature request here.*,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2361:71,clear,clear,71,https://su2code.github.io,https://github.com/su2code/SU2/issues/2361,5,"['Guid', 'clear', 'guid']","['Guide-to-', 'clear', 'guide']"
Usability,"**Is your feature request related to a problem? Please describe.**; *A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]*; This is a reminder for me that there is still no tutorial, documentation and V&V for wall functions. . **Describe the solution you'd like**; *A clear and concise description of what you want to happen.*; 1. Add the Stanford diffuser case with wall functions as a tutorial to the website; 2. Add a wall function solution to the V&V for the flat plate ; 3. Update documentation for wall functions. **Describe alternatives you've considered**; *A clear and concise description of any alternative solutions or features you've considered.*. **Additional context**; *Add any other context or screenshots about the feature request here.*",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1694:71,clear,clear,71,https://su2code.github.io,https://github.com/su2code/SU2/issues/1694,3,['clear'],['clear']
Usability,"**Is your feature request related to a problem? Please describe.**; In my application the heat flux over various surfaces is an important figure of merit of a specific design. Being able to monitor the average (or total) heat flux over different surfaces during runtime would be a good metric for judging convergence and quality of the design. Currently (as of 7.3.0) this does not seem to be possible. *A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]*; In my mesh I have defined various markers which indicate the surfaces of interest, where I would like the average heat-flux to evaluate over time. As suggested by the DryRun info I've indicated the surfaces with the MARKER_MONITORING specifier in the config file:. `MARKER_MONITORING = (NS_WALL_RESONATORTIP, NS_WALL_RESONATOR3, NS_WALL_RESONATOR2)`. However, the history and screen output shows only the heat flux aggregated over all surfaces. **Describe the solution you'd like**; *A clear and concise description of what you want to happen.*. I would like the values of the HEAT group to behave just like those of the FLOW_COEFF group, where the heat flux is indicated on a per-surface basis. This would allow me to track the development of the heat fluxes with good time resolution, without having to write an excessive amount of surface files. The output in the solution history could be similar to that of other output groups, i. e.:; `""Avg_HeatFlux(SURF1)"",""Avg_HeatFlux(SURF2)"",...`. **Describe alternatives you've considered**; *A clear and concise description of any alternative solutions or features you've considered.*; Regularly exporting the entire surface data to discrete files and analyzing them during post-processing is a possible work-around, but leads to an excessive amount of files. **Additional context**; *Add any other context or screenshots about the feature request here.*; My cases are highly transient and require quite some timesteps until a quasi-stationary limit cycle ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1531:406,clear,clear,406,https://su2code.github.io,https://github.com/su2code/SU2/issues/1531,2,['clear'],['clear']
Usability,"**Is your feature request related to a problem? Please describe.**; The fixed lift coefficient mode (FIXED_CL_MODE) available for the compressible RANS solver is particularly useful for certain aerodynamic flight condition evaluations. I noticed this feature is not implemented for the incompressible RANS solver. As far I could find, there is no information regarding a feature request for this capability. **Describe the solution you'd like**; How difficult, if possible, would it be to implement the fixed lift coefficient mode for the incompressible RANS solver? Is there a particular reason why it was implemented in the compressible solver only?. **Describe alternatives you've considered**; By the looks of CEulerSolver::FixedCL_Convergence(), the implementation appears straight forward. If this feature is not likely to be added to SU2 in the future, could some guidance on how to implement it ourselves be given? Specifically what functions/ where to look to port over to the incompressible solver. Thanks for your consideration,. Juan",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2186:871,guid,guidance,871,https://su2code.github.io,https://github.com/su2code/SU2/issues/2186,1,['guid'],['guidance']
Usability,"**Is your feature request related to a problem? Please describe.**; Under the User's Guide, there are no direct explanations of the different slope limiters available to the user, or what solvers they apply to. I think that information on this topic in the documentation would be extremely helpful to a new user in understanding the differences between the available limiters and their respective strengths/weaknesses. There exists an [open pull request](https://github.com/su2code/su2code.github.io/pull/83/commits/4dcff98256e61d9d478e5af677859cbcfc6c80f1) within the documentation repo that starts this idea. However, it is incomplete and contains very little new information. . **Describe the solution you'd like**; We would like to contribute more to this idea. Specifically, we would like to add. - A description of why slope limiters are used in a FVM formulation. This can explain the concept of Total Variation Diminishing methods, monotonic schemes, and 2nd order accuracy requirements. ; - Mathematically describe the limiters available to the user in SU2. This will include a brief discussion of their properties (e.g., diffusivity, tunable parameters) and potential Sweby plots. ; - An empirical comparison of the available limiters on a test problem(s). One problem that was considered was the laminar cylinder, or the viscous wedge cases. The flowfield colored by the limiter value can be shown to the user. . **Describe alternatives you've considered**; N/A. **Additional context**; This issue ticket is part of an open-source community contribution assignment in our graduate studies ""Numerical Solutions to Partial Differential Equations"". Our team is comprised of four graduate students: Thomas Calascione (@tomtom252525) Grant Norman (@gnorman7), Kal Monroe (@kamo6346), Mitch Wall (@mitchwall85). Our academic research is highly coupled with CFD and numerical methods. For this reason, we chose SU2 as a community we wished to contribute to. . A secondary goal of this project is t",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1823:85,Guid,Guide,85,https://su2code.github.io,https://github.com/su2code/SU2/issues/1823,1,['Guid'],['Guide']
Usability,"**Is your feature request related to a problem? Please describe.**; When using shape_optimization.py with MULTIZONE option enabled on v7.0.6, the script does not copy .cfg files in CONFIG_LIST setting. **Describe the solution you'd like**; I am not too familiar with python so I am not sure about how hard this is to add but it sounds like a very simple addition. Therefore, if shape_optimization.py were to copy the .cfg files in CONFIG_LIST into direct solution directory which is named DIRECT, it would allow multi zone simulations to be run with shape_optimization.py as well.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1279:347,simpl,simple,347,https://su2code.github.io,https://github.com/su2code/SU2/issues/1279,1,['simpl'],['simple']
Usability,"**SOLVED** see edit. Hello! I seem to remember that it used to be possible to get angle of attack in the history file? Is this still possible? I would like to be able to just pull the angle of attack out of the history file, along with the aero coeffs.; Context:; I have looked through the custom output document and the reference config file, and (perhaps I am secretly blind), but there does not seem to be a simple output group for it.; Reason I need it: performing analysis for fixed Cl, so angle of attack is useful information. At the moment I am getting probed data:; ```; CUSTOM_OUTPUTS='m_vel_x : Macro{VELOCITY_X};\; m_vel_y : Macro{VELOCITY_Y};\; vel_x1: Probe{$m_vel_x}[-15, -15];\; vel_y1: Probe{$m_vel_y}[-15, -15]'; ```; And just getting the tan(y/x) of the probed values for angle. This works well enough.; The other option I have is stripping the angle of attack out of the forced breakdown file, would prefer to not do, but can. EDIT:. **It can be pulled out of line 2 of flow.meta**",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2138#issuecomment-1780159397:411,simpl,simple,411,https://su2code.github.io,https://github.com/su2code/SU2/issues/2138#issuecomment-1780159397,1,['simpl'],['simple']
Usability,"**This PR was created to trigger the CI pipeline, no merging intended.**. I noticed differences between results of regression tests, when running them on my system and by the Github CI pipeline. Let me check whether according to the CI pipeline, the wall roughness was actually always 0 before my bugfix in #1286. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1292:486,guid,guide,486,https://su2code.github.io,https://github.com/su2code/SU2/pull/1292,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"*If this is a general question or difficulty building/using the code, please open a ""Discussion"" instead.*. **Describe the bug**; *Give a clear and concise description of what the bug is and what you expect the behavior to be instead. Please provide enough instructions and data for a developer to reproduce the problem (config, mesh, commands, etc.). Please provide the smallest working example that reproduces the problem.*. **Bug report checklist**; *Please make sure that you have followed the checklist below, many common problems can be solved by:*. - [x] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [x] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [x] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: [e.g., Linux (Redhat 7.9)]; - C++ compiler and version: [e.g., g++ (GCC) 8.5.0]; - MPI implementation and version: [e.g., OpenMPI 4.0.3]; - SU2 Version: [e.g., v7.5.1]. When I use SU2 with QuickStart config file with OpenMPI, it gives error like in attached file.; Command is:; `mpirun -np 8 --allow-run-as-root SU2_CFD inv_NACA0012.cfg`. [segmentation_fault.txt](https://github.com/su2code/SU2/files/12170716/segmentation_fault.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2091:138,clear,clear,138,https://su2code.github.io,https://github.com/su2code/SU2/issues/2091,1,['clear'],['clear']
Usability,"*If this is a general question or difficulty building/using the code, please open a ""Discussion"" instead.*. **Describe the bug**; To be honest, I haven't care about the dimensionalization since today I got a negative CD for a very very simple case. The case setup is:; 1. NACA0012 airfoil, structured grid; 2. Freestream condition: Re=1E6, AoA=5, Mach=0.1; 3. Solver: RANS with S-A model, Roe upwind scheme. Every other thing can be default. The drag coefficients I got are:; REF_DIMENSIONALIZATION=DIMENSIOAL: 0.005; REF_DIMENSIONALIZATION=FREESTREAM_VEL_EQ_MACH: -0.025. It is interesting. I am gonna check the code in CEulerSolver::SetNondimensionalization. **Desktop (please complete the following information):**; - OS: WINDOWS & Ubuntu; - C++ compiler and version: [e.g., g++ (GCC) 4.8.5]; - MPI implementation and version: [e.g., OpenMPI 4.1.3]; - SU2 Version: 7.3.1 & 7.5.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1975:236,simpl,simple,236,https://su2code.github.io,https://github.com/su2code/SU2/issues/1975,1,['simpl'],['simple']
Usability,", over that the linear solvers will struggle.; Practical issues with the feature:; - Requires ad-hoc scripting to use with an optimizer, so far the L-BFGS-B from Scipy together with a penalty formulation has served me well. Technical issues with the implementation:; - Scalability. A filter is applied to the densities to avoid numerical issues such as hinges, and checkerboards, and to ensure minimum feature size and mesh independence. My implementation, although parallel, requires all ranks to get a copy of global information, namely the connectivity and the element centroid coordinates. The ranks get this in compact format, so it is not super expensive (100MB per rank per million hexahedrons) and definitely not an issue for the problem size the linear solvers and preconditioners can currently handle.; - Output. Currently this is done at every iteration of the adjoint solver into a file (only the master rank writes the file) mainly because I did not see an easy way to output element values using the output class, everything else is computed at the nodes. So not perfect but a nice feature to have (I think). Feedback is welcome on any of these issues (or others you see!). If all goes well (with my PhD) I will address these issues as I plan to use this for large-ish problems. I added an example case to explain the new options, the large files will be in the Testcases repo. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/595:1343,Feedback,Feedback,1343,https://su2code.github.io,https://github.com/su2code/SU2/pull/595,2,"['Feedback', 'guid']","['Feedback', 'guide']"
Usability,"- [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1138:144,simpl,simply,144,https://su2code.github.io,https://github.com/su2code/SU2/pull/1138,1,['simpl'],['simply']
Usability,"-o conftest -g -O2 conftest.c >&5; configure:5041: $? = 0; configure:5041: ./conftest; configure:5041: $? = 0; configure:5055: result: 4; configure:5069: checking size of long int; configure:5074: gcc -o conftest -g -O2 conftest.c >&5; configure:5074: $? = 0; configure:5074: ./conftest; configure:5074: $? = 0; configure:5088: result: 8; configure:5102: checking size of float; configure:5107: gcc -o conftest -g -O2 conftest.c >&5; configure:5107: $? = 0; configure:5107: ./conftest; configure:5107: $? = 0; configure:5121: result: 4; configure:5135: checking size of double; configure:5140: gcc -o conftest -g -O2 conftest.c >&5; configure:5140: $? = 0; configure:5140: ./conftest; configure:5140: $? = 0; configure:5154: result: 8; configure:5168: checking size of void *; configure:5173: gcc -o conftest -g -O2 conftest.c >&5; configure:5173: $? = 0; configure:5173: ./conftest; configure:5173: $? = 0; configure:5187: result: 8; configure:5409: checking X11/Intrinsic.h usability; configure:5409: gcc -c -g -O2 conftest.c >&5; conftest.c:61:27: error: X11/Intrinsic.h: No such file or directory; configure:5409: $? = 1; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""SU2""; | #define PACKAGE_TARNAME ""SU2""; | #define PACKAGE_VERSION ""4.1.0""; | #define PACKAGE_STRING ""SU2 4.1.0""; | #define PACKAGE_BUGREPORT ""su2code-dev@lists.stanford.edu""; | #define PACKAGE_URL ""https://github.com/su2code""; | #define PACKAGE ""SU2""; | #define VERSION ""4.1.0""; | #define STDC_HEADERS 1; | #define HAVE_SYS_TYPES_H 1; | #define HAVE_SYS_STAT_H 1; | #define HAVE_STDLIB_H 1; | #define HAVE_STRING_H 1; | #define HAVE_MEMORY_H 1; | #define HAVE_STRINGS_H 1; | #define HAVE_INTTYPES_H 1; | #define HAVE_STDINT_H 1; | #define HAVE_UNISTD_H 1; | #define SIZEOF_SHORT_INT 2; | #define SIZEOF_INT 4; | #define SIZEOF_UNSIGNED_INT 4; | #define SIZEOF_LONG_INT 8; | #define SIZEOF_FLOAT 4; | #define SIZEOF_DOUBLE 8; | #define SIZEOF_VOID_P 8; | /* end confdefs.h. */; | #include <stdio.h>; ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:12362,usab,usability,12362,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,1,['usab'],['usability']
Usability,"..654ba3dfc207e25c31da9c09860224ad4044a610), which was the original branch merged in #724. . Unfortunately, given that during this time both #753 and #774 were merged, the tests are failing now. Particularly, the disc_adj_fsi case runs into a segfault in `CDiscAdjSolver::ExtractAdjoint_CrossTerm_Geometry`, when trying to execute ; `geometry->node[iPoint]->GetAdjointCoord(Solution_Geometry);`. . I believe this is related to the changes to the index based recording introduced in #774, as the code was running before into the same problem in `CDiscAdjSolver::ExtractAdjoint_CrossTerm`, and now goes beyond this point having changed the Get routine into `direct_solver->GetNodes()->GetAdjointSolution_intIndexBased(iPoint,Solution);`. Currently, there is no `GetAdjointCoord_intIndexBased` or similar available, and its implementation requires some constructs for the indices. Therefore, I would like to ask for support from @oleburghardt and @pcarruscag to make this work with their changes. ## Related Work; #724 involuntarily removed the discrete adjoint FSI cases from the regression tests.; Branch [fix_discadjfsi](https://github.com/su2code/SU2/tree/fix_discadjfsi) successfully recovers the functionality removed.; #774 introduced relevant changes to the adjoint solver that are making.; #753 was merged and, although I tried to adapt to it, I can't guarantee it's working correctly. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/803:1953,guid,guide,1953,https://su2code.github.io,https://github.com/su2code/SU2/pull/803,1,['guid'],['guide']
Usability,".py script. The command used was:. ```; python3 $SU2_RUN/mesh_adaptation_amg.py -f adapt_Mesh.cfg -n 4; ```; The script initiates the mesh adaptation process as expected, with the following output:. ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : GOAL; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8. ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided.; ```; However, no _adap\ite0_ folder gets created. ; The log.err file in the _adap/ini_ directory provides this traceback:. ```; Traceback (most recent call last):; File "".../mesh_adaptation_amg.py"", line 111, in <module>; ...; RuntimeError: ...; Error in TokenizeString(): two or more options before an ""="" sign in the configuration file.; terminate called after throwing an instance of 'int'; ...; *** Process received signal ***; Signal: Aborted (6); Signal code: (-6); ...; ```. The critical part of this error seems to be the Error in TokenizeString() message, suggesting an issue with parsing the configuration file. This error typically indicates a syntax problem, such as having multiple options on a single line without proper separation by an equal sign (=). However, upon reviewing _adap/ini/config_CFD.cfg_, was unable to find any lines that clearly violated this syntax rule. Could this error be indicative of a more subtle issue within the configuration file, or might it be related to specific aspects of the feature_adap branch? Any insights, suggestions, or guidance on how to troubleshoot this error would be greatly appreciated. If anyone has a working adapt_mesh.cfg file for a similar setup or for the feature_adap branch, I would be very interested in seeing it. Understanding the configuration details of a working example could be highly beneficial in resolving my issue. Thank you for your help!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-1847333809:1771,clear,clearly,1771,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1847333809,2,"['clear', 'guid']","['clearly', 'guidance']"
Usability,"/21182966/28308831-b937bf76-6ba7-11e7-9108-e8a2ab959b74.png). Then I noticed a difference in SENS_GEO (which is the second term of the upper equation, right?) between compressible and incompressible. . ![image](https://user-images.githubusercontent.com/21182966/28310143-bb28c42a-6bab-11e7-8c14-8409b6b12027.png). So if the scale is adjusting current step size the step of dC and SENS_GEO represents the second term, then the SENS_GEO would change when the scale is changed. But this is not the case for incompressible and compressible. . In short, the only noticeable change, due to scaling, occurs in deformation folder of DSN_002. But this is after the optimization step, which is really confusing. Scaling adjusts the current step size and because it can not find a sufficient decrease it is halving the dv_value. But then one should expect different values in the adjoint folder for different scale factors, right?. I hope you can use this information and can tell me whether it is a correct behavior of the optimizer. I should also note that I did not make use of constraints, just as in the test case. I read that the optimizer will switch from optimization procedure. I think this should not matter because of the test case. . I attached also the configure files (compressible (working, scale= 0.01) and incompressible (not working, scale =0.01)) and the mesh file, which is in both cases the same file. [compressible_cfg.txt](https://github.com/su2code/SU2/files/1155421/compressible_cfg.txt); [incompressible_cfg.txt](https://github.com/su2code/SU2/files/1155427/incompressible_cfg.txt); [mesh_300_su2.txt](https://github.com/su2code/SU2/files/1155430/mesh_300_su2.txt). I hope I provide enough information so that one can clarify the behavior of the optimizer. I also appreciate if one can tell me which variables have to be kept in mind. I really want to learn from this and if more information is needed, I really do not mind to provide it. Many thanks in advance!. Floris van der Schuur",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/409#issuecomment-316018103:4407,learn,learn,4407,https://su2code.github.io,https://github.com/su2code/SU2/issues/409#issuecomment-316018103,1,['learn'],['learn']
Usability,"/32992485/32144074-55ab5434-bcee-11e7-9492-2228fedce56d.png); VENKATAKRISHNAN; ![cusp0levcfl1limiterven](https://user-images.githubusercontent.com/32992485/32144104-a49af86a-bcee-11e7-8918-5328e404a4c6.png); Analogously, I set CFL to 1 again.; But VENKATAKRISHNAN converged but BARTH_JESPERSEN still oscillating. I don't why CUSP occur this situation. Is there any bug in multigrid, limiter and CUSP scheme?. ; I know my ability and knowledge are limited, but I still try to read the code. Some simple ""bugs"" I've found but I doubt it.; In numerics_direct_mean.cpp , I've read compute_residual of CUSP and found something doubtly.; ; At line 643 . > for (iDim = 0; iDim < nDim; iDim++) {; Velocity_i[iDim] = V_i[iDim+1];; Velocity_j[iDim] = V_j[iDim+1];; sq_vel_i += 0.5*Velocity_i[iDim]*Velocity_i[iDim];; sq_vel_j += 0.5*Velocity_j[iDim]*Velocity_j[iDim];; }; ; SoundSpeed_i = sqrt(Gamma*Gamma_Minus_One*(Energy_i-0.5*sq_vel_i));; SoundSpeed_j = sqrt(Gamma*Gamma_Minus_One*(Energy_j-0.5*sq_vel_j));. Here I assume is computing Roe-Sound-Speed, but sq_vel_j's coefficient is not 1/4 but 1/2.; >sqrt(Gamma*Gamma_Minus_One*(Energy_j-0.5*sq_vel_j)). And I don't know whether it's suitable to mix original CUSP and simplified CUSP.; Here, in computing dissipation parameters, SU2 used a simplified Lamda. > LamdaNeg = ProjVelocity - MeanSoundSpeed;; LamdaPos = ProjVelocity + MeanSoundSpeed;. I've read paper and there are two kind of computing-dissipation-parameter method, SU2 seems mixed them. Whether it's legal?. At line 729 ; > if ((Beta > 0.0) && ((0.0 < Mach) && (Mach < 1.0))) Nu_c = - (1.0-Beta)*LamdaNeg;. In Computational Fluid Dynamics (Computational Fluid Dynamics: Principles and Applications (Third Edition)[J]. Computational Fluid Dynamics Principles & Applications, 2015:ix.); Nu_c seems to be - (1.0+Beta)*LamdaNeg. And I want to know which configuration is suit for this condition, thanks~. That's all my confusion. I don't know where I've done wrong and where I've misunderstood. ：）",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/465:4044,simpl,simplified,4044,https://su2code.github.io,https://github.com/su2code/SU2/issues/465,2,['simpl'],['simplified']
Usability,"/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/co",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1840:2585,learn,learn-github-actions,2585,https://su2code.github.io,https://github.com/su2code/SU2/pull/1840,1,['learn'],['learn-github-actions']
Usability,"/user-images.githubusercontent.com/46273732/74617122-a3003500-50f9-11ea-9a0f-1db78a9d4d04.png); ![Tt comparsion](https://user-images.githubusercontent.com/46273732/74617123-a3003500-50f9-11ea-9f86-decee9d097b4.png); ![Turb comparsion](https://user-images.githubusercontent.com/46273732/74617124-a4316200-50f9-11ea-8e10-bc7dcbb0e8c6.png). I am also attaching my python plotting results in case someone wants to reproduce the graphs and/or look at the equations in detail. [plotting_script.txt](https://github.com/su2code/SU2/files/4217388/plotting_script.txt). Please note that the inlet file was created with random fluctuating values to ensure correct inlet interpolation is happening. Some values and patterns may look unrealistic. Additionally, note that Akima can extrapolate values as well but will display a warning if it is doing so. Linear will only do interpolation and will exit if the inlet file does not have the specific radius data. However, it will show on the console which radius data is missing so the user can add it. Also, currently, the flow should be in z-direction only. I don't know how to find the flow direction through any built-in method in SU2 during run. If you can tell me that I can update the code to support any flow direction. During interpolation, it will display that flow direction must be in z-direction to avoid any mistake by the user. Thanks,; Aman. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/815:4491,guid,guide,4491,https://su2code.github.io,https://github.com/su2code/SU2/pull/815,1,['guid'],['guide']
Usability,"0507725_polimi_it/EUswl9Jw0XhIuozrOjXqX6sBdscM30lRZ7mwMZcr5anvyA?e=41db5P. One recent result is the application of the transition model to the Sickle wing test case for -2.67° of the angle of attack. SST+LM2015; ![Results](https://user-images.githubusercontent.com/43813346/195149921-6e85c1c7-2fc8-47e9-b935-246081ea17fd.png). SA+LM2015; ![Results](https://user-images.githubusercontent.com/43813346/195152304-e81c92f3-35da-4c50-9cd8-e5528c644cde.png). The lower surface is represented on the left, whereas the upper surface is on the right. At the moment the wind tunnel walls have not been taken into account. This can explain the spanwise shift of the transition with respect to the experimental results. More results are incoming. . Please, any suggestions on how to clean up the code or on how to make it more efficient are very well accepted. More comments to the code will be added in the following days. Especially to the declaration of some functions. I know that it is not the most good-looking code right now but I preferred uploading it now such that others can use it even if it is not really clean. . ## Related Work; Work is related to the PR #1751. It extends it to SA turbulence model and includes cross-flow effects (LM2015) and turbulence index computations. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1788:3941,guid,guide,3941,https://su2code.github.io,https://github.com/su2code/SU2/pull/1788,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"06821/51894695-c4846680-23a8-11e9-87f5-35041d71fee4.gif). For the latter case I haven’t yet rotated the inner circle, because there are some missing features for dynamic meshes in the incompressible solver. The previous test case for steady-state flows has been added. One for unsteady flows will be enabled once the new output is in place, as the current output structure makes the regression scripts fail. The previous, however, opened a can of worms, as there were some physics based calls in the parent transfer structure (e.g. `GetnSlidingStates()`, `SetSlidingState()` and `SetnSlidingStates()`) that made the incompressible CHT cases run into problems. . So I’ve also taken the chance to move some initialization and some calls to the specific physics-based transfer structures, making use of the polymorphism of the transfer code. This way the parent class remains opaque to the physics. At the same time, I cleaned up some long-time unused routines, made the Broadcast_Data the default for zone interfaces, and removed the MATCHING_MESH option as it is just a particular case of Nearest Neighbour. ## Related Work. - Complements the sliding interface feature by @LaSerpe in #389 by adding the corresponding functions to the incompressible flow solver. - Removes MATCHING_MESH option as discussed with @pcarruscag in #597. - Removes some compilation warnings due to unused variables. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/638:2946,guid,guide,2946,https://su2code.github.io,https://github.com/su2code/SU2/pull/638,1,['guid'],['guide']
Usability,"0| -inf| -inf| -0.006045| 1.258662| -inf|; ; ----------------------------- Solver Exit -------------------------------; All convergence criteria satisfied.; +-----------------------------------------------------------------------+; | Convergence Field | Value | Criterion | Converged |; +-----------------------------------------------------------------------+; | rms[Rho]| -12| < -12| Yes|; +-----------------------------------------------------------------------+. The density plot is; - different from the original `issue_simplified` singlezone solution with implicit Euler and CFL=1000. ; - similar to the `issue_simplified` multizone solution with implicit Euler and CFL=0.1. . Similarly, the TKE plots:; - `issue_simplified` singlezone implicit Euler CFL=1000; ![tke-simplified-singlezone-impliciteuler](https://user-images.githubusercontent.com/72806890/140887227-fc2ed584-53cf-413d-b5ad-18d1a12f5e4a.png); - `issue_simplified` singlezone explicit Euler CFL=0.1; ![tke-simplified-singlezone-expliciteuler](https://user-images.githubusercontent.com/72806890/140887289-0d8725a2-e51b-4704-bdae-a51b492949bf.png); (it is ""red"" throughout the domain, except for the wall marker); - `issue_simplified` multizone explicit Euler CFL=0.1: (similar image, ""red"" everywhere except wall). **Thus, the difference in solutions observed above is due to the choice of implicit vs. explicit Euler and CFL, and not due to problems regarding the interface.**. Am I doing something wrong in the explicit Euler [cfg file](https://seafile.rlp.net/d/bb0fbb16eb414263b642/files/?p=%2Fsinglezone-simplfied-expliciteuler-cfl01.cfg&dl=1), whose diff to the [SU2/TestCases/rans/naca0012/turb_NACA0012_sst.cfg](https://github.com/su2code/SU2/blob/v7.2.0/TestCases/rans/naca0012/turb_NACA0012_sst.cfg) is as follows?. 27c27; < RESTART_SOL= NO; ---; > RESTART_SOL= YES; 45c45; < REYNOLDS_NUMBER= 1.0E6; ---; > REYNOLDS_NUMBER= 6.0E6; 70c70; < MARKER_HEATFLUX= ( circle, 0.0 ); ---; > MARKER_HEATFLUX= ( airfoil, 0.0 ); 76c76",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414#issuecomment-963921195:2041,simpl,simplified-singlezone-expliciteuler,2041,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414#issuecomment-963921195,1,['simpl'],['simplified-singlezone-expliciteuler']
Usability,"2357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; 14368 Vertex ; 3 Boundary Vertices ; 58189 Tetrahedra ; 1 Triangles ; 0 Edges ; 1 Surface(s) ; % Output subdom.meshb Mesh ndimn=3, mpoin=14368, melem=58189, mface=1; Corners 0 Required 0 ; ## ERROR : TETRAHEDRON 2 BOUNDARY FACE 1 2; 9 IS MISSING ; ## ERROR : TETRAHEDRON 4 BOUNDARY FACE 3 7; 2324 IS MISSING ; ···; ## ERROR: FEFLO.A: 16740 BOUNDARY FACES ARE MISSING ; CHECK YOUR MESH . ## FATAL ERROR: FEFLOA: INITIAL OR CURRENT MESH HAS AN INCONSISTANT TOPOLOGY . Thank you for using feflo.a . ```; Which in turn creates an invalid `amg.su2` mesh in the `adap/ite0 folder`, which triggers the fault.; I'm a bit puzzled as the domain is very simple, and the `log.out` is going well (with no complains of SU2 about any negative volume or trias with wrong normals). The mesh is only made of TRIAS and TETRAS, it should work in principle.; Am I missing something in the setup / mesh? I know you have little control on the `amg.out`, but maybe there some special hint that I'm missing. . Btw the final error in the terminal is but I think the problem arises before reaching `flo.csv` file:; ```; Traceback (most recent call last):; File ""/usr/local/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/usr/local/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/usr/local/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/usr/local/bin/SU2/run/amg.py"", line 464, in amg; os.rename(cur_solfil, cur_solfil_ini); FileNotFoundError: [Errno 2] No such file or directory: 'flo.csv' -> 'flo_ini.csv'. ```; Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-623572280:2200,simpl,simple,2200,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-623572280,1,['simpl'],['simple']
Usability,"4/180909770-0bceb6e3-2b1a-4112-bfd8-51b45d7ea082.png); ![image](https://user-images.githubusercontent.com/50565314/180909897-2eb4d123-68f5-4e0b-b09a-c201c7a5d8ad.png); ![image](https://user-images.githubusercontent.com/50565314/180909936-f5766fd8-a5b3-428e-9ed4-bfe43de9f911.png). T3A-: ; The gird test result is not converged, but It's enough to compare the model. ![image](https://user-images.githubusercontent.com/50565314/180910790-a68881b3-9be6-45c4-aab3-333665d90798.png); ![image](https://user-images.githubusercontent.com/50565314/180910812-12dd3fa9-7c04-4319-845e-b37628752b2c.png); ![image](https://user-images.githubusercontent.com/50565314/180910818-4cdb2b80-d0fd-4303-9f25-d3b2f6b4fe6b.png); ![image](https://user-images.githubusercontent.com/50565314/180910823-88a0d2bd-3439-4318-a749-44867e259436.png). NLF : ; AoA 0 case is shown. In this case, the flow separation occurred on the upper surface. So, not fully converged, and I show only Fine level grid results according to the number of iterations. ; ![image](https://user-images.githubusercontent.com/50565314/180913288-e8d3bc9c-f153-4889-a2ea-d2527f81f897.png); Zoom to the separation region : ; ![image](https://user-images.githubusercontent.com/50565314/180913656-410185d5-2466-41a6-b074-6f0dbeb8afea.png). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1751:4256,guid,guide,4256,https://su2code.github.io,https://github.com/su2code/SU2/pull/1751,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"457, in con_cieq; cons = project.con_cieq(x); File ""/usr/local/bin/SU2/opt/project.py"", line 257, in con_cieq; return self._eval(konfig, func,dvs); File ""/usr/local/bin/SU2/opt/project.py"", line 206, in _eval; vals = design._eval(func,*args); File ""/usr/local/bin/SU2/eval/design.py"", line 147, in _eval; vals = eval_func(*inputs); File ""/usr/local/bin/SU2/eval/design.py"", line 520, in con_cieq; func = su2func(this_con,config,state); File ""/usr/local/bin/SU2/eval/functions.py"", line 92, in function; aerodynamics( config, state ); File ""/usr/local/bin/SU2/eval/functions.py"", line 274, in aerodynamics; info = su2run.direct(config); File ""/usr/local/bin/SU2/run/direct.py"", line 139, in direct; su2merge(konfig); File ""/usr/local/bin/SU2/run/merge.py"", line 81, in merge; merge_solution(konfig); File ""/usr/local/bin/SU2/run/merge.py"", line 107, in merge_solution; SU2_SOL( config ); File ""/usr/local/bin/SU2/run/interface.py"", line 207, in SOL; run_command( the_Command ); File ""/usr/local/bin/SU2/run/interface.py"", line 270, in run_command; raise exception(message); RuntimeError: Path = /home/xxx/SU2-7.3.0/xxxx/DESIGNS/DSN_001/DIRECT/,; Command = mpirun -n 4 /home/xxx/SU2-7.3.0/SU2/bin/SU2_SOL config_SOL.cfg; SU2 process returned error '139'; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun noticed that process rank 1 with PID 0 on node LAPTOP-DDQOFLU8 exited on signal 11 (Segmentation fault).; --------------------------------------------------------------------------; ```. The parallel computing for the case of SU2_CFD only can work well.; but I cannot find what the error '139' refers to. I will be very appreciated if I could get some feedback on this issue. Thank you!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1666:5865,feedback,feedback,5865,https://su2code.github.io,https://github.com/su2code/SU2/issues/1666,1,['feedback'],['feedback']
Usability,"88-5 for SST and https://doi.org/10.2514/6.1992-439 for SA. Validation test cases will be uploaded in the following days. . The most important results can be found in the pdf of my presentation at the SU2 Conference 2022. https://polimi365-my.sharepoint.com/:b:/g/personal/10507725_polimi_it/EUswl9Jw0XhIuozrOjXqX6sBdscM30lRZ7mwMZcr5anvyA?e=41db5P. One recent result is the application of the transition model to the Sickle wing test case for -2.67° of the angle of attack. SST+LM2015; ![Cf](https://user-images.githubusercontent.com/43813346/203034422-5a7fb987-208c-4da6-8282-5c912e671dbc.png). SA+LM2015; ![Cf](https://user-images.githubusercontent.com/43813346/203034460-7719f3ce-6674-4281-83fd-82ce064c452a.png). The lower surface is represented on the left, whereas the upper surface is on the right. At the moment the wind tunnel walls have not been taken into account. This can explain the spanwise shift of the transition with respect to the experimental results. More results are incoming. . Please, any suggestions on how to clean up the code or on how to make it more efficient are very well accepted. . ## Related Work; Work is related to the PR #1751. It extends it to SA turbulence model and includes cross-flow effects (LM2015) and turbulence index computations. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1810:2811,guid,guide,2811,https://su2code.github.io,https://github.com/su2code/SU2/pull/1810,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,": `ON|OFF`; * `SU2_ENABLE_PARMETIS`: `ON|OFF`, only available when `SU2_ENABLE_MPI` is `ON`; * `SU2_PARMETIS_CPPFLAGS`: flags to pass when compiling Parmetis; * `SU2_ENABLE_TECIO`: `ON|OFF`; * `SU2_TECIO_CPPFLAGS`: flags to pass when compiling Tecio and TecioMPI; * `SU2_TECIOMPI_CPPFLAGS`: flags to pass when compiling TecioMPI, requires `SU2_ENABLE_MPI`. There is an additional variable that is recognized by CMake scripts - `DEBUG`, turning it `ON` enables additional `STATUS` messages, mainly to check that correct include directories, compile definitions and linked libraries were set up correctly. The remaining options like install location and compilers are handled by CMake. Tested this on Ubuntu with CMake 3.15.5 and everything except `pySU2ad` wrapper compiles. Haven't tested on earlier CMake versions so there might be bugs with them but they should be easy to resolve if any. I have based the CMake scripts on autotools scripts so there's no Pastix/Blas options yet. [FindBLAS](https://cmake.org/cmake/help/latest/module/FindBLAS.html), [FindPastix](https://github.com/eigenteam/eigen-git-mirror/blob/master/cmake/FindPastix.cmake), [FindScotch](https://github.com/eigenteam/eigen-git-mirror/blob/master/cmake/FindScotch.cmake). ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814:3886,guid,guide,3886,https://su2code.github.io,https://github.com/su2code/SU2/pull/814,1,['guid'],['guide']
Usability,"; This issue shall only contain the list and a brief description, with links to associated issues and pull requests.; To propose major issues / development areas please use discussion #1486. The purpose of this list is two fold:; - Direct the efforts of the SU2 Foundation towards addressing these issues, by efforts I mean funds (as they become available).; - Try to enlist help from the community to start addressing these issues, as much as possible we will try to break these down into ""bite sized"" chunks. **To be clear, all contributions are welcome, even if they do not fit in one of the categories below.**; **The main objective here is consolidation, making SU2 do more things well** (v&v'd, unit-tested, documented, etc.). ## Documentation; - Tutorials, trying to cover all areas of SU2 ([key priority according to the community](https://docs.google.com/spreadsheets/d/1wgQDMiJ_mMqxiJ6FV8zZDu-CbxBjGXGeqrTAuJaTQkQ/edit#gid=1654711040)).; - Developer documentation (common ""how to's"", ~~update/simplify the info in [these pages](https://su2code.github.io/docs_v7/Code-Review/)~~([done](https://github.com/su2code/su2code.github.io/pull/70)), etc.). ## Turbulence models; - Precise documentation of fluid and turbulence models **as implemented** in SU2, i.e. link to an authoritative reference and highlighting any deviation from it. #1364 #1551; - Code refactoring to simplify adding turbulence model variants. #1413; - V&V; - Scale resolving methods #1120; - Transition (documentation, tutorial, implementation of additional models) #1496; - Wall functions (documentation, tutorial testcase) #1204. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum workin",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1487:1140,simpl,simplify,1140,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487,1,['simpl'],['simplify']
Usability,"; ```; -Denable-cuda=true; ```; And activate the functions using the following Config File Option; ```; ENABLE_CUDA=YES; ```. ## NOTE ON IMPLEMENTATION. I've decided to go with a single version of the code where the CPU and GPU implementations co-exist in the same linear solver and can be disabled or switched using a combination of Meson and Config File options. This is why I have defined three classes - one over-arching class that is named CExecutionPath that has two child classes - CCpuExecution and CGpuExecution. These child classes contain the correct member function for each path - CPU or GPU functioning. . All of this could also be easily achieved with an if statement that switches between the two - but that particular implementation will access and run the statement for each call. In our case once a Matrix Vector Product object is created, it will immediately know whether to use CPU or GPU mode of execution. . Recommendations are most welcome to improve or make this implementation better. ## PR Checklist. Warning Levels do come (only at level 3) but they are all of the following type. ```; style of line directive is a GCC extension; ```. The documentation for compiling with CUDA needs to be added by forking the SU2 site repo and adding the relevant changes to it? Or do I need to contact someone to change things on the site itself?. DOxygen Documentations and config template are all updated. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2346:2383,Guid,Guide,2383,https://su2code.github.io,https://github.com/su2code/SU2/pull/2346,1,['Guid'],['Guide']
Usability,"=1/3 gives a third-order approximation to the derivative at the node (the value used in the Piperno limiter to achieve 4th order dissipation). The reasons for these additions are; - The Piperno limiter is implemented in Inria's Wolf solver and seems to be used in a lot of their mesh adaptation work (see these references for [Euler](https://hal.inria.fr/hal-02378738v2/document) and [RANS](https://hal.inria.fr/tel-01962318/file/these_archivage_3570223.pdf)); - Some preliminary tests with the Piperno limiter have converged solutions on triangulated BL meshes that @jayantmukho and I couldn't get to converge with other limiters in SU2 (e.g. triangulated DSMA661 meshes from TMR); - The MUSCL parameter exists in other solvers (FUN3D, CFL3D, Wolf) and is used by the NASA codes for many of the TMR cases (e.g. CFL3D uses 1/3 and FUN3D uses 1/2 for the DSMA661 case). Further testing still needs to be done on the effect of the MUSCL parameter with other limiters, but leaving the value as default won't affect any of the test cases. ## Relevant config parameters; Piperno limiter:; ```; SLOPE_LIMITER_FLOW= PIPERNO; ```; MUSCL parameter:; ```; % Parameter to control upwinding in MUSCL extrapolation; % Kappa = 1/3 for Piperno limiter, Default = 0 otherwise; MUSCL_KAPPA= 0.0; ```. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1050:2176,guid,guide,2176,https://su2code.github.io,https://github.com/su2code/SU2/pull/1050,1,['guid'],['guide']
Usability,"> ; > ; > @CatarinaGarbacz thanks for pushing your changes! I have left some comments and questions.; > ; > A bigger question I have is if there is a more general way to deal with SU2_INTERP, making it usable for all of develop. Just answering @WallyMaier comment, this should be possible by changing the file **fem_interpolation_structure.cpp** and change the function call:. output = COutputFactory::CreateOutput(**NEMO_NAVIER_STOKES**, input_config_container[ZONE_0],nDim);. So we have to replace **NEMO_NAVIER_STOKES** to something like **config[val_iZone]->GetKind_Solver()**.; ; I have not tested this change, but I tested changing it for NAVIER_STOKES, and it was able to interpolate the baseline SU2.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1160#issuecomment-760110555:202,usab,usable,202,https://su2code.github.io,https://github.com/su2code/SU2/pull/1160#issuecomment-760110555,1,['usab'],['usable']
Usability,"> ; > ; > @tollennaert, can you comment on the points raised by @pcarruscag ? I think you tried to address all points in your latest update? That makes it clear to everybody that all points have been addressed. I hope you still have time for this. I indeed tried to solve all issues that were mentioned earlier. Could you take another look to see whether I have done this well enough?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1076#issuecomment-741601433:155,clear,clear,155,https://su2code.github.io,https://github.com/su2code/SU2/pull/1076#issuecomment-741601433,1,['clear'],['clear']
Usability,"> ; > ; > Dark mode?; > ""Is it possible to learn this power?"". 🧙 Sure, if you just go to your front page (i.e. just github.com) there should be a big button directly on the right side. ; Or Settings->Appearance->Dark. Enjoy :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1129#issuecomment-743130745:43,learn,learn,43,https://su2code.github.io,https://github.com/su2code/SU2/pull/1129#issuecomment-743130745,1,['learn'],['learn']
Usability,"> ; > ; > Dear Daumantas,; > ; > I appreciate your effort in adding support for cmake in SU2. We have recently introduced the Meson build system (https://mesonbuild.com/) (#685, #745) as a candidate to replace automake. A guide on how to use can be found [here](https://su2code.github.io/docs_v7/Build-SU2-From-Source/). The idea is that we will have this system along automake at least for the upcoming version 7 and that we get rid of automake afterwards. Considering that, I don't think that it makes sense to maintain 3 different build systems **at the moment**. I really hate turning contributions down, but this one is three months too late. However, we might reconsider adding support for another build system once we got rid of automake, or, if we feel that meson does not fit our needs.; > ; > I am all ears to hear other opinions. However, let's not start a discussion on the advantages/disadvantages of the build systems. Some benefits can be found in the Issue/PR linked above. Ok, I tried meson with MinGW but couldn't figure out how to link with MSMPI since it's not a part of MinGW. However, using CMake and with a few source code fixes, I managed to compile nearly every configuration with MSVC. Surprisingly, there were very few errors in SU2. The externals only had a few preprocessor issues. At the moment only MeDiPack fails to compile with MSVC but not with MinGW even though the MPI headers are the same so I suspect it's an issue with MSVC itself, I'm using the latest preview version.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814#issuecomment-553571450:222,guid,guide,222,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-553571450,1,['guid'],['guide']
Usability,"> > @jayantmukho : I am finding that the clipping limits for the SST model are very important for the UQ cases. If you adjust them slightly, the UQ regression cases tend to diverge immediately. Don't think any immediate action is needed, just wanted to bring it to your attention.; > ; > Mhmmm, that's a little odd. I wouldn't think that the UQ methodology would be affected by the clipping. I will look into this. Just to be clear, you are changing the lowerlimit and upperlimit in CTurbSSTSolver constructor? What are you changing them too? Just want to reproduce the issue. If you revert my last commit, you will see the issue. It diverges right away for me, so perhaps it is just something with the initial transient that is caught by the clipping",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-551351016:426,clear,clear,426,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-551351016,1,['clear'],['clear']
Usability,"> > I find your work really interesting. I've been studying the internal flow field in compressors and have had good results using SU2's SA_EDDES for calculating the cantilevered stator with a tip clearance. If you need help with code verification, I'd be glad to assist.; > ; > Hi @Linnnnnn23, every help on the validation/verification is gladly accepted! Let me know if you need anything by my side.; Thank you for your response. Firstly, I would like to know what Verification and Validation (V&V) work has been conducted on the SST-based DDES (Delayed Detached Eddy Simulation) model to date. Secondly, we can provide a compressor cascade validation, with an inlet Mach number of 0.4, a Reynolds number of approximately 500,000, and a spanwise height of about 20% of the chord length, ensuring that the vortices resolved by DDES can develop in three dimensions. Thirdly, as I am a rookie to GitHub, I have not yet found out how to download your pull request code. For further communication, you can contact me via email at linnnnnn2308@gmail.com",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2150#issuecomment-2072057976:197,clear,clearance,197,https://su2code.github.io,https://github.com/su2code/SU2/pull/2150#issuecomment-2072057976,1,['clear'],['clearance']
Usability,"> > I'm thinking about reusing the SST test case ([axisymmetric_rans/air_nozzle](https://github.com/su2code/SU2/tree/master/TestCases/axisymmetric_rans/air_nozzle)) so that the same mesh can be used. Would that be fine ?; > ; > That's a quite specific testcase. How did you test the implementation? Do you have some simple results for the turbulent axisymmetric jet? We know that the results for round jets are not super good for standard SA, but at least we know what the result should look like, here on p.32 - 35 they test SA for the round jet and compare to the Wygnanski & Fiedler measurements: https://www.researchgate.net/publication/24296213_Turbulence_Modeling_Validation_Testing_and_Development; > ; > The domain is just a rectangle so pretty simple to set up.; > ; > You could also use the V&V test that we have, but it is a variable density jet: https://su2code.github.io/vandv/SANDIA_jet/. I did some tests on a supersonic jet, since I already had the files, but it's a quite complex case so it's not that good to verify the implementation. I will look into the simpler cases you mentioned !",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2197#issuecomment-1891046092:316,simpl,simple,316,https://su2code.github.io,https://github.com/su2code/SU2/pull/2197#issuecomment-1891046092,3,['simpl'],"['simple', 'simpler']"
Usability,> @EvertBunschoten even if the performance isn't great this is a pretty small change so I think we can merge it. Do you have time to wrap it up and add a simple regression test?. I just added a test case and tutorial under the TestCases and Tutorials repo under the same branch name. I'm also writing a short tutorial on the SU2 website repo.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2152#issuecomment-2271237145:154,simpl,simple,154,https://su2code.github.io,https://github.com/su2code/SU2/pull/2152#issuecomment-2271237145,1,['simpl'],['simple']
Usability,"> @SumanVajjala gcc 5+ have full c++ 11 support (even more than that actually). As a last resort, if you cannot figure out what is going on with the compilers (simpler guess is that there are other versions installed and they are getting mixed up?), you can try replacing the file ""allocation_toolbox.hpp"" by this:; > [allocation_toolbox_PATCH.txt](https://github.com/su2code/SU2/files/4550786/allocation_toolbox_PATCH.txt). @pcarruscag Thank you very much. This works. I have installed a sequential version and a parallel version with tecio,codipack and medipack enabled. I will try the same with Intel compilers and see if it works. Regards; Suman",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/955#issuecomment-621164605:160,simpl,simpler,160,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-621164605,1,['simpl'],['simpler']
Usability,"> @aeroamit What does temperature do? Could you compute the heat flux from the temperature in e.g. paraview? Is the root cause the computation of the energy equation or the computation of heat flux?. Hi @bigfooted, Temperature boundary condition for wall corresponds to Isothermal wall BC (cold wall condition). This condition is applied to obtain heat flux unlike adiabatic wall (no heat transfer). ; The snapshot, I posted from ParaView shows heat flux variation with x. This is obtained directly from surface_flow.vtu. You can simply go to Filters -> Data Analysis -> Plot data and select Points_X for X Array and heat flux in variable. Regarding computing heat flux from temperature field, I am not sure, but ParaView is having calculator utility as well as option to compute gradient of unstructured grid (from there you can obtain temperature gradients in 3 directions). ; Coming to last question, root cause of the problem - @WallyMaier has run the case yesterday, we will be posting some details soon.; Best ; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1106#issuecomment-741947377:530,simpl,simply,530,https://su2code.github.io,https://github.com/su2code/SU2/pull/1106#issuecomment-741947377,1,['simpl'],['simply']
Usability,"> @bigfooted @EvertBunschoten Well fwiw the simplest way is to checkout a new branch from before the merge and open a new PR, there are no coments here yet, so its fine. (If you git revert the merge it will be a pain to then merge the other PRs). I did a git reset --merge ""commit-id"" to go back to my latest commit. I think this completely removed Evert's merge without any residual effects. So should we create a new PR or not? Your 'its fine' comment has ambiguous meaning :-)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1826#issuecomment-1328075694:44,simpl,simplest,44,https://su2code.github.io,https://github.com/su2code/SU2/pull/1826#issuecomment-1328075694,1,['simpl'],['simplest']
Usability,"> @jayantmukho : I am finding that the clipping limits for the SST model are very important for the UQ cases. If you adjust them slightly, the UQ regression cases tend to diverge immediately. Don't think any immediate action is needed, just wanted to bring it to your attention. Mhmmm, that's a little odd. I wouldn't think that the UQ methodology would be affected by the clipping. I will look into this. Just to be clear, you are changing the lowerlimit and upperlimit in CTurbSSTSolver constructor? What are you changing them too? Just want to reproduce the issue",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-551323531:417,clear,clear,417,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-551323531,1,['clear'],['clear']
Usability,"> @kursatyurt Hello, thank you so much for the lead.; > ; > Our initial scope mostly involved writing our own kernels and I did explore some libraries at the start - I was planning on using CUSP as well but my main concern was its lack of being updated to the newly compatible versions of the toolkit. cuSolver and cuBLAS do exist, but I chose to go ahead with a ""simple"" kernel implementation to have more control. I also felt that if I could keep the block size of the grid in optimal territory then they could be just as fast as those options (please do correct me if my reading of the literature or the situation was incorrect). To learn the basics, it's a good idea, but for large-scale projects, I prefer using existing libraries if possible.; Those libraries generally exploit state-of-the-art solution like mixed-precision computing. A gaming GPU is not way faster than a good CPU in double precision, but way faster in single precision, most of them have 64:1 ratio, however server class GPU have 2:1 ratio. Also when available they use vendor libraries like cuBLAS or hipBLAS. It is always nice to have you only care about connection and somebody else handle the solver as performant as possible. In future probably they will provide more and more solvers and it will be automagically works. It is kind of light-weight too, not a huge dependency like Trilinos or PETSc. ; > ; > I was not aware of Ginkgo and I will surely give it a go and try to produce some comparative results. I am currently super busy for this month and will get to working on the code with some delay.; > ; > Again, thank you for the lead!. I can test on various GPUs (P100/V100/A100 and 4070Mobile) on single node multi-gpu etc.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2346#issuecomment-2397803409:364,simpl,simple,364,https://su2code.github.io,https://github.com/su2code/SU2/pull/2346#issuecomment-2397803409,2,"['learn', 'simpl']","['learn', 'simple']"
Usability,"> Aside from my last two comments, and the possibility I broke the code :), this looks ready. Is this missing anything, or is it ready to merge?. Thank you so much @pcarruscag for your feedback. there is one thing left, it is about the residuals of the test case (species2_primitiveVenturi_mixingmodel.cfg) that I added in the previous pull request, they have changed exceeding in some outputs the tolerance 0.00001 with respect to the values stored in the parallel_regression.py, however the test case converges very well, so could it be possible to modify the values stored in that test case in order to not have this discrepancy between values stored and computed? Thank you so much in advance!!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1690#issuecomment-1194029520:185,feedback,feedback,185,https://su2code.github.io,https://github.com/su2code/SU2/pull/1690#issuecomment-1194029520,1,['feedback'],['feedback']
Usability,"> Below you can find a transitional test case using B-C model implemented in SU2:; > https://su2code.github.io/tutorials/Transitional_Flat_Plate/. Samet, nice to meet you! Thank you for your suggestion! I have learned this model in current SU2 version. B-C model can provide quite good results in many teatcases.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/502#issuecomment-446631804:210,learn,learned,210,https://su2code.github.io,https://github.com/su2code/SU2/issues/502#issuecomment-446631804,1,['learn'],['learned']
Usability,> Can you describe the bug this is fixing a bit more. I edited the PR description. Hope it's clear now. Please let know if you need more info.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2036#issuecomment-1551960465:93,clear,clear,93,https://su2code.github.io,https://github.com/su2code/SU2/pull/2036#issuecomment-1551960465,1,['clear'],['clear']
Usability,"> Do I understand correctly that two gradients are always computed per iteration?; > Is there any downside to using the unweighted LS for viscous flux correction? Is the statement that this type of gradient is better for reconstruction based on your observations or is it one of those well known things?. Yes - the gradient for now is computed twice and stored separately for viscous flows with 2nd-order upwind. Could be combined into one loop eventually. It is known that weighted LSQ / GG is more accurate (see Mavriplis, ""Revisiting the Least-Squares Procedure for Gradient Reconstruction on Unstructured Meshes"" for instance). However, unweighted LSQ is known to be more robust.. so a good compromise is to use it only for the reconstruction step (which is more susceptible to robustness issues than the viscous term) and then use WLSQ or GG for all other gradients in the viscous flux/sources for accuracy. > Sometimes high CFL leads to limit-cycle oscillations of the residuals and the solution is to reduce it, is this something this controller can pick up?; > High CFL also makes the linear systems harder to solve and as Edwin pointed out _somewhere_ there is not much point going above reasonable values with weakly coupled turbulence. Do you think it would be reasonable to build in some feedback from the linear solver (e.g. it is taking too much time or did not converge -> drop the CFL)?. Yes, I would also like to couple it to the linear solver so that we can remove the need to tune that as well. Ideally the user will not need to adjust parameters. There are some things I am going to try for that..",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-531890295:1300,feedback,feedback,1300,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-531890295,1,['feedback'],['feedback']
Usability,"> How should I update my branch with upstream/develop? Should I merge upstream/develop into my branch (and push to my fork on github)? Or may I rebase my branch on top of upstream/develop (and force push to my fork on github)?. Both ways are legit, feel free to use which one is easier for you [here](https://www.freecodecamp.org/news/the-ultimate-guide-to-git-merge-and-git-rebase/) a comparison between them. It depends on the taste of the developer. . > I assume I should add myself to the _Individual Contributors_ section of AUTHORS.md, is that correct?. Yes",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1951#issuecomment-1466144727:348,guid,guide-to-git-merge-and-git-rebase,348,https://su2code.github.io,https://github.com/su2code/SU2/pull/1951#issuecomment-1466144727,1,['guid'],['guide-to-git-merge-and-git-rebase']
Usability,"> I assume that your results with explicit/implicit Euler for single zone are the same?. It turns out that they are not. When I applied the above modifications (CFL: 1000 -> 0.1, TIME_DISCRE_*: EULER_IMPLICIT->EULER_EXPLICIT; additionally I had to increase ITER) to the `issue_simplified` singlezone setup (the one with AoA=10°), I obtain the following solution:. ![simplified-singlezone-expliciteuler-density](https://user-images.githubusercontent.com/72806890/140885244-abb72de1-0d2d-4dc8-bde9-e0772786e2cd.png). with the following convergence history:. +------------------------------------------------------------------------------------------+; | Inner_Iter| rms[Rho]| rms[k]| rms[w]| CL| CD| LinSolRes|; +------------------------------------------------------------------------------------------+; | 0| -3.131336| -inf| -inf| 0.000000| 2.232692| -inf|; | 1| -3.281025| -inf| -inf| 0.000000| 3.198384| -inf|; ...; | 9531740| -11.999999| -inf| -inf| -0.006045| 1.258662| -inf|; | 9531741| -12.000000| -inf| -inf| -0.006045| 1.258662| -inf|; | 9531742| -12.000000| -inf| -inf| -0.006045| 1.258662| -inf|; ; ----------------------------- Solver Exit -------------------------------; All convergence criteria satisfied.; +-----------------------------------------------------------------------+; | Convergence Field | Value | Criterion | Converged |; +-----------------------------------------------------------------------+; | rms[Rho]| -12| < -12| Yes|; +-----------------------------------------------------------------------+. The density plot is; - different from the original `issue_simplified` singlezone solution with implicit Euler and CFL=1000. ; - similar to the `issue_simplified` multizone solution with implicit Euler and CFL=0.1. . Similarly, the TKE plots:; - `issue_simplified` singlezone implicit Euler CFL=1000; ![tke-simplified-singlezone-impliciteuler](https://user-images.githubusercontent.com/72806890/140887227-fc2ed584-53cf-413d-b5ad-18d1a12f5e4a.png); - `issue_simplified` s",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414#issuecomment-963921195:366,simpl,simplified-singlezone-expliciteuler-density,366,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414#issuecomment-963921195,1,['simpl'],['simplified-singlezone-expliciteuler-density']
Usability,"> I don't known how the process to find the alpha that gives you a given CL works, but could the derivative not be obtained from this process? i.e. you could avoid the FD step entirely. It is a simple proportional controller that will change the angle of attack after a number of iterations depending on the difference between the current CL and the target CL. . So if the the option `ITER_DCL_DALPHA = 0` then it will do exactly what you suggest. It calculates the derivative based on the last update. The only problem with that is, there is no guarantee that the simulation at the previous update was converged, so the derivative might be incorrect. . But you are correct, I could just do a really tiny update (order of delta AoA ~10^-6) at the end and calculate the finite difference using that value. Let me try that and see if the gradients it calculates are reasonable, or if the update is too small and it gets clouded by numerical errors.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/780#issuecomment-539606698:194,simpl,simple,194,https://su2code.github.io,https://github.com/su2code/SU2/pull/780#issuecomment-539606698,1,['simpl'],['simple']
Usability,"> I find your work really interesting. I've been studying the internal flow field in compressors and have had good results using SU2's SA_EDDES for calculating the cantilevered stator with a tip clearance. If you need help with code verification, I'd be glad to assist. Hi @Linnnnnn23, every help on the validation/verification is gladly accepted! Let me know if you need anything by my side.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2150#issuecomment-2071759773:195,clear,clearance,195,https://su2code.github.io,https://github.com/su2code/SU2/pull/2150#issuecomment-2071759773,1,['clear'],['clearance']
Usability,"> I want to be done with this PR folks... This is really tiring to maintain so if you don't want it please just tell me...; > Can we agree on:; > Instead of CSolver having the `node` field it will have a pure virtual function `CVariable* GetNodes()`, derived solvers need to implement this method and have a `nodes` field of the most appropriate type (e.g. CEulerVariable for CEulerSolver).; > ; > I know some of you do not like the name `nodes` but there is something to be said about consistency (that has always been the name) and I do not think changing a generic name for another generic name justifies breaking the formatting everywhere and having needlessly long calls to get some data. In the interest of keeping the PRs moving, I am ok with this. It will also be natural for folks in the short term to learn the new system, since everyone is already accustomed to using the solver->node* construct. We can always go for a targeted refactoring later separate from the changes in this PR if we would like.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/753#issuecomment-538218606:811,learn,learn,811,https://su2code.github.io,https://github.com/su2code/SU2/pull/753#issuecomment-538218606,1,['learn'],['learn']
Usability,"> I'm thinking about reusing the SST test case ([axisymmetric_rans/air_nozzle](https://github.com/su2code/SU2/tree/master/TestCases/axisymmetric_rans/air_nozzle)) so that the same mesh can be used. Would that be fine ?. That's a quite specific testcase. How did you test the implementation? Do you have some simple results for the turbulent axisymmetric jet? We know that the results for round jets are not super good for standard SA, but at least we know what the result should look like, here on p.32 - 35 they test SA for the round jet and compare to the Wygnanski & Fiedler measurements:; https://www.researchgate.net/publication/24296213_Turbulence_Modeling_Validation_Testing_and_Development. The domain is just a rectangle so pretty simple to set up. You could also use the V&V test that we have, but it is a variable density jet:; https://su2code.github.io/vandv/SANDIA_jet/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2197#issuecomment-1889612505:308,simpl,simple,308,https://su2code.github.io,https://github.com/su2code/SU2/pull/2197#issuecomment-1889612505,2,['simpl'],['simple']
Usability,"> If anyone as an elegant solution to simply check for EXIT_SUCCES in the regression test one could add some dry_run regression tests. This can be added to the meson tests simply enough. In other words, you could add it alongside the unit tests. You can read more about meson tests [here](https://mesonbuild.com/Unit-tests.html). If you add `SU2_CFD` as a test executable with the dry run option as a command line argument, then meson will do the dry run and mark it as failing if it does not receive `EXIT_SUCCESS`.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/858#issuecomment-581945210:38,simpl,simply,38,https://su2code.github.io,https://github.com/su2code/SU2/pull/858#issuecomment-581945210,2,['simpl'],['simply']
Usability,"> If you are referring to surface heat flux it is one of the default surface outputs.; > Maybe there is a bug in v6.2 but in current develop it seems to work fine, you can try using this config: [v7.cfg.zip](https://github.com/su2code/SU2/files/3762621/v7.cfg.zip); > Some options changed name since v6.2, you can read about it here: https://su2code.github.io/docs/Guide-to-v7/; > I replaced the relevant time domain options but commented out all the output options.; > ; > On another note I think you should revise your settings, you had a time step of 0 on an unsteady simulation for example. If you have setup questions have a look at the user forum https://www.cfd-online.com/Forums/su2/ and start a topic if there is no related one already.; > ; > If you have issues with heatflux output with the develop version / v7 we can re-open this issue. I tried but heatflux equals to 0.000. What is wrong?. > If you are referring to surface heat flux it is one of the default surface outputs.; > Maybe there is a bug in v6.2 but in current develop it seems to work fine, you can try using this config: [v7.cfg.zip](https://github.com/su2code/SU2/files/3762621/v7.cfg.zip); > Some options changed name since v6.2, you can read about it here: https://su2code.github.io/docs/Guide-to-v7/; > I replaced the relevant time domain options but commented out all the output options.; > ; > On another note I think you should revise your settings, you had a time step of 0 on an unsteady simulation for example. If you have setup questions have a look at the user forum https://www.cfd-online.com/Forums/su2/ and start a topic if there is no related one already.; > ; > If you have issues with heatflux output with the develop version / v7 we can re-open this issue. I tried but heatflux equals to 0.000. What is wrong?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/805#issuecomment-545908540:365,Guid,Guide-to-,365,https://su2code.github.io,https://github.com/su2code/SU2/issues/805#issuecomment-545908540,2,['Guid'],['Guide-to-']
Usability,"> If you are referring to surface heat flux it is one of the default surface outputs.; > Maybe there is a bug in v6.2 but in current develop it seems to work fine, you can try using this config: [v7.cfg.zip](https://github.com/su2code/SU2/files/3762621/v7.cfg.zip); > Some options changed name since v6.2, you can read about it here: https://su2code.github.io/docs/Guide-to-v7/; > I replaced the relevant time domain options but commented out all the output options.; > ; > On another note I think you should revise your settings, you had a time step of 0 on an unsteady simulation for example. If you have setup questions have a look at the user forum https://www.cfd-online.com/Forums/su2/ and start a topic if there is no related one already.; > ; > If you have issues with heatflux output with the develop version / v7 we can re-open this issue. I wonder that if I use TIME_STEPPING without dual time, is timestep a must?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/805#issuecomment-546276782:365,Guid,Guide-to-,365,https://su2code.github.io,https://github.com/su2code/SU2/issues/805#issuecomment-546276782,1,['Guid'],['Guide-to-']
Usability,"> Looks quite simple to me now, what do you think?. I fully agree. The CVariable footprint is much smaller and no more nasty address handling. (Adding another variable in another solver requires a bit more code though and a little understanding of what is going on than the ""Address""-version, but on the other hand this explicit handling of each primal-solver creates a good separation :+1: )",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1536#issuecomment-1050172065:14,simpl,simple,14,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536#issuecomment-1050172065,1,['simpl'],['simple']
Usability,> Mpi4 is not compatible with the version of pastix we support.; > And you have to compile scotch and pastix according to the instructions in TestCases/pastix_support/ before compiling SU2. Thanks for the clarification! I use Mpi4 for most of my programs so that's why I built it that way. I followed this guide for pastix: https://solverstack.gitlabpages.inria.fr/pastix/md_docs_doxygen_chapters_Pastix_Runtime.html. So I build pastix 6.X.X. I will check the test cases directory though for the instructions. Also how does changing openmpi change c++ command line option ? . Thanks 😊,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1349#issuecomment-894838291:306,guid,guide,306,https://su2code.github.io,https://github.com/su2code/SU2/issues/1349#issuecomment-894838291,1,['guid'],['guide']
Usability,"> Nice! By the way, did you use some scripts for going through all the files and returning 'bad' naming conventions?. No, now I am just going through it by hand probably some linters are available to at least detect them. Actually, I am a bit confused as it is not so clear in the guide. It looks like the beginning of the project was just abbreviated from the Google style guide and was not enforced. Enforcing function names in UpperCamelCase and leaving variable names to the developer seems reasonable. > Can you explain the snake/camel terminology? :). Let's say we have a variable we want to name as `number of nodes per mesh` there are 2 common choices as . ```cpp; number_of_nodes_per_mesh = 42;; numberOfNodesPerMesh = 42;; ```; The first case is called the [snake case](https://en.wikipedia.org/wiki/Snake_case) and the second one is the [camel case ](https://en.wikipedia.org/wiki/Camel_case). Snake case is generally used in Python as [PEP8](https://peps.python.org/pep-0008/) suggests. . > Please revert the python accessor changes. I merged develop many of them vanished, should I revert the remaining ones?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1981#issuecomment-1482062542:268,clear,clear,268,https://su2code.github.io,https://github.com/su2code/SU2/pull/1981#issuecomment-1482062542,3,"['clear', 'guid']","['clear', 'guide']"
Usability,"> Note that you need to checkout this branch `fix_2d_periodic_rotation` (it is not in `develop` yet). Hi Pedro,; I checked the files you sent but building SU2 from source provided some errors:. - _MinGW64_ files provided from SU2 official website are corrupted and the installation crashes; however, it is possible to install the software but the .exe file mentioned in the installation guide won't be present. ; - After building _meson.py_ , the ninja installation command was line typed and the following alert message appeared "" **ninja: fatal: chdir to 'build' - No such file or directory** "". On a different laptop (with different user, to avoid the same mistakes) the following ERROR came up after the mason.py command line:; "" **'meson.py' is not recognized as an internal or external command, operable program or batch file** "". I don't know if any other user might have experienced the same errors. ; Anyway, are the bugfix files you published already available in the pre-compiled version? ; In the meanwhile, I'll try to figure out this inconvenient. Thank you in advance.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1562#issuecomment-1069325722:387,guid,guide,387,https://su2code.github.io,https://github.com/su2code/SU2/issues/1562#issuecomment-1069325722,1,['guid'],['guide']
Usability,"> Our working branch is 'develop', so you should have started from that and also merge into it. Every 6 months or so we then make the current develop into master. I changed the target branch to develop, and also updated your branch with current develop. Can you have a look at the failed check for clang-format coding style and format the changed file accordingly? https://su2code.github.io/docs_v7/Style-Guide/. Thanks a lot! It's very much appreciated. I have implemented the clang-format according to the guide and force formatting all files by using 'pre-commit run -a'. I think the new commits should be conformed to the coding style but not sure if the previous commit is also changed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2173#issuecomment-1951941110:405,Guid,Guide,405,https://su2code.github.io,https://github.com/su2code/SU2/pull/2173#issuecomment-1951941110,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"> Sounds good, with that it will be easier to reason about when the recording types are created and used, right now someone would have to sit down and reverse-engineer the process. My intuition is that we can use some of the machinery introduced for multizone (partial tape evaluation) to simplify the recording management. And just to be clear I am very interested in having this feature in the code for comparison with the FP approach. That's exactly right. We started investigating the multizone driver a while back but we didn't get very far... It's been a while so i will need a refresher. Sure, there's broader interest in comparison with FP. Ole, Nico, and I talked about doing a detailed characterization last summer and we briefly brought it up in Varenna last week",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1750#issuecomment-1785913088:184,intuit,intuition,184,https://su2code.github.io,https://github.com/su2code/SU2/pull/1750#issuecomment-1785913088,3,"['clear', 'intuit', 'simpl']","['clear', 'intuition', 'simplify']"
Usability,"> Thank you for the feedback but for 99% of cases it is easier for users if we download the dependencies for them. The philosophy behind SU2 has always been to provide as much of a self contained package as possible. But this check will allow users to use external dependencies just fine, as long as they happen to use an external 0.61.1?. ... I am not entirely sure I understand the issue here. You want to make it *easier* for users by downloading the dependencies, so you make it harder if they went and got their own dependencies? If someone has gone to the effort of getting their own dependencies instead of using your documented meson.py, it would seem like that inherently means they are the 1% of use cases and you could probably just leave them to it. Is the issue rather that only Meson 0.61.1 has been tested to work?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1945#issuecomment-1450921338:20,feedback,feedback,20,https://su2code.github.io,https://github.com/su2code/SU2/issues/1945#issuecomment-1450921338,1,['feedback'],['feedback']
Usability,"> Thank you for your answer. If you could share the configs and meshes that you are using I can try following the approach suggested by @pcarruscag and use the TKE from the turbulence solver instead of the freestream one.; > ; > Plus, I have some doubts on the default value of the turbulent to laminar viscosity ratio which is equal to 10 in SU2, although on the NASA page suggests to be in the range of 10^-2 to 10^-5. However, I think that this is another issue. @rois1995 Hi ~ . Can you give me a link to the NASA TMR guide for setting the viscosity ratio? I'm not sure where to find it. Sorry, I found it!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1851#issuecomment-2251837355:522,guid,guide,522,https://su2code.github.io,https://github.com/su2code/SU2/issues/1851#issuecomment-2251837355,1,['guid'],['guide']
Usability,"> Thanks for pointing that out. I dont think it is intentional. Maybe we can use this PR also to fix this ?. That depends on how atomic we want these PRs to be. This PR is largely a refactoring PR, and shouldn't change any underlying performance. But adding extra calculations on source terms and wall conditions might change the performance of the code. The two changes are completely compatible, so combining them wouldn't be hard. Nevertheless, I propose we keep these changes separate, so that the purpose of each PR is clear and easy to see. In my mind, two small PRs are easier to check and review than one large PR. @talbring @economon What do you think? One big PR or two small PRs?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/626#issuecomment-458177675:524,clear,clear,524,https://su2code.github.io,https://github.com/su2code/SU2/pull/626#issuecomment-458177675,1,['clear'],['clear']
Usability,"> Thanks for the fast reply! I changed the hardcoded 2 (just as a remark: the hardcoded values also appear in the calculations), added myself as an author and inserted some lines for throwing an error if the issue in #1565 occurs. I did not know exactly where to put it best.; > ; > Concerning a regression test: I strongly support the idea of introducing an axisymmetric regression test. However, I was using a testcase from @bigfooted , and I never set up such a test case on my own. There do not seem to be any axisymmetric pipe setups in the Testcases folder so far. @bigfooted , could we maybe use your mesh for the jet flow test case and, if necessary, switch to a standard flow setup?. Yes, you can use that mesh. It can be used for pipe flow setup and jets with coflows, so we can reuse it in different testcases as well if needed. But any simple rectangular mesh is fine, so a mesh from the existing testcases as @pcarruscag mentions would also work.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1571#issuecomment-1075656956:848,simpl,simple,848,https://su2code.github.io,https://github.com/su2code/SU2/pull/1571#issuecomment-1075656956,1,['simpl'],['simple']
Usability,"> Thanks for the suggestion and I am preparing for a test. As far as I understand it, I just find that to get the absolute value of r_ij ( showed in the highest equation) in this part of code is unnecessary. The cross-product operation is to find the grid vector mostly parallel to the vorticity vector and the absolute value may cause a nonphysical recognition. @EduardoMolina, I don't know if I got it wrong and wish more guidance,.; > ; > ```; > for (auto iDim = 0u; iDim < nDim; iDim++){; > delta[iDim] = fabs(coord_j[iDim] - coord_i[iDim]);; > }; > ```. Hi Shihe,. I checked the implementation and I think it is correctly done. You do need the absolute value (i.e., delta has a unit of [m] or equivalent) to keep the correct dimension of nu_t based on a Smagorinsky-type SGS model. You may find the appendix of this paper useful for your understanding of delta_omg: [https://doi.org/10.1007/s00162-011-0240-z](https://doi.org/10.1007/s00162-011-0240-z). Also note that delta_omg does not always outperforms its peers - vorticity may not be aligned to the rotation axis of a local vortex (e.g., in rotating reference frame, in attached boundary layer, to name a few), in which case the physical meaning of delta_omg becomes vague. See also my work for a brief review of DES-type methods and some applications: [https://doi.org/10.1115/1.4052019](https://doi.org/10.1115/1.4052019)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1462#issuecomment-990220976:424,guid,guidance,424,https://su2code.github.io,https://github.com/su2code/SU2/issues/1462#issuecomment-990220976,1,['guid'],['guidance']
Usability,"> The ""int"" in ""intIndexBased"" is for internal then? Because its type is also int, easy mistake to make xD. Yes.. The name was the first one I gave that routine. It somehow made it through.. Now that I had to type it several times I'd love to have it changed. But anyway.. I'm a bit puzzled that it seems to be so easy but maybe it's just as simple as you said - new approach inside `CDiscAdjSolver` and old in `CDiscAdjFEASolver` (if I got that correctly?). That would come in handy for all further developments. Let's wait for the validation. I'll also do one with this branch for the CHT adjoints tomorrow, just to be sure.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/803#issuecomment-542360883:342,simpl,simple,342,https://su2code.github.io,https://github.com/su2code/SU2/pull/803#issuecomment-542360883,1,['simpl'],['simple']
Usability,"> There was a lot of talk about refactoring the shape optimization framework to be able to work completely in memory.; > I think the idea was not to have more drivers but simply to have more granularity such that you could manipulate the geometry from python (without writing it to files).; > We also wanted introspection, i.e. you could probe SU2 via python for what variables and functions are available.; > We also talked about having the projection step (DOT) included in CFD_AD so that you only need to worry about surface sensitivities, note that DEF is already part of CFD for forward mode AD.; > (talking does not go very far); > ; > If you want to lead this work, we can help you understand the inner workings. We meet every Wednesday at 4pm CET https://meet.jit.si/SU2_DevMeeting to discuss this type of issue. Thank you for the quick reply. The discussions you mention sound very promising, I would be glad to join tomorrow afternoon and learn more, so that I might contribute. One quick remark: I am aware that it is indeed possible to deform the mesh within `SU2_CFD`, I use this extensively for static aero-elastic analysis. However, I have not been able to have the deformed mesh be written to file at output (in SU2 or CGNS format). This is fine for aero-elastic updates (movement of the surface due to _structural displacements_), where it is sufficient to see the deformed mesh in the post-processing files. It becomes impractical though, for design updates (movement of the surface to due to _design displacements_, i.e. representing changes in the design variables) where the new mesh is a useful intermediate result. Even if this is just an issue in my configuration file, I think that a stand-alone driver or equivalent of `SU2_DEF` would remain useful. For each new set of updated design variables during shape optimisation, a single mesh deformation is sufficient to provide the new, updated jig geometry which all of the aerodynamic or aero-elastic analyses (one for each oper",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1262#issuecomment-818839696:171,simpl,simply,171,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262#issuecomment-818839696,2,"['learn', 'simpl']","['learn', 'simply']"
Usability,"> Why not simply use clang-format and have a script to pass files/directories to have formatted? It provides more formatting options than just stripping trailing whitespaces and replacing tabs and does it in a consistent way. Tried that on a couple of files out of curiosity, it does not look very good, for example we have the habit of aligning repetitive statements across multiple lines clang-format does not keep that, we have very long lines with chained methods that look awkward when broken up.; Clang probably has a neater architecture of tiny objects where auto formatting works very well.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/808#issuecomment-551551298:10,simpl,simply,10,https://su2code.github.io,https://github.com/su2code/SU2/pull/808#issuecomment-551551298,1,['simpl'],['simply']
Usability,"> You are proposing the exact opposite of the conclusion of the paper:; > ; > ""From the above findings, it is **recommended that all three of these terms be included** when running hypersonic, or even supersonic, turbulent flow simulations, especially for flows with shock wave-induced separations.""; > ; > And they clearly say this: ""While the full inclusion of these terms does not always result in predictions that agree better with DNS/experimental data, this is likely caused by the fact that their exclusion cancels out effects of other flaws in the RANS models employed.""; > ; > If your strategy is to get a better match with experiments by neglecting physics terms, then you should rethink your strategy. Thank you for your comment @bigfooted . The above paper is not presented to improve the current k-w SST model. . As you can see in the first post, there is a problem with the high Mach number and freestream turbulence intensity case. If high turbulence kinetic energy(TKE) and Mach number condition, the boundary condition cannot be maintained the imposed value. (I think there seems to be a bug in the temperature calculation using total energy when including the TKE). The introduction of C1 was intended to provide a 'temporary' solution at the level of first aid (simply commenting out conditional statements in code).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1851#issuecomment-1521383702:316,clear,clearly,316,https://su2code.github.io,https://github.com/su2code/SU2/issues/1851#issuecomment-1521383702,2,"['clear', 'simpl']","['clearly', 'simply']"
Usability,"> You may want to remove the string based interface since it's known to be inneficient. When replacing the string-based with index-based look-up methods, the performance improves substantially. The figure below shows the average measured evaluation time (measured with chrono library) vs the number of output variables. It's clear that using index-based look-up methods results in reduced query time, as well as improved scaling. ![scaling_nVars](https://github.com/su2code/SU2/assets/38651601/31252439-ac6e-4f1b-82d4-e13a55d54c98)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2214#issuecomment-1952521226:325,clear,clear,325,https://su2code.github.io,https://github.com/su2code/SU2/pull/2214#issuecomment-1952521226,1,['clear'],['clear']
Usability,"> the ""modern C++"" way is to use enum class and to never rely on implicit conversions from enum to integer type. I am in. It is a little (actually quite a bit) more involved as the enum namespace has to be given now everywhere an entry is used.; I was not familiar with `enum` vs `enum class` if someone else needs an entry point [stack overflow](https://stackoverflow.com/questions/18335861/why-is-enum-class-preferred-over-plain-enum), [playin around in compiler explorer](https://gcc.godbolt.org/z/5YTd4dPoE)... oh and of course the [c++ core guidelines entry endorses the use of enum class as well](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Renum-class)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1242#issuecomment-805108781:546,guid,guidelines,546,https://su2code.github.io,https://github.com/su2code/SU2/pull/1242#issuecomment-805108781,1,['guid'],['guidelines']
Usability,"> the off-PR comments can be integrated in this PR to clear that up a bit. If not that is OK as well. It's more than OK, the CHT implementation suffers a bit from being a single person's project.. you're very welcome to have a look over it! :-). > Can you add that option to the config_template.cfg together with that description, the valid inputs and the default. Actually I'm hesitating a bit adding it to the config template right now. I'd prefer to have `DIRECT_TEMPERATURE_ROBIN_HEATFLUX` as the default and ""hide"" the rest as developer's options for the moment.; The reason simply is that those different methods need to checked and validated against each other before we make them public.; E.g. I figured that for the incompressible CHT test case from the repo, there is a severe gap between the heatfluxes obtained from the ""averaged"" approach and the direct one, see below. ![heatflux_convergence](https://user-images.githubusercontent.com/22639394/72885197-bb9e4a80-3d07-11ea-9fad-a4d709dc511e.png). That needs to be cleared up first...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/839#issuecomment-577108935:54,clear,clear,54,https://su2code.github.io,https://github.com/su2code/SU2/pull/839#issuecomment-577108935,3,"['clear', 'simpl']","['clear', 'cleared', 'simply']"
Usability,> 如果您指的是表面热通量，则它是默认的表面输出之一。; > v6.2中可能存在一个错误，但是在当前的开发中它似乎可以正常工作，您可以尝试使用以下配置：[v7.cfg.zip](https://github.com/su2code/SU2/files/3762621/v7.cfg.zip); > v6.2之后更改了一些选项的名称，您可以在此处阅读：[https：// /su2code.github.io/docs/Guide-to-v7/](https://su2code.github.io/docs/Guide-to-v7/); > 我替换了相关的时域选项，但注释了所有输出选项。; > ; > 另一方面，我认为您应该修改设置，例如对于不稳定的模拟，您将时间步长设置为0。如果您有设置方面的问题，请访问用户论坛[https://www.cfd-online.com/Forums/su2/，](https://www.cfd-online.com/Forums/su2/)并在没有相关主题的情况下启动主题。; > ; > 如果开发版本/ v7的heatflux输出存在问题，我们可以重新打开此问题。. Thank you. It helps a lot.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/805#issuecomment-545541390:209,Guid,Guide-to-,209,https://su2code.github.io,https://github.com/su2code/SU2/issues/805#issuecomment-545541390,2,['Guid'],['Guide-to-']
Usability,">I found out the other day that this: unordered_map<pair<int,int>, su2double> does not work without extra tricks,. Yes, I found some examples to do it. But I was not quite understanding what are the sizes of local maps or how to communicate them over MPI. . >so if you have it out of the config in some matrix format it is probably better. In that case, I can just move the current global arrays to physical geometry class and simplify some of the function calls.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/877#issuecomment-653479936:427,simpl,simplify,427,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-653479936,1,['simpl'],['simplify']
Usability,">Therefore, we try to avoid templates when possible …. I find this view strange. I would appreciate if current C++ software techniques can be applied. How much can they help to make the source code a bit simpler?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/400#issuecomment-360055094:204,simpl,simpler,204,https://su2code.github.io,https://github.com/su2code/SU2/issues/400#issuecomment-360055094,1,['simpl'],['simpler']
Usability,">Why are you defining an internal marker?. Haha. Initially, I thought by creating a dummy marker inside my domain and calling it ""INTERNAL"", I can output solution at any desired face in the solution_flow file without having to deal with post processing software. This is of course possible in Paraview or Tecplot, but I figured this may be more automatic and perhaps easier especially with curved surfaces. Now I am simply curious as to what is happening with the internal markers.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/986#issuecomment-628781294:416,simpl,simply,416,https://su2code.github.io,https://github.com/su2code/SU2/issues/986#issuecomment-628781294,1,['simpl'],['simply']
Usability,"@AmauryBilocq Thanks for your post. Can you please check that you are actually not running out of memory, as that can also raise such errors? Second, if Giles BC is the issue I think you will still be able to run the case with Riemann which is a bit simpler than Giles. Can you also test that?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1429#issuecomment-1025177015:250,simpl,simpler,250,https://su2code.github.io,https://github.com/su2code/SU2/issues/1429#issuecomment-1025177015,1,['simpl'],['simpler']
Usability,@EvertBunschoten even if the performance isn't great this is a pretty small change so I think we can merge it.; Do you have time to wrap it up and add a simple regression test?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2152#issuecomment-2269672071:153,simpl,simple,153,https://su2code.github.io,https://github.com/su2code/SU2/pull/2152#issuecomment-2269672071,1,['simpl'],['simple']
Usability,"@JedrzejMosiezny . The reason why the mesh and config files are split into separate repos is the following: ideally we want to have the test cases being closely coupled to the current version of the code as config options change quite frequently. However, the mesh files are simply too big to have them in the main repo (it takes too much time to check them out etc.). So a compromise was to still leave the config files in the main repo in order for them to stay up-to-date. We thought that the information [here](https://github.com/su2code/SU2/wiki/Test-Cases) would be quite clear for the user on how to merge config and mesh files. Following this instructions should avoid having to search for the mesh files manually. Let us know if you think different. @economon could you add Jędrzej to the dev team here on github ? Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/485#issuecomment-355152833:275,simpl,simply,275,https://su2code.github.io,https://github.com/su2code/SU2/pull/485#issuecomment-355152833,2,"['clear', 'simpl']","['clear', 'simply']"
Usability,"@Mick7: yep, I’ll look at that next. You may have noticed that the other routines for Loading and preparing adjacency are now general for any mesh reader, so all we need is to move the reader for the ASCII format into its own class. . @pcarruscag: there is at least one simple stretching function I have in some old code I can put in. Other elements would also be nice. It’s easy to cut the quads into tris (I have the same implementation for this in a python script) and hexas into tets. Might wait for a compelling need to add these features though, but I have no doubt we’ll add them",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/728#issuecomment-524179517:270,simpl,simple,270,https://su2code.github.io,https://github.com/su2code/SU2/pull/728#issuecomment-524179517,1,['simpl'],['simple']
Usability,"@Nicola-Fonzi, you may as well want to consider importing as well the structural velocities in the interface from your external solver. That information is always available and gives a consistent definition of the displacement and velocity on both the grid motions and the interface for dynamic FSI problems -- not to mention simplifying the evaluation of the mesh adjoints.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174#issuecomment-778326558:326,simpl,simplifying,326,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-778326558,1,['simpl'],['simplifying']
Usability,"@SumanVajjala gcc 5+ have full c++ 11 support (even more than that actually). As a last resort, if you cannot figure out what is going on with the compilers (simpler guess is that there are other versions installed and they are getting mixed up?), you can try replacing the file ""allocation_toolbox.hpp"" by this:; [allocation_toolbox_PATCH.txt](https://github.com/su2code/SU2/files/4550786/allocation_toolbox_PATCH.txt)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/955#issuecomment-621090526:158,simpl,simpler,158,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-621090526,1,['simpl'],['simpler']
Usability,"@TobiKattmann since we were talking about it yesterday, the advantage of the ""weak"" formulation is that it is conservative, heat fluxin equal heat flux out (because the post processed fluxes are consistent with how the boundary condition is applied).; Obviously at the expense of the isothermal temperatures not being imposed exactly.; With the ""strong"" formulation, conservation can probably only be achieved if the mesh topology of the inlet/outlet boundary is the same, or at grid convergence.; Learning something new everyday, I put it back as it was.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1107#issuecomment-730418379:498,Learn,Learning,498,https://su2code.github.io,https://github.com/su2code/SU2/pull/1107#issuecomment-730418379,1,['Learn'],['Learning']
Usability,"@bigfooted @EvertBunschoten Well fwiw the simplest way is to checkout a new branch from before the merge and open a new PR, there are no coments here yet, so its fine.; (If you git revert the merge it will be a pain to then merge the other PRs)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1826#issuecomment-1327961579:42,simpl,simplest,42,https://su2code.github.io,https://github.com/su2code/SU2/pull/1826#issuecomment-1327961579,1,['simpl'],['simplest']
Usability,"@bigfooted @economon and @pcarruscag . I created separate repo to demonstrate what I'm after in the simplest way possible: [FoamScience/AutoRegistering-Cpp-Classes](https://github.com/FoamScience/AutoRegistering-Cpp-Classes/commits/master). > If you're going to check the code, check CSolver first, then CEulerSolver ... - Commit FoamScience/AutoRegistering-Cpp-Classes@20ca601 implements the concept for a single Factory.; - (Make-believe) Standard solver classes are compiled to a library; - A (Make-beleive) Custom solver class is compiled to its own shared library; - By default, the make program knows only about CEulerSolver (from standard solvers lib); - But if you pass in a library name (eg. libCCustomSolvers.so), it gets loaded, symbols pulled and the registration map for CSolver gets updated with the new Solver automatically. - But it would bloat the code if things went this way, so commit FoamScience/AutoRegistering-Cpp-Classes@380c052 isolates self-registration code into 3 macros to:; - Declare the registration map and associated members; - Define and initialize registration-related members on the base class; - Register a class. If you only care about the interface and not how the thing is implemented, commit 380c052 is your target.; I took care to document the important parts of the code, so, please, dig in and let me know what you think. At this point, integrating this with SU2 (and at what parts, and when) is your call but If you decide to do so, l will help.; > And yes, I wrote my own build script so I can have direct control over the compiler and the linker. **One last note: I used ""dlopen"", so you will have to compile the code on Linux I suppose.**",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1058#issuecomment-680962672:100,simpl,simplest,100,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-680962672,1,['simpl'],['simplest']
Usability,"@bigfooted Has there ever been any discussion regarding implementation of a `START_TIME=` capability into the config file? After going through the code a bit, it looks like doing this would be a good starting point for implementing ability to adjust deltaT mid-runs, as in general the code presumes `TimeIter*deltaT` as being the current time. This would be problematic for unsteady restarts that have a varying timestep. Plus, this would allow one to, without using the Python wrapper, use a different timestep in the config file for an unsteady restart. It also may clear up some confusion to have an explicit option for this, as in #2071. It can maybe look something like:. % Start time for restarting unsteady simulations; % = -1 for default calculation (START_TIME=RESTART_ITER*TIME_STEP); START_TIME=-1. Then `CConfig::GetPhysicalTime` could be appropriately updated and used in-place of all locations in the code where a physical time is manually calculated.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2190#issuecomment-1870730956:568,clear,clear,568,https://su2code.github.io,https://github.com/su2code/SU2/pull/2190#issuecomment-1870730956,1,['clear'],['clear']
Usability,"@clarkpede @EduardoMolina : yep, the issue is that the periodic and MPI communications are tangled up together in the current implementation. The main issue occurs when there are periodic points that are also ghost nodes. . Ideally the periodic and MPI would be separated, and the periodic communications would happen first so that all periodic BCs are synchronized before trying to send across partitions. Right now, the comms are mixed, so sometimes, we send old data at periodic points to their matching pair, which then gets updated in a later MPI comm. Therefore, the second call you have added to the MPI resends the periodic update to with the correct data that was updated with MPI in the first call. I hope this is clear.. Anyway, please go with this change as you have it. All of the MPI and periodic comms will be replaced with a cleaner/separated version right after v6.2.0 (you can see what I am working on in feature_mpi_periodic). I will likely need some help testing that soon :).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/649#issuecomment-463711280:724,clear,clear,724,https://su2code.github.io,https://github.com/su2code/SU2/pull/649#issuecomment-463711280,1,['clear'],['clear']
Usability,"@clarkpede A small discussion on the pros and cons can be found here: https://mesonbuild.com/Comparisons.html. Or https://medium.com/@germandiagogomez/getting-started-with-meson-build-system-and-c-83270f444bee Of course this article is just a personal opinion, but he makes some important points. . From my experience I can really say that the syntax of meson is extremely simple and intuitive. I managed to set it up for SU2 in like half a day, without having any prior knowledge on how it works. And it seems like that a lot of projects (for example all Gnome projects) are going to or are already using meson.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/685#issuecomment-500221287:373,simpl,simple,373,https://su2code.github.io,https://github.com/su2code/SU2/issues/685#issuecomment-500221287,2,"['intuit', 'simpl']","['intuitive', 'simple']"
Usability,"@clarkpede Great, thanks for the details. I see your point. In general, vortex shedding cases are indeed challenging to match with the experiments, but that's what makes them interesting at the end. For a start, I am aiming to obtain comparable behaviours with both the compressible and the incompressible unsteady solvers under similar settings, rather than matching with experiments; mostly as an acceptance test as well. I am now working with standard SST turbulence model, but if you could share some simple meshes/cfg files to have a first go with hybrid RANS/LES, I would really appreciate it. > Good catch. I just pushed a commit that adds SetMaxLength calculations in all the instances I could find where the geometry updates. Thanks for the fix!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/552#issuecomment-404097397:505,simpl,simple,505,https://su2code.github.io,https://github.com/su2code/SU2/pull/552#issuecomment-404097397,1,['simpl'],['simple']
Usability,"@clarkpede I have not used the mesh adaptation tools since my last post (I was simply learning to use them for an undergrad project). With that said, I do not have any other concerns. It worked well for my application. I appreciate your help.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-500491744:79,simpl,simply,79,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-500491744,2,"['learn', 'simpl']","['learning', 'simply']"
Usability,"@clarkpede I think it is simpler to lock the periodic boundaries. I can look into that if you can point me to it. I have been using BFGS but the DV_VALUE is always 0.001 in the config_DOT_AD files, even after 25 design iterations.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/976#issuecomment-626855754:25,simpl,simpler,25,https://su2code.github.io,https://github.com/su2code/SU2/issues/976#issuecomment-626855754,1,['simpl'],['simpler']
Usability,"@economon I need to fix and test a few things before I push the branch to an internal branch. But I should be able to finish by the end of the next week. If you're looking to improve the C++ inlet profile specification I started, then I'd like to get some feedback on the overall design. There are several different ways to handle this, and I chose what I thought was most logical. I want to make sure that my design choices match your use cases and SU2's design. Should I post a summary here, or would you prefer that I email you?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/467#issuecomment-366493237:256,feedback,feedback,256,https://su2code.github.io,https://github.com/su2code/SU2/issues/467#issuecomment-366493237,1,['feedback'],['feedback']
Usability,"@economon I tested a couple of simpler problems at subsonic speeds, including the ONERA M6 case at M=0.8395. There's occasionally a difference of one iteration out of about 20. Usually the current develop branch is the one that requires more iterations, but not always. I included a snapshot from my tests on the ONERA M6 case at CFL=30. ![convergence_comparison](https://user-images.githubusercontent.com/13340225/48648855-6c97af80-e9b6-11e8-863a-56dfdf0903c8.png). I don't have a good supersonic, viscous test problem, but I suspect the differences in convergence won't be huge there either. This sign change affects a single term out of many and a single component of a 4x4 or 5x5 Jacobian. My take is that the differences are there, but they are very small. I wouldn't have noticed the problem myself if I hadn't been refactoring the code to enable some changes on our end.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/609#issuecomment-439538677:31,simpl,simpler,31,https://su2code.github.io,https://github.com/su2code/SU2/issues/609#issuecomment-439538677,1,['simpl'],['simpler']
Usability,"@economon No, this looks good to me. It is merge-ready, from my perspective. I chatted with @talbring, and in a future PR we would like to add a simple set of classes to use with unit tests. For example, I've created a ""one-point geometry"" class for use in some of my tests. But I think that we should keep the PRs as incremental as possible. PSA: If anyone else wants to review this PR, they are welcome to. It is no longer a WIP.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/850#issuecomment-620382001:145,simpl,simple,145,https://su2code.github.io,https://github.com/su2code/SU2/pull/850#issuecomment-620382001,1,['simpl'],['simple']
Usability,"@elfring: thank you very much for the suggestion, but for the time being, our philosophy is to keep the code as simple as possible to keep a low barrier to entry for new users/developers. Therefore, we try to avoid templates when possible (there are a few isolated places where they are necessary). This may change in the future, but we'll close this for now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/400#issuecomment-360053938:112,simpl,simple,112,https://su2code.github.io,https://github.com/su2code/SU2/issues/400#issuecomment-360053938,1,['simpl'],['simple']
Usability,"@fertinaz the problem is that the pkg_config name for MPICH is not ""mpi"" which is what meson is configured to look for...; It is ""mpich"", please see my reply from 23 of May, it is very simple to edit the meson.build script to look for ""mpich"" instead of ""mpi"".; I have used this on numerous machines and the code works fine...; Whatever you do, please do not follow the advice to use 6.2.0, we have all worked extremely hard to make v7.x much faster, fix bugs, and add nice features... Unfortunately we cannot test every combination of compiler, operating system, and libraries.; I'm sure that somewhere, someone has fixed similar problems, sadly not all fixes make it back into the code. Other alternatives, some of which folks have suggested on this thread.; - Use ""custom-mpi"" mode, you will need to set some environment variables (CC=mpicc CXX=mpicxx etc. see above); - Use the legacy build system (i.e. follow the instructions for 6.2.0 but with the 7.0.7 code) be sure to add ""-DNDEBUG"" to the CXXFLAGS environment variable.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-721322008:185,simpl,simple,185,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721322008,1,['simpl'],['simple']
Usability,"@fpalacios - For the continuous adjoint it is NOT required to run multiple adjoints, you can actually combine them. Whether or not to do so is controlled by the OPT_COMBINE_OBJECTIVE option - I will try to add in some more comments as you suggest to make this clearer, along with other updates next week.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/385#issuecomment-294324095:260,clear,clearer,260,https://su2code.github.io,https://github.com/su2code/SU2/pull/385#issuecomment-294324095,1,['clear'],['clearer']
Usability,"@fpalacios I also think it is a good idea to keep the request open. Like I said, I can also help to simplify it. In fact, splitting it up in multiple commits is probably easier then you might think @JSmith36 :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/412#issuecomment-315606418:100,simpl,simplify,100,https://su2code.github.io,https://github.com/su2code/SU2/pull/412#issuecomment-315606418,1,['simpl'],['simplify']
Usability,"@fpalacios, you misunderstood me. What I meant was that the CrossProduct part should be uncommented in order to remove the compiler warnings, not removed. When I read this back, this was not very clear from my side. In any case there are still two compiler warnings in geometry_structure.cpp due to this issue in the develop branch.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/506#issuecomment-364848312:196,clear,clear,196,https://su2code.github.io,https://github.com/su2code/SU2/pull/506#issuecomment-364848312,1,['clear'],['clear']
Usability,@fpalacios: I am adding you to this discussion because I have seen you are the responsible of implementing the Negative Spalart-Allmaras variation in SU2. Maybe you can shed some light into the discussion. In particular to:; > we do not consider this modification and simply consider the modified vorticity as in the standard Spalart-Allmaras,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/992#issuecomment-652635415:268,simpl,simply,268,https://su2code.github.io,https://github.com/su2code/SU2/issues/992#issuecomment-652635415,1,['simpl'],['simply']
Usability,"@hlkline : it is true that we have been experimenting a lot to find the best formula, and no doubt we will continue to tweak things as we constantly evolve. But, one constant you can always trust is that the repo will be the home for important decisions on issues and PRs, so there is no need to worry about missing critical updates. . With slack and now rocket chat, we are looking to improve communication efficiency as people collaborate on particular developments in the code (say in pairs or small groups), or perhaps in the future, it can be opened to the public as a sort of support channel. This is to be seen as we gather some experience and feedback.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/645#issuecomment-464602965:651,feedback,feedback,651,https://su2code.github.io,https://github.com/su2code/SU2/issues/645#issuecomment-464602965,1,['feedback'],['feedback']
Usability,"@jayantmukho : The difference is also observed when using SST.; ![rans_cp_compare-branch_roe_SST](https://user-images.githubusercontent.com/9790985/61556955-d372da00-aa17-11e9-9351-5d3505cc85a1.png). @economon and @clarkpede : Thanks for the feedback. @clarkpede , I will re-run using the commit that you pointed and I will post the results here.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/735#issuecomment-513330011:242,feedback,feedback,242,https://su2code.github.io,https://github.com/su2code/SU2/issues/735#issuecomment-513330011,1,['feedback'],['feedback']
Usability,"@koodlyakshay I was looking at the ADT modifications that you mention.; Do I understand correctly that the roughness height does not influence the wall distance calculation itself? But that you simply need to know what is the roughness height associated with the closest wall point? If this is the case you can probably just use the markerId returned by the wall distance function?; As for mpi aspects, each rank sees the same ADT and I recall that we do have mechanisms to access global marker information.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/877#issuecomment-595197305:194,simpl,simply,194,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-595197305,1,['simpl'],['simply']
Usability,"@kursatyurt Hello, thank you so much for the lead. Our initial scope mostly involved writing our own kernels and I did explore some libraries at the start - I was planning on using CUSP as well but my main concern was its lack of being updated to the newly compatible versions of the toolkit. cuSolver and cuBLAS do exist, but I chose to go ahead with a ""simple"" kernel implementation to have more control. I also felt that if I could keep the block size of the grid in optimal territory then they could be just as fast as those options (please do correct me if my reading of the literature or the situation was incorrect). I was not aware of Ginkgo and I will surely give it a go and try to produce some comparative results. I am currently super busy for this month and will get to working on the code with some delay. Again, thank you for the lead!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2346#issuecomment-2397639761:355,simpl,simple,355,https://su2code.github.io,https://github.com/su2code/SU2/pull/2346#issuecomment-2397639761,1,['simpl'],['simple']
Usability,"@lorenzob95 we talked about this issue in our weekly developers meeting.; The current implementation of LM in the code is not stable enough and it has known bugs, so we will not re enable it for now.; A revised implementation by @vdweide exist in branch https://github.com/su2code/SU2/tree/feature_LM_model, but this is based on SU2 v6.2, it has been used on simple problems, convergence is not ideal on more complicated ones.; The decision is to wait for some developments that will make it easier to bring this revised implementation into version 7 (which is different in many ways from 6).; You can follow this issue to know when this gets implemented, it will probably take a few months.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1130#issuecomment-755395168:359,simpl,simple,359,https://su2code.github.io,https://github.com/su2code/SU2/issues/1130#issuecomment-755395168,1,['simpl'],['simple']
Usability,"@marcovanderbijl : thanks for the question. The original limit there is simply to impose an upper bound for memory considerations, since the first instantiation of the array of FFD boxes (before the number of FFD boxes embedded in the mesh is detected) needs a default value. We can of course change this to automatically detect the number to avoid the requirement or make it an input option in the config, but we have not run into this issue yet. For now, you should be able to increase that to a reasonable number without any issue. Please give it a try.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/684#issuecomment-495078497:72,simpl,simply,72,https://su2code.github.io,https://github.com/su2code/SU2/issues/684#issuecomment-495078497,1,['simpl'],['simply']
Usability,@pcarruscag Based on your 2nd review we have updated the code according to your suggestions. It was not clear how to restore the accidental changes to the sha versions of submodules externals/codi/ and subprojects/CoolProp/. Please instruct us howto or override yourselves for the same if possible. Request you to please review and instruct for proceeding further.; Thank you very much.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2142#issuecomment-1793649845:104,clear,clear,104,https://su2code.github.io,https://github.com/su2code/SU2/pull/2142#issuecomment-1793649845,1,['clear'],['clear']
Usability,"@pcarruscag I just had a chat with @TobiKattmann. Essentially there are two points that would, in our opinion, speak against moving the implementation to CSolver. 1. We dont know yet whether they might be some future differences in the implementations. ; 2. This defeats somehow the purpose of the class structure, as the base class should be free of specific implementations for a certain solver ... Although the intention would be to have it there only temporarily, we never know how long it actually stays there in the end. I don't mind having a little bit of code copy, if the structure is clear and easy to understand.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/657#issuecomment-472011300:594,clear,clear,594,https://su2code.github.io,https://github.com/su2code/SU2/pull/657#issuecomment-472011300,1,['clear'],['clear']
Usability,"@pcarruscag I tried to restart the solution with zero mach number for config. However, for some reason, convergence takes so much longer than simply solving mach=0.1 config. Indeed, i started my simulation when you post your suggestion and it still haven't converged yet. Residual getting smaller but it is so slow. Therefore it might not be an efficient solution. Thanks for advice anyway.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/997#issuecomment-632892959:142,simpl,simply,142,https://su2code.github.io,https://github.com/su2code/SU2/issues/997#issuecomment-632892959,1,['simpl'],['simply']
Usability,"@pcarruscag I went through all your comments. There is one open discussion, maybe we can see if there is a better way to do this code sharing between flamelet and species although I think what I did now is simple and effective. ; Maybe you still see some other suboptimal implementations.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1917#issuecomment-1569765685:206,simpl,simple,206,https://su2code.github.io,https://github.com/su2code/SU2/pull/1917#issuecomment-1569765685,1,['simpl'],['simple']
Usability,"@pcarruscag It is ready for some external feedback.; Some things that you might want to take a look at:; - the implementation of objectives using surface_scalar_01, surface_scalar_02,... This is a simple extension to multiple scalars but could be generalized in the future.; - the implementation of axisymmetric source terms using the already available CSourceAxisymmetric_Species, this framework was present in the species implementation. It works, but this might need some more polishing in the future.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1917#issuecomment-1466044654:42,feedback,feedback,42,https://su2code.github.io,https://github.com/su2code/SU2/pull/1917#issuecomment-1466044654,2,"['feedback', 'simpl']","['feedback', 'simple']"
Usability,"@pcarruscag thanks for the additional feedback. some of these comments were already in my plans, but can only do one thing at a time of course. In any case it's good to see we're thinking in the same way, confirms I'm heading in the right direction, so I definitely appreciate it. Others I had not thought about it at all, even more useful! Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1014#issuecomment-654324437:38,feedback,feedback,38,https://su2code.github.io,https://github.com/su2code/SU2/pull/1014#issuecomment-654324437,1,['feedback'],['feedback']
Usability,"@pcarruscag, Did you work out the analytical Jacobian for AUSM+-up? (holy cow). I have also worked out and implemented in my local machine for AUSM, up and up2 (with minor simplifications/assumptions, wherever seemed okay) . I was planning to consolidate things appropriately and refine it before pushing them to repo.; By the way, I am also observing the similar behavior with little time advantage for analytical part (a bit more refinement/cleaning in implementation from my side will be done) . So what should be the next plan ???. Cheers; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/691#issuecomment-505621705:172,simpl,simplifications,172,https://su2code.github.io,https://github.com/su2code/SU2/pull/691#issuecomment-505621705,1,['simpl'],['simplifications']
Usability,"@pcarruscag: I'm in the process of creating a test case for the 3D gust. To do so, I created a CFD mesh for a simple, rectangular 3m wing with a NACA0012 profile. The mesh has a size of 13.7 Mb and a restart solution is 16.3 Mb plus 5.5 Mb (.csv and .dat). Do you think that is acceptable?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1954#issuecomment-1545475126:110,simpl,simple,110,https://su2code.github.io,https://github.com/su2code/SU2/pull/1954#issuecomment-1545475126,1,['simpl'],['simple']
Usability,"@petebachant: the paper that I linked earlier on this thread had some fairly simple examples similar to the one you propose.. different flat plates and so on with varying y^+. You can likely reuse the grid(s) in the TestCases repo. @vdweide: it was very simple in this first implementation. It checks for a single boolean for whether or not to apply wall functions (WALL_FUNCTIONS= YES or NO, https://github.com/su2code/SU2/blob/43b8a4015c4b09b01d78e4243d32011c663c2b70/SU2_CFD/src/solver_direct_mean.cpp#L15339), and then assumes they should be applied to all no-slip walls (heat flux or isothermal, https://github.com/su2code/SU2/blob/43b8a4015c4b09b01d78e4243d32011c663c2b70/SU2_CFD/src/solver_direct_mean.cpp#L16653). This could of course be made more specific for individual markers using a config structure like MARKER_MONITORING to list them, or by making a dedicated BC type for it potentially.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-327308587:77,simpl,simple,77,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-327308587,2,['simpl'],['simple']
Usability,"@rsanfer I am attaching [some results](https://github.com/su2code/SU2/files/2612501/FFD_verification.pdf) for FFD derivatives for FSI cases (that made use of this fix) to rekindle the discussion. I am taking this directly from my early stage so apologies if not all details are clear, the conclusion is that the fix does not break the adjoint.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/597#issuecomment-441388433:278,clear,clear,278,https://su2code.github.io,https://github.com/su2code/SU2/pull/597#issuecomment-441388433,1,['clear'],['clear']
Usability,"@rsanfer I'm using a test case from Ref [1], which doesn't exactly match the test case matching the figure I gave from Ref [2]. In Ref [1], they ran a whole ensemble of tests at various resolutions, corrections, and inflow/initial conditions. Some of the tests involved laminar separation, while others involved turbulent separation. I did not pick one of the Re = 50,000 cases because those cases involve laminar separation. Travin *et. al.* used a special nonuniform initial condition to promote laminar separation, which I viewed as overly complicated for the purposes of these tests. Instead, I picked a turbulent separation case at Re = 1.4 x 10^5 (roughly matching TS1 from Ref [1]). If you want more details/grids/cfg files, I can certainly provide them. Yes, I used the unsteady compressible solver. But I'm unsure if the circular cylinder case provides a good test case for the unsteady incompressible solver. I did very little with this test case in terms of a proper validation. The references I listed went to great lengths to ensure that the numerical results were consistent with experiments. It seems like a challenging test case. There were a lot of improvements I should have made if I were also trying to get consistent results. For example, my spanwise length was too short, and I didn't look into the impact of the rotation correction for the SA model. I skipped these improvements in the interest of time, since I wasn't aiming for validation, but rather a simple acceptance test.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/552#issuecomment-403850762:1478,simpl,simple,1478,https://su2code.github.io,https://github.com/su2code/SU2/pull/552#issuecomment-403850762,1,['simpl'],['simple']
Usability,"@rsanfer and me had a discussion on it. We both came to the agreement that it might the best if we just remove the generated files from the repo in general. Since buildtools are already required to have 'make' it shouldn't be much of a burden to also require autotools/automake to be installed. Furthermore, we eventually could provide a simple way of installing/compiling it within the preconfigure.py script if necessary.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/586#issuecomment-423942141:338,simpl,simple,338,https://su2code.github.io,https://github.com/su2code/SU2/pull/586#issuecomment-423942141,1,['simpl'],['simple']
Usability,"@talbring I agree with your assessment of Boost. I think it's a heavyweight solution to a lightweight use-case. We could always include just the unit-testing header (they offer a header-only version), but ""people may want to use more and more features of boost,"" as you point out. If we as developers want to add Boost as a formal dependency for SU2, then that seems like a fine route. But I have the feeling that many developers do not want to add a Boost dependency. Honestly, Boost UTF doesn't offer anything that we can't get from Google Test. Catch2 is definitely the simplest and easiest of the unit-testing frameworks I listed. The only sticking point is that it requires c++03, and that the full-feature version requires C++11.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-500393344:573,simpl,simplest,573,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-500393344,1,['simpl'],['simplest']
Usability,"@talbring Thanks for getting this sorted, Tim! I also think it's the best way to maintain a clear difference between regressions and Tutorials. I do have a suggestion though. Although I think it's very nice to have the written tutorials directly in git, so people can contribute directly, I wonder if it's the best idea to have them in the main repo. As the number of tutorials grows, we will have the same problems as for the meshes, with too many files to check out (images, md files, etc). Given that there is a new ""Tutorials"" repository, would it be a good idea to incorporate them there? I think it makes sense in terms of clarity, and we could make use of github pages, which allows to create a website per repository. That way we could have a site for the tutorials - and eventually this could be incorporated seamlessly into the SU2 website. What do you think?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/485#issuecomment-355262713:92,clear,clear,92,https://su2code.github.io,https://github.com/su2code/SU2/pull/485#issuecomment-355262713,1,['clear'],['clear']
Usability,"@talbring Thanks for the quick and helpful answer! I'm looking at creating an ebuild/package for gentoo, compilation is a lot simpler than OpenFoam :P which is a big plus :). Anyway, I was looking at the old docs (the main docs still point to 6.0, I missed the red text that mentioned that somehow :P), not sure why, but you're right it's indeed mentioned in the 7.0 docs here https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/#configuration-and-compilation. The ""Automatically installed dependencies"" section left me a bit confused because it sounded like the things listed there, which includes meson and ninja, would always get installed.; Maybe merging that section into the configuration and compilation section might help to make it more clear?. If you don't mind I have some additional questions:; - I didn't initialize the git submodule at all and configuration, compilation and running worked fine. Does this mean the CoDiPack and MeDiPack dependencies are optional? Or does this mean I could have a crash at runtime somewhere?; - Would it be possible to add a source package to the GitHub releases (in addition to the binary ones) that includes the (CoDiPack and MeDiPack) submodules? Unfortunately the GitHub provided source downloads don't include submodules.; - Are MKL and OpenBLAS build-time and exclusive options or can they both be compiled in and chosen at runtime?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/911#issuecomment-598751341:126,simpl,simpler,126,https://su2code.github.io,https://github.com/su2code/SU2/issues/911#issuecomment-598751341,2,"['clear', 'simpl']","['clear', 'simpler']"
Usability,"@talbring Thanks! Works like a charm now! Thanks for implementing this, I think this building method is a lot simpler than the previous one.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/745#issuecomment-521545657:110,simpl,simpler,110,https://su2code.github.io,https://github.com/su2code/SU2/pull/745#issuecomment-521545657,1,['simpl'],['simpler']
Usability,"@talbring that is definitely the long term goal, this was only the first step to make the templating simpler.; Thanks @rsanfer.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/650#issuecomment-475180235:101,simpl,simpler,101,https://su2code.github.io,https://github.com/su2code/SU2/pull/650#issuecomment-475180235,1,['simpl'],['simpler']
Usability,"@talbring: thanks for adding the regressions. One iteration is perfect just to check they're running, if they have the originals still being tested in the TestCases. I think the idea of having the written tutorials/documentation for the test cases in the main repository is a very good one, for several reasons. In particular, it will make it easier for people to add documentation, and we could eventually even test for its existence in Travis or make it a strict requirement for PRs in the future. My only concern at the moment is making sure that they look ""nice"" when viewed and that the links are easy to update/follow. We should probably add a title at the top of each tutorial markdown file now (above the first image), since the titles from the wiki page are missing. The image files should be moved from the website repo (su2code.github.io/github_wiki/) to these Tutorials folders. Another idea is to put a top-level ""Tutorials"" markdown file that will be linked from the wiki at the root Tutorials/ directory so that one only has to update the links to new tutorials in that file in the main repo, rather than always updating both the main repo and manually updating the wiki too. Any other ideas for making this seamless and user-friendly are most welcome! Let me know if you need any help.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/485#issuecomment-355216605:1236,user-friendly,user-friendly,1236,https://su2code.github.io,https://github.com/su2code/SU2/pull/485#issuecomment-355216605,1,['user-friendly'],['user-friendly']
Usability,"@timjim333, I checked your grid with just connectivity info and I get the following error messages. Boundary marker BODY, surface element 77477: No corresponding volume element found.; Coordinates of the points; 0.1815790.04981870.0020471; 0.181850.04994770.00205104; 0.1816670.04971090.00204381. Boundary marker BODY, surface element 133348: No corresponding volume element found.; Coordinates of the points; 0.1814850.04947420.00203657; 0.1813090.04968980.00204316; 0.181230.04944470.00204356. Boundary marker BODY, surface element 134774: No corresponding volume element found.; Coordinates of the points; 0.181230.04944470.00204356; 0.1813020.04923740.00202934; 0.1814850.04947420.00203657. Boundary marker BODY, surface element 135217: No corresponding volume element found.; Coordinates of the points; 0.1816670.04971090.00204381; 0.181850.04994770.00205104; 0.1815790.04981870.0020471. So clearly the grid is invalid.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/683#issuecomment-494393404:896,clear,clearly,896,https://su2code.github.io,https://github.com/su2code/SU2/issues/683#issuecomment-494393404,1,['clear'],['clearly']
Usability,"@timjim333,. Yah, those are the general guidelines you mentioned but they do not always work in practical cases.; We will probably know more details when people will share their experiences and issues faced. I have tried meshes with max include angle 175 or below, they go well. Even upto 179 also go through.; But I had trouble recently while just giving a trial for 179.8 or more case.; One thing to note is, SU2 constructs dual mesh from the primal mesh we supply but anyway properties of the primal mesh will carry forward. Regards; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/683#issuecomment-494932014:40,guid,guidelines,40,https://su2code.github.io,https://github.com/su2code/SU2/issues/683#issuecomment-494932014,1,['guid'],['guidelines']
Usability,@timjim333. The guidelines you mentioned are perfect but geometry complexity/time constraints at times push it beyond those numbers. Infact most of the Solvers (especially commercial) are robust enough to take (as I mentioned) the mesh crossing these specific guidelines. I think SU2 also handles it reasonably well. Latest version of Pointwise has direct export to SU2 (I think 17.3 onwards or so). Did you try CGNS format? . Best; Amit,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/683#issuecomment-495921430:16,guid,guidelines,16,https://su2code.github.io,https://github.com/su2code/SU2/issues/683#issuecomment-495921430,2,['guid'],['guidelines']
Usability,"@tollennaert, can you comment on the points raised by @pcarruscag ? I think you tried to address all points in your latest update? That makes it clear to everybody that all points have been addressed. I hope you still have time for this.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1076#issuecomment-733607872:145,clear,clear,145,https://su2code.github.io,https://github.com/su2code/SU2/pull/1076#issuecomment-733607872,1,['clear'],['clear']
Usability,"A new feature of monitoring pressure (or any parameter) values on some specified arbitrary points given by users in case of unsteady simulation. This feature is required for our requirement. I'd implemented this feature for a older one and using a 3rd party library called ANN (Approximate Nearest Neighbor). I wanna know whether implementation using such library can be merged with master version? AFAIK it's not practiced. As Harichand, my colleague said a data structure is already available for tree search which can be implemented. Please tell me how this can be implemented so it clears the eligibility of merge. ; Thanks; Soumen",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/466:586,clear,clears,586,https://su2code.github.io,https://github.com/su2code/SU2/issues/466,1,['clear'],['clears']
Usability,"A short summary of the things I did in the additional commits:. - I added a consistent error handling that can be used throughout the code. For example if a marker is not specified the error looks like that: ; ```; -------------------------------- Error ---------------------------------; In ""short unsigned int CConfig::GetMarker_CfgFile_TagBound(std::__cxx11::string)"": ; ------------------------------------------------------------------------; The configuration file doesn't have any definition for marker airfoil; ------------------------------------------------------------------------; Exiting now ...; ```; or if a solution cannot be found:. ```; -------------------------------- Error ---------------------------------; In ""void CSolver::Read_SU2_Restart_Metadata(CGeometry*, CConfig*, bool, std::__cxx11::string)"": ; ------------------------------------------------------------------------; Unable to open SU2 restart file solution_flow.dat; ------------------------------------------------------------------------; Exiting now ...; ```; In case you want to throw an error, you can simply call the function `SU2_MPI::Error(""Error Message"", CURRENT_FUNCTION)` where `CURRENT_FUNCTION` is a predefined macro which expands to the name of the routine at compile time. I already replaced almost all error messages in the code. - More MPI functions are included in the MPI Wrapper. - The rank/size is now stored in most of the bigger classes and initialized in the constructor. That means there are no calls to MPI_Comm_rank / MPI_Comm_size anymore in every routine ... For convenience there is also a SU2_MPI::GetRank() / SU2_MPI::GetSize(), in case you need it outside of the main classes. Let me know what you think. Not everything I did has to stay the way I implemented it :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/473#issuecomment-347663941:1092,simpl,simply,1092,https://su2code.github.io,https://github.com/su2code/SU2/pull/473#issuecomment-347663941,1,['simpl'],['simply']
Usability,"A simple workaround would be to add an if line before the split:; Line 84 of parse_config.py; if np.size(s2) > 1:; thisval = s2.split('""')[1]; Yes, it requires also ; import numpy as np; at the beginning of the script.; Now it runs with no error message but no output produced.; Also config_gui.py is running, but it opens an empty window,; so apparently this is not good enough. best,; Eran",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/216#issuecomment-241208818:2,simpl,simple,2,https://su2code.github.io,https://github.com/su2code/SU2/issues/216#issuecomment-241208818,1,['simpl'],['simple']
Usability,Actually I had a look at your branch and the way it is right now is not correct I believe because I had taken the other variables v and 1/y out of the derivative using the chain rule and combined them with the other derivatives to end up with the terms as they are now so only d(mu)/dy was missing. The AxiAuxVarGrad you are using is apparently d(v*mu/y)/dy so the other terms have to be different. I will change them. Why not just simply compute the viscosity gradient? Is there any reason not to pull the other variables out?. Is there not already an AuxVar being just v*mu or something? . Anyway I guess it will work the same either way,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1095#issuecomment-727969107:432,simpl,simply,432,https://su2code.github.io,https://github.com/su2code/SU2/pull/1095#issuecomment-727969107,1,['simpl'],['simply']
Usability,"Adaption of the interpolation method NearestNeighbor to turbomachinery applications when rotating frame is used. ## Proposed Changes; *If the flow is solved in a rotating frame, the grid is not actutally rotating. But the interpolation for a sliding interface should be done with an actually rotated boundary. The proposed changes add the function of rotating grid points on the boundary of a zone solved in rotating frame before the interpolation is executed. Currently, this is only implemented in CNearestneighbor class, other interpolation method should be changed as well in the near future.*. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ yes ] I am submitting my contribution to the develop branch.; - [ yes ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ yes ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2173:788,guid,guide,788,https://su2code.github.io,https://github.com/su2code/SU2/pull/2173,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,Add simple custom outputs (functions of other outputs) to all solvers,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2020:4,simpl,simple,4,https://su2code.github.io,https://github.com/su2code/SU2/pull/2020,1,['simpl'],['simple']
Usability,"Added Docker file, move the simple conf file into a different folder and...",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/169:28,simpl,simple,28,https://su2code.github.io,https://github.com/su2code/SU2/pull/169,1,['simpl'],['simple']
Usability,"Addresses issue #296 . The problem was that the non-dimensional time step was not computed and therefore zero. We can simply use the dimensional one, as the non-dimensionalization factor cancels out anyway.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/360:118,simpl,simply,118,https://su2code.github.io,https://github.com/su2code/SU2/pull/360,1,['simpl'],['simply']
Usability,"Adds a general body force source term implementation to the Finite Volume flow solver, which is particularly useful for pressure-driven / gravity / channel problems, for instance. . Also includes a simple 2D Poiseuille flow case with an analytic solution for testing the body force and periodic implementations.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/380:198,simpl,simple,198,https://su2code.github.io,https://github.com/su2code/SU2/pull/380,1,['simpl'],['simple']
Usability,"After updating solution and before communications, the normal component is subtracted from the velocity of the sym wall. ## Related Work; https://github.com/su2code/SU2/pull/1168, https://github.com/su2code/SU2/pull/657, https://github.com/su2code/SU2/issues/1625, https://github.com/su2code/SU2/issues/1125,https://github.com/su2code/SU2/discussions/2169. The symmetry BC in SU2 is waiting for further implementation, for scalar vars and vectors. ; But first of all, we should ensure that the wall normal velocity is zero for the sym BC. ; When we run an unsteady simulation with sym BC such as the following A-airfoil cases, the spanwise velocity on the spanwise sym BC has a distribution that we donot want to see. (Free stream velocity is 0.15 and the spanwise velocity can exceed 0.01 (the ±0.001 in the figure is to show more clearly) where it should be zero.); And this PR is to ensure the zero normal velocity.; ![1](https://github.com/su2code/SU2/assets/58663453/ca4f99e8-909e-4468-95bc-4a594ba31ed0); ![2](https://github.com/su2code/SU2/assets/58663453/c35c7f1b-eca3-4da5-9828-0ef786f829eb). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2174:832,clear,clearly,832,https://su2code.github.io,https://github.com/su2code/SU2/pull/2174,3,"['Guid', 'clear', 'guid']","['Guide', 'clearly', 'guide']"
Usability,"After work around the Matrix 220 bug, . there is a problem with mpi. It is simply not found. Still using Intel 2019.5 with intel mpi 2019.5. ```; make[1]: Entering directory `/cluster/software/su2/SU2/SU2_CFD/obj'; CXXLD ../bin/SU2_CFD; ../src/___bin_SU2_CFD-SU2_CFD.o: In function `main':; SU2_CFD.cpp:(.text+0xa49): undefined reference to `MPI_Init_thread'; SU2_CFD.cpp:(.text+0xa5f): undefined reference to `MPI_Comm_rank'; SU2_CFD.cpp:(.text+0xa6e): undefined reference to `MPI_Comm_size'; SU2_CFD.cpp:(.text+0xab6): undefined reference to `MPI_Win_create'. ```; ```; SZLFEPartitionedZoneWriterMPI.cpp:(.text+0x583a): undefined reference to `MPI_Gather'; ../../externals/tecio/teciompisrc/libteciompi.a(libteciompi_a-SZLOrderedPartitionedZoneWriterMPI.o): In function `tecplot::teciompi::SZLOrderedPartitionedZoneWriterMPI::SZLOrderedPartitionedZoneWriterMPI(tecplot::___3933::ItemSetIterator&, int, int, std::vector<char, std::allocator<char> > const&, char, tecplot::___3933::___37&, tecplot::___3933::ZoneInfoCache&, int, int)':; SZLOrderedPartitionedZoneWriterMPI.cpp:(.text+0x22f): undefined reference to `MPI_Comm_rank'; ../../externals/tecio/teciompisrc/libteciompi.a(libteciompi_a-SZLOrderedPartitionedZoneWriterMPI.o): In function `tecplot::teciompi::SZLOrderedPartitionedZoneWriterMPI::writeZoneData(tecplot::___3933::FileWriterInterface&)':; SZLOrderedPartitionedZoneWriterMPI.cpp:(.text+0xa732): undefined reference to `MPI_Gather'; make[1]: *** [../bin/SU2_CFD] Error 1; make[1]: Leaving directory `/cluster/software/su2/SU2/SU2_CFD/obj'; ```; ```; ```",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1089:75,simpl,simply,75,https://su2code.github.io,https://github.com/su2code/SU2/issues/1089,1,['simpl'],['simply']
Usability,"Agreed that the style needs some attention. I am open to ideas about this. You may have noticed that I integrated Codacy recently to test it out: https://www.codacy.com. We have the style guide, but honestly, it's not getting much attention. We should automate checks or have scripts that automatically enforce style constraints. Vera++ sounds interesting in this regard. A little while back, @rsanfer and I had been working on indentation issues with the uncrustify tool. Should we open this as an issue and get some input? Find volunteers to look into these things?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/426#issuecomment-323636235:188,guid,guide,188,https://su2code.github.io,https://github.com/su2code/SU2/pull/426#issuecomment-323636235,1,['guid'],['guide']
Usability,"Agreed. We removed some remaining long arrays with maps (e.g., local to global mappings) in v5, so we should be consistently using unsigned long in reference to grid node index values. In the future, we will likely have an ""su2int"" data type too that we can simply typedef. Closing.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/3#issuecomment-307590742:258,simpl,simply,258,https://su2code.github.io,https://github.com/su2code/SU2/issues/3#issuecomment-307590742,1,['simpl'],['simply']
Usability,"Ah! Cool, sure open a new PR @maxaehle.; What adjoint stuff? file names and so on?; I think removing irrelevant options would be make the tests clearer, there are lots with Roe and JST options specified and vice versa which probably confuses new users.; I'm not so sure about removing all defaults thought... On one hand it would serve as regression for the default values set by CConfig, on the other it hides the tuning parameters of some methods... but then again those are more or less documented now.; :shrug:",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1236#issuecomment-804035589:144,clear,clearer,144,https://su2code.github.io,https://github.com/su2code/SU2/pull/1236#issuecomment-804035589,1,['clear'],['clearer']
Usability,"Ah, I wasn't aware of the corrected version. Thanks for pointing out my mistake. The corrected version does make more sense, and the main changes seem to be:. + Changing the location of the sqrt in the definition of `Lturb`; + Changing `ch3` from 0.5 to 2.0; + Clarifying that S and Omega should have a factor of sqrt(2). As for code verification, I would propose using one of the cases examined by Travin, Stretlets, Mockett, or Xiao for comparison. We know that they got a nice range of values for the blending constant on their tests with DDES. The cases I can see where they explicitly show the results of the blending function are:. + Circular cylinder at Re = 50,000 (Travin _et al._ 2002); + Tandem cylinders at Re = 166,000 (Xiao _et al._ 2012); + NACA0021 airfoil in deep stall (Mockett 2009). The tricky thing is that the value of the blending constant is determined by the flow solution, which is determined by the solver. So the values we obtain will be dependent both on the version of DDES used and the nature of the code. We can't expect to match any of these papers exactly. We could also use a simpler flow, such as fully developed channel flow or a flat plate boundary layer. The tradeoff would be simplicity for ease of comparison.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/532#issuecomment-388189377:1111,simpl,simpler,1111,https://su2code.github.io,https://github.com/su2code/SU2/pull/532#issuecomment-388189377,2,['simpl'],"['simpler', 'simplicity']"
Usability,"Ah, that tutorial page is very important.. I don't think it was ever linked in the main wiki menu, but it is critical for making the options clear to the user (especially the surface handling). We need to make the design features as easy to use as possible - it is already hard enough for experts to use adjoints :). This is a good opportunity to move it over to the new repo where we are placing the tutorials here: https://su2code.github.io/Tutorials/docs/home/. The files, including the markdown, mesh, config, and images, can be moved to that repo. The markdown portion goes into the _docs directory, and we should make sure it's linked under the shape design tutorials. Do you have some time for this? Let me know if you need some help.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/494#issuecomment-357458143:141,clear,clear,141,https://su2code.github.io,https://github.com/su2code/SU2/pull/494#issuecomment-357458143,1,['clear'],['clear']
Usability,"Alex, Heather,. Thanks for commenting and straightening this out. Since this is a frequently asked question, I have added a new section in the documentation on how to use the test cases, which will hopefully clear things up more in the future: https://github.com/su2code/SU2/wiki/Test-Cases. Tom",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/222#issuecomment-171108493:208,clear,clear,208,https://su2code.github.io,https://github.com/su2code/SU2/issues/222#issuecomment-171108493,1,['clear'],['clear']
Usability,"All above,. Can any one share the experience of the mesh quality matrix acceptable by SU2. In Pointwise, one can follow maximum included angle, centroid skewness or equiangle skew as guiding parameters. I have observed that some of the commercial Solvers can accepts and run a very high max included angle (179.99 or so) also without trouble but some others have issues with the same. . Many times due to complex geometry, one ends up with these high numbers. . Any guidelines for SU2 on mesh quality is appreciated. Regards ; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/683#issuecomment-494217280:183,guid,guiding,183,https://su2code.github.io,https://github.com/su2code/SU2/issues/683#issuecomment-494217280,2,['guid'],"['guidelines', 'guiding']"
Usability,"All,. For whatever it is worth, here are some thoughts. It is clear that we need to strike the right level and hierarchy of abstraction: at the highest level one really ought to be describing the physical problem, not the number of zones or the specific time-stepping algorithm that would be used. But preventing future multi-zone calculations from reaching the (time) order of accuracy desired is also an important issue that SU2 must support (and that I think would be very important for those doing unsteady turbomachinery calculations). Just as important: even for multi-physics problems (say fluid-structure interaction, when the fluid and structural solvers are not closely integrated into the same source) we need to ensure that the time accuracy of the full multi-physics calculation is as high as those of the component physics solvers. This is a very valid and useful discussion and some proposals are on the table. Given that we are planning a developer’s meeting sometime before the end of the year, this may actually be one of the items in the agenda for discussion, so some decisions can be reached that both make sense and minimize the pain of changes for any part of the existing code. I would suggest that the conversation continue and that other proposals are put forward so the discussion can be finalized at the developer’s meeting. Best,. Juan. On Sep 10, 2017, at 1:09 PM, Edwin van der Weide <notifications@github.com<mailto:notifications@github.com>> wrote:. Dear @rsanfer<https://github.com/rsanfer>,. I agree with you that the outer loop should be the loop over the number of physical disciplines involved in the problem and not the zones. Whether the individual disciplines contain one or multiple zones is irrelevant at this level, in my opinion. The loop over the multiple zones of a single discipline should take place at a much lower level, namely where the spatial residual is computed. At least, this should be the case for the fluid dynamics part. I don't know whethe",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437#issuecomment-328403160:62,clear,clear,62,https://su2code.github.io,https://github.com/su2code/SU2/issues/437#issuecomment-328403160,1,['clear'],['clear']
Usability,"All,. I looked a bit more through Eigen and, indeed, the performance is pretty impressive and generally better than MKL and Atlas (the self-tuned implementation of LAPACK) ant most/all matrix sizes. I agree with comments made by @pcarruscg that having a standard for matrix operations throughout the source would clean up /simplify the code considerably and, since it does not seem to impact the AD approach, it should be pursued. It sounds like a quick test branch like @vdweide is suggesting makes sense. A quick driver code to test the performance of the Eigen routines vs MKL makes sense too. The only thing that @vdweide should comment on is how much work it would be to change the LAPACK/BLAS based implementation in the DG-FEM solver to the interface that Eigen exposes. Best,. Juan. On Feb 1, 2019, at 4:19 AM, Edwin van der Weide <notifications@github.com<mailto:notifications@github.com>> wrote:. Would it be an idea to create a branch to test things out and make a decision based on the results? It would be interesting to see the performance for e.g. the dense matrix multiplications in the DG-solver compared to Intel's MKL. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/643#issuecomment-459705131>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxM1gm0iy_FeGBMFzxVQnYFFzEHt4ks5vJDDlgaJpZM4adbAo>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-459845576:323,simpl,simplify,323,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-459845576,1,['simpl'],['simplify']
Usability,"All,. Of course, another approach to verifying which sign is correct is to do an analytic differentiation (using CoDi?) or simply using complex-step on the residual calculation routine to get exact Jacobians (for a particular state) and confirm the correct sign. This does require some code extraction / refactoring to perform the test, but it has the benefit that you would know exactly what the correct answer is for the specific residual implementation. Best,. Juan. On Nov 16, 2018, at 11:03 AM, Thomas D. Economon <notifications@github.com<mailto:notifications@github.com>> wrote:. As Jacobians affect convergence rate and not accuracy, you could do a quick test of the same problem with the current version and the sign flipped to see if there is measurable difference in the convergence rate. If yes, then it should give you a hint about which direction. If no, then we should still correct it, but prob don't need to put in too much effort. @clarkpede<https://github.com/clarkpede> : I'm interested in your unit testing set up... —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/609#issuecomment-439493827>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxInSS3cmLF8iFkD22AoYAp0G3G2yks5uvwvxgaJpZM4YeD9V>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/609#issuecomment-439500791:123,simpl,simply,123,https://su2code.github.io,https://github.com/su2code/SU2/issues/609#issuecomment-439500791,1,['simpl'],['simply']
Usability,"All,. The following page has performance comparisons between eigen and mkl (and others):. http://eigen.tuxfamily.org/index.php?title=Benchmark. They are dated 2011, so they are a bit old, but if the quoted performance is real, I would say it is a no-brainer to switch to eigen. If the performance tests (for at least simple things like daxpy and gemm) could be repeated to verify the numbers, that would help us make a final decision. Best,. Juan. On Feb 2, 2019, at 1:58 AM, Edwin van der Weide <notifications@github.com<mailto:notifications@github.com>> wrote:. @pcarruscag<https://github.com/pcarruscag>, I agree with you it will be hard to beat the MKL (running at 60 percent peak for most of the gemm calls for the DG-solver), but if you don't have any performance loss, that would already be nice, as it improves readability. Furthermore, the performance of the DG solver in combination with the discrete adjoint is horrible, because it relies on my very naive implementation of the matrix products. So it would already be something if we can get an improvement there, although we do not use the DG adjoint solver (yet). For me the easiest way to test things out for the DG-solver would actually be in SU2 itself. @economon<https://github.com/economon> put some nice profiling routines in there for the gemm calls, which can be used without any additional work to test eigen. @pcarruscag<https://github.com/pcarruscag> (or somebody else), could you create a branch in which eigen is downloaded in the external directory? I think I can manage from there. Thanks,. Edwin. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/643#issuecomment-459952137>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxCgydwy1nS3qPJvyCMJXLXWNMSFsks5vJWEkgaJpZM4adbAo>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-459986613:317,simpl,simple,317,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-459986613,1,['simpl'],['simple']
Usability,"Along with the restructuring of the output internals (see branch feature_output), I am introducing a more structured and unified way of outputting tables on screen. This enables for example a more structured output of the preprocessing information that is printed on screen at the beginning. . For the table output I use a very simple and easy to use class. For example the table . ```; +-------------------------------------------+; | MG Level| Presmooth|PostSmooth|CorrectSmo|; +-------------------------------------------+; | 0| 1| 0| 0|; | 1| 1| 0| 0|; | 2| 1| 0| 0|; | 3| 1| 0| 0|; +-------------------------------------------+; ```; is generated using the code ; ```; TablePrinter MGTable(&std::cout);; ; MGTable.AddColumn(""MG Level"", 10);; MGTable.AddColumn(""Presmooth"", 10);; MGTable.AddColumn(""PostSmooth"", 10);; MGTable.AddColumn(""CorrectSmooth"", 10);; MGTable.set_flush_right();; MGTable.PrintHeader();; for (unsigned short iLevel = 0; iLevel < nMGLevels+1; iLevel++) {; MGTable << iLevel << MG_PreSmooth[iLevel] << MG_PostSmooth[iLevel] << MG_CorrecSmooth[iLevel];; }; MGTable.PrintFooter();. ```; An example of the current preprocessing output in the feature_output branch can be found below. Especially the information for the free-stream and non-dimensionalization is more readible this way. Furthermore the convergence history uses the same table class. Let me know what you think. Any comments are appreciated. ```; ------------------------ Physical Case Definition -----------------------; Compressible RANS equations.; Turbulence model: Spalart Allmaras; Hybrid RANS/LES: No Hybrid RANS/LES; Mach number: 0.15.; Angle of attack (AoA): 10 deg, and angle of sideslip (AoS): 0 deg.; Reynolds number: 6e+06. Reference length 1.; No restart solution, use the values at infinity (freestream).; Non-Dimensional simulation (P=1.0, Rho=1.0, T=1.0 at the farfield).; The reference area is 1 m^2.; The semi-span will be computed using the max y(3D) value.; The reference length is 1 m.; Refere",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/591:328,simpl,simple,328,https://su2code.github.io,https://github.com/su2code/SU2/issues/591,1,['simpl'],['simple']
Usability,"Alright. I did some digging, and the problem has nothing to do with the warning message. It goes much deeper. In a recent release, SU2 switched to reading and writing binary restart files instead of ASCII. The grid adaptation code is still written only for ASCII. If I'm right, then trying to read a binary restart file with the flow solution breaks the program. I'll submit an issue detailing the bug. For now, try adding the following lines to your cfg file when you run `SU2_CFD`:. %; % Write binary restart files (YES, NO); WRT_BINARY_RESTART= NO; %; % Read binary restart files (YES, NO); READ_BINARY_RESTART= NO. Then run `SU2_MSH`, just like you have been. Does that clear things up?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-436131167:674,clear,clear,674,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-436131167,1,['clear'],['clear']
Usability,"Alright. I've copied over my changes, with a few improvements. They're on the branch `feature_fileprofile`. One important change is that the user no longer needs to specify the node numbers. For each inlet node on the mesh, the code looks for the closest point from the inlet file. If that closest point is within a specified distance, it deems it a match. If not, it returns an error. Some points:. + The code will generate an example inlet file if the inlet file is missing / is invalid.; + I have not added interpolation. Since python makes interpolation easy, I didn't view this as a high priority.; + I have not added support for multigrid. I'm unsure of how to do this, since I'm not familiar with the multigrid code. It's not as simple as copying what's done for the restarts in the volume mesh. That's a volume based agglomeration, whereas the boundaries are faces. Feel free to modify my implementation however you want.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/467#issuecomment-368990059:736,simpl,simple,736,https://su2code.github.io,https://github.com/su2code/SU2/issues/467#issuecomment-368990059,1,['simpl'],['simple']
Usability,Also nice would be a clear separation between the blocks. Atm at ending u get Exit .....; Somethin like that:; ![unbenannt](https://cloud.githubusercontent.com/assets/11041576/15497673/13a67f62-219c-11e6-9c89-7dcc1236a706.PNG),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/257#issuecomment-221203675:21,clear,clear,21,https://su2code.github.io,https://github.com/su2code/SU2/issues/257#issuecomment-221203675,1,['clear'],['clear']
Usability,"Also works for me now! Thanks for fixing this. ~~Travis failed due to reaching the maximum time for a job. The usual time the serial test take in other PRs is like 45 min, but this one was killed after 1h 9 min. Is there something that could go wrong in the non-mpi case ?~~. ~~I just restarted the tests to see whether it occurs again.~~ . Now it has passed. If it happens again, simply restart the job in Travis ...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/328#issuecomment-264239270:381,simpl,simply,381,https://su2code.github.io,https://github.com/su2code/SU2/pull/328#issuecomment-264239270,1,['simpl'],['simply']
Usability,"Also, this might be more of a question I guess, why does this `meson.py` script exist/why isn't the normal way of using meson (simply running `meson <builddir>`) used?. [edit] Just noticed `meson build` also works and uses the system installed `ninja` as expected. Still not really sure what the script is for.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/911#issuecomment-598376736:127,simpl,simply,127,https://su2code.github.io,https://github.com/su2code/SU2/issues/911#issuecomment-598376736,1,['simpl'],['simply']
Usability,"And here is a simple test case demonstrating potential use. A major benefit of the supersonic inlet is being able to model supersonic propulsion systems, such as a scramjet, where the propulsion system exit boundary is modeled as a supersonic inlet, with distinct properties from the farfield flow conditions. Here we have a two dimensional test case demonstrating the interaction of exhaust flow with free-stream flow at the exit plane of a 2D scramjet system. Flow conditions adapted from [A Design Method for Three-Dimensional Scramjet Nozzles with Shape Transition](https://arc-aiaa-org.stanford.idm.oclc.org/doi/abs/10.2514/1.B38293); Jens Kunze, Michael K. Smart, and Rowan Gollan; Journal of Propulsion and Power 2022 38:1, 3-17. <img width=""1262"" alt=""image"" src=""https://user-images.githubusercontent.com/44848904/211415971-b6122204-0d95-43ca-903b-d60fd6326c39.png"">",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1862#issuecomment-1375043856:14,simpl,simple,14,https://su2code.github.io,https://github.com/su2code/SU2/pull/1862#issuecomment-1375043856,1,['simpl'],['simple']
Usability,"Any other comments here? Otherwise, this is a simple addition that we can put in right away, and folks can hack away on Doxygen whenever their heart desires.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/373#issuecomment-279838683:46,simpl,simple,46,https://su2code.github.io,https://github.com/su2code/SU2/pull/373#issuecomment-279838683,1,['simpl'],['simple']
Usability,"As @gbaty said, it's usually easy to support both. Many times it can be done with a simple. ``` python; from __future__ import division, print_function; ```. at the top of each file, and tweaking the `print` and `import` statements. In my experience, the Anaconda (or miniconda) Python distribution makes it very easy to setup just about any version of Python you like on a cluster, since it's installed in the user's home directory by default. . Most scientific packages (NumPy, SciPy, Matplotlib, Pandas) already support both 2.7 and 3.x within a single codebase. Python 3 is the future!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/246#issuecomment-195767843:84,simpl,simple,84,https://su2code.github.io,https://github.com/su2code/SU2/issues/246#issuecomment-195767843,1,['simpl'],['simple']
Usability,"As described in Issue #431, using `SU2_MSH` for periodic mesh construction can be buggy due to its sorting of nodes. Under certain conditions, nodes can be duplicated and/or missing from the output *.su2 file. This pull request implements a more robust sorting process, where the sorting occurs in the following steps:. 1. Send/receive nodes are explicitly identified; 2. The sorted list is created without any send/receive nodes.; 3. The receive and then send nodes are added to the sorted list. Here's a few comments about the pull request:; + Since this routine is only run once, I felt the usability of std::vector outweighed the computational efficiency of raw arrays.; + I had to create two lists, NewSort and ReverseSort, instead of the original one list (NewSort). That's because two different mappings between node numbers need to occur. In the old code, where the list was sorted by switching elements, the two mappings _should_ have been identical. Since the improved method does not use switching, two lists are necessary.; + There's a lot of memory leaks/uninitialized values when checking this pull request with Valgrind. I checked them, and this pull request doesn't create any _new_ memory issues. Apparently both `SU2_CFD` and `SU2_MSH` have memory issues. #### Verification; Since none of the existing regression tests run `SU2_MSH`, I created a separate case to verify both the bug and the fix. It's a simple 3x3 cube that's periodic in the z-direction. I've attached the files below. Here's the steps:. 1. Run `SU2_MSH MSH.cfg`; 2. Run `SU2_CFD per_CFD_dev.cfg`. Using the existing develop branch, the verification case runs into a segfault when writing the output. This pull request allows the verification case to complete successfully. You can also check the original test case from Issue #431 to verify the bug fix. If any of you know of additional verification tests I could run, then please let me know. Test case: [cube.tar.gz](https://github.com/su2code/SU2/files/1639835/c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/500:594,usab,usability,594,https://su2code.github.io,https://github.com/su2code/SU2/pull/500,1,['usab'],['usability']
Usability,"As we mentioned in the dev meeting where you exposed the problem, the implementation is not good for strongly coupled flows, and I would guess that it is worse for diffusion than convection (because diffusion is elliptic).; I suspect the main problem is that the linear system does not contain information from the other side of the interface, meaning the solution of the two domains is effectively decoupled.; You could try running the case at much lower CFL (below 1) even with an explicit method.; It is also possible that the current treatment could be improved, since it is an example of multiplicative Schwartz decomposition, maybe there is an ""optimal"" way of implementing that from a physics point of view. Just speculating here, but maybe it would help treating the interface as an outlet if flow is going out, and as an inlet if flow is coming in.; On the numerics side, you can also try hacking the MZ driver to use something more stable than block-Gauss-Seidel (e.g. some quasi-Newton thing for the interface). But those are all band-aids IMO, if you want a robust fluid-fluid interface you need the coupling to be present in the linear system. The simplest way to do that is to have an internal boundary and treat the problem as single zone.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414#issuecomment-951848509:1161,simpl,simplest,1161,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414#issuecomment-951848509,1,['simpl'],['simplest']
Usability,"At some point the marker starts being partitioned, some of it is in one rank, some in other(s).; Your print function truncates the file when it opens it, and so you only get the output from the last rank that opened the file.; You could make the file a member of the class, so that you can guarantee it is only opened once (other ranks would need to open in append mode), but then you still have a race condition when multiple ranks try to write simultaneously to the file (the result might be mixed lines, especially when `endl` is used to terminate lines because it forces a flush, maybe with ""\n"" and some luck it would be ok, but the order of the lines is still unpredictable).; To my knowledge mpi does not have simple ways to guarantee ordered execution of certain code regions. So unless you want to get knee deep in mpi, I recommend you keep this file output as a debug feature (that works on a single core) and use the normal surface output files (paraview, tecplot, etc.) for visualization.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/944#issuecomment-616367257:717,simpl,simple,717,https://su2code.github.io,https://github.com/su2code/SU2/issues/944#issuecomment-616367257,1,['simpl'],['simple']
Usability,At the moment it is not possible to have an area/volume constraint for the shape optimization. SU2_GEO simply exits with an error because OBJECTIVE_FUNCTION=AREA/VOLUME is missing in the objective function definition. This pull request simply adds them. Maybe someone removed them accidentally. If it was intentionally then we should also remove the thickness entries and modify the python scripts accordingly.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/352:103,simpl,simply,103,https://su2code.github.io,https://github.com/su2code/SU2/pull/352,2,['simpl'],['simply']
Usability,Avoid using File_close followed by File_delete in case the file already exists.; Simply use File_open in overwrite mode. @oleburghardt @WallyMaier @TobiKattmann if you could test this on clusters you have access to it would be great :pleading_face: ; Try it both writing over existing files and creating new ones and running on multiple nodes please.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1342:81,Simpl,Simply,81,https://su2code.github.io,https://github.com/su2code/SU2/pull/1342,1,['Simpl'],['Simply']
Usability,"Based on paper - . ## Proposed Changes. - AUSM+ -up2 scheme has been implemented. - Likely to perform better for high speed flows (author claims - Robustness against shock anomalies as good as Van leer scheme (less carbuncle prone) while it resolves contact discontinuity/boundary layer sharply/accurately. Smooth representation of heating etc.). - Reference- ""Towards a shock-stable and accurate hypersonic heating computations: A new pressure flux for AUSM scheme, authors- Kitamura, Shima, JCP 245 2013"". ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X ] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/631:828,guid,guide,828,https://su2code.github.io,https://github.com/su2code/SU2/pull/631,1,['guid'],['guide']
Usability,"Both ‘**rapidjson**’ and ‘**CoolProp**’ are licensed under the shortest and simplest permissive **MIT** license. I am not an expert but whether indicating the text of the licenses and copyright marks at the beginning of each of my files is reasonable?. Honestly, I don’t like the idea to treat **rapidjson** as a git submodule because some **rapidjson** internals are Windows specific (e.g., _/include/rapidjson/msinttypes_ subfolder content) and I don’t really confident with Meson build setup procedure. . Actually, I generated the **all_cubics_extended_JSON_binary** variable in the following way.; **CoolProp** library contains dozens of json files from which I assembled the single file for my own needs. Then, I made some modifications to the _generate_headers.py_ file (under _/dev_ subfolder of the **CoolProp** root) and run it in order to translate my large json file into the C++ header file. The generated file is not as large (~1.3 MB) as it seems but verbose a little bit. Could you clarify what **tecplot** sources do you mean?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1402#issuecomment-942054879:76,simpl,simplest,76,https://su2code.github.io,https://github.com/su2code/SU2/pull/1402#issuecomment-942054879,1,['simpl'],['simplest']
Usability,"Bumping this thread... Files are now starting to be divided in several PRs, but we should set a clear policy for this. Seems that the consensus is to carry one class per file, move the inlines to the headers, and create subfolders where possible (i.e., have a more flat hierarchy in the src directory based on logical groups such as numerics, geometry, solvers, etc). We do not have a clear naming convention yet, but if it is one class per file, then an option is simply the class name. Am I capturing the current consensus correctly? Anything I am missing? Naming preferences?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/583#issuecomment-500945013:96,clear,clear,96,https://su2code.github.io,https://github.com/su2code/SU2/issues/583#issuecomment-500945013,3,"['clear', 'simpl']","['clear', 'simply']"
Usability,"By complex, I meant more complex than my simple toy problem. So if it's working for you, then that's what I was aiming for. I'll open a PR shortly.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/970#issuecomment-628681947:41,simpl,simple,41,https://su2code.github.io,https://github.com/su2code/SU2/issues/970#issuecomment-628681947,1,['simpl'],['simple']
Usability,"By the way, there's also this cool tool called vera++ that allows you to check the style of the entire codebase. This could be integrated with Travis so make sure PRs are consistent with the coding style guide.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/426#issuecomment-323580700:204,guid,guide,204,https://su2code.github.io,https://github.com/su2code/SU2/pull/426#issuecomment-323580700,1,['guid'],['guide']
Usability,C++ Core Guidelines,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1218:9,Guid,Guidelines,9,https://su2code.github.io,https://github.com/su2code/SU2/issues/1218,1,['Guid'],['Guidelines']
Usability,"CGNS file older than 4.0 release have a high ram memory usage. ## Proposed Changes. Add a small message to help users understand that SU2 is eating their RAM with old CGNS files.; ; ## Related Work. See: #1378 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1479:384,guid,guide,384,https://su2code.github.io,https://github.com/su2code/SU2/pull/1479,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"Can we please have different enum names than RHO and RHO_ENERGY? Those enum options are at the highest level of the code. In a random context, it's not clear that RHO is a residual. RHO_RESIDUAL and RHO_ENERGY_RESIDUAL would be better, and I personally feel that DENSITY_RESIDUAL would be better yet, though Francisco may disagree.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/87#issuecomment-58026023:152,clear,clear,152,https://su2code.github.io,https://github.com/su2code/SU2/pull/87#issuecomment-58026023,1,['clear'],['clear']
Usability,Cannot solve a simple 3D transient model,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2191:15,simpl,simple,15,https://su2code.github.io,https://github.com/su2code/SU2/issues/2191,1,['simpl'],['simple']
Usability,"Change HEATFLUX to TOTAL_HEATFLUX in output files so that optimization works correctly with OPT_OBJECTIVE= TOTAL_HEATFLUX; ; Additionally, a small change to updateHistoryMap.py has been made (a ""/"" in a path was missing), and historyMap.py has been modified by running updateHistoryMap.py. This fixes [#946](https://github.com/su2code/SU2/issues/946). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch. - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/947:524,guid,guide,524,https://su2code.github.io,https://github.com/su2code/SU2/pull/947,1,['guid'],['guide']
Usability,Change the wording in the error message if CGNS file doesn't exist in the current directory to make it more clear.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/62:108,clear,clear,108,https://su2code.github.io,https://github.com/su2code/SU2/issues/62,1,['clear'],['clear']
Usability,"Charanya,. thanks for the detailed answer. Let me ask you some more info. Apparently, you where able to reproduce the results I had comparing the two code versions simply using different boundary conditions on the latest code version. Can you specify me how?. Tobi,. In the meanwhile, to narrow down the problem, I ran also a couple tests in 2D to seek confirmation. For the (Euler) **pitching_NACA64A010.cfg** test case in the repository I rerun the same test at AoA of 1 deg and removing the pitching (no mesh deforming). I attach config files and summaries relative to the test cases. [config_CFD_6_2_0.txt](https://github.com/su2code/SU2/files/3938858/config_CFD_6_2_0.txt); [Summary_6_2_0.txt](https://github.com/su2code/SU2/files/3938859/Summary_6_2_0.txt); [config_CFD_6_0_1.txt](https://github.com/su2code/SU2/files/3938863/config_CFD_6_0_1.txt); [Summary_6_0_1.txt](https://github.com/su2code/SU2/files/3938865/Summary_6_0_1.txt). In this case the situation is definitely better as the two solvers give the same results. It looks like it is an issue related to the 3D case. <img width=""1220"" alt=""Screenshot 2019-12-09 at 11 27 27"" src=""https://user-images.githubusercontent.com/23583209/70424365-f316a780-1a77-11ea-8f68-4fc83e188ed7.png"">. I also quote Charanya in saying that it is definitely good that convergence to same values is reached but the transient response is fundamental and holds physical/mathematical values (I think of Wagner et similia) :). I would also suggest to add a regression test in this sense. Best, ; Rocco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-563150217:164,simpl,simply,164,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-563150217,1,['simpl'],['simply']
Usability,"Check out the branch [fix_inlet_file_shape_opt](https://github.com/su2code/SU2/tree/fix_inlet_file_shape_opt). There's just one commit that differs from develop (921e85b9d7d9c152c131874a84f3534caf5705c2). I tested it on a simple case, and it seemed to work. But I don't have any more complex test cases to test it on. All my ""complex"" test cases involve other features not merged with develop. You can either merge that branch or (if your branch is not up to date with develop) cherry-pick the commit.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/970#issuecomment-627095055:222,simpl,simple,222,https://su2code.github.io,https://github.com/su2code/SU2/issues/970#issuecomment-627095055,1,['simpl'],['simple']
Usability,"Checkout the small_fixes branch please, I hope the problem is ""that"" simple as I will not debug that function any further because it has the world record for nested loops. If it does not work you will have to hope for help from the turbo folks.; ```c++; for (iMarker = 0; iMarker < nMarker; iMarker++){; for (iMarkerTP=1; iMarkerTP < config->GetnMarker_Turbomachinery()+1; iMarkerTP++){; if (config->GetMarker_All_Turbomachinery(iMarker) == iMarkerTP){; if (config->GetMarker_All_TurbomachineryFlag(iMarker) == marker_flag){; for (iVertex = 0; iVertex < nVertex[iMarker]; iVertex++) {; iPoint = vertex[iMarker][iVertex]->GetNode();; for (jMarker = 0; jMarker < nMarker; jMarker++){; if (config->GetMarker_All_KindBC(jMarker) == PERIODIC_BOUNDARY) {; PeriodicBoundary = config->GetMarker_All_PerBound(jMarker);; jVertex = nodes->GetVertex(iPoint, jMarker);; if ((jVertex != -1) && (PeriodicBoundary == (val_iZone + 1))){; coord = nodes->GetCoord(iPoint);; switch (config->GetKind_TurboMachinery(val_iZone)){; case CENTRIFUGAL; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1219#issuecomment-790064117:69,simpl,simple,69,https://su2code.github.io,https://github.com/su2code/SU2/issues/1219#issuecomment-790064117,1,['simpl'],['simple']
Usability,"Classes associated with spatial discretization are all instantiated once during initialization [see: Numerics_Preprocessing in definition_structure.cpp] whereas classes associated with time integration are instantiated and deleted over and over in solver_container[a][b][c]->ImplicitEuler_Iteration(). Similarly, each time a preconditioner is invoked, a new class is instantiated. I think the code will be easier to read and understand if space and time are treated similarly. The CSysSolve class can also be instantiated for each solver during Numerics_Preprocessing() using the new keyword. A caveat of this change is that it might be necessary to assure that the matrix/vector data in the CSysSolve class is cleared prior to each iteration. This is the cost of not creating and deleting the data structure at each step.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/82:711,clear,cleared,711,https://su2code.github.io,https://github.com/su2code/SU2/issues/82,1,['clear'],['cleared']
Usability,"Closing this for now. After talking with @oleburghardt and @talbring there are features being worked on that are much simpler to develop using Eigen, we may see a PR for that in the not too distant future.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-592951260:118,simpl,simpler,118,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-592951260,1,['simpl'],['simpler']
Usability,"Config options and their options can be found in:; https://github.com/su2code/SU2/blob/master/config_template.cfg; As a part of the code repository, this document will remain up to date with whatever version of the code you have. I believe that this is the single document to which you refer. I apologize that its location or purpose may not have been clear - I will shortly go edit the wiki to see if I can make it clearer that this file exists. . Additionally, the file config_template_basic.cfg in the same directory is a shorter version with only the options most commonly used. . Further documentation of the config options is also available in the comments of:; https://github.com/su2code/SU2/blob/master/Common/src/config_structure.cpp. And although it has not been up to date as we moved towards the wiki and config file template rather than keeping doxygen up to date, additional documentation can be produced using the files in su2code/Documentation/Doxygen.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/183#issuecomment-111755617:352,clear,clear,352,https://su2code.github.io,https://github.com/su2code/SU2/issues/183#issuecomment-111755617,2,['clear'],"['clear', 'clearer']"
Usability,Could you leave in the machine learning section a bit longer?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/208#issuecomment-152095697:31,learn,learning,31,https://su2code.github.io,https://github.com/su2code/SU2/pull/208#issuecomment-152095697,1,['learn'],['learning']
Usability,"Currently in the top-level main() routine, there are a number of multiple-indexed data structures, such as:. ```; solver_container[iZone][iMesh][iEqn]->DoSomething();; numerics_container[iZone][iMesh][iEqn][iTerm]->DoSomethingElse();; ```. Instead of this, I suggest using classes to encapsulate each level of indexing. At the top level, calling a routine from CNumerics could look like:. ```; zone_container[iZone]->integration_container[iEqn]->solver_container[iMesh]->numerics_container[iTerm]->DoSomethingElse();; ```. This looks much more complicated from the top level, but we rarely call routines from CNumerics at the top level. We call them from inside the CSolver classes. Indeed, it makes no sense for there to be a CNumerics instance that is not associated with a specific instance of CSolver. So, currently we have routines such as:. ```; void CEulerSolver::Upwind_Residual(CGeometry *geometry, CSolver **solver_container, CNumerics *numerics,; CConfig *config, unsigned short iMesh) {; ...; numerics->ComputeResidual();; ...; }; ```. Under the proposed scheme, we can remove the CNumerics input to this routine, as the numerics_container array is itself a member of the CSolver, so the same code becomes:. ```; void CEulerSolver::Upwind_Residual(CGeometry *geometry, CSolver **solver_container,; CConfig *config, unsigned short iMesh) {; ...; numerics_container[iUpwind]->ComputeResidual();; ...; }; ```. Currently, the instances of CVariable are already encapsulated in this way inside of CSolver. The proposed reorganization demotes numerics_container from the top-level array to a member of CSolver. Similarly, solver_container itself is encapsulated in CIntegration. Organizing the data structures in this way makes more clear the hierarchy of classes as they are used.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/83:1739,clear,clear,1739,https://su2code.github.io,https://github.com/su2code/SU2/issues/83,1,['clear'],['clear']
Usability,"Dark mode?; ""Is it possible to learn this power?""",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1129#issuecomment-743123950:31,learn,learn,31,https://su2code.github.io,https://github.com/su2code/SU2/pull/1129#issuecomment-743123950,1,['learn'],['learn']
Usability,"Dear @oleburghardt, . Unfortunately, your initial reply lacks of any constructive contribution. . SU2 depends on the feedback of you all. We should not discourage anybody to change/improve, show interest, ask for clarification, etc. The tone of your initial replay was unjustified and not polite.; From now on, your profile as a member of the developer team (collaborator) will be not longer active. Peace,; Francisco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/405#issuecomment-313775430:117,feedback,feedback,117,https://su2code.github.io,https://github.com/su2code/SU2/issues/405#issuecomment-313775430,1,['feedback'],['feedback']
Usability,"Dear @salvovitale,. I realize that it requires significant changes in the code structure and I don't have a clear answer how to do this, also because I don't know all the details of the implementation of the multi-physics simulations. . The only thing I do know is that the loop over the zones must be inside the loop over the RK stages, at least for the fluid zones. Whether this is also the case for e.g. fluid-structure problems, I don't know. As you mentioned, the opinion of the other developers is greatly appreciated on this matter. Regards,. Edwin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437#issuecomment-328302068:108,clear,clear,108,https://su2code.github.io,https://github.com/su2code/SU2/issues/437#issuecomment-328302068,1,['clear'],['clear']
Usability,"Dear @vdweide,. I clearly see your point. However, this can be quite a big structural change of the code and I think we should plan very well how to address this issue. The reason of having a driver class was to facilitate the extension of SU2 to multi-physics applications both for analysis (direct solver) and design (adjoint). Thanks to the high level of abstraction of the CInterpolator, CTransfer and the CIteration classes, it was kind of natural to treat fluid-fluid problems similarly to multi-physics problem (i.e. fluid-structure and fluid-heat). As a matter of fact, the multi-stage turbomachinery approach , its adjoint counterpart, the sliding interface they all rely on this driver structure in which we loop among all the zones. If i understood correctly, you suggest to move only the fluid-fluid multi-zone loop at lower level in order to integrate in time only after having coupled all the fluid zones. Right? If so, we need to design the code in such a way that the fluid zones loop is separated from the multi-physics one.; To solve this issue, I think, we just need to find a smart way to differentiate fluid-zones from the rest. Perhaps we can do that by instantiating one Iteration per physical problem instead than per zone. So that inside the iteration we can couple all the fluid zones, and in the driver we can couple the different physics (Iteration). Indeed, this is just a preliminary idea. In general I think we should aim to a structure that can flexibly accommodate multi-physics problems with multi-zones for different physics. A good example is solving fluid-structure in multi-stage turbomachinery, in which we have multiple fluid-zones and multiple structure-zones. ; ; I would like to hear on this matter also from @fpalacios @talbring , @economon , @rsanfer @oleburghardt ,@LaSerpe and @arubino. Thanks @vdweide againg for raising this issue. cheers. Salvo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437#issuecomment-328274125:18,clear,clearly,18,https://su2code.github.io,https://github.com/su2code/SU2/issues/437#issuecomment-328274125,1,['clear'],['clearly']
Usability,"Dear Daumantas,. I appreciate your effort in adding support for cmake in SU2. We have recently introduced the Meson build system (https://mesonbuild.com/) (#685, #745) as a candidate to replace automake. A guide on how to use can be found [here](https://su2code.github.io/docs_v7/Build-SU2-From-Source/). The idea is that we will have this system along automake at least for the upcoming version 7 and that we get rid of automake afterwards. Considering that, I don't think that it makes sense to maintain 3 different build systems **at the moment**. I really hate turning contributions down, but this one is three months too late. However, we might reconsider adding support for another build system once we got rid of automake, or, if we feel that meson does not fit our needs. I am all ears to hear other opinions. However, let's not start a discussion on the advantages/disadvantages of the build systems. Some benefits can be found in the Issue/PR linked above.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814#issuecomment-552360147:206,guid,guide,206,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552360147,1,['guid'],['guide']
Usability,"Dear Developers, . I have been trying to run the ""Constrained shape design of a transonic inviscid wing at a cte. CL"" tutorial but am having issues in installing SU2 properly. I realize that the SU2 tools necessary for this tutorial are not included with the binary executables and I have been working on properly configuring and building SU2 to have the necessary tools and to run in parallel by following the compilation guide. Unfortunately, I have yet to install a working parallel version to run this tutorial. A solution to avoiding some of these installation issues would be to set up this environment within a singularity container. I found a singularity container definition for an old version of SU2 in #738 and modified the su2.def file to read:. Bootstrap: docker; From: ubuntu:19.04; ; %post; apt-get -y update; apt-get -y install python3 git build-essential autoconf python-dev libopenmpi3 openmpi-common; git clone --depth=1 https://github.com/su2code/SU2; cd SU2; ./meson.py build -Denable-autodiff=true -Denable-directdiff=true --prefix=$PWD; ./ninja -C build install; ; %runscript; exec /SU2/bin/$1 $2 . This code raises the following error after running . FATAL: Unable to build from su2.def: while parsing definition: su2.def: invalid selection(s) specified:. I understand this is an issue stemming from singularity and how I defined the definition file, but I was wondering if there was any supported singularity container for running SU2 that supports AD and parallel computing?. Best",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1626:423,guid,guide,423,https://su2code.github.io,https://github.com/su2code/SU2/issues/1626,1,['guid'],['guide']
Usability,"Dear Dr Albring,. I just followed the procedures and included the files to create a test case to SU2_CFD_AD [a coarse mesh, a TargetCp.dat and a config file for an Arina nozzle. The coarse mesh is a 2000 triangles one; which is enough to give us an idea of the shockwave location and the geometry modifications. The next mesh I have would be an ~85000 elements which gives us a good information on the 27th function call]. ; I had some segmentation faults during long jobs: Is there some recommended tuning I can do on OS/HW or SU2 in order to minimize them?. With kind regards,. Jairo. > On Dec 7, 2018, at 09:45, Jairo Paes Cavalcante Filho <jairo.pcfilho@gmail.com> wrote:; > ; > Hello Dr. Albring,; > ; > Yes! Sorry for the delay due some internal presentations and events here.; > I just finished a small model and successfully tested it on openSUSE. I expect to upload it today.; > ; > With kind regards,; > ; > Jairo; > ; >> On Dec 7, 2018, at 06:35, Tim Albring <notifications@github.com <mailto:notifications@github.com>> wrote:; >> ; >> Hi Jairo,; >> ; >> what is the status here ? Is it possible to provide a simpler (smaller) case ?; >> ; >> —; >> You are receiving this because you were mentioned.; >> Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/pull/600#issuecomment-445175541>, or mute the thread <https://github.com/notifications/unsubscribe-auth/Ac180u4PogeqhPW9rrfY4mW705IYKjvhks5u2jZpgaJpZM4X34F2>.; >> ; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-445429636:1120,simpl,simpler,1120,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-445429636,1,['simpl'],['simpler']
Usability,"Dear Dr. Economon,. I just finished the run on AD with the files you have adjusted and it did; converge. I also have successfully run some simple inverse design tests; with a limit on the number of cycles.; Thank you very much for your guidance and help. With kind regards,. Jairo. On Wed, Jan 30, 2019 at 2:13 PM Thomas D. Economon <notifications@github.com>; wrote:. > *@economon* approved this pull request.; >; > LGMT. Thanks @jaspe55 <https://github.com/jaspe55>; >; > Just one request: I have adjusted the number of iterations for the; > regression test and updated the residual values in the python script. I; > also had to move around some files. Can you please run the case (to; > convergence) and verify that the results are what you expect? Note that the; > config file and target Cp are in the code repository and the mesh and; > solution file are in the testcases repository. If everything looks ok, then; > this is ready to be merged.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/600#pullrequestreview-198200089>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/Ac180hqzVnSUPCnSBkQrTPfIv0kIltygks5vIdKrgaJpZM4X34F2>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-459568514:139,simpl,simple,139,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-459568514,2,"['guid', 'simpl']","['guidance', 'simple']"
Usability,"Dear Dr. Economon,. Thank you again for your guidance.; The git add, git commit and git push commands worked as expected.; The only problem I had was when I tried to upload the mesh file to https://github.com/su2code/TestCases/tree/develop/disc_adj_euler: <https://github.com/su2code/TestCases/tree/develop/disc_adj_euler:> I wanted to upload a folder “arina2k”, whose contents is the mesh file (.su2). I could not just upload the folder name: the system appears to be waiting for an actual file name. When I choose the file name inside that folder , it appears that the system would upload the file within the repository, but 'discarding’ its folder name, so I would have an ‘orphaned’ file there. I tried also to create a file (which would be my folder name), but again, I am prompted with an editor in order to write an actual file, using directly the browser. I believe that there is a simple way to upload a sub-directory/filename, but i could not realize it. With kind regards,. Jairo. > On Dec 14, 2018, at 01:26, Thomas D. Economon <notifications@github.com> wrote:; > ; > @jaspe55 <https://github.com/jaspe55> : I see that you have added the residual check for the python regression script, but I do not see the config file, target file, or mesh. The config file and target file should be placed in SU2/TestCases/disc_adj_euler/arina2k/ (according to your path in the regression script), and the mesh placed in the TestCases/disc_adj_euler/arina2k/ directory in the TestCases repository here (develop): https://github.com/su2code/TestCases/tree/develop <https://github.com/su2code/TestCases/tree/develop>. Don't forget to 'git add' the files to make sure they are included on push. We can help diagnose any segfaults with the files.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/pull/600#issuecomment-447209397>, or mute the thread <https://github.com/notifications/unsubscribe-auth/Ac180hTDp",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-447475363:45,guid,guidance,45,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-447475363,2,"['guid', 'simpl']","['guidance', 'simple']"
Usability,"Dear Heather,; I am analyzing a propeller of an UAV. I have static thrust measurements such that when I used Euler results I got 3.5 lbf thrust as compared to the measured 6 lbs. My next step was to perform an NS equation with SA turb model. I got 7 times over predicted results such that the mesh has a Y+ of less than 1. Then I thought of doing an SST but was not long enough that it gave me error with divergence. I have been setting up my SST case as per the tutorial example of NACA0012. However, I do not happen to see any entry with regards to eddy frequency etc. (usually required by SST) in the config file. Any guidance will be great.; Thanks; Jehan; From: Heather Kline notifications@github.com; To: su2code/SU2 SU2@noreply.github.com ; Sent: Tuesday, May 12, 2015 11:43 AM; Subject: [SU2] Feature deallocation (#174). Bringing this branch up to date with current develop branch. ; Various deallocation changes; Some regression tests fail but all run. (previously was not the case); You can view, comment on, or merge this pull request online at:;   https://github.com/su2code/SU2/pull/174; Commit Summary; - Updated GetEngine_Properties; - Fix to the last commit; - Small bug; - Merge branch 'develop' into feature_MPI; - merging; - SU2_SOL and SU2_CFD are working; - Preliminary, but complete, implementation of SU2_DEF; - More updates; - Working version; - Complete implementation (validate); - Working version of SU2_DEF; - Final push before moving to the develop branch; - New MPI (removing SU2_PRT); - Merged in Ben's ParMETIS integration and fixed some conflicts.; - Merge branch 'benkirk-parmetis_integration' into feature_MPI; - ParMETIS geometry routines have been copied over but are not activated yet.; - Small change to ParMETIS include.; - ParMETIS can now be activated for testing (PARMETIS=YES in config).; - Updated MG; - Updated EA subrotuine; - Small fix; - Fixing memory leak; - Fixing memory leaks; - Dev release v.3.2.6; - Increasing MAX_NUMBER_MARKER; - Working versi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:621,guid,guidance,621,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,1,['guid'],['guidance']
Usability,"Dear SU2 developers and users,. I am running RANS simulations around a typical aircraft wing (EBW in the following) and I am facing some issues. Here are the flight conditions:; - Mach number: 0.78; - Temperature = ~217 K; - Reynolds number: ~19 millions; - AoA = 0°. At these conditions, the EBW should produce a lift coefficient between [0.4;0.5].; However, when SU2 converges, the Cl is about 0.27 and the Cd is negative. Here follows a summary of what I have done. I have used several (multiblock structured) meshes:; - Gmsh (1M cells), SU2 and CGNS format; - ICEM (10M cells), CGNS format. At the preprocessing stage when computing the projection area of the EBW in the z-plane, I noticed that the meshes generated by Gmsh gave a wrong projection (~30 m2 instead of ~40 m2!).; I increased the height of the first cell in the boundary layer (which was set to match y+ ~ 1) and the problem disappeared when y+ got close to 30. Of course, this mesh is not usable without wall functions...; However, it does not seem to be the only problem since:; - the ICEM mesh does not converge to the expected value of Cl; - a colleague ran both (Gmsh and ICEM) meshes with identical settings on the commercial solver CFD++ and got the expected results (Cl = [0.4;0.5]). I also tried to tune these different numerical parameters, without success:; - ROE (2nd order with Vankatakrishnan/Vankatakrishnan-Wang limiter) and JST numerical schemes; - Green-Gauss or Weighted Least Square for gradients; - LU_SGS and ILU linear solver preconditionners. To make sure that SU2 was correctly compiled, I also:; - ran those simulations on SU2 v6.0.0 and v4.3.0, both compiled on Linux. I got the same results in both cases; - ran the Onera M6 test case provided with SU2; - created the same mesh that I used for the EBW with my Gmsh script but around the Onera M6 (I just changed the height of the first cell which is smaller for the M6 than for my wing). I recovered the expected results. Finally, I also ran the case with",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/533:958,usab,usable,958,https://su2code.github.io,https://github.com/su2code/SU2/issues/533,1,['usab'],['usable']
Usability,"Dear SU2 developers,. This PR is a long effort to add Hybrid RANS/LES capabilities, specially the Delayed Detached Eddy Simulation with Grey area mitigation and low dissipation schemes proper to unsteady flows. Summary of the contribution:. - Delayed DES:; - Standard SGS; - Vorticity SGS; - Shear Layer Adapted SGS. - Several low dissipation functions:; - DDES FD; - Ducros' shock sensor; - NTS adaptive. - Variants of SA turbulence model:; - Compressibility correction; - Edwards and Chandra; - QCR 2000 (Quadratic constitutive relation). - Low dissipation schemes:; - Low dissipation Roe.; - Low Mach Roe.; - Simple low dissipation AUSM (SLAU and SLAU2). I added only a small regression test for 2D DDES, travis can not handle even the smallest 3D test case that I have. Suggestions are welcome. Best,. Eduardo",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/490:612,Simpl,Simple,612,https://su2code.github.io,https://github.com/su2code/SU2/pull/490,1,['Simpl'],['Simple']
Usability,"Dear Tim,. I think it is good one. But we should keep in mind that we already have OpenFoam available which is a very good open-source solver for this type of flows, but I do not think it has an Adjoint solver. Please correct me if I am wrong. Best,. Eduardo. > On 22 Aug 2017, at 16:44, Tim Albring <notifications@github.com> wrote:; > ; > Dear all,; > ; > I recently had a lot of discussions with people that are interested in developing a pressure-based incompressible solver (like SIMPLE etc.) in SU2. I just wanted to get the discussion started.; > ; > Who is willing to contribute ? What applications do you have in mind ?; > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/issues/429>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AJVmCTZqPArJr99aBEoGoiAmQsKOLQmBks5say-JgaJpZM4O_GCF>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/429#issuecomment-324472719:485,SIMPL,SIMPLE,485,https://su2code.github.io,https://github.com/su2code/SU2/issues/429#issuecomment-324472719,1,['SIMPL'],['SIMPLE']
Usability,"Dear all, ; I have added a pdf file here that includes some test case results obtained with our BC transition model. These zero pressure gradient and variable pressure gradient flat plate test cases are very popular for model validation. I have also included Eppler E387 airfoil results. I would appreciate if you have any 3-D test case and share it with me.; Looking forward to hear your feedback. ; Sincerely,; Samet. [BC_model_TestCaseResults.pdf](https://github.com/su2code/SU2/files/562425/BC_model_TestCaseResults.pdf)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/326#issuecomment-257360833:389,feedback,feedback,389,https://su2code.github.io,https://github.com/su2code/SU2/pull/326#issuecomment-257360833,1,['feedback'],['feedback']
Usability,"Dear all,. I am taking a course called Software Simulation Engineering and one of the course challenges is to make a contribution to an Open-Source Simulation Software. I chose SU2 and would like to contribute with a tutorial concerning a 2D internal compressible flow, possibly with heat transfer from the environment to the pipe wall. I noticed that there are no internal compressible flow tutorials in the website, and therefore I came up with this idea. I would like to know if this topic is of any interest to SU2. If so, I could develop it and create a pull request for its evaluation. Looking forward to your feedback. Best regards.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1489:616,feedback,feedback,616,https://su2code.github.io,https://github.com/su2code/SU2/issues/1489,1,['feedback'],['feedback']
Usability,"Dear all,. I recently had a lot of discussions with people that are interested in developing a pressure-based incompressible solver (like SIMPLE etc.) in SU2. I just wanted to get the discussion started. Who is willing to contribute ? What applications do you have in mind ?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/429:138,SIMPL,SIMPLE,138,https://su2code.github.io,https://github.com/su2code/SU2/issues/429,1,['SIMPL'],['SIMPLE']
Usability,"Dear all,. This PR resolves an issue with the updated restart logic. Further, it also provides a couple of modifications which will be required in a future PR aimed at the automatic identification of the aerodynamic system. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1295:447,simpl,simply,447,https://su2code.github.io,https://github.com/su2code/SU2/pull/1295,1,['simpl'],['simply']
Usability,"Dear friends of the Heat Solver and Periodic Boundary conditions, . I feared no exhausting work and added periodic BC to the Heat Solver. Stock up your supplies, cancel meetings for today and dive into the diff to review this piece. Ok for real, I don't know if that is all that has to be done? I did some early testing with mixed results, I noticed that I had to turn down CFL for the solid zone (1e4 in non-periodic case-> 1) to get a solution that seems to respect the periodicity. If the CFL is too large then I get some spurious temperature and weird residual pattern. Any comments are appreciated. This was just a first shot so Im gonna do more digging on that issue. ## Related Work; Periodic bc was initially implemented in #652 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1382:911,guid,guide,911,https://su2code.github.io,https://github.com/su2code/SU2/pull/1382,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"Description:. There is a problem in the `pysu2_nastran.py` script when reading the SET1 section from Nastran .f06 output files. The current implementation of the function that reads the SET1 section is insufficient for more complex, such as 3D, mesh structures. In the tutorial, a simple airfoil case is used with a mesh consisting of 123 surface nodes, which works fine. However, for more complex mesh structures, the SET1 section in the Nastran .f06 file includes additional lines with dates, headers, and the Nastran program's name. These extra lines cause issues while reading the SET1 section, leading to errors in processing the file. https://github.com/su2code/Tutorials/blob/master/multiphysics/unsteady_fsi_python/Ma01/modal.f06. line 376 starts with SET1. There is no additional line between the SET1 ID's. But for more complex mesh, additional lines look like this:. "" 191305- SET1 1 1 2 3 4 5 6 7 +^M; 191306- + 8 9 10 11 12 13 14 15 +^M; 191307- + 16 17 18 19 20 21 22 23 +^M; 191308- + 24 25 26 27 28 29 30 31 +^M; 191309- + 32 33 34 35 36 37 38 39 +^M; 191310- + 40 41 42 43 44 45 46 47 +^M; 191311- + 48 49 50 51 52 53 54 55 +^M; 191312- + 56 57 58 59 60 61 62 63 +^M; 191313- + 64 65 66 67 68 69 70 71 +^M; 191314- + 72 73 74 75 76 77 78 79 +^M; 191315- + 80 81 82 83 84 85 86 87 +^M; 191316- + 88 89 90 91 92 93 94 95 +^M; 191317- + 96 97 98 99 100 101 102 103 +^M; 191318- + 104 105 106 107 108 109 110 111 +^M; 191319- + 112 113 114 115 116 117 118 119 +^M; 191320- + 120 121 122 123 124 125 126 127 +^M; 191321- + 128 129 130 131 132 133 134 135 +^M; 191322- + 136 137 138 139 140 141 142 143 +^M; 191323- + 144 145 146 147 148 149 150 151 +^M; 191324- + 152 153 154 155 156 157 158 159 +^M; 191325- + 160 161 162 163 164 165 166 167 +^M; 191326- + 168 169 170 171 172 173 174 175 +^M; 191327- + 176 177 178 179 180 181 182 183 +^M; 191328- + 184 185 186 187 188 189 190 191 +^M; 191329- + 192 193 194 195 196 197 198 199 +^M; 191330- + 200 201 202 203 204 205 206 207 +^M; 191331",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2313:281,simpl,simple,281,https://su2code.github.io,https://github.com/su2code/SU2/issues/2313,1,['simpl'],['simple']
Usability,"ES has the option to use the blending by Travin _et al._ (2002). It's referred to as the ""NTS adaptive"" blending or the ""NTS"" blending for short, and was labeled as a ""low dissipation function"". But the what's implemented in the code doesn't match the paper, and it doesn't even make sense. You can compare the code to the paper by Travin _et al.__ at: https://doi.org/10.1007/0-306-48383-1_16 or the related AIAA presentation at: https://arc.aiaa.org/doi/pdf/10.2514/6.2001-879. There's multiple issues that I believe are present:. + There's an extra square root in the calculation of `Baux`, which leads `Baux` to have units of 1/time. That throws off the nondimensionalization of the blending constant.; + The square root in the calculation of `Lturb` is in the wrong place. Travin only takes the square root of the denominator.; + Travin _et al._ took the variables `Lturb` and `g` and used them to build a new variable, `A`, that was used to set the blending parameter. In the code, `LTurb` is simply multiplied by `Gaux`. This doesn't match the paper, and it's not going to scale correctly either. `Lturb` should have units of length, and multiplying a length by a nondimensional parameter does not give you a nondimensional parameter.; + The variable `Omega` isn't consistent with `StrainMag`. `StrainMag` has a factor of sqrt(2) built in, but `Omega` doesn't. The original paper actually doesn't specify if the factor of sqrt(2) should be included, but the code should at least be consistent.; + The value of the variable `ch3` is 2 in the code, but 0.5 in the paper. I've corrected these mistakes, but I wanted to get feedback on the results. This section of code was not covered by any existing regression tests, and the validation cases in the [SU2-DDES paper](http://dx.doi.org/10.2514/6.2017-4284) don't use the NTS blending. Meaningful verification and validation of hybrid RANS/LES is both tricky and computationally expensive (compared to RANS). So any input (especially from @EduardoM",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/532:1172,simpl,simply,1172,https://su2code.github.io,https://github.com/su2code/SU2/pull/532,1,['simpl'],['simply']
Usability,"Extra space. ## Proposed Changes; There was an extra space. ## Related Work; Compute polar did not work when I tried to vary the mach number only. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1039:319,guid,guide,319,https://su2code.github.io,https://github.com/su2code/SU2/pull/1039,1,['guid'],['guide']
Usability,"FFD box fix to avoid ambiguous definition of nonplanar faces . ## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; The FFD box is defined using quadrilateral faces. These faces can in principle be non-planar. To avoid ambiguity, we define a supporting middle node and divide each face into 4 triangles. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1742:665,guid,guide,665,https://su2code.github.io,https://github.com/su2code/SU2/pull/1742,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,Feedback (positive or negative) from everybody is requested :) I get conflicts with every new pull request at the moment and it costs me always some time to resolve them ...,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/327#issuecomment-261930266:0,Feedback,Feedback,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/327#issuecomment-261930266,1,['Feedback'],['Feedback']
Usability,"First one:; It seems, some parameters are missing in config_template.cfg. Would be realy great if u can add rly all parameter u can set. For example ARTCOMP_FACTOR isnt listed in the actual *.cfg. But this parameter can be very important to convergence a problem.; For SU2 beginners this would simplify the getting in not crawling through. The second one is, that some mor detailed infos for every single parameters would be nice, the default value. Either directly in the *.cfg or in an extra description file. An example for ARTCOMP_FACTOR; Adds artificially compressibility | default 1.0 | Can help to convergence a problem or can speed up convergence",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/277:294,simpl,simplify,294,https://su2code.github.io,https://github.com/su2code/SU2/issues/277,1,['simpl'],['simplify']
Usability,"Fixed initial guess for the Newton search of the quadrilateral. ## Proposed Changes; This small PR fixes the initial guess for the Newton algorithm to determine the parametric coordinates of the quadrilateral.; . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/608:407,guid,guide,407,https://su2code.github.io,https://github.com/su2code/SU2/pull/608,1,['guid'],['guide']
Usability,"Folks,. Just a general remark. Some of the doxygen comments of the functions and variables are not consistent, because these are simply copied. There are examples in the code where several functions have exactly the same comments and those comments do not make any sense whatsoever. So could everybody also pay attention to the comments before a pull request is made? You do not only write this code for yourself but also for other people and wrong comments can be extremely confusing.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/544:129,simpl,simply,129,https://su2code.github.io,https://github.com/su2code/SU2/issues/544,1,['simpl'],['simply']
Usability,"Folks,. Perhaps we can split this issue to a separate thread. But it is indeed a critical one. Improving performance of the solver (or trying other preconditioned solvers) would be a significant improvement amortized over a very large number of users. Add it as a topic of discussion for the Annual Meeting in May?. Juan. On Feb 5, 2019, at 6:54 AM, pcarruscag <notifications@github.com<mailto:notifications@github.com>> wrote:. Hi @EduardoMolina<https://github.com/EduardoMolina>,. That is something I am also interested in as for some of my structural cases the current linear solvers simply do not converge. However Eigen is not the tool for that as the sparse linear solvers it has are similar and are not distributed parallel.; When I opened this issue I was thinking exclusively about how we handle small-medium dense matrices that live on a single rank, and associated algorithms (the kind used for RBF interpolation for example).; I think the two issues are fairly orthogonal, so we can open another to discuss large solvers, for which related work has already been started. Cheers,; Pedro. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/643#issuecomment-460666656>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxClv7-iTk5lFN9sK4fkqM7lk0FZEks5vKZsPgaJpZM4adbAo>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-460714752:587,simpl,simply,587,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-460714752,1,['simpl'],['simply']
Usability,"Food for thought: According to his most recent AIAA talk, Spalart himself has tried to keep the model variants ""modular."" Some of the variants are compatible with each other. For example, you can add a ""rotation-curvature correction"" and a ""compressiblity correction"". The NASA TMR catalogue reflects this design by stating ""These corrections can be applied individually or together in combination with the General Model."". A simple `SA_QCR` or `SA_COMP` naming scheme doesn't match the underlying design. On the user-facing side, separate config options might be better for some of the variations. On the code side, bit flags (Issue #770) might be a good way to gather all the model variants together into a single config option.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/992#issuecomment-652446915:426,simpl,simple,426,https://su2code.github.io,https://github.com/su2code/SU2/issues/992#issuecomment-652446915,1,['simpl'],['simple']
Usability,"For the time being, lets use Gitter to communicate! Its free and you can simply log in with your github account. https://gitter.im/su2code/community",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/645#issuecomment-515048317:73,simpl,simply,73,https://su2code.github.io,https://github.com/su2code/SU2/issues/645#issuecomment-515048317,1,['simpl'],['simply']
Usability,"From the SU2 paper, talking about ""guiding principles"":. <img width=""574"" alt=""Screen Shot 2019-10-09 at 3 26 46 PM"" src=""https://user-images.githubusercontent.com/19416354/66525312-edb5d480-eaa9-11e9-9c0f-158b3941b407.png"">. I particularly like. > Full documentation, including a comprehensive set of tutorials. (""including"" implying that the tutorials are a subset of the documentation), and . > expose the full set of options [...] to the practitioner. This conflicts with our ""operating principle"", laid out on the tutorials page:. > Rather than writing a long manual on all available (and constantly evolving) configuration options available in SU2[...]. The Guide to V7 is a good start, but I think at the bare minimum (since I agree that full documentation would be a huge task, though one that's apparently promised on a paper we link on our homepage), we should provide more information about the existing options beyond forcing the user to scroll through config_template.cfg or dig through the tutorials.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/775#issuecomment-540239931:35,guid,guiding,35,https://su2code.github.io,https://github.com/su2code/SU2/issues/775#issuecomment-540239931,2,"['Guid', 'guid']","['Guide', 'guiding']"
Usability,"Giulio,. Yes! It would be excellent to have the HLLC Jacobians for the ideal gas case too. Please let me know if I can assist with anything. You might also have noticed some old commented out code that you could use as a guideline. Tom",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/209#issuecomment-171112223:221,guid,guideline,221,https://su2code.github.io,https://github.com/su2code/SU2/pull/209#issuecomment-171112223,1,['guid'],['guideline']
Usability,"Good Morning,. I'm from Chair of Thermal Engineering of Poznań University of Technology.; In August 2017 my colleague and I attended SU2 Summer School in; Kaiserslautern and met the Sci-Comp team developing the SU2. I think moving the main tutorials to the main repository is a good idea. We; declared to contribute some validation cases and written tutorials and; having this in main repository will ease the process of adding/modifying; the docs to a simple pull request. I also have a suggestion regarding the Test Cases and Tutorial files. I; apologize if this is the wrong place or this has been discussed already,; but still will give it a try:; - Test cases folder from SU2/su2code repository shall be moved to the; SU2/TestCases repository. Rationale: this makes one repository to store the; test case *.cfg files and mesh files.; - There shall be a TestCases/Mesh folder to store all the meshes needed for; Test Cases files, without subdivisions for RANS, Euler etc subfolders.; Considering that multiple test cases use the same mesh and all the mesh; files are distinct, this solution generates one place to store all the mesh; files. Should a user perform a test case, he/she will find the mesh by name; referenced in the *.cfg file instead searching thru multiple folders. This; will also help avoiding unnecessary copies of mesh files.; - The same should be done for Tutorial files: Tutorial/Mesh folder for; storing meshes (duplicating these few files from TestCases/Mesh should not; be a problem IMO, but will really help a new user to get up to speed with; SU2); - I have no clear opinion on where the Tutorial files folder should be; stored. But considering moving written tutorials to main repository i think; that tutorial files should also be stored in main SU2/su2code repository. Best regards and Happy New Year; Jędrzej. 2017-12-30 23:45 GMT+01:00 Tim Albring <notifications@github.com>:. > What do you think of moving the written tutorials also to the main; > repository ? Then",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/485#issuecomment-354736415:453,simpl,simple,453,https://su2code.github.io,https://github.com/su2code/SU2/pull/485#issuecomment-354736415,1,['simpl'],['simple']
Usability,"Good catch! yep! I implemented an interesting/important change: Before, WALL_DISTANCE was computed using only the surfaces that you have identified as moving surfaces... as you can imagine that only works when you have a very simple problem (maybe an airfoil) but... if you have a problem with more Navier-Stokes markers together and you are moving only one of them the method doesn't work (e.g. wing-fuselage). For that reason I reimplemented WALL_DISTANCE which now is computed from all the solid surfaces and I also created DEF_WALL_DISTANCE that computes the distance from the surfaces that we are moving (as before). Frankly, I haven't found a situation in which DEF_WALL_DISTANCE outperforms the new solid WALL_DISTANCE... And, my suggestion is to eliminate DEF_WALL_DISTANCE in the future. For the time being I have added DEFORM_STIFFNESS_TYPE= DEF_WALL_DISTANCE to the config files to see if that solves the problem. Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/412#issuecomment-318673304:226,simpl,simple,226,https://su2code.github.io,https://github.com/su2code/SU2/pull/412#issuecomment-318673304,1,['simpl'],['simple']
Usability,"Good point about making the eigen-functions static. That makes it a lot more accessible in other parts of the code. Will include that in the changes along with the option name changes. . I like the idea about the static allocation, but I foresee a problem that you actually mention. If I convert the variables to be statically defined, I would have to make the eigen-functions accept statically defined arrays. Since most arrays in SU2 are dynamically allocated, this would cause some compatibility issues. . In general, I see the value in making a math library associated with matrix operations. Maybe you could pitch the idea in an issue and get feedback on it?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/570#issuecomment-433963723:648,feedback,feedback,648,https://su2code.github.io,https://github.com/su2code/SU2/pull/570#issuecomment-433963723,1,['feedback'],['feedback']
Usability,"Good point, Jayant. Maybe a brief tutorial and an example can be created so people know how to use this new feature? There will be a presentation by Edwin and Tom at the annual meeting that might also be helpful. Best,; Juan. On Apr 24, 2019, at 11:32 AM, Jayant Mukhopadhaya <notifications@github.com<mailto:notifications@github.com>> wrote:. I am not a 100% clear on all the things this new feature can do. From what I gather we can now set an initial flow field that is not just freestream condition everywhere? If this is the case, this is a hugely useful feature so thank you guys for doing that. How exactly is this allowing for solution verification? Is it allowing you to run the same case with a bunch of different solver schemes? Can it run the solvers on a set of meshes or do you still have to run on each mesh refinement individually?. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/pull/672#issuecomment-486373335>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AA5FFRDJGI6HH6HEUDATJS3PSCRUZANCNFSM4HH7BJ7A>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/672#issuecomment-486418280:360,clear,clear,360,https://su2code.github.io,https://github.com/su2code/SU2/pull/672#issuecomment-486418280,1,['clear'],['clear']
Usability,"Great! Sounds good, just figured id bring it up to get some of these ancient issue cleared up. :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/691#issuecomment-501794908:83,clear,cleared,83,https://su2code.github.io,https://github.com/su2code/SU2/pull/691#issuecomment-501794908,1,['clear'],['cleared']
Usability,Guide new in 8 should be added like new in 7 before.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2361#issuecomment-2395573837:0,Guid,Guide,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/2361#issuecomment-2395573837,1,['Guid'],['Guide']
Usability,"Guys, we cannot simply change defaults like that, update regressions, and call it a day... Even fixing #1551 is a major change that should warrant a major version update. We want SU2 users to be able to rely and trust the code we release...; That is why I suggested that this PR should be used only to change the way of specifying SST options, and introduce simple ones like the V and KL modifications. Then the validation work for SST 2003 (with and w/o modification) would be done in #1557.; But ok, let me look at this and propose a way forward that gets in develop ASAP, **please don't start updating regressions**.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1560#issuecomment-1084549672:16,simpl,simply,16,https://su2code.github.io,https://github.com/su2code/SU2/pull/1560#issuecomment-1084549672,2,['simpl'],"['simple', 'simply']"
Usability,"Guys,. Thanks for your feedback. @pcarruscag, the reason why I made a different enum rather than a boolean USE_SST_SUSTAINING_TERMS is that all different SA versions also have a different enum. So I thought this was more consistent. But if there is a strong preference for an additional boolean, I'm fine with that as well. What we can do is to keep the enum and set the boolean USE_SST_SUSTAINING_TERMS internally and overwrite SST_SUST to SST. @talbring, @jayantmukho, I am in favor of keeping the original version of SST. Although the difference between the models is rather small, basically the addition of one term, the difference in results can be quite significant, especially for relatively low Reynolds numbers and large value of the turbulent intensity. . @economon, you are right that a lot of the checks for SST are actually more general checks for a two equation model. So I think that most, if not all, checks for SST can be replaced be a check for the number of turbulent equations. That is more general as well, in case we want to add additional turbulence models in the future, assuming that an equation is present for the turbulent kinetic energy if the number of turbulence equations is two or bigger.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/765#issuecomment-524053082:23,feedback,feedback,23,https://su2code.github.io,https://github.com/su2code/SU2/pull/765#issuecomment-524053082,1,['feedback'],['feedback']
Usability,"Have a look at my last comment in #763, I think there is a better way of handling linear system periodicity instead of what we do, which may allow you to run at higher CFL (and with simpler periodic comms). But at the moment you are missing the PERIODIC_IMPLICIT comms after solving the linear system, see CompleteImplicitIteration_impl in CFVMFlowSolverBase.hpp.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1382#issuecomment-927138184:182,simpl,simpler,182,https://su2code.github.io,https://github.com/su2code/SU2/pull/1382#issuecomment-927138184,1,['simpl'],['simpler']
Usability,"Heather: I know we talked about this one in person the other day, but I am still weighing things... Even though it looks like a small change, it's a really big one, and I want to make sure we keep things as clear and user-friendly as possible. . If anyone else has thoughts on this, please feel free to chime in. Maybe we can catch up about it again early this week.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/241#issuecomment-184449921:207,clear,clear,207,https://su2code.github.io,https://github.com/su2code/SU2/pull/241#issuecomment-184449921,2,"['clear', 'user-friendly']","['clear', 'user-friendly']"
Usability,"Hello @aditya12398 ,. No such thing as a noob question!. To use your system meson, instead of using: `./meson.py <arguments>` in your SU2 root dir, use `meson <arguments>`. This assumes your system meson is in front of your current directory in your path, of course. Likewise, to use system ninja, instead of using: `./ninja -C build install`, simply use `ninja -C build install`. I found, for some reason, that when using my system meson and ninja with the changes made in `fix_python_3.8`, I am not getting errors, but when I use SU2's included `./meson.py`, I'm still getting those errors. Not sure why this is happening, though. -Paul",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-631584658:344,simpl,simply,344,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631584658,1,['simpl'],['simply']
Usability,"Hello @aditya12398 ,. The fifth line of the file you attached shows a call to `c++`, rather than `mpicxx`, which could cause those undefined references. Basically, the linker is not seeing your mpi libraries. I believe that, in order to use the `-Dcustom-mpi=true` flag, you may need to define your compiler environment variables (such as `$CC`, `$CXX`, `$LD`, `$MPICXX`, etc). Having both OpenMPI and MPICH installed on your system is complicating things, I think. Without some manual configuration of your system's environment, it may not be clear to meson/ninja which mpi implementation should be used. You may need to do some digging around on the internet to see how to properly resolve which MPI implementation gets used for different applications. -Paul",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-634825410:544,clear,clear,544,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-634825410,1,['clear'],['clear']
Usability,"Hello @pcarruscag @TobiKattmann and SU2 developers,. We have been busy making several code updates, performing cleanup, etc. for this PR. Can you please review and provide feedback when you get the chance? Thank you in advance!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1300#issuecomment-1061224541:172,feedback,feedback,172,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1061224541,1,['feedback'],['feedback']
Usability,"Hello Dr. Albring,. Yes! Sorry for the delay due some internal presentations and events here.; I just finished a small model and successfully tested it on openSUSE. I expect to upload it today. With kind regards,. Jairo. > On Dec 7, 2018, at 06:35, Tim Albring <notifications@github.com> wrote:; > ; > Hi Jairo,; > ; > what is the status here ? Is it possible to provide a simpler (smaller) case ?; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/pull/600#issuecomment-445175541>, or mute the thread <https://github.com/notifications/unsubscribe-auth/Ac180u4PogeqhPW9rrfY4mW705IYKjvhks5u2jZpgaJpZM4X34F2>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-445209093:373,simpl,simpler,373,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-445209093,1,['simpl'],['simpler']
Usability,"Hello Dr. Economon,; ; At this moment, I am running a case which is lighter but sill not very simple (I am running it on a Mac with four cores, and it will finish by Monday, I suspect). As soon as it successfully completes, I will work on a simpler sample case in order to include it in the test suite, willing God. With kind regards,. Jairo. > On Nov 16, 2018, at 16:12, Thomas D. Economon <notifications@github.com> wrote:; > ; > Thanks, @jaspe55 <https://github.com/jaspe55> ! LGTM. I don't think we have any tests for the inverse design capability. Do you have a very simple test case that we can put into the regressions for this capability? I think you are working on a nozzle design.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/pull/600#issuecomment-439496260>, or mute the thread <https://github.com/notifications/unsubscribe-auth/Ac180nOm5nOlpnYLID7YMRQeFOsAZQJYks5uvw4MgaJpZM4X34F2>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-439506935:94,simpl,simple,94,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-439506935,3,['simpl'],"['simple', 'simpler']"
Usability,"Hello Everyone,. I’m having an issue implementing internal surfaces in SU2. It appears there is a bug in the software that is causing this to not function correctly. I have a simple channel geometry that runs with no issues as expected. However, when I define two internal boundaries, “internal1” and “internal2”, without changing anything else in the simulation, the simulation mysteriously crashes after about 20 or so iterations. This is the marker that I’m using:. MARKER_INTERNAL= ( internal1, internal2 ). Both meshes, and the .cfg file I’m using along with a few images for reference can be found using the following Dropbox link:. https://www.dropbox.com/scl/fo/3zu5myyz7v1cuj7m9zlk6/AJKklmqLz18EWubfYeAK_qk?rlkey=g9tyoo6oi5i03e26wabrdftyc&dl=0. Any assistance would be greatly appreciated. ![ReferenceImage1](https://github.com/user-attachments/assets/74caa8ab-e8b8-4c1d-b09a-4cb1cdc2d78b); ![ReferenceImage2](https://github.com/user-attachments/assets/18eccfaf-c8e1-465c-b742-aba6cf255851)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2336:175,simpl,simple,175,https://su2code.github.io,https://github.com/su2code/SU2/issues/2336,1,['simpl'],['simple']
Usability,"Hello Pedro, thanks for your quick reply! ; More than the differentiation of the mesh deformation problem I was referring to what SU2_DOT does in the specific, at least in terms of workflow.; In fact, reading your answer I realise that maybe I'm misunderstanding the process done by SU2_DOT.; I thought that, in case of Disc. Adjoint, SU2 solver was already providing the _total_ sensitivity of the objective function with respect to the boundary grid nodes displacements. This already includes the contribution of the mesh deformation. given this, I thought that SU2_DOT was simply projecting such sensitivities on the FFD box point displacements chosen as design variables. But I cannot understand then why the need to include the mesh deformation problem within SU2_DOT.; Can you let me know about that please?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1017#issuecomment-640071772:576,simpl,simply,576,https://su2code.github.io,https://github.com/su2code/SU2/issues/1017#issuecomment-640071772,1,['simpl'],['simply']
Usability,"Hello SU2 Community! . I am simulating flow over a 6-blade propeller and modeling 1/6th of the domain with an assumption that it is axisymmetric. I meshed the computational domain generating an unstructured grid using ANSYS Meshing with a targetted y+<1 and simulated the case using a pressure-based (SIMPLE) solver with S-A turbulence model in Fluent. It is a steady-state simulation and used a frozen rotor approach. Fluent converged after the reduction of continuity residuals by four orders of magnitude. For simulating the domain in SU2, I had converted the mesh into CGNS format, simulated with similar settings using SU2's RANS Solver (S-A) with rotating domain and periodic boundary conditions. The simulation converges as the residuals drop by two orders of magnitude and monitors stabilize after 30k iterations. . On checking the contours, the SU2 predicts relatively high y+ values, especially near the junction of propeller blade root and spinner, where the values go up to y+~250, while it is around y+=1-2 in the rest of the domain. Whereas, Fluent predicts the y+<1 throughout for the same mesh. The values of forces and moment are off by two orders, on comparing it with the Fluent and experimental results. But, flow-field and contours of pressure distribution look similar for both SU2 and Fluent. I'm wondering what might have led to the difference in the results. I have refined the mesh, but it only reduces y+ by a small number. I have attached the config file and would like some inputs. Thanks in advance. [Prop_config.txt](https://github.com/su2code/SU2/files/5857368/Prop_config.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1175:301,SIMPL,SIMPLE,301,https://su2code.github.io,https://github.com/su2code/SU2/issues/1175,1,['SIMPL'],['SIMPLE']
Usability,"Hello SU2 developers, ; I tried to build from source the new SU2 v7.0.5 by following the quick compilation guide but after the command. `./meson.py build`. I received the following error. ```; Downloading CoDiPack '501dcf0305df147481630f20ce37c2e624fb351f'; Downloading MeDiPack 'edde14f9ac4026b72b1e130f61c0a78e8652afa5'; Downloading meson '29ef4478df6d3aaca40c7993f125b29409be1de2'; Downloading ninja '52649de2c56b63f42bc59513d51286531c595b44'; ninja executable not found. Building ...; bootstrapping ninja...; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [29/29] LINK ninja; The Meson build system; Version: 0.54.999; Source dir: /home/roby/SU2/SU2v7; Build dir: /home/roby/SU2/SU2v7/build; Build type: native build; Project name: SU2; Project version: 7.0.5 ""Blackbird""; C compiler for the host machine: cc (gcc 5.4.0 ""cc (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609""); C linker for the host machine: cc ld.bfd 2.26.1; C++ compiler for the host machine: c++ (gcc 5.4.0 ""c++ (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609""); C++ linker for the host machine: c++ ld.bfd 2.26.1; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Found pkg-config: /usr/bin/pkg-config (0.29.1); Run-time dependency MPI for c found: YES 1.10.2; Run-time dependency MPI for cpp found: YES 1.10.2; Message: Extracting boost ... externals/tecio/meson.build:6:2: ERROR: Command ""/usr/bin/python3 /home/roby/SU2/SU2v7/meson_scripts/extract_file.py boost.tar.gz /home/roby/SU2/SU2v7/externals/tecio"" failed with status 1. A full log can be found at /home/roby/SU2/SU2v7/build/meson-logs/meson-log.txt; ```. Best regards",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1019:107,guid,guide,107,https://su2code.github.io,https://github.com/su2code/SU2/issues/1019,1,['guid'],['guide']
Usability,"Hello Tobi,. Thanks for your quick reply! I'll address you doubts as follows. > I used this mesh <Testcases>/control_surface/mesh_ONERAM6_inv.su2 and the boundary marker names are a bit different in the mesh, compared to your provided config (WING vs LOWER_SIDE, UPPER_SIDE, TIP + SYMMETRY vs SYMMETRY_FACE). . Yeah, the mesh you are mentioning is the same. I simply united the TIP, LOWER_SIDE and UPPER_SIDE under the marker tag WING. > The initial transient through the domain based on the initial values is unphysical to some extend and if e.g. 'steady state' results are the same for both code versions .... the problem is not that big. Although it differs quite a bit in the temporal evolution tbh; In the results (also in the mail) it looks a bit like it approaches a steady state for Cl and CD. So maybe 1000 timesteps will tell us a bit more 🤔. I guess they converge eventually to the same values. I tried to compare the same case but steady (I attach the summary). Results in this case are fairly similar and (in my opinion) raise no warnings.; [Summary_steady_6_0_1.txt](https://github.com/su2code/SU2/files/3906039/Summary_steady_6_0_1.txt); [Summary_steady_6_2_0.txt](https://github.com/su2code/SU2/files/3906010/Summary_steady_6_2_0.txt). Regarding the unsteady case, I'm aware that this test may have little physics behind (especially if comparing the first timesteps) but I wanted to investigate the reason :). Results are too different and I think these might be one of the reasons behind some discrepancies I'm encountering in my FSI framework. ; My framework for FSI features a restart from a steady solution at t=0 and an unsteady simulation with imposed boundary of the wing marker. The discrepancies in that case are huge and are clearly wrong. I went back to the root and found this weird behaviour comparing the two versions so I thought this might be one cause. > Another thing: There is no tag 6.0.2 😕 ... 6.0.1 and then 6.1.0.. Yep you are right, the version is definitely 6.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-559850074:360,simpl,simply,360,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-559850074,1,['simpl'],['simply']
Usability,"Hello all, ; as I have mentioned before, this PR is the first of a series that are coming soon for general maintenance and improved usability of the code. As you all know, we are working hard to improve the generality and usability of the code and to maintain it healthy. ; We have some other improvements/generalizations that rely on this one. Therefore, I think it would be a good idea to merge this in sooner than later, to transition smoothly to this new structure.; Best,; Ruben",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/585#issuecomment-441210349:132,usab,usability,132,https://su2code.github.io,https://github.com/su2code/SU2/pull/585#issuecomment-441210349,2,['usab'],['usability']
Usability,"Hello everyone,. I am having trouble in restarting a solution obtained with a coarser mesh. In particular, it seems that the call to MPI_File_open hangs when it is trying to restart the turbulent solver. The call from the flow solver, instead, works just fine. I tried both on my pc and on an external platform and the result is the same. . This has worked previously (no changes to the SU2 binary used) and is currently working on a simpler 2D case, thus it seems to be related to the current meshes that I am using. Here you can find the necessary files to (hopefully) reproduce the problem. https://polimi365-my.sharepoint.com/:f:/g/personal/10507725_polimi_it/EuS1oMbJGvJLj4SWLroY6J8BNkLkCHP_B8O1LZ8cdvSATQ?e=KgmrVT. **Bug report checklist**; *Please make sure that you have followed the checklist below, many common problems can be solved by:*. - [X] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [X] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [X] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: CentOS Linux (v7); - C++ compiler and version: gcc-10.2.0; - MPI implementation and version: OpenMPI 4.1.0; - SU2 Version: v7.5.1 (develop)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2069:434,simpl,simpler,434,https://su2code.github.io,https://github.com/su2code/SU2/issues/2069,1,['simpl'],['simpler']
Usability,"Hello everyone,. I encountered an error in the writing of a CGNS file when no nodes are associated to a given rank. It usually happens when small grids are employed and the simulation is performed on more than one core. have uploaded at the following link the mesh and the config used to reproduce the error. https://polimi365-my.sharepoint.com/:f:/g/personal/10507725_polimi_it/Ekl88a3uOKhMu4uCLRy3tHIBNNo6_3oMTNiZq97NB6ztDw?e=Hu8pqe. Notice that, if only one heatflux marker is selected to print the results onto, then it does not work when 2 or more cores are used. On the other hand, if both of the heatflux markers are used then it works in parallel. To solve this issue I just added a check on the number of local points in the function CCGNSFileWriter::WriteField. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2178:944,guid,guide,944,https://su2code.github.io,https://github.com/su2code/SU2/pull/2178,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"Hello guys,; I run the shape_optimization.py to optimize a wing. I want to minimize the drag function. But the drag function increased. And I have not found any setting in the configuration that clearly define the optimization goal is minimize or muximize the objective function. I only found two setting, 'OPT_OBJECTIVE= DRAG * SCALE' and 'OPT_CONSTRAINT= (STATION1_THICKNESS > 0.077) *SCALE' , ralating to optimization objective. Does it default to minimize drag and muxmize lift? ; Can anybody know that?; the second question is about the scale of OPT_OBJECTIVE and OPT_CONSTRAINT. Does the SLSQP change the constrainted question into unconstrainted with the two scale when solve the optimization question. If so, can anyone tell me the transformed function.; Thanks. - SU2 Version: [ v6.2.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1103:195,clear,clearly,195,https://su2code.github.io,https://github.com/su2code/SU2/issues/1103,1,['clear'],['clearly']
Usability,"Hello team,. I have done following changes,; - I have created Dockerfiles for Ubuntu and CentOS and included a Readme file for people to understand how to create and setup binaries to be used, based on this pull request [#169](https://github.com/su2code/SU2/pull/169) as per Heather's recommendation; - I also created a configuration file generator to aid people to quickly create a .cfg file and use them. It is a simple HTML page without anything to be installed. For more details, please read the README.md file checked in @ SU2_IDE/Configuration-gen location. Let me know if you have any questions. Krishna",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/172:415,simpl,simple,415,https://su2code.github.io,https://github.com/su2code/SU2/pull/172,1,['simpl'],['simple']
Usability,"Hello!. ## Proposed Changes; To continue current work being done on different transition models, I am working at the implementation of the eN model for low-turbulence external aerodynamics as proposed by James G. Goder and Mark D. Maughmer ([10.2514/1.J052905](https://arc.aiaa.org/doi/10.2514/1.J052905)). This model incorporates a new transport equation to describe the growth of the maximum Tollmien-Schlichting instability amplitude in the presence of a boundary layer.; ; ## Related Work; This work will be set-up in the same way as the LM model is in https://github.com/su2code/SU2/pull/1751 (which was also generally speaking how I had set up my own LM transition implementation) to make sure merging in a later stage will be easier. ## Roadmap; I am hoping to achieve a working implementation of the eN transition method. This work will be done as finishing part of my master thesis. We will have to see if I have time to completely finish the V&V phase due to time restrictions. I have already done quite some work on implementing and verifying the LM method on a private branch and results show mixed results, especially at higher Re numbers (mentioned also by Menter et all.). Thus the step is made to see how these LM results will compare to eN results. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1765:1438,guid,guide,1438,https://su2code.github.io,https://github.com/su2code/SU2/pull/1765,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"Hello!. I have a simple question about the Riemann type for the boundary condition. I would use the type ""TOTAL_SUPERSONIC_INFLOW"" for the MARKER_RIEMANN but the warning ""Invalid Riemann input!"" comes out. I have controlled in the SU2/Common/include/option_structure.hpp and this option is present. How could I do to use it?. this is the boundary defined:; `; MARKER_RIEMANN= (stage1_inflow, TOTAL_SUPERSONIC_INFLOW , 101325.0, 288.15, 400.0, 0.0, 0.0)`. and this is the error:. ```; ------------------------------ Begin Solver -----------------------------. Simulation Run using the Multizone Driver. Setting translational grid velocities.; Non-dim. translational velocity: (0, 296.633, 0).; WARNING: SU2 was not compiled for an AVX-capable architecture. Performance could be better,; see https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/#compiler-optimizations. Error in ""virtual void CEulerSolver::BC_TurboRiemann(CGeometry*, CSolver**, CNumerics*, CNumerics*, CConfig*, short unsigned int)"": ; -------------------------------------------------------------------------; Invalid Riemann input!; ------------------------------ Error Exit -------------------------------; ```. Thanks!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2305:17,simpl,simple,17,https://su2code.github.io,https://github.com/su2code/SU2/issues/2305,1,['simpl'],['simple']
Usability,"Hello, . We are attempting to provide compilation instructions for one of our users who wishes to use SU2 on our HPC clusters. We use spack to provide library access, including to openmpi. When we use meson and ninja, we run into a linker error: /opt/spack/opt/spack/linux-centos7-nehalem/intel-19.0.3/zlib-1.2.11-zjmi5fwzodf5iizukl7aptz2eexrcblo/lib: file not recognized: Is a directory. The path is provided by pkg-config and the spack provided .pc file. We don't see any errors in the zlib .pc and that package is used frequently in other compilations. As a workaround, we used the version 6 installation procedure on the version 7 source. This produced runnable binaries. Could you let me know if this will fail to produce binaries that meson and ninja would have?. qsub -I -q debug -l nodes=1:ppn=8; on the compute node:; cd into the SU2 git repo then,; module load python-3.7.2-intel-19.0.1-zj5ljxy ; module load openmpi-3.1.5-gcc-9.3.0-cc2bj5i # for gcc mpi compilers.; ./configure --prefix=<install destination> --enable-mpi --with-cc=$(which mpicc) --with-cxx=$(which mpicxx); make -j 8 # compile the code using all 8 cores; make install # copy the binaries to the installation destination; Then, assuming the input file is in the same directory as the SU2_CFD executable I ran it on 8 cores with mpirun:; mpirun -np 8 $PWD/SU2_CFD lam_cylinder.cfg . I got what looked like reasonable output but is are there unit tests I can run to test the installation. Thanks very much for any guidance you can offer. . Matthew",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1037:1490,guid,guidance,1490,https://su2code.github.io,https://github.com/su2code/SU2/issues/1037,1,['guid'],['guidance']
Usability,"Hello, ; You are right, this pr cannot solve the problem but just make the solution look reasonable.; For some complicated case, it is hard to converge, not like in the simple cases.; I have read the relevant code and book, and I think maybe a good way is to rewrite the bc code and move the nonzero normal components limitation to where the flux are calculated. Or we can store the flux of the points on the sym bc, and in CFVMFlowSolverBase<V, R>::BC_Sym_Plane we just use the stored flux without recalculation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2174#issuecomment-1868453319:169,simpl,simple,169,https://su2code.github.io,https://github.com/su2code/SU2/pull/2174#issuecomment-1868453319,1,['simpl'],['simple']
Usability,"Hello, @aeroamit . Thank you very much. I try for some times and find that mach number matters. When I simulate two-dimensional lid-driven cavity flow, the flow starts from static. So this case always fails. I try laminar boundary layer case with 0.1 incoming mach number. This time SU2 runs well with AUSMPLUSUP, at a very low CFL number(0.01 or lower), converging slowly. I learn that this scheme is perfect for high speed flow, but it may not be good at low mach number case. Perhaps there are some mistakes when I use it. I think I am not familiar with this scheme enough and that I know SU2 not very well. Before using it in practice, I should read more papers and codes. By the way, SU2 6.2.0 doesn't have the option 'USE_ACCURATE_FLUX_JACOBIANS'. Thanks again. Regards; Cao J. Z.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/628#issuecomment-523374440:376,learn,learn,376,https://su2code.github.io,https://github.com/su2code/SU2/pull/628#issuecomment-523374440,1,['learn'],['learn']
Usability,"Hello, Everyone. Currently, I'm learning to perform unsteady simulation on SU2. I run successfully with the SU2 given tutorial unsteady NACA0012 case in compressible part. However, that case is the one which two restart file are given to performing the unsteady simulation. My question is that how to run the this unsteady case without pre-given restart file. I have tried RESTART_SOL = NO , but the results from this simulation is totally different with the given results as shown in the SU2 website. Specifically, there is no lift or drag coefficient periodic oscillation with time iteration. Can anyone tell me the normal process for performing general unsteady simulation in SU2 and take this SU2 tutorial NACA-0012 case as an example to explain. Thanks very much.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1459:32,learn,learning,32,https://su2code.github.io,https://github.com/su2code/SU2/issues/1459,1,['learn'],['learning']
Usability,"Hello, I am new to SU2 and trying to install it on cluster locally. I am facing issue in compilation and installation step. I used following command to build:; `./meson.py -Dwith-mpi=enabled -Dcustom-mpi=true -Dextra-deps=mpich -Denable-cgns=false --prefix=$HOME/SU2/SU2-Install build`. After which I tried to compile and install:; `./ninja -C build install`. However I am getting an error:; `ninja: Entering directory build; [1/463] Compiling C object externals/metis/libmetis.a.p/GKlib_htable.c.o; FAILED: externals/metis/libmetis.a.p/GKlib_htable.c.o ; cc -Iexternals/metis/libmetis.a.p -Iexternals/metis -I../externals/metis -I../externals/metis/include -I../externals/metis/GKlib -I../externals/metis/libmetis -std=c99 -O3 -fPIC -D_FILE_OFFSET_BITS=64 -DNDEBUG -DNDEBUG2 -DHAVE_GETLINE -DUSE_GKREGEX -Wno-implicit-function-declaration -Wno-unused-result -Wno-unused-parameter -Wno-unused-variable -Wno-unused-but-set-variable -Wno-unknown-pragmas -Wno-sign-compare -Wno-clobbered -Wno-empty-body -Wno-unused-label -Wno-misleading-indentation -Wno-maybe-uninitialized -Wno-pedantic -Wno-error=absolute-value -MD -MQ externals/metis/libmetis.a.p/GKlib_htable.c.o -MF externals/metis/libmetis.a.p/GKlib_htable.c.o.d -o externals/metis/libmetis.a.p/GKlib_htable.c.o -c ../externals/metis/GKlib/htable.c; cc1: error: -Werror=absolute-value: no option -Wabsolute-value; cc1: warning: unrecognized command line option ""-Wno-misleading-indentation"" [enabled by default]`. I am unable to understand if its an issue with GCC compiler of the HPC cluster or something else. Would be a great help if someone can guide me on this. Thanks in advance!. **Cluster Information**; - OS: [CentOS Linux 7]; - C++ compiler and version: [g++ (GCC) 13.2.0] (Loaded as module); - MPI implementation and version: [mpich 4.1.2] (Loaded as module); - SU2 Version: [8.0.0 ""Harrier""]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2182:1604,guid,guide,1604,https://su2code.github.io,https://github.com/su2code/SU2/issues/2182,1,['guid'],['guide']
Usability,"Hello,. I have been debugging the differences between the two versions. I found 5 differences that lead to slightly different results. Two of them have been verified to be an improvement of physical modelling. The other 3 I am still trying to figure out. Could you please run the same tests with MUSCL_FLOW=NO and see if you're still facing this issue?. I see that the MUSCL reconstruction is one of the 3 things that have been modified and not sure if could be the cause of the problem or not. I will keep working on understanding the impact of the other 2 things. When you do this - could you please save the simulation output log of both versions and send those back to me too (in this way I'll have a better feeling of what is happening to the residuals throughout the simulation)? We can just focus on the invbb case to make it simpler.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2026#issuecomment-1562975684:833,simpl,simpler,833,https://su2code.github.io,https://github.com/su2code/SU2/issues/2026#issuecomment-1562975684,1,['simpl'],['simpler']
Usability,"Hello,. I wanted to put a given mass flow and given temperature at an inlet.; Here is the thread: http://www.cfd-online.com/Forums/su2/151385-mass-flow-inlet-given-temperature.html. My workaround was 1) to estimate the pressure (eg. p = p_inf), then 2) to use the perfect gas equation to get the density:; p = rho . Rs . T => rho = p / Rs / T; , thanks to which I could 3) get the velocity:; v = mass_flow / rho / S. Thanks to this, and because my case was quite simple, I could have somehow the desired temperature at my inlets. I think, though, that it would be nice to estimate the local pressure at each iteration, for example by averaging it on the boundary, so as to update the inlet density & velocity.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/181:463,simpl,simple,463,https://su2code.github.io,https://github.com/su2code/SU2/issues/181,1,['simpl'],['simple']
Usability,"Hello,. I'd like to model compressible flow but I have also strongly varying cp (900-2000), gamma (1.2-1.8), mu (1.1-1.6e-5), k (0.012-0.024) and thus Pr (0.8-1.2) in my domain (MachNo 0.1-2, T 270-360K). . Is there any plan to make polynomial properties available with the implicit compressible solver? Or perhaps completely table based eos and properties? Does it matter then if it is an ideal gas or a Peng-Robinson eos? . I consider implementing something myself. According to https://github.com/su2code/SU2/pull/624 it seems to be just a question of ""activating"" the options. Any guidance would be appreciated. . Best regards; Florian",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/794:585,guid,guidance,585,https://su2code.github.io,https://github.com/su2code/SU2/issues/794,1,['guid'],['guidance']
Usability,"Hello,; As a simple user, when I forget to save the last history before continuing a simulation I am very frustrated, because it is lost forever... Since the new history file erases the previous one.; Also, making these history backups is not very practical...; I would very prefer an option in the config file like: ""when RESTART_SOL= YES append to the history or not?"".; I think it would not be difficult to set another variable like: ""max_it must be counted from the beginning or from the last launch?"".; I agree it makes it a bit more complex, but not too much I think :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/99#issuecomment-103369490:13,simpl,simple,13,https://su2code.github.io,https://github.com/su2code/SU2/issues/99#issuecomment-103369490,1,['simpl'],['simple']
Usability,"Hello,; In STAR-CCM+, it's enough to put an outward flow direction on a ""mass flow inlet"" condition to have a mass flow _outlet_.; I tried this with SU2 but the result was not expected (the mass flow was simply not the desired one).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/180:204,simpl,simply,204,https://su2code.github.io,https://github.com/su2code/SU2/issues/180,1,['simpl'],['simply']
Usability,Here is a quick summary for the inviscid wedge case using different NEMO schemes. There is clearly work to be done in the convergence/robustness world.; [nemo_scheme_regressions.pdf](https://github.com/su2code/SU2/files/10441554/nemo_scheme_regressions.pdf),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1885#issuecomment-1386403998:91,clear,clearly,91,https://su2code.github.io,https://github.com/su2code/SU2/pull/1885#issuecomment-1386403998,1,['clear'],['clearly']
Usability,"Here is a simple proof-of-concept for the fluid iteration where we catch SIGTERM. If you run it and hit ctrl-c, we catch the signal and we set stopcalc to true. This will exit the for-loop and also forces a saving of the files.; I think implementing the signal handler like this is the best, because we let the solver handle all the cleanup.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2110#issuecomment-1678550840:10,simpl,simple,10,https://su2code.github.io,https://github.com/su2code/SU2/pull/2110#issuecomment-1678550840,1,['simpl'],['simple']
Usability,"Here is the patch from the develop branch. As I stated before, this adds the 'increment-progress' logic to the vertex export process; this causes the sub-progress bar to shows the progress of the vertex export for a more accurate experience. Thanks again,. Ethan Alan",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/72#issuecomment-56592650:154,progress bar,progress bar,154,https://su2code.github.io,https://github.com/su2code/SU2/pull/72#issuecomment-56592650,1,['progress bar'],['progress bar']
Usability,"Hey @LaSerpe (Giulio),. I had a look at the new driver structure and it look clear to me. My only comments is on the name of the classes: I agree on having a GeneralDriver in place of the SingleZone and MultiZone Driver, as @tobadavid said we should distinguish the drivers for the different physics/applications, but the name CFluidDriver I think is a bit misleading considering the fact that is specifically for multizone fluid with sliding-mesh interface. Perhaps a SlidingMeshDriver sounds better??? Any suggestion from the others?. Regarding the fact that you still have to specify the FSI_MARKER, i would fix this before merging with the develop. . Anyway good job!!! . cheers. Salvo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/322#issuecomment-255340813:77,clear,clear,77,https://su2code.github.io,https://github.com/su2code/SU2/pull/322#issuecomment-255340813,1,['clear'],['clear']
Usability,"Hey @pcarruscag !. Thanks for the suggestions. . 1) That's a good point. I will change the option names to be more specific. . 2) Not a 100% certain what you mean by this. To be clear, instead of allocating memory using the keyword new (MeanReynoldsStress = new su2double* [3];), I should be declaring them statically (su2double MeanReynoldsStress[3][3])? I was following the variable declaration norms I saw in the code. But I guess those were usually for allocations to nDim. Is that what you are suggesting?. 3) I have generalized the Eigen-value functions to n order matrices now. But I think I am going to keep them in the numerics class. Since it seems like that is where they would be most useful. Would you suggest otherwise?. Cheers,",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/570#issuecomment-433784029:178,clear,clear,178,https://su2code.github.io,https://github.com/su2code/SU2/pull/570#issuecomment-433784029,1,['clear'],['clear']
Usability,"Hey @timjim333 that's nice to hear,. I would put it in the .bashrc if you consistently call SU2 with your command, like that you can always switch the SU2-build and still have your clear settings already in place. Image having the master, develop and feature_whatever installed, you don't need to apply your patch to all of these versions if you put it in the bashrc.; But editing interface.py has the same effect, so its up to you what you prefer. Tobi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/526#issuecomment-429668015:181,clear,clear,181,https://su2code.github.io,https://github.com/su2code/SU2/issues/526#issuecomment-429668015,1,['clear'],['clear']
Usability,"Hey guys, I am running into a seemingly super simple problem. I am trying to build SU2(v7.0.2) with python wrapper option, and I got an error ""Run-time dependency python3 found: NO"", but clearly python3 is installed, as shown below:. <img width=""1032"" alt=""image"" src=""https://user-images.githubusercontent.com/42105225/76112937-2e5e3f00-5fb1-11ea-817f-178f4ffd811f.png"">. other info:; - OS: Ubuntu 18.04; - C++ compiler and version: [e.g., g++ (GCC) 7.4.0]; - MPI implementation and version: [e.g., OpenMPI 2.1.1]; - SU2 Version: [e.g., v7.0.2]. Could anyone help on this? Thanks!. Best,. Aaron",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/903:46,simpl,simple,46,https://su2code.github.io,https://github.com/su2code/SU2/issues/903,2,"['clear', 'simpl']","['clearly', 'simple']"
Usability,"Hey,. @cvencro and I were discussing this issue quite a bit this morning and here an attempt of a summary:. We are looking at the following cases:; 1. 3D Onera m6, compressible euler, including euler_wall and sym_plane ; a. steady state; b. unsteady (no pitching, deforming); 2. 2D NACA64A010, compressible euler, including euler_wall; a. unsteady (no pitching/ deformation); b. pitching (with rigid and with deforming mesh -> used for the gradient validation of @cvencro 's post ). We are rather certain that the differences between the code-versions are due to the new euler_wall boundary which was introduced in #740 (by me :) ). @cvencro did a test where the old euler_wall was simply pasted into the newer function body (which currently directly calls the sym_plane boundary) -> that recovered the results obtained with the 'older' version. The steady state results (onera m6) show that both codes deliver the same results (of course with some minor differences). So far so good. Unsteady cases are a bit trickier: the latest 2D results of @RoccoBombardieri show pretty much no difference including the first timesteps. The onera m6 case in contrast converges to the same (steady-state) results for both code version eventually but their initial transient phase differs quite significantly. . A possible explanation for the different initial transient phase: In both implementations a ""reflected state"" is constructed where the normal component of the velocity is subtracted [once in the older code version & twice in the newer version]. I.e. subtracting the normal component of velocity twice means mirroring the velocity along the symmetry plane. The newer code version is a bit ""stronger"" in enforcing the boundary conditions which could lead to the reduced oscillation in CD and CL. If we agree that both code versions produce physically correct results for steady cases and unsteady cases that were integrated long enough in time to get rid of the influence of the initial condition ... then",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-563314747:682,simpl,simply,682,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-563314747,1,['simpl'],['simply']
Usability,"Hi -. I'm at the AIAA meeting this week and downloaded SU2 after listening to few talks. I noticed you guys optionally link to tecio, the templet binary API, when it is available. . I'm the project manager of the libMesh finite element library, a general purpose C++ finite element library (http://libmesh.sourceforge.net). I also work at NASA/JSC in the Aerosciences & CFD group, hence the potential interest in SU2. In libMesh, we build a number of optional software dependencies from source - Metis, ParMetis, tecio, etc… We find this much preferable to requiring (simple) dependencies to be preinstalled by the user. This pull request adds the source files for tecio, along with automake integration, so that the Tecplot dependencies can be satisfied internally to SU2. The Tecplot tecio source is distributed openly at http://www.tecplot.com/downloads/tecio-library, so there are no issues with redistribution. Some notes on the implementation:; 1. It includes all the tecio sources,; 2. It includes the configure.ac & Makefile.am changes required. Specifically, I did _not_ update the Makefile.in or configure scripts you have checked in to your master, as my autotools are quite newer and doing so would result in unnecessary diffs. So I ask - do you guys have a requirement on the version of autotools you are using, since you are checking in derived files?. See relevant discussion here http://stackoverflow.com/questions/4873065/autotools-and-version-control. If you like this approach, I'll follow up with a similar implementation for building Metis from source as well.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/21:568,simpl,simple,568,https://su2code.github.io,https://github.com/su2code/SU2/pull/21,1,['simpl'],['simple']
Usability,"Hi @Eduardo-Carvalho ,. your request is now merged into the develop branch and you can test/use it if you like. It will be in one of the next releases, if no further issues occur.; Handling is intuitive: Just set your restart iteration in the config file as you would do normally and activate the restart solution option. Furthermore, place your restart file (two in the case of 2nd order time integration) in the same directory as the config file of your test case. Then you are set up and can run the scripts as normal. ; For more details, I refer to pull request #964. . Best; Steffen",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/909#issuecomment-630289600:193,intuit,intuitive,193,https://su2code.github.io,https://github.com/su2code/SU2/issues/909#issuecomment-630289600,1,['intuit'],['intuitive']
Usability,"Hi @EduardoMolina . I will add this in the test repo. It is a standard case used in majority of the papers (relevant).; What are the changes/additions I need to carry out , can you guide me with the procedure of adding the test case in repo. Regards; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/631#issuecomment-455009027:181,guid,guide,181,https://su2code.github.io,https://github.com/su2code/SU2/pull/631#issuecomment-455009027,1,['guid'],['guide']
Usability,"Hi @EduardoMolina,. That is something I am also interested in as for some of my structural cases the current linear solvers simply do not converge. However Eigen is not the tool for that as the sparse linear solvers it has are similar and are not distributed parallel.; When I opened this issue I was thinking exclusively about how we handle small-medium dense matrices that live on a single rank, and associated algorithms (the kind used for RBF interpolation for example).; I think the two issues are fairly orthogonal, so we can open another to discuss large solvers, for which related work has already been started. Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-460666656:124,simpl,simply,124,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-460666656,1,['simpl'],['simply']
Usability,"Hi @Nicola-Fonzi,. I'm not 100% sure of the reasons behind the GetFSI_Simulation criteria. I'd imagine that the nMarker_Fluid_Load might have been included there to make sure that a problem is treated as FSI only if there is transfer of load from the fluid to the structural domain, even if both zones existed independently in the config. But since the GetFSI_Simulation check is set up as an ""or"" rather than ""and"", as long as one of them is satisfied, the logic will be true for an FSI simulation, which might be sufficient for your application?. For the velocity transfer, I agree with Rafa that it would be better if you could also transfer the velocity from the external structural solver. If an external structural solver is used for dynamic analysis, it probably can output the structural velocities as well as the structural displacements? I left the methods for the recalculation of the grid velocity using finite differences in the code to support fluid-only problems with dynamic grid motion, I wouldn't suggest this as the method for FSI problems. For primal analysis, results from both methods agree with FSI benchmark cases but if you are interested in adjoint analysis at any point, transferring the velocity information from the structural domain directly to the fluid domain gives a significant simplification and improvement to the gradients.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174#issuecomment-778368854:1312,simpl,simplification,1312,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-778368854,1,['simpl'],['simplification']
Usability,Hi @TobiKattmann . I am OK if we clearly explain the changes in the config template as my main concern is with the users side.; Thanks!. Eduardo,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/735#issuecomment-513959331:33,clear,clearly,33,https://su2code.github.io,https://github.com/su2code/SU2/issues/735#issuecomment-513959331,1,['clear'],['clearly']
Usability,"Hi @antares190,. Glad to see that things seem to be starting to work for you. We (Brian) are trying to improve this capability in the solver and any experiences / suggestions / help will be welcome. With that said, this seems like an interesting result. Would you mind submitting it (or other pictures that you like better) so the SU2 Foundation can use it to show this capability to others in the future? The link where you can do this is here<http://su2foundation.org/su2-promotional-material/?utm_source=hs_email&utm_medium=email&utm_content=76584389&_hsenc=p2ANqtz-9fEq2awKk2vd155cCcN_N4mWBCZK-rJ-TqNsZhqSJs-VWn-w7q-H6w8sdiA3LyuOTqlK4eqZhFFstKi-LQFyyGqYPdkwYc9JsNdB1yyd7pqMwTFzA&_hsmi=76584389>. Thanks a lot,. Juan. On Apr 29, 2020, at 1:38 PM, antares190 <notifications@github.com<mailto:notifications@github.com>> wrote:. Thanks Brian,; my bad, I misinterpreted the carpets / logs structure. I successfully ran a test of a very simple case. In the results there are some small artifacts, but the shocks are resolution improved consistently after mesh adaption.; Thanks for the support. [Comparison]<https://user-images.githubusercontent.com/41752169/80644172-84a7a580-8a69-11ea-9f16-58e98c808b73.png>; [ComparisonMesh]<https://user-images.githubusercontent.com/41752169/80644174-85403c00-8a69-11ea-819f-2ac00550a089.png>. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/948#issuecomment-621450497>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AA5FFRCGLBHJCB3FS4JSSV3RPCF5RANCNFSM4MQACOXA>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-621483859:935,simpl,simple,935,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-621483859,1,['simpl'],['simple']
Usability,"Hi @bmunguia ,; I was in the same situation as @MiracAydin1, so thanks for the hint. Nevertheless I'm having some problems. I followed your instructions to install the branch:. 1. downloaded the [feature_adapt_sst](https://github.com/su2code/SU2/tree/feature_adap_sst) branch.; 2. Used meson to configure the build; `./meson.py build -Denable-autodiff=true -Denable-directdiff=true`; 3. Added the environment variables to the .bashrc; 4. ninja build.; `./ninja -C build install`. The build didn't show any errors, only few warnings during meson ( `gcc1: warning: command line option ‘-Wno-non-virtual-dtor’ is valid for C++/ObjC++ but not for C`). When I try to run the mesh_adaption (or even run simply the solver through parallel_computation.py):. `$SU2_RUN/mesh_adaptation_amg.py -f invCyl.cfg -n 6`. It immediately shows an error (without even showing the SU2 splash screen) :; `Traceback (most recent call last):`; ` File ""/usr/local/bin/mesh_adaptation_amg.py"", line 38, in <module>`; ` import SU2`; ` File ""/usr/local/bin/SU2/__init__.py"", line 14, in <module>`; ` from SU2 import amginria`; ` File ""/usr/local/bin/SU2/amginria/__init__.py"", line 4, in <module>`; ` from .interface import *`; ` File ""/usr/local/bin/SU2/amginria/interface.py"", line 41, in <module>`; ` import _amgio as amgio`; `ImportError: No module named _amgio`. Am I missing any dependencies? ; Please note that I previously compiled SU2 master branch without issues, and have already installed mpich, numpy, scipy.; Any help would be really appreciated.; Thanks",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-619332650:697,simpl,simply,697,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619332650,1,['simpl'],['simply']
Usability,"Hi @clarkpede ,. Thanks for the contribution. The example of the central/upwind blending is very clear. Ready to merge. Eduardo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/850#issuecomment-620948043:97,clear,clear,97,https://su2code.github.io,https://github.com/su2code/SU2/pull/850#issuecomment-620948043,1,['clear'],['clear']
Usability,Hi @clarkpede and @economon .; Thanks for the clear explanation.; Merging now. Eduardo,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/649#issuecomment-463729246:46,clear,clear,46,https://su2code.github.io,https://github.com/su2code/SU2/pull/649#issuecomment-463729246,1,['clear'],['clear']
Usability,"Hi @cvencro , I think it would be good to add that Testcase to the regression tests to 'guard' the code. ; I actually wanted to do that real quick but it guess that with `SINGLEZONE_DRIVER` one cannot access `TIME_ITER`, only `EXT_ITER` with the` .test_iter` variable of the python Testcase class. Not sure if that is addressed in #724 , maybe @rsanfer or @talbring can give a quick info as this is probably affecting all unsteady regression tests. . Concerning the Testcase repo: You can simply open a PR for the develop branch of the Testcase repo, and refer to the corresponding PR here (and vice versa). As far as I know the Testcase repo is not protected, i.e. you can merge without any check. And as it is just one added mesh and no other change you could do it right now from my point of view. Another point: What about the rotating_frame for incompressible flow? If it is untested I would like an error catch in place that this feature can't be used out of the box.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/767#issuecomment-527167827:489,simpl,simply,489,https://su2code.github.io,https://github.com/su2code/SU2/pull/767#issuecomment-527167827,1,['simpl'],['simply']
Usability,"Hi @koodlyakshay thanks for making the changes.; By default MPI barriers are ""never"" needed, the normal communication routines already do all synchronization required. Efficiency is probably not fundamental for that routine but this solution feels too complicated somehow, can you attend tomorrow's developers meeting? (I'm getting the ""there's gotta be a simpler way"" feeling, and if we pick the brains of a few people we are certain to find it). In the meantime, if you specify the roughness as a string+double list (exactly like MARKER_HEATFLUX), which is read with `addStringDoubleListOption` you could probably simplify the logic around heatflux and isothermal markers, which would make the setup more user friendly (having to stick with an order is bound to trip someone at some point).; Also the cht interface is ""just"" an isothermal boundary, any reason not to make this feature available for that?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/877#issuecomment-630788337:356,simpl,simpler,356,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-630788337,2,['simpl'],"['simpler', 'simplify']"
Usability,"Hi @pcarruscag I just tried a simpler mesh and using MPI I get the UCX crash.; [err_log_SU2v7.0.3.txt](https://github.com/su2code/SU2/files/5810207/err_log_SU2v7.0.3.txt). To double check, I also used the master v7.0.8 SU2_CFD. When I run with MPI, I get the UCX error but when I run in serial, the solution appears to converge fine. I suspect that this means it's probably not the mesh that is causing the issues - what are your thoughts?; [su2_out_serial.txt](https://github.com/su2code/SU2/files/5810208/su2_out_serial.txt)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1156#issuecomment-759607361:30,simpl,simpler,30,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156#issuecomment-759607361,1,['simpl'],['simpler']
Usability,"Hi @pcarruscag and @aeroamit ,. Thanks for the discussion and for share the ideas/results. I think this is the beauty of open-source, everyone is welcome to jump in and review all the pull requests. Certainly, as you said @aeroamit, we will all learn something fruitful when we review and merge each PR. Best regards,. Eduardo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/691#issuecomment-511209774:245,learn,learn,245,https://su2code.github.io,https://github.com/su2code/SU2/pull/691#issuecomment-511209774,1,['learn'],['learn']
Usability,"Hi @pcarruscag and @vdweide ,. Thanks for creating a test branch and for bringing this discussion. When Brian (@bmunguia ) and I mentioned PETSc, it was an idea to try a different Newton-Krylov (with preconditioner) library in order to improve the convergence of SU2. ; Since the slow convergence of the SU2-FV is the main feedback that I received from other users from industry and academia, I think it worth try an external library and evaluate the performance. ; I will be happy to help test Eigen and see if it is a good candidate. Best,; Eduardo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-460479862:323,feedback,feedback,323,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-460479862,1,['feedback'],['feedback']
Usability,"Hi @pcarruscag, just a small follow-up to my comment in the code section concerning the new adjoint implementation that might also help here (either by using it directly or just for getting some ideas). What I would like to change is in fact not the `CDiscAdjSolver` (which I find is very good) - but I'd like to propose some changes for the *interface* to the AD tool. And some subsequent stuff.; It will allow for a more direct control of derivatives which is favourable in case one deals with multiple zones, multiple sets of conservative variables, geometry coordinates in case of FSI, and so on. And of course in terms of performance as one needs only one tape that one can keep during all iterations, regardless of what their variables might be. In case you are interested, take a look at the implementation in [su2code:sc_develop](https://github.com/su2code/SU2/tree/sc_develop). I'll open the PR as soon as @talbring opened his one for his great rework on input/ouput. As for this PR, let me wait a second if we can clear up the issue concerning the registration and I'll leave a small review afterwards.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/615#issuecomment-457582842:1024,clear,clear,1024,https://su2code.github.io,https://github.com/su2code/SU2/pull/615#issuecomment-457582842,1,['clear'],['clear']
Usability,"Hi @pcarruscag,; You are right, it shares a lot of code with previous PR. Here constants does not change. Differences are as follows - . 1- It has different pressure flux definition (new expression); 2 - Here sum of squares of velocity components were needed for left and right state; 3- removed few variables and added few.; 4- Also left and right state split Mach numbers are Mach number polynomials only (for programming purpose) without pressure terms. Previously SLAU and SLAU2 scheme have already been implemented in the code separately. I mean some of these sucessive schemes share a lot of common formulation but differ with some expressions, constants etc. ; So it may be fine to keep them separate. . I will see your advice and further look into similar variation implementation in the code (sorry if I missed out some simple point you mentioned). . Thanks ; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/631#issuecomment-446730390:829,simpl,simple,829,https://su2code.github.io,https://github.com/su2code/SU2/pull/631#issuecomment-446730390,1,['simpl'],['simple']
Usability,"Hi @pcarruscag,; thank you very much for the insight and the well thought proposed solution. I wasn't aware that there was such a loss in performance, it seems clear that something needs to be done. The only question I have is regarding the following comment . > There are no free lunches and this performance improvement would come at the cost of losing the ability to have different types of variables in different parts of the domain. I'm using this feature more and more, I was planning to extend it in the structural solver to remove the `if fsi` statements, and I also used it in the rework of the mesh solver, as defining variables at the interface only reduces greatly the memory footprint (sort of like the node-vertex structures in geometry). You mention there are options to keep this versatility, how difficult do you think would be to implement them?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-507998889:160,clear,clear,160,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-507998889,1,['clear'],['clear']
Usability,"Hi @rois1995 . For now, I'm ignoring all TKE in Total Energy in personal research. I don't remember the details clearly. ; The problem was that the enthalpy added TKE was stored in the primitive variables. ; When I tried to fix it, the problem was when the enthalpy added TKE was stored in the primitive variables. For the Roe scheme in convective flux calculations (not sure about other flux scheme), the Roe speed of sound is calculated using enthalpy. But as I mentioned above, the stored enthalpy is higher than other simulation because of TKE. I thought it make a problem.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1851#issuecomment-2245163889:112,clear,clearly,112,https://su2code.github.io,https://github.com/su2code/SU2/issues/1851#issuecomment-2245163889,1,['clear'],['clearly']
Usability,"Hi @rois1995. The LM model code under the development clearly has some problems. I've not finished yet all validation cases for commonly used. So, I can't help with the E387 profile problem. but, I think I can give some helpful comments. . Check the numerical scheme which you used. like Roe and L2Roe, AUSM and SLAU. In my case, I didn't think to use the low dissipation scheme because I thought the code was wrong. I upload the configure file for the T3A flat plate case, which I used.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1592#issuecomment-1111261534:54,clear,clearly,54,https://su2code.github.io,https://github.com/su2code/SU2/pull/1592#issuecomment-1111261534,1,['clear'],['clearly']
Usability,Hi @simonvanderveldt. Thanks for the questions. The custom meson.py script shipped with su2 also initializes the git submodules. You can of course also use an installed version of meson/ninja for building (should be also noted in the documentation on the website) by simply replacing `./meson.py` with `meson`.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/911#issuecomment-598496636:267,simpl,simply,267,https://su2code.github.io,https://github.com/su2code/SU2/issues/911#issuecomment-598496636,1,['simpl'],['simply']
Usability,"Hi @talbring, I cannot agree more with you, . @JSmith36 has introduced too many changes in one pull request which has, as you pointed out, some important problems. On the other hand, @JSmith36 situation is not so strange. It is quite common to find contributors who are working on their own branch for a long time and at a certain point decide to contribute (which is very generous of them). My suggestion is the following... let's keep the pull request open (we don't want to lose this contribution) and meanwhile, @JSmith36 why don't you create pull request with the most-easy to- divide parts of your contribution. e.g. Let's start with ; ""Renaming of the keywords REF_LENGTH_MOMENT (the word MOMENT was really confusing) or RefAreaCoeff."". That is easy to reimplement and it will simplify the main pull request. For the future, please, let's all of us to keep the contributions the most simple and modular as possible. Thank you very much to each of you who contribute to this great community and great code!. Best,; Francisco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/412#issuecomment-315563582:784,simpl,simplify,784,https://su2code.github.io,https://github.com/su2code/SU2/pull/412#issuecomment-315563582,2,['simpl'],"['simple', 'simplify']"
Usability,"Hi @talbring,; thanks for this, I think it makes the output a lot clearer. ; We should merge this in soon, and open a discussion on how to improve the screen output, not only in terms of the residual convergence (I know you have been working hard on that and it's looking great) but also on the initial print-out, which is currently very chunky and not so easy to add new options to.; Ruben",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/633#issuecomment-455978636:66,clear,clearer,66,https://su2code.github.io,https://github.com/su2code/SU2/pull/633#issuecomment-455978636,1,['clear'],['clearer']
Usability,"Hi @themrdjj,; Thank you for the feedback, there was already a similar report in #796 (which incidentally went stale and was closed), I will try to do something about it, or if you would like to contribute code to the project I can point you to right place to add an error message. Meanwhile my best advice is to not start a config from scratch until you know SU2 very well (and even then...) look for a test case that uses similar features and go from there.; The minimal config is the one in Quickstart, the template is more of a catalog :) I don't think we'll ever have a unified minimal config, SU2 does many things, some mutually exclusive.; Convective options are reasonably well documented here: https://su2code.github.io/docs_v7/Convective-Schemes/; The output messages before ""Begin Solver"" can be helpful (although in this particular case you would need to know what to expect). Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/842#issuecomment-566642727:33,feedback,feedback,33,https://su2code.github.io,https://github.com/su2code/SU2/issues/842#issuecomment-566642727,1,['feedback'],['feedback']
Usability,"Hi @timjim333 ,. Exactly (concerning your first question). . For the %s : In your initial post you stated that `mpirun --use-hwthread-cpus -np 12 SU2_CFD turb_ONERAM6.cfg` worked for you. So %s is simply the place-holder for the SU2 module together with the configure script. Which in your case would be `SU2_CFD turb_ONERAM6.cfg` . But `parallel_computation.py` will also call `SU2_SOL turb_ONERAM6.cfg` for you after the solver routine to create output files for visualization. ; If you take a look into the `interface.py` (as in my previous post) and the `parallel_computation.py` you'll find exactly how its done. Cheers, Tobi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/526#issuecomment-395712721:197,simpl,simply,197,https://su2code.github.io,https://github.com/su2code/SU2/issues/526#issuecomment-395712721,1,['simpl'],['simply']
Usability,"Hi Akshay,. Yes this is a simple fix and it could go in quickly on it's own or as part of another PR. I have this fix already modified in the draft PR #833 which is just pending the addition of a test case. I can add that and move to a PR soon if you are happy to wait?. Best wishes,; Charanya",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/860#issuecomment-582340873:26,simpl,simple,26,https://su2code.github.io,https://github.com/su2code/SU2/issues/860#issuecomment-582340873,1,['simpl'],['simple']
Usability,"Hi All,. We are lucky, Florian Menter just replied to me. He agreed that the factor (1-F1) should activate the CD term only at the ""k-epsilon"" branch, where the CD term is already positive.; Therefore, clipping with zero is in terms of the model and is not incorrect. Me: A simple boundary layer simulation will reveal that the CD term switch sign is inside the boundary layer and that the F1 function switches from 1 to zero outside the boundary layer. Namely, the CD term should be positive. Florian is unaware of the occasions when it may be negative (even though the model was designed so that this term will be activated when it is positive). . Best wishes,; Yair",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2256154395:274,simpl,simple,274,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2256154395,1,['simpl'],['simple']
Usability,"Hi Amir,; If you create a solver object inside numerics how will this new solver know about the solver that is actually using numerics? The way the code is written does not make the relations between classes very clear as the solver and numerics containers get passed around quite freely... But the solvers are clients of the numerics (I think there are good diagrams of this in some of the papers), i.e. the solvers call methods of the numerics and not the other way around.; It is the numerics that needs a method whereby the solver can set the value of cb1, this is more or less what is done in the elasticity solver, so yes, try to follow that ""recipe"" as close as possible and it should work.; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/679#issuecomment-494118969:213,clear,clear,213,https://su2code.github.io,https://github.com/su2code/SU2/issues/679#issuecomment-494118969,1,['clear'],['clear']
Usability,"Hi Amit,; That is also my intuition, I guess the only way to know if it is worth the extra cost is by doing.; Do you have a good supersonic case I can use for testing (all my work is subsonic)? Preferably something that converges well without initialization.; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/691#issuecomment-499876619:26,intuit,intuition,26,https://su2code.github.io,https://github.com/su2code/SU2/pull/691#issuecomment-499876619,1,['intuit'],['intuition']
Usability,"Hi Economon,. I encountered an issue very similar to what Auzbaig reported: the error message ""OBJECTIVE_FUNCTION: invalid option value EntropyGeneration"" during optimization with SU2. (I am using SU2 version 8.0.1 ""Harrier.""). After thoroughly examining the existing Python optimization framework, I found that one of the steps in the optimization chain is generating different config.cfg files, with a focus on DV_VALUE and OBJECTIVE_FUNCTION. DV_VALUE controls the geometry deformation;; OBJECTIVE_FUNCTION determines the type of objective/constraints.; Then the framework calls SU2_CFD and SU2_DOT to obtain performance metrics or gradient information.; As you mentioned, ""You might need to run updateHistoryMap.py to register new outputs with Python."" Initially, I thought it meant simply providing a new input for OBJECTIVE_FUNCTION in the Python optimization framework. However, it seems that this may not work at the C++ level. To verify this, I ran $ SU2_CFD your_config.cfg -d and observed all available history outputs. However, I suspect that OBJECTIVE_FUNCTION cannot use every history output, meaning that the adjoint solver might not recognize some objective functions. Does this imply that additional modifications in the C++ code are required?. Additionally, I would appreciate more information regarding CUSTOM_OBJFUNC. From TestCases/user_defined_functions/lam_flatplate.cfg, I understand that CUSTOM_OBJFUNC allows combinations of existing OBJECTIVE_FUNCTIONs and can also utilize CUSTOM_OUTPUTS. The flexibility of CUSTOM_OUTPUTS seems to enable the construction of various desired variables. However, I am unsure whether using OBJECTIVE_FUNCTION= CUSTOM_OBJFUNC along with CUSTOM_OUTPUTS can entirely replace the need for additional modifications in the C++ code. Since I’m not very proficient in C++, I would greatly appreciate your guidance. Sincerely,; Tongtong",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/889#issuecomment-2324575133:787,simpl,simply,787,https://su2code.github.io,https://github.com/su2code/SU2/issues/889#issuecomment-2324575133,2,"['guid', 'simpl']","['guidance', 'simply']"
Usability,"Hi Eduardo,. both, 'symmetry plane' and 'symmetry as the slip wall' should work in the code (upon fixing this) and it should be made clear (e.g. in the config_template.cfg) what the BC is suitable for, independent of how it is named in the end. ; The simplest solution is probably the patch I provided together with a short note in the config_template (maybe even a reference to this issue), as both 'options' will work as expected (using the very same code). It will basically 'restore' the behaviour of MARKER_SYM of before the fix in #657. The downside is some more computational cost (in case of a plane) which has to be done for each vertex on the marker. I cant say to which extend this takes more time but I would guess it is not too costly. Depends on the case as well. I can do a little check with your case here. . That's it for the diplomatic part :) (Please take the following with a grain). For me a symmetry has to be a line or plane. To cite Jiri Blazek's book 'Computational Fluid Dynamics'(...) 3rd edition using a screenshot:. ![blazekbook](https://user-images.githubusercontent.com/31306376/61662377-9ab05a80-acce-11e9-85bf-5998db204d92.png). The chapter is called 'symmetry plane' which already is kinda biased. But there is no 'slip wall for viscous flow' mentioned to my knowledge. In another book (from Ferziger&Peric, which I only have in german) symmetry is only used in the context of symmetry planes as well. ; To me, symmetry BC's are also linked to visualization using mirroring. And mirroring (as the word is commonly meant) is only possible along planes and its little brother, the straight line. I can be wrong or it might be a question of research background. So how to proceed? Trial by combat might have some unpleasant aftermath for the winner so we might go the democratic way and do a poll :) . Cheers, ; Tobi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/735#issuecomment-513957018:133,clear,clear,133,https://su2code.github.io,https://github.com/su2code/SU2/issues/735#issuecomment-513957018,2,"['clear', 'simpl']","['clear', 'simplest']"
Usability,"Hi Folks,. I would like to collect the views of the community about something (and I apologize if this has been debated already). Context:; Once again I find myself working on a feature that will require a bit of dense algebra.; I think implementing (i.e. paraphrasing from Numerical Recipes...) that kind of routine is a waste of time because someone has done already, and they have done it well.; Moreover, we have a very inefficient implementation of small matrix-like objects (arrays of arrays) and associated operations, which also leads to code bloat due to the required allocation / initialization / destruction. Proposal:; Start using a linear algebra library such as [Eigen](http://eigen.tuxfamily.org/index.php?title=Main_Page).; For this particular library:; - The learning curve is minimal;; - Their license (MPL2) is less restrictive than SU2's;; - No link time dependencies (it is all header files);; - Compatible with AD (everything is templated);; - I like their logo... I look forward to hear your opinions on this. Best regards,; Pedro",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643:776,learn,learning,776,https://su2code.github.io,https://github.com/su2code/SU2/issues/643,1,['learn'],['learning']
Usability,"Hi Giulio,; Thank you for the feedback. I inherited some of this code from a previous student of my PhD supervisor and I thought the same when I saw the CSymmetricMatrix class. However, as I understand it, CSysMatrix implements a block sparse format and here we have a simpler dense format. Another big difference is that CSymmetricMatrix does not need to be used in parallel. But I agree that making these two classes related somehow would be better, so I am open to suggestions.; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/555#issuecomment-406516746:30,feedback,feedback,30,https://su2code.github.io,https://github.com/su2code/SU2/pull/555#issuecomment-406516746,2,"['feedback', 'simpl']","['feedback', 'simpler']"
Usability,"Hi Heather, I think we are getting closer. Something that is not clear for me is why we can only combine objective functions with the continuous adjoint. In principle, it is ""easier"" to combine objective functions with he discrete adjoint. Isn't it? Is there a particular reason for not combining the objective functions with he discrete adjoint? Thanks! Francisco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/385#issuecomment-296408505:65,clear,clear,65,https://su2code.github.io,https://github.com/su2code/SU2/pull/385#issuecomment-296408505,1,['clear'],['clear']
Usability,"Hi JSmith86,. I really appreciate your effort in cleaning up the changes. But it looks like as if there are still a lot of changes in other parts that are not related to the things you describe. Furthermore I really request you to split this up in multiple commits so that it is immediately clear what you did in each single one (this can be done quite simple with a proper diff tool like [meld](http://meldmerge.org/)). Let me emphasize that this is not to bother you in any way but rather to ease understanding and maintainability. I know from my own experience that this requires some additional work, but in the end it certainly pays off. . Thanks!; Tim",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/412#issuecomment-315320576:291,clear,clear,291,https://su2code.github.io,https://github.com/su2code/SU2/pull/412#issuecomment-315320576,2,"['clear', 'simpl']","['clear', 'simple']"
Usability,"Hi Jairo, . what is the status here ? Is it possible to provide a simpler (smaller) case ?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-445175541:66,simpl,simpler,66,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-445175541,1,['simpl'],['simpler']
Usability,"Hi Jean,; Sorry for the delay. The hypothesis I have for the less robust behavior of periodic BC's is that the linear solver is not completely aware of the periodicity. In fact after the linear solve we have to force the matching nodes to have the same value.; This is done in CFVMFlowSolverBase.hpp::CompleteImplicitIteration_impl, in the call to InitiatePeriodicComms.; The idea is to make the linear solver aware of the periodicity, to do so would require including periodic communications in the preconditioners and the matrix-vector product.; These are all in CSysMatrix.cpp, so before each of the `/*--- MPI Parallelization ---*/` bits we would need periodic comms, for preconditioners these comms would simply make the values equal, like in CSolver::InitiatePeriodicComms(PERIODIC_IMPLICIT) whereas for the matrix-vector product we need to add the values (effectively periodicity splits a row of the matrix into two ""half rows"") and this would be similar to what is done with the linear residual in CSolver::InitiatePeriodicComms(PERIODIC_RESIDUAL).; I think @TobiKattmann was also interested in having a look into this.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1467#issuecomment-1017640248:710,simpl,simply,710,https://su2code.github.io,https://github.com/su2code/SU2/issues/1467#issuecomment-1017640248,1,['simpl'],['simply']
Usability,"Hi Josip,. in the current develop/master these features are still included. However, the plan is to remove these. The reason is simply because of maintenance. We have nobody that can spare time to test the current implementation. If you are willing to do this, please let use know. Tim",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/348#issuecomment-268010192:128,simpl,simply,128,https://su2code.github.io,https://github.com/su2code/SU2/issues/348#issuecomment-268010192,1,['simpl'],['simply']
Usability,"Hi Pedro, ; As discussed last week, I now translate and rotate the whole aircraft in the elastic mesh in combination with a farfield onflow. Implementing and doing the coordinate transformations right took me a few hours, but now everything seems to work properly and fast :). 1. Currently, activating the gust resets/overwrites the grid velocities due to the deformed mesh, but I haven't found the place yet. Any ideas?. 2. Should I clean up / remove the split velocity approach as described in the first post or would you like to keep it?. 4. How to handle the new approach, should I close this pull request and open a new one? There are a few commits which I needed to undo. 5. Generally, I still need the rotating frame approach for steady maneuver load cases, e.g. to calculate the pitching, rolling or yawing aircraft in a steady simulation. The acceleration terms are zero in this case, but I understood that the Coriolis-Term with omega x velocity is missing. Is that correct? I guess they are probably important for objects like a propeller which spins at a couple of thousand RPMs but maybe it is justified to neglect them for slow objects?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1954#issuecomment-1505397240:672,undo,undo,672,https://su2code.github.io,https://github.com/su2code/SU2/pull/1954#issuecomment-1505397240,1,['undo'],['undo']
Usability,"Hi Pedro, ; I'm slightly confused right now and not sure if I'm able to do the necessary modifications. I understand that it is unlikely someone else might implement this but I think that this is beyond my abilities right now. If you don't mind, do you have some time to talk through my options in a video call? I hope that will help me to get a clearer picture. Next week, I'm generally available except for Monday, which is a public holiday here. Germany is 9 hours in advance of California, so your morning / my evening might work?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1954#issuecomment-1497398492:346,clear,clearer,346,https://su2code.github.io,https://github.com/su2code/SU2/pull/1954#issuecomment-1497398492,1,['clear'],['clearer']
Usability,"Hi Pedro, thanks for looking into this more. I had run into inconsistencies for FSI problems with relaxation which was the reason for the domain specific calls coming into the multizone driver Update function. With the changes I introduced, the velocity at the interface was being transferred correctly with and without relaxation, so I left it there but it is a bit messy. I'll test with the modified calls for the Relaxation as you suggest. I completely agree that if we can simplify the velocity transfer by just using the velocity directly, then we should. Especially since the predicted velocity is only zero order anyway.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174#issuecomment-774993325:477,simpl,simplify,477,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-774993325,1,['simpl'],['simplify']
Usability,"Hi Pedro, thanks for the idea to update the windowing directly! I've updated addValue such that the values are added for new time only (replaces existing values if it is still the same time iteration). This is a lot simpler and very happy to remove the convoluted logic. The SetUpdate_Averages was still necessary though to pass the regression test for unsteady_cylinder_windowed_average.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1259#issuecomment-819111992:216,simpl,simpler,216,https://su2code.github.io,https://github.com/su2code/SU2/pull/1259#issuecomment-819111992,1,['simpl'],['simpler']
Usability,"Hi Pedro,. I can confirm that everything is now working correctly. I have tested the sensitivities against gradients from finite difference runs and the results match very closely.; I owe you a big thank you for your help with this, not only has my problem been solved but you also helped me learn a great deal about how the code works. Really appreciate it.; If we ever meet one day then drinks are on me :); Cheers,; Amir",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/679#issuecomment-500911599:292,learn,learn,292,https://su2code.github.io,https://github.com/su2code/SU2/issues/679#issuecomment-500911599,1,['learn'],['learn']
Usability,"Hi Pedro,. It is indeed a good idea to keep similar schemes (with minor variations) under one umbrella, especially central scheme as only the dissipation term calculation differs. . - In case of AUSM+-up1/2 and SLAU1/2, each can be reduced by having a separate pressure flux definition. - But if we try to combine AUSM+-up and SLAU, will it be a clear/helpful implementation as mass flux definitions/calculations (which is substantial portion) are different (unlike the central scheme, where only dissipation term varies)?. - Also could you please shed some light on Jacobian part for these schemes (as you mentioned - “...Isolating the computation of mass and pressure fluxes could be an interesting way to compute the Jacobians of these schemes in a hybrid way ...”). Best; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/691#issuecomment-499205201:346,clear,clear,346,https://su2code.github.io,https://github.com/su2code/SU2/pull/691#issuecomment-499205201,1,['clear'],['clear']
Usability,"Hi Ruben,. Thank you for your feedback !. It is hard to tell what to do you to avoid conflicts. Anyway, the most significant part of the changes concerns the parent CDriver class, especially the constructor and some new functions that are pieces of code coming from the main function (like Output and Monitor). So if the contributions are focused on one particular driver (single, multi, ...) and if they are more or less compatible with the main ""driver->run"" then ""driver->update"" structure, it should be straightforward to solve the potential confilcts. Best,. David",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/295#issuecomment-237702911:30,feedback,feedback,30,https://su2code.github.io,https://github.com/su2code/SU2/pull/295#issuecomment-237702911,1,['feedback'],['feedback']
Usability,"Hi Soumen,. As Tom said, the routines are all in place and I have been putting them; together for solution interpolation from one mesh to another for unsteady; simulation as post-processing step. So probing at a particular location for; unsteady solution can be also done with this framework. The probe search; implementation is in place for 2D configuration currently. It will be; extended to 3D and probably available in the main branch in the next 2; months.; The implementation so far is in feature_MeshInterpolation branch if you; want to take a look. Sravya. On Thu, Nov 2, 2017 at 10:09 PM, Thomas D. Economon <; notifications@github.com> wrote:. > Hi Soumen: yes, this is something that the developers are actively working; > on at the moment (in particular, @sravya91 <https://github.com/sravya91>; > has been taking the lead on this). It is true that most of the ingredients; > are already available in SU2 (fast searches, interpolation routines, etc.),; > but the trick is combining them all and making it general.; >; > Do you have any other requirements beyond simple probes? I am guessing we; > should have something available in the next few months, but it's not set; > yet.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/466#issuecomment-341623660>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AHenII5B0Xtb2U_hj2vbBesf5Oc51uvzks5syqAEgaJpZM4QPYh8>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/466#issuecomment-342266341:1074,simpl,simple,1074,https://su2code.github.io,https://github.com/su2code/SU2/issues/466#issuecomment-342266341,1,['simpl'],['simple']
Usability,"Hi Soumen: yes, this is something that the developers are actively working on at the moment (in particular, @sravya91 has been taking the lead on this). It is true that most of the ingredients are already available in SU2 (fast searches, interpolation routines, etc.), but the trick is combining them all and making it general. Do you have any other requirements beyond simple probes? I am guessing we should have something available in the next few months, but it's not set yet.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/466#issuecomment-341623660:370,simpl,simple,370,https://su2code.github.io,https://github.com/su2code/SU2/issues/466#issuecomment-341623660,1,['simpl'],['simple']
Usability,"Hi Sun5k,; Thanks for tackling the Transition models. As far as I see, you are adopting the CScalarSolver-Base style just as is done for the Turbulence or SpeciesTransport solver (cf #1330 #1388 ) :+1: I think you can stay close to how things are handled in these solvers. The Turbulence solver has another class in the middle though: `CScalarSolver -> CTurbSolver -> CTurbSST/SASolver` I am not sure whether sth like this makes sense for transition models? (because I have no clue of Transition models). Otherwise the CSpeciesSolver is directly based on the CScalarSolver. Please limit this PR to 1 model only! So in this case just the LM model maybe. It is much easier for you to wrap this PR up with a limited scope instead of trying to do everything at once :) (and it is easier to review for everyone else) In case you then still want to tackle another one once LM is done :D then just open another PR :+1:; ; As unfinished Transition models (or models with a questionable state) are a bit of a companion of SU2 I would also ask you to provide a meaningful testcase with this PR that proves the usability of this feature. I personally like to think of a suitable case at the beginning of development, to adopt a bit a Test-Driven-Development approach but that is of course fully up to you. In case you did not know about the Developers meeting each Wednesday 4pm Berlin time, now you do. You are kindly invited to ask any questions, just show-and-tell to get some feedback etc. it is a very open round :). Happy coding, Tobi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1496#issuecomment-1016451577:1100,usab,usability,1100,https://su2code.github.io,https://github.com/su2code/SU2/pull/1496#issuecomment-1016451577,2,"['feedback', 'usab']","['feedback', 'usability']"
Usability,"Hi Tim, Heather: yes, this is an important issue to clear up before releasing v5 this week. Let's use this PR to fix the issue (even if just short term), and we'll find a better long term solution. I'm taking a look at this now too.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/352#issuecomment-271199146:52,clear,clear,52,https://su2code.github.io,https://github.com/su2code/SU2/pull/352#issuecomment-271199146,1,['clear'],['clear']
Usability,"Hi Tim,. Thanks!. I totally agree on the fact that Python-related functionalities could be in a separate file for code clarity. Anyway, considering only the C++ structure, those functionalities are still members of the CDriver (and all child classes). So if you are OK with the fact that having members of the same C++ class in different cpp files, I am OK too. . However, if you mean creating a new class for the Python wrapper (like CPyWrapper or whatever), and leave the CDriver ""clean"", this might be more tricky. Indeed, since the wrapper has to be a top-level class, it is better to have access to all the other main classes (config, geometry, solver, ...) and the CDriver was the perfect candidate (it instanciates all of them). So now if we create a new top-level class next to the CDriver, the direct link with all those classes is lost. Basically we will have to create accessors like CDriver::GetConfig(), CDriver::GetGeometry(), ... that will return the different containers to be used by the wrapper. Obviously this is possible but not in a short time, besides this might be a significant change in the top-level code structure. We could also think about exposing thoses CConfig, CGeometry, ... classes to Python in addition to just the driver, I already made some local tests and it worked great but this approach is less user-friendly. David",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/488#issuecomment-352045091:1336,user-friendly,user-friendly,1336,https://su2code.github.io,https://github.com/su2code/SU2/pull/488#issuecomment-352045091,1,['user-friendly'],['user-friendly']
Usability,"Hi Tom,. Sounds like a plan then to have a look at CIntegration to see what we can do to generalize the time integration. I definitely want to help with this, but I don't think I am the appropriate person to take the lead, because I simply don't have a good overview of all the multi-physics options. Tom, are you willing to take the lead for this?. Furthermore, it is good to have other people involved as well, preferably with detailed knowledge of the different disciplines. Any volunteers?. Thanks,. Edwin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437#issuecomment-329096830:233,simpl,simply,233,https://su2code.github.io,https://github.com/su2code/SU2/issues/437#issuecomment-329096830,1,['simpl'],['simply']
Usability,"Hi Tom,; ; I would like to work on the ALE and rotating frame implementations for incompressible solver. Under Edwin's guidance I have been looking at SU2 closely over the past few months and, as you might have heard from him, we are looking to implement a pressure based scheme. . Also, could you tell me more about what are the changes you are planning for the incompressible solver? . Thanks a lot.; Regards,; Akshay",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/468#issuecomment-343086793:119,guid,guidance,119,https://su2code.github.io,https://github.com/su2code/SU2/issues/468#issuecomment-343086793,1,['guid'],['guidance']
Usability,"Hi Wally, ; I have run some axisymmetric cases earlier for pressure distribution (Cp) computation over typical payload fairing configuration (with older versions of SU2). Pressure distribution seemed to be fine with earlier runs (and also it matched well with other codes). ; Issue popped up while trying to compute heat flux for axisymmetric problems. I have seen folks and students running their cases with axisymmetric formulation. Now the issue has surfaced clearly, it need to be fixed asap.; How is solution of the case, you have been trying? . Best; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1063#issuecomment-699627809:462,clear,clearly,462,https://su2code.github.io,https://github.com/su2code/SU2/issues/1063#issuecomment-699627809,1,['clear'],['clearly']
Usability,"Hi again, I have cleaned my previous pull request. In this one you can find the following:. Renaming of the keywords REF_LENGTH_MOMENT (the word MOMENT was really confusing) or RefAreaCoeff.; In the original SU2 there were two geometry slicing subroutines... I have picked the best one for the entire code and improved its usability.; The original grid deformation subroutine only computes the distance from the moving surfaces. I have added the possibility to compute distance from any solid surface (now by default).; Removing some options that look like incomplete. Thanks!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/412:323,usab,usability,323,https://su2code.github.io,https://github.com/su2code/SU2/pull/412,1,['usab'],['usability']
Usability,"Hi all, . After the initial excitement of clearing all tabs and trailing whitespaces... I guess it is more reasonable to follow @pcarruscag proposal:; > What about running the solution you propose only on subfolders? i.e. on src/something/ . I now trimmed all `C*.cpp`, `C*.hpp` and `C*.inl` files in `SU2_CFD` which is equivalent to all restructured files in the Sub-folders. I added a basic script `replace-tabs-...sh ` in `externals/utils` which provides this functionality. I would enhance that script if this is the way to go.; The commit size now shrunk down to ~4k changed lines. Possible merge problems will be much smaller. . I found to have to no problem when merging the develop first -> clearing all tabs/whitespaces in the feature_branch with the provided script -> merge this develop_noWhitespaces using the `--strategy-option=ours` option. Merge conflicts will be purely due to tabs/whitespaces therefore one always wants the own code in case of conflict, as all conflicts with the develop related to other stuff were already resolved in the first merge. . Now that the commit is a lot smaller, there should be even less problems. Maybe some folks will have no problems at all. . After some back and forth in the commits I briefly chatted with @talbring to do a git rebase / squash to not have these huge commits in the history. Otherwise one could open a new & clean PR if we can agree on an approach here to keep the discussion in one place.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/808#issuecomment-553412130:42,clear,clearing,42,https://su2code.github.io,https://github.com/su2code/SU2/pull/808#issuecomment-553412130,2,['clear'],['clearing']
Usability,"Hi all, . I recently discovered the Gust simulation capabilities of SU2 for two-dimensional Euler flows. . I am trying to implement the additional terms necessary for extending the method to 3D Navier-Stokes flows. I am running into trouble when trying to implement the changes necessary to achieve this. For now, I have began working on the two functions responsible for the gust simulations:. 1. SU2/SU2_CFD/src/iteration_structure.cpp::CFluidIteration::SetWind_GustField; 2. SU2/SU2_CFD/src/numerics/flow/flow_sources.cpp::CSourceWindGust::ComputeResidual. From what I understand the extension to 3D should simply consist in modifying the function `SetWind_GustField` to impose a 3D grid-velocity instead of a 2D grid velocity, and adding the appropriate source terms in the function `CSourceWindGust` (these can even be set to zero, just to debug the code). . However, when I try to implement these changes, I get a segmentation fault that I cannot identify. . Does someone have an idea on how to implement this feature successfully ? . PS: I have attached the modifications I made to the two functions mentioned above here:; [SetWind_GustField.txt](https://github.com/su2code/SU2/files/6740388/SetWind_GustField.txt); [ComputeResidual.txt](https://github.com/su2code/SU2/files/6740389/ComputeResidual.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1319:610,simpl,simply,610,https://su2code.github.io,https://github.com/su2code/SU2/issues/1319,1,['simpl'],['simply']
Usability,"Hi all, . this is the continuation of #1242 . Change of the `enum`'s in `option_structure.hpp` into `enum class`. This has the benefit of no implicit conversion to int and therefore increased safety with the enum type -> [c++ core guidelines](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#enum3-prefer-class-enums-over-plain-enums). If you want to sponsor a commit (which I highly recommend ;) ) then a good approach is to ; 1. make your `enum` of choice an `enum class` and remove the associated numbers. ; 2. Rename here if reasonable, i,.e. `ENUM_INLET_TYPE` can be just `INLET_TYPE`. Also the option names to not be redundant so e.g. `INLET_TYPE::PRESSURE_INLET_TYPE` could become `INLET_TYPE::PRESSURE`; 3. Add a `NONE` or `NO_THING` option if needed. Often the global `NONE` option is and that made a lot of people very angry and has been widely regarded as a bad move 🧙 ; 2. then you go to `CConfig.c/hpp` and change the option type and everything there (because in the `CConfig` class the variable is usually defined). Find the `GetKind_yourOption` and search the code base for that `Get` function.; 3. Once all search results and the following function bodies are changed just compile and fix until the code builds; 4. Special care for switch statements: If not all options are present make a `default; break;` line -> otherwise the automated builds will fail on a warning (clang is used, I found gcc does only complain with an additional flag); 4. commit at best just 1 commit with a clear message and push. That makes reverting easier if it fails and introduced some non-obvious error; ; Have fun :). ## Related Work; #1242. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1258:231,guid,guidelines,231,https://su2code.github.io,https://github.com/su2code/SU2/pull/1258,1,['guid'],['guidelines']
Usability,"Hi all, thank you so much for your feedback. Are there things left for this pull request? ; Thank you so much in advance.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1620#issuecomment-1150869650:35,feedback,feedback,35,https://su2code.github.io,https://github.com/su2code/SU2/pull/1620#issuecomment-1150869650,1,['feedback'],['feedback']
Usability,"Hi all,. As I am stepping through DA cases with my debugger I am cleaning some things left and right. No major changes. - making local vars const when possible; - moving the `config->GetBool` directly to the conditional instead of making it a var and using it 1 time; - removing dead code; - adding some comments; - some typos fixed. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1257:557,simpl,simply,557,https://su2code.github.io,https://github.com/su2code/SU2/pull/1257,1,['simpl'],['simply']
Usability,"Hi all,. I am trying to run SU2 (v. 5.0) on big endian platform but am unable to do so. I have tried using both .su2 and .cgns meshes, but the simulation pauses at:. _Calling ParMETIS...; Finished partitioning using ParMETIS (39838 edge cuts).; Communicating partition data and creating halo layers._. Is there any way to make the grid compatible for such platforms?. Thanks in advance,. - Akshay",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/371:154,pause,pauses,154,https://su2code.github.io,https://github.com/su2code/SU2/issues/371,1,['pause'],['pauses']
Usability,"Hi all,. I experimented a little bit with a different build system to replace automake/autotools. Although it works most of the time fine, it is cumbersome to work with. Especially when modifying the .am files and the configure.ac due to the complicated syntax. Furthermore it is relatively slow. One alternative would be cmake, however, the syntax is also not very comfortable and it has too many features which we actually don't need. . So I came across meson and ninja. It is lightweight and very easy to use (setting it up for SU2 took half a day, without any prior knowledge). Compilation time is faster because it builds all object files in parallel. Another advantage is that it is platform independent. Creating packages and binaries and also crafting releases is much simpler with this system (which we can exploit to automate the release process). It is also possible to embed our regression test framework into that process. . In case you want to try it out, checkout the branch **meson_build**. Everything needed is added as submodule (meson and ninja), so make sure to do a `git submodule update` to clone them. To configure and build use the following commands:. `externals/meson/meson.py build`; `./ninja -C build`. Please test it and give feedback. I have not tried it on windows or mac, so if you are using any of these OS, give it a try!. Note: automake and meson can co-exist together without any interference. So the old way of building SU2 still works in that branch.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/685:777,simpl,simpler,777,https://su2code.github.io,https://github.com/su2code/SU2/issues/685,2,"['feedback', 'simpl']","['feedback', 'simpler']"
Usability,"Hi all,. I made the ENUM_TURB_MODEL an enum class. I will add a few other small things in here. In case you have some minor cleanup commit feel free to push in here. Also made some turbSA+SST functions final where it was override previously. ## Related Work; #1220 #1242 and probably some others on the road to enum class. @suargi i hope this will not interfere to heavily with your work on the SA model things . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1404:585,guid,guide,585,https://su2code.github.io,https://github.com/su2code/SU2/pull/1404,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"Hi all,. lately I was fixing restarts. Making sure the adjoint also has a correct primal restart is somewhat annoying due to the way the residuals are printed to screen. I want to change that to look like a normal screen output of all residuals. Here the old variant on top and the new below (field names need to be adapted to usual screen output); ![image](https://user-images.githubusercontent.com/31306376/133253618-e20b6be0-fd29-4c03-96b5-a70f84f06523.png). The code as of today only changes this for single zone and does not use the usual output routines (and is a bit hacky). I want to add multizone and use the output routines instead of this handwritten PrintDirectResidual routine. I'll look into both. Let me know if there are reasons against this or any other comments. ## Related Work; The printing tool box of Tim. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1371:1051,simpl,simply,1051,https://su2code.github.io,https://github.com/su2code/SU2/pull/1371,1,['simpl'],['simply']
Usability,"Hi all,. this pull request eliminates the old linear elasticity structural solver, which was no longer actively developed, with the objective of maintaining the code clearness. All the features are still available using new FEM solver. It also renames the files from *_fem_elasticity to *_direct_elasticity, in order to follow the general code criteria. . Additionally, I have fixed some bugs and added some options to the structural and FSI solvers. . Cheers,. Ruben",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/248:166,clear,clearness,166,https://su2code.github.io,https://github.com/su2code/SU2/pull/248,1,['clear'],['clearness']
Usability,"Hi everyone, glad this subject is of interest. I will try to make that test case. I edit my earlier comment to avoid a mess. So I changed the terms. Still not sure but the derivation is simple. source term viscous = (0, tau_xy, tau_yy - tau_thetatheta, u* tau_yx + v* tau_yy - q)/y, right?. then from Bird:. ![IMG_20201027_115003](https://user-images.githubusercontent.com/55834287/97291927-d9767e00-184a-11eb-9418-a3ace3e3a077.jpg). bulk viscosity = 0, any derivative wrt theta = 0. For the generalised inviscid part I am pretty sure it is all correct including the jacobian. You can compare with very similar terms in any generalised flux jacobian like in Glaister's paper https://www.sciencedirect.com/science/article/pii/002199918890174X",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1095#issuecomment-713564781:186,simpl,simple,186,https://su2code.github.io,https://github.com/su2code/SU2/pull/1095#issuecomment-713564781,1,['simpl'],['simple']
Usability,"Hi everyone,; I was tring to use the mesh adaptation feature but the whole procedure is not clear to me.; Following the previous indications I:. 1. downloaded the `feature_adapt branch`. 2. downloaded the Adaptive 2D NACA 0012 example (https://pyamg.saclay.inria.fr/pyamgexamples.html#2dnaca): `adap_NACA0012.cfg`, `mesh_NACA0012_inv.su2`, `NACA0012_ini.dat`. 3. added the following lines to the config:; ```; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= GOAL; % Objective function used for goal-oriented adaptation; OBJECTIVE_FUNCTION= LIFT; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 4.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (30000, 60000, 120000); % Number of adaptations performed at each level; PYADAP_SUBITE= (3, 3, 3); ```. 4. run the following command: `$ python3 SU2_RUN/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 8`. The response I have obtained is the following:; ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8; PYADAP_FLOW_ITER : (2999, 4999, 6999); PYADAP_ADJ_ITER : (2999, 4999, 6999); PYADAP_CFL : (10.0, 15.0, 20.0); PYADAP_RDG : NO. The ./adap folder was deleted. Generating GMF background surface mesh.; ## WARNING: MISSING SU2 MESH FILE KEYWORD: NCORNERS=.; Initial CFD solution is provided.; ```. As expected, a `./ADAP` folder was created, containing these docs: `amg_back_meshb`, `config_CFD.cfd`, `log.err`, `log.out` (sizes 0 byte), `mesh_NACA0012_inv.su2` (link to the mesh), `NACA0012_ini.dat` (link to the file.dat). Did I perform the procedure correctly? Or did I m",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-737134105:92,clear,clear,92,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-737134105,1,['clear'],['clear']
Usability,"Hi guys,; I agree with you, we should change the name of that function including the word ""fluid"". ; In this way the purpose of the function is stated clearly against its counterparts (structural, poisson, heat, etc)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/375#issuecomment-279957104:151,clear,clearly,151,https://su2code.github.io,https://github.com/su2code/SU2/pull/375#issuecomment-279957104,1,['clear'],['clearly']
Usability,"Hi rois1995,. First of all, enjoy your time in Las Vegas. Any paper that you are presenting?. As for our discussion about the cross-diffusion term, I've emailed the ""source"" (Menter). I believe he will make it clear.; It may be that he will be able to answer only in a while ...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2252939132:210,clear,clear,210,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2252939132,1,['clear'],['clear']
Usability,"Hi there,. I went ahead and created a dummy geometry, that is:; 1. I altered the planform so that the sweep, twist, dihedral, taper... are now different from the actual wing; 2. I replaced the airfoil by the NASA SC(2)-0712. The dummy wing has a double planform defined as:; - semi span = [5; 10]; - taper = [0.55; 0.35]; - dihedral angle = [5°; 2.5°]; - twist angle = [1°; 0°; -1°] (given for root, kink and tip airfoil sections); - sweep angle at LE = 25°; - Aspect ratio = 11.8; - semi area = 38. I defined the reference length as:; - reference (semi) area = 45; - reference chord = 3; - reference (semi) span = 15. The flight conditions remained unchanged:; - Mach number: 0.78; - Temperature = ~217 K; - Reynolds number: ~19 millions; - AoA = 0°. I created the exact same grid as before (same number of cells, same progression), ensuring my first cell was at y+<1. Things is, this time, SU2 did not have any trouble converging and computed the right z-projected area... I checked the results with another software and the pressure distribution (taken along the chord near the kink) match, see attached Figure. I am attaching the dummy configuration file (dum.txt) as well as the mesh (dum_mesh.txt) if it can be of interest to you. The mesh is a .geo gmsh file. To get the mesh, simply open with gmsh and click mesh 3D (or, from the console: gmsh dum_mesh.txt -3). At this point, I think that my problem might be related to the actual wing airfoil geometry, which is somehow not well pre-processed by SU2... I will continue investigating and keep you posted if I find a solution. Thank you for the time you took reading this issue.; ![cp](https://user-images.githubusercontent.com/39187559/40602255-3de183ae-6258-11e8-9aba-6c8d374dc34e.png); [dum.txt](https://github.com/su2code/SU2/files/2044072/dum.txt); [dum_mesh.txt](https://github.com/su2code/SU2/files/2044073/dum_mesh.txt)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/533#issuecomment-392442127:1284,simpl,simply,1284,https://su2code.github.io,https://github.com/su2code/SU2/issues/533#issuecomment-392442127,1,['simpl'],['simply']
Usability,"Hi, . I'm not sure what ""new boundary conditions"" means. Is someone replacing the present far-field BC of the TKE and Omega? ; I recognize these ""new"" BCs as the ones given on the TMR (proposed in the original paper). I find the present setting in SU2 very comfortable and more ""intuitive"" than that given on the TMR.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2307448209:279,intuit,intuitive,279,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2307448209,1,['intuit'],['intuitive']
Usability,"Hi, . I've got an issue where on starting an SU2 6.2.0 Falcon case, the preprocessing steps run but then the output gets stuck at:. ```; ---------------------- Python Interface Preprocessing ---------------------; Setting customized boundary conditions for zone 0; ```. - and remains frozen there until I kill the job. . It seems to have happened for only 3 out of nearly 400 successful cases. They are all similar, running Euler at Mach 1.7, on 40 cores. They all have similar simple body, farfield, and and symmetry conditions. I'm not sure of the best way to diagnose this, so any guidance would be appreciated. Many thanks and kind regards, ; Tim",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/907:478,simpl,simple,478,https://su2code.github.io,https://github.com/su2code/SU2/issues/907,2,"['guid', 'simpl']","['guidance', 'simple']"
Usability,"Hi, ; thanks for this contribution, I will get a more detailed feedback soon. A first comment about the CSymmetricMatrix class came up to my mind, from a first brief review.; There is already a CSysMatrix class and a few routines added in this pull request look redundant (matvect product for instance).; On the other hand, many of those routines (cholesky decomposition and so on) could turn out to be very useful also for other future code developments.; That said, perhaps it would be nice to collect all the matrix-related routines into the CSymmetricMatrix class (removing redundancies) to make them available at an higher level. Cheers,; Giulio",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/555#issuecomment-406370798:63,feedback,feedback,63,https://su2code.github.io,https://github.com/su2code/SU2/pull/555#issuecomment-406370798,1,['feedback'],['feedback']
Usability,"Hi, I have been working on SU2 for a while and I have some improvements (some of them are just cosmetic improvements):. - SU2 is now able to identify several engines with multiple intakes and exhaust (this is an important change).; - Renaming of the keywords REF_LENGTH_MOMENT (the word MOMENT was really confusing) or RefAreaCoeff.; - This is a interesting one. There were two wing slicing subroutines... I have I have picked the best one for the entire code and improve a little bit its usability.; - The grid deformation was not perfect. It was computing only the distance from the moving surfaces. I have added the possibility to compute distance from any solid surface (that is the default that works better).; - Removing some options that look like incomplete and adding some extra info like CoP. Thanks!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/408:489,usab,usability,489,https://su2code.github.io,https://github.com/su2code/SU2/pull/408,1,['usab'],['usability']
Usability,"Hi, all. This PR is for implementing various transition models, which are composed of 1~2 additional transport equations. List of wishes to implement transition model : . - [Langtry and Menter model](https://doi.org/10.2514/1.42362) ; - [k-w-gamma](https://doi.org/10.1016/j.paerosci.2012.08.004); - [SA-AFT](https://doi.org/10.2514/6.2019-0039). Now working on : ; - Langtry and Menter model. ## Related Work. LM feature -> development. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1496:610,guid,guide,610,https://su2code.github.io,https://github.com/su2code/SU2/pull/1496,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"Hi, are there any updates on this feature? Or maybe some simple example?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1750#issuecomment-2337835036:57,simpl,simple,57,https://su2code.github.io,https://github.com/su2code/SU2/pull/1750#issuecomment-2337835036,1,['simpl'],['simple']
Usability,"Hi, please attach the exact files you are using, and commands you are running, to the discussion you already opened. That will make it easier for someone to help.; The best way to get help from a developer is to make it very simple to replicate the problem.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1458#issuecomment-984084597:225,simpl,simple,225,https://su2code.github.io,https://github.com/su2code/SU2/issues/1458#issuecomment-984084597,1,['simpl'],['simple']
Usability,"Hi, thanks for this interesting discussion. Just a reminder... there is a third place where the default values are stored! the config_template.cfg file. I have had similar problems to what @erangit is describing with the multiple definition of the default values in different places, in fact, sometimes is not clear what is the minimum number of parameters that you can use in a config file. I think that the ideal scenario would be to use the config_template.cfg file as the default value keeper and create subroutines in C++ and python that update the defaults with the existing information in that file. Remember that config_template.cfg is always required otherwise the user doesn't know that are the existing options. By the way... this discussion reminds me that we should update SetRunTime_Options(void). This is an incredible useful small subroutine to modify the software parameters during runtime. EXT_ITER is the only parameters currently accepted but in the near future we should add all or most of them.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/520#issuecomment-381411950:310,clear,clear,310,https://su2code.github.io,https://github.com/su2code/SU2/pull/520#issuecomment-381411950,1,['clear'],['clear']
Usability,"Hi, this sounds very interesting!; I'll take the chance to raise a point: we still don't have a clear strategy to manage the output of multi-zone simulations. Indeed, earlier we used to have the residuals plotted for each zone (so we used to have a line for each zone), currently we just get the residuals corresponding to ZONE_0 (this was probably changed in one of the latest pull request, I think it could be the one from @salvovitale ). We should decide if to restore the previous ""multi-residual"" output or if to sum up residuals from each zone and print out the results.; Cause right now we can't know how the residuals are behaving in the rest of the domain.; We could perhaps create an additional ""special"" output to manage multi-zone computations. cheers,; Giulio",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/432#issuecomment-326204080:96,clear,clear,96,https://su2code.github.io,https://github.com/su2code/SU2/pull/432#issuecomment-326204080,1,['clear'],['clear']
Usability,"Hi,. As in previous years, I have performed an extensive cleaning of SU2 for the sake of code clearness, memory optimization and speed. Remember that nothing has been permanently removed from the git server and I encourage the developers to recover some of the removed code as a branch and continue working on it. Obviously, I have been very careful to do not remove any active implementation. I have also fixed some bugs and issues with the C++ compilation under Windows. Now, it should be a straightforward process. Thanks,; Francisco",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/208:94,clear,clearness,94,https://su2code.github.io,https://github.com/su2code/SU2/pull/208,1,['clear'],['clearness']
Usability,"Hi,. Comp/Inc/Nemo output all had the same RMS_TKE etc output -> now this is done once in CFlowOutput and Comp/Inc/NemoOutput only call sth like `SetHistoryOutput_Turb` in their respective `SetHistoryOutput`. this is just a cleanup and shouldnt change too much. I do this in anticipation of addition of Species related output which I dont want to repeat. So #1388 will use the same concept. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1449:580,guid,guide,580,https://su2code.github.io,https://github.com/su2code/SU2/pull/1449,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"Hi,. Possibility to give the Heatflux over a boundary in [W] instead of [W/m^2]. This was already possible in the HeatSolver but now also in Inc and Comp flow solvers.; Prescribing a fixed Watt is especially useful in optimization scenarios with Temperature OF where otherwise the optimizer can exploit that a smaller boundary almost certainly yields smaller Temperatures. The necessary SurfaceAreas are computed and stored in CGeometry instances which is computed once at program start by a call from the Driver. I also added NEMO for this feature. There is currently no Testcase which uses `INTEGRATED_HEATFLUX= YES` so one might want to change that :grimacing: :shushing_face: . For the HeatSolver this was originally introduced at some point by @oleburghardt . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1530:988,simpl,simply,988,https://su2code.github.io,https://github.com/su2code/SU2/pull/1530,1,['simpl'],['simply']
Usability,"Hi,. Some necessary changes for the species transport solver to work nicely with the Discrete adjoint solver. So it is the same structure that was Introduced for CFlowOutput but now it is CAdjFlowOutput.; - generalize turb+species output for Comp/Inc/NEMO away into a parent class to avoid duplication (Done); - Make More OF available such that one can actually use the DA solver; - Add a Gradient validation + Optimization FADO template plus add DA regression tests (or tutorials 🤔 I think I will make a tutorial thing for this); - Some smaller fixes to the previous PR. ## Related Work; directly following #1388 where the majority of adjoint work for the species solver was already done. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1461:913,simpl,simply,913,https://su2code.github.io,https://github.com/su2code/SU2/pull/1461,1,['simpl'],['simply']
Usability,"Hi,. Thank you for your quick answer, It indeed seems that I had some parameters that were passed that did not match su2 version 7.0.3. I am experiencing an issue while running the mesh adaptation process in SU2. The process starts but fails during the mesh generation phase, leading to a FileNotFoundError. I am looking for assistance in resolving this error.; `; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (100, 200, 300); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : MACH; PYADAP_HMAX : 200; PYADAP_HMIN : 1e-8; PYADAP_HGRAD : 1.3; PYADAP_RESIDUAL_REDUCTION : (3, 3, 3); PYADAP_FLOW_ITER : (500, 500, 500). ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided. Starting mesh adaptation process. Iteration 0 - Mesh size coefficient 100.0; (1/2) Generating adapted mesh using AMG; AMG done: ; Running CFD; Traceback (most recent call last):; File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/path/to/SU2/install/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/path/to/SU2/install/bin/SU2/run/amg.py"", line 466, in amg; os.rename(cur_solfil, cur_solfil_ini); FileNotFoundError: [Errno 2] No such file or directory: 'flo.dat' -> 'flo_ini.dat'`. and it0 folder is created, with some log.err and log.out, but they are empty, . I would appreciate any guidance or suggestions on how to resolve this issue. Thank you!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-1855842105:1571,guid,guidance,1571,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1855842105,1,['guid'],['guidance']
Usability,"Hi,. The attached project files are trying to solve a transient 3D cylinder model, the geometry is shown below. While the solver returns the error about the NaN value. Could you please guide me how to resolve this NaN value issue? Thank you. ![gui_model](https://github.com/su2code/SU2/assets/106984354/9dbbfe68-abcd-4ec9-926a-688021843a34). ```; Error in ""void CSolver::SetResidual_RMS(const CGeometry*, const CConfig*)"":; -------------------------------------------------------------------------; SU2 has diverged (NaN detected).; ------------------------------ Error Exit -------------------------------; ```. To run this model, please remove the "".txt"" suffix after downloading these two files.; [mesh.su2.txt](https://github.com/su2code/SU2/files/13806689/mesh.su2.txt); [su2.cfg.txt](https://github.com/su2code/SU2/files/13806690/su2.cfg.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2191:185,guid,guide,185,https://su2code.github.io,https://github.com/su2code/SU2/issues/2191,1,['guid'],['guide']
Usability,"Hi,. This error simply occurs because the prototype of the CDriver (and child classes) has changed. There is an additional `bool val_periodic` argument that have to be passed. The current fsi_computation.py is not up-to-date. Here are solutions to fix that:. - Change the fsi_computation.py and pass an extra `False` argument between the number of dimensions and the communicator. or. - Do you need the very last develop branch ? Because it seems like in the master branch the constructor of the CDriver is still the compatible one. So you could use this branch without modifying anything. I hope this will help. Cheers,. David",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/531#issuecomment-388288297:16,simpl,simply,16,https://su2code.github.io,https://github.com/su2code/SU2/issues/531#issuecomment-388288297,1,['simpl'],['simply']
Usability,"Hi,. When restarted at e.g. Time-Iter 2 the first value would be divided by 3 (number of timesteps counting from zero).; So if your first value in that restarted sim is a 3, the running average would be 1. This is fixed with this commit by setting WINDOW_START_ITER = RESTART_ITER in the Config Postprocessing,; if the option is not set. If the option is set, but incorrectly, an error is raised. ## Related Work; Original implementation #836 ; Change in previous behavior introduced in #1548 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1601:667,guid,guide,667,https://su2code.github.io,https://github.com/su2code/SU2/pull/1601,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"Hi,. this is just a small chore which cleans LoadRestart routines and strengthens the similarities between the function. Declare vars where needed (instead of the top of the func), make things const and some anticipation of clang-format stuff (without explicitly running it over that file); This was originally done in #1388 but i dont want to pollute that PR with unrelated stuff. I also added a `nVarTurb` Variable which can be accessed via the Config. Might be handy in some places, instead of always going through the full enum class TURB_MODEL. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1450:722,guid,guide,722,https://su2code.github.io,https://github.com/su2code/SU2/pull/1450,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"Hi,; I just had a few (very minor) comments.; Regarding the main contribution, everything makes sense to me and I didn't find any relevant issue.; This is a very nice contribution and the implementation is quite clear, we can go ahead and merge this in soon. Regarding the matrix stuff, perhaps we could start having a new, general, matrix class in Common and then extend it to parallel in future pushes.; It may not be ideal, but at least we'll get started.; I am just afraid that if we leave those potentially useful routines there, in the interpolator, we will soon forget about them (of course it doesn't have to be addressed in this PR but we should really discuss about this). ciao,; Giulio",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/555#issuecomment-407014370:212,clear,clear,212,https://su2code.github.io,https://github.com/su2code/SU2/pull/555#issuecomment-407014370,1,['clear'],['clear']
Usability,"Hi,; I went through this work but it is a bit hard to me to completely follow and continue you guys' idea. If you could help finish this issue, I am really willing to do some tests and give feedbacks ASAP. Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2275#issuecomment-2098689280:190,feedback,feedbacks,190,https://su2code.github.io,https://github.com/su2code/SU2/issues/2275#issuecomment-2098689280,1,['feedback'],['feedbacks']
Usability,"Hi,; So far as I can tell from the code, no.; It would however be very simple to hack that kind of feature, I can point you to the right places if you want.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/973#issuecomment-626357981:71,simpl,simple,71,https://su2code.github.io,https://github.com/su2code/SU2/issues/973#issuecomment-626357981,1,['simpl'],['simple']
Usability,"I agree with @pcarruscag , we should try to merge options. I have been thinking for quite some time that we should make the mesh deformation a full solver on its own and homogenise all the options and procedures, be able to define different boundary conditions, etc. It should be based on the linear elasticity but have it's own variable definition, so it's usable out of the box with the adjoint solver. I have a preliminary implementation in [`feature_mesh_solver` ](https://github.com/su2code/SU2/tree/feature_mesh_solver), but I would need some help with that.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/623#issuecomment-456293206:358,usab,usable,358,https://su2code.github.io,https://github.com/su2code/SU2/pull/623#issuecomment-456293206,1,['usab'],['usable']
Usability,"I agree with Heather on that. It is only intuitive if you already have the experience. And in that case you know what an appropriate step size is, so you can also specify it directly without having it scaled by some reference length (and of course also consider the case where you don't have an aircraft, wing or airfoil).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/367#issuecomment-284349273:41,intuit,intuitive,41,https://su2code.github.io,https://github.com/su2code/SU2/issues/367#issuecomment-284349273,1,['intuit'],['intuitive']
Usability,"I agree with the final conclusion here... thanks for discussing this and working toward a solution. . We have found in some of our performance optimization work that continuously allocating/deallocating memory is a performance killer, and I am in favor of uniform behavior across the code for readability/usability. Let's merge this in.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/200#issuecomment-149771091:305,usab,usability,305,https://su2code.github.io,https://github.com/su2code/SU2/pull/200#issuecomment-149771091,1,['usab'],['usability']
Usability,"I agree with the proposed changes, but I also think this could go farther. Some of the most common issues for users involve misuse of the *_ORDER options, dissipation coefficients, and limiters. Overall, it is still not very clear for a user how the centered schemes work. For instance, Lax is always first order and JST is always second order, but sometimes there are not error messages when trying to change the ""ORDER"" option when using these schemes. Also, if we rename the coefficients for JST as proposed, shouldn't we also separate the first coefficient that is only used for Lax? It would make treating the dissipation more clear.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/451#issuecomment-335205189:225,clear,clear,225,https://su2code.github.io,https://github.com/su2code/SU2/pull/451#issuecomment-335205189,2,['clear'],['clear']
Usability,"I also agree that there should be an explicit option, and that it should; default to the current behavior, however it may be more intuitive for the; user to specify the actual step size- people who don't have Francisco's; extensive experience will not intuit that the finite difference step will; be 1/100 of the reference length, and may have difficulty figuring that out; without help. I suggest something like FD_STEP_SIZE, either way with; documentation explaining it.; -H. On Mar 6, 2017 5:26 PM, ""juanjosealonso"" <notifications@github.com> wrote:. > Agree with Francisco: the best solution is to have an input parameter that; > can be used to scale the FD step size. I would suggest FD_REFERENCE_LENGTH; > to be created (and possibly specified in the config file). If; > FD_REFERENCE_LENGTH is not specified, then it could default to; > REF_LENGTH_MOMENT.; >; > Best,; >; > Juan; >; > On Mar 5, 2017, at 6:35 PM, Francisco Palacios <notifications@github.com<; > mailto:notifications@github.com>> wrote:; >; > Hi,; >; > Yep, I changed that. I know that from the math point of view it doesn’t; > make a lot of sense but, from the practical point of view, it is useful.; >; > There are some cases, in which computing gradients using finite; > differences is the only choice. And with the shape_optimization script it; > was not possible to control the step size for the finite differences. The; > option for step size was only in finite_differences.py.; >; > The step size is scaled with the reference length because from the; > practical point of view, I have found that the size of the aircraft, wing,; > airfoil, is important to determine a meaningful step size. e.g. should we; > use the same step for an aircraft with a MAC of ~150in than for an airfoil; > with a chord of 1in.; >; > Remember that most of the times we are using FD when the adjoint is not; > converging… so we have bad convergence of the direct problem (including; > some level of unsteadiness that we want to filter with the ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/367#issuecomment-284314148:130,intuit,intuitive,130,https://su2code.github.io,https://github.com/su2code/SU2/issues/367#issuecomment-284314148,2,['intuit'],"['intuit', 'intuitive']"
Usability,"I also like the idea of renaming to ""SOLVER"" but I would also say to avoid as much churn as possible in the conditionals throughout the code... looks like a wash when reading through the PR changes (almost as many +'s as -'s). Unless the changes are going to make something much more flexible or clear, I would say just keep Kind_Regime and set it in config postprocessing.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/756#issuecomment-520705829:296,clear,clear,296,https://su2code.github.io,https://github.com/su2code/SU2/pull/756#issuecomment-520705829,1,['clear'],['clear']
Usability,"I am a little partial because I wrote it, but this https://github.com/su2code/FADO should do any kind of optimization you want.; Multiple operating points, manipulations of variables, running everything simultaneously... But I guess for something simple it is a little more work to setup.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1279#issuecomment-833754354:247,simpl,simple,247,https://su2code.github.io,https://github.com/su2code/SU2/issues/1279#issuecomment-833754354,1,['simpl'],['simple']
Usability,"I am adding regressions for all the convective numerical schemes in NEMO using the implicit solver. All cases run on an inviscid wedge at the moment, but I am happy to make a new folder in the regression. . ## Related Work; This will allow us to better track our changes and is the start of a more comprehensive set of regression tests for the Nemo solver coming in the future (boundary conditions, etc.) ; This directly relates to #1773 to eventually refactor the AUSM schemes. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1885:765,Guid,Guide,765,https://su2code.github.io,https://github.com/su2code/SU2/pull/1885,1,['Guid'],['Guide']
Usability,"I am not a 100% clear on all the things this new feature can do. From what I gather we can now set an initial flow field that is not just freestream condition everywhere? If this is the case, this is a hugely useful feature so thank you guys for doing that. . How exactly is this allowing for solution verification? Is it allowing you to run the same case with a bunch of different solver schemes? Can it run the solvers on a set of meshes or do you still have to run on each mesh refinement individually?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/672#issuecomment-486373335:16,clear,clear,16,https://su2code.github.io,https://github.com/su2code/SU2/pull/672#issuecomment-486373335,1,['clear'],['clear']
Usability,"I am not sure about why periodic boundaries are allowed to deform. It doesn't seem to be a good idea unless there is a way to deform its periodic pair in the same way. As for @auzbaig's question about why SLSQP converges in one step: There is a huge difference in the magnitude of the objective function, O(1) and the gradient O(-11). I am guessing the optimizer doesn't think it can reduce the function value any further since the gradient with respect to the DVs is so small. . To change the relative magnitudes of the objective and gradient, you need to change the DV scaling. This isn't intuitive and is one of the things we are hoping to address in #922 . Check out the `obj_df` function in `SU2_PY/SU2/eval/design.py` (line 386 in the develop branch). There you see how the gradient is scaled: . `grad[k] = grad[k] * sign * scale * global_factor / dv_scl` . Here `scale` is the objective function scaling factor, `global_factor` is what you specify for the `OPT_GRADIENT_FACTOR`, the `dv_scl` is the design variable scaling. . So if you wanted to bring the gradient norm to O(1), you'd have to specify a DV scaling of 1e-11. Usually a gradient norm of O(-6) is what seems to work best with SLSQP.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/976#issuecomment-628724163:591,intuit,intuitive,591,https://su2code.github.io,https://github.com/su2code/SU2/issues/976#issuecomment-628724163,1,['intuit'],['intuitive']
Usability,"I am trying to get polar using my own script. I don't want to produce a config file for each case as in the polar script. I have only 2 markers as in the NACA0012 case with a compressible solver. Normally even if there are some restrictions about AoA I expect that the flow angle should change but also did not observe any change in flow angle. The case is steady. My script is very simple:. ```python; #!/usr/bin/env python3; import sys. import numpy as np; import pysu2; import SU2; from mpi4py import MPI. def setup_mpi():; if ""mpi4py.MPI"" in sys.modules:; have_mpi = True; comm = MPI.COMM_WORLD; status = MPI.Status(); myid = comm.Get_rank(); else:; have_mpi = False; comm = None; status = None; myid = 0; return have_mpi, comm, status, myid. class SU2Interface:; def __init__(self, config_filename):; self.have_mpi, self.comm, self.status, self.myid = setup_mpi(); self.FluidSolver = pysu2.CSinglezoneDriver(config_filename, 1, self.comm); ; def setAoA(self,angle,marker):; if marker in self.FluidSolver.GetMarkerIndices().keys(): ; markerID = self.FluidSolver.GetMarkerIndices()[marker]; self.FluidSolver.SetInletAngle(0,angle); self.FluidSolver.BoundaryConditionsUpdate(); ; def runSolver(self):; self.comm.barrier(); # run solver; self.FluidSolver.Preprocess(0); self.FluidSolver.Run(); self.FluidSolver.Postprocess(); if self.myid == 0:; print(f"" AOA: {self.FluidSolver.GetOutputValue('AOA')}""); print(f"" LIFT : {self.FluidSolver.GetOutputValue('LIFT')}""); print(f"" DRAG : {self.FluidSolver.GetOutputValue('DRAG')}""); self.comm.barrier(); ; def finalize(self):; self.FluidSolver.Finalize(); . for angle in np.linspace(0,10,5):; cfd_interface = SU2Interface('NACA0012.cfg'); cfd_interface.setAoA(angle,'farfield'); cfd_interface.run_solver(); cfd_interface.finalize(); ```",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2027:383,simpl,simple,383,https://su2code.github.io,https://github.com/su2code/SU2/issues/2027,1,['simpl'],['simple']
Usability,"I am using Intel MPI as well, but on Ubuntu 18.04 and I get a clear error message. The likely reason why it hangs for you for this grid and not for the others is that this grid has an issue and the others do not. . Can you run it on one core of your supercomputer?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/683#issuecomment-493914393:62,clear,clear,62,https://su2code.github.io,https://github.com/su2code/SU2/issues/683#issuecomment-493914393,1,['clear'],['clear']
Usability,I am using the binary of SU2_CFD on Mac Os X for a single core run. There are no restart files for SU2_SOL to work with. IS there a way to simply export in CSV format? config_template.cfg is missing in the folders.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/787#issuecomment-528450087:139,simpl,simply,139,https://su2code.github.io,https://github.com/su2code/SU2/issues/787#issuecomment-528450087,1,['simpl'],['simply']
Usability,"I am wondering what it would take to adapt SU2 to model the flow of (thermally/calorically) non-ideal gases where cp, gamma, etc. vary with the state and for which the relations R = Cp - Cv, H = Cp * T, etc. are not valid. . Do all the computations of flux jacobians etc. formulated in terms of gamma already rely on the ideal gas (or polytropic) assumption? . Is this sort of thing considered unimportant since SU2 is mainly intended for aerodynamics or would it be too demanding for the solver to converge reliably?. To give a ""simple"" example where this would be useful: A converging-diverging nozzle expanding the refrigerant r134a from around 24 bar to 3 bar. Only if gamma is set to the throat value the choked flow rate will be fairly correctly predicted but the outlet temperature will then be very far below the isentropic 1D result with a real EoS. This seems to have consequences not only for the temperature field but also for the performance certainly of more complex devices.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1065:530,simpl,simple,530,https://su2code.github.io,https://github.com/su2code/SU2/issues/1065,1,['simpl'],['simple']
Usability,"I came across this when I was working on a mesh generation program that generates an extruded boundary layer. I had checks in the program to make sure I was generating elements of positive volume and that they weren't self intersecting. While some of the elements were very badly skewed, I knew I didn't want the elements to be reoriented. However, SU2 reorients several of the prisms and tries to reorient some of the pyramids as well (which isn't a defined operation in SU2). . This is why in my particular case it was easier for me to just turn off the feature. . In general though, I think that the reorientation check could be a bit better. Currently for the prism element for example, it does a volume like calculation using the top and bottom triangles separately, and reorients if either one is negative. Obviously if only one of these calculations is negative, by reorienting, the other calculation would become negative. Similar things are done for pyramids and hexas. . A simple solution would be to change the ""or"" conditions in these calculations to ""and"", so that it is only reoriented if it fails all the checks. I think a better solution would be to decide on a volume calculation method for each element type, and then use that as a criteria. . If you'd prefer to just improve the reorientation checks instead of adding this configuration option, I could submit work on a pull request for that if you'd like.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/162#issuecomment-103679295:983,simpl,simple,983,https://su2code.github.io,https://github.com/su2code/SU2/pull/162#issuecomment-103679295,1,['simpl'],['simple']
Usability,"I can do that. I will follow the above mentioned papers to implement the original SA and SA_NEG. So we will end up with SA, SA_NEG along with SA_NOFT2 and SA_NEG_NOFT2**. SA_NEG_NOFT2**:; > we do not consider this modification and simply consider the modified vorticity as in the standard Spalart-Allmaras",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/992#issuecomment-652248694:231,simpl,simply,231,https://su2code.github.io,https://github.com/su2code/SU2/issues/992#issuecomment-652248694,1,['simpl'],['simply']
Usability,"I checked and I could not find a place in the code where this option is used explicitly. Since all the drivers split between primary recording for state variables and secondary recording for geometry variables for efficiency. My own use case was for research I did, where I needed to record a tape w.r.t. to both. Since this is not ready to become a pull request any time soon, I do not really need this option. If you suggest I can create a commit to remove the enum option for simplicity.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1492#issuecomment-1012241237:479,simpl,simplicity,479,https://su2code.github.io,https://github.com/su2code/SU2/pull/1492#issuecomment-1012241237,1,['simpl'],['simplicity']
Usability,"I could but I do not think updating that branch will fix your problem. We have not found any mesh handling bugs recently.; Creating / modifying meshes manually can get tricky (at least in my experience).; Have you tried simpler problems? Try starting with a problem that is known to work (there is a long issue with success stories, do a search for mesh adaptation here on github). Then build up from it, e.g. take the same problem and use a finer grid, change the physics to what you need, use a grid for your problem (ideally change one thing at a time).; Also keep in mind that if that branch was finished work it would probably have been merged into develop by now...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1156#issuecomment-757123547:220,simpl,simpler,220,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156#issuecomment-757123547,1,['simpl'],['simpler']
Usability,"I could create a ""safe Allgatherv"" function, e.g. in [`mpi_structure.hpp`](https://github.com/su2code/SU2/blob/1b085062547ec5b066a28ddeeacf4907588f4f5a/Common/include/parallelization/mpi_structure.hpp) or in [`ndflattener.hpp`](https://github.com/su2code/SU2/blob/1b085062547ec5b066a28ddeeacf4907588f4f5a/Common/include/toolboxes/ndflattener.hpp). This function should check the number of processes, perform a simple copy if it is 1, and otherwise calls the regular Allgatherv. It would then be used [here](https://github.com/su2code/SU2/blob/1b085062547ec5b066a28ddeeacf4907588f4f5a/Common/include/toolboxes/ndflattener.hpp#L235) instead of `SU2_MPI::Allgatherv`.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1893#issuecomment-1397491031:410,simpl,simple,410,https://su2code.github.io,https://github.com/su2code/SU2/issues/1893#issuecomment-1397491031,1,['simpl'],['simple']
Usability,I did changes to Quickstart and created a simple docker file with readme on how to create the binaries and work with it. This will help others to jump start their development environment. I am also write up on setting up their development environment.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/168:42,simpl,simple,42,https://su2code.github.io,https://github.com/su2code/SU2/pull/168,1,['simpl'],['simple']
Usability,"I did few tests (CGNS mesh format), following are the details -; **While trying to use all 8 cores per node (Total 70 nodes, each having 24 GB RAM)-**. Loading section Connect_PRISM of element type Prism.; malloc failed for element data; malloc failed for element data; ............ malloc failed for element data; Error allocating I4->I8 data array...; malloc failed for element data; Error allocating I4->I8 data array...; malloc failed for element data; ................; malloc failed for element data; malloc failed for element data; Loading section Connect_TETRA of element type Tetrahedron. **While trying 6 cores in each node**. Loading section Connect_PRISM of element type Prism.; malloc failed for element data; malloc failed for element data; malloc failed for element data; malloc failed for element data; malloc failed for element data. **Finally settled with 4 cores at each node and memory usage at every node is--** . PID USER PR NI VIRT RES SHR S %CPU %MEM TIME+ COMMAND ; 4652 aero 30 10 872m 746m 10m R 100 3.1 43:03.38 SU2_CFD ; 4653 aero 30 10 1076m 951m 10m R 100 3.9 43:12.10 SU2_CFD ; 4654 aero 30 10 1162m 1.0g 10m R 100 4.3 43:15.15 SU2_CFD ; 4655 aero 30 10 1458m 1.3g 10m R 100 5.5 43:08.96 SU2_CFD . **With above, memory usage seems to be around 16.8 % of 24 GB RAM**. Hope I am not missing something else (some other usage etc...) and what should be the approximate memory requirement for such mesh sizes (around 60 million or is there a general guideline of memory requirement with mesh size for RANS computation with Implicit solver) ?. Regards; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/291#issuecomment-232018195:1477,guid,guideline,1477,https://su2code.github.io,https://github.com/su2code/SU2/issues/291#issuecomment-232018195,1,['guid'],['guideline']
Usability,"I don't think the fix is as simple as it seems.; Indeed looking back at how we developed the CGNS reader, It was originally meant to read multiple zone in a single file. But during development, someone decided to restrict the reader to only one zone per file (and I don't know if it was validated). So now we are seating in the middle. If we replace line 169 of CGNSFVMMeshReader :; <pre>; if ( nzones > 1 ) {; SU2_MPI::Error(string(""CGNS reader currently expects only 1 zone per CGNS file."") +; string(""Multizone problems can be run with separate CGNS files for each zone.""), CURRENT_FUNCTION);; }; </pre>; by; <pre>; if ( cgnsZone > nzones) {; cgnsZone = 1;; }; </pre>. we can easily support multiple zone in one file. To support one CGNS zone per file, I guess that user should provide either the index in the cgns file of the zone we want to read or even better its name and not rely on SU2 numbering of zones. I think that supporting multiple mesh zones in the same file at the same time as one zone per mesh file should be possible as long as enough information is provided by the user. In this case, I am wondering how the option MULTIZONE_MESH and MULTIZONE option are interacting in the related issue. When MULTIZONE_MESH is set to NO do we expect one mesh file per zone ?; And in this case we can force CGNS Reader to read only the first Zone. In a more generic way something like this should be possible:; MULTIZONE=YES; CONFIG_LIST= (zone_1.cfg, zone_2.cfg, zone_3.cfg); CGNSZONENAMES = (""FluidRotor"", ""Solid"", ""FluidStator"") # To let CGNS pick the right zone in the file and if it not found the first zone can be used (current SU2 behavior). CGNSZONENAMES could also be set in each config file.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1566#issuecomment-1073204565:28,simpl,simple,28,https://su2code.github.io,https://github.com/su2code/SU2/pull/1566#issuecomment-1073204565,1,['simpl'],['simple']
Usability,"I expect that epsilon to be a simple measure to avoid division by 0, if that lower bound had physical meaning it would have to be multiplied by some reference factors to make its dimensions appropriate, otherwise SST would not give the same results for the same Reynolds obtained with different rho and mu.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2284506205:30,simpl,simple,30,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2284506205,1,['simpl'],['simple']
Usability,"I find your work really interesting. I've been studying the internal flow field in compressors and have had good results using SU2's SA_EDDES for calculating the cantilevered stator with a tip clearance. If you need help with code verification, I'd be glad to assist.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2150#issuecomment-2066011801:193,clear,clearance,193,https://su2code.github.io,https://github.com/su2code/SU2/pull/2150#issuecomment-2066011801,1,['clear'],['clearance']
Usability,I found that SU2/Common/include/option_structure.hpp sets a limit on the number of FFD boxes; MAX_NUMBER_FFD = 15;	 /*!< \brief Maximum number of FFDBoxes for the FFD. */. Is there a reason for this limit or can I simply set it to a higher value and recompile?; I would like to have 65 boxes (that would make one box per wing segment for the wing that I am designing). But I think I can work with 20 boxes If 65 is really to much for the program to handle.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/684:214,simpl,simply,214,https://su2code.github.io,https://github.com/su2code/SU2/issues/684,1,['simpl'],['simply']
Usability,"I guess I fixed it, somehow the two ""DonorInfo"" classes in different cpp files got mixed up. EDIT: Rightly so apparently: https://stackoverflow.com/questions/10671956/same-class-name-in-different-c-files; Learn something new every day.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1126#issuecomment-740136083:205,Learn,Learn,205,https://su2code.github.io,https://github.com/su2code/SU2/pull/1126#issuecomment-740136083,1,['Learn'],['Learn']
Usability,"I have a few updates. I found out that most of my FGMRES problems in this branch where related to the fact that I was using single precision for the linear system. You can see it in this graphs for the residuals of Rho. ![RMSRho_Mesh_3](https://github.com/user-attachments/assets/185b8195-e415-4dff-9332-cff573c069cc). The first two curves are in mixed-precision and they stop long before reaching the minimum residual required due to divergence of the linear solver. Moreover, it seems that the 2003 model here implemented (which, simply put, considers the full reynolds stress tensor for the computation of the production of k and always considers k in the stress tensor and in the thermodynamic variables) has faster convergence and increases the recirculating zone (maybe due to the reduction of turbulence kinetic energy) which is a feature that has also been seen in [DOI:10.1017/aer.2020.93]. . ![SFC_Mesh_3](https://github.com/user-attachments/assets/81a50021-6b58-4a84-9057-a18b5bab023c). There are some differences between the use of the TMR boundary conditions and the ones used before. The results improve with respect to the develop in the prediction of the SFC distribution, which has results completely off from the V&V page of SU2. ![SFC_Mesh_3_Old](https://github.com/user-attachments/assets/0f4d634b-df31-4f86-a324-d9f67947f1ff). ![RMSRho_Mesh_3_Old](https://github.com/user-attachments/assets/24d5c2f5-93fe-432f-82d9-c050a90f7339). I may keep on checking if the implementation of the v2003 model is correct or not by searching for other test cases (probably coming from DOI:10.1017/aer.2020.93).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2393433487:532,simpl,simply,532,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2393433487,1,['simpl'],['simply']
Usability,"I have added 1D interpolation capability in SU2. It will be helpful in running cases with inlet profiles with radial variation. Additionally, I have added two classes CAkimaInterpolation and CLinearInterpolation which can be used for other purposes and can be initialized very simply by using pointers to C1DInterpolation class. The following is the Inlet file format that you can give now:. radius, TT, PT, unit_Vr, unit_Vtheta, turb variables... OR; radius, TT, PT, alpha, phi, turb variables.. *alpha is the angle taken normal to the direction of flow (swirl angle), phi is the flow angle taken from the direction of flow (more details in the velocity triangle pdf attached). The solver can then interpolate the data two ways: 1D Linear Interpolation or 1D Akima Interpolation. I added three new options in .cfg file:; INLET_INTERPOLATION_FUNCTION = None, Linear_1D, Akima_1D; INLET_INTERPOLATION_TYPE = vr_vtheta, alpha_phi; PRINT_INLET_INTERPOLATED_DATA = yes/no (for those curious what is the exact interpolated data). Given the generality of the approach, I have taken this will work for 2D cases or cases with multiple inlets without any issue. I am attaching a sample test case with detailed examination of results shown below. I am also attaching my equations that I used. Note that I define theta counterclockwise positive from x-axis. [testcase.zip](https://github.com/su2code/SU2/files/4217420/testcase.zip). I changed the inlet file angle to degrees rather than radians for alpha,phi option. All the graphs below have been plotted with radians. I have included both radians and degrees inlet file in the testcase. From now on, the inlet angles have to be in degrees! I have plotted graphs to verify the conversion was successful but I am not posting the graphs here as it is already a lot of data. For further details on Vr Vtheta and alpha, phi definitions you can refer this document: ; [velocity_triangles.pdf](https://github.com/su2code/SU2/files/4219369/velocity_triangles.pdf). The",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/815:277,simpl,simply,277,https://su2code.github.io,https://github.com/su2code/SU2/pull/815,1,['simpl'],['simply']
Usability,"I have added the new option NUM_METHOD_GRAD_RECON to specify a separate method for computing the reconstruction gradient. If that option is not present, then no additional memory is allocated and no extra gradient computation occurs. I have also put in simple feedback from the linear solver residual and the nonlinear residual to the nonlinear controller. If the linear system converges less than a half an order of magnitude, then the CFL is lowered. A Cauchy-like criteria checks for stall in the nonlinear residuals and drops the CFL to the minimum floor to kick the solver out of a rut. Both of these use factors that are empirical from my tests. Will probably be improved with time and more testing, but they do seem to improve behavior. @koodlyakshay : I had success with the inc. laminar backward facing step after adding extra iterations to the linear solve. For some cases, this is necessary to get a large speedup. I am seeing good speedup for most of the cases within our TestCases repo. If you have some tough cases not covered by the repo, please give those a try.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-536145232:253,simpl,simple,253,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-536145232,2,"['feedback', 'simpl']","['feedback', 'simple']"
Usability,"I have covered all operations used in non adjoint use, the non ideal part of the implementation I mentioned above is that the parallelization is ""local"", i.e. we get to the operation we want to make parallel and launch the threads there, for simple vector-vector operations the overhead may be significant.; Ideally we would have a parallel construct at a higher level, say CSysSolve::Solve, so that the threads are already in flight when we get to those small operations.; In principle it is not too hard to do that, but it needs to be done carefully especially when the execution gets to an MPI part of the code (which thread(s) communicate, etc.).; I will try to benchmark this to put numbers on the performance / simplicity trade-off.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/830#issuecomment-560572616:242,simpl,simple,242,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-560572616,2,['simpl'],"['simple', 'simplicity']"
Usability,I have created already a small document giving infos on how to prepare for version 7.0. https://su2code.github.io/docs/Guide-to-v7/,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/724#issuecomment-534095451:119,Guid,Guide-to-,119,https://su2code.github.io,https://github.com/su2code/SU2/pull/724#issuecomment-534095451,1,['Guid'],['Guide-to-']
Usability,"I have mainly implemented the Preaccumulation approach for the discrete adjoint solver. This drastically reduces the memory requirements. However, this requires some additional statements in the code itself. A lot of them are in the numerics_direct_mean.cpp and numerics_direct_turbulent.cpp. I hope that they will not create to much confusion. If the code is compiled with double, all of the AD::... statements are simply expanded to nothing. ~~To improve readibilty I used variadic templates to declare inputs/outputs of the preaccumulation sections. Due to this, C++11 support is now also required for the normal version of the code!~~ (Removed variadic templates for now). I will add more information about this technique to the developer wiki soon. Other important thing: I removed ADOLC support for now. I could not guarantee that it is still working.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/220:416,simpl,simply,416,https://su2code.github.io,https://github.com/su2code/SU2/pull/220,1,['simpl'],['simply']
Usability,"I have seen that it is possible to specify the number of iterations in command line (shape_optimization.py)... but, I think it is clear to have both options (number of iterations and bounds - same for all the variables- ) in the config file.; Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/49#issuecomment-54920484:130,clear,clear,130,https://su2code.github.io,https://github.com/su2code/SU2/issues/49#issuecomment-54920484,1,['clear'],['clear']
Usability,"I have simplified the input method now. Users need to simply add a line; ; MARKER_ROUGHWALL = (marker_name_1, k_1, marker_name_2, k_2, ..). By default all walls are smooth and only the rough walls need to be listed and the order shouldn't matter. . Edit: Just realized you asked me to use a different name. Will fix it in the next commit.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/877#issuecomment-642800393:7,simpl,simplified,7,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-642800393,2,['simpl'],"['simplified', 'simply']"
Usability,I have the same problem but I don't understand the solutions you suggested. Could you explain to me a bit clear?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/469#issuecomment-707290679:106,clear,clear,106,https://su2code.github.io,https://github.com/su2code/SU2/issues/469#issuecomment-707290679,1,['clear'],['clear']
Usability,"I haven't looked at the python wrapper in detail, we had previously tracked several properties which are not available in the conventional convergence tracker (such as Cmy) and used the stop file to obtain the data when appropriate. We have considered increasing the save frequency, but there are several files which are not created at every save point; thereby forcing each ""standard"" run to become a ""run to nearest save"" then ""resume for 1 time-step to get the actual output data"". As the decomposition and some of the file writes take a significant amount of time, it is a non-starter for commercial applications. We would switch back to v6 (which had the capability) but we need some of the other features in v7. I'll take a look at the python wrapper. Thank you for your candor.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1304#issuecomment-862344695:430,resume,resume,430,https://su2code.github.io,https://github.com/su2code/SU2/issues/1304#issuecomment-862344695,1,['resume'],['resume']
Usability,"I implemented most of the reviewers suggestions. The only suggestion I left unchanged is the upper-case consistency issue raised by Wally. Since it is an optional output and it depends on the controlling variable names the user provides, I think it would be more intuitive to keep the font case consistent between the names under `CONTROLLING_VARIABLE_NAMES` and the corresponding `RMS_` outputs.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2057#issuecomment-1643680580:263,intuit,intuitive,263,https://su2code.github.io,https://github.com/su2code/SU2/pull/2057#issuecomment-1643680580,1,['intuit'],['intuitive']
Usability,"I just committed a second round of changes that I would appreciate some feedback on. Compilation is successful with these changes, however, upon testing, I receive the following message: . Error in ""void CConfig::SetConfig_Parsing(std::istream&)"": ; -------------------------------------------------------------------------; Line 271 SPECIFIED_SUPERSONIC_INLET_PROFILE: invalid option name. Check current SU2 options in config_template.cfg.; Did you mean SPECIFIED_INLET_PROFILE?; Line 274 SUPERSONIC_INLET_FILENAME: invalid option name. Check current SU2 options in config_template.cfg.; Did you mean INLET_FILENAME?. I had already adjusted CConfig.cpp to include supersonic inlet profile inputs, but apparently I am not implementing everything I need to. I'm unsure where else I would need to make changes. Any suggestions?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1652#issuecomment-1151296832:72,feedback,feedback,72,https://su2code.github.io,https://github.com/su2code/SU2/pull/1652#issuecomment-1151296832,1,['feedback'],['feedback']
Usability,"I just found [a blog post](https://codingnest.com/the-future-of-catch2/) on the future directions of Catch2. There's a couple of important points for our discussion. The developer plans to adopt a hybrid approach, with:. 1. A stripped-down, header-only version.; 2. A full-feature, typical library (i.e. it must be compiled and linked). This approach is very similar to Boost's setup. Google Test does not offer a header-only version. Additionally, the developer plans to drop C++11 support, and move to C++14. A simpler branch will still support C++03. It's not clear which features are supported in the C++03 variant, and which ones aren't. Google Test is also moving to support only C++11 in their next release, but their current release fully supports pre-C++11. All of this discussion raises the question: Do we want to require C++11 for unit tests?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-500411194:513,simpl,simpler,513,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-500411194,2,"['clear', 'simpl']","['clear', 'simpler']"
Usability,"I just managed to run my first SU2 CFD simulation, however it took me a few days to get it to work. ""SU2_CFD.exe"" was always crashing right after ""Begin solver"". It took me quite a while to figure out that I was missing some required inputs in the "".cfg"" file (for example CONV_NUM_METHOD_FLOW), especially because this isn't mentioned clearly on the website. I would suggest the following solutions:. - An error message telling which required input is missing in the .cfg to help beginners with debugging.; - A simple list with all the required inputs, i.e. those which don't have a default value, for instance on the website.; - An example of a minimal working .cfg file, basically the opposite of [this one](https://github.com/su2code/SU2/blob/master/config_template.cfg). (This is my first time opening a feature request on Github, I hope I did everything right)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/842:336,clear,clearly,336,https://su2code.github.io,https://github.com/su2code/SU2/issues/842,2,"['clear', 'simpl']","['clearly', 'simple']"
Usability,"I just pushed a new version of your inlet profile branch. I really like the solver class abstractions. I can tell you have a good grip on the classes and where data should live - nice job. Here are the changes I have made:; * everything is generalized in parallel for an arbitrary number of inlets in the file. The file format changed slightly.; * I moved around some routines and data to take more advantage of inheritance and encapsulation: it is now more like the restart routines where the reading and data live in the parent CSolver class, the specific load functions are found in the solvers (I overloaded SetInletAtVertex), and the template file is written by COutput. It is written such that any solver could eventually use it for any marker type by adding the appropriate SetInletAtVertex routine for solver-specific data (might need to rename for different marker types rather than inlet) and writing an appropriate template file writer in the output.; * for now, it is still requiring a essentially a matching profile point (nearest neighbor within a tight tolerance) by default, but you can have an arbitrary number of points in the file for each marker, and we can eventually add interpolation easily. We already have some of these routines.; * the turbulent solvers now all use the Inlet_TurbVars data structure even for uniform inlets. Can you please check this with Python?; * multigrid is now working. I put in a boundary face area-averaged restriction operator for the inlet profiles. Any decent approximation on the coarse levels should work ok. I left all of your original routines there, but deactivated them for the moment. Can you please give it a look and let me know what you think (and whether it is working for you)? Feedback most welcome. If we are happy with it, we can clean it up and submit a PR.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/467#issuecomment-371716916:1744,Feedback,Feedback,1744,https://su2code.github.io,https://github.com/su2code/SU2/issues/467#issuecomment-371716916,1,['Feedback'],['Feedback']
Usability,"I just ran the case and I see this as well, even after complete convergence. You clearly can see this in the energy and pressure (and density) but not in the momentum terms. The temperature field also looks smooth. So may be related to density/pressure.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1373#issuecomment-932510910:81,clear,clearly,81,https://su2code.github.io,https://github.com/su2code/SU2/issues/1373#issuecomment-932510910,1,['clear'],['clearly']
Usability,"I know that it can be frustrating sometimes operating within the constraints of an open-source project such as ours. However, I can assure you that folks do indeed care about performance, and sometimes I have the impression that we stress over relatively small performance issues (remember to keep the total pie chart of where the major work of the solver resides in mind). . The option WRT_PERFORMANCE= YES is available to get timings for runs broken down by preprocessing, compute, and output phases, and I think we should focus our performance concerns first on issues within the compute phase, unless a major bottleneck appears in the other two phases that completely prohibits us from running larger cases (we have been clearing many of those out lately). We do not have the resources of a professional software company, but what we do have is a great community of folks who are putting in lots of effort on a volunteer basis. @pcarruscag: your reviews have been very helpful for improving contributions - thank you for that effort. Let's keep supporting each other, but let's also make sure we stay positive and foster a welcoming environment to encourage more participation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/724#issuecomment-534682406:725,clear,clearing,725,https://su2code.github.io,https://github.com/su2code/SU2/pull/724#issuecomment-534682406,1,['clear'],['clearing']
Usability,"I made the blending function for the FFD implementation more general and added the possibility to use BSplines instead of Bezier curves. . BSplines have a local support which might be advantageous in some cases. The implementation is ready, I'll add a test case asap (possibly simply based on an existing FFD case).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/354:277,simpl,simply,277,https://su2code.github.io,https://github.com/su2code/SU2/pull/354,1,['simpl'],['simply']
Usability,"I noticed the addition of the Guide to V7 page being introduced to the SU2 page. I think this would make a great starting point to beef up our documentation/tutorial pages. Using a similar format, we could discuss the available options in SU2. Speaking from experience, new SU2 users face an extremely high learning curve, often scaring them away. I believe this would help alleviate that problem. I understand this is no small task, and welcome others thoughts on the issue",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/775#issuecomment-536031012:30,Guid,Guide,30,https://su2code.github.io,https://github.com/su2code/SU2/issues/775#issuecomment-536031012,2,"['Guid', 'learn']","['Guide', 'learning']"
Usability,"I see that the Onera M6 mesh is a half-wing with a symmetry plane and I'm not sure how the mesh deformation behaves in this case (for example, there should be zero out-of-plane movement). . Personally, I like really simple examples where I know what should happen (symmetric airfoil, subsonic flow, no sweep) and I did all my testing during the last weeks with the NACA0012 3m wing. At the same time, it is closer to how I would model a ""real"" aircraft (aircraft in the center of a spherical farfield) than the Onera M6, which is more wind-tunnel-like. The mesh and everything is there, so it's no additional work for me and I would be happy to contribute this as a new example. What's the main argument in favor of the Onear M6 wing / objection against a new example?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1954#issuecomment-1547295112:216,simpl,simple,216,https://su2code.github.io,https://github.com/su2code/SU2/pull/1954#issuecomment-1547295112,1,['simpl'],['simple']
Usability,"I simple wrote a program to test the grid, which searches for the boundary elements in the single faces, i.e. faces that are only part of one volume element, of the volume grid. What the error message means is that for 4 triangular surface elements of boundary marker BODY there is no corresponding face of the volume elements that is only part of one volume element. . When I include the faces that are shared by two volume elements, only two boundary elements are not found. So in short, you have two boundary elements in boundary marker BODY that are no part of any volume element and two boundary elements that are shared by two volume elements.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/683#issuecomment-494675549:2,simpl,simple,2,https://su2code.github.io,https://github.com/su2code/SU2/issues/683#issuecomment-494675549,1,['simpl'],['simple']
Usability,"I suggest that you incorporate Wray-Agarwal (WA) one equation RANS model listed on NASA TMR in SU2. NASA is planning to list two equation WA-gamma transition model on NASA TMR next month. WA model is available on Github and WA model will also be posted on Github as source code. If you need any additional information or help, let me know.; Ramesh Agarwal; ________________________________; From: Pedro Gomes <notifications@github.com>; Sent: Wednesday, January 6, 2021 10:13 AM; To: su2code/SU2 <SU2@noreply.github.com>; Cc: Agarwal, Ramesh <rka@wustl.edu>; Comment <comment@noreply.github.com>; Subject: Re: [su2code/SU2] Info on current status of LM transition model in SU2 (#1130). @lorenzob95<https://github.com/lorenzob95> we talked about this issue in our weekly developers meeting.; The current implementation of LM in the code is not stable enough and it has known bugs, so we will not re enable it for now.; A revised implementation by @vdweide<https://github.com/vdweide> exist in branch https://github.com/su2code/SU2/tree/feature_LM_model, but this is based on SU2 v6.2, it has been used on simple problems, convergence is not ideal on more complicated ones.; The decision is to wait for some developments that will make it easier to bring this revised implementation into version 7 (which is different in many ways from 6).; You can follow this issue to know when this gets implemented, it will probably take a few months. —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/1130#issuecomment-755395168>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ASK3WAEG3LW3AZJRUPORJPDSYSD2VANCNFSM4UVYXAAA>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1130#issuecomment-755440165:1104,simpl,simple,1104,https://su2code.github.io,https://github.com/su2code/SU2/issues/1130#issuecomment-755440165,1,['simpl'],['simple']
Usability,"I tend to agree w Eran on this topic. When it is working as it should, it is very convenient to have the makefiles already available in the repo. I switch between Mac, Ubuntu, and a red hat cluster without needing to update anything or call the bootstrap script. I rarely use it.. basically only when adding or removing files to the build. Also, it is good to minimize dependencies, as sometimes old machines or clusters have limited tool sets. But, clearly we should at a minimum fix the issue that some of you are finding with the autotools, which should just need an update. What systems are you having trouble with? It’s important that we don’t jump too far ahead for portability reasons (that’s why we have kept the old versions for so long). Do you have an idea of the minimum autotools you need for the failing systems? We could start by updating to that version and see if things stabilize.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/586#issuecomment-424210049:450,clear,clearly,450,https://su2code.github.io,https://github.com/su2code/SU2/pull/586#issuecomment-424210049,1,['clear'],['clearly']
Usability,"I think I implemented all the modifications you suggested. I am sorry you see all the commits in between, unfortunately due to Covid I work outside of office and I actually use Github to push the modified code to the office PC. I was actually working on a separate branch but, for reason that I do not understand, all the commits have been moved in the merging process... sorry about that. I am still learning git. In particular the modifications are:. - The functions related to static mesh deformation have been removed. I only included some new lines in the python wrapper ; that overwrite the initial velocities to zero and push back the solution.; - I now use the BC_Sym_Plane of the FEA solver for the deformation at the symmetry plane. I had to add a flag that avoids ; accessing LinSysReact in case of mesh deformation, as this is not initialised in that context.; - GetnMarker_Match_Deform_Mesh is not present anymore; - The marker has been renamed from MATCH_DEFORM_MESH to DEFORM_MESH_SYM_PLANE. All the functions have also ; been renamed accordingly; - I included the SU2 header in all the new files, changing the version number to 7.0.8. I did not modify the version number of ; the files that were already present in SU2 prior to this PR. I think the merging process should take care of that, am I wrong?; - The python functions that were separated in x,y,z component now give back an array and are merged into one function only; - The descriptions for the methods have been added; - The test case has been removed. I actually prepared a tutorial and all the appropriate files will be placed in the tutorial and ; website repos. I will now perform a PR for those repos so that you can see the material. Again thank you very much and sorry for the mess with the ""internal"" commits. . Please let me know if you think I missed something",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1124#issuecomment-742471972:401,learn,learning,401,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124#issuecomment-742471972,1,['learn'],['learning']
Usability,"I think its a good idea to separate the weight from the objective function. This makes it more clear and flexible. However, what bothers me a little bit is that the OBJECTIVE_FUNCTION option is now used for two things. Namely for the optimization and for the individual adjoint runs. Maybe it would be good to still have another option for specifying the obj. function for the adjoint run itself (with a completely different name, so that there won't be any confusions). . Maybe it's less of a problem then I think, though.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/241#issuecomment-185126081:95,clear,clear,95,https://su2code.github.io,https://github.com/su2code/SU2/pull/241#issuecomment-185126081,1,['clear'],['clear']
Usability,"I think the last commit addressed your concerns @arubino, thanks for the feedback.; @LaSerpe - that fsi bug was fixed in a separate pull request.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/312#issuecomment-253286105:73,feedback,feedback,73,https://su2code.github.io,https://github.com/su2code/SU2/pull/312#issuecomment-253286105,1,['feedback'],['feedback']
Usability,"I think the problem is in the fix for the symmetry boundary in PR #2194. I tried with the develop at the last commit (LC), at the commit before the implementation of the correction (BC) and at the commit of the implementation (AC). It is clearly visible that something is happening with the symmetry BC correction. I will look further into it. ![CommitsComparison_RMSRho](https://github.com/user-attachments/assets/7db41c0e-2885-4e66-bd1c-d01b038430bc). Also the profiles of the Mach number and nu_tilde are the same between LC and AC. With the BC instead the Mach number and nu_tilde are correct.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2370888175:238,clear,clearly,238,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2370888175,1,['clear'],['clearly']
Usability,"I think the writing is clear, but inaccurate. The line I quote in the initial report is still there. . The code does seem to have been updated, and it now lives in CPhysicalGeometry::Read_SU2_Format_Parallel; Here is the relevant code (for 2D I think). Current lines 6100-6104 of geometry_structure.cpp. ```; #ifndef HAVE_MPI; point_line >> Coord_2D[0]; point_line >> Coord_2D[1];; #else; if (size > SINGLE_NODE) { point_line >> Coord_2D[0]; point_line >> Coord_2D[1]; point_line >> LocalIndex; point_line >> GlobalIndex; }; else { point_line >> Coord_2D[0]; point_line >> Coord_2D[1]; LocalIndex = iPoint; GlobalIndex = node_count; }; ```. In serial, the index is completely ignored. In parallel, both are used. Unlike what the documentation says, the node index is completely meaningless in parallel, and there is no documentation of a needed global index in parallel. . I don't know what the correct behavior should be. That is a team decision. I think that the behavior should be roughly the same in serial and parallel. Either the local indices matter, or they don't. If they don't matter, they should be removed. Actually implementing this behavior (in either direction), however, could break a lot of people's code, as in either direction mesh files that were previously working could be different. We could also just have different behavior in serial and parallel, but it should be documented as such. . Thoughts @economon @fpalacios ?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/47#issuecomment-104360874:23,clear,clear,23,https://su2code.github.io,https://github.com/su2code/SU2/issues/47#issuecomment-104360874,1,['clear'],['clear']
Usability,"I totally agree. On real meshes, Omega usually drops to extremely low values. In cases where the cross-diffusion term is negative (allowed to be negative), it behaves as a sink term, further amplifying the drop of Omega. A simple addition of this term to the implicit diagonal is insufficient (I tried this). Other more rigorous methods are required (some available in the open literature). . My main argument is that the factor (1-F1) guarantees only the k-epsilon branch outside the boundary layer, in which the cross-diffusion term is already positive. It may not be so because of numerical errors.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2253297698:223,simpl,simple,223,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2253297698,1,['simpl'],['simple']
Usability,"I tried changing line 1387 in CEulerSolver::SetReferenceValues to simply if (dynamic_grid) {...}, but that had no effect.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1954#issuecomment-1463922825:66,simpl,simply,66,https://su2code.github.io,https://github.com/su2code/SU2/pull/1954#issuecomment-1463922825,1,['simpl'],['simply']
Usability,"I understand your frustration, and the feedback is helpful. Encouraging more participation in Issues and PRs is very important for us. We are still learning and improving our processes. A good metric for us to increase in the project is the total number of *different* people submitting/participating in PRs/Issues (not the total number of comments from just a handful). The best way to scale is to have the work evenly distributed among many folks, rather than just a handful processing the PRs. This will likely take some time & training, but I expect we can accomplish it while remaining positive. Open to good ideas there on how to better achieve it. . As for the other topic - I think that our recent move toward draft PRs may help with describing design decisions. This will also take some time to be adopted, and may or may not reach the depth necessary in the descriptions, but it is a good first step so that we can see things progress in real time. Using the project boards to list tasks and post comments is also helpful (but takes more effort). Open to ideas there too.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/724#issuecomment-534720511:39,feedback,feedback,39,https://su2code.github.io,https://github.com/su2code/SU2/pull/724#issuecomment-534720511,2,"['feedback', 'learn']","['feedback', 'learning']"
Usability,"I understand, but it helps to keep the code more approachable and portable. That being said, there may be some work proposed soon using templates in the linear solver classes, and it would be great to have your feedback then. We really appreciate your interest!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/400#issuecomment-360075745:211,feedback,feedback,211,https://su2code.github.io,https://github.com/su2code/SU2/issues/400#issuecomment-360075745,1,['feedback'],['feedback']
Usability,"I use the connection as the additional marker. Since the connection is two sided, nodes are duplicated. This is quote from the forum post I linked earlier . >....creates unique (yet coincident) points for each ""side"" of the domain.... The quote was about Gmsh exporter and not SU2, but later on they say this is the case for all exporters except Fluent. These duplicated nodes affect the mass and momentum balance because they each carry information about the neighbors on their respective side only. . This might not be a problem if we were to apply a strong boundary condition like a wall because the dirichlet condition will simply overwrite any residuals and apply the appropriate value to both the nodes. However when used as an internal marker or any other weak boundary condition, the duplicate nodes each carry part of the residuals and if they don't communicate with each other an imbalance will occur. At the moment, it appears they do not communicate with each other.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/986#issuecomment-629182862:628,simpl,simply,628,https://su2code.github.io,https://github.com/su2code/SU2/issues/986#issuecomment-629182862,1,['simpl'],['simply']
Usability,"I was running some tests using a simple geometry but for the refinement seems to be chewing up the geometry. Has anyone who has worked on 3D geometries experienced this or figured out a way to avoid this?. I was using the following settings:; ```; % ------------- MESH ADAPTATION PARAMETER ------------%; %; % Type of sensor used for adaptation; % Options include GOAL (adjoint-based), MACH, PRES; PYADAP_SENSOR= MACH; % Maximum cell size for adaptation; PYADAP_HMAX= 500.0; % Minimum cell size for adaptation; PYADAP_HMIN= 1e-9; % Gradation factor (typically 1.2-1.8); PYADAP_HGRAD= 1.8; % Norm used for adaptation; % 1.0 or 2.0 recommended for inviscid flows; % 4.0 recommeneded for viscid; ADAP_NORM= 2.0; % Approximate mesh size (NPOI) at each level; PYADAP_COMPLEXITY= (1000000, 1300000, 1500000); % Number of adaptations performed at each level; PYADAP_SUBITE= (2, 2, 2); ```. ![refine](https://user-images.githubusercontent.com/16842258/104834786-0b94fa80-58e5-11eb-9018-687ffc5aaa9d.png). I noticed a few comments up, there is the `PYADAP_BACK` setting, which sounds like it might solve this, but how should one use this? Should the geometry alone be re-meshed to a high resolution and the whole volume exported as a SU2 block? Or should it be just a surface mesh? (It seems that Pointwise is not able to output only the surface mesh in SU2 format.)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-761751741:33,simpl,simple,33,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-761751741,1,['simpl'],['simple']
Usability,"I wonder if maybe it would be a better idea to delete this (and other stuff) from externals/ and add it to subrojects/ instead. You can use `meson wrap install catch2`, and it's a simple ini file to vet instead of an 18k line file. git diffs become a lot simpler too.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1726#issuecomment-1198882302:180,simpl,simple,180,https://su2code.github.io,https://github.com/su2code/SU2/pull/1726#issuecomment-1198882302,2,['simpl'],"['simple', 'simpler']"
Usability,"I would like to bring your attention to the existence of this gem:; https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#main. Of which I use maybe a subset in my often verbose and perhaps repetitive code reviews.; The things I comment on are as much a matter of style as multiplication taking precedence over addition is.; It is how ""They"" do it. So do please browse the guidelines.; Ingraining some good guidelines, goes a long way towards freeing one's mind to focus on important implementation aspects.; Does this thing need to be const? Just make it, the compiler will tell you if it can't or if you were about to have a bug, the opposite does not happen.; I need this piece of code from somewhere. -> Put it in a function.; My function does not fit the screen. -> Too long.; new su2double[nSomething] -> Some container type, which one? The simplest that will do the job.; etc.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1218:380,guid,guidelines,380,https://su2code.github.io,https://github.com/su2code/SU2/issues/1218,3,"['guid', 'simpl']","['guidelines', 'simplest']"
Usability,"I'll try to break down each request to make it clearer. Request: Use nomenclature consistent with the C++ interface (point instead of node, etc.); Reason: People who know the C++ interface will know how to use the python wrapper straight away, people who learn how to use the python wrapper will be able to understand the C++ implementation (without needing a translation layer in their mind all the time). Request: Return connectivity/adjacency as local indices instead of global; Reason: This is the natural way of referencing data in an MPI code, local indices correspond directly to data stored in the partition thereby making it more efficient to access (without global-to-local conversions, which are much more expensive than local-to-global). Furthermore, the local ordering strategy improves the efficiency of loops (over edges, neighboring points, etc.). Request: Do not apply unnecessary ""transformations"" to the connectivity/adjacency as part of the API; Reason: Increases the maintenance burden and makes for a less versatile API. By returning the local indices that form a marker or element, it is trivial to retrieve any other data for those indices (the ""transformation""). For example, the solution at those points, the point coordinates, whether the points are halo or domain points, the global indices, etc.; This way, by adding a **single** function to the API e.g. get the global index of a point of element, the functionality of the API grows a lot more because the user can apply the function to **any** connectivity/adjacency function. Request: Do not offer too many overloads of the same function; Reason: Increases the maintenance burden and it's returning the data in structures that are not very efficient, namely vector of vectors. It is much easier to offer domain-wide data access on the python side, as a very small function that can be part of wrapper utilities (i.e. live only in python but not c++). It may even be more efficient since you make a numpy array/matrix in",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1300#issuecomment-1402197827:47,clear,clearer,47,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1402197827,2,"['clear', 'learn']","['clearer', 'learn']"
Usability,"I'm at the beginning, so i have no really clear my path. Anyway a soon as; possible i will follow your instructions. Sorry for this difficulty, but to; me a su2 development group is something totally new and i have to clarify; some aspects with my PhD student and with my professor. Thanks for your help; Marco. Il giorno gio 20 gen 2022 alle ore 11:47 Nijso ***@***.***>; ha scritto:. > Hi! If you want to work together over github, you can also create a; > project here:; > https://github.com/su2code/SU2/projects?type=beta and define tasks and; > divide the work. It would be good if you can sort out what the overlap is; > and what the unique parts of your research will be.; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/1496#issuecomment-1017354022>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AXL7TQXSL55PQIEHSDCPT4LUW7R3TANCNFSM5MC56OYQ>; > .; > Triage notifications on the go with GitHub Mobile for iOS; > <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675>; > or Android; > <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>.; >; > You are receiving this because you commented.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1496#issuecomment-1017587516:42,clear,clear,42,https://su2code.github.io,https://github.com/su2code/SU2/pull/1496#issuecomment-1017587516,1,['clear'],['clear']
Usability,I'm glad you made it work. Like I said it's not needed for simple tutorials.; The general conditions in which you may find it useful are described here: https://su2code.github.io/docs_v7/Linear-Solvers-and-Preconditioners/,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1349#issuecomment-895948814:59,simpl,simple,59,https://su2code.github.io,https://github.com/su2code/SU2/issues/1349#issuecomment-895948814,1,['simpl'],['simple']
Usability,"I'm late to the party here, but just a note to say that the original implementation for the incompressible source terms are indeed from the text that @WallyMaier / @vdweide shared. It was added as part of the work in this paper (https://economon.github.io/docs/AIAA-2018-3111.pdf), but I did not test it much beyond a simple laminar channel case or really attempt to treat turbulence at the time. Thanks for putting in more effort on these terms!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1095#issuecomment-727633198:318,simpl,simple,318,https://su2code.github.io,https://github.com/su2code/SU2/pull/1095#issuecomment-727633198,1,['simpl'],['simple']
Usability,"I'm still not clear on how the convection BC is supposed to work. If I understand correctly up to this point HEAT_FLUX and HEAT_TRANSFER are largely identical:; https://github.com/su2code/SU2/blob/1b085062547ec5b066a28ddeeacf4907588f4f5a/SU2_CFD/src/solvers/CNSSolver.cpp#L476-L479. Essentially in both cases the heat flux is calculated and saved to `Wall_HeatFlux`. For both BCs this is taken into account via the residuals:; https://github.com/su2code/SU2/blob/1b085062547ec5b066a28ddeeacf4907588f4f5a/SU2_CFD/src/solvers/CNSSolver.cpp#L491-L496. and the residual contributions is added:; https://github.com/su2code/SU2/blob/1b085062547ec5b066a28ddeeacf4907588f4f5a/SU2_CFD/src/solvers/CNSSolver.cpp#L530-L532. But I'm a bit lost why HEAT_TRANSFER is treated differently here:; https://github.com/su2code/SU2/blob/1b085062547ec5b066a28ddeeacf4907588f4f5a/SU2_CFD/src/solvers/CNSSolver.cpp#L538-L559. Why is this special treatment necessary if HEAT_TRANSFER essentially is just a different way to calculate `Wall_HeatFlux`? If I disable the additional Jacobian contributions, shouldn't the solution still be accurate?. Regards,; Christian",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1872#issuecomment-1643910412:14,clear,clear,14,https://su2code.github.io,https://github.com/su2code/SU2/issues/1872#issuecomment-1643910412,1,['clear'],['clear']
Usability,"I've (finally) managed to go over this pull request. I didn't go into too much detail as I don't want to delay this any more, but in general it all looks great to me. I have run some extra regression tests locally in my computer, and they all seem to be working fine. I also left some comments around, but they are mostly asking for some clarification, no major issues. All cleared from my side. Sorry again for taking way too long, I was so behind myself that I needed to do some merging in my own branches to be able to understand the changes in FSI context... Thanks a lot @LaSerpe for a great work!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/322#issuecomment-258872671:374,clear,cleared,374,https://su2code.github.io,https://github.com/su2code/SU2/pull/322#issuecomment-258872671,1,['clear'],['cleared']
Usability,"I've also asked on OpenMPI mail-list and they said ""Can you or they provide a small, simple MPI application that replicates the issue? That would be something we could dig into and investigate.""",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2103#issuecomment-1673166638:85,simpl,simple,85,https://su2code.github.io,https://github.com/su2code/SU2/issues/2103#issuecomment-1673166638,1,['simpl'],['simple']
Usability,"I've changed some 'get' functions to 'compute' to be more clear. After some conversations with @pcarruscag Ive also added some 'const' to some 'get' functions. More work can be done in this regard, and that process is ongoing. I can continue doing so in this PR, or in a future one.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1111#issuecomment-730849653:58,clear,clear,58,https://su2code.github.io,https://github.com/su2code/SU2/pull/1111#issuecomment-730849653,1,['clear'],['clear']
Usability,"I've run into some headaches getting the optimization to run efficiently on my end, which is why I ask. Playing with a toy problem, SLSQP actually does a great job on its own (with all tuning parameters set to 1.0) if the following conditions are met:. + The constraints and bounds effectively bound ""reasonable"" solutions, so you don't have to worry about unrealistic deformations.; + The optimization function is (relatively) convex. If those conditions are met, then playing with any of the tuning parameters makes SLSQP converge more slowly, sometimes with 10x the iterations. So its not clear to me when the tuning parameters are necessary, and how those tuning parameters affect the convergence in those cases. I'm not arguing that the tuning parameters aren't necessary, just that their effects aren't clear. And I agree, the proper way to nondimensionalize and regularize these problems is not clear from a brief search of the literature.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/733#issuecomment-616825497:592,clear,clear,592,https://su2code.github.io,https://github.com/su2code/SU2/issues/733#issuecomment-616825497,3,['clear'],['clear']
Usability,"ION_ORIGIN that the pull-up. To simulate a free-flying aircraft (in a flight mechanical sense) which moves and rotates in all six degrees of freedom about the center of gravity, a combination of both translation and rotation is beneficial. In the proposed change, the ROTATING_FRAME now considers both parameters ROTATION_RATE and TRANSLATION_RATE given in the config file. Because the default translation rates are zero, there should be no effect for users who want pure rotation. The option STEADY_TRANSLATION now appears obsolete to me because the functionality is included in the ROTATING_FRAME, but I didn't want to remove the code because someone else might use that parameter? . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. This is a follow-up of a discussion here: https://www.cfd-online.com/Forums/su2/241889-rotating_frame-grid-velocity-correct-flow-physics-wrong.html. Fix #1595 (https://github.com/su2code/SU2/issues/1588)](https://github.com/su2code/SU2/pull/1595/commits/c2018c836791944383c13d32dcfec903d5657072) is required to get proper nodal forces and has already been merged into the develop branch, thank you Pedro :). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1621:2208,guid,guide,2208,https://su2code.github.io,https://github.com/su2code/SU2/pull/1621,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"If the box is axis aligned the following mnemonic works:; ""i"" is the ""fast"" coordinate, if X is the coordinate that changes in FFD_DEFINITION between the first and second corner points then ""i"" : ""X"";; ""k"" is the ""slow"" coordinate, it maps to the direction between the first 4 and last 4 corner points. Simpler yes, versatile not so much, what would you do if your geometry was not aligned?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/977#issuecomment-626881321:303,Simpl,Simpler,303,https://su2code.github.io,https://github.com/su2code/SU2/issues/977#issuecomment-626881321,1,['Simpl'],['Simpler']
Usability,"If there is no a mesh file... the output in parallel is too dramatic :-). ```; There is no geometry file (GetnZone))!cstr=model.su2; There is no geometry file (GetnZone))! . cstr=model.su2; There is no geometry file (GetnZone))!; cstr=model.su2 ; There is no geometry file (GetnZone))!; cstr=model.su2 ; There is no geometry file (GetnZone))!; ```. It should be only one nice and clear line (even in parallel mode) and ""geometry file"" is not very accurate... mesh or grid file would be better. The information about the subroutine (GetnZone) ... it is not really very useful for an average user.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/353:380,clear,clear,380,https://su2code.github.io,https://github.com/su2code/SU2/issues/353,1,['clear'],['clear']
Usability,"If you _must_ use `restart_flow.dat`, then look at np.genfromtxt and the `invalid_raise` option. Here's a simple example:. ```python; import numpy as np; import matplotlib.pyplot as plt. data = np.genfromtxt(""solution_adj_combo.dat"", names=True, invalid_raise=False). plt.tricontourf(data[""x""], data[""y""], data[""Adjoint_Density""]); plt.show(); ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/787#issuecomment-528493781:106,simpl,simple,106,https://su2code.github.io,https://github.com/su2code/SU2/issues/787#issuecomment-528493781,1,['simpl'],['simple']
Usability,"If you are referring to surface heat flux it is one of the default surface outputs.; Maybe there is a bug in v6.2 but in current develop it seems to work fine, you can try using this config: [v7.cfg.zip](https://github.com/su2code/SU2/files/3762621/v7.cfg.zip); Some options changed name since v6.2, you can read about it here: https://su2code.github.io/docs/Guide-to-v7/; I replaced the relevant time domain options but commented out all the output options. On another note I think you should revise your settings, you had a time step of 0 on an unsteady simulation for example. If you have setup questions have a look at the user forum https://www.cfd-online.com/Forums/su2/ and start a topic if there is no related one already. If you have issues with heatflux output with the develop version / v7 we can re-open this issue.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/805#issuecomment-545454125:359,Guid,Guide-to-,359,https://su2code.github.io,https://github.com/su2code/SU2/issues/805#issuecomment-545454125,1,['Guid'],['Guide-to-']
Usability,"If you don't mind I'll leave this question open for now.; I'm planning to provide a simplified example setup later on, once I've had time to properly dive into the wrapper API.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1553#issuecomment-1071052958:84,simpl,simplified,84,https://su2code.github.io,https://github.com/su2code/SU2/issues/1553#issuecomment-1071052958,1,['simpl'],['simplified']
Usability,If you install the precommit hook it will take care of formatting for you https://su2code.github.io/docs_v7/Style-Guide/,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2278#issuecomment-2165864169:114,Guid,Guide,114,https://su2code.github.io,https://github.com/su2code/SU2/pull/2278#issuecomment-2165864169,1,['Guid'],['Guide']
Usability,"If you look at the testing history, commit 4f5f3ed doesn't pass the regression tests, while commit 8551cac does. Only two tests are failing on 4f5f3ed: `discadj_topol_optim` and `discadj_fsi_airfoil`. The difference between the two commits is a simple change. I changed the `SU2_MPI::Error` routine to give a return status of `EXIT_FAILURE` instead of `0`. Since `0` is conventionally defined as a successful program exit, returning `EXIT_FAILURE` makes more sense than returning `0` when `SU2_MPI::Error` is called. So why did that change cause the regression tests to fail? My suspicion is that these two tests have been exiting with an error for some time, but these regressions were not picked up by Travis since SU2 kept on returning `0` (i.e. success). Changing the exit code of `SU2_MPI::Error` doesn't cause any errors, but it will expose errors that are (sometimes silently) occurring. @pcarruscag I think you added these tests. Any idea why they're failing?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/649#issuecomment-462951152:245,simpl,simple,245,https://su2code.github.io,https://github.com/su2code/SU2/pull/649#issuecomment-462951152,1,['simpl'],['simple']
Usability,If you run the code with enabled mpi support SU2_CFD will only write the restart files. You need to use SU2_SOL to convert them to .vtk. Therefore simply copy the restart_flow.dat to solution_flow.dat and run SU2_SOL. Or you could just use the parallel_computation.py script that does this automatically.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/173#issuecomment-99219314:147,simpl,simply,147,https://su2code.github.io,https://github.com/su2code/SU2/issues/173#issuecomment-99219314,1,['simpl'],['simply']
Usability,If you share the mesh I should be able to give better guidance.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1519#issuecomment-1019359579:54,guid,guidance,54,https://su2code.github.io,https://github.com/su2code/SU2/issues/1519#issuecomment-1019359579,1,['guid'],['guidance']
Usability,"If you'd like me to revert the changes updating the autotools version and/or removal of auto-generated files, just let me know (you can also simply revert the last few commits for the same effect).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/586#issuecomment-427689344:141,simpl,simply,141,https://su2code.github.io,https://github.com/su2code/SU2/pull/586#issuecomment-427689344,1,['simpl'],['simply']
Usability,"In reference to this problem on the cfd-online forums, [here](https://www.cfd-online.com/Forums/su2-installation/188365-ad-build-problem-su2-5-0-0-a.html), where `preconfigure.py` fails to download CoDi and AdjointMPI. I just downloaded the latest develop from Github and noticed that the problem is still there when you try to build AD. I think it's due to a simple problem - the exact error I see in preconf.err is:. ```; --2017-12-08 17:18:47-- https://github.com/scicompkl/CoDiPack/archive/2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13.zip; Resolving github.com... 192.30.255.112, 192.30.255.113; Connecting to github.com|192.30.255.112|:443... connected.; HTTP request sent, awaiting response... 302 Found; Location: https://codeload.github.com/SciCompKL/CoDiPack/zip/2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13 [following]; --2017-12-08 17:18:48-- https://codeload.github.com/SciCompKL/CoDiPack/zip/2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13; Resolving codeload.github.com... 192.30.255.120, 192.30.255.121; Connecting to codeload.github.com|192.30.255.120|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: unspecified [application/zip]; Saving to: `2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13'. 0K .......... .......... .......... .......... .......... 223K; 50K .......... .......... .......... .......... .......... 442K; 100K .......... .......... .......... .......... .......... 441K; 150K .......... .......... .......... .......... .......... 443K; 200K .......... .......... .......... .......... ...... 9.79M=0.6s. Last-modified header missing -- time-stamps turned off.; 2017-12-08 17:18:49 (435 KB/s) - `2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13' saved [252908]. unzip: cannot find or open 2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13.zip, 2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13.zip.zip or 2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13.zip.ZIP.; ```; It seems `unzip` searches for various endings, such as '.zip, '.zip.zip', and '.zip.ZIP' but I suspect these are failing becaus",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/483:360,simpl,simple,360,https://su2code.github.io,https://github.com/su2code/SU2/issues/483,1,['simpl'],['simple']
Usability,"In the lab we are also writing/rewriting another largish solver with eigen (https://ic-sharpy.rtfd.io/). A major advantage (and, I think, critical for open source) was code readability to ease the learning curve for newcomers, with no reported penalty on performance. I second all the other nice things about it written by @pcarruscag.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-459943384:197,learn,learning,197,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-459943384,1,['learn'],['learning']
Usability,"In this pull request I have reorganized the existing non-standard output. . Before, it was not really clear how to create a new output and each developer had a different strategy. Now all the special outputs have the same structure and have been implemented in the same part of the software for the direct and adjoint problem: CDriver::Output() for direct analysis and CDiscAdjFluidDriver::SetObjFunction() for the AD. The current ""special"" outputs are . output->SpecialOutput_AnalyzeSurface; output->SpecialOutput_Distortion; output->SpecialOutput_SonicBoom; output->SpecialOutput_SpanLoad; output->SpecialOutput_HarmonicBalance; output->SpecialOutput_Turbo; output->SpecialOutput_ForcesBreakdown. I have also merged the existing ""1D output"" and ""surface analysis"" in a more functional subroutine called output->SpecialOutput_AnalyzeSurface. In short, this is a very important improvement that clarify a lot how to implement a new non-standard output, including its relation with the AD.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/432:102,clear,clear,102,https://su2code.github.io,https://github.com/su2code/SU2/pull/432,1,['clear'],['clear']
Usability,"Indeed, this helps, but it could be more general, since you only get to see this in the console output. I was thinking that a simple tag in the optimization history file for the evaluations that are 'major' would make this much simpler (and easier to post-process).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/108#issuecomment-102168908:126,simpl,simple,126,https://su2code.github.io,https://github.com/su2code/SU2/issues/108#issuecomment-102168908,2,['simpl'],"['simple', 'simpler']"
Usability,Is there a simple example to reproduce the issue?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2109#issuecomment-1776057496:11,simpl,simple,11,https://su2code.github.io,https://github.com/su2code/SU2/pull/2109#issuecomment-1776057496,1,['simpl'],['simple']
Usability,"It does output the file, Paraview & Tecplot formats (binary & ASCII) both work. However, I need the raw data as I will be subjecting it to a Machine Learning Algorithm in Python. Manually deleting the lines for cell numbers in Tecplot format is an additional time consuming step, that hinders full automation. Hence a simple file as flow.csv (CSV format) may help me run it more efficiently. 1. Ganti, Himakar & Khare, Prashant. (2018). Spatio-Temporal Prediction of Gaseous and Liquid Spray Fields using Machine Learning. 10.2514/6.2018-4760. . 2. Ganti, Himakar & Kamin, Manu & Khare, Prashant. (2019). Design Space Exploration for Vaporizing Liquid Jet in Air Crossflow using Machine Learning. 10.2514/6.2019-2211.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/787#issuecomment-528453362:149,Learn,Learning,149,https://su2code.github.io,https://github.com/su2code/SU2/issues/787#issuecomment-528453362,4,"['Learn', 'simpl']","['Learning', 'simple']"
Usability,"It would be good to have these beta terms available as outputs for debugging purposes. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2303:259,guid,guide,259,https://su2code.github.io,https://github.com/su2code/SU2/pull/2303,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"It would simply take some reorganizing of the test scripts to make one function per case and maybe renaming the `TestCase` class to `RegressionTestCase` or something. For example, I rewrote one of the tests in `serial_regression.py` here: https://github.com/petebachant/SU2/commit/fe0ee432c67540067046fbebf9889660331a6592. Then I could run this with. $ cd TestCases; $ pytest serial_regression.py. the output from which was:. ```; $ pytest serial_regression.py; ======================= test session starts =======================; platform linux -- Python 3.6.3, pytest-3.2.1, py-1.4.34, pluggy-0.4.0; rootdir: /home/pete/SU2/TestCases, inifile:; collected 1 item. serial_regression.py . ====================== warnings summary =======================; serial_regression.py::TestCase; cannot collect test class 'TestCase' because it has a __init__ constructor. -- Docs: http://doc.pytest.org/en/latest/warnings.html; =============== 1 passed, 1 warnings in 92.18 seconds ==================; ```. `pytest` has a bunch of features to control the print output as well.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/462#issuecomment-342677051:9,simpl,simply,9,https://su2code.github.io,https://github.com/su2code/SU2/issues/462#issuecomment-342677051,1,['simpl'],['simply']
Usability,"It's not always the case that using a restart file is continuing from a simulation. For example, if one has a simulation that has a similar solution as a seed. An example would be doing optimization and using a nearby flow solution. Here, having the iteration count start from zero is useful, because it's the more accurate measure. We would also have to this about how this interfaces with MAX_ITER. Right now it's really clear, but which does it mean when iterations don't start from zero?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/99#issuecomment-103239930:423,clear,clear,423,https://su2code.github.io,https://github.com/su2code/SU2/issues/99#issuecomment-103239930,1,['clear'],['clear']
Usability,"It's not required fo initialization. Ok, if it's not going to work in this way let's start a discussion about a proper way to do this. I will create a new PR for just the initialization example and put it in a regression test. Thanks for the feedback.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1960#issuecomment-1464935230:242,feedback,feedback,242,https://su2code.github.io,https://github.com/su2code/SU2/pull/1960#issuecomment-1464935230,1,['feedback'],['feedback']
Usability,Just a small PR to do some cleanup. . - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1749:307,Guid,Guide,307,https://su2code.github.io,https://github.com/su2code/SU2/pull/1749,1,['Guid'],['Guide']
Usability,"Just my 2¢ here. I've been struggling with a relatively simple simulation, Euler, 2D axisymmetric, supersonic, AUSM (SU2 7.5.1). I tried several meshes (and meshers) and always diverged no matter what (quality is ok, CFL as well). Conditions were ok, and were mimicking inv_wedge tutorial (which, btw was running ok even with axisymmetry ON). Long story short, I opened with a text editor the original geometry STEP file, and noticed it was carrying from the CAD some (engineering wise negligible) numerical terms (say, point 0, 0 was actually 0, 1e-6). Hence the symmetry axis was somewhat off. By correcting the STEP file, everything went fine. I wonder whether this is the expected behavior of this kind of simulation, and / or if there is any artificial diffusion parameter (such as ENTROPY_FIX_COEFF) that actually can sort things out for the EULER mode. Did any of you experienced anything similar?. Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1373#issuecomment-1464335191:56,simpl,simple,56,https://su2code.github.io,https://github.com/su2code/SU2/issues/1373#issuecomment-1464335191,1,['simpl'],['simple']
Usability,"Just to clarify things, I am not against pull requests with a lot of changes, @fpalacios. For me the problem in #412 is simply the fact that everything is included in one commit.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/413#issuecomment-316343468:120,simpl,simply,120,https://su2code.github.io,https://github.com/su2code/SU2/pull/413#issuecomment-316343468,1,['simpl'],['simply']
Usability,"KER_MONITORING, MARKER_DESIGNING: The main idea is to be able to compute to different integrals over the surfaces: one for simulation and the other for design. e.g. You maybe want to include all the solid surfaces and fan faces, and charging stations in MARKER_MONITORING to compute (Drag-Thrust) but in MArKER DESIGN you are only interested on the wing surface for design.; > ; > DV_MARKER. This is an unfortunately name. At the very beginning the mesh deformation capability was developed only for shape design (DV = Design Variables). We should generalize the names of the grid deformation parameters without using DV. Thanks!; Francisco. On Aug 18, 2015, at 4:31 AM, Heather Kline notifications@github.com wrote:. > Thanks Tom; > I agree that we should make things easy to understand. ; > My thinking was that most users will want to know what parts of the mesh they are moving, but don't necessarily need to know what's happening underneath - if they specify the entire mesh the code just reverts to the more efficient method. But (from the users perspective) it may be just as easy to have a separate specification for scaling the entire mesh.; > ; > In terms of moving it to SU2_MSH; I think it may make sense to include scale/rotate/translate in SU2_MSH, but I think it would be confusing to have two options that do the same thing. I would side with separate option names (this would also eliminate a loop over markers in this pull request); > ; > On this topic, I have sometimes found MARKER_DESIGNING and DV_MARKER to be confusing; on their own they sound very similar, in the description MARKER_DESIGNING is where the objective function is evaluated - but in the code, it's not clear what MARKER_DESIGNING does - the surfaces specified by MARKER_MONITORING are what are actually used to evaluate the objective function value.; > ; > There may be other similar areas where config file options could be clarified or compressed.; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/187#issuecomment-133010923:2146,clear,clear,2146,https://su2code.github.io,https://github.com/su2code/SU2/pull/187#issuecomment-133010923,1,['clear'],['clear']
Usability,"LGTM. Thanks for the fix and updating all regressions, @TobiKattmann . Final question: in the end, the Euler and symmetry BCs are identical implementations, so do we have a practical guideline for when to use one or the other (or some error check), or will we just carry both and allow them to be used interchangeably?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/740#issuecomment-536752462:183,guid,guideline,183,https://su2code.github.io,https://github.com/su2code/SU2/pull/740#issuecomment-536752462,1,['guid'],['guideline']
Usability,"Let's continue this here @suargi as it should be more visible for everyone. In principle, I like what you suggest, it is clean and concise.; However, I see one big issue with backwards compatibility of the config. KIND_TURB_MODEL is in almost every config (in the world) and we cannot simply break compatibility, something with this much impact would require SU2 v8 :smile: . This is not to say you could not implement what you propose, just that you need to make it compatible with the status quo.; For example:; KIND_TURB_MODEL= SA-NEQ; QCR= YES; (I'm not even sure if that makes sense but anyway); Needs to be converted internally to:; KIND_TURB_MODEL= SA; TURB_MODEL_CORRECTIONS= SA-NEG, SA-QCR2000. And of course, if someone uses the new option TURB_MODEL_CORRECTIONS you can enforce that KIND_TURB_MODEL only contains NONE, or SA, or SST, and that corrections do not appear in the config in any other way.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1364#issuecomment-907388593:285,simpl,simply,285,https://su2code.github.io,https://github.com/su2code/SU2/issues/1364#issuecomment-907388593,1,['simpl'],['simply']
Usability,"Let's keep the dimensional outputs, we are already trying to have dimensional inputs to keep things simple.; In the longer term we should aim to have dimensional inputs and outputs and make the non-dimensionalization an internal detail of the solvers that users don't have to worry with.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2109#issuecomment-1684078599:100,simpl,simple,100,https://su2code.github.io,https://github.com/su2code/SU2/pull/2109#issuecomment-1684078599,1,['simpl'],['simple']
Usability,"Like for any other command in this file, build_command will add a quote on the left hand side of our command path. So we'll always need another quote on the right hand side. For some reason SOL_FSI, SOL and GEO were missing them, resulting in Errors when attempting to execute them. ## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/578:697,guid,guide,697,https://su2code.github.io,https://github.com/su2code/SU2/pull/578,1,['guid'],['guide']
Usability,Lots of different updates have been done to incorporate all feedback and make improvements to this PR. It seems to be in a solid place to be merged with develop. @pcarruscag @talbring,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1014#issuecomment-663934671:60,feedback,feedback,60,https://su2code.github.io,https://github.com/su2code/SU2/pull/1014#issuecomment-663934671,1,['feedback'],['feedback']
Usability,"Make changes throughout the docs about requiring bootstrap before configure-make-install for all releases after v6.1.0, and implement clear strategy for master branch and source distributions for subsequent releases.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/599:134,clear,clear,134,https://su2code.github.io,https://github.com/su2code/SU2/issues/599,1,['clear'],['clear']
Usability,"Mate... I graduated from the school of ""out of the scope of"" with honors ok... You and I know that is just code for ""I'll leave it for someone else"".; Just cut and past the parts of the implementation that are exactly the same as another scheme into a function instead of copying, and given that other NEMO schemes have Jacobians that is probably something you should look into re-using.; You also clicked the box for having added a testcase but I don't see anything, why don't you add the testcase for the pictures and plots you showed? That is the only way for anything in this code to continue working... It's good work, it went into a paper, make it reproducible.; These are the contribution guidelines https://su2code.github.io/docs_v7/Style-Guide/ they may not always make things easier for authors, but they make it easier for the people coming after them.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1773#issuecomment-1276409765:696,guid,guidelines,696,https://su2code.github.io,https://github.com/su2code/SU2/pull/1773#issuecomment-1276409765,2,"['Guid', 'guid']","['Guide', 'guidelines']"
Usability,"Maybe CNumerics is not the perfect place, but it is good enough for government work (there are much more misplaced things in there). The ""everything is class"" OO approach applied to the lowest level of abstraction is... well I think it is terrible -- and it has taken me a mighty long time to get rid of it in CPoint and CVariable and to design alternative Numerics -- because:; - Boilerplate: Set this, get that, constructor, destructor;; - Thread safety: Those classes always end up having some mutable state that renders them thread-unsafe;; - Correctness: Many of the classes we have follow this paradigm of ""pass by member variable"" - I like to know what are the inputs and outputs of something just by looking at the signature;; - Slowww: Too much virtual;; - Unnecessary complexity: A case of using a canon to kill the mosquito, good code should be as simple as possible, if a function does the job then that is the level of abstraction we should use. My introduction to C++ was also the ""everything is class"", then one day I read ""From Mathematics to Generic Programming"" and well, I started liking C++ a whole lot more.; The standard template library is incredibly successful, and it ""just"" provides some containers and generic algorithms which are functions. That is what we need in SU2, some decent containers and generic algorithms to operate on them. OO and its patterns are very good high level tools to achieve encapsulation and to isolate code, which are very important for projects with millions of lines of code, but for low level things they are overkill. Sorry for the rant, I guess I have strong feelings about tiny classes.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1127#issuecomment-742629412:859,simpl,simple,859,https://su2code.github.io,https://github.com/su2code/SU2/pull/1127#issuecomment-742629412,1,['simpl'],['simple']
Usability,Maybe also an explanation why I specifically state `single straight`:; Take a case with two symmetry planes on either side of a channel -> it could be reasonable to put both in the same Marker in the su2 mesh -> both planes are straight for themselves but as I simply loop over all nodes in a marker I then have 2 different unit normals for the same marker -> thats why the specific `single` is used,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/740#issuecomment-537206528:261,simpl,simply,261,https://su2code.github.io,https://github.com/su2code/SU2/pull/740#issuecomment-537206528,1,['simpl'],['simply']
Usability,"Merge and push is simpler I think, and with that the reviewers have the option of only seeing the new commits.; Thanks for the changes, we'll merge once the tests pass.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1951#issuecomment-1470769800:18,simpl,simpler,18,https://su2code.github.io,https://github.com/su2code/SU2/pull/1951#issuecomment-1470769800,1,['simpl'],['simpler']
Usability,"Modify TestCase.py related to #2159. . ## Proposed Changes; Replaced `platform.processor()` with `platform.machine()` for better cross-platform support. Add `amd64` and `arm64` as additional supported cpu arch. ## Related Work; Issue #2159 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2163:414,guid,guide,414,https://su2code.github.io,https://github.com/su2code/SU2/pull/2163,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"My goal is to have a simple pressure pulse propagate within the domain to ensure my setup is not wrong (boundary conditions, axisymmetry etc). The procedure I follow:; - I set the reference conditions to a quiscent flow condition. ; - Then have SU2 write a RESTART_ASCII file.; - I then modify this ASCII file to now have a Gaussian pressure pulse at the domain center.; - Next, I ask SU2 to read this restart_file.csv as the solution_file.; - However, the very next iteration from SU2 using this initial condition (IC) is a quiescent one. ; - I have tried different solvers and time steps and CFL numbers to no avail. ; - I suspect my configuration file is time stepping away from the pulse IC so quickly that there is no evidence of it in the next time steps I have SU2 write. . Please share any thought you might have regarding the issue my Config file is attached to this comment. . [AcousticPulseTS.txt](https://github.com/su2code/SU2/files/5643539/AcousticPulseTS.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1122:21,simpl,simple,21,https://su2code.github.io,https://github.com/su2code/SU2/issues/1122,1,['simpl'],['simple']
Usability,"New code created by Blanca Fuentes Monjas, pushed by Evert Bunschoten for permission reasons. ## Proposed Changes; - Added non-polytropic Peng-Robinson (NPPR_GAS) equation of state (CP temperature dependant model): the specific heat ratio is not constant but a polynomial model (CP = n0 + n1*T + n2*T^2 +n3*T^3 + n4*T^4) can be specified for the specific heat via the input file option (CP_POLYCOEFFS) ; - The NPPR fluid model uses the polytropic Peng-Robinson fluid model as a base class. Therefore, the polytropic Peng-Robinson class now allows for inheritance. ; - New test case (TestCases/nicfd/edge_NPPR) to compare the results of the NPPR with a constant CP model (CP = n0) and the polytropic Peng-Robinson models. The results of both simulations for this test case are equivalent.; . ## Related Work; - The polytropic Peng-Robinson remains functionally unchanged. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X ] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ X ] I have added a test case that demonstrates my contribution, if necessary.; - [ X ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1684:1043,guid,guide,1043,https://su2code.github.io,https://github.com/su2code/SU2/pull/1684,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"Nice analysis @clarkpede. It is true that we simplify the Jacobians at the periodic boundaries, mostly to avoid issues with adding entries to the Jacobian from the neighbors that potentially do not live on our rank and to keep communication costs low (those neighbors are treated explicitly). This could be changed to communicate the full Jacobian.. but I am not sure it is worth the effort/cost. The approximation that is made should still be consistent though, because we only allow one of the repeated periodic nodes to participate in the linear solve with each nonlinear iteration, and then we communicate its update to its periodic pair. In short, the value of the solution should always be the same on periodic points with each iteration update, and if the problem converges to a steady-state (even in time stepping mode), the Jacobian should only affect convergence (the RHS should be the same). You could try the time stepping option with one of the RK methods to see if going fully explicit helps further isolate the issue. It could also be something related to the time step that is communicated. In the SetTime_Step() routine in the flow solver class, we do some special checks for time stepping mode to make sure that the minimum global time step is used in all cells. Might want to print out the dT communicated in the periodic comms or write the dT to the solution file to make sure everything is ok there too. Honestly, I don't think a ton of folks use the time stepping option in general with the FVM solver, so double-checking that it behaves well for a non-periodic problem could shed some light too, unless you have already done that.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/763#issuecomment-524007345:45,simpl,simplify,45,https://su2code.github.io,https://github.com/su2code/SU2/issues/763#issuecomment-524007345,1,['simpl'],['simplify']
Usability,"Nice progress @pcarruscag!. I like the concept of your SIMD-friendly class that will take care of the data structure under the hood coupled with a standard type of loop statement (w/ +SIMDLEN). This should make it pretty easy for folks to still modify the kernels without having to worry about the data alignment, and they can reuse the same simple 'for' construct repeatedly. . Another reason to have our own lightweight class for this is that you can avoid dependence on OpenMP for SIMD (although that feature looks to have potential and wasn't available until somewhat recently) as well as the intrinsics. In my experience, the latter is especially bad for portability and readability (part of why we left the CaF work in a separate repo). It starts to become so specialized that compiling and modifying become difficult. W.r.t. OpenMP, another roadblock there a few years ago was making sure it is interoperable with CoDi for the adjoint, but I know this has been worked on and may be available by now. Might keep an open mind about point vs. edge. In some places, we may be able to pump up the compute in our loops by fusing kernels, as previously discussed (and I am guessing you are working on this already with gradients/limiters). Could change the final performance numbers significantly. Lastly, I know you are not there yet, but it is worth considering whether you can reuse anything you are developing in the kernels here for the linear solver routines. At some point, you will successfully reduce the cost of the residual kernels (RHS) to the bandwidth limit, and the majority of the iteration cost will be in the linear solver (it is already about 50% of the iteration cost before optimization, if I recall). Before making final decisions on strategy, you should consider if it will help in any of the linear solver routines too.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530440072:342,simpl,simple,342,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530440072,1,['simpl'],['simple']
Usability,"No need for Intel buddies, I know what's up. Take [this code:](https://gcc.godbolt.org/z/siQamn); ```; class Base {; public:; inline virtual double get() const {return 0.0;}; };. class Derived : public Base {; double val;; public:; Derived(double a) : val(a) {}. inline double get() const final {return val;}; };. double fun1(Base* obj) {; return obj->get();; }. double fun2(Base* obj) {; return static_cast<Derived*>(obj)->get();; }; ```. `get` of derived has been marked `final` so in `fun2` polymorphism should be optimized away. Here is the assembly for gcc 5.4:. ```; fun1(Base*):; mov rax, QWORD PTR [rdi]; jmp [QWORD PTR [rax]]; fun2(Base*):; movsd xmm0, QWORD PTR [rdi+8]; ret; ```; `fun1` needs a jump, `fun2` knows what to return right away. Here is the assembly for icc 17:; ```; fun1(Base*):; mov rax, QWORD PTR [rdi] #16.12; mov rdx, QWORD PTR [rax] #16.12; jmp rdx #16.12; fun2(Base*):; mov rax, QWORD PTR [rdi] #20.34; mov rdx, QWORD PTR [rax] #20.34; jmp rdx #20.34; ```. @vdweide please tell me you did not use icc 19, because it performs this optimization just fine on this simple example. By the way @talbring (since you asked in #753), take away the `final` keyword and nothing gets optimized by the `static_cast`.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-523952473:1092,simpl,simple,1092,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-523952473,1,['simpl'],['simple']
Usability,"No, I think we're all set. I am going to merge this in. We have two issues that we are going to be clearing up very soon: the ONERA M6 adjoint case that is failing somewhat irregularly, and a reorganization of the test cases/config files to make the regression tests more effective (in particular for pull requests). Thanks for fixing the conflicts!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/186#issuecomment-127486074:99,clear,clearing,99,https://su2code.github.io,https://github.com/su2code/SU2/pull/186#issuecomment-127486074,1,['clear'],['clearing']
Usability,"No… I can’t. I’m sorry. Great to hear from you. Machine learning is a very valuable research work and I will add it as a feature branch. . Removing code from the main release is a complex task and, as in the past, I have taken tough decisions. Anyway, to maintain a clean code is critical for its growing, it is like trimming a large tree. Basic criteria to maintain forever an implementation on the develop->master branch are: - Clear benefit to the CFD community (more accurate, robust, etc.) - Existing community of users or active developers - Minimal code documentation (at least the options should be in the config file). - Easy to install and use. - The implementation style should be aligned with the SU2 style - Regressions tests. Best,; Francisco. > On Oct 28, 2015, at 11:35 PM, Brendan Tracey notifications@github.com wrote:; > ; > Could you leave in the machine learning section a bit longer?; > ; > —; > Reply to this email directly or view it on GitHub https://github.com/su2code/SU2/pull/208#issuecomment-152095697.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/208#issuecomment-152384158:56,learn,learning,56,https://su2code.github.io,https://github.com/su2code/SU2/pull/208#issuecomment-152384158,3,"['Clear', 'learn']","['Clear', 'learning']"
Usability,"OK the failing regression test were due to:; 1. One simple wrong function call in Csolver; 2. Creating new output in existing groups (AERO_COEFF, FLOW_COEFF) which invalidates some regression tests; 3. pyhton code which does not test if some config variable is present or altering the python code such that it invalidates other regression tests; 4. and finally the AVG_TEMP thing above. Now all these alone were somewhat minor things. Feature_flamelet is now up-to-date with develop with all regression test working",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1223#issuecomment-898617272:52,simpl,simple,52,https://su2code.github.io,https://github.com/su2code/SU2/pull/1223#issuecomment-898617272,1,['simpl'],['simple']
Usability,"Obviously it is possible to implement this, but it would significantly complicate the config parsing code. Right now the parser is very simple: Go through each line, and get the name and the tokens. As far as I can see there aren't good ways to allow this aside from either having a whitelist of options that can go on multiple lines (thus, only some options are allowed to do so), or to switch up the config file entirely and go to a more standard format like JSON.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/166#issuecomment-103241030:136,simpl,simple,136,https://su2code.github.io,https://github.com/su2code/SU2/issues/166#issuecomment-103241030,1,['simpl'],['simple']
Usability,"Of the two cases with larger residual changes:; - contadj_euler_naca0012 - No idea why they changed, neither primal nor adjoint compute limiters... the primal residuals are unchanged, and the case converges to the same values (residuals and solution) so I simply updated the residuals; - transonic_stator_restart - As shown above the case is fine, so I updated the restart file, however I do not know how to change the testcases branch anymore :) but I guess once the corresponding PR is merged this will start passing. I ran some other tests with the Venkatakrishnan-Wang limiter (which requires a global min/max) and is does not seem to be covered by the tests ATM (maybe I'll use that restart case to fix that), everything looks perfect, same results with different ranks/threads and so on, the results are tens of MB so I won't upload unless someone wants to double check.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/834#issuecomment-575310823:256,simpl,simply,256,https://su2code.github.io,https://github.com/su2code/SU2/pull/834#issuecomment-575310823,1,['simpl'],['simply']
Usability,Ok thats to be expected (as I learned) because you have probably openmpi installed. The binaries are compiled with mpich.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/813#issuecomment-557430771:30,learn,learned,30,https://su2code.github.io,https://github.com/su2code/SU2/pull/813#issuecomment-557430771,1,['learn'],['learned']
Usability,"Ok the ""simple"" version of ""going parallel"" whenever we get to a linear algebra operation did not make the cut.; On an older architecture there was a 10% slowdown of the linear solvers at ~10k nodes per core and about the same on a newer architecture but only at ~1k node per core.; Since hybrid parallel is supposed to be good for strong scaling, this was not good enough... With the new strategy it is ok (see ""performance"" below), hence this is ready for review. ### Overall Strategy; The strategy now is to start a parallel section in CSysSolve::Solve that covers building the preconditioner and solving the linear system.; Linear algebra routines called within this section have _worksharing_ constructs instead of _parallel_ ones, i.e. the work is distributed by however many threads arrive to that routine. This also makes the routines safe to call in serial.; The only ""dangerous"" things to do in parallel are to: manage memory for a shared object (multiple threads call `new` but there is only one shared pointer on which to call `delete`); writing to the same memory locations concurrently.; I tried to make the first issue debugable by asserting that the initialization routines of CSysMatrix and CSysVector are only called by the master thread.; For the second issue I made the associated classes as const-correct as possible, that should at least make someone think twice before changing a member variable of those classes. The risk is still there for input variables as an algorithm development aspect... For example `MatrixVectorProductTransposed` cannot be made thread-parallel as simply/naively as its normal counterpart. ### Communication Model; The MPI + Threads communication model is very simple, currently only the master thread calls MPI routines (including `Error`), this requires thread barriers before and after the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does n",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/830#issuecomment-562646766:8,simpl,simple,8,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766,1,['simpl'],['simple']
Usability,"Ok! The workflow about this branch is now quite hard to follow. ; So to resume :; - **#424 is the branch to work on**. #424 is ""py2_and_py3_support"" merged on a recent ""develop"" branch (2017/08/11); - #260 is obsolete and replaced by previous one. That is why I close it",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/260#issuecomment-323942805:72,resume,resume,72,https://su2code.github.io,https://github.com/su2code/SU2/pull/260#issuecomment-323942805,1,['resume'],['resume']
Usability,"Ok, I went back to try varying the `.cfg` settings on the simple v7.0.3 repo `TestCases/euler/naca0012` case and managed to get `mesh_adaptation_amg.py` to run successfully. It seems that one bit of advice [from here](https://www.cfd-online.com/Forums/su2/214613-grid-adaptation-options.html) is no longer true, i.e. one needs to set:; ```; % Write binary restart files (YES, NO); WRT_BINARY_RESTART= YES; %; % Read binary restart files (YES, NO); READ_BINARY_RESTART= YES; ```; in order for the amg mesh adaptation to function. However, for some reason, I can't get it working for my actual mesh of interest. When using the same settings, I get a different ParMETIS error (from the `adap/ini/log.out`):; ```; ------------------- Geometry Preprocessing ( Zone 0 ) -------------------; Three dimensional problem.; 4929018 grid points before partitioning.; 7406196 volume elements before partitioning.; 3 surface markers.; 18040 boundary elements in index 0 (Marker = BODY).; 50968 boundary elements in index 1 (Marker = FARFIELD).; 284054 boundary elements in index 2 (Marker = SYMMETRY).; Executing the partitioning functions.; Building the graph adjacency structure.; [ 1] ***ASSERTION failed on line 207 of file ../externals/parmetis/libparmetis/comm.c:sendind[i] >= firstvtx && sendind[i] < lastvtx; [ 1] 361316 123226 246452; [1609857970.901920] [super:1060888:0] sock.c:344 UCX ERROR recv(fd=62) failed: Connection reset by peer; ```. The only difference that I can think of is that my flow is fully supersonic and my mesh is an unstructured core with a structured collar - might this be causing the issue? Kind regards.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-754686447:58,simpl,simple,58,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-754686447,1,['simpl'],['simple']
Usability,"Ok, so to be clear, if you take a fresh directory, place the restart file there and run the code, will it still have this issue?; It sounds like this does not have anything to do with writing, but reading instead... :thinking:",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1342#issuecomment-891991181:13,clear,clear,13,https://su2code.github.io,https://github.com/su2code/SU2/pull/1342#issuecomment-891991181,1,['clear'],['clear']
Usability,"Ok, sounds good. I'll go ahead and close this since it is being replaced by the other pull request. ; Since you mention formatting, [here](https://github.com/su2code/SU2/wiki/Style-Guide) is our style guide for reference. I think you are probably right that there are places where it is not strictly followed, and if you would like to spend the time to fix those things that would be welcome. Thanks again for the pull request.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/331#issuecomment-261699279:181,Guid,Guide,181,https://su2code.github.io,https://github.com/su2code/SU2/pull/331#issuecomment-261699279,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"Ok. Thanks for the reply. If it's not simple to separate into a branch, don't worry. I have already downloaded the current master and can maintain a local copy. I see that there is at least one issue related to that segment (I would have responded had I seen it). Are users interested in using that segment of the code? If so, I'd be more than happy to add documentation and a usage example I the develop branch. When thus code went live we decided it was better to not add documentation since the feature is experimental. This is certainly a fixable situation on the develop branch.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/208#issuecomment-152404327:38,simpl,simple,38,https://su2code.github.io,https://github.com/su2code/SU2/pull/208#issuecomment-152404327,1,['simpl'],['simple']
Usability,Ok.. thanks for the feedback. We'll go ahead with the current version (handled like the --enable-mpi option) for now.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/298#issuecomment-240882029:20,feedback,feedback,20,https://su2code.github.io,https://github.com/su2code/SU2/pull/298#issuecomment-240882029,1,['feedback'],['feedback']
Usability,Okay @pcarruscag I believe ; I reverted all the annoying format changes. Can you please review the code when you get the chance?. BTW I am aware about the boilerplate code in `python_wrapper_structure.cpp` and I plan to adapt `CPyWrapperMatrixView`. Would appreciate some feedback anyways,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1750#issuecomment-1779150012:272,feedback,feedback,272,https://su2code.github.io,https://github.com/su2code/SU2/pull/1750#issuecomment-1779150012,1,['feedback'],['feedback']
Usability,"On both questions the answer is yes. Option 1 can be implemented right now but will require the creation of temporary objects. Option 2 can directly forward the data to the blas routines. The tool I am developing is no tool for a specific linear algebra package. The idea is, that the tool parses the header files of the library. The user has then to define which objects are active lvalues and the derivatives for each operation in the library. For small an clear interfaces this is no problem and works already quite good. For large libraries like Eigen I adopted a whitelisting approach. That is, every function needs to be manually whitelisted to trigger the expression generation of the tool. In a prototype way I have also implemented an approach where only the active lvalues need to be defined and the tool looks then for all required functions and other objects that depend on these active objects. Long story short, the tool is designed to handle ""any"" library. It is even possible to mix several libraries together. My current status on this project is, that I am now through with the parsing of the header files and the generation of the expressions. This works quite well for Eigen which is a hardcore testcase, since every possible programming tweak in C++ is used here. The next step is to add the AD part to the expression generation process. I hope that in one or two month this will be finished and I can provide a first beta release.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-463561018:459,clear,clear,459,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-463561018,1,['clear'],['clear']
Usability,"On the subject of virtual functions I would like to put another idea forward.; After moving things around in #725 I noticed that we have tons of `inline virtual` methods.; The keyword `inline` has two meanings to the compiler:; - ""Dear merciful compiler please copy paste the body of this function and then do all your wonderful optimizations, if that pleases your excellency.""; - ""Dear forgiving compiler, you will find this method defined in multiple units, please don't be mad"" (i.e. ignore the one-definition-rule). `virtual` means determine what version of the method to call at runtime. This is not compatible with the first (and often the intended one) meaning of inline, therefore the compiler will in general not inline those methods.; They will only be inlined if they are being called on a pointer to the derived class that does not declare the method to be virtual anymore. CSolver knows what variables it creates and so in hot areas of the code it could do a static downcast to allow inlining (e.g. `static_cast<CEulerVariable*>(node[iNode])->DoStuff()`).; Where is this important? For example when computing gradients, where simple additions and subtractions are hidden behind virtual functions.; If you are worried about maintenance each solver can typedef its most safe downcast level or better yet (or just more modern), methods that could benefit from this can be templated for the type of downcast.; Those in favour say Yea those against say Nay.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-509273008:1139,simpl,simple,1139,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-509273008,1,['simpl'],['simple']
Usability,"One of the interesting paper -. "" Comparison of numerical and Analytical Jacobians"", Kirk J. Vanden, Paul D. Orkwis; AIAA, Vol 34, No. 6, June 1996. They computed the exact analytical Jacobian with symbolic manipulation. In conclusion they are showing that both analytical and numerical Jacobians showed similar performance and suggesting that for simpler numerical fluxes, analytical Jacobians should be the best way to go and for complex numerical fluxes, numerical Jacobian can be preferable choice (but if one can work out analytical, that should be good as well, I guess (one time effort) ). Best; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/691#issuecomment-505615012:348,simpl,simpler,348,https://su2code.github.io,https://github.com/su2code/SU2/pull/691#issuecomment-505615012,1,['simpl'],['simpler']
Usability,"One thing I miss from the documentation is saying the algorithms being used. For example, if you go to the Incompressible Navier Stokes section in the Theory chapter of the documentation, it says that ""a FVM algorithm is used"". Well, that's fine, but which ones are used? SIMPLE-family for steady and PISO for unsteady? Or which ones?. Thanks!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1213:272,SIMPL,SIMPLE-family,272,https://su2code.github.io,https://github.com/su2code/SU2/issues/1213,1,['SIMPL'],['SIMPLE-family']
Usability,"Our working branch is 'develop', so you should have started from that and also merge into it. Every 6 months or so we then make the current develop into master. I changed the target branch to develop, and also updated your branch with current develop. ; Can you have a look at the failed check for clang-format coding style and format the changed file accordingly?; https://su2code.github.io/docs_v7/Style-Guide/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2173#issuecomment-1821051032:406,Guid,Guide,406,https://su2code.github.io,https://github.com/su2code/SU2/pull/2173#issuecomment-1821051032,1,['Guid'],['Guide']
Usability,"Overall some solid looking code @jayantmukho, thanks!; I have a few suggestions:; 1 - Some of the config variables have fairly broad names, ""permute"" for example, I think prefixing them with UQ would more clearly identify what they are meant for.; 2 - There are a lot of dynamic allocations of static size, if the current implementation is compatible with 2 and 3 dimensions I would allocate those variables statically, makes for cleaner and faster code (stack allocations are much faster and subsequent loops would likely be unrolled by the compiler).; 3 - It looks like some of the new methods in CNumerics are for generic ""Eigenvalue-stuff"" for re-usability I suggest moving those methods to a helper class, even if for now that class becomes just a collection of static methods. In the implementation of those methods the dimension of the inputs is being assumed, if you do move them please make them generic.; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/570#issuecomment-427468893:205,clear,clearly,205,https://su2code.github.io,https://github.com/su2code/SU2/pull/570#issuecomment-427468893,2,"['clear', 'usab']","['clearly', 'usability']"
Usability,Periodic boundary conditions and simple timestepping don't combine well,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/763:33,simpl,simple,33,https://su2code.github.io,https://github.com/su2code/SU2/issues/763,1,['simpl'],['simple']
Usability,"Please see the response on the [forum](https://www.cfd-online.com/Forums/su2/184789-poor-quality-mesh-after-deformation-su2-5-0-0-a.html#post640783).; In the future, please note that it is [recommended](https://www.cfd-online.com/Forums/site-help-feedback-discussions/175429-guide-how-ask-question-forums.html#post612025) not to double-post questions.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/384#issuecomment-286555388:247,feedback,feedback-discussions,247,https://su2code.github.io,https://github.com/su2code/SU2/issues/384#issuecomment-286555388,2,"['feedback', 'guid']","['feedback-discussions', 'guide-how-ask-question-forums']"
Usability,"Preprocess in iteration_structure.hpp. ## Proposed Changes; * Fix a minor comment spelling error in CSinglezoneDriver.cpp. The preprocess method's comment section involving param in is missing, so I added in. ; . ## Related Work; *N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/987:408,guid,guide,408,https://su2code.github.io,https://github.com/su2code/SU2/pull/987,1,['guid'],['guide']
Usability,"Problem description:. Recently I am trying to set up a very simple test case for the 2D mixing layer in a square block with structured mesh.; On the top half, air flows to right and bottom half is opposite, initially there is only velocity difference between upper and lower flow. (i expect Ux_top = -Ux_bot = 10 m/s, Uy_top = Uy_bot = 0) ; But I could not figure out how to set up my Boundary Conditions and Unsteady option in .cfg file properly.; Could anyone help me or give some suggestion on set up for Unsteady setting.; (BTW I also have trouble to control the unsteady output, there are a lot of output file for surface flow which in fact is not necessary for my case, anyone know how to set the output option so that it is not outputted at all?). In fact I build up two rectangle blocks with one inner boundary surface, as show below; ------------------top------------------; | | ; inlet_top outlet_top; | | ; ------------------inner----------------; | | ; outlet_bot inlet_bot; | | ; ------------------bot------------------. % -------------------- BOUNDARY CONDITION DEFINITION --------------------------%; %; % Euler wall boundary marker(s) (NONE = no marker); MARKER_EULER= ( top, bot ); %; % Internal boundary marker(s) e.g. no boundary condition (NONE = no marker); MARKER_INTERNAL= ( inner ); %; % Inlet boundary type (TOTAL_CONDITIONS, MASS_FLOW); INLET_TYPE= TOTAL_CONDITIONS; %; MARKER_INLET= ( inlet_top, 273.2, 101325, 1.0, 0.0, 0.0, inlet_bot, 273.2, 101325, -1.0, 0.0, 0.0 ); %; % Outlet boundary marker(s) (NONE = no marker); % Format: ( outlet marker, back pressure (static), ... ); MARKER_OUTLET= ( outlet_top, 101325, outlet_bot, 101325 )",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/534:60,simpl,simple,60,https://su2code.github.io,https://github.com/su2code/SU2/issues/534,1,['simpl'],['simple']
Usability,Problem solved. Script Workshop now. Just a simple DOS/Windows-Unix fileformat error. -.-,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/279#issuecomment-222963559:44,simpl,simple,44,https://su2code.github.io,https://github.com/su2code/SU2/issues/279#issuecomment-222963559,1,['simpl'],['simple']
Usability,"Proposed Changes. This pull request adds the test case that we used for the Fuel paper. Related Work. Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any. PR Checklist. Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution. I am submitting my contribution to the develop branch.; My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; I used the pre-commit hook to prevent dirty commits and used pre-commit run --all to format old commits.; I have added a test case that demonstrates my contribution, if necessary.; I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2238:398,guid,guide,398,https://su2code.github.io,https://github.com/su2code/SU2/pull/2238,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"Pruned unnecessary files from Boost archive, updated .gitignore files to ignore .szplt files, and eliminated an unnecessary include file check for TecIO. ## Proposed Changes; Pruned unnecessary files from the Boost archive included with TecIO; Updated .gitgnores in example folders to ignore .szplt files; Eliminated an unnecessary check for an X11 header file that TecIO no longer relies on.; . ## Related Work; Fine-tuning to Scott Imlay's TecIO update. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/636:628,guid,guide,628,https://su2code.github.io,https://github.com/su2code/SU2/pull/636,1,['guid'],['guide']
Usability,"Quite simple I imagine.; Since I have everything in place now to open, manipulate and export the mesh in SU2 format (c.f. #1877 ) I could easily filter points and assign their IDs to arbitrary markers or elements or simply export their ID to a different file.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1894#issuecomment-1396188450:6,simpl,simple,6,https://su2code.github.io,https://github.com/su2code/SU2/issues/1894#issuecomment-1396188450,2,['simpl'],"['simple', 'simply']"
Usability,"Recent changes for hybrid parallel AD made it simpler to use the physical reconstruction checks in vectorized schemes (an old TODO).; Consequently, the vectorized Roe implementation is now equivalent to the scalar version, and thus the user no longer needs to ""opt-in"".",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1752:46,simpl,simpler,46,https://su2code.github.io,https://github.com/su2code/SU2/pull/1752,1,['simpl'],['simpler']
Usability,"Regarding periodic boundaries: You have two options. You can hack the code to not allow grid deformation on periodic boundaries. That's a simple code edit, since the code already prevents most boundaries from being deformed. Let me know if you want to use this option, and I can point you to those lines. Second, you can use the `HOLD_GRID_FIXED` and `HOLD_GRID_FIXED_COORD` options to prevent grid deformation outside a specific box. I have found this option to be better overall, since it also makes the linear system easier to solve in `SU2_DEF`. The `DV_VALUE` and `FINDIFF_STEP` are different. I've only seen `FINDIFF_STEP` used for the finite-differencing python script, though it may have other uses I am not aware of. The `DV_VALUE` depends on the context. When using `SU2_DOT`, `DV_VALUE` is set to its default value. But when performing shape optimization using SU2's framework, the `DV_VALUE` parameters will be set based on the output of SLSQP (or whatever optimization framework you're using).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/976#issuecomment-626799862:138,simpl,simple,138,https://su2code.github.io,https://github.com/su2code/SU2/issues/976#issuecomment-626799862,1,['simpl'],['simple']
Usability,Remove the surface element area from the sensitivity map output for more intuitive visualization,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/123:73,intuit,intuitive,73,https://su2code.github.io,https://github.com/su2code/SU2/issues/123,1,['intuit'],['intuitive']
Usability,"Reviving the parsing script can be a simple and effective solution for syncing the defaults.; I shall be out of the country for the next three weeks. I shall try my hand at your suggestion once I return. Meanwhile, I hope the current PR will complete its approval cycle. Current Travis failures are marked by ! only.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/520#issuecomment-377499319:37,simpl,simple,37,https://su2code.github.io,https://github.com/su2code/SU2/pull/520#issuecomment-377499319,1,['simpl'],['simple']
Usability,"SU2 is a fantastic library, but the build process is really painful to get static linking within another C++ program. CMake is a standard for building C++ projects and would be extremely helpful. Ideally Python wouldn't be necessary to build SU2 or link it with another project. In our use case we need to link the library so that we can efficiently multithread workflows, keep data in memory, and make analysis as efficient as possible. I realize this is a significant request, but a build process with CMake could be so much simpler and would make your codebase much more accessible to the C++ community. Thanks so much for all your excellent work!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1711:527,simpl,simpler,527,https://su2code.github.io,https://github.com/su2code/SU2/issues/1711,1,['simpl'],['simpler']
Usability,SU2/TestCases/TestCase.py uses `platform.processor()` which returns `i386` on an Intel Core i7 MacBookPro running mac OS 11.7. This just differentiates between Power PC vs Intel processors and not necessarily between 32-bit and 64-bit architectures. This causes all the tests in the test suite to be skipped even though the machine is 64-bit. . `platform.machine()` returns `x86_64` allowing the tests to run from the TestCase.py script. . Python documentation (3.12.0) also notes that many platforms do not provide the information for `platform.processor()` or simply return the same value as for `platform.machine()`. Suggestion is to replace `platform.processor()` with `platform.machine()`.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2159:562,simpl,simply,562,https://su2code.github.io,https://github.com/su2code/SU2/issues/2159,1,['simpl'],['simply']
Usability,"SU2/commit/ac8b3bf7636cc66ca7f47e15935942a6598e1a9f), the `SetRoe_Dissipation` function checked to see if the sensor values were valid regardless of the type of blending selected. Commit [ac8b3bf](https://github.com/su2code/SU2/commit/ac8b3bf7636cc66ca7f47e15935942a6598e1a9f) changed the behavior to only check the sensor values if they will be used. The unit test sets the convective blending to `NTS`, feeds invalid sensor values into `SetRoe_Dissipation` and checks the output. ```cpp; // Used to set the Roe-low-dissipation option; void WriteCfgFile(unsigned short nDim, const char* filename,; std::string blending) {; std::ofstream cfg_file;. cfg_file.open(filename, ios::out);; cfg_file << ""PHYSICAL_PROBLEM= NAVIER_STOKES"" << std::endl;; cfg_file << ""ROE_LOW_DISSIPATION= "" << blending << std::endl;. cfg_file.close();; }. BOOST_AUTO_TEST_CASE(BadSensorsAllowedForNTS) {. /*--- Setup ---*/. const unsigned short nDim = 3;. /*--- Set up the config class for the test ---*/; char cfg_filename[100] = ""convective_blending_test.cfg"";; WriteCfgFile(nDim, cfg_filename, ""NTS"");; CConfig* config = new CConfig(cfg_filename, SU2_CFD, 0, 1, 2, VERB_NONE);; std::remove(cfg_filename);. /*--- Inputs ---*/; const su2double dissipation_i = 0.4;; const su2double dissipation_j = 0.6;; const su2double sensor_i = NAN; // Intentionally unphysical:; const su2double sensor_j = NAN; // Intentionally unphysical:. /*--- Outputs ---*/; su2double dissipation;. /*--- Test ---*/. CNumerics numerics;; numerics.SetRoe_Dissipation(dissipation_i, dissipation_j,; sensor_i, sensor_j,; dissipation, config);. const su2double tolerance = std::numeric_limits<su2double>::epsilon();; BOOST_CHECK_CLOSE_FRACTION(dissipation, 0.5, tolerance);. /*--- Teardown ---*/; delete config;; }; ```. There's a couple problems I would fix if I had more time. Ideally, I would be writing the cfg file to an in-memory stream and not to a file. And realistically, I shouldn't need to use a config file at all for a simple test like this.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499999225:2297,simpl,simple,2297,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499999225,1,['simpl'],['simple']
Usability,"Sc, @juanjosealonso and @erangit have a point here. Looks like I start to belong to the group of old conservatives as well.... >@economon ; >(...) If you really would like to give PETSc a shot, I recommend talking with @anilvar who had an interface for connecting it to SU2 in one of our branches. >@pcarruscag; >(...) being able to use PETSc or HYPRE would be interesting as it would give us access to AMG, and @talbring 's branch feature_template_linear_solver would make such an integration compatible with AD. (...). >@EduardoMolina; >(...) When Brian (@bmunguia ) and I mentioned PETSc, it was an idea to try a different Newton-Krylov (with preconditioner) library in order to improve the convergence of SU2.; Since the slow convergence of the SU2-FV is the main feedback that I received from other users from industry and academia, I think it worth try an external library and evaluate the performance. (...). >@pcarruscag ; >(...) That is something I am also interested in as for some of my structural cases the current linear solvers simply do not converge. (...). >@economon ; >I would add one practical comment for consideration: it is worth checking whether the main restriction we have is related to approximations in the Jacobian that limit the effective CFL we can use or whether the convergence of the linear solver itself is a problem (speed or complete lack of convergence). A quick test without resorting to another library is to increase the fill-in for ILU-preconditioned GMRES, which is very expensive/slow but should converge difficult problems, and to check how high we can take the CFL when allowing each nonlinear iteration to converge to a tight tolerance in the linear solver, say 1e-14 (you can output the linear solver residuals to verify convergence). If we can take the CFL higher with a more performant linear solver, then it could be worth the effort to try other options.; >If the CFL must remain low for stability, then perhaps we should look at the quality of the J",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/648#issuecomment-460853218:3095,simpl,simply,3095,https://su2code.github.io,https://github.com/su2code/SU2/issues/648#issuecomment-460853218,1,['simpl'],['simply']
Usability,"Setting WRT_BINARY_RESTART=NO is irrelevant, the output format is determined by OUTPUT_FILES. Is this option around just because of the legacy output? Should it have any effect in the new output?. One needs to set both VISUALIZE_SURFACE_DEF and a surface output format to get a file.; One needs to set both VISUALIZE_VOLUME_DEF and a volume output format to get a file.; Should we just remove these two and let OUTPUT_FILES ""decide"" what is outputted?. Can we get rid of DISCADJ_LIN_SOLVER and DISCADJ_LIN_PREC and use what is set for the direct solver? Or alternatively, in discrete adjoint problems, use these settings for the primal (recording phase)?; This is annoying because if you use FGMRES for the direct problem and happen to need more linear iterations for the discrete adjoint (say 10 -> 100) in which case you probably switch to BCGSTAB (due to memory), one needs to set/change two options. If there are options that grind your gears or you think could be more user-friendly lets list them.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/942:974,user-friendly,user-friendly,974,https://su2code.github.io,https://github.com/su2code/SU2/issues/942,1,['user-friendly'],['user-friendly']
Usability,"Several bugs have been fixed in the grid deformation and the config file have been updated. . In particular, the inverse volume method uses now an element volume computed in ComputeDeforming_Element_Volume (not the incomplete determinant computed in FEM). fabs have been added to the determinant in the final evaluation of the FEM stiffness matrix (depending on the element orientation, the determinant was negative). The formulation Mu = E / (2.0_(1.0 + Nu)), Lambda = Nu_E/((1.0+Nu)_(1.0-2.0_Nu)) is used instead of the basic simplification Mu = E, Lambda = -E. We can recover that formulation using a large number for Nu (DEFORM_COEFF). The code has been simplified and that IO is now more clear. I have performed some tests and large deformations are now possible. . However, systematic regression tests for grid deformation is required using all the different kinds of elements. I remember that T. Economon put together some basic grids to test the mesh deformation, we should use those to check that everything is working fine before closing the release.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/278:528,simpl,simplification,528,https://su2code.github.io,https://github.com/su2code/SU2/pull/278,3,"['clear', 'simpl']","['clear', 'simplification', 'simplified']"
Usability,"Signed-off-by: jtneedels <jneedels@stanford.edu>. ## Proposed Changes. - General cleanup/optimization in NEMO solver/numerics. . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1389:318,guid,guide,318,https://su2code.github.io,https://github.com/su2code/SU2/pull/1389,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"Signed-off-by: jtneedels <jneedels@stanford.edu>. ## Proposed Changes. Fixes supersonic inlet BC in CNEMOEulerSolver so that it becomes operational.; Clean up NEMO supersonic outlet BC.; Clean up NEMO farfield BC.; ; ## Related Work; See associated PR to update documentation: https://github.com/su2code/su2code.github.io/pull/112. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1862:504,guid,guide,504,https://su2code.github.io,https://github.com/su2code/SU2/pull/1862,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"Signed-off-by: jtneedels <jneedels@stanford.edu>. ## Proposed Changes; Correction of indexing in NEMO axisymmetric source residual, consistent with change in perfect gas source residual in develop. . ## Related Work; Related to #1192 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1207:408,guid,guide,408,https://su2code.github.io,https://github.com/su2code/SU2/pull/1207,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"Simple bug that converted errors like ""duplicate MACH setting in configuration file"" to ""missing configuration file"".",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/144:0,Simpl,Simple,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/144,1,['Simpl'],['Simple']
Usability,"Simplest is to just copy the saved file again, with an iteration number appended. No keeping track of what the iteration number at the previous write was, no copying of the final saved file with manually appending the final iteration number, no lag of WRT_FREQ in the availability of the restart_xxx.dat file. It does mean that we do a copy instead of a rename. But I think this is the better (because the simplest) solution. I will extend it to the other file options.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1465#issuecomment-1005529868:0,Simpl,Simplest,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1465#issuecomment-1005529868,2,"['Simpl', 'simpl']","['Simplest', 'simplest']"
Usability,Simplify FEA MPI communications,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1181:0,Simpl,Simplify,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1181,1,['Simpl'],['Simplify']
Usability,"So I have setup Travis to test both Python versions, but I need to learn a little bit more about automake to setup the `pySU2` Makefile properly to build against the active Python environment. Hopefully getting closer...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/424#issuecomment-323047764:67,learn,learn,67,https://su2code.github.io,https://github.com/su2code/SU2/pull/424#issuecomment-323047764,1,['learn'],['learn']
Usability,"So I tested this on 4 mesh levels for a NACA0006 at 2.0 degrees AoA, at low (0.6) and high-ish (0.8) Mach number (Roe scheme).; These are the results for low Mach:; ![image](https://user-images.githubusercontent.com/38071223/61968547-3b08c680-afd0-11e9-8aae-9705a9441a00.png); Very small differences between recomputing a mass flux based on primitives (""Reconstructed"") or storing the flux computed during discretization of convection (""Consistent"").; However, the convergence rate for the latter approach is much worse:; ![image](https://user-images.githubusercontent.com/38071223/61968712-99ce4000-afd0-11e9-9c31-dafd7e26e3fb.png); Which makes sense because we are going from a Gauss-Seidel coupling of flow and turbulence to a half GS, half Jacobi (since the turbulence source terms were still computed with current velocity gradients).; After seeing this I only ran one mesh level (second to finest) at high Mach number and again differences were very small and convergence worse.; Some memory would indeed be saved in the discrete adjoint through the reduction of the number of pre-accumulation input variables, but only 30MB out of almost 9GB for a 2D case without MG. In summary the current approach seems to strike a good balance between accuracy, cost, and simplicity.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/721#issuecomment-515535554:1266,simpl,simplicity,1266,https://su2code.github.io,https://github.com/su2code/SU2/issues/721#issuecomment-515535554,1,['simpl'],['simplicity']
Usability,"So just to be clear: In my opinion, after calling SU2Driver.Run() the iteration count should be increased immediately. Now we postpone it in the python scripts, which means we have to add +1 in monitor to get the correct iteration count.; With the current change, Monitor has the correct (imo) behavior.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1960#issuecomment-1464364540:14,clear,clear,14,https://su2code.github.io,https://github.com/su2code/SU2/pull/1960#issuecomment-1464364540,1,['clear'],['clear']
Usability,"Sorry for the late reply! Thanks for all the help, and i am afraid i am using a 7.2.0 version and the newly released version 7.2.1 remains the same code. The problem is just lying on ""delta[iDim] = fabs(coord_j[iDim] - coord_i[iDim]);"" which is also in @TobiKattmann 's code post(thanks for your kind guidance ).; In deed, this part of code should give the credit to @EduardoMolina, and the function is a part of his doctoral thesis(2018) which i just couldnot found a link or doi of. But in this paper(https://www.researchgate.net/publication/318143234; ), he gives the official definition as below without the implementation in above picture.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1462#issuecomment-986239816:301,guid,guidance,301,https://su2code.github.io,https://github.com/su2code/SU2/issues/1462#issuecomment-986239816,1,['guid'],['guidance']
Usability,"Sorry if this is a simple question. I have an error trying to compile v7.0.8 on a HPC system. To try and identify the issue, I removed most of the AD/mkl/mpi flags. I tried running:; ```; ./meson.py build -Denable-pywrapper=true --prefix=/home/user/programs/su2/SU2-7.0.8; ./ninja -j2 -C build install; ```. but I get the following:. ```; ninja: Entering directory `build'; [360/448] Compiling C++ object SU2_CFD/src/libSU2core.a.p/solvers_CIncNSSolver.cpp.o; FAILED: SU2_CFD/src/libSU2core.a.p/solvers_CIncNSSolver.cpp.o ; c++ -ISU2_CFD/src/libSU2core.a.p -ISU2_CFD/src -I../SU2_CFD/src -I../externals/CLI11 -I../externals/cgns/adf -Iexternals/cgns -I../externals/cgns -I../externals/metis/include -I../externals/metis/GKlib -I../externals/metis/libmetis -I../externals/parmetis/include -I../externals/parmetis/libparmetis -Iexternals/tecio -I../externals/tecio -Iexternals/tecio/teciompisrc -I../externals/tecio/teciompisrc -ICommon/src -I../Common/src -I/work/A/openmpi/3.0.0_intel2018u2/include -pipe -D_FILE_OFFSET_BITS=64 -std=c++11 -O3 -fPIC -pthread -Wno-empty-body -Wno-unused-parameter -Wno-format-security -Wno-deprecated-declarations -Wno-non-virtual-dtor -DHAVE_CGNS -DNDEBUG -DHAVE_MPI -DHAVE_METIS -DHAVE_PARMETIS -DHAVE_TECIO -DTECIOMPI -MD -MQ SU2_CFD/src/libSU2core.a.p/solvers_CIncNSSolver.cpp.o -MF 'SU2_CFD/src/libSU2core.a.p/solvers_CIncNSSolver.cpp.o.d' -o SU2_CFD/src/libSU2core.a.p/solvers_CIncNSSolver.cpp.o -c ../SU2_CFD/src/solvers/CIncNSSolver.cpp; In file included from ../SU2_CFD/src/solvers/../../include/solvers/../fluid/../../../Common/include/containers/C2DContainer.hpp:32:0,; from ../SU2_CFD/src/solvers/../../include/solvers/../fluid/../../../Common/include/containers/container_decorators.hpp:31,; from ../SU2_CFD/src/solvers/../../include/solvers/../fluid/../../../Common/include/CConfig.hpp:47,; from ../SU2_CFD/src/solvers/../../include/solvers/../fluid/CFluidModel.hpp:33,; from ../SU2_CFD/src/solvers/../../include/solvers/CSolver.hpp:43,; from ../SU2_CFD/s",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1134:19,simpl,simple,19,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134,1,['simpl'],['simple']
Usability,Sounds good to me. I have been prototyping the multizone driver in the last couple of weeks. It's still in the early stages but it's slowly taking shape. You can find it here:; https://github.com/su2code/SU2/tree/feature_reformat_config. I also outlined some of the changes (particularly in what respects to the config file) in the Dev-society forum: https://su2devsociety.org/forum/?view=thread&id=5 . We could keep the conversation there if you want. Happy to set up a meeting to explain a bit what I have been doing and receive some feedback (and helping hands would also be welcome!) from the different groups.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/528#issuecomment-392061901:536,feedback,feedback,536,https://su2code.github.io,https://github.com/su2code/SU2/pull/528#issuecomment-392061901,1,['feedback'],['feedback']
Usability,"Sounds good, with that it will be easier to reason about when the recording types are created and used, right now someone would have to sit down and reverse-engineer the process.; My intuition is that we can use some of the machinery introduced for multizone (partial tape evaluation) to simplify the recording management.; And just to be clear I am very interested in having this feature in the code for comparison with the FP approach.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1750#issuecomment-1780662970:183,intuit,intuition,183,https://su2code.github.io,https://github.com/su2code/SU2/pull/1750#issuecomment-1780662970,3,"['clear', 'intuit', 'simpl']","['clear', 'intuition', 'simplify']"
Usability,"Sounds good. I applied Pedro's fix to my code (temporarily), and it seems to have cleared up the problem. Thanks guys! Do you want me to close this now, or wait until the PRs are applied to develop?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/956#issuecomment-620142891:82,clear,cleared,82,https://su2code.github.io,https://github.com/su2code/SU2/issues/956#issuecomment-620142891,1,['clear'],['cleared']
Usability,"Sounds like a reasonable optimization, the only other place that handles averages is `COutput::Postprocess_HistoryData`, so this should be a very local change and thus a good first issue. Do you want to give it a go at creating a pull request for this? We can give you some pointers. But it should be simple to modify the `addValue` function to take the window type as argument and only `push_back` for non trivial windows.; Even those could be optimized by caching the sum over n-1 elements, this would avoid traversing the entire history of values when only the last entry is modified during inner iterations.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1545#issuecomment-1037249095:301,simpl,simple,301,https://su2code.github.io,https://github.com/su2code/SU2/issues/1545#issuecomment-1037249095,1,['simpl'],['simple']
Usability,"Strange indeed. It was a fresh cloning of the develop branch.; Look at the begining of preconfigure.py:. #!/usr/bin/env python. ## \file configure.py; # \brief An extended configuration script.; # \author T. Albring; # \version 7.0.2 ""Blackbird""; #; # SU2 Project Website: https://su2code.github.io; # ; # The SU2 Project is maintained by the SU2 Foundation ; # (http://su2foundation.org); #; # Copyright 2012-2020, SU2 Contributors (cf. AUTHORS.md); #; Clearly 7.02. So there is somewhere a mixup with the 6 version. But the problem that not; just the headers numbers are mixed up",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/910#issuecomment-598824144:454,Clear,Clearly,454,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-598824144,1,['Clear'],['Clearly']
Usability,"Sure; If you want to install Su2 version 7.0.0 from scratch, you need python 3.5; atleast; The installation guide says just python 3; One of the functions used in meson.py is only available in python 3.5. On Mon, Feb 3, 2020, 12:51 AM Tim Albring <notifications@github.com> wrote:. > Thanks for opening the issue. Can you give a little bit more details on; > what you mean exactly ?; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/855?email_source=notifications&email_token=AIENZ3WCJDNJV4LP655MB33RA7LI5A5CNFSM4KNO4QLKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEKS7V6I#issuecomment-581303033>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AIENZ3TDY7ZCOS27JO7IYXTRA7LI5ANCNFSM4KNO4QLA>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/855#issuecomment-581453436:108,guid,guide,108,https://su2code.github.io,https://github.com/su2code/SU2/issues/855#issuecomment-581453436,1,['guid'],['guide']
Usability,"Surprisingly I have found the existing content related to plasma simulation in SU2. Really amazing. Could anyone give me any clues of the correspondent .cfg files? Or help me find the governing equations change which makes the plasma equations different from the neutral gas. ; ; ![image](https://user-images.githubusercontent.com/33152225/61871269-5fef3200-af1b-11e9-82c5-cd8418a6f83c.png). It already seems good enough at considering *E* field, but *B* is omitted. I can strive to supplement the equation. Could anyone give some guidance to me, a newcomer of SU2?. [Stanford University Unstructured An open-source integrated computational environment for multi-physics simula.pdf](https://github.com/su2code/SU2/files/3431264/Stanford.University.Unstructured.An.open-source.integrated.computational.environment.for.multi-physics.simula.pdf)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/741#issuecomment-515010918:531,guid,guidance,531,https://su2code.github.io,https://github.com/su2code/SU2/issues/741#issuecomment-515010918,1,['guid'],['guidance']
Usability,"Technically, this model has only one equation, the one for intermittency. Most of the functions are the same as the original LM model. Should I consider the Simplified model (SLM) as an option for the LM model to avoid duplicates? This is how I started, but I am open to discussions and suggestions.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1901#issuecomment-1406921239:157,Simpl,Simplified,157,https://su2code.github.io,https://github.com/su2code/SU2/pull/1901#issuecomment-1406921239,1,['Simpl'],['Simplified']
Usability,"Thank you @TobiKattmann for your feedback. The idea behind this new regression test config file is as follows:; We should have a test case that triggers the negative part of the SA model. Depending on the flow conditions, geometry and CFD parameters it might be triggered or not. With the previous config file, it was not. ; I think there is already a regression test in SU2 that triggers the negative SA, the `turb_oneram6_nk`. However, I decided to stick to rae2822 airfoil as it is a simpler (faster) case. In order to force the negative part of the SA for the rae2822 in a reasonable amount of iterations for a regression test, I increased the angle of attack. I have removed the multigrid as it might not be stable, but I have not tested though. Anyway, with the current configuration, e.g., convective scheme, CFL number, etc, the solution is not stable and diverges after some iterations, around 15. In that sense, I reduced the number of iterations from 20 to 10. In my opinion, a diverging regression test is not a problem at all as it might not be used as a tutorial, only to verify the integrity of the commit. ""The solution should always diverge to the same results"". If the regression test should converge, let me know and I will update the config file :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1559#issuecomment-1067926363:33,feedback,feedback,33,https://su2code.github.io,https://github.com/su2code/SU2/pull/1559#issuecomment-1067926363,2,"['feedback', 'simpl']","['feedback', 'simpler']"
Usability,"Thank you @pcarruscag and @kursatyurt for your comments and suggestions! I hope that I understood and applied them as intended, if not, please let me know. This is all new to me and because I'm still learning C++, it took me a few extra commits but now all tests seem to pass :) Have a good weekend!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2024#issuecomment-1545770617:200,learn,learning,200,https://su2code.github.io,https://github.com/su2code/SU2/pull/2024#issuecomment-1545770617,1,['learn'],['learning']
Usability,"Thank you for all your answers. @economon very good news! I am looking forward this improvement. I will rebase my branch on it. @aerialhedgehog: For first pattern, I didn't thought about this case. Thanks for feedback.; So ok to not change code matching pattern 1. In my own experience, in such cases, I prefer to create a new user friendly module that do all imports. In one hand, users have a very simple module and developers keep all real packages as clean as possible. But in other hand, it is true that there is a bit of duplication and can be confusing for whom exploring code. For pattern 4, yes, if I remember well, It happens only two times. So no need to write an helper function I think.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/246#issuecomment-201337122:209,feedback,feedback,209,https://su2code.github.io,https://github.com/su2code/SU2/issues/246#issuecomment-201337122,2,"['feedback', 'simpl']","['feedback', 'simple']"
Usability,"Thank you for replying while busy preparing the High Lift Prediction Workshop 5. Sorry, I didn't clearly understand. From what I understand, I can suggest another energy equation calculating method instead of the current SU2 method(reading calculated TKE from inlet boundary condition and using it as an energy equation). Is that right? If not, could you please explain in more detail?. > @sun5k maybe you can try implementing the alternative I suggested of obtaining turbulence kinetic energy at inlets from the turbulence solver instead of assuming that the free stream value is imposed exactly? In the SWBLI case the SST-m versions (without divergence terms in the stress tensor) seem to underpredict the separation region https://su2code.github.io/vandv/swbli/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1851#issuecomment-1525805374:97,clear,clearly,97,https://su2code.github.io,https://github.com/su2code/SU2/issues/1851#issuecomment-1525805374,1,['clear'],['clearly']
Usability,"Thank you for the changes.; I would say a test case is always welcome. You can simply modify an existing one, this feature is orthogonal to everything else, and then please add the new options to the config_template (with maybe the nice explanation you have in CConfig).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1236#issuecomment-800292781:79,simpl,simply,79,https://su2code.github.io,https://github.com/su2code/SU2/pull/1236#issuecomment-800292781,1,['simpl'],['simply']
Usability,Thank you for the feedback but for 99% of cases it is easier for users if we download the dependencies for them. The philosophy behind SU2 has always been to provide as much of a self contained package as possible.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1945#issuecomment-1450323672:18,feedback,feedback,18,https://su2code.github.io,https://github.com/su2code/SU2/issues/1945#issuecomment-1450323672,1,['feedback'],['feedback']
Usability,"Thank you for the feedbacks, I am working on the modifications you suggested. I will perform a couple of tests to be sure I did not break anything. Hope to commit the new code soon!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1124#issuecomment-740209039:18,feedback,feedbacks,18,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124#issuecomment-740209039,1,['feedback'],['feedbacks']
Usability,"Thank you for the pull request. ; Pull requests must be both to and from the ""develop"" branch (or the relevant feature branch if applicable). In order to make a pull request, please check out the develop branch, make your changes, and submit the pull request into to develop branch. . While this might be useful in some situations, and particularly the record of this pull request can be an example to other users who want to use Docker with SU2, it looks like this is specific to a version of Ubuntu, and that you have hard-coded some lines to refer to locations on your own file system. We try to make it such that SU2 will be usable in most operating systems, with appropriate changes to the configuration steps. . Since it is setting up a development environment this would be more appropriate to SU2_IDE/, rather than Quickstart/ - which is intended as the main tutorial for new users, who are not necessarily developers and who may not have heard of Docker.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/169#issuecomment-96786749:629,usab,usable,629,https://su2code.github.io,https://github.com/su2code/SU2/pull/169#issuecomment-96786749,1,['usab'],['usable']
Usability,"Thank you for the review @economon.; I just gave the multiple constraints a try on the hybrid onera m6 mesh we have in testcases, it works, both points and edges can be balanced, but the edge cuts go up by almost 50% I guess that makes sense, more constraints less minimization.; There's another reason why I like the combined function, balancing the ""num neighbors"" metric is not exactly the same as balancing the number of edges per partition, using a small negative point weight (-1, -2) yields better results (but the ideal value will be case dependent). I think the next big improvement we can make in this area is to use a partitioner that is aware of the network topology, ParMETIS assumes that the communication cost between any two ranks is the same, this simplification can be very costly on large parallel machines that have a tree-like network topology, and in older clusters with slow interconnects (relative to intra node communication).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1059#issuecomment-671054807:765,simpl,simplification,765,https://su2code.github.io,https://github.com/su2code/SU2/pull/1059#issuecomment-671054807,1,['simpl'],['simplification']
Usability,"Thank you so much, Tobi and Pedro. Yes, there is a temperature gradient; close to the wall. So SU2 gives me, in this case, a 'virtual heat flux'!; Kind regards. On Thu, Sep 28, 2023 at 8:25 PM Pedro Gomes ***@***.***>; wrote:. > you are correct, there is a discussion on CFD-online about it. we impose 0; > heat flux, but report an ""apparent heat flux"" most codes will simply give; > you back the imposed heat flux value you specify, nevertheless there will; > probably be a temperature gradient close to the wall; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/2109#issuecomment-1740118992>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AHGXZUUZNE6B63SH7XJLY2DX4YBMZANCNFSM6AAAAAA3QKLVDU>; > .; > You are receiving this because you commented.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2109#issuecomment-1740735437:369,simpl,simply,369,https://su2code.github.io,https://github.com/su2code/SU2/pull/2109#issuecomment-1740735437,1,['simpl'],['simply']
Usability,"Thank you so much. Jehan. Sent from Yahoo Mail on Android. From:""Tim Albring"" notifications@github.com; Date:Tue, May 5, 2015 at 4:56 PM; Subject:Re: [SU2] SU2 do not produce plot files such as vtk etc. (#173). If you run the code with enabled mpi support SU2_CFD will only write the restart files. You need to use SU2_SOL to convert them to .vtk. Therefore simply copy the restart_flow.dat to solution_flow.dat and run SU2_SOL. Or you could just use the parallel_computation.py script that does this automatically. —; Reply to this email directly or view it on GitHub.￼",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/173#issuecomment-99235355:358,simpl,simply,358,https://su2code.github.io,https://github.com/su2code/SU2/issues/173#issuecomment-99235355,1,['simpl'],['simply']
Usability,"Thank you, @economon. It turns out, that does indeed remove the issue. I updated to the latest version (7.0.5) at the same time. When checking the default behavior, the QuickStart case would run correctly the 1st time then it would fail if the restart file was not removed prior to the output stage of subsequent runs. Commenting out line 223 does appear to resolve the issues we have been encountering. Original:; Now it seems to get stuck (simply freezes for >60 sec) when writing surface_flow.vtu (from QuickStart). I don't suppose there's another flag like this in that code vicinity?. Update: This issue resolved itself. The file system was being taxed by other runs. Thank you all for your time!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/971#issuecomment-644968380:442,simpl,simply,442,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-644968380,1,['simpl'],['simply']
Usability,"Thanks @FlorianDm for putting in the fix!. Although, it sound like we still need something more general.. I think the normal neighbor concept could still work, it's just that you need to be starting from the vertex list on the axis (not the inlet or the outlet) to find it. Another simple thing to try is just setting AxiFactor = 0.0 if the y coord = 0.0, instead of 1.0. If this grid is stretched with small spacing near the wall, the contribution from the dual CV on the axis could be very small.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/927#issuecomment-611266566:282,simpl,simple,282,https://su2code.github.io,https://github.com/su2code/SU2/pull/927#issuecomment-611266566,1,['simpl'],['simple']
Usability,"Thanks @MicK7 I will have a look, my initial thought was to have a simple strategy where within each MPI rank parallelism is extracted via colouring or scatter-to-gather transformations and only one thread per rank participates in the message passing, I have no experience here though so this might be a bad strategy, idk. **Back to business:**; I went silent for a bit because in prototyping a typical residual computation and matrix update loop I made some realisations that made me go back to the drawing board regarding data structures, and eventually back to square 0. . ## Parallel strategy for flux computation; Because significant computation is required to obtain each edge's flux, it does not make sense to attempt a ""point-loop"" strategy (which would double the effort).; However, one can either use colouring to avoid the race conditions that would result from updating the residual of cells i and j, or store the edge fluxes and then, on a second point-loop perform the summation of fluxes for each cell, with the direction being accounted by the same adjacency information used in the point-loop GG gradient computation.; If we consider only the update of residuals the two strategies are fairly equivalent performance wise, the tie breaker is the matrix updates. ## Matrix Updates; By this I mean the `addBlock`, `subBlock` we do (two times each) to update diagonal and off-diagonal blocks for each edge.; Here is a dummy numerics loop that does nothing else but setting blocks in the matrix (with colouring).; ```c++; void testLoop1(const vector<size_t>& colorStart,; const vector<size_t>& edgeIdx,; const vector<pair<size_t,size_t> >& connectivity,; double** blk_i, double** blk_j,; SparseMatrix& matrix); {; matrix.setZero();. for(size_t color=0; color<colorStart.size()-1; ++color); #pragma omp parallel for schedule(dynamic,CHUNK_SIZE); for(size_t k=colorStart[color]; k<colorStart[color+1]; ++k); {; size_t iEdge = edgeIdx[k];; size_t iPoint = connectivity[iEdge].first;; size_t j",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:67,simpl,simple,67,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,1,['simpl'],['simple']
Usability,"Thanks @clarkpede to take the initiative for this topic. I think unit-tests are a useful thing and we should think about having it in addition to the regression tests. Regarding the framework I am actually a little bit hesitant to use boost. Although we are already using it for tecio, in that case it is used in a part of the code which does not change frequently so it is fine if we are just shipping it. However, if we start introducing it into the actual development process people may want to use more and more features of boost and we will have a hard time maintaining versions, compatbilities and so on. And in my opinion we should keep it as simple and lightweight as possible (one of our biggest strengths is the simple compilation/installation, which actually attracts a lot of users). So in that regard Catch2 looks like a better candidat to me. But I am happy to hear more opinions on that.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-500226914:650,simpl,simple,650,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-500226914,2,['simpl'],['simple']
Usability,"Thanks @pcarruscag , I had to do a few additional things together with the PERIODIC_IMPLICIT communication to make it work, but that also brought me on the right track 👍 Now it works really nicely from my point of view. > Have a look at my last comment in #763, I think there is a better way of handling linear system periodicity instead of what we do, which may allow you to run at higher CFL (and with simpler periodic comms). I need to have a second look at this. So non of your thoughts back then are yet incorporated in this PR",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1382#issuecomment-927303571:404,simpl,simpler,404,https://su2code.github.io,https://github.com/su2code/SU2/pull/1382#issuecomment-927303571,1,['simpl'],['simpler']
Usability,"Thanks Brian,; my bad, I misinterpreted the carpets / logs structure. I successfully ran a test of a very simple case. In the results there are some small artifacts, but the shocks are resolution improved consistently after mesh adaption.; Thanks for the support. ![Comparison](https://user-images.githubusercontent.com/41752169/80644172-84a7a580-8a69-11ea-9f16-58e98c808b73.png); ![ComparisonMesh](https://user-images.githubusercontent.com/41752169/80644174-85403c00-8a69-11ea-819f-2ac00550a089.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-621450497:106,simpl,simple,106,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-621450497,1,['simpl'],['simple']
Usability,"Thanks Edwin, the vectorized loops in the code are probably very simple array copies, hence the low efficiency? I would put money on not a single vector instruction being generated for the important stuff. I was surprised by the 1.25 to 1.3 factor you are seeing, for the exact same case I measured 1.39 (to be more precise). Initially I thought it had something to do with running single core, thus leaving vast amounts of L3 for only that core to use, so on the same 24c platform I ran 2 processes (30MB of cache for each) (very uncivilised) and the factor went down to 1.37, so cache was not the reason.; So then I thought maybe the Intel compilers are very good at optimizing polymorphism away, but the development branch compiled with icc 17 runs at exactly the same speed as when compiled with gcc 5.4. Then I compiled feature_contiguous_cvariable with icc 17 and it runs 9% slower than the gcc binaries, and so with icc 17 the speedup for this case was 1.27 errrrr... Anyone got a buddy at Intel?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-523930905:65,simpl,simple,65,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-523930905,1,['simpl'],['simple']
Usability,"Thanks Francisco for this contribution! Although the FFD Framework is already working quite well, there is still (like always) room for improvement. In fact, I am currently working on using BSplines instead of Bezier curves. I'm going to open a pull request end of this week. But this shouldn't affect this one I hope. Do you have by any chance a simple test case I could use to check this ?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/330#issuecomment-260475206:347,simpl,simple,347,https://su2code.github.io,https://github.com/su2code/SU2/pull/330#issuecomment-260475206,1,['simpl'],['simple']
Usability,"Thanks Pedro for hinting me at this coupling issue again, now I think I understand it! . **For the record**, here is what I talked about in today's developer meeting:; When I make the following changes in the `issue_simplified/multizone/multizone-i.cfg` :. 88c88; < CFL_NUMBER= 0.1; ---; > CFL_NUMBER= 1000.0; 162c162; < TIME_DISCRE_FLOW= EULER_EXPLICIT; ---; > TIME_DISCRE_FLOW= EULER_IMPLICIT; 177c177; < TIME_DISCRE_TURB= EULER_EXPLICIT; ---; > TIME_DISCRE_TURB= EULER_IMPLICIT. then the simplified multizone setup converges, albeit to a different solution:; ![simplified-multizone-explicit-cfl01-density](https://user-images.githubusercontent.com/72806890/139096529-5063dbe7-8ee8-4c53-a7c6-a2b6b3a031a1.png); than what the simplified singlezone setup (from above) converged to: ; ![simplified-singlezone-density](https://user-images.githubusercontent.com/72806890/139096586-7d096c5f-4d34-4ddb-94fa-0deab52df5e4.png). The same observation can be made analogously for `issue_complicated`:; The multizone setup with explicit Euler and CFL=0.1 (nearly) converges (actually the residual stalls at `avg[bgs][0]` approximately -13) to the following limit:; ![complicated-multizone-explicit-cfl01-density](https://user-images.githubusercontent.com/72806890/139096973-e9547f9f-521e-4920-aba5-2621fad79944.png); while the singlezone solution (with implicit Euler and CFL 1000) is (**EDIT**: was momentum plot, replaced by density plot); ![complicated-singlezone-density](https://user-images.githubusercontent.com/72806890/139109790-e5cae4be-041e-4c29-93a5-e086a26f72a4.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414#issuecomment-953043430:491,simpl,simplified,491,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414#issuecomment-953043430,4,['simpl'],"['simplified', 'simplified-multizone-explicit-', 'simplified-singlezone-density']"
Usability,"Thanks Tom for the comments! ; I think I have covered them all but let me know if you still have comments. I will do some updates tomorrow morning. I agree this is a very large pull request, it's the result of over a year of work, so I would really appreciate any more feedback from the community! ; Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/452#issuecomment-337575805:269,feedback,feedback,269,https://su2code.github.io,https://github.com/su2code/SU2/pull/452#issuecomment-337575805,1,['feedback'],['feedback']
Usability,"Thanks Tom; I agree that we should make things easy to understand. ; My thinking was that most users will want to know what parts of the mesh they are moving, but don't necessarily need to know what's happening underneath - if they specify the entire mesh the code just reverts to the more efficient method. But (from the users perspective) it may be just as easy to have a separate specification for scaling the entire mesh. . In terms of moving it to SU2_MSH; I think it may make sense to include scale/rotate/translate in SU2_MSH, but I think it would be confusing to have two options that do the same thing. I would side with separate option names (this would also eliminate a loop over markers in this pull request). On this topic, I have sometimes found MARKER_DESIGNING and DV_MARKER to be confusing; on their own they sound very similar, in the description MARKER_DESIGNING is where the objective function is evaluated - but in the code, it's not clear what MARKER_DESIGNING does - the surfaces specified by MARKER_MONITORING are what are actually used to evaluate the objective function value. . There may be other similar areas where config file options could be clarified or compressed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/187#issuecomment-132181536:955,clear,clear,955,https://su2code.github.io,https://github.com/su2code/SU2/pull/187#issuecomment-132181536,1,['clear'],['clear']
Usability,"Thanks a lot @pcarruscag but for the moment I decided to use [NaSt3DGP](https://ins.uni-bonn.de/media/public/u/griebel/NaSt3DGP/index.html) instead. It is a very simple code that implements 3D incompressible NS with natural convection, and it can be very easily understood because it's really a very minimal implementation (parallelized, though). I'm closing this, although if you consider this feature would be of interest for SU2, don't hesitate to open this issue again, as a feature request.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/973#issuecomment-626360321:162,simpl,simple,162,https://su2code.github.io,https://github.com/su2code/SU2/issues/973#issuecomment-626360321,1,['simpl'],['simple']
Usability,"Thanks a lot for your feedback, we have updated the files. ; For the time being, just remove MG_CFL_REDUCTION= 0.9 in your config file.; Best,; Francisco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/44#issuecomment-54904983:22,feedback,feedback,22,https://su2code.github.io,https://github.com/su2code/SU2/issues/44#issuecomment-54904983,1,['feedback'],['feedback']
Usability,Thanks again for the helpful feedback @oleburghardt. Time to get this one merged so we can keep moving.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/625#issuecomment-459996705:29,feedback,feedback,29,https://su2code.github.io,https://github.com/su2code/SU2/pull/625#issuecomment-459996705,1,['feedback'],['feedback']
Usability,"Thanks at all for being so responsive to this mishap. When I started contributing I learned that something like a 2-LGTM-rule was applying. But apparently it evolved to have someone merge a pull request if he or she can judge the content and feels comfortable with it, as the other approach ended up having a large list of unmerged pull requests **or** having two LGTM's of non-independent reviewers. @economon Maybe you can bring it up at the next meeting how we could address this little double bind?. So sorry again for the trouble (at least a revert of the very latest commit would not be too difficult). Still I'll wait if @pcarruscag and @talbring want to do now the way Tim suggested.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/667#issuecomment-480015080:27,responsiv,responsive,27,https://su2code.github.io,https://github.com/su2code/SU2/pull/667#issuecomment-480015080,2,"['learn', 'responsiv']","['learned', 'responsive']"
Usability,"Thanks for bringing up this issue. It is interesting... . As Heather mentioned, is there any concern that when writing large files the lack of an endl will cause the buffer to become too large at some point (before the file gets closed and clears the stream automatically)?. Unfortunately, we do not have any regression tests that cover the output files at the moment, so it is difficult to gauge the impact of the changes, although it would be straightforward to add some tests for SU2_CFD and SU2_SOL that diff output files. Have you been able to verify that all CSV, Tecplot/ParaView files, and force breakdown files work appropriately?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/281#issuecomment-223806287:240,clear,clears,240,https://su2code.github.io,https://github.com/su2code/SU2/pull/281#issuecomment-223806287,1,['clear'],['clears']
Usability,"Thanks for finishing up the implementation, @VivaanKhatri! I am looking forward to reviewing this very soon. Do you have a test case to verify things are working? Even just a simple flat plate like in the paper so that we can put it under regression control?. @rsanfer: your comment reminded me about our earlier attempts to fix up the indentation issues on the fix_indentation branch. Do you think this is something we can revive to provide scripts for automatically fixing this issue once and for all? Or do we need to find a different approach?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/530#issuecomment-387921905:175,simpl,simple,175,https://su2code.github.io,https://github.com/su2code/SU2/pull/530#issuecomment-387921905,1,['simpl'],['simple']
Usability,"Thanks for taking care of the merge with develop @pcarruscag, I am going to make some simple formatting changes to the `CFEASolver` and `CMeshSolver` so that they conform to the rest of the solver files",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/849#issuecomment-578283139:86,simpl,simple,86,https://su2code.github.io,https://github.com/su2code/SU2/pull/849#issuecomment-578283139,1,['simpl'],['simple']
Usability,"Thanks for the clarification!. Best,; Francisco. > On Apr 22, 2017, at 5:01 PM, Heather Kline <notifications@github.com> wrote:; > ; > Thanks; > The discrete adjoint can also be used with combined objectives, and uses the same config specifications. It may not be clear from this pull request since this functionality was added in a previously - when multiple objectives (limited to objectives defined inside the CFD solver) are specified, they are added together (with specified weights) in the CFD solver into the 'COMBO' output to history. This variable is registered for the discrete adjoint solver.; > An example of this can be seen in the serial_regression_AD.py, test name 'discadj_multi_py'.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/pull/385#issuecomment-296409557>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AEpklrJ5WQ8CoWJNAy_FVZ0bbYN000s2ks5rypTpgaJpZM4MgM_e>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/385#issuecomment-296409876:264,clear,clear,264,https://su2code.github.io,https://github.com/su2code/SU2/pull/385#issuecomment-296409876,1,['clear'],['clear']
Usability,"Thanks for the comments, Tom! I understand it's a big change, so I would welcome some more feedback! . I am working in other ways to improve the generalization/sustainability of the code, so any comments would also be considered for that stage :D",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/528#issuecomment-388799884:91,feedback,feedback,91,https://su2code.github.io,https://github.com/su2code/SU2/pull/528#issuecomment-388799884,1,['feedback'],['feedback']
Usability,"Thanks for the commit, I've installed it using your hints (I also changed some aliases to always point to python3), and now `parallel_computation.py` it is running properly.; `mesh_adaption_amg.py` runs, until it complains about Ncorners in the SU2 mesh.; ` ## WARNING: MISSING SU2 MESH FILE KEYWORD: NCORNERS=.` ; and then mesh_adapt fails, I can't find any reference to NCORNERS in *.su2 mesh files by the way. As far as` locate Python.h` that's the output :; ```/home/antares/Downloads/SALOME-9.3.0-UB18.04-SRC/BINARIES-UB18.04/ParaView/include/paraview-5.6/vtkPython.h; /home/antares/Downloads/SALOME-9.3.0-UB18.04-SRC/BINARIES-UB18.04/Python/include/python3.6/Python.h; /home/antares/Downloads/SALOME-9.3.0-UB18.04-SRC/BINARIES-UB18.04/gmsh/include/FieldPython.h; /home/antares/Downloads/SALOME-9.3.0-UB18.04-SRC/BINARIES-UB18.04/gmsh/include/simpleFunctionPython.h; /home/antares/Downloads/ThirdParty-v1806/ParaView-v5.5.2/VTK/Utilities/Python/vtkPython.h; /home/antares/OpenFOAM/ThirdParty-v1806/ParaView-v5.5.2/VTK/Utilities/Python/vtkPython.h; /usr/include/python3.6m/Python.h; ```. Thanks",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-619409024:848,simpl,simpleFunctionPython,848,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619409024,1,['simpl'],['simpleFunctionPython']
Usability,"Thanks for the explanation @suargi . I would personally advocate for that the testcases should converge to some reasonable solution people might use it as a starting point (copy the cfg and doing mild adaptions) for their own stuff. And the Testcases show off the capabilities to some degree, to do so, convergence is beneficial. But as we have a bunch of working 2D airfoils in regression already I recon that adding a clear explanation and warning to the cfg as suggested by Pedro is fine. Otherwise you might try to bisect the AoA ... maybe there is a value that triggers negative SA and does not diverge :thinking: . Knowingly adding a diverging test without a clear warning is not good imo :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1559#issuecomment-1067977083:420,clear,clear,420,https://su2code.github.io,https://github.com/su2code/SU2/pull/1559#issuecomment-1067977083,2,['clear'],['clear']
Usability,"Thanks for the feedback @pcarruscag. @jayantmukho and I discussed this when we implemented the objective function. The main motivation was that since our implementation of the separation sensor is computed using the skin friction coefficient, we only defined the variables Buffet_Sensor, Buffet_Metric, etc. for the NSSolver class. Since the NSSolver needs to be able to evaluate all the same objectives as the EulerSolver, but the buffet objective is exclusive to the NSSolver, I copy pasted the function and added the new objective. Let me know if you have any suggestions for a cleaner implementation. We were basically choosing between defining all the Buffet_* variables in EulerSolver which would just add unnecessary variables to the constantly growing list of variables, or copying EvaluateObj_Func to allow for NS-specific objectives.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/614#issuecomment-441300657:15,feedback,feedback,15,https://su2code.github.io,https://github.com/su2code/SU2/pull/614#issuecomment-441300657,1,['feedback'],['feedback']
Usability,"Thanks for the feedback and suggestions. Nice teamwork! I am also plenty happy with this now. Last comment: it was mentioned at the meeting (maybe in the V&V working group), that it would be good to have a separate option for the user-defined solution, in the case of setting a custom initial condition or BC, that sits outside the KIND_VERIFICATION_SOLUTION option list. Doesn't have to necessarily be acted upon now, but want it on record.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/672#issuecomment-498834929:15,feedback,feedback,15,https://su2code.github.io,https://github.com/su2code/SU2/pull/672#issuecomment-498834929,1,['feedback'],['feedback']
Usability,"Thanks for the feedback. . I was not able to find any examples myself either. It looks like this is a feature that has been around for a while, but maybe has gotten lost in some updates. I will work on setting up a small test case for this and the FAN_FACE_MDOT and submit a PR.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1607#issuecomment-1100150640:15,feedback,feedback,15,https://su2code.github.io,https://github.com/su2code/SU2/issues/1607#issuecomment-1100150640,1,['feedback'],['feedback']
Usability,Thanks for the feedback. I will modify the class in a way that it is possible to specify the separator and other decoration.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/591#issuecomment-427287405:15,feedback,feedback,15,https://su2code.github.io,https://github.com/su2code/SU2/issues/591#issuecomment-427287405,1,['feedback'],['feedback']
Usability,"Thanks for the feedback. The GitHub pages site is now the official project page, and the redirect has been put in place. Please let me know asap if any problems arise. @vdweide: yes, let's keep with our normal development process for the website, including PRs and code reviews, etc., in order to maintain quality and keep everyone informed. Lastly, if anyone is very interested in working on a website overhaul, please let us know.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/436#issuecomment-329063810:15,feedback,feedback,15,https://su2code.github.io,https://github.com/su2code/SU2/pull/436#issuecomment-329063810,1,['feedback'],['feedback']
Usability,Thanks for the feedback.. this is resolved in #600,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/515#issuecomment-459228891:15,feedback,feedback,15,https://su2code.github.io,https://github.com/su2code/SU2/issues/515#issuecomment-459228891,1,['feedback'],['feedback']
Usability,"Thanks for the fixes, Francisco. The continuous adjoint tests are now failing, but I am guessing that it is something simple with the changes to the config option. Can you please take a look when you have a moment?. Couldn't agree more about keeping an eye on the Python scripts. We'll chat about it this week at the developer meeting (we need regressions for the Python scripts). More on that to come.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/244#issuecomment-191571633:118,simpl,simple,118,https://su2code.github.io,https://github.com/su2code/SU2/pull/244#issuecomment-191571633,1,['simpl'],['simple']
Usability,"Thanks for the hint, just uploaded a screenshot of the mesh adaption!; Now I'm trying to run a simple 3D case, but unfortunately the amg.out fails during the first try (in the adap/ini folder):; ```; ## 16739 TRIANGLE(S) DISCARDED ; fefloa_Python2Mesh : 3d mesh on input ; fefloa_Python2Mesh : msh->NbrVer 14368 ; fefloa_Python2Mesh : msh->NbrTet 58189 ; fefloa_Python2Mesh : leaving with 14368 ver. 16740 tri. 0 edg. ; -- Maximal memory ; Maximum number of Points 53800000 ; Maximun number of Bnd Points 10760000; Maximum number of Triangles 21520000 ; Maximum number of Tetrahedra 295900000 ; Allocated Memory 50.105 Gb ; Physical Memory 62.729 Gb; bounding box x: -100 200 y: -150 150 z: -150 150 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; 14368 Vertex ; 3 Boundary Vertices ; 58189 Tetrahedra ; 1 Triangles ; 0 Edges ; 1 Surface(s) ; % Output subdom.meshb Mesh ndimn=3, mpoin=14368, melem=58189, mface=1; Corners 0 Required 0 ; ## ERROR : TETRAHEDRON 2 BOUNDARY FACE 1 2; 9 IS MISSING ; ## ERROR : TETRAHEDRON 4 BOUNDARY FACE 3 7; 2324 IS MISSING ; ···; ## ERROR: FEFLO.A: 16740 BOUNDARY FACES ARE MISSING ; CHECK YOUR MESH . ## FATAL ERROR: FEFLOA: INITIAL OR CURRENT MESH HAS AN IN",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-623572280:95,simpl,simple,95,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-623572280,1,['simpl'],['simple']
Usability,Thanks for the improvements! Just a quick suggestion: maybe we should use for the distance computation the already available ADT structure ? Just have a look at CPhysicalGeometry::ComputeWall_Distance on how to use it. Should be more or less a simple copy/paste.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/444#issuecomment-331841826:244,simpl,simple,244,https://su2code.github.io,https://github.com/su2code/SU2/pull/444#issuecomment-331841826,1,['simpl'],['simple']
Usability,"Thanks for the quick review @pcarruscag. I have cleaned up a little bit. Also added a nicer table of the output. l prefer that we always compute the min/max values, at least for the FVM CFD solvers, for a few reasons. The most important reason is that we should start to build up some intuition about the correlation between mesh quality metrics and accuracy + convergence in the solvers. This can be especially important during optimization when the mesh is deforming. I think the metrics are valuable to print every time for this reason, which might help users diagnose problems eventually. Additionally, the cost is relatively small (on par with the other pre-processing routines, it is only executed once and it is parallelized, and the memory is released if we don't write).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/778#issuecomment-526456264:285,intuit,intuition,285,https://su2code.github.io,https://github.com/su2code/SU2/pull/778#issuecomment-526456264,1,['intuit'],['intuition']
Usability,"Thanks for the suggestion and I am preparing for a test.; As far as I understand it, I just find that to get the absolute value of r_ij ( showed in the highest equation) in this part of code is unnecessary. The cross-product operation is to find the grid vector mostly parallel to the vorticity vector and the absolute value may cause a nonphysical recognition.; @EduardoMolina, I don't know if I got it wrong and wish more guidance,.; ```; for (auto iDim = 0u; iDim < nDim; iDim++){; delta[iDim] = fabs(coord_j[iDim] - coord_i[iDim]);; }; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1462#issuecomment-988581348:424,guid,guidance,424,https://su2code.github.io,https://github.com/su2code/SU2/issues/1462#issuecomment-988581348,1,['guid'],['guidance']
Usability,"Thanks for your comments! Except for mixing plane and frozen rotor, sliding plane is also pretty common in turbomachinery simulation, it is indeed implemented in some, if not all, in-house codes. ; MRF is quite useful in turbomachinery simulation, expecially when we deal with transient simulation. Actually it is really rare to move the rotor mesh like in reality. One reason is that MRF is more efficient and accurate. Otherwise, you introduce new disturbance into the transient flow field every physical time step, which is not good. Because when you rotate the mesh, the velocity direction of each grid point inherited from last time step is not rotated. To make it more clear, you will have a flow going towards casing instead of parallel to, at the start of next physical time step. So you need more pseudo time steps to get a proper velocity variable. As a result, you get a zig-zag shape in the residual history.; I'm not actually moving the interface. The rotor mesh is not rotated, so as the interface at rotor zone. I'm just virtually rotating the rotor interface to find the new matching points between rotor and stator for each physical time step, so that the variable could be passed across the interface. In other words, only the passing variables are actually rotated. If I understand it correctly, there is no additional moving mesh restriction introduced here.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2173#issuecomment-1953783506:675,clear,clear,675,https://su2code.github.io,https://github.com/su2code/SU2/pull/2173#issuecomment-1953783506,1,['clear'],['clear']
Usability,"Thanks for your feedback! I agree, `OMP_NUM_THREADS` is better than having the number of threads in the constructor. I adapted `disc_adj_flow` and `disc_adj_fea` for MPI and added both to parallel AD and hybrid AD tests.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1966#issuecomment-1472198978:16,feedback,feedback,16,https://su2code.github.io,https://github.com/su2code/SU2/pull/1966#issuecomment-1472198978,1,['feedback'],['feedback']
Usability,Thanks for your guidence.; I found the code snippet you metioned in version 7.4.0 hasnot shown up in my current version 7.2.0. Quite happy to see contributors have revised this.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1809#issuecomment-1308341917:16,guid,guidence,16,https://su2code.github.io,https://github.com/su2code/SU2/issues/1809#issuecomment-1308341917,1,['guid'],['guidence']
Usability,"Thanks for your kindly reply, Clark. It is a good habit to have a search before asking, and I should keep it. . ""feature-AdjTNE2"" seems to be a good example to learn from how to edit the kernel of governing equations. I would try to deepen the utilities of electromagnetic computation. And I have found the commit that deleting all plasma computational relevant content. 45c2a63d1a0773dd2e9ca05b5a1798ea575d47f8 Anybody willing to tell me why we delete that part? Too complicated to handle?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/741#issuecomment-515276512:160,learn,learn,160,https://su2code.github.io,https://github.com/su2code/SU2/issues/741#issuecomment-515276512,1,['learn'],['learn']
Usability,"Thanks, @clarkpede, for this PR and for the clear explanation of the features proposed. LGTM in terms of implementation and code style. I'll just wait for @EduardoMolina to comment on the contents. I only have a couple of minor questions:. > I moved the calculation of the maximum cell width to the CPhysicalGeometry class. This makes inclusion in the central/upwind blending easier. For DES and DDES, the cell lengthscale is not dependent on the flow. So there's no need to compute it every iteration in the flow solver. I can see this approach reduces the computational cost of computing the MaxLength every time at the cost of having one more double in memory per point. However, would a call to SetMaxLength() be necessary in case of deformable meshes? . Also, from PR #532:; > As for code verification, I would propose using one of the cases examined by Travin, Stretlets, Mockett, or Xiao for comparison. (...) The cases I can see where they explicitly show the results of the blending function are: Circular cylinder at Re = 50,000 (Travin et al. 2002) (...). I guess this is the case for which you are showing the rough tests results in the Code Verification section. I am currently looking into some test cases at similar Re regimes. Are you using the unsteady compressible solver for this verification? I noticed that in Ref.[1] they use artificial compressibility, and I was wondering if we could also use this test case to look into the unsteady, incompressible (preconditioned) version of the solver (PR #514).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/552#issuecomment-403842613:44,clear,clear,44,https://su2code.github.io,https://github.com/su2code/SU2/pull/552#issuecomment-403842613,1,['clear'],['clear']
Usability,"Thanks, @jaspe55 ! LGTM. I don't think we have any tests for the inverse design capability. Do you have a very simple test case that we can put into the regressions for this capability? I think you are working on a nozzle design.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-439496260:111,simpl,simple,111,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-439496260,1,['simpl'],['simple']
Usability,"Thanks, David & Ruben. If anyone else has feedback or concerns, please let us know. We'll likely merge this in tomorrow. If folks have trouble with conflicts from the previous memory fixes, or have conflicts with these CDriver changes, We're happy to work with you directly. Just let me know.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/295#issuecomment-237737515:42,feedback,feedback,42,https://su2code.github.io,https://github.com/su2code/SU2/pull/295#issuecomment-237737515,1,['feedback'],['feedback']
Usability,"Thanks, Edwin. I had originally toyed around with this too, but I thought using the system-specific versions would be most portable at first. However, for something this simple, I agree that we should just do it ourselves. I have reused your implementation with some minor modifications. Could you please just confirm that the code posted above is yours, you are ok with me adapting it, and that I can name you as an author at the top of the file (I have added you there)?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/562#issuecomment-414092502:170,simpl,simple,170,https://su2code.github.io,https://github.com/su2code/SU2/pull/562#issuecomment-414092502,1,['simpl'],['simple']
Usability,"Thanks, I’ll take a look at that before the weekend,. Best,; Francisco. > On Mar 2, 2016, at 8:03 PM, Thomas D. Economon notifications@github.com wrote:; > ; > Thanks for the fixes, Francisco. The continuous adjoint tests are now failing, but I am guessing that it is something simple with the changes to the config option. Can you please take a look when you have a moment?; > ; > Couldn't agree more about keeping an eye on the Python scripts. We'll chat about it this week at the developer meeting (we need regressions for the Python scripts). More on that to come.; > ; > —; > Reply to this email directly or view it on GitHub https://github.com/su2code/SU2/pull/244#issuecomment-191571633.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/244#issuecomment-191590831:278,simpl,simple,278,https://su2code.github.io,https://github.com/su2code/SU2/pull/244#issuecomment-191590831,1,['simpl'],['simple']
Usability,"Thanks, Tim. Adding flexibility to the FFD is a great contribution. I was just going through the changes and I have a couple of questions:; 1. I noticed that you have added AD as an option for computing the geometric sensitivity component (change in the surface location due to a delta change in the design variable) that multiplies the adjoint sensitivity. Is there a way to make this usable for the continuous adjoint too rather than using finite differencing? This assumes that the user has built the AD version, even though they use the continuous adjoint.; 2. On a related note (I think), is the finite differencing that is currently used for computing the geometric sensitivity the only roadblock to arbitrary FFD movements for the continuous adjoint?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/239#issuecomment-183462794:386,usab,usable,386,https://su2code.github.io,https://github.com/su2code/SU2/pull/239#issuecomment-183462794,1,['usab'],['usable']
Usability,"Thanks; The discrete adjoint can also be used with combined objectives, and uses the same config specifications. It may not be clear from this pull request since this functionality was added in a previously - when multiple objectives (limited to objectives defined inside the CFD solver) are specified, they are added together (with specified weights) in the CFD solver into the 'COMBO' output to history. This variable is registered for the discrete adjoint solver. ; An example of this can be seen in the serial_regression_AD.py, test name 'discadj_multi_py'.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/385#issuecomment-296409557:127,clear,clear,127,https://su2code.github.io,https://github.com/su2code/SU2/pull/385#issuecomment-296409557,1,['clear'],['clear']
Usability,"That looks a bit strange, you still get Release 6.2.0 but in the aforementioned PR @jayantmukho clearly updated the version to 7.0.2, I use the old build system in an old computer and it is currently working...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/910#issuecomment-598733874:96,clear,clearly,96,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-598733874,1,['clear'],['clearly']
Usability,"The Coupled RHT-CFD Adjoint did not compare the computed gradient file to the reference file. Instead, the test case passed without file comparison. ## Proposed Changes; Added a call to run_filediff to ensure the test is run.; Moved the Coupled RHT-CFD Adjoint test in serial_regression_AD.py down to the file difference test. ## Related Work; This fixes the related issue #1431 ; The reference gradient file in the test case repo needs a small modification. See su2code/TestCases/pull/84. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1437:662,guid,guide,662,https://su2code.github.io,https://github.com/su2code/SU2/pull/1437,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,The Github Actions checks passed after making two changes:. 1) https://github.com/su2code/SU2/pull/1619/commits/efe98fe6070a0cb51f1082a9599363786e4d65ea; I needed to lower the warnlevel due to problems in `externals/cgns/hdf5`.; Maybe the HDF5 files should be updated to a newer version ?! But it is not clear to me which version has been used in https://github.com/su2code/SU2/pull/1500. ; @MicK7 Do you have an idea how to fix this ?. 2) https://github.com/su2code/SU2/pull/1619/commits/26140223e5838a6856c0b3c02163a826256306b1; A workaround recommended at https://github.com/su2code/SU2/issues/1568#issuecomment-1083104460. 3) The regression tests [fail](https://github.com/su2code/SU2/runs/6387003184?check_suite_focus=true) because the new `test-su2` Docker image is `private`. I will need someone with higher privileges than me to make it public.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1619#issuecomment-1123614000:304,clear,clear,304,https://su2code.github.io,https://github.com/su2code/SU2/pull/1619#issuecomment-1123614000,1,['clear'],['clear']
Usability,"The MPI_Type_create_hindexed will indeed solve the integer overflow encountered in MPI_Type_indexed, as the former uses MPI_Aint (8 byte integers) for the the displacements and the latter regular 4 byte integers. However, as @GomerOfDoom mentioned, there may be issues for the discrete adjoint (I saw that Type_indexed is actually present in medi) if we simply replace MPI_Type_indexed by MPI_Type_create_hindexed. So @talbring, @MaxSagebaum and @economon, do you foresee any problems here? If not, then it is a very simple change of a couple of lines.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/949#issuecomment-622319245:354,simpl,simply,354,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-622319245,2,['simpl'],"['simple', 'simply']"
Usability,"The NACA 0012 Mesh (mesh_NACA0012_turb_897x257.su2) has 3 floating point numbers and then one integer number, but is listed as a 2-dimensional mesh. CPhysicalGeometry::Read_SU2_Format is fine with the mesh file. Worse, it seems to use the z coordinate as the local index under certain conditions (see line 3430). In serial, the node number is ignored, so we are okay, but this is clearly undesirable behavior.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/46:380,clear,clearly,380,https://su2code.github.io,https://github.com/su2code/SU2/issues/46,1,['clear'],['clearly']
Usability,"The NELEM of the deformed mesh is incorrect. I have to pause the optimization, correct the file and then resume to run the primal solution on the new design. My mesh file is pretty big. If it is needed I can find a way to upload it. - OS: CentOS 7; - SU2 Version: branch: [turbo_output_opt](https://github.com/su2code/SU2/tree/turbo_output_opt). the branch I am working on is branched out from [feature_turbomanchinery_output](https://github.com/su2code/SU2/tree/feature_turbomanchinery_output) by @arubino . I have replaced the turbomachinery objective function TOTAL_PRESSURE_LOSS with PRESSURE_LOSS in the new single-zone output format. It is not updated with the latest develop as I ran into some conflicts when merging. It is, however, updated with SU2 7.0.1. I cannot run this optimization with the latest SU2 version. Doesn't work with turbo markers right now. If this problem has been fixed is it possible for someone to point me to the commit so I can make those changes in this branch. Thanks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/972:55,pause,pause,55,https://su2code.github.io,https://github.com/su2code/SU2/issues/972,2,"['pause', 'resume']","['pause', 'resume']"
Usability,"The _amgio extension should be built by default. I haven't had any issues on any of the machines I've built on, so I appreciate the feedback. Just curious, are you running with python >=3.7? The shebang in all the SU2 python scripts; ```; #!/usr/bin/env python; ```; uses whatever python is set to in your environment variables, but pyamg/_amgio will only build/run with python >=3.7. Could you also check if the _amgio extension was installed in your site-packages (probably located in ~/.local/lib/python3.x/site-packages)?. If it didn't build/install, you could go into extensions/AMGIO/su2io and run; ```; python3 setup.py build_ext && python3 setup.py install; ```; If it did build/install, try the command; ```; python3 $SU2_RUN/mesh_adaptation_amg.py -f invCyl.cfg -n 6; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-619334494:132,feedback,feedback,132,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619334494,1,['feedback'],['feedback']
Usability,"The answer to that is very simple. Look in the data set that is present in the szplt file. The z-coordinate is not in there anymore and consequently Tecplot takes the next variable, the density in this case, as the z-coordinate. Consequently you git a picture like you showed. The same is true for the field solution. Also there the z-coordinate is not present in the szplt file and hence you get a rather funny picture when you attempt to visualize this in 3D. But 2D visualization works just fine. In contrast the z-coordinate is stored in the vtu files, because the standard requires that. Hence you can still visualize this in 3D. Could you try a truly 3D test case to see if that visualizes fine? If so, please let us know such that we can close this issue.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1182#issuecomment-771407798:27,simpl,simple,27,https://su2code.github.io,https://github.com/su2code/SU2/issues/1182#issuecomment-771407798,1,['simpl'],['simple']
Usability,"The dimensional inconsistency comes from the multiplicity of the normal velocity eigenvalue and the manipulation Hirsch does with the corresponding eigenvectors in order to obtain a formulation that is valid for any normal vector. When you use the P matrix to form the characteristic variables, the dimensional inconsistency disappears again, as it should. Never looked at it this way. Thanks for clearing this up Francisco.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/423#issuecomment-322124810:397,clear,clearing,397,https://su2code.github.io,https://github.com/su2code/SU2/issues/423#issuecomment-322124810,1,['clear'],['clearing']
Usability,"The documentation is now at:; https://github.com/su2code/SU2/wiki/Mesh-File. I would assume the actual behavior is still the same. Brendan, can you please check the documentation to see if you think it is clear now, and update it if not?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/47#issuecomment-104355161:205,clear,clear,205,https://su2code.github.io,https://github.com/su2code/SU2/issues/47#issuecomment-104355161,1,['clear'],['clear']
Usability,The dummy layer is what we used before version 7 and moved away from it for simplicity.; Two layers doesn't sound possible for unstructured meshes.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2038#issuecomment-1557818415:76,simpl,simplicity,76,https://su2code.github.io,https://github.com/su2code/SU2/pull/2038#issuecomment-1557818415,1,['simpl'],['simplicity']
Usability,"The filename of the Paraview multiblock is set to the case name / config filename:. https://github.com/su2code/SU2/blob/b1e7e7bb7229152f26e5035c0eae70804fee5ca2/SU2_CFD/src/output/COutput.cpp#L562. For all other volume outputs, the filename is specified with 'VOLUME_FILENAME' in the config file. See e.g. the Paraview XML filename:. https://github.com/su2code/SU2/blob/b1e7e7bb7229152f26e5035c0eae70804fee5ca2/SU2_CFD/src/output/COutput.cpp#L508. This is counter-intuitive and the user is not able to change the multiblock filename in the config file. Is there a reason behind this or can we align that by using the volume filename for multiblock as well?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1928:464,intuit,intuitive,464,https://su2code.github.io,https://github.com/su2code/SU2/issues/1928,1,['intuit'],['intuitive']
Usability,"The fix is not as simple, using the strategy from #1631 makes it worse.; Intersection with symmetry/euler look ok, so the best is to extend the domain...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1639#issuecomment-1132302976:18,simpl,simple,18,https://su2code.github.io,https://github.com/su2code/SU2/issues/1639#issuecomment-1132302976,1,['simpl'],['simple']
Usability,"The flow rate output for axisymmetric cases from SetAnalyzeSurface(...) is wrong due to the ""else"" on line 196 in CFlowOutput.cpp. When y[i] = 0 (the node lies on the axis) AxiFactor is just set to 1.0 instead of y[i] * 2 * pi (y-coordinate of the vertex of the primal grid) which may cause a significant error. For me I fixed it simply by setting "" else AxiFactor = 0.5 * y[i-1] * 2 * pi "" as the loop always ends on the axis. This works for my inlet and outlet (left to right) but this will fail if the loop starts at y=0 instead of ending there. Perhaps that could happen in a right to left domain. . There is certainly a safer more general way I imagine by accessing the y-coordinate of the vertex of the dual grid . AxiFactor = PI_NUMBER*geometry->node[geometry->vertex[iMarker][iVertex-1]->GetNode()]->GetCoord(1);",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/926:330,simpl,simply,330,https://su2code.github.io,https://github.com/su2code/SU2/issues/926,1,['simpl'],['simply']
Usability,The iteration number is now stored in the restart files so we should definitely have this feature. Because at the moment it is not clear when the iteration stops (because EXT_ITER is still counted from 0).,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/99#issuecomment-308412942:131,clear,clear,131,https://su2code.github.io,https://github.com/su2code/SU2/issues/99#issuecomment-308412942,1,['clear'],['clear']
Usability,"The motivation of having it as the default was to make the code as user-friendly as possible (fewer knobs exposed in the config), but options are good of course. I would propose then that we add an option for the reconstruction gradient, something like:; ```; NUM_METHOD_GRAD_RECON= LEAST_SQUARES; ```; to let users decide if they want a separate option for the reconstruction gradients. If it does not appear, then the default is to use the same method as defined by NUM_METHOD_GRAD without a second gradient computation (basically what we have now). The nice thing about that is we can even try out other combos such as WLS+GG for the two different gradients. I will throw an error if users try to use LSQ for the viscous/source gradients, to avoid accuracy issues. What do you think?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-533259202:67,user-friendly,user-friendly,67,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-533259202,1,['user-friendly'],['user-friendly']
Usability,"The objective of this pull request is to clarify the name of some parameters. I found that:; 1. LIMITER_COEFF was confusing because: A) it is a parameters linked only to the Venkat's limiter B) Venkat's original and Wang's version use the same parameter but with different value! (0.5 vs. 0.05); 2. I found AD_COEFF_FLOW very confusing too: A) You can think that AD stands for Automatic Differentiation B) AD is too convoluted... it is just JST!; 3. REF_ELEM_LENGTH is mainly linked to Venkat's limiter... and a constant value is recommended (0.1 or 5.0 depending on the units). In the method REF_ELEM_LENGTH is multiplied by LIMITER_COEFF... so why two parameters to define a single constant (EPS)?... too many options for the user... The current config file to define the limiters or the pressure sensor is as follow:. % ----------- SLOPE LIMITER AND DISSIPATION SENSOR DEFINITION -----------------%; %; % Coefficient for the Venkat's limiter (upwind scheme). A larger values decrease; % the extent of limiting, values approaching zero cause; % lower-order approximation to the solution (0.05 by default); VENKAT_LIMITER_COEFF= 0.05; %; % 1st, 2nd and 4th order artificial dissipation coefficients for; % the JST ( 0.15, 0.5, 0.02 by default ); JST_SENSOR_COEFF= ( 0.15, 0.5, 0.02 ); %; % Coefficient for the adjoint sharp edges limiter (3.0 by default).; ADJ_SHARP_LIMITER_COEFF= 3.0; %; % 1st, 2nd, and 4th order artificial dissipation coefficients for; % the adjoint JST method ( 0.15, 0.5, 0.02 by default ); ADJ_JST_SENSOR_COEFF= ( 0.15, 0.5, 0.02 ). This config file is much more clear for people that are not familiar with SU2. Best,; Jonathan",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/451:1588,clear,clear,1588,https://su2code.github.io,https://github.com/su2code/SU2/pull/451,1,['clear'],['clear']
Usability,"The original Spalart-Allmaras turbulence model encloses the ft2 term: https://www.researchgate.net/publication/236888804_A_One-Equation_Turbulence_Model_for_Aerodynamic_Flows or https://turbmodels.larc.nasa.gov/spalart.html#sa. After that, some modifications were introduced and the ft2 term was neglected. But accordingly, a different name is used, i.e., Spalart-Allmaras One-Equation Model without ft2 Term.; So, I would also vote for implementing the original model along with the SA-noft2 variant. Also, I would like to point out a fact about the current implementation of the Negative Spalart-Allmaras variant. From theory, https://www.iccfd.org/iccfd7/assets/pdf/papers/ICCFD7-1902_paper.pdf equation 12, the model introduces the modified vorticity S_tilde. However, in SU2 (SU2/SU2_CFD/src/numerics/turbulent/turb_sources.cpp and CSourcePieceWise_TurbSA_Neg::ComputeResidual) we do not consider this modification and simply consider the modified vorticity as in the standard Spalart-Allmaras:. Shat = S + TurbVar_i[0]*fv2*inv_k2_d2;. (Sbar is used as S_tilde). Is there any reason for that?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/992#issuecomment-648883933:924,simpl,simply,924,https://su2code.github.io,https://github.com/su2code/SU2/issues/992#issuecomment-648883933,1,['simpl'],['simply']
Usability,The primary solution in the linked issue is to use a virtualenv. I quote:. > The easiest workaround: Switch to a [virtualenv](https://packaging.python.org/guides/installing-using-pip-and-virtual-environments/). This will ensure that all of your python packages are stored in single location.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1575#issuecomment-1076307528:155,guid,guides,155,https://su2code.github.io,https://github.com/su2code/SU2/issues/1575#issuecomment-1076307528,1,['guid'],['guides']
Usability,"The solver with the closest functionality to what you are trying to do is the elasticity solver, it may be worth having a look there. But in a nutshell there the variables we want to differentiate are held by (members of) the discrete adjoint solver, they are reset before being registered as inputs to clear the derivative information, and it is important that they are left alone during the recording phase.; You will see that the adjoint iteration class for this solver then needs to update the numerics classes (in SetDependencies), at least for the source term the SA coefficients are set in the constructor of the corresponding numerics so maybe this step is missing?; The key point is that whenever a coefficient is used you need to be able to trace its value back to the original variable you registered.; Also the derivatives should be extracted in the same order they were registered, and you cannot access them multiple times by calling ""GetDerivative"" on them repeatedly (not 100% sure if this restriction still exists after the update of CoDi).; If none of this makes sense point me to branch you are working on.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/679#issuecomment-491910935:303,clear,clear,303,https://su2code.github.io,https://github.com/su2code/SU2/issues/679#issuecomment-491910935,1,['clear'],['clear']
Usability,"The source term is pretty simple but the feature as a whole is very intrusive on the code, even the mesh deformation is getting involved in this.; Would it be viable to use the python wrapper to provide the source term?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2273#issuecomment-2098573850:26,simpl,simple,26,https://su2code.github.io,https://github.com/su2code/SU2/pull/2273#issuecomment-2098573850,1,['simpl'],['simple']
Usability,The style guide is now posted at:; https://github.com/su2code/SU2/wiki/Style-Guide,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/89#issuecomment-102195159:10,guid,guide,10,https://su2code.github.io,https://github.com/su2code/SU2/issues/89#issuecomment-102195159,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"There are a couple of old PR's, some of them dating back to 2015. I have the feeling nobody does anything with these anymore and furthermore the corresponding branches are most likely running behind. Should we simply close these old PR's?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/593:210,simpl,simply,210,https://su2code.github.io,https://github.com/su2code/SU2/issues/593,1,['simpl'],['simply']
Usability,"There is no automatic way of doing that. If you want a simpler code to port to GPU, the best advice I can give you is to chose something else other than SU2. In the future please open ""discussions"" instead of issues, these are not SU2 code issues.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1407#issuecomment-947489209:55,simpl,simpler,55,https://su2code.github.io,https://github.com/su2code/SU2/issues/1407#issuecomment-947489209,1,['simpl'],['simpler']
Usability,"There was a lot of talk about refactoring the shape optimization framework to be able to work completely in memory.; I think the idea was not to have more drivers but simply to have more granularity such that you could manipulate the geometry from python (without writing it to files).; We also wanted introspection, i.e. you could probe SU2 via python for what variables and functions are available.; We also talked about having the projection step (DOT) included in CFD_AD so that you only need to worry about surface sensitivities, note that DEF is already part of CFD for forward mode AD.; (talking does not go very far). If you want to lead this work, we can help you understand the inner workings. We meet every Wednesday at 4pm CET https://meet.jit.si/SU2_DevMeeting to discuss this type of issue.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1262#issuecomment-818786416:167,simpl,simply,167,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262#issuecomment-818786416,1,['simpl'],['simply']
Usability,"These could be simple unit tests, or for some larger automated tasks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/228:15,simpl,simple,15,https://su2code.github.io,https://github.com/su2code/SU2/issues/228,1,['simpl'],['simple']
Usability,"These timings were all run this morning on the same cluster. . Using qperf, I'm seeing 80 microsecond latency. I'm also seeing the expected bandwidth using qperf as well. I would think that mpi would behave similarly but 100% sure. . I'm quite sure that the jobs are being launched correctly. I've checked that a bunch of times since that was my first instinct. I've both logged into all the machines and watched top and everything looked normal. And I've tried running SU2 v6 before and after v7, launching them the same way, and I keep getting the same numbers. I'm not sure how to check whether there is any reason non blocking comm would be ineffective. If you have any ideas I can certainly try something. I tried to download vampirtrace which seemingly can profile mpi, but it failed to compile against my version of mpi. When I get the chance I can try a different version of openmpi and see if I can get it running. The networking setup is pretty simple with all 4 machines plugged into the same switch and they share their own vlan as part of a bigger network. As I said, I ordered some faster networking equipment to see if it makes a difference (though I'm honestly not 100% sure that what I ordered will work with my comps but we'll see.)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894#issuecomment-593144776:955,simpl,simple,955,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593144776,1,['simpl'],['simple']
Usability,"This PR addresses the dual-time solver of NEMO. A small lack of initialization of the solutions was causing problems. ; There are also some small code clean-ups here and there. Our current regression uses regular time-stepping, not sure if its worth adding an additional case for this.; I have yet to fully test this to make sure it works properly. ## Related Work; #1391 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1533:546,guid,guide,546,https://su2code.github.io,https://github.com/su2code/SU2/pull/1533,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,This PR finally passed the tests! Can I get some review feedback @economon and/or @talbring? It would be great to have this merged ASAP so no one adds any new code incompatible with Python 3.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/424#issuecomment-343013631:56,feedback,feedback,56,https://su2code.github.io,https://github.com/su2code/SU2/pull/424#issuecomment-343013631,1,['feedback'],['feedback']
Usability,"This PR integrates new MKL features into SU2 to accelerate performance on Intel architectures. Changes 1) and 2) below are protected by a ""HAVE_MKL"" preprocessor flag. To observe performance improvement from change 2), the ""DIRECT_CALL_MKL_SEQ"" compiler flag must be enabled. These changes require MKL 2019 or newer, as the JIT GEMM feature is a brand new feature. 1) Integrate MKL JIT GEMM to accelerate MatrixMatrix and MatrixVector Products. ; 2) Use LAPACK DGETRF + DGETRS in place of Gaussian Elimination ILU when MKL is present. ; 3) Use memcpy in Gaussian Elimination ILU. Source/dest overlap is not a concern and this is faster. The changes improve Broadwell performance by up to 18% and Skylake performance by up to 28%. These improvements were measured on the Inviscid_ONERA_M6 tutorial. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/543:970,guid,guide,970,https://su2code.github.io,https://github.com/su2code/SU2/pull/543,1,['guid'],['guide']
Usability,"This PR introduces a quick fix for the output routine. It allows to print grid velocities also if the new mesh solver is used. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1412:350,simpl,simply,350,https://su2code.github.io,https://github.com/su2code/SU2/pull/1412,1,['simpl'],['simply']
Usability,"This PR simply aims to cleanup, fix dates, and remove any ""fluff"" from the test/regression cases in SU2. This will not affect the cases in the V&V folder. Its a purely maintenance pr, while I have some time to be productively unproductive. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1845:8,simpl,simply,8,https://su2code.github.io,https://github.com/su2code/SU2/pull/1845,2,"['Guid', 'simpl']","['Guide', 'simply']"
Usability,This adds the 'increment-progress' logic to the vertex export process. The sub-progress bar now shows the progress of the vertex export for a more accurate experience.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/33:79,progress bar,progress bar,79,https://su2code.github.io,https://github.com/su2code/SU2/pull/33,1,['progress bar'],['progress bar']
Usability,"This bug pops up because the periodic mesh reconstruction (in `SU2_MSH`) doesn't always create a valid mesh in 3D. Some points disappear, and some points are duplicated. When `SU2_CFD` (specifically, `CPhysicalGeometry`) tries to get the number of points in the domain, it calculates the wrong number because some of those points are duplicated. That leads to segfaults, because the output routine thinks the extra (missing) points belong to another processor. I've got a little toy problem with a simple periodic cube. It's easy to see on the simple 4x4x4 (+ periodic) problem that 3 nodes disappear, and 3 nodes are duplicated. I've never observed this problem in any of the 2D test cases I ran. As to why `SU2_MSH` is missing some points and duplicating others, I'm not sure. I tried running Valgrind to check for uninitialized variables or illegal memory access, but nothing there. I'll have to look more into the problem. The `su2_periodic.f90` script mentioned in #416 seems to be a workaround. I don't run into any problems when I use that script.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/431#issuecomment-337056131:498,simpl,simple,498,https://su2code.github.io,https://github.com/su2code/SU2/issues/431#issuecomment-337056131,2,['simpl'],['simple']
Usability,"This change should have removed all the tabs in SU2.; Hopefully code-factor agrees with me.; ; This is a general maintenance pr. . - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1135:337,simpl,simply,337,https://su2code.github.io,https://github.com/su2code/SU2/pull/1135,1,['simpl'],['simply']
Usability,"This could be a very interesting contribution! Please, feel free to work on this and create a push request to the developer release. SU2 is looking forward for contributions from the open-source community. Thanks!; Francisco. Sent from my iPhone. > On Mar 12, 2016, at 8:07 AM, Pete Bachant notifications@github.com wrote:; > ; > As @gbaty said, it's usually easy to support both. Many times it can be done with a simple; > ; > from **future** import division, print_function; > at the top of each file, and tweaking the print and import statements. In my experience, the Anaconda (or miniconda) Python distribution makes it very easy to setup just about any version of Python you like on a cluster, since it's installed in the user's home directory by default.; > ; > Most scientific packages (NumPy, SciPy, Matplotlib, Pandas) already support both 2.7 and 3.x within a single codebase. Python 3 is the future!; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/246#issuecomment-195781648:414,simpl,simple,414,https://su2code.github.io,https://github.com/su2code/SU2/issues/246#issuecomment-195781648,1,['simpl'],['simple']
Usability,"This fixes a bug on the single-zone direct driver, that has shown in one of my branches after I updated with develop. ## Proposed Changes; Just a minor bug fix. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/707:333,guid,guide,333,https://su2code.github.io,https://github.com/su2code/SU2/pull/707,1,['guid'],['guide']
Usability,"This fixes a small mistake I discovered in code that I added with https://github.com/su2code/SU2/pull/1195 (I just learned the hard way that it is better to use common/general forms of equations instead of trying to simplify/factorise them as much as possible). . In case anyone wants to verify, the sources used are in https://github.com/su2code/SU2/pull/1195, the terms are found by subtracting the cartesian formulation from the cylindrical one and here is the simplification/factorisation bit:. ![IMG_20211113_110505](https://user-images.githubusercontent.com/55834287/141643365-9be4da4b-279e-4b36-8145-14cd76b56f15.jpg). Sorry!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1438:115,learn,learned,115,https://su2code.github.io,https://github.com/su2code/SU2/pull/1438,3,"['learn', 'simpl']","['learned', 'simplification', 'simplify']"
Usability,"This has been a long long exposition (nerd joke) but bear with me I am almost done, and I will summarise the results in the form of a proposal (I'll probably put that at the top of the first post). ## ""Real"" numerics; Real in the sense that the flop to byte ratio (amount of computation per amount of data) is comparable to a real numerics scheme, say Roe for example.; The simplest way to do this is to combine the example code for MUSCL reconstruction with the matrix updates code and add something compute heavy between input and output, e.g. a number of matrix-matrix multiplications, here is some pseudo code for what I did:; ```c++; void computeResidual(size_t nVar,; size_t nDim,; const vector<Connectivity<SIMDLEN> >& connectivities,; const Matrix& coords,; const Matrix& phi,; const VectorOfMatrix& grad,; const Matrix& limiter,; RowMajorMatrix& residual,; SparseMatrix& matrix); {; using FltVec = Array<double,SIMDLEN>;. residual.setZero();; matrix.setDiagZero();. size_t color = 0;; for(const auto& connectivity : connectivities); {; #pragma omp parallel for schedule(dynamic,CHUNK_SIZE); for(size_t iEdge=0; iEdge<connectivity.size(); iEdge+=SIMDLEN); {; auto iPoint = connectivity.first_vec(iEdge);; auto jPoint = connectivity.second_vec(iEdge);. FltVec d_ij[MAXNDIM];; for(size_t iDim=0; iDim<nDim; ++iDim); d_ij[iDim] = (coords.getVec(jPoint,iDim)-coords.getVec(iPoint,iDim))*0.5;. FltVec phiL[MAXNVAR], phiR[MAXNVAR], flux[MAXNVAR],; blk_i[MAXNVAR*MAXNVAR],; blk_j[MAXNVAR*MAXNVAR];. for(size_t iVar=0; iVar<nVar; ++iVar); {; // Reconstruction goes here. flux[iVar] = (phiL[iVar]+phiR[iVar])*0.5;; }. // some silly way to make the Jacobians depend on the reconstruction; for(size_t iVar=0; iVar<nVar; ++iVar); for(size_t jVar=0; jVar<nVar; ++jVar); blk_j[iVar*nVar+jVar] = (phiL[iVar]*phiR[jVar]-phiL[jVar]*phiR[iVar])*0.5;. // the matrix-matrix multiplications; for(size_t i=0; i<WORKITERS; ++i) {; // blk_i = blk_j * blk_j; for(size_t k=0; k<nVar*nVar; ++k) blk_j[k] = blk_i[k];; }. ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-539177957:374,simpl,simplest,374,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-539177957,1,['simpl'],['simplest']
Usability,"This implements the k-omega SST source terms for 2D axisymmetric problems in a new member function of the existing source term class (it would never be used independently of it so I did not create a new class). The extra source terms are the difference between the equations in 2D cartesian and 3D cylindrical coordinates under an assumption of axisymmetry without swirl. They are almost the same as those for Wilcox's k-omega shown in this image (taken from http://eprints.gla.ac.uk/184394/1/184394.pdf). ; ![kwcyl](https://user-images.githubusercontent.com/55834287/107506869-056e0300-6b9f-11eb-834b-f82d6b502690.png); Only the constants have been swapped for the blended ones and the changed definition of the eddy viscosity is taken into account (see [menter1994.pdf](https://github.com/su2code/SU2/files/5957873/menter1994.pdf)). Cross diffusion is the same as in 2D when assuming there is no azimuth gradient. Note that these source terms have the opposite sign (RHS) of the flow equations source terms (LHS) since the block is subtracted and not added. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. Looking into creating an axisymmetric RANS test/regression case",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1195:1266,simpl,simply,1266,https://su2code.github.io,https://github.com/su2code/SU2/pull/1195,1,['simpl'],['simply']
Usability,"This is a SU2 user using Windows 10 system. When simulating the Tutorial Case, as long as SU2_CFD is used, it can be successfully simulated, but the parallel_computation.py required by my project cannot be used. Also, all simulations with "".py"" files suffer from the same problem, i.e. ""options.filename == None"". I wonder if this situation is a problem with the Python Wrapper? The tutorial does not mention its compilation method in Windows system. I would like to report how to use the parallel_computation.py in Windows system?. My SU2 version is v7.3.0. I will be very appreciated if I could get some feedback on this issue.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1567:606,feedback,feedback,606,https://su2code.github.io,https://github.com/su2code/SU2/issues/1567,1,['feedback'],['feedback']
Usability,"This is a feature request based on [some previous discussion](https://github.com/su2code/SU2/commit/61e810d4459ba56879d90b997c25723819f8352b#comments) on the `feature_inletprofile` branch. I've got a working prototype on [a branch](https://github.com/pecos-hybrid/SU2/tree/feature_inletprofile_file) off of my group's fork. Here's a few key points:. + _Data structures to store the inlet conditions already existed_. On the develop branch, there's arrays in `CEulerSolver` such as `Inlet_Ttotal`.; + Previously, the `CEulerSolver::BC_Inlet` was doing a set of string compares every single iteration to find the inlet values. Pulling values from arrays should be faster.; + I am _not_ taking the same approach as in the `feature_inletprofile` branch. The existing inlet profile branch adds another inlet type to the existing two. Instead, I added a separate option. That way, you can both specify an inlet type (e.g. `TOTAL_CONDITIONS` or `MASS_FLUX`) and decide if you want the inlet to be uniform or specified by a file. The branch is a little rough for the following reasons:. + The user must manually specify the inlet conditions at each inlet node by listing the node number.; + Interpolation of nodes is not supported (yet).; + Multigrid is not supported. I tried to find a simple way to do this, but it's a more difficult problem than I thought. I could submit a pull request now, if the lead developers want me to. But I'd like to take some more time to run further tests.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/467:1279,simpl,simple,1279,https://su2code.github.io,https://github.com/su2code/SU2/issues/467,1,['simpl'],['simple']
Usability,"This is a pull request to merge in progress made in the NEMO solver. The goal here is keep the pull requests to reasonable sizes. As such, there may be multiple PRs to prevent this from being a monumental task. This pull request addresses some of the following:; -adoption of code structure in develop; - CommonPreproccessing, SU2 screen output, etc.; -Incorporation of Smoluchowski-Maxwell BC; -general formatting; -correcting headers and briefs; -Updated test cases. - [ x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ x] My contribution is commented and consistent with SU2 style.; - [ x] I have added a test case that demonstrates my contribution, if necessary.; - [ x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1111:676,simpl,simply,676,https://su2code.github.io,https://github.com/su2code/SU2/pull/1111,1,['simpl'],['simply']
Usability,"This is a small issue I noticed when I worked on some features for the discrete adjoint driver.; In CDiscAdjFluidIteration::RegisterInput the inputs for the AD tape are registered.; At the moment if kind_recording == RECORDING::SOLUTION_AND_MESH is set it only registers the flow variables and has no difference to RECORDING::SOLUTION_VARIABLES. If I understand the logic for this enum option correctly, it should register the flow variables and the mesh coordinates from geometry. I.e. if you want to add unctions to the driver, which can evaluate derivatives w.r.t. flow and geometry in one tape evaluation, you should use this option. In addition, I change an out-of-date comment. ## Proposed Changes; Register the geometry variables as inputs in the discrete adjoint flow iteration if 'kind_recording == RECORDING::SOLUTION_AND_MESH'. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1492:1011,guid,guide,1011,https://su2code.github.io,https://github.com/su2code/SU2/pull/1492,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"This is obviously very good work and should make it much simpler to add new outputs etc. My main concern when first reviewing was performance (something no one seems to care about) but from the limited testing I did while merging this and CVariable there seems to be no big impact, I did not time anything though, if you have numbers to share please do.; Nevertheless if you can get away with using unordered_map instead of map it would be better. Possibly part of the reason everyone puts of reviewing this is that it is a major refactoring and yet there are no accompanying notes about the architecture the implementation choices etc. I absolutely guarantee you that is not how professional software is developed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/724#issuecomment-534651933:57,simpl,simpler,57,https://su2code.github.io,https://github.com/su2code/SU2/pull/724#issuecomment-534651933,1,['simpl'],['simpler']
Usability,"This is simply the way how the cmd.exe shell works on Windows - file and folder names containing spaces or special characters must be quoted into `""` to be handled correctly.; The title says it all - *to make them [executables] run*. The patch prepends one `""` and appends one `""` to the command name. This could be refactored further to reduce repetition much more by putting the different executable file names into a map and have a single place to combine quote + executable + quote.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/332#issuecomment-321264218:8,simpl,simply,8,https://su2code.github.io,https://github.com/su2code/SU2/pull/332#issuecomment-321264218,1,['simpl'],['simply']
Usability,"This is very interesting, since I often find that I am commenting out most of the python regression script when debugging only a couple of tests locally. Can you estimate how much work this would be? Is it just a simple wrapping of what we already have? We would also have to make sure that Travis CI can handle it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/462#issuecomment-342593274:213,simpl,simple,213,https://su2code.github.io,https://github.com/su2code/SU2/issues/462#issuecomment-342593274,1,['simpl'],['simple']
Usability,This issue has been paused until after v7.0.0,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-548021997:20,pause,paused,20,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-548021997,1,['pause'],['paused']
Usability,"This one is all set after a little more cleanup. I left some low-level changes to the EoS models for later. @CatarinaGarbacz @MarcoFossati : we can use a simple directory name, as you suggest. Let's just go with fluid/ since we also treat liquids with the incompressible solver. Bonus: adds a rotating frame calculation test and some extra error checks on CFL adapt params that should help avoid unreported problems with old configs.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1010#issuecomment-640170715:154,simpl,simple,154,https://su2code.github.io,https://github.com/su2code/SU2/pull/1010#issuecomment-640170715,1,['simpl'],['simple']
Usability,"This pull request includes:; - updates and refinement of multiple objective gradient evaluation and optimization; - per-surface evaluation of forces and moments can now be included in an optimization or gradient evaluation: this is only used when more than one objective is specified. ; - the multiobjective test case has been added back into the regressions; - FIN_DIFF_STEP can now be specified in the config file (the option was already added in the develop branch; a small modification was needed to the python code in order to use it). If this option is not specified the previous behavior is used. ; - a few minor corrections are also included; - penalty functions can now be used as a portion of the objective. The penalty function is defined as the square of the difference between the function and its constraint - this is hard-coded, but can be modified by simply changing obj_p and obj_dp in the python scripts. . A tutorial around multiobjective optimization may be added later based on the inv_wedge_ROE_multiobj.cfg case.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/385:867,simpl,simply,867,https://su2code.github.io,https://github.com/su2code/SU2/pull/385,1,['simpl'],['simply']
Usability,"This pull request introduces new test cases for the Python wrapper. The first set of tests includes:; - Classical CFD test cases: euler naca0012, rans naca0012, unsteady square cylinder, aeroelastic; - A native FSI test case involving the FSIDriver of SU2: wall channel 2D. These tests are launched using the script pyWrap_SU2_CFD.py being the Py wrapped version of the executable SU2_CFD. . The second set of tests includes:; - A new FSI test case involving the coupling between SU2 and an external structural solver (see TestCases/coupled_fsi/2d_aeroelasticity). . The structural solver is the PitchPlungeAirfoilStructuralTester (see SU2_PY/FSI directory). It was directly written in Python and designed only for this particular test where we measure the aeroelastic response of a pitch-plunge NACA 0012 airfoil under the flutter point. The structural solver tester also illustrates the architecture that is expected for the solid side of the coupling (how the solver is driven, how does the communication layer look like). This test is launched using the script fsi_computation.py (**note** : a parallel run requires mpi4py to be installed on the system). . The serial_ and parallel_regression.py files were simply modified in order to add those sets of test cases. The first set uses a direct comparaison based on residuals, lift, drag,... whereas the second set uses a comparaison based on output files coming from the structural solver. In order to build the Py wrapper and run the tests on travis, the preconfigure.py script was adapted so that the option --enable-PY_WRAPPER can be used. Because Swig and mpi4py are required for the build and for the parallel run respectively, they were also introduced in the travis configuration file where mpi4py can be simply installed using the python-pip package.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/298:1211,simpl,simply,1211,https://su2code.github.io,https://github.com/su2code/SU2/pull/298,2,['simpl'],['simply']
Usability,"This pull request is another in a series of pull requests to merge developments of the NEMO branch into develop without a massive PR. . This pull requests addresses:; -Fixes non-operable schemes (ROE, MSW, LAX); -AUSMPWPLUS remains functional but extremely unstable => flag to make unusable.; -Removes config->GetGamma() in with an appropriate function; -Renames 'Get' functions to 'Compute' where applicable. Somethings that are in the works/on the radar:; -Migrate toward Geometry:ToolBox functions (Remove GetBasis function); -Centralize the INDEX information; . ## Related Work; This is related to feature_NEMO and previous pull requests (#1111) . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1117:824,guid,guide,824,https://su2code.github.io,https://github.com/su2code/SU2/pull/1117,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"This pull request is the first phase of an overhaul of the COutput class. As a first step, the serial bottleneck for merging and writing output data in SU2_CFD has been removed in favor of entirely parallel routines for sorting and writing output data. The routines work by sorting the output data into linear partitions on all ranks such that each processor owns an equal chunk of the output. This PR introduces these new routines along with parallel restart (ASCII) and Tecplot (ASCII) file writers. For now, there is no major change to the behavior of the code, other than potential savings in memory and time for file output with SU2_CFD, as this phase was simply a refactoring and rewrite that maintains identical output to the serial version. . Important notes:; * While restarts are now written in parallel, they should contain the exact same information as before. Please make sure your solvers are behaving as expected.; * This refactoring finally allows for users to easily register new variables (including custom variables names) for the output files by separating the loading of local data for the different solvers from the MPI communications and the eventual writing of files. Please see the LoadLocalData_* routines in output_structure.cpp that are now defined for different solvers, which will eventually become virtual functions within child classes of COutput for different physics. ; * SU2_SOL remains intact for now and works the same as before. Parallel file writers for other formats (ParaView, CGNS) are forthcoming, and will eventually replace the remaining serial versions.; * The next step after this PR is to switch the restarts to binary with MPI-IO and to update the restart loaders in all solvers.; * This PR also fixes some memory leaks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/328:661,simpl,simply,661,https://su2code.github.io,https://github.com/su2code/SU2/pull/328,1,['simpl'],['simply']
Usability,"Thomas,. That took some doing. I just learned more about git! I'll issue a new pull request shortly. Thanks for your interest. Ethan Alan",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/33#issuecomment-56592304:38,learn,learned,38,https://su2code.github.io,https://github.com/su2code/SU2/pull/33#issuecomment-56592304,1,['learn'],['learned']
Usability,"Those changes in option_structure.hpp were actually done to the main branch by somebody else. I forked from main, and merged develop. I can of course undo them, if you want (or rebase my commit on develop instead of merging).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/579#issuecomment-425754699:150,undo,undo,150,https://su2code.github.io,https://github.com/su2code/SU2/pull/579#issuecomment-425754699,1,['undo'],['undo']
Usability,"Those two cases are not part of the regression suite, and so they were probably not updated as some of the options were renamed.; You can have a look at the other turbomachinery examples (at least two of them are part of the regressions) it should be simple to adapt those options.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1086#issuecomment-706417999:251,simpl,simple,251,https://su2code.github.io,https://github.com/su2code/SU2/issues/1086#issuecomment-706417999,1,['simpl'],['simple']
Usability,"To be clear: I like the solver/, variable/, output/, etc. layout a lot, and I am simply suggesting that we move entirely to that layout (with cpp and hpp merged together in each of those folders) and merging the code in Common, SU2_CFD, and other modules into that structure too (in their own folders still, like geometry/ for example). To keep it organized you can simply make each of those directories a library in meson which all later get linked into the various binaries. The mains could live in the top level src/ directory if we keep it or a separate directory (open for me). Something like. ```; SU2/; src/; solver/; meson.build; solver_\*.cpp; solver_\*.hpp; variable/; meson.build; variable_\*.cpp; variable_\*.hpp; ...; ```. with or without the src/ directory in the root (could go either way). Might want to keep it or even name it cpp/ to differentiate from the python framework(s).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/583#issuecomment-630918578:6,clear,clear,6,https://su2code.github.io,https://github.com/su2code/SU2/issues/583#issuecomment-630918578,3,"['clear', 'simpl']","['clear', 'simply']"
Usability,"Todo list:; - [x] Make sure the code can handle arbitrary many species equtions. Especially the output has to be adapted. Note the MAXNVAR of the ScalarSolver has to adapted to that need as well. Make a suitable Testcase for that.; - [x] Implement weak inlet and outlet BC. The weak approach is used in the turb and mean flow and is most likely conservative opposed to the strong one. Here a simple switch will be put in place to compare both versions.; - [x] Consolidate nVar, nSpecies, ... variable to only use 1 consistently (The choice was `nSpecies` which was already introduced for NEMO and it just makes sense to use the same container); - [x] Make the numerous reviewers happy; - [x] Check inlet profiles for Species solver (have a testcase for that) See #1427 ; - [x] Create Objective functions of Surface avg quantities (Area and Massflow? prob. And a variance-style output to capture mixing); - [x] Avoid redundant operations (pre/post processings) during solver restarts. 156d0c5. What will be done in follow-up PR's:; - Viscous contributions for BC_inlet and outlet which are currently not used (also then for Turb-solver) https://github.com/su2code/SU2/pull/1388#discussion_r752384956; - Axissymmetric source term addtion and testing; - multi-component mixing from #1332 ; - gradient validation between DA and FD",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1388#issuecomment-935901996:392,simpl,simple,392,https://su2code.github.io,https://github.com/su2code/SU2/pull/1388#issuecomment-935901996,1,['simpl'],['simple']
Usability,"Tom, I would love to address both of these. Give me some time. I feel even in the current form, it is good. Do you have plans to merge this into master, so that people can use this to setup dev environment quickly. They can also create a basic config file quickly. . I will consider both of your ideas to make user experience better. Thanks for your support. ; Krishna",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/172#issuecomment-126133647:310,user experience,user experience,310,https://su2code.github.io,https://github.com/su2code/SU2/pull/172#issuecomment-126133647,1,['user experience'],['user experience']
Usability,"True. I was thinking more from the user point-of-view, to be sure people little little experience can use SU2 easier. Similar to something Tim has already started in the Docs page. The idea here is just to be sure new features are easily usable/accessible for people unfamiliar.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/799#issuecomment-541832531:238,usab,usable,238,https://su2code.github.io,https://github.com/su2code/SU2/pull/799#issuecomment-541832531,1,['usab'],['usable']
Usability,"Try v7.0.2. On Mon, 9 Mar 2020, 02:05 timjim333, <notifications@github.com> wrote:. > Hi,; >; > I've got an issue where on starting an SU2 6.2.0 Falcon case, the; > preprocessing steps run but then the output gets stuck at:; >; > ---------------------- Python Interface Preprocessing; > --------------------- Setting customized boundary conditions for zone 0; >; > - and remains frozen there until I kill the job.; >; > It seems to have happened for only 3 out of nearly 400 successful cases.; > They are all similar, running Euler at Mach 1.7, on 40 cores. They all have; > similar simple body, farfield, and and symmetry conditions.; >; > I'm not sure of the best way to diagnose this, so any guidance would be; > appreciated.; >; > Many thanks and kind regards,; > Tim; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/907?email_source=notifications&email_token=AJCOXN63UWSSF6UABZZXXFLRGQ6EJA5CNFSM4LD6ZHGKYY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4ITNPDMQ>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AJCOXN6R6JOEQCAYH7FKCLTRGQ6EJANCNFSM4LD6ZHGA>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/907#issuecomment-596654031:583,simpl,simple,583,https://su2code.github.io,https://github.com/su2code/SU2/issues/907#issuecomment-596654031,2,"['guid', 'simpl']","['guidance', 'simple']"
Usability,"Unfortunately, I have not been able to recreate this issue on my systems with the simple test case that you shared @yukaiweng. . @talbring or @EduardoMolina, if you have some time, could you give the attached toy problem a try on your machines? I ran for a couple of unsteady iterations and then restarted on the third iteration (successfully for me). I think we're just missing something simple... [ascii_restart_test.zip](https://github.com/su2code/SU2/files/1659029/ascii_restart_test.zip)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/477#issuecomment-360050851:82,simpl,simple,82,https://su2code.github.io,https://github.com/su2code/SU2/issues/477#issuecomment-360050851,2,['simpl'],['simple']
Usability,"Unfortunately, I wasn't able to get all of them. I fixed a majority of the calls but couldn't find workarounds all of them. There are 8 left in the following files: . `SU2_PY/change_version_number.py`: There's 2 in here. One is a complicated command with `grep` and pipes and the other is a simple `rm -rf`, but it isn't a security risk since there is no user input into that string. `SU2_PY/SU2/util/pyCppTap.py`: This is in the diff_routine and uses `tapenade`. I have no idea what this does so I didn't touch this one. `SU2/opt/server.py`: There are 4 `scp` calls that I didn't know how to replace. `SU2_PY/compute_polar.py`: There's one left in here which is a complicated `cat` call that I couldn't figure a workaround for. . If you have any suggestions for any of these, I can try and implement them. . Otherwise, once these tests pass, its good to merge.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/781#issuecomment-533590086:291,simpl,simple,291,https://su2code.github.io,https://github.com/su2code/SU2/pull/781#issuecomment-533590086,1,['simpl'],['simple']
Usability,"Unfortunately, I'm still a bit unsure of the math behind the averaging. I assumed, that the average of a new iteration calculates as follows:. avg(it) = (cumulativeWeight(it-1, it+1) * avg(it-1) + Weight(it, it+1)*Value(it)) / (cumulativeWeight(it-1,it+1)+Weight(it,it+1)). Translated into words:; At iteration `it` we define a window of width `it+1`.; The previous average is weighted with the integral of the window from 0 to it-1. The new value arriving at iteration it is weighted with the actual window weight. The weighted sum is then divided by the sum of the weights. For a rectangular window this seems to converge towards the right value, but for the hanning window it does not.; Probably the math behind it is simply wrong. Any idea what the proper weighting should look like?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1545#issuecomment-1039999787:721,simpl,simply,721,https://su2code.github.io,https://github.com/su2code/SU2/issues/1545#issuecomment-1039999787,1,['simpl'],['simply']
Usability,"Unfortunately, my example involves a swirler and nozzle for the; Navier-Stokes solver with Menter model, so the dataset is relatively large.; Let me check whether some older small Euler mesh exhibits the same message!; I will let you know! Thank you very much. On Mon, Oct 23, 2023 at 6:34 PM Pedro Gomes ***@***.***>; wrote:. > Is there a simple example to reproduce the issue?; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/2109#issuecomment-1776057496>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AHGXZUV3DNRF3O55YAWT563YA3PETAVCNFSM6AAAAAA3QKLVDWVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTONZWGA2TONBZGY>; > .; > You are receiving this because you commented.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2109#issuecomment-1776143584:340,simpl,simple,340,https://su2code.github.io,https://github.com/su2code/SU2/pull/2109#issuecomment-1776143584,1,['simpl'],['simple']
Usability,"Update the email on the code of conduct to the su2 Foundation site. ## Proposed Changes; Just a minor change to point to the Foundation info email in the code of conduct. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/695:491,guid,guide,491,https://su2code.github.io,https://github.com/su2code/SU2/pull/695,1,['guid'],['guide']
Usability,"Update: This should be fixed in #2011, apologies this took so long to get round it in what is a very simple fix.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/857#issuecomment-1701148094:101,simpl,simple,101,https://su2code.github.io,https://github.com/su2code/SU2/issues/857#issuecomment-1701148094,1,['simpl'],['simple']
Usability,"Updating my Fork. ## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1018:432,guid,guide,432,https://su2code.github.io,https://github.com/su2code/SU2/pull/1018,1,['guid'],['guide']
Usability,"Variable name change (Adjoint -> ContinuousAdjoint). There is now a clear distinction between DiscreteAdjoint variable and ContinuousAdjoint variable (booleans). I have also fixed some bugs in the I/O (tecplot and fieldview) due to the previous problem: we were using only the Adjoint boolean and the Discrete adjoint output was incorrect. An interesting bug in geometry.py has been also fixed. We must keep an eye on shape design using geometrical constraints. Because of this problem, it is not working in the master repository and current release.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/244:68,clear,clear,68,https://su2code.github.io,https://github.com/su2code/SU2/pull/244,1,['clear'],['clear']
Usability,"Was playing around with the turbomachinery cases with the new multi-zone config. I like the new changes, makes it much clearer!. Just a remark, don't know if this is on purpose, but for the configuration parameter TURBOMACHINERY_KIND, you still need to supply them in the general configuration file for both zones (so in case of a two zone problem: TURBOMACHINERY_KIND = CENTRIFUGAL CENTRIFUGAL). Wouldnt it make more sense to have this per zone specified in the respective configuration file?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/715#issuecomment-514208185:119,clear,clearer,119,https://su2code.github.io,https://github.com/su2code/SU2/pull/715#issuecomment-514208185,1,['clear'],['clearer']
Usability,"We already require C++11 for some more advanced features, but it is always nice in my opinion to keep backward compatibility when possible. . However, this is not a deal breaker, I don't think, as most developers that want to use and add their own unit tests should have no problem with using C++11. If we can make it an optional dependency, to make sure the basic build still works simply, I think it could be ok.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-503685445:383,simpl,simply,383,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-503685445,1,['simpl'],['simply']
Usability,"We are wondering what the status with the merge request is. Am I supposed to do something more? is it just waiting for an additional review? . Additionally, we have many more proposed modifications, we have worked on, adding robustness to the existing turbulence models. It is expected, many of these changes will effect the test cases behaviour, are there any guidelines how to compile the code to run the full set of tests locally, or should I just open pull requests, and base upon the github test results? ; ; I am sorry if I may be asking the obvious, but I am new to contributing to open code..",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2295#issuecomment-2219624152:361,guid,guidelines,361,https://su2code.github.io,https://github.com/su2code/SU2/pull/2295#issuecomment-2219624152,1,['guid'],['guidelines']
Usability,"We have a bit of documentation about this on the wiki here: https://github.com/su2code/SU2/wiki/Post-processing. Does this clear things up? Please let us know if this isn't adequate, and we can add more detail.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/268#issuecomment-213232801:123,clear,clear,123,https://su2code.github.io,https://github.com/su2code/SU2/issues/268#issuecomment-213232801,1,['clear'],['clear']
Usability,"We have quite a few common booleans we use in many places of the code.; Some of them are very simple, like checking for compressible vs incompressible, or for FSI.; But when we want to express something more complicated like is it SA or SST, is the mesh moving or deforming, is this FEM or FVM or FEA, and so on, things are not so simple anymore and we end up with long conditionals repeated in many places. Since that logic is all built up from data in config I propose that we create a custom type akin to a bit-field that we can get from config and query whatever flag we want.; We move all the logic of setting up / updating this object to the config so that for example this:; ```; unsigned short Kind_Solver = config->GetKind_Solver();; bool flow = ((Kind_Solver == DISC_ADJ_EULER) ||; (Kind_Solver == DISC_ADJ_RANS) ||; (Kind_Solver == DISC_ADJ_NAVIER_STOKES) ||; (Kind_Solver == ADJ_EULER) ||; (Kind_Solver == ADJ_NAVIER_STOKES) ||; (Kind_Solver == ADJ_RANS));; ```; Can become `bool flow = config->GetFlags().flow();`, or similar. If we move this kind of logic to a separate object we can possibly make the config lighter, not so many methods etc.; This flags class can be absolutely tiny if the bits are packed (8 times tinier than storing bools).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/770:94,simpl,simple,94,https://su2code.github.io,https://github.com/su2code/SU2/issues/770,2,['simpl'],['simple']
Usability,"We will merge this PR next in order to have enough time for testing and for you to solve conflicts (if you need any help to solve those, please contact me). Even if this PR is merged, please continue to give feedback on the usability. We will still continue to work on that. Refer to the user documentation in order to learn how to adapt your config files. Let me know if you have any questions.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/724#issuecomment-534522241:208,feedback,feedback,208,https://su2code.github.io,https://github.com/su2code/SU2/pull/724#issuecomment-534522241,3,"['feedback', 'learn', 'usab']","['feedback', 'learn', 'usability']"
Usability,"What advantages does meson provide over Cmake? I have experience with CMake, but not with meson. @talbring I'm not sure what you mean by ""the syntax is also not very comfortable and it has too many features which we actually don't need."". I recently did a survey of the some of the most popular open-source C++ libraries, both inside and outside and outside of scientific computing. The most popular build system was CMake (60% of the 15 open source libraries). If ""everyone else"" is using CMake, then why should we use meson? I'm not trying to be adversarial. I'm curious about why meson is better. Is the syntax simpler? Is meson more flexible? Is it more robust during changes? Is it faster?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/685#issuecomment-498827230:614,simpl,simpler,614,https://su2code.github.io,https://github.com/su2code/SU2/issues/685#issuecomment-498827230,1,['simpl'],['simpler']
Usability,"When I enter the ""shape_optimization.py -f unsteady_naca0012_opt.cfg"" in the commend the error is:; ```; Traceback (most recent call last):; File ""C:\Users\74351\Desktop\SU2\SU2\bin\test2\shape_optimization.py"", line 116, in <module>; main(); File ""C:\Users\74351\Desktop\SU2\SU2\bin\test2\shape_optimization.py"", line 34, in main; shape_optimization( options.filename ,; File ""C:\Users\74351\Desktop\SU2\SU2\bin\test2\shape_optimization.py"", line 51, in shape_optimization; config = SU2.io.Config(filename); File ""C:\Users\74351\Desktop\SU2\SU2\bin\SU2\io\config.py"", line 88, in __init__; super(Config,self).__init__(*args,**kwarg); File ""C:\Users\74351\Desktop\SU2\SU2\bin\SU2\util\ordered_bunch.py"", line 83, in __init__; super(OrderedBunch,self).__init__(*args,**kwarg); File ""C:\Users\74351\Desktop\SU2\SU2\bin\SU2\util\ordered_dict.py"", line 48, in __init__; self.__update(*args, **kwds); File ""C:\Users\74351\Desktop\SU2\SU2\bin\SU2\util\ordered_dict.py"", line 174, in update; for key, value in other:; TypeError: 'NoneType' object is not iterable; ```; When I enter the ""parallel_computation.py -f turb_naca0012.cfg -n NP in the commend the error is:; ```; Traceback (most recent call last):; File ""C:\Users\74351\Desktop\SU2\SU2\bin\parallel_computation.py"", line 110, in <module>; main(); File ""C:\Users\74351\Desktop\SU2\SU2\bin\parallel_computation.py"", line 53, in main; raise Exception(""No config file provided. Use -f flag""); Exception: No config file provided. Use -f flag; ```; Any solvers related to "".py"" cannot be executed, but I can run any cases with SU2_CFD. So I wonder if this situation is a problem with the Python Wrapper? . I will be very appreciated if I could get some feedback on this issue.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1567#issuecomment-1074910200:1700,feedback,feedback,1700,https://su2code.github.io,https://github.com/su2code/SU2/issues/1567#issuecomment-1074910200,1,['feedback'],['feedback']
Usability,"When I run a mixing-layer problem with periodic boundary conditions, I get a segfault while saving the file. I checked out the most recent develop branch, and I get the same problem. It may be that I messed up the periodic boundary conditions. I'm still learning how to use them in SU2, and I may have made a mistake. But even if my *.cfg files are set up wrong, I should get a runtime error message, not a segfault. I did a brief check and it looks like `SU2_MSH` is doing its job in generating the correct periodic BCs. Valgrind says that there's a lot of invalid reads in `COutput::SortOutputData`, which terminate in a segfault. I'm attaching the valgrind output, in case you want to look at it. #### Steps to reproduce; 1. Build SU2 with parallel support.; 1. Put the attached grid, `mixing_MSH.cfg` and `mixing_CFD.cfg` files into the same folder.; 2. Run `SU2_MSH mixing_MSH.cfg`.; 3. Run `SU2_MSH mixing_CFD.cfg`. I've also attached my config output, so you can see what my setup is like. Here's the files: ; [PeriodicSegfault.tar.gz](https://github.com/su2code/SU2/files/1257883/PeriodicSegfault.tar.gz)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/431:254,learn,learning,254,https://su2code.github.io,https://github.com/su2code/SU2/issues/431,1,['learn'],['learning']
Usability,"While running test cases, I noticed the slope limiter is not defaulted to none. This caused me a bit of headache trying to figure out why a simulation wasnt behaving as expected. I can imagine the defaulted can cause problems for many users, particullarly with new users. I think in the remake of the config_template in #772 , the defaults should be made more clear.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/775:360,clear,clear,360,https://su2code.github.io,https://github.com/su2code/SU2/issues/775,1,['clear'],['clear']
Usability,"While trying to get a stable converging solution for a 3D turbine with tip clearance, i stumbled upon the following line in the CTurbSolver (line 413). ```; su2double Delta = Vol / ((nodes->GetLocalCFL(iPoint)/flowNodes->GetLocalCFL(iPoint))*flowNodes->GetDelta_Time(iPoint));; ```. It's unclear to me why the two CFL numbers are divided by each other. In case of running with a constant CFL this ratio will always be one. So the Delta value for the turbulence solver will become independent of the CFL number. Is this correct?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/918:75,clear,clearance,75,https://su2code.github.io,https://github.com/su2code/SU2/issues/918,1,['clear'],['clearance']
Usability,"While working on #718 it was brought to my attention by @economon that CTurbSolver makes its own interpolation / reconstruction of bulk flow variables when computing the convective fluxes. This is mentioned in #403 and #422 but my concern is different. This reconstruction is not consistent with the one used by the flow solver (except in some very special circumstances) which means the convective fluxes considered for the turbulence variables do not respect the discretized continuity equation. Now, have I missed something and this is being compensated by some source term?; If I have not missed anything, I think the solution is relatively straight forward, one simply stores the convective fluxes computed in CEulerSolver::Centered/Upwind_Residual to later use in CTurbSolver. I would be happy to implement this but do let me know if I got something wrong folks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/721:667,simpl,simply,667,https://su2code.github.io,https://github.com/su2code/SU2/issues/721,1,['simpl'],['simply']
Usability,Why not simply use clang-format and have a script to pass files/directories to have formatted? It provides more formatting options than just stripping trailing whitespaces and replacing tabs and does it in a consistent way.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/808#issuecomment-551451738:8,simpl,simply,8,https://su2code.github.io,https://github.com/su2code/SU2/pull/808#issuecomment-551451738,1,['simpl'],['simply']
Usability,"Writing a simple unit test is difficult, since SU2 both doesn't have unit tests and wasn't written with unit testing in mind. That being said, I've got a unit test that I'm happy with. Our group has put our own unit-testing framework into our fork of SU2, based off of Boost and automake testing. The unit test I created runs off of that framework. That means it won't run out-of-the-box on the develop branch of SU2. When I run the unit test with no changes to `CNumerics::GetViscousProjJacs`, I get that the residuals and Jacobians match to within 10 times the machine epsilon, aside from the [4][0] value of the Jacobians. There, the relative difference is of the order 1E-6. When I switch the two lines in `CNumerics::GetViscousProjJacs` for ideal gases to be negative, the tests run with no complaints. Ideal gas and generalized variants match to within 10 times machine epsilon. I'm uploading my test file just as an example, in case anyone wants to see what I've tested.; [viscous_ideal_vs_general.zip](https://github.com/su2code/SU2/files/2590517/viscous_ideal_vs_general.zip). As for comparison to some results from another code, I think that's a lot to ask. Getting a good comparison would depend on an understanding of how the ideal gas model, viscosity, numerics, and Jacobians are handled in the external code. Small differences would make the comparison completely invalid. I completely support testing and checking the changes I'm proposing. But comparison with an external code seems to provide a very low return on investment.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/609#issuecomment-439491945:10,simpl,simple,10,https://su2code.github.io,https://github.com/su2code/SU2/issues/609#issuecomment-439491945,1,['simpl'],['simple']
Usability,"YES! I am excited to try this out. I can probably test it on some of the other TMR cases (airfoils, flatplates). Will post the results when I get those done. . Side note, there was one issue that @bmunguia and I encountered when performing optimizations with adaptive CFL. Say the DIRECT simulation is run with adaptive CFL and is well converged (6 to 8 orders of residual reduction). When the discrete adjoint performs the one direct iteration to store the computational graph, it uses the initial CFL value, not the CFL that the adaptive CFL routine ended at. This results in the residuals being very high for that one iteration, which then affects the convergence of the discrete adjoint. . I will try to run an adjoint on one of these cases as well to see if the problem persists. Perhaps could be overcome with a simple additional field for CFL in the restart meta-data",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-531520526:818,simpl,simple,818,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-531520526,1,['simpl'],['simple']
Usability,"Yep, just an honest mistake. We'll fix it up. I know that things have been a little quiet in the repository lately, but there is a lot of motion happening behind the scenes as we prepare for the developers meeting next month (we have some exciting things in store). . Thanks for the patience, and I would also ask that, if folks in the community have some time, they please contribute to reviews. Expertise in the particular area is not required (I know it can seem intimidating, but don't be shy!), and it is a great way to learn the code and see what other folks are developing. The more input and discussion we have from various perspectives, the better.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/667#issuecomment-479973816:525,learn,learn,525,https://su2code.github.io,https://github.com/su2code/SU2/pull/667#issuecomment-479973816,1,['learn'],['learn']
Usability,"Yep, things seem to be passing just fine now, and it looks like things are coming along nicely for the turbomachinery features. Before we merge this in... I am a little concerned with the number of additions to solver_direct_mean.cpp related to the different switch statements and subroutines needed for the Riemann and non-reflecting BCs. Is there anything we can do to simplify things?. In addition, could you please clean up the spacing/style in those methods to match up with the other BCs (more comments are needed, indentation, variable declarations, etc.)? It would also be great to have a little more detail on how to use the new BCs in the descriptions in config_template.cfg. Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/207#issuecomment-152406337:371,simpl,simplify,371,https://su2code.github.io,https://github.com/su2code/SU2/pull/207#issuecomment-152406337,1,['simpl'],['simplify']
Usability,"Yes for MARKER_ROUGH, or MARKER_ROUGH_WALL to be clearer.; Or just WALL_ROUGHNESS as you have right now, since it would not really a marker, just the properties of markers (and I've seen some people on CFD online confused with similar naming e.g. MARKER_SHROUD). Regarding the MPI stuff, I had the following idea over lunch:; In CPhysicalGeometry::SetWallDistance we compute the closest distance, and in so doing we also get the mpi rank and markerID associated with the closest vertex.; So, before computing the wall distances you communicate the local marker ids and wall roughness's (via Allgather as you are doing now), with this info you can build a `unordered_map<pair<int,int>, su2double>` to map pairs of <rank,markerID> to the values of roughness.; Now when you loop over the points to compute the distances you can retrieve the roughness from this map instead of from config.; It's almost exactly the same as you have, but avoids using the config as a messenger between routines, and using a stl map should also make the code simpler. In the boundary conditions you can still get the marker roughness via the marker tag as you are doing now, and I guess the wall type (smooth / rough) can be inferred from having 0 (default) roughness (?); With the string+double list specification you also avoid having to specify 0 roughness and SMOOTH wall type for markers where you don't want to use this feature.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/877#issuecomment-630861158:49,clear,clearer,49,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-630861158,2,"['clear', 'simpl']","['clearer', 'simpler']"
Usability,"Yes it definitely is confusing. Then we have to use set_ffd_design_var.py giving i,j,k which are not really 'units' in x,y,z. The website should be updated to show this. I am wondering how does SU2_DEF will determine the ""logic axis"". Won't a simple x,y,z approach have been simpler?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/977#issuecomment-626875076:243,simpl,simple,243,https://su2code.github.io,https://github.com/su2code/SU2/issues/977#issuecomment-626875076,2,['simpl'],"['simple', 'simpler']"
Usability,"Yes, I did not make that clear, the linear solver fraction of the time cannot be accelerated by this. But everything else can, from gradient/limiter computations to the Compute_Residual functions, as all those need to wait for data, it is however not very easy to measure how long that wait is compared to the rest of the computations.; In the 2015 joint work between Stanford and Intel they reported a 1.5x speed-up from this type of change for a case where the linear solver used 24% of the time. I do not know how heavy the CVariable infrastructure is now compared to then... We will see :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-506768400:25,clear,clear,25,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-506768400,1,['clear'],['clear']
Usability,"Yes, nothing more from me on this. Once this is merged, the comparison in PR #1260 should become simpler too. I've just updated this branch with develop, we can merge once the regression tests pass again.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174#issuecomment-827981242:97,simpl,simpler,97,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-827981242,1,['simpl'],['simpler']
Usability,"Yes, that is roughly what I mean. When I filed the issue, I was compiling in xcode, and it threw a bunch of warnings about implicit numeric casts. This is what the isssue was about. I'm off of develop and the moment, and don't have xcode setup, so I'm sorry I can't be more specific. I think they should all be unsigned long long. The memory overhead is trivial (8 bytes per node), and if we want the code to be usable in an exascale environment we don't want to limit ourselves to 4 billion node meshes.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/3#issuecomment-104354036:412,usab,usable,412,https://su2code.github.io,https://github.com/su2code/SU2/issues/3#issuecomment-104354036,1,['usab'],['usable']
Usability,"Yes, the GRAD_FLOW option has worked well for my simple application. I have not tried using it on other more complex problems or geometries.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-445429364:49,simpl,simple,49,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-445429364,1,['simpl'],['simple']
Usability,"Yet another doubt on the same subject: I just realized that SU2V7.31 (I; have not tested it on later SU2 releases) accepts imposing both adiabatic; walls plus isothermal boundary condition on some walls (when running Menter; model), but when I simply impose only isothermal conditions (leaving; commented out the adiabatic markers), I get the message: SU2 process; returned error '1'. Is there a workaround for this? Kind regards. On Thu, Sep 28, 2023 at 8:25 PM Pedro Gomes ***@***.***>; wrote:. > you are correct, there is a discussion on CFD-online about it. we impose 0; > heat flux, but report an ""apparent heat flux"" most codes will simply give; > you back the imposed heat flux value you specify, nevertheless there will; > probably be a temperature gradient close to the wall; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/2109#issuecomment-1740118992>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AHGXZUUZNE6B63SH7XJLY2DX4YBMZANCNFSM6AAAAAA3QKLVDU>; > .; > You are receiving this because you commented.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2109#issuecomment-1775968391:244,simpl,simply,244,https://su2code.github.io,https://github.com/su2code/SU2/pull/2109#issuecomment-1775968391,2,['simpl'],['simply']
Usability,"Yikes. Thanks, @LaSerpe, for the heads up. There is clearly something wrong with SU2_SOL for many of the cases, although the compute portion is fine. We should get a test case set up for SU2_SOL, or at least try to catch these errors too. @fpalacios, can you please take a look at this problem when you have a moment? It seems to have shown up with the merging of feature_cte_cl. Just fyi for all: the Travis CI folks have generously granted extra time for our regression tests, up to 70 minutes now. This fixes the time-out issues in the short term, but there are a few strategies we should look at for caching or further decomposing our builds to keep under the time limits in the future as we keep growing.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/325#issuecomment-262118156:52,clear,clearly,52,https://su2code.github.io,https://github.com/su2code/SU2/pull/325#issuecomment-262118156,1,['clear'],['clearly']
Usability,"You are proposing the exact opposite of the conclusion of the paper:. ""From the above findings, it is **recommended that all three of these terms be included** when; running hypersonic, or even supersonic, turbulent flow simulations, especially for flows with; shock wave-induced separations."". And they clearly say this:; ""While the full inclusion of these terms does not always result in predictions that agree better; with DNS/experimental data, this is likely caused by the fact that their exclusion cancels out; effects of other flaws in the RANS models employed."". If your strategy is to get a better match with experiments by neglecting physics terms, then you should rethink your strategy.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1851#issuecomment-1520849562:304,clear,clearly,304,https://su2code.github.io,https://github.com/su2code/SU2/issues/1851#issuecomment-1520849562,1,['clear'],['clearly']
Usability,"You could modify `CWindowedAverage::addValue` to only ""push back"" more values if it detects a change in current time iteration, otherwise it simple overwrites the last value in the history.; Then you could get rid of the entire logic in `SetUpdate_Averages` simply making it true or false (less logic is the way for less bugs).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1259#issuecomment-817952886:141,simpl,simple,141,https://su2code.github.io,https://github.com/su2code/SU2/pull/1259#issuecomment-817952886,2,['simpl'],"['simple', 'simply']"
Usability,"You could try turning off or simplifying the contributions to the Jacobian for that type of boundary, see CNSSolver.ccp around line 550. For example, leaving only the `Jacobian_i[nDim+1][nDim+1]` or none.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1872#issuecomment-1370867223:29,simpl,simplifying,29,https://su2code.github.io,https://github.com/su2code/SU2/issues/1872#issuecomment-1370867223,1,['simpl'],['simplifying']
Usability,"You're right about that bug with vel_i_corr. Thanks for finding it, I'll submit a correction. Yes, it's possible to modify the config file so that your implementation works. But is this simply masking the problem of reduced stability? Do you expect the direct formulation to be less stable? And do the benefits of the direct formulation make the loss of stability worthwhile? If so, then I think you should change the config file. I hope this answers your question, I'm not sure if I understood it correctly. Regards,; Daniel",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/232#issuecomment-182655391:186,simpl,simply,186,https://su2code.github.io,https://github.com/su2code/SU2/pull/232#issuecomment-182655391,1,['simpl'],['simply']
Usability,[WIP] Implementation of Simplified LM Transition model,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1901:24,Simpl,Simplified,24,https://su2code.github.io,https://github.com/su2code/SU2/pull/1901,1,['Simpl'],['Simplified']
Usability,"[WIP]. Because we can only pin up to 3 issues in GitHub, I'm creating this one to track major aspects we need to fix or implement in SU2.; This issue shall only contain the list and a brief description, with links to associated issues and pull requests.; To propose major issues / development areas please use discussion #1486. The purpose of this list is two fold:; - Direct the efforts of the SU2 Foundation towards addressing these issues, by efforts I mean funds (as they become available).; - Try to enlist help from the community to start addressing these issues, as much as possible we will try to break these down into ""bite sized"" chunks. **To be clear, all contributions are welcome, even if they do not fit in one of the categories below.**; **The main objective here is consolidation, making SU2 do more things well** (v&v'd, unit-tested, documented, etc.). ## Documentation; - Tutorials, trying to cover all areas of SU2 ([key priority according to the community](https://docs.google.com/spreadsheets/d/1wgQDMiJ_mMqxiJ6FV8zZDu-CbxBjGXGeqrTAuJaTQkQ/edit#gid=1654711040)).; - Developer documentation (common ""how to's"", ~~update/simplify the info in [these pages](https://su2code.github.io/docs_v7/Code-Review/)~~([done](https://github.com/su2code/su2code.github.io/pull/70)), etc.). ## Turbulence models; - Precise documentation of fluid and turbulence models **as implemented** in SU2, i.e. link to an authoritative reference and highlighting any deviation from it. #1364 #1551; - Code refactoring to simplify adding turbulence model variants. #1413; - V&V; - Scale resolving methods #1120; - Transition (documentation, tutorial, implementation of additional models) #1496; - Wall functions (documentation, tutorial testcase) #1204. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1487:656,clear,clear,656,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487,1,['clear'],['clear']
Usability,"` is called. You can reproduce the bugs using the following MWE:. #### Minimal working example. As per the documentation, you should be able to restart a previous shape optimization problem with a command like:; ```; python shape_optimization.py -f turb_SA_RAE2822.cfg -r project.pkl; ```; where the `-r` command specifies a pickle files with the saved project state from a previous run. I checked the problem on the [RAE2822 constrained optimization tutorial](https://su2code.github.io/tutorials/Turbulent_2D_Constrained_RAE2822/). You can download the files using the instructions on that page. In order to reproduce the bug, run the following chain of commands:. 1. As per the tutorial, run `SU2_GEO turb_SA_RAE2822.cfg`; 2. Modify the `turb_SA_RAE2822.cfg` file to specify that `OPT_ITERATIONS=1`; 3. Run `python $SU2_RUN/shape_optimization.py -f turb_SA_RAE2822.cfg`; 4. Modify the `turb_SA_RAE2822.cfg` file to specify that `OPT_ITERATIONS=2`; 5. Run `python $SU2_RUN/shape_optimization.py -f turb_SA_RAE2822.cfg -r project.pkl`. ## Remaining work. This should be covered by a test case. The problem I used takes a bit of time to compute, even using just the restart. Is there an cheaper shape optimization problem that could run quickly as a test case?. ## Related Work; None. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/921:1783,guid,guide,1783,https://su2code.github.io,https://github.com/su2code/SU2/pull/921,1,['guid'],['guide']
Usability,"` to be set properly. However, in the FEM/DG solver, the `base_nodes` is defaulted to `nullptr` and we have workarounds in the FEM/DG sovler that does not require a call to `GetNodes()` in other parts of the code (we use elements instead of nodes, so the concept of nodes is not really well-defined in the FEM/DG solver). . At the moment, the develop branch will fail at this line if anyone attempts to use the FEM/DG solver. . E.g., Taking the `hom_euler/NACA0012_5thOrder` test case in the repo gives the following error message:; ```SU2_CFD: ../SU2_CFD/src/output/../../include/solvers/CSolver.hpp:230: const CVariable* CSolver::GetNodes() const: Assertion `base_nodes!=nullptr && ""CSolver::base_nodes was not set properly, see brief for CSolver::SetBaseClassPointerToNodes()""' failed.``` at the pre-processing stage before any computation is done. Hence, a conditional operator is added to avoid this call for DG solvers. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; @vdweide and I are working on a new version of the DG solver that needs this workaround anyway. This is just added for now in case anyone else wants to work on the current version of DG solver available. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1772:1938,guid,guide,1938,https://su2code.github.io,https://github.com/su2code/SU2/pull/1772,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"```diff; $ git --no-pager diff --cached ; diff --git a/meson.build b/meson.build; index ca86992ea..b68a03c52 100644; --- a/meson.build; +++ b/meson.build; @@ -1,15 +1,12 @@; project('SU2', 'c', 'cpp',; version: '7.5.1 ""Blackbird""',; + meson_version: '0.61.1',; license: 'LGPL2',; default_options: ['buildtype=release',; 'warning_level=0',; 'c_std=c99',; 'cpp_std=c++11']); ; -if meson.version() != '0.61.1'; - error('SU2 must be configured with the extended Meson script (./meson.py) in the SU2 root directory.'); -endif; -; pymod = import('python'); python = pymod.find_installation(); ; ```. I used this patch, and then ran the following:. ```; $ meson setup builddir --wipe; The Meson build system; Version: 1.0.1; Source dir: /tmp/SU2; Build dir: /tmp/SU2/builddir; Build type: native build. meson.build:1:0: ERROR: Meson version is 1.0.1 but project requires 0.61.1; ```. Using the >= comparison, it configures fine, and downloads a git submodule for mutationpp/coolprop on demand. From a hasty look around, it seems like the other git submodules are used as externals/ directories, not meson subprojects. Another project I know uses e.g. ```; if not fs.exists('submoduledir/README.md'); error('Missing the `submoduledir` submodule! Run `git submodule update --init` to fix this.'); endif; ```. for each submodule before it gets processed by meson. This is less automatic than wrapping it in meson.py, but does provide pretty clear directions... the sticking point is if people download tarballs. You currently point people to github's autogenerated archives, which is NOT sufficient as it doesn't have submodules included. I would actually suggest using `meson dist --include-subprojects --no-tests` to produce your own tarballs and attach them as additional releases artifacts. Meson *does* include submodules (whether or not they are subprojects) automatically to the tarball it creates.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1945#issuecomment-1451057434:1431,clear,clear,1431,https://su2code.github.io,https://github.com/su2code/SU2/issues/1945#issuecomment-1451057434,1,['clear'],['clear']
Usability,"ableBase(int nVar, int overhead);; virtual ~VariableBase();; inline double* GetPrimary() {return primary;}; inline virtual double* GetSecondary() {return nullptr;}; };. VariableBase::VariableBase(int nVar, int overhead); {; primary = new double [nVar+overhead];; for(int i=0; i<nVar; ++i) primary[i] = 1.0;; }; ```; All this does is give access to some primary variables held by the base class and allow derived classes to store their own secondary variables, e.g.:; ```; class VariableDerived : public VariableBase; {; private:; double* secondary;; public:; VariableDerived(int nVar, int overhead);; ~VariableDerived();; inline double* GetSecondary() {return secondary;}; };; ```; Then lets say we have dummy numerics classes.; ```; class NumericsBase; {; public:; virtual ~NumericsBase();; inline virtual double ComputeResidual(const double* a, const double* b) {return 0.0;}; };. class NumericsDerived : public NumericsBase; {; private:; int n;; public:; NumericsDerived(int nVar);; double ComputeResidual(const double* a, const double* b);; };; ```; `NumericsDerived` simply computes the dot product of `a` and `b`.; The use case is to loop over edges that connect nodes `a` and `b` passing the data of those nodes to `ComputeResidual` and using the result to update an array.; ```; VariableBase** node = new VariableBase* [nNode];; for(int i=0; i<nNode; ++i); node[i] = new VariableDerived(nVar,overhead);; ...; for(int i=0; i<nEdge; ++i); {; int p0 = connectivity[i].first;; int p1 = connectivity[i].second;. double r = numerics->ComputeResidual(node[p0]->GetPrimary(), node[p1]->GetPrimary());. residual[p0] += r;; residual[p1] -= r;; }; ```; I hope that looks familiar.; `connectivity` is a `vector<pair<int,int> >` so nicely contiguous (in SU2 this information comes from an array of CEdge*). Note that we are never talking about sequential access here, this level of indirection will always be present.; To create a somewhat realistic access pattern we create 2 edges per node connecting it ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:2857,simpl,simply,2857,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,1,['simpl'],['simply']
Usability,"ame| Dim. value| Ref. value| Unit|Non-dim. value|; +------------------------------------------------------------------------------+; | Static Pressure| 41342.4| 1| Pa| 41342.4|; | Density| 0.499813| 1| kg/m^3| 0.499813|; | Temperature| 288.15| 1| K| 288.15|; | Total Energy| 236805| 1| m^2/s^2| 236805|; | Velocity-X| 244.973| 1| m/s| 244.973|; | Velocity-Y| 0| 1| m/s| 0|; | Velocity-Z| 4.48986| 1| m/s| 4.48986|; | Velocity Magnitude| 245.014| 1| m/s| 245.014|; +------------------------------------------------------------------------------+; | Viscosity| 1.7248e-05| 1| N.s/m^2| 1.7248e-05|; | Conductivity| -| 1| W/m^2.K| -|; | Turb. Kin. Energy| 225.119| 1| m^2/s^2| 225.119|; | Spec. Dissipation| 652349| 1| 1/s| 652349|; +------------------------------------------------------------------------------+; | Mach Number| -| -| -| 0.72|; | Reynolds Number| -| -| -| 7.1e+06|; +------------------------------------------------------------------------------+; Initialize Jacobian structure (Navier-Stokes). MG level: 0.; Initialize Jacobian structure (SA model). ----------------- Integration and Numerics Preprocessing ----------------; Integration Preprocessing.; Numerics Preprocessing. ---------------------- Python Interface Preprocessing ---------------------; Setting customized boundary conditions for zone 0. ```; ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/633:9208,guid,guide,9208,https://su2code.github.io,https://github.com/su2code/SU2/pull/633,1,['guid'],['guide']
Usability,"amination of the shear stress transport assumption with a low-Reynolds number k-omega model for aerodynamic flows."" Eq 17.; - Boundary conditions errors at inlets, following the Issue #1851. A fix has been proposed following @pcarruscag suggestions for the supersonic inlet BC.; - Boundary conditions definitions are different than the ones proposed in TMR. Maybe give the user the choice to use the BCs implemented in SU2 or the ones from TMR. Changes to SST model proposed:; - Inclusion of non modified versions of SST. In this case I think that more work is needed to be sure that the correct terms are taken into account everywhere in the code.; - Give the user the possibility of changing the production limiter for TKE (not essential).; - Change values of default turbulent to laminar viscosity to 1e-2 (NASA TMR reports that it should be in the range of 1e-2 to 1e-5, but in SU2 this is set to 10 as default). . I've seen the proposed changes to the lower limits of k and w in #2323 and I tried implementing it in my branch. However, if the implementation proposed in the respective PR is preferred then I will change mine. . ## Related Work; #2323 #1851 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329:2340,guid,guide,2340,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"anced programming may become an entrance barrier to new additions to the community. As I wrote in the preamble of #789:; ""But please participate even if you never heard of these topics, your opinion about readability and ""developability"" of the code is important! I think the code-style should be accessible to people starting a PhD (after they read a bit about C++...).""; I try to encapsulate and hide the tricky bits as much as possible to make the code as readable as possible, whether I am succeeding or not is for the community to decide, in all these PR's I've been pointing to the areas I think are trickier, if someone, anyone, feels they are absolutely incomprehensible please say something... either here, or trough slack, or by email (I think it shows in the commits) (I understand not everyone is keen on github exposure). > I'm aware that you have been doing very well at documenting the code and the various PRs, but I'd say we should try to find an strategy to ease the learning curve on potential new developers (maybe some developer tutorials? a collection of the comments/discussions on the PRs moved to the wiki? a list of links/useful resources?). I agree with documentation of broad design decisions, that is the intent of #789, and developer tutorials (how to implement a new X) once we are content with the restructurings, otherwise they will quickly go outdated... or actually...; We should probably first think about the answers to ""how to implement a new X"" and restructure/refactor as a function of that.; Based on previous efforts of maintaining wiki's updated while code is being developed, I much prefer this github style where you can clearly tell what version of the code the comments refer to. A collection of comments/discussions organized by topic and linked to a feature is somewhat what I had in mind when I opened a ""big PR"" (#824) with little branches such as this one, I can try to complete that with a list of links/useful resources, references as it were, goo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/843#issuecomment-577684728:4580,learn,learning,4580,https://su2code.github.io,https://github.com/su2code/SU2/pull/843#issuecomment-577684728,1,['learn'],['learning']
Usability,"are mentioning is the same. I simply united the TIP, LOWER_SIDE and UPPER_SIDE under the marker tag WING. > The initial transient through the domain based on the initial values is unphysical to some extend and if e.g. 'steady state' results are the same for both code versions .... the problem is not that big. Although it differs quite a bit in the temporal evolution tbh; In the results (also in the mail) it looks a bit like it approaches a steady state for Cl and CD. So maybe 1000 timesteps will tell us a bit more 🤔. I guess they converge eventually to the same values. I tried to compare the same case but steady (I attach the summary). Results in this case are fairly similar and (in my opinion) raise no warnings.; [Summary_steady_6_0_1.txt](https://github.com/su2code/SU2/files/3906039/Summary_steady_6_0_1.txt); [Summary_steady_6_2_0.txt](https://github.com/su2code/SU2/files/3906010/Summary_steady_6_2_0.txt). Regarding the unsteady case, I'm aware that this test may have little physics behind (especially if comparing the first timesteps) but I wanted to investigate the reason :). Results are too different and I think these might be one of the reasons behind some discrepancies I'm encountering in my FSI framework. ; My framework for FSI features a restart from a steady solution at t=0 and an unsteady simulation with imposed boundary of the wing marker. The discrepancies in that case are huge and are clearly wrong. I went back to the root and found this weird behaviour comparing the two versions so I thought this might be one cause. > Another thing: There is no tag 6.0.2 😕 ... 6.0.1 and then 6.1.0.. Yep you are right, the version is definitely 6.0.1 as it can be seen from the Summaries: **I'm updating the issue.**. > And both versions are/were on the develop branches -> what exactly do you refer to here: config-files, code, mesh. Didn't quite understand you here. Let me know if you need any other info regarding the topic. Looking forward to hear from you!. Best,; Rocco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-559850074:1751,clear,clearly,1751,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-559850074,1,['clear'],['clearly']
Usability,"ares (indeed what I need now is a QR decomposition). And, as an added bonus, I think some other areas of the code could be simplified / optimized by adopting a dense matrix format, for example:; - This snipped from the viscous numerics refactoring`for (iDim = 0; iDim < nDim; iDim++) {; TauElem[iDim] = 0.0;; for (jDim = 0; jDim < nDim; jDim++); TauElem[iDim] += tau[iDim][jDim]*UnitNormal[jDim];; }` would simply become `TauElem=tau*UnitNormal`; - Cumbersome allocations like `tau_jacobian_i = new su2double* [nDim];; for (iDim = 0; iDim < nDim; iDim++) {; tau_jacobian_i[iDim] = new su2double [nVar];; }` become `Matrix tau_jacobian_i(nDim,nVar);` and the cleanup is dealt with by the destructor of the object automatically. Now to answer some questions.; @juanjosealonso @erangit LAPACK and BLAS are indeed the standard, so much so that most (all?) newer libraries will call their routines behind the scenes.; However they considerably simplify the user interface by encapsulating the aforementioned construction/destruction and by exposing natural ways of manipulating the matrices, e.g. access entire rows, columns, blocks, etc.; Another issue with using BLAS routines is that we then need to provide a portable version that can be differentiated with CoDi or to implement the exact differentiation (similar to what is done in the ""solve_b"" routines). @vdweide that is not an issue with Eigen because everything is templated and therefore compatible with any type or class that overloads the appropriate arithmetic operators.; I have used it for over 2 years and I can attest to its compatibility with AD tools (I've tried 3), and speed when linked with a BLAS library, their native implementations are also very good, peeking inside their code... you can tell they know what they are doing. P.S. I feel this post needs a disclaimer, I am not affiliated in any way to Eigen, my motivation is not to promote their work (but I obviously think they deserve it). I genuinely think adopting an algebr",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-459653772:1960,simpl,simplify,1960,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-459653772,1,['simpl'],['simplify']
Usability,"atm that still sounds like magic to me,... I really should learn this github stuff. But I was more hoping some experienced coder would pick this up instead of my messing up the code.; Also I dont yet understand the way you guys work with branches instead of regular forked code...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/688#issuecomment-495360476:59,learn,learn,59,https://su2code.github.io,https://github.com/su2code/SU2/issues/688#issuecomment-495360476,1,['learn'],['learn']
Usability,"aven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be thinking in a broad enough fashion. I would love to get input from the community for any functionality that they might want to see in this framework. The more robust this is, the more widely useful it will be. I am also a newbie to the python wrapper world of SU2. If there are any glaring road blocks or things that have been tried before but failed, please let me know. ; ; ## Related Work; #733 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/922:2965,Simpl,Simplify,2965,https://su2code.github.io,https://github.com/su2code/SU2/pull/922,2,['Simpl'],['Simplify']
Usability,"aybe you refer to the develop code at the time where these tags were introduced. But maybe sth different. > I guess they converge eventually to the same values. I tried to compare the same case but steady (I attach the summary). Results in this case are fairly similar and (in my opinion) raise no warnings. That is good to hear. ; Luckily @cvencro (Thanks for that 👍 ) ran some tests and found that #740 (which rewrites Euler Wall boundaries for compressible and incompressible flows ... which was me btw) introduces the changes you see. The Euler wall for compressible is changed a bit in the way the boundary condition is enforced. Upon convergence both version should recover (close to) the same value. If the results in a steady state are the same/very-similar and if an unsteady simulation at low enough Reynolds-number converges to the same steady result (or oscillate in the same bounds) -> I would say it is simply some purely numerical effect based on the unphysical initialization and different treatment of the euler wall boundary. . 1 thing one could test additionally is to force a very high convergence in each physical timestep, i.e. usually one converges ~3 orders of magnitude in each ts -> now try converging until residual stalling in each ts. If the code versions get the same/closer results in the temporal evolution my euler wall boundary explanation would be quite reasonable.; Together with the long running unsteady simulation proposed above, I would feel more comfortable to judge. @cvencro (bringing the conversation to this place 😉 ) concerning the pitching case: the `if (dynamic_grid)` statements in the 'old' version are not necessary as that is handled by the numerics class. In the new version an appropriate 'reflected state' is constructed and the numerics container is called to compute the residual. Before, the code of one numerics ->ComputeResidual Routine was simply copied and slightly modified. But of course there is always room for errors 🐛 . Cheers, Tobi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-562621057:2218,simpl,simply,2218,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-562621057,1,['simpl'],['simply']
Usability,"ble-multilib --disable-werror --enable-checking=release --enable-default-pie --enable-default-ssp --enable-cet=auto gdc_include_dir=/usr/include/dlang/gdc; Thread model: posix; gcc version 9.2.1 20200130 (Arch Linux 9.2.1+20200130-2) ; ```; I did what you suggested and here is how my meson.build file looks.; ```; # If custom mpi mode is enabled, include and library pathes for MPI have to be set manually to env variables; if get_option('custom-mpi'); mpi_dep = []; mpi = true; # Otherwise they are automatically determined; else; mpi_dep = [dependency('mpich', required : get_option('with-mpi'))]; # mpi_dep = [dependency('mpi', language:'c', required : get_option('with-mpi')),; # dependency('mpi', language:'cpp', required : get_option('with-mpi'))]; #if mpi_dep[0].found() or mpi_dep[1].found(); # mpi = true; #endif; endif; ```; My SU2 build was successful but there were a couple of warnings.; Also, instead of 870 there were only 772 files in total. Is that okay?; ```; slimshady@arch-linux-hp-probook-g3-450: SU2HOME$ ./ninja -C build install; ninja: Entering directory `build'; [756/772] Generating 'SU2_PY/pySU2/_pysu2.so.p/pySU2.cxx'.; ../SU2_PY/pySU2/../../Common/include/mpi_structure.hpp:348: Warning 325: Nested struct not currently supported (Status ignored); [760/772] Generating 'SU2_PY/pySU2/_pysu2ad.so.p/pySU2ad.cxx'.; ../SU2_PY/pySU2/../../Common/include/mpi_structure.hpp:348: Warning 325: Nested struct not currently supported (Status ignored); [771/772] Installing files.; .; .; ```; Here is the [entire output for `./ninja`](https://github.com/su2code/SU2/files/4672490/ninja_build_mpich.log). Even though the build was successful, SU2 does not seem to run properly. It displays the same thing ""NP"" (`mpirun -n NP ...`) number of times. And the console prints the output in chunks, like 57 iterations suddenly ""NP"" times, then a pause, then 57-119 ""NP"" times and so on. You can see the [logfile here](https://github.com/su2code/SU2/files/4672491/mpirun_SU2_CFD_error.log).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-633139474:2869,pause,pause,2869,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-633139474,1,['pause'],['pause']
Usability,"c` we resolve 4/8 row/column pairs into 1D indexes, while this calculation is vectorized, it seems to be less optimizable by compilers, for example this; ```c++; for(size_t iDim=0; iDim<nDim; ++iDim); phiL += grad.getVec(iPoint,iVar,iDim)*d_ij[iDim];; ```; gets compiled into this monstrosity; ```asm; .L13:; vpmuludq ymm0, ymm4, ymm1; vmovq xmm15, rax; vmovapd ymm6, ymm11; mov rdx, rax; vpbroadcastq ymm15, xmm15; sal rdx, 5; add rax, 1; vpaddq ymm0, ymm0, ymm2; vpsllq ymm0, ymm0, 32; vpaddq ymm0, ymm5, ymm0; vmovdqa YMMWORD PTR [rbp-240], ymm0; vpaddq ymm0, ymm3, ymm0; vmovdqa YMMWORD PTR [rbp-208], ymm0; vpaddq ymm0, ymm15, ymm0; vmovdqa YMMWORD PTR [rbp-176], ymm0; vgatherqpd ymm15, QWORD PTR [rdi+ymm0*8], ymm6; vmovapd ymm0, YMMWORD PTR [rsi+rdx]; vfmadd213pd ymm0, ymm15, YMMWORD PTR [rbp-336]; vmovapd YMMWORD PTR [rbp-336], ymm0; cmp rbx, rax; jne .L13; ```; the meat of which is `vgatherqpd` (`getVec`) and `vfmadd213pd` fused-multiply-add to update `phiL`, everything else is integer arithmetic which in the scalar version gets factored out of the inner loop so that the resulting assembly looks much simpler:; ```asm; .L15:; vmovsd xmm5, QWORD PTR [rsp-40+rax*8]; vfmadd231sd xmm0, xmm5, QWORD PTR [r15+rax*8]; add rax, 1; cmp rcx, rax; jne .L15; ```; I think the reason for this is that there are plenty of integer registers (64bit) to keep memory locations (rsp, rax, r15 in the above) but there are only 16 ymm registers (256bit). In any case we need to give the compiler a hand, the calculation we need is; `index = iPoint*nVar*nDim + iVar*nDim + iDim` where iPoint is an array of ints; Note that as we loop by nDim and then by nVar all we need is to compute `iPoint*nVar*nDim` outside the loops and then add 1 on each access (which is more or less what the compiler does for the scalar code), in other words we need an **iterator**, something silly like; ```c++; template<size_t VecLen, size_t Incr = VecLen>; class GatherIterator; {; private:; using IntVec = Array<size_t,VecLe",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:10256,simpl,simpler,10256,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,1,['simpl'],['simpler']
Usability,"d68184-2d20-4a93-abb2-0b6fd361846e); ![image](https://github.com/su2code/SU2/assets/50565314/57a76a0b-d8a2-4da7-b1e8-ddee848e7062); ![image](https://github.com/su2code/SU2/assets/50565314/afd310db-3aa2-48e3-813b-c20b198df8fe); ![image](https://github.com/su2code/SU2/assets/50565314/4863963a-533c-4e6b-8e45-c632e571704c). ## Validation Case. Validation analysis is conducted for the [hypersonic flat plate](https://turbmodels.larc.nasa.gov/ZPGflatplateSS_val.html). Two different wall temperature(T_w/T_free = 1.090 and T_w/T_free = 2.725) results are presented and compared with simulation results of ANSYS Fluent. . The CC of Fluent and Wilcox is almost same, but they have different coefficients(Wilcox : ![image](https://github.com/su2code/SU2/assets/50565314/a9e69d6e-7ad2-4752-8aa8-0dfe718306ce) / Fluent : ![image](https://github.com/su2code/SU2/assets/50565314/e2786d93-f933-424e-bd23-171ba1fa0347)). So, The results show a similar behavior to the Fluent results. ; ![image](https://github.com/su2code/SU2/assets/50565314/711274f0-ab32-4281-bc72-168445f24766); ![image](https://github.com/su2code/SU2/assets/50565314/9d8a39a2-423f-4ca1-b209-cbe613a9d76c). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2271:3115,guid,guide,3115,https://su2code.github.io,https://github.com/su2code/SU2/pull/2271,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"discadj_arina2k fails with some mpi error, but it does not fail when I run it on my local machine. Not sure what is going on here. ```; Clearing the computational graph.; [9c7d9f63f200:01637] *** An error occurred in MPI_Allgather; [9c7d9f63f200:01637] *** reported by process [4177330177,1]; [9c7d9f63f200:01637] *** on communicator MPI_COMM_WORLD; [9c7d9f63f200:01637] *** MPI_ERR_TRUNCATE: message truncated; [9c7d9f63f200:01637] *** MPI_ERRORS_ARE_FATAL (processes in this communicator will now abort,; [9c7d9f63f200:01637] *** and potentially your MPI job). ```; There is another case that sometimes fails due to the tight tolerance.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1826#issuecomment-1415450196:136,Clear,Clearing,136,https://su2code.github.io,https://github.com/su2code/SU2/pull/1826#issuecomment-1415450196,1,['Clear'],['Clearing']
Usability,"doc/libs/1_70_0/libs/test/doc/html/index.html>.; > This provides a convenient set of macros for instatiating tests, grouping; > tests into suites, and running checks. This choice was based on what is; > available in our development setup.; >; > We have integrated our unit tests into our Travis CI regression testing.; > Every time we push commits or submit a pull request, the unit tests are run; > and checked.; > What is my vision for unit testing in SU2?; >; > I am *not* proposing that we start trying to get 100% code coverage with; > pre-existing code. That would not provide a good return on investment.; >; > Instead, I see people adding unit tests as they write new code and as they; > find bugs. For each new behavior added to SU2, tests are first added to; > document the related existing behavior. These tests serve to check that the; > existing behavior isn't damaged by the new code. Then new tests are added; > to prove that the new behavior is working correctly. For bug fixes, the; > process is simpler. A test is added to confirm that something is not; > behaving as expected. Then the code is fixed to make the test pass.; > What frameworks are available?; >; > For a unit testing framework, here are the most popular options, with the; > following pros and cons:; > Roll-your-own; >; > - Requires no external dependencies; > - The most flexible option; > - Involves the most work to setup; > - Will lack some of the more advances features of mature unit-testing; > frameworks.; >; > Boost Test; >; > - Can be header only, statically linked, or dynamically linked; > - If statically or dynamically linked, then Boost is not very; > lightweight; > - Easy to add if you're already using Boost; >; > Google Test; >; > - Most common unit-testing framework; > - Can be easily combined with Google's powerful GMock mocking library; > - Compiling and linking can be somewhat painful; >; > Catch2; >; > - Used by FEniCS; > - Makes unit tests easily readable with lots of syntactic sugar.;",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:5298,simpl,simpler,5298,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,1,['simpl'],['simpler']
Usability,"dweide; >(...) @bmunguia and @EduardoMolina, what type of application did you have in mind for PETSc? The only thing I can think of is a full Newton solver. And no matter how much I like PETSc, @juanjosealonso and @erangit have a point here. Looks like I start to belong to the group of old conservatives as well.... >@economon ; >(...) If you really would like to give PETSc a shot, I recommend talking with @anilvar who had an interface for connecting it to SU2 in one of our branches. >@pcarruscag; >(...) being able to use PETSc or HYPRE would be interesting as it would give us access to AMG, and @talbring 's branch feature_template_linear_solver would make such an integration compatible with AD. (...). >@EduardoMolina; >(...) When Brian (@bmunguia ) and I mentioned PETSc, it was an idea to try a different Newton-Krylov (with preconditioner) library in order to improve the convergence of SU2.; Since the slow convergence of the SU2-FV is the main feedback that I received from other users from industry and academia, I think it worth try an external library and evaluate the performance. (...). >@pcarruscag ; >(...) That is something I am also interested in as for some of my structural cases the current linear solvers simply do not converge. (...). >@economon ; >I would add one practical comment for consideration: it is worth checking whether the main restriction we have is related to approximations in the Jacobian that limit the effective CFL we can use or whether the convergence of the linear solver itself is a problem (speed or complete lack of convergence). A quick test without resorting to another library is to increase the fill-in for ILU-preconditioned GMRES, which is very expensive/slow but should converge difficult problems, and to check how high we can take the CFL when allowing each nonlinear iteration to converge to a tight tolerance in the linear solver, say 1e-14 (you can output the linear solver residuals to verify convergence). If we can take the CFL higher",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/648#issuecomment-460853218:2821,feedback,feedback,2821,https://su2code.github.io,https://github.com/su2code/SU2/issues/648#issuecomment-460853218,1,['feedback'],['feedback']
Usability,"e. Create a reflected halo node which enforces symmetry and compute the occurring flux just as in the interior. Problem: the primitive gradients are not adapted nor a viscous flux based on that is computed. Incompressible: Here a ""direct flux"" approach is chosen in Euler Wall. Insert the symmetry conditions directly in the FV derivation on the boundary part and thereby eliminate most terms. For the convective terms only a pressure contribution in the momentum equation remains. No Viscous terms are currently considered which is not correct for the momentum equation. . For both solvers I implemented a ""reflected state"" approach in C*Solver::BC_sym_plane as I didn't want to touch the Euler_wall implementations especially from the compressible solver. . I (informally) wrote a bit down as explanation in Latex how I did the derivation.; [Symmetry_BC.pdf](https://github.com/su2code/SU2/files/2891210/Symmetry_BC.pdf); Note that in the DG-FEM solver of @vdweide the same ""reflected state"" approach is implemented although it is not clear to me how the derivation was done there. See the bottom of the pdf for more info. I would be happy to get some insight here :). I also did a bit of testing with some cases and will showcase the differences between current develop and my implementation with pictures below. I attached two easy 2D cases (compr. & incompr. half cylinder) which you could quickly compare the current develop and this PR with.; [Sym_plane_testcases.gz](https://github.com/su2code/SU2/files/2891254/Sym_plane_testcases.gz); tar xzf Sym_plane_testcases.gz. 1. Compressible half cylinder, navier-stokes, no Turb-model, Pin has a solid wall, farfield around. You see pressure contour lines:; ![compr_half_cyl_p](https://user-images.githubusercontent.com/31306376/53201756-19707100-3625-11e9-9cb6-8a62fcd6787e.JPG). 2. Incompressible half cylinder in channel, navier-stokes, no turb-model, velocity inlet pressure outlet. You see zebra shaded pressure contour lines:; ![p_incomp_2d](h",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/657:1303,clear,clear,1303,https://su2code.github.io,https://github.com/su2code/SU2/pull/657,1,['clear'],['clear']
Usability,"e_names(kwds.get(""names"", None)); 617 # Create the parser.; --> 618 parser = TextFileReader(filepath_or_buffer, **kwds); 620 if chunksize or iterator:; 621 return parser. File ~/miniforge3/envs/cadquery/lib/python3.11/site-packages/pandas/io/parsers/readers.py:1618, in TextFileReader.__init__(self, f, engine, **kwds); 1615 self.options[""has_index_names""] = kwds[""has_index_names""]; 1617 self.handles: IOHandles | None = None; -> 1618 self._engine = self._make_engine(f, self.engine). File ~/miniforge3/envs/cadquery/lib/python3.11/site-packages/pandas/io/parsers/readers.py:1878, in TextFileReader._make_engine(self, f, engine); 1876 if ""b"" not in mode:; 1877 mode += ""b""; -> 1878 self.handles = get_handle(; 1879 f,; 1880 mode,; 1881 encoding=self.options.get(""encoding"", None),; 1882 compression=self.options.get(""compression"", None),; 1883 memory_map=self.options.get(""memory_map"", False),; 1884 is_text=is_text,; 1885 errors=self.options.get(""encoding_errors"", ""strict""),; 1886 storage_options=self.options.get(""storage_options"", None),; 1887 ); 1888 assert self.handles is not None; 1889 f = self.handles.handle. File ~/miniforge3/envs/cadquery/lib/python3.11/site-packages/pandas/io/common.py:873, in get_handle(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options); 868 elif isinstance(handle, str):; 869 # Check whether the filename is to be opened in binary mode.; 870 # Binary mode does not support 'encoding' and 'newline'.; 871 if ioargs.encoding and ""b"" not in ioargs.mode:; 872 # Encoding; --> 873 handle = open(; 874 handle,; 875 ioargs.mode,; 876 encoding=ioargs.encoding,; 877 errors=errors,; 878 newline="""",; 879 ); 880 else:; 881 # Binary mode; 882 handle = open(handle, ioargs.mode). FileNotFoundError: [Errno 2] No such file or directory: '/home/ebi/Master-Thesis/simulation_out/config1.csv'; ​; ##############################################################################################. Your guidance on this matter is highly appreciated.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2204:6809,guid,guidance,6809,https://su2code.github.io,https://github.com/su2code/SU2/issues/2204,1,['guid'],['guidance']
Usability,"earest neighbor which will lead to wrong results. . This PR introduces a small modification to the MatchPeriodic routine that will allow nodes on the axis to map onto themselves. . ## Related Work. As a test, consider the dummy geometry below. The domain is periodic about the Z-axis. I added a wall BC in the middle of the domain and the flow is supposed to separate at that point. This case is not very realistic but the main idea was to have periodic boundaries with points on the axis of rotation. The domain and the boundary conditions are similar to what we typically have when solving turbine blades. I wasn't sure if I can share the geometry, so I made this dummy test case. This case diverges with the develop branch. The image is from an intermediate result using the fix.; ![sample_test_case_fix](https://user-images.githubusercontent.com/28007882/70721921-b4425500-1cf6-11ea-829c-7d91ca8bb1ef.jpeg). A quick way to verify if the nodes are matched properly is to check the velocity on the nodes that lie on the axis of rotation. Due to the periodicity constraint, the velocities must be aligned with the axis (here the Z-axis) which can be seen here as well. ![vel](https://user-images.githubusercontent.com/28007882/70722647-eef8bd00-1cf7-11ea-9b25-971f9718e151.jpeg). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.; - [ X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/840:1855,guid,guide,1855,https://su2code.github.io,https://github.com/su2code/SU2/pull/840,1,['guid'],['guide']
Usability,"ed the linear solvers stay the same and routines that are light see more speedup than their arithmetic-intensive friends.; What is surprising to me is how intensive the convective residuals appear to be with only a 7% improvement, so surprising in fact, I do not think the above paints the full picture. Maybe the outlet bandwidth bottleneck (into the Jacobian matrix) is more important.; To put that do the test I switched to Euler-explicit time marching and repeated the measurements:; ![image](https://user-images.githubusercontent.com/38071223/63293351-d8010b80-c2bf-11e9-8135-2502eac1128e.png); Better, but not by much, which means upwind and viscous residuals computations might gain a lot from vectorization (SIMD). And like @economon mentioned even more if they are somehow fused together.; It also means the writes to CSysMatrix are relatively expensive, I think there are two-three reasons for it.; - We do a linear search on each Add/SubtractBlock - This could be replaced by a map.; - The Jacobian contributions are first written into a temporary block - Interleaving the writes with the computation could help mask latency.; - That temporary is not stored contiguously - Which makes it hard to vectorize the writes to CSysMatrix. **So what do I think should be tackled next?**; Hybrid parallelism (wait what?!) from messing about with this case (and more refined versions) it is clear the MG puts some limits on how many cores can be used before it stops being able to produce coarse grids, both in number and quality. Going to an MPI+Threads strategy would move that limit by one order of magnitude, giving us some robustness and performance for folks hoping to rely on strong scaling. I think I'll break it off here and keep my thoughts about SIMD and hybrid parallel for a later occasion (I have to do some ""real"" PhD work for a while) but please, if anyone has ideias, comments, corrections, suggestions, similar ongoing developments (specially)... I am all ears/eyes. Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-522730951:5345,clear,clear,5345,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-522730951,1,['clear'],['clear']
Usability,"ed. ## What is my vision for unit testing in SU2?. I am *not* proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. ## What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. #### Roll-your-own. + Requires no external dependencies; + The most flexible option; + Involves the most work to setup; + Will lack some of the more advances features of mature unit-testing frameworks. #### Boost Test. + Can be header only, statically linked, or dynamically linked; + If statically or dynamically linked, then Boost is not very lightweight; + Easy to add if you're already using Boost. #### Google Test. + Most common unit-testing framework; + Can be easily combined with Google's powerful GMock mocking library; + Compiling and linking can be somewhat painful. #### Catch2. + Used by FEniCS; + Makes unit tests easily readable with lots of syntactic sugar.; + Has a very simple syntax; + Is header-only; + ~~Requires C++11 compilation~~ Requires C++11 for full feature set, but offers a C++03 branch; + Not as feature rich as Google Test or Boost Test. ## Questions. + How do developers feel about adding unit tests to SU2?; + If a unit-testing framework were added to SU2, would you actually use it?; + Do developers have a preference (or experience with) any of the unit testing frameworks?; + Should unit tests be expected when submitting PRs?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698:4249,simpl,simple,4249,https://su2code.github.io,https://github.com/su2code/SU2/issues/698,1,['simpl'],['simple']
Usability,"elevant markers which will move and introduce deformations into the domain are set using; `MARKER_DEFORM_MESH= ( wall )`; Hopefully, previous mesh deformation structures can be deprecated and removed soon, but we will need to adapt the rigid/imposed boundary deformation of other kinds of grid movement. I kindly ask for your help in there, as I'm not very familiar with some of the legacy code for this purpose. Additionally, in this PR I have done some refactoring so the AD-based adjoint routines are accessible from the python-wrapped version of the code. The SWIG wrapper now compiles the AD binaries and interfaces directly to sensitivity information, which should make it much easier to integrate SU2 within any python-based optimization framework. . ## Related Work; - Some work will be needed to adapt the new contiguous variable structure by @pcarruscag in #753; - I have added a couple of regression tests, but I will add tutorials once #724 is merged. As of now, a bug reported in #713 prevents me from adding any meaningful tutorial - but that should be fixed in #724 according to @talbring ; - I already started adding the mesh solver, numerics and transfer functions in separate files as discussed in #583 and already started in #725. For clarity and ease of merging, only new classes are split so far, but I will probably start splitting other structures soon in PRs to come. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/760:2611,guid,guide,2611,https://su2code.github.io,https://github.com/su2code/SU2/pull/760,1,['guid'],['guide']
Usability,"els (and the other solvers probably); - code this common interface and push all turb-specific things back into the respective files (that is why I didn't `git mv` ). In order to keep this somewhat limited I would focus on porting the Turbsolvers to the new structure (however that might look, but looking at #1223 is what I'll do first) and maybe a simple transported passive scalar or so. We want the turb solver to be integrated under that Scalar-class which is arguably what most/all people use, that's why I want to have in this work at the beginning. We also have quite a few RANS Testcases so it is directly visible if something in the actual computation is changed. In case there are comments, ideas foreseeable stepping stones from experience please let me know here. ## Related Work; #777 by @economon which is the initial push towards this separate scalar solver class for additionally transported scalars (not merged); #1223 by @danielmayer @bigfooted which builds up on #777 and extends it to its needs (but does not support the turb solvers e.g.); #1226 by @oleburghardt - In this PR is a discussion on creating the structure which this (and following) PR('s) try to achieve; #1332 by @mheimgartner - implementing multi component flow (or analytic mixing properties of said multicomp flow). That PR is built upon #1223 but will merge this PR (once it is done) and throw out all additional changes in order to be merged into develop without relying on feature_flamelet. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1330:2786,simpl,simply,2786,https://su2code.github.io,https://github.com/su2code/SU2/pull/1330,1,['simpl'],['simply']
Usability,"ementation we introduce 2 additional transported scalars: the progress variable **c** and the total enthalpy **h**. All fluid properties like density, viscosity, temperature, diffusivity, reaction source terms, etc. are obtained from a lookup table that is made by the user with external 1D detailed chemistry codes like Cantera. Since temperature is now a dependent variable, we do not need to solve the regular temperature equation. However, We keep the SU2 temperature field and simply write our lookup temperature T(c,h) into this field. . As a 'limiting case', a nonreacting passive scalar transport equation has also been implemented. All fluid properties for this passive scalar are constant, but this passive scalar can be easily extended to model nonreacting mixing flows of two fluids with different properties. This model has also been verified to work together with turbulence, although no turbulence chemistry interaction has been implemented for this WIP. . ## Related Work; This PR implements a generic scalar transport framework which can be aligned with other physics models that make use of transported scalars, e.g. turbulence models. It furthermore implements a generic lookup table framework that can be used as a basis for lookup table based physics models, such as real gas models. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Notes; As indicated, this is work in progress. The code compiles and runs with a test case but is far from being clean. Side effects in non-flamelet simulations might occur.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1223:2107,simpl,simply,2107,https://su2code.github.io,https://github.com/su2code/SU2/pull/1223,1,['simpl'],['simply']
Usability,"en new tests are added; > to prove that the new behavior is working correctly. For bug fixes, the; > process is simpler. A test is added to confirm that something is not; > behaving as expected. Then the code is fixed to make the test pass.; > What frameworks are available?; >; > For a unit testing framework, here are the most popular options, with the; > following pros and cons:; > Roll-your-own; >; > - Requires no external dependencies; > - The most flexible option; > - Involves the most work to setup; > - Will lack some of the more advances features of mature unit-testing; > frameworks.; >; > Boost Test; >; > - Can be header only, statically linked, or dynamically linked; > - If statically or dynamically linked, then Boost is not very; > lightweight; > - Easy to add if you're already using Boost; >; > Google Test; >; > - Most common unit-testing framework; > - Can be easily combined with Google's powerful GMock mocking library; > - Compiling and linking can be somewhat painful; >; > Catch2; >; > - Used by FEniCS; > - Makes unit tests easily readable with lots of syntactic sugar.; > - Has a very simple syntax; > - Is header-only; > - Requires C++11 compilation; > - Not as feature rich as Google Test or Boost Test; >; > Questions; >; > - How do developers feel about adding unit tests to SU2?; > - If a unit-testing framework were added to SU2, would you actually; > use it?; > - Do developers have a preference (or experience with) any of the unit; > testing frameworks?; > - Should unit tests be expected when submitting PRs?; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/698?email_source=notifications&email_token=AA5FFRG5U3Z55N4W2XWQED3PY3LJ5A5CNFSM4HTDQXQKYY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4GXUGGLA>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AA5FFRHOPE2MUJ2Z5RRV4HTPY3LJ5ANCNFSM4HTDQXQA>; > .; >; >; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:6301,simpl,simple,6301,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,1,['simpl'],['simple']
Usability,"eps for unsteady problems.; * Loop over the number of pseudo-time steps for implicit time integration schemes; (DT_STEPPING_1ST and DT_STEPPING_2ND). For other cases this loop is 1.; * Loop over the number of disciplines involved; Call iterate for each of the disciplines.; In iterate:; * Loop over the (Runge-Kutta) stages; * Loop over the zones of a single discipline; Compute spatial residual.; Update the state vector.; * End loop over the zones of a single discipline.; Exchange halo data. This includes the halo data between zones of a single discipline.; * End loop over the (Runge-Kutta) stages; * End loop over the disciplines; * End loop over the pseudo time steps.; * End loop over the number of iterations, or time steps for unsteady problems. The weakness of this approach is that it still does not work when one would like to employ multi-stage time integration schemes for an unsteady, multi-disciplinary problem (does not work for the current implementation either), but maybe this is something we simply have to accept. The alternative is that all the details of the different time integration schemes have to be moved to the driver classes, which is highly undesirable, I think. The structure above implies that the iteration_container and the integration_container should be defined per discipline and not per zone anymore. The geometry_container and solver_container should still be defined per zone. Well, I suppose this leaves plenty of room for discussion, so I would say to continue the online discussion a bit further, such that things become a bit clearer how to tackle this issue. After that having a telecon would be good to iron out the details. Regards,. Edwin. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/437#issuecomment-328368371>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxHiNAbZtzVEvIm0XDsNvQmZ6lrwwks5shEHjgaJpZM4PQ90s>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437#issuecomment-328403160:3735,clear,clearer,3735,https://su2code.github.io,https://github.com/su2code/SU2/issues/437#issuecomment-328403160,1,['clear'],['clearer']
Usability,"est case are presented. Two configurations of CFL adaptation were tested on both the original and modified lower limit code, ; 1. CFL_ADAPT_PARAM= ( 0.99, 1.005, 5.0, 50.0, 0.0001 ) named max CFL 50 ; 2. CFL_ADAPT_PARAM= ( 0.99, 1.05, 5.0, 200.0, 0.0001 ) named max CFL 200. ![rms Rho](https://github.com/su2code/SU2/assets/139676851/6481464c-6da3-4565-8415-d19d9ea211ab). ![rms k](https://github.com/su2code/SU2/assets/139676851/e1582ea2-f77e-4814-9eda-dd41c006aabf). we point out that beyond the change in maximum CFL, also the acceleration rate is changed. . Beyond adding robustness allowing the the use of a CFL of 200 which diverges under the original limit , the modified limit allows for better convergence of the flow and turbulence residuals for CFL of 50. Plots of the Lift and drag Coefficients are added here showing that results are not affected by the new limit, and additionally convergence is slightly quicker for the lift coefficient even with a CFL of 50 . . ![CL](https://github.com/su2code/SU2/assets/139676851/61adc0af-9449-41e8-aac7-e985ca3c9bdb); ![CD](https://github.com/su2code/SU2/assets/139676851/17b877df-7eff-47d4-9a77-95e3ccd2afcd). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2323:2702,guid,guide,2702,https://su2code.github.io,https://github.com/su2code/SU2/pull/2323,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"f RBF interpolation.; - Heavy refactoring of isoparametric interpolation, the method was incorrect for quadrilaterals (and the code too complex).; - Heavy refactoring of mirror (conservative) interpolation, the algorithm is perhaps more complex but the code is cleaner and 10x faster (this is in #833).; - Medium cleanup of CInterpolator (const correctness, unnecessary mpi ifdefs, etc.).; - Light cleanup of CDriver/CTransfer (deleting copy-pasted code); #### Other enhancements:; - Initialize the linear system solutions in CMeshSolver to speedup 3D FSI simulations, but especially to reduce overhead in FSI discrete adjoint cases.; - Too improve the quality of deformed grids in FSI cases with large ""out-of-plane"" displacements, a thicker layer of stiff cells can be imposed around the deforming boundaries. The thickness of the layer is defined by option `DEFORM_STIFF_LAYER_SIZE = [0]` when `DEFORM_STIFFNESS_TYPE = WALL_DISTANCE`. This allows refined regions around a wing tip to be dragged instead of sheared (which happens with the simple 1/x variation).; #### Other fixes:; - CFEASolver displacement boundary conditions (the weird bug detailed below).; - CFEASolver load integration for FSI simplified to fix mpi-related bug.; - Option CFL_REDUCTION_TURB having no effect.; - Restarts with moving wall cases work by default. I know, there's way too much stuff in this PR, but it was all required to make 3D FSI more reliable, and hey, it works!; ![3D_FSI](https://user-images.githubusercontent.com/38071223/78511123-34069a80-7792-11ea-950f-750cef80f1f8.png). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Do",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/914:2159,simpl,simple,2159,https://su2code.github.io,https://github.com/su2code/SU2/pull/914,1,['simpl'],['simple']
Usability,"fiers that can later allow for a generality of approaches. We can make a distinction between wall functions and wall models, but this is subject to discussion…in essence both are performing similar duties, but people should express their opinions. With that said, how about a boolean such as USE_WALL_FUNCTIONS / USE_WALL_MODEL (YES or NO) with an optional argument WALL_FUNCTION_TYPE / WALL_MODEL_TYPE that can taken one of many pre-specified values that can be added as these options are developed and tested? Certainly options like STANDARD_WALL_FUNCTION, ADAPTIVE_WALL_FUNCTION, SCALABLE_WALL_FUNCTION, compressible and incompressible versions, and even EQUILIBRIUM_WALL_MODEL and NONEQUILIBRIUM_WALL_MODEL are things that are likely to be in the code in the near future. Thoughts?. Juan. On Sep 5, 2017, at 2:27 PM, Thomas D. Economon <notifications@github.com<mailto:notifications@github.com>> wrote:. @petebachant<https://github.com/petebachant>: the paper that I linked earlier on this thread had some fairly simple examples similar to the one you propose.. different flat plates and so on with varying y^+. You can likely reuse the grid(s) in the TestCases repo. @vdweide<https://github.com/vdweide>: it was very simple in this first implementation. It checks for a single boolean for whether or not to apply wall functions (WALL_FUNCTIONS= YES or NO, https://github.com/su2code/SU2/blob/43b8a4015c4b09b01d78e4243d32011c663c2b70/SU2_CFD/src/solver_direct_mean.cpp#L15339), and then assumes they should be applied to all no-slip walls (heat flux or isothermal, https://github.com/su2code/SU2/blob/43b8a4015c4b09b01d78e4243d32011c663c2b70/SU2_CFD/src/solver_direct_mean.cpp#L16653). This could of course be made more specific for individual markers using a config structure like MARKER_MONITORING to list them, or by making a dedicated BC type for it potentially. —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-327313634:1203,simpl,simple,1203,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-327313634,1,['simpl'],['simple']
Usability,"fixed set functions for NEMO axisymmetric, implemented auxvargrad correction in nemo axisymmetric source residual, fixed fluid model/transport model print statement. Signed-off-by: jtneedels <jneedels@stanford.edu>. ## Proposed Changes; This PR addresses an issue found with not setting primitive and conservative variables in computing the axisymmetric source residual, as well as implementing the auxvargrad indexing correction applied in the standard air axisymmetric source residual and fixing an issue with printing the fluid and transport models. . ## Related Work; This PR is related to #1192 and #1162. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1205:783,guid,guide,783,https://su2code.github.io,https://github.com/su2code/SU2/pull/1205,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"formance, here is the effect of color group size on the execution time of the scalar code on one thread:; ![image](https://user-images.githubusercontent.com/38071223/64686801-2e0d3d00-d481-11e9-82a0-c56e5554cd83.png); The hassle-free option of not sorting by color ""never"" recovers the performance of the base algorithm, things are even worse for the SIMD version where even at group size of 8192 with re-sorting the slowdown is 14%. Running the edge-loop version on 4 cores (8192 group + sorting) we get speedups (relative to reference) of **1.98** and **2.04** for the scalar and SIMD versions respectively (yes I quadruple checked).; If you are keeping track of the number two things should surprise you, the first is that there is no difference between scalar and SIMD now (the vector instruction are still there though), the second is that 4 cores give only a 2x speedup. The reason for both is: the implementation is very memory-bound, and so throwing more compute at it, either in the form of more cores or more lanes, does not help much. This is the 4 core summary:. | Code | Edge | Edge, SIMD on vars | Point | Point, SIMD on points |; | ---- | ---- | ---- | ---- | ---- |; | **Speed** | 2.0 | 2.0 | 3.8 | 2.8 |. I think the point-based versions scale better because they are a bit less memory-bound as they write to the gradient sequentially and they have a bit more compute due to the duplicated computations. **Conclusion**; Computing gradients via point-loops allows simpler and more generic SIMD and SPMD strategies, the resulting implementation seems to do better in the bandwidth-starved conditions typical of modern hardware (3 or more cores per memory channel). However, additional adjacency information is required to support point-based loops. Next I will talk about limiters, almost all concepts are introduced so it will be shorter (promise). As a little appetizer let me tell you we can recover the extra memory and we could be looking at a 2.7x speedup for gradients+limiters.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530328194:15283,simpl,simpler,15283,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530328194,1,['simpl'],['simpler']
Usability,"from a simple time average to a time averaged weighted with a windowing function. For the direct run this is just a post-processing step and changes happen only in signal_processing_toolbox and Coutput. ; - We adapted the seeding for the adjoint run from a the classic time average to a windowed time average. ; - Tests have shown, that higher order windowing regularizers, tend to converge quickly with respect to the averaged time span. We have implemented a ""timeConvergenceMonitor"", that acts similarly to the convergence monitoring of the inner convergence. It applies a cauchy convergence criterion to the chosen windowed time average output coefficients. ; - The cauchy convergence criterion works for direct run, adjoint run and shape optimization scripts; - In case of shape optimization, the script remembers the final time iteration of the direct run. If the final time step is smaller than the ""original"" final time step stated in the configuration file, it adapts the starting time of the adjoint run; and the time to seed the objective function, such that the seeding does not exceed the original time to end the seeding. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/836:2132,guid,guide,2132,https://su2code.github.io,https://github.com/su2code/SU2/pull/836,1,['guid'],['guide']
Usability,"from the community to start addressing these issues, as much as possible we will try to break these down into ""bite sized"" chunks. **To be clear, all contributions are welcome, even if they do not fit in one of the categories below.**; **The main objective here is consolidation, making SU2 do more things well** (v&v'd, unit-tested, documented, etc.). ## Documentation; - Tutorials, trying to cover all areas of SU2 ([key priority according to the community](https://docs.google.com/spreadsheets/d/1wgQDMiJ_mMqxiJ6FV8zZDu-CbxBjGXGeqrTAuJaTQkQ/edit#gid=1654711040)).; - Developer documentation (common ""how to's"", ~~update/simplify the info in [these pages](https://su2code.github.io/docs_v7/Code-Review/)~~([done](https://github.com/su2code/su2code.github.io/pull/70)), etc.). ## Turbulence models; - Precise documentation of fluid and turbulence models **as implemented** in SU2, i.e. link to an authoritative reference and highlighting any deviation from it. #1364 #1551; - Code refactoring to simplify adding turbulence model variants. #1413; - V&V; - Scale resolving methods #1120; - Transition (documentation, tutorial, implementation of additional models) #1496; - Wall functions (documentation, tutorial testcase) #1204. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum working examples"" (no redundant options, no duplication of descriptions from the config template, etc.).; - ""Obscure"" features (""things that SU2 does"" to some extent but are: incomplete, not validated / regression-tested, not documented) cleanup obsolete examples in TestCases, and identify features lacking test coverage, decide what to do with those features. ## Code maintenance; - B",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1487:1514,simpl,simplify,1514,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487,1,['simpl'],['simplify']
Usability,"from the original `issue_simplified` singlezone solution with implicit Euler and CFL=1000. ; - similar to the `issue_simplified` multizone solution with implicit Euler and CFL=0.1. . Similarly, the TKE plots:; - `issue_simplified` singlezone implicit Euler CFL=1000; ![tke-simplified-singlezone-impliciteuler](https://user-images.githubusercontent.com/72806890/140887227-fc2ed584-53cf-413d-b5ad-18d1a12f5e4a.png); - `issue_simplified` singlezone explicit Euler CFL=0.1; ![tke-simplified-singlezone-expliciteuler](https://user-images.githubusercontent.com/72806890/140887289-0d8725a2-e51b-4704-bdae-a51b492949bf.png); (it is ""red"" throughout the domain, except for the wall marker); - `issue_simplified` multizone explicit Euler CFL=0.1: (similar image, ""red"" everywhere except wall). **Thus, the difference in solutions observed above is due to the choice of implicit vs. explicit Euler and CFL, and not due to problems regarding the interface.**. Am I doing something wrong in the explicit Euler [cfg file](https://seafile.rlp.net/d/bb0fbb16eb414263b642/files/?p=%2Fsinglezone-simplfied-expliciteuler-cfl01.cfg&dl=1), whose diff to the [SU2/TestCases/rans/naca0012/turb_NACA0012_sst.cfg](https://github.com/su2code/SU2/blob/v7.2.0/TestCases/rans/naca0012/turb_NACA0012_sst.cfg) is as follows?. 27c27; < RESTART_SOL= NO; ---; > RESTART_SOL= YES; 45c45; < REYNOLDS_NUMBER= 1.0E6; ---; > REYNOLDS_NUMBER= 6.0E6; 70c70; < MARKER_HEATFLUX= ( circle, 0.0 ); ---; > MARKER_HEATFLUX= ( airfoil, 0.0 ); 76c76; < MARKER_PLOTTING= ( circle ); ---; > MARKER_PLOTTING= ( airfoil ); 79c79; < MARKER_MONITORING= ( circle ); ---; > MARKER_MONITORING= ( airfoil ); 88c88; < CFL_NUMBER= 0.1; ---; > CFL_NUMBER= 1000.0; 101c101; < ITER= 9999900; ---; > ITER= 99999; 162c162; < TIME_DISCRE_FLOW= EULER_EXPLICIT; ---; > TIME_DISCRE_FLOW= EULER_IMPLICIT; 177c177; < TIME_DISCRE_TURB= EULER_EXPLICIT; ---; > TIME_DISCRE_TURB= EULER_IMPLICIT; 203c203; < MESH_FILENAME= singlezone.su2; ---; > MESH_FILENAME= n0012_225-65.su2",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414#issuecomment-963921195:2643,simpl,simplfied-expliciteuler-,2643,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414#issuecomment-963921195,1,['simpl'],['simplfied-expliciteuler-']
Usability,"ft2_c, class ModVort_c>; class SA_Base : public CNumerics {; public:; SA_Base() {}. void computeResidual() final {; ft2 = ft2_c::Compute(); S_hat = ModVort_c::Compute(2.0,10); }; };. // the term ""bsl"" stands for baseline; class ft2_bsl { static double Compute() { return 0.0; } }; ; class ft2_nonzero { static double Copmute() { return ...; } };; class ModVort_bsl { static double Compute(const double x, const int y){ return x*y; } };; class ModVort_Neg { static double Compute(const double x, const int y){ return x*y; } };; class ModVort_Edw { static double Compute(const double x, const int y){ return x+y; } };. /*-- Numerics preprocessing --*/; // From the config file (.cfg) determine which corrections/variations we have to use: ft2_variant, ModVort_variant, etc; // Create Frankenstein SA; if(ft2_variant==0 && ModVort_variant==0) numerics[i] = new SA_Base<ft2_bsl, ModVort_bsl>();; if(ft2_variant==0 && ModVort_variant==1) numerics[i] = new SA_Base<ft2_bsl, ModVort_Neg>();; if(ft2_variant==0 && ModVort_variant==2) numerics[i] = new SA_Base<ft2_bsl, ModVort_Edw>();; if(ft2_variant==1 && ModVort_variant==0) numerics[i] = new SA_Base<ft2_nonzero, ModVort_bsl>();; if(ft2_variant==1 && ModVort_variant==1) numerics[i] = new SA_Base<ft2_nonzero, ModVort_Neg>();; // so on. // Proceed to compute the turbulent sources residual as always; ```. ## Related Work; This PR closes the PR #1066.; This PR closes the issue #1364.; This PR will hopefully close the discussion #1403. ## PR Checklist; - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1411:6354,simpl,simply,6354,https://su2code.github.io,https://github.com/su2code/SU2/pull/1411,1,['simpl'],['simply']
Usability,"ft2_c, class ModVort_c>; class SA_Base : public CNumerics {; public:; SA_Base() {}. void computeResidual() final {; ft2 = ft2_c::Compute(); S_hat = ModVort_c::Compute(2.0,10); }; };. // the term ""bsl"" stands for baseline; class ft2_bsl { static double Compute() { return 0.0; } }; ; class ft2_nonzero { static double Copmute() { return ...; } };; class ModVort_bsl { static double Compute(const double x, const int y){ return x*y; } };; class ModVort_Neg { static double Compute(const double x, const int y){ return x*y; } };; class ModVort_Edw { static double Compute(const double x, const int y){ return x+y; } };. /*-- Numerics preprocessing --*/; // From the config file (.cfg) determine which corrections/variations we have to use: ft2_variant, ModVort_variant, etc; // Create Frankenstein SA; if(ft2_variant==0 && ModVort_variant==0) numerics[i] = new SA_Base<ft2_bsl, ModVort_bsl>();; if(ft2_variant==0 && ModVort_variant==1) numerics[i] = new SA_Base<ft2_bsl, ModVort_Neg>();; if(ft2_variant==0 && ModVort_variant==2) numerics[i] = new SA_Base<ft2_bsl, ModVort_Edw>();; if(ft2_variant==1 && ModVort_variant==0) numerics[i] = new SA_Base<ft2_nonzero, ModVort_bsl>();; if(ft2_variant==1 && ModVort_variant==1) numerics[i] = new SA_Base<ft2_nonzero, ModVort_Neg>();; // so on. // Proceed to compute the turbulent sources residual as always; ```. ## Related Work; This PR closes the PR #1066.; This PR closes the issue #1364.; This PR will hopefully close the discussion #1403. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1413:6539,simpl,simply,6539,https://su2code.github.io,https://github.com/su2code/SU2/pull/1413,1,['simpl'],['simply']
Usability,ge total pressure and fixes to avg outlet pressure; - adding stagnation pressure output to SU2_DOT; - Merge pull request #146 from hlkline/temp; - Updated Entropy fix (now it is active).; - Another change in BC_Engine_Exhaust; - Updated CGNS in parallel; - Added runtime file; - Small typo; - Adjustment of the Entropy fix coefficient; - Bug in SU2_GEO; - Debug version with print statements.; - Updated release 3.2.7.1; - Small change; - Updated config file; - Code update; - MPI Status and Request fix.; - Another MPI Status/Request fix.; - Actuator disk update.; - Small update; - Initial implementation of pyramids and prisms for Tecplot binary.; - Small fix for Tecplot binaries. Closes #56. Closes #57.; - Removed extra allocation related to markers during partitioning.; - Non-working version; - Small update; - Updated memory deallocation.; - Merge branch 'feature_MarkerMax' into develop; - Time and date in the header.; - Small fix to the latest commit.; - Simplification of entropy correction; - Critical stability improvement.; - Minor release 3.2.7.2; - Fixing issues to run with the latest intel compiler; - Fix for Tecplot binary solutions for unsteady flows. Fixes #150.; - Now SU2 should work with the latest version of the Intel compiler.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Working on the O3 stuff; - Small change.; - Add another check to improve stability.; - Collection of improvements.; - Updated actuator disk; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Preliminary implementation of the Neg SA; - Minor updates; - Preliminary implementation of the Negative SA; - Bug fixing; - Fixed memory issued for very large meshes with ParMETIS.; - Clear evaluation of Vorticity and StrainMag; - Viscous limiter; - Updated RELAXATION_FACTOR; - RANS MG; - Partial fix to no MPI output; - Updated I/O; - Updated Adapt CFL; - Updated Adaptive CFL number; - Release 3.2.8; - Updated SetCFL_Number; - Small update; - Small,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:4626,Simpl,Simplification,4626,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,1,['Simpl'],['Simplification']
Usability,"gs mentioned above. However, the current implementation in develop only works correctly for PARAVIEW_MULTIBLOCK and for RESTART type output files. This is because in the case of PARAVIEW_MULTIBLOCK, the additional file output using the iteration number in the filename, is performed in the switch case block directly. . For all other output files, the switch case block only generates the correct filename with the iteration number appended. After the switch block, it is (wrongly) checked if (and only if) the WRT_RESTART_OVERWRITE flag is set to NO. If so, the additional file is written. Therefore, this logic only works correctly for RESTART files (and PARAVIEW_MULTIBLOCK files, because for that format, the file dump is independent of the file dump after the switch block. . The proposed fix here introduces a local boolean (doWriteIterFile) that acts as a switch for the additional file dump. It is set in the switch case block and afterwards it is checked if this variable is true or false. Based on this value, the file dump is executed or not. Furthermore, the fix introduces and corrects some comments to make the function easier to understand. ## Related Work; The flags are already available in the develop branch as config options but they don't work as expected. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2036:2185,guid,guide,2185,https://su2code.github.io,https://github.com/su2code/SU2/pull/2036,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"gy terms? I'm talking about terms like:. ![molecular and turbulent diffusion of tke](https://latex.codecogs.com/gif.latex?\left(&space;\mu&space;&plus;&space;\frac{\mu_t}{\sigma_k}\right)\frac{\partial&space;k}{\partial&space;x_j}). This term is listed both in Wilcox's ""Turbulence Modeling for CFD"" book and the [NASA TMR website](https://turbmodels.larc.nasa.gov/implementrans.html). NASA's page basically just copies what Wilcox states, and then says ""This expression in the energy equation is also sometimes neglected."". Rumsey clarified his position in a [2009 report](https://ntrs.nasa.gov/archive/nasa/casi.ntrs.nasa.gov/20090015399.pdf), saying that ""when considering high Mach number compressible boundary layer flows using k-omega models, the conservation of total energy should be configured to include the contribution of the turbulent kinetic energy k... It is sometimes common practice to ignore these effects, which is certainly justified when k is signficantly smaller than the square of the mean velocity."" . But he also states: ""Note that in CFL3D, the turbulence models are decoupled from the mean flow equations, k is *not* included in the definition of the total energy, and the diffusion of k does not appear in the mean flow energy equation for its models tested here."" He also omitted the 2/3 \rho k term in both the production and the turbulent stress tensor, and found that it made little difference even for M=10 wall-bounded flows. SU2's version of SST is in a weird spot right now, where it's using the turbulent kinetic energy in some places but not others. It's using it here:. + Total energy definition; + Production of turbulent kinetic energy; + RANS evolution equations; + Eddy viscosity definition. But not here:. + Molecular and turbulent diffusion of turbulent kinetic energy in the total energy conservation equation; + Isotropic part of the turbulent stress tensor. Is there any rationale behind this split, aside from simply stating that ""this seems to work?""",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/797#issuecomment-548886007:2122,simpl,simply,2122,https://su2code.github.io,https://github.com/su2code/SU2/issues/797#issuecomment-548886007,1,['simpl'],['simply']
Usability,"h the volume results, but the amplitude of the lift coefficient is too small. I guess that the velocities are not set properly / mixed up / require a call to some update function or similar. **I'm stuck at this point. Does someone have any idea what I'm doing wrong?? I feel that I am missing an important step here...**~~; - [ ] ~~final test: mesh deformation + moving grid + gust~~; - [x] final test: mesh deformation + gust. Apart from the steps above, the following questions / tasks remain:; - [ ] ~~The the Split Velocity Method (classes SetWind_GustField and CSourceWindGust) is not used in SU2 as far a I understand and for all gust types, the inputs are zero. Instead, the Field Velocity Method is used, but when trying to remove the functions SetWindGust and SetWindGustDer, I broke the code elsewhere. In order to enable 3D meshes, I simply set the outputs to zero for now. I believe that we should clean up the code, but my C++ skills are the limiting factor here, so I need some help with that.~~ --> In a new, dedicated pull request. ## Related Work; The gust encounter for 3D meshes was requested in #1319 and in the Forum https://www.cfd-online.com/Forums/su2/234021-gusts-3d.html and https://www.cfd-online.com/Forums/su2/225914-no-slip-condition-3d-gust.html. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1954:4218,guid,guide,4218,https://su2code.github.io,https://github.com/su2code/SU2/pull/1954,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"he current base turbulence solver.; ```; ; Right now the only things I did were (i.e. don't fear the large diff); - create CScalarSolver/Variable files/classes and scalar_convection/diffusion/sources files and fill them with the contents of the CTurb* or turb_* files.; - Make CScalarSolver/Variable the parent class of CTurbSolver/Variable; - Delete pretty much everything from CTurb* or turb_* files except for some constructors. So far it compiled and some local regression testing showed no problems, lets see what the CI pipeline has to say about this. Now with this additional class introduced the actual works begins:; - figure out what is a reasonable interface in CScalar* to unify transported species and turb-models (and the other solvers probably); - code this common interface and push all turb-specific things back into the respective files (that is why I didn't `git mv` ). In order to keep this somewhat limited I would focus on porting the Turbsolvers to the new structure (however that might look, but looking at #1223 is what I'll do first) and maybe a simple transported passive scalar or so. We want the turb solver to be integrated under that Scalar-class which is arguably what most/all people use, that's why I want to have in this work at the beginning. We also have quite a few RANS Testcases so it is directly visible if something in the actual computation is changed. In case there are comments, ideas foreseeable stepping stones from experience please let me know here. ## Related Work; #777 by @economon which is the initial push towards this separate scalar solver class for additionally transported scalars (not merged); #1223 by @danielmayer @bigfooted which builds up on #777 and extends it to its needs (but does not support the turb solvers e.g.); #1226 by @oleburghardt - In this PR is a discussion on creating the structure which this (and following) PR('s) try to achieve; #1332 by @mheimgartner - implementing multi component flow (or analytic mixing propertie",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1330:1430,simpl,simple,1430,https://su2code.github.io,https://github.com/su2code/SU2/pull/1330,1,['simpl'],['simple']
Usability,"he preconditioner and solving the linear system.; Linear algebra routines called within this section have _worksharing_ constructs instead of _parallel_ ones, i.e. the work is distributed by however many threads arrive to that routine. This also makes the routines safe to call in serial.; The only ""dangerous"" things to do in parallel are to: manage memory for a shared object (multiple threads call `new` but there is only one shared pointer on which to call `delete`); writing to the same memory locations concurrently.; I tried to make the first issue debugable by asserting that the initialization routines of CSysMatrix and CSysVector are only called by the master thread.; For the second issue I made the associated classes as const-correct as possible, that should at least make someone think twice before changing a member variable of those classes. The risk is still there for input variables as an algorithm development aspect... For example `MatrixVectorProductTransposed` cannot be made thread-parallel as simply/naively as its normal counterpart. ### Communication Model; The MPI + Threads communication model is very simple, currently only the master thread calls MPI routines (including `Error`), this requires thread barriers before and after the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does not seem to be a significant bottleneck.; _Worksharing_ constructs have implicit barriers at completion, for CSysVector routines I used `nowait` modifiers, it is safe to call those routines in sequence since the loop sizes, and static work scheduling specifications are identical.; However, routines that access a CSysVector in a different way, should have an explicit barrier before using the vector (or risk having undefined behaviour). You will see these barriers on entry to matrix-vector product, and every `ComputeXXXPreconditioner` (if you don't, let me know xD). I think",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/830#issuecomment-562646766:1597,simpl,simply,1597,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766,1,['simpl'],['simply']
Usability,"he refactoring he was doing and will try to bring as much as possible into this, but I need to do it in smaller steps. Now this PR deals with some of the aforementioned refactoring, namely:; - CG, BCGSTAB, and GMRES have their working vectors and matrices as members of CSysSolve and allocate them only on the first call.; - CSysSolve is now a member of CSolver and CVolumetricMovement.; - BCGSTAB uses two fewer vectors than before and the ""p"" and ""v"" vectors are initialized to 0 instead of ""b"" (I think this was a small bug?).; - CSysSolve takes a ""mesh deformation"" flag at construction so that Solve can be called by CSolver and by CElasticityMovement, before the latter decided what Krylov method to call in place, kind of duplicating what is done by Solve. I did not do the same for CVolumetricMovement because there the differentiation is handled differently. This also allowed SetExternalSolve_Mesh to be merged with SetExternalSolve.; - Now when CSysSolve sets the external solve it passes itself (*this*) so that CSysSolve_b re-uses it in the reverse path instead of instantiating a CSysSolve every time.; - Part of CSysSolve_b::Solve_b was moved to CSysSolve::Solve_b to allow CSysSolve_b::Solve_g to be dropped. CSysSolve_b::Solve_b now simply prepares the RHS of the adjoint system and calls Solve_b on the pointer it gets through the AD data handler. I decided not to shoehorn Solve_b into Solve as that would be a bit unreadable. I will now start tackling the templating part, and once I can demonstrate that that works, start bringing in Tim's refactoring. ## Related Work; #648 ; *feature_template_linear_solver*. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/650:2592,simpl,simply,2592,https://su2code.github.io,https://github.com/su2code/SU2/pull/650,1,['simpl'],['simply']
Usability,"he tests I did over at #1388 where I will also add a inc+turb+2species-with-2-inlets reg test (and hopefully also non-dimensional). Inlet file non-dimensionalization: The inlet file writes dimensional values for the mean flow, and the values that are read are non-dimensionalized in the BC_Inlet routine itself -> I personally find this approach quite good, but I dont believe the SA+SST are adhering to that. See also [this cfd-online issue](https://www.cfd-online.com/Forums/su2/239313-inlet-profile-sst-nondimensional-treatment.html). I will try to fix this here as well.; - nu tilde is non-dimensionalized by multiplying with densityRef/viscosityRef (which I guess from the code); - TKE by multiplying with 1/VelocityRef^2 (which I guess from the code, and would fit with Feng Liu Non-Dim paper i have); - Omega ~~by multiplying with length_Ref/VelocityRef (which would fit with Feng Liu) or~~ by multiplying with ViscRef/(rhoRef*VelocityRef^2); Any info on this is appreciated.; My approach would be non-dimensionalize in the BC_Inlet routine for Turb as well to stay consistent with the mean flow, For the mean flow it has to be done like that because the meaning of the values is determined in the inlet routine. Otherwise one could do all that consistently a bit earlier. I have to remember to add a little hint to the laminar step tutorial to state that the inlet file should be dimensional. ## Related Work; https://github.com/su2code/SU2/pull/516 initial implementation. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1427:2064,simpl,simply,2064,https://su2code.github.io,https://github.com/su2code/SU2/pull/1427,1,['simpl'],['simply']
Usability,"here a full ""solver"" status, and uses the FEA Elasticity classes as its basis. The pseudo-linear elastic solver now always refers to the initial, undeformed geometrical discretization, therefore ensuring that the problem remains traceable to the original mesh, and that when volumes are computed to deform the mesh, the initial quality of the elements is observed. . With this framework, the wall distances only need to be computed once for distance-based stiffness, and the stiffness matrix is now symmetric after applying BCs so conjugate gradient can be used to compute the mesh deformation. The adjoint sensitivities can now be propagated down to the surface mesh points without the need to use DOT, although further work is needed to propagate them to the FFD points or other DV of choice. I tried to keep config options simple: the new mesh solver is enabled using; ` DEFORM_MESH = YES `; and the relevant markers which will move and introduce deformations into the domain are set using; `MARKER_DEFORM_MESH= ( wall )`; Hopefully, previous mesh deformation structures can be deprecated and removed soon, but we will need to adapt the rigid/imposed boundary deformation of other kinds of grid movement. I kindly ask for your help in there, as I'm not very familiar with some of the legacy code for this purpose. Additionally, in this PR I have done some refactoring so the AD-based adjoint routines are accessible from the python-wrapped version of the code. The SWIG wrapper now compiles the AD binaries and interfaces directly to sensitivity information, which should make it much easier to integrate SU2 within any python-based optimization framework. . ## Related Work; - Some work will be needed to adapt the new contiguous variable structure by @pcarruscag in #753; - I have added a couple of regression tests, but I will add tutorials once #724 is merged. As of now, a bug reported in #713 prevents me from adding any meaningful tutorial - but that should be fixed in #724 according to @ta",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/760:969,simpl,simple,969,https://su2code.github.io,https://github.com/su2code/SU2/pull/760,1,['simpl'],['simple']
Usability,"his PR applies the following bugfixes:; - correct retrieval of the wall roughness in a multizone setup, the original intention of this PR; - the non-MPI substitute for `SU2_MPI::Allgatherv` and `Alltoallv` now takes the displacement into account; - fix #1293, adding a missing `#include` statement . Below is the original PR description. ## Proposed Changes; I think that currently the roughness at the closest wall is retrieved in a wrong way for multizone setups. The current structure is like this:. def CGeometry::ComputeWallDistance:; for each iZone:; construct an ADT which stores the markers of iZone; for each jZone:; call CPhysicalGeometry::SetWallDistance to jZone geometry which \; reduces the stored wall distances of jZone's points according to iZone's markers in the ADT and\; sets wall roughnesses of jZone's points according to data from jZone's geometry. The issue I perceive here is that the closest wall in the ADT, identified by the `markerID`, belongs to `iZone`. `iZone`'s geometry and config must therefore be an additional argument to `CPhysicalGeometry::SetWallDistance`. We must not use the wall roughness from `jZone`'s geometry and config associated to the markerID, as it is currently done. ## Related Work; ?; ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1286:1477,guid,guide,1477,https://su2code.github.io,https://github.com/su2code/SU2/pull/1286,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,http://adl-public.stanford.edu/docs/display/SUSQUARED/Coding+style+guidelines,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/89:67,guid,guidelines,67,https://su2code.github.io,https://github.com/su2code/SU2/issues/89,1,['guid'],['guidelines']
Usability,"iVar, lim*(lim+2.0)/(lim*lim+lim+2.0));; }; }; }; ```; In terms of algorithm, for each point we find the min and max neighbor values and the min (negative) and max (positive) projections, those are then combined in a final `min(2, max/max, min/min)` to which the limiter function is applied (this would also be applicable to Venkatakrishnan-[Wang] limiters).; This is equivalent to the edge-loop, if statements are not required as due to cells being closed, if the positive projection is not zero, the negative one will also not be zero, therefore it is correct to always evaluate both ratios.; This algorithm only needs min and max neighbors as small local variables instead of large global ones due to the way those values are determined. This is where the memory from the extra adjacency information is recovered. Like @economon said, fusing the gradient kernel with the limiter kernel is trivial with these point loops, and I do not think it affects readability much since one can clearly tell ""what is what"" (I will not put it here but it really is a matter of copy paste), including the boundaries could be a bit more challenging, but I will give performance number nevertheless. **Performance summary**. | Code | Edge | Edge, SIMD on vars | Point | Point, SIMD on points |; | ---- | ---- | ---- | ---- | ---- |; | **Speed 1 core** | 1.0 | 1.75 | 1.25 | 2.0 |; | **Speed 4 cores** | 2.45 | 2.7 | 4.5 | 7.0 |. The basic point version does not lose to edge based because, contrary to gradients, it does not require duplication of computations while benefiting from sequential access to gradients.; Again the point-based implementation does really well in parallel, limiters are more compute intensive and so the scaling is almost perfect.; For reference, limiters are 1.9 times more expensive to compute than gradients with the reference edge version. With point loops, SIMD, and in parallel, gradients and limiters cost the same. If we consider the combined cost of gradients and limiters, and co",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530593912:10014,clear,clearly,10014,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530593912,1,['clear'],['clearly']
Usability,"ialization part, k is considered depending on whether or not the SST model is used for Total Energy. In CEulerSolver.cpp ; `bool tkeNeeded = (turbulent && config->GetKind_Turb_Model() == TURB_MODEL::SST);`; `if (tkeNeeded) { Energy_FreeStream += Tke_FreeStream; }; config->SetEnergy_FreeStream(Energy_FreeStream);`; `if (tkeNeeded) Energy_FreeStreamND += Tke_FreeStreamND;`. But In the flux calculation part, when calculating the speed of sound(a), using the total enthalpy(H). But, in this part consider only the kinetic energy. . Expressed mathematically ; ![image](https://user-images.githubusercontent.com/50565314/208861650-92b8cad6-5a1f-4742-952b-30d0187ae28b.png). but in the SU2 code using below. ![image](https://user-images.githubusercontent.com/50565314/208861902-ff614d53-d07e-4237-a04d-73a49ad5a55c.png). The speed of sound always has a slightly high value because TKE is not subtracted. See ""roe.cpp"" line 119 ~ 149. ; `RoeSoundSpeed2 = (Gamma-1)*(RoeEnthalpy-0.5*sq_vel);` ; This line might be changed roughly like : ; `RoeSoundSpeed2 = (Gamma-1)*(RoeEnthalpy-0.5*sq_vel-k);` . There seem to be two possible ways to this problem.; 1. Subtract TKE when the speed of sound calculation; 2. Store e(static energy) or k in primitive variables; 3. ; I'm not sure which is clear and easy. **Bug report checklist**; *Please make sure that you have followed the checklist below, many common problems can be solved by:*. - [ ] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [ ] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [ ] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: [e.g., Linux (Redhat 6.6)]; - C++ compiler and version: [e.g., g++ (GCC) 4.8.5]; - MPI implementation and version: [e.g., OpenMPI 3.0.0]; - SU2 Version: [e.g., v7.4.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1851:2348,clear,clear,2348,https://su2code.github.io,https://github.com/su2code/SU2/issues/1851,1,['clear'],['clear']
Usability,"ibe the bug**; In my transient, compressible simulation the achievable residuals strongly depend on the type of boundary condition that is specified for a wall:. MARKER_ISOTHERMAL / MARKER_HEATFLUX (h=0):; rms_density < 1e-8; rms_energy < 1e-3. MARKER_HEATTRANSFER; rms_density > 1e-5; rms_energy > 1e-1. Here the development of the overall residuals can be seen. (other residuals look similar).; ![grafik](https://user-images.githubusercontent.com/42602495/210543380-b231a0a1-6ccf-49cd-94aa-b84ffa901815.png). The temperature development along one of the walls can be seen here and is what I'd expect.; ![grafik](https://user-images.githubusercontent.com/42602495/210544363-b4302822-91fe-411a-958c-e603fddec227.png). A more detailed analysis of local residuals shows, that the energy residuals are the largest directly at the convective wall:; ![grafik](https://user-images.githubusercontent.com/42602495/210545535-70fca515-c2e0-45ed-bed8-1fd54dab0a11.png). I've tried various numerical schemes, limiters, linear solvers and gradient reconstruction methods, but none of these settings seem to improve convergence with convective BCs. I am not sure if this is an actual bug or simply a limitation due to the way the convective BC is implemented. So far the solution looks realistic, but since my case is very sensitive to cumulative heat losses this may possibly have an influence on the final outcome. **Case summary**. - Solver: RANS, transient; - Domain: 2D Axisymmetric; - Convection: SLAU2, NTS_DUCROS; - Gradients: GREEN_GAUSS; - Turbulence: SST V2003m, Sustaining; - Slope Limiter: Venkat_Wang; - Time: 2nd Order. Full setup, mesh and outputs can be found [here](https://tumde-my.sharepoint.com/:u:/g/personal/bauer_christian_tum_de/EVbBCu8i8b9FuXNl4QyC0icB3mnnd2Ac3dRFAlRI-HrVSg?e=7nA0Vt). **Desktop (please complete the following information):**; - OS: SLES 15.1; - C++ compiler and version: Intel 2021.4; - MPI implementation and version: intelMPI 2019; - SU2 Version: current master branch",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1872:1184,simpl,simply,1184,https://su2code.github.io,https://github.com/su2code/SU2/issues/1872,1,['simpl'],['simply']
Usability,"il now, the concept “Zones” could refer to either different subdomains in space (interacting with each other over a common interface, e.g. for conjugate heat transfer, turbomachinery or FSI), or to copies (or instances) of the same domain evaluated under different conditions (e.g., for Harmonic Balance there are several time instances). . The previous concepts are now separated, allowing for a consistent definition of zones and instances in the code which can potentially be used simultaneously, and without the loss of any functionality. The proposed scheme is better explained in the attached [diagram](https://github.com/su2code/SU2/files/1955507/zones_vs_instances.pdf). ## Related Work. - Further work will involve improvements in the config definition, to make it more clear for the community of users of SU2 (particularly in cases involving multiple zones/instances). The output will also be reorganized, to be consistent with the abstraction of the rest of the code. - I have adapted the HB problems to the new definition, so @arubino and @sravya91, if you have some time please do double check that this PR looks good to you! Apart from the regression tests, which should be passing, I have also double checked that the file output for these particular problems wasn’t affected by the changes. - Additionally, I have removed some warnings that were in the code from a recent PR. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/528:1957,guid,guide,1957,https://su2code.github.io,https://github.com/su2code/SU2/pull/528,1,['guid'],['guide']
Usability,"implified / optimized by adopting a dense matrix format, for example:; - This snipped from the viscous numerics refactoring`for (iDim = 0; iDim < nDim; iDim++) {; TauElem[iDim] = 0.0;; for (jDim = 0; jDim < nDim; jDim++); TauElem[iDim] += tau[iDim][jDim]*UnitNormal[jDim];; }` would simply become `TauElem=tau*UnitNormal`; - Cumbersome allocations like `tau_jacobian_i = new su2double* [nDim];; for (iDim = 0; iDim < nDim; iDim++) {; tau_jacobian_i[iDim] = new su2double [nVar];; }` become `Matrix tau_jacobian_i(nDim,nVar);` and the cleanup is dealt with by the destructor of the object automatically. Now to answer some questions.; @juanjosealonso @erangit LAPACK and BLAS are indeed the standard, so much so that most (all?) newer libraries will call their routines behind the scenes.; However they considerably simplify the user interface by encapsulating the aforementioned construction/destruction and by exposing natural ways of manipulating the matrices, e.g. access entire rows, columns, blocks, etc.; Another issue with using BLAS routines is that we then need to provide a portable version that can be differentiated with CoDi or to implement the exact differentiation (similar to what is done in the ""solve_b"" routines). @vdweide that is not an issue with Eigen because everything is templated and therefore compatible with any type or class that overloads the appropriate arithmetic operators.; I have used it for over 2 years and I can attest to its compatibility with AD tools (I've tried 3), and speed when linked with a BLAS library, their native implementations are also very good, peeking inside their code... you can tell they know what they are doing. P.S. I feel this post needs a disclaimer, I am not affiliated in any way to Eigen, my motivation is not to promote their work (but I obviously think they deserve it). I genuinely think adopting an algebra library (that is compatible with AD) would greatly simplify our work and further drop the entry barrier to new developers.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-459653772:3074,simpl,simplify,3074,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-459653772,1,['simpl'],['simplify']
Usability,"in essence both are performing similar duties, but people should express their opinions. With that said, how about a boolean such as USE_WALL_FUNCTIONS / USE_WALL_MODEL (YES or NO) with an optional argument WALL_FUNCTION_TYPE / WALL_MODEL_TYPE that can taken one of many pre-specified values that can be added as these options are developed and tested? Certainly options like STANDARD_WALL_FUNCTION, ADAPTIVE_WALL_FUNCTION, SCALABLE_WALL_FUNCTION, compressible and incompressible versions, and even EQUILIBRIUM_WALL_MODEL and NONEQUILIBRIUM_WALL_MODEL are things that are likely to be in the code in the near future. Thoughts?. Juan. On Sep 5, 2017, at 2:27 PM, Thomas D. Economon <notifications@github.com<mailto:notifications@github.com>> wrote:. @petebachant<https://github.com/petebachant>: the paper that I linked earlier on this thread had some fairly simple examples similar to the one you propose.. different flat plates and so on with varying y^+. You can likely reuse the grid(s) in the TestCases repo. @vdweide<https://github.com/vdweide>: it was very simple in this first implementation. It checks for a single boolean for whether or not to apply wall functions (WALL_FUNCTIONS= YES or NO, https://github.com/su2code/SU2/blob/43b8a4015c4b09b01d78e4243d32011c663c2b70/SU2_CFD/src/solver_direct_mean.cpp#L15339), and then assumes they should be applied to all no-slip walls (heat flux or isothermal, https://github.com/su2code/SU2/blob/43b8a4015c4b09b01d78e4243d32011c663c2b70/SU2_CFD/src/solver_direct_mean.cpp#L16653). This could of course be made more specific for individual markers using a config structure like MARKER_MONITORING to list them, or by making a dedicated BC type for it potentially. —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/399#issuecomment-327308587>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxJUhyEBSuSzHV1a7BZM_Frxbtb5sks5sfbzUgaJpZM4NvG6w>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-327313634:1408,simpl,simple,1408,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-327313634,1,['simpl'],['simple']
Usability,"inar premixed flames in low Mach number flows. The implementation is based on a flamelet progress variable approach - i.e., the combustion chemistry is parameterized with scalar quantities for which scalar transport equations are solved. The scalars are then used to look up scalar source terms, transport -, and thermodynamic quantities from a lookup table. The lookup table is compiled from one-dimensional flame simulations using more expensive chemistry models - typically finite rate mechanisms. In this implementation we introduce 2 additional transported scalars: the progress variable **c** and the total enthalpy **h**. All fluid properties like density, viscosity, temperature, diffusivity, reaction source terms, etc. are obtained from a lookup table that is made by the user with external 1D detailed chemistry codes like Cantera. Since temperature is now a dependent variable, we do not need to solve the regular temperature equation. However, We keep the SU2 temperature field and simply write our lookup temperature T(c,h) into this field. . As a 'limiting case', a nonreacting passive scalar transport equation has also been implemented. All fluid properties for this passive scalar are constant, but this passive scalar can be easily extended to model nonreacting mixing flows of two fluids with different properties. This model has also been verified to work together with turbulence, although no turbulence chemistry interaction has been implemented for this WIP. . ## Related Work; This PR implements a generic scalar transport framework which can be aligned with other physics models that make use of transported scalars, e.g. turbulence models. It furthermore implements a generic lookup table framework that can be used as a basis for lookup table based physics models, such as real gas models. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parame",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1223:1061,simpl,simply,1061,https://su2code.github.io,https://github.com/su2code/SU2/pull/1223,1,['simpl'],['simply']
Usability,"inf| -inf| 0.000000| 2.232692| -inf|; | 1| -3.281025| -inf| -inf| 0.000000| 3.198384| -inf|; ...; | 9531740| -11.999999| -inf| -inf| -0.006045| 1.258662| -inf|; | 9531741| -12.000000| -inf| -inf| -0.006045| 1.258662| -inf|; | 9531742| -12.000000| -inf| -inf| -0.006045| 1.258662| -inf|; ; ----------------------------- Solver Exit -------------------------------; All convergence criteria satisfied.; +-----------------------------------------------------------------------+; | Convergence Field | Value | Criterion | Converged |; +-----------------------------------------------------------------------+; | rms[Rho]| -12| < -12| Yes|; +-----------------------------------------------------------------------+. The density plot is; - different from the original `issue_simplified` singlezone solution with implicit Euler and CFL=1000. ; - similar to the `issue_simplified` multizone solution with implicit Euler and CFL=0.1. . Similarly, the TKE plots:; - `issue_simplified` singlezone implicit Euler CFL=1000; ![tke-simplified-singlezone-impliciteuler](https://user-images.githubusercontent.com/72806890/140887227-fc2ed584-53cf-413d-b5ad-18d1a12f5e4a.png); - `issue_simplified` singlezone explicit Euler CFL=0.1; ![tke-simplified-singlezone-expliciteuler](https://user-images.githubusercontent.com/72806890/140887289-0d8725a2-e51b-4704-bdae-a51b492949bf.png); (it is ""red"" throughout the domain, except for the wall marker); - `issue_simplified` multizone explicit Euler CFL=0.1: (similar image, ""red"" everywhere except wall). **Thus, the difference in solutions observed above is due to the choice of implicit vs. explicit Euler and CFL, and not due to problems regarding the interface.**. Am I doing something wrong in the explicit Euler [cfg file](https://seafile.rlp.net/d/bb0fbb16eb414263b642/files/?p=%2Fsinglezone-simplfied-expliciteuler-cfl01.cfg&dl=1), whose diff to the [SU2/TestCases/rans/naca0012/turb_NACA0012_sst.cfg](https://github.com/su2code/SU2/blob/v7.2.0/TestCases/rans/naca0012/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414#issuecomment-963921195:1838,simpl,simplified-singlezone-impliciteuler,1838,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414#issuecomment-963921195,1,['simpl'],['simplified-singlezone-impliciteuler']
Usability,"ion, the polymorphic overhead will be reduced to a single call (ComputeResidual), all auxiliary functions (like the ones that live in CNumerics) will be forcefully inlined, no useless copies of data (no more numerics->SetBlaBla).; - Compile time nDim/nVar, which will: a) avoid heap allocations; b) allow effective loop-unrolling (also during the writes to CSysMatrix).; - Allow low-overhead composition, e.g. have one CRoe for Euler and one CRoeVisc for NS to fuse convective and viscous residuals (without copy pasting code).; - A lot more readable, those cryptic V_i[iDim+1] need to go (somehow...). To achieve all this, the ""CNewNumerics"" will work as a template (obvs) decorator/visitor.; A visitor in the sense that the solver calls the numerics and gives it (read-only) access to all its data, the object pulls whatever it needs directly and there is no need for numerics->SetBlaBla.; A template decorator in the sense that the class can be augmented simply by inheriting from another, along the lines of `class CRoeVisc : public CRoe, public CVisc` (to allow fusing residual and Jacobian contributions).; All this needs to be done with templates for the ""minimal indirection"" requirement. Which means for each numerical method we will have 4 explicit template instantiations (Euler2D, Euler3D, (RA)NS2D, (RA)NS3D) but in the end these are still polymorphic objects that will be instantiated by some factory function (i.e. it will look clean, especially because I will not port all methods in one go xD). The template machinery to support this is actually not too crazy:; ```c++; #include <array>; #include <cmath>. // An example type to use instead of the container that stores solution data for all vertices.; struct SolutionContainer; {; std::array<double,3> velocity;; std::array<double,3> areaVector;; };. using ResultType = double;. // We want classes with this interface.; class VirtualInterface; {; public:; virtual ResultType Compute(const SolutionContainer&) const = 0;; };. // The Co",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-622941617:1476,simpl,simply,1476,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-622941617,1,['simpl'],['simply']
Usability,"ions.; My issue is related to that in the #948. Actually, I am in the situation very similar to [https://github.com/su2code/SU2/issues/948#issuecomment-619332650](url) :. > ```; > Traceback (most recent call last):; > File ""/dfs/user/takashi279/miniconda3/envs/temp_su5/bin/mesh_adaptation_amg.py"", line 38, in <module>; > import SU2; > File ""/dfs/user/takashi279/miniconda3/envs/temp_su5/bin/SU2/__init__.py"", line 14, in <module>; > from SU2 import amginria; > File ""/dfs/user/takashi279/miniconda3/envs/temp_su5/bin/SU2/amginria/__init__.py"", line 4, in <module>; > from .interface import *; > File ""/dfs/user/takashi279/miniconda3/envs/temp_su5/bin/SU2/amginria/interface.py"", line 41, in <module>; > import _amgio as amgio; > ModuleNotFoundError: No module named '_amgio'; > ```. and followed the instructions provided as in [https://github.com/su2code/SU2/issues/948#issuecomment-619334494](url):. > The _amgio extension should be built by default. I haven't had any issues on any of the machines I've built on, so I appreciate the feedback.; > ; > Just curious, are you running with python >=3.7? The shebang in all the SU2 python scripts; > ; > ```; > #!/usr/bin/env python; > ```; > ; > uses whatever python is set to in your environment variables, but pyamg/_amgio will only build/run with python >=3.7. Could you also check if the _amgio extension was installed in your site-packages (probably located in ~/.local/lib/python3.x/site-packages)?; > ; > If it didn't build/install, you could go into extensions/AMGIO/su2io and run; > ; > ```; > python3 setup.py build_ext && python3 setup.py install; > ```; > ; > If it did build/install, try the command; > ; > ```; > python3 $SU2_RUN/mesh_adaptation_amg.py -f invCyl.cfg -n 6; > ```. After doing `python3 setup.py build_ext && python3 setup.py install`, I encountered the following error:. > ```; > (temp_su5) takashi279@turing1:/dfs/user/takashi279/plasma/design/multiscale_adap3/SU2/externals/AMGIO/su2io$ python3 setup.py build_ext && pyt",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1699:1129,feedback,feedback,1129,https://su2code.github.io,https://github.com/su2code/SU2/issues/1699,1,['feedback'],['feedback']
Usability,"ironment locally on your machine. You can even download the compiled binaries produced on github and run them locally to further debug problems.; - It is faster and more flexible. Compiling and running all tests requires ~1h since a lot of things run in parallel now (e.g. building the base, reverse AD and forward AD binaries). There is potential to further speed things up by splitting the test case scripts into several files. All of that requires minimal work. Unfortunately there is no caching using ccache at the moment, but it is likely that github introduces this feature mid of november. ; - Additional tests like unit tests can make use of the same docker containers and can be easily set up by creating a new workflow file.; - We can easily add a deployment step to automatically create releases and/or nightly builds. **Note:** the linked docker containers are **only** for development/testing purposes. Hence we cannot give any support in this regard. For production use it is recommended to use singularity containers. But: the docker containers can be used as basis layers for singularity. I will get back with more information on that topic. ~~I had to change regression test values of two cases since apparently they are compiler dependent.~~ I changed it to the same versions as we have on Travis. There will be some documentation on how to use the containers locally soon. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/806:2044,guid,guide,2044,https://su2code.github.io,https://github.com/su2code/SU2/pull/806,1,['guid'],['guide']
Usability,"isoparametric interpolation, the method was incorrect for quadrilaterals (and the code too complex).; - Heavy refactoring of mirror (conservative) interpolation, the algorithm is perhaps more complex but the code is cleaner and 10x faster (this is in #833).; - Medium cleanup of CInterpolator (const correctness, unnecessary mpi ifdefs, etc.).; - Light cleanup of CDriver/CTransfer (deleting copy-pasted code); #### Other enhancements:; - Initialize the linear system solutions in CMeshSolver to speedup 3D FSI simulations, but especially to reduce overhead in FSI discrete adjoint cases.; - Too improve the quality of deformed grids in FSI cases with large ""out-of-plane"" displacements, a thicker layer of stiff cells can be imposed around the deforming boundaries. The thickness of the layer is defined by option `DEFORM_STIFF_LAYER_SIZE = [0]` when `DEFORM_STIFFNESS_TYPE = WALL_DISTANCE`. This allows refined regions around a wing tip to be dragged instead of sheared (which happens with the simple 1/x variation).; #### Other fixes:; - CFEASolver displacement boundary conditions (the weird bug detailed below).; - CFEASolver load integration for FSI simplified to fix mpi-related bug.; - Option CFL_REDUCTION_TURB having no effect.; - Restarts with moving wall cases work by default. I know, there's way too much stuff in this PR, but it was all required to make 3D FSI more reliable, and hey, it works!; ![3D_FSI](https://user-images.githubusercontent.com/38071223/78511123-34069a80-7792-11ea-950f-750cef80f1f8.png). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/914:2319,simpl,simplified,2319,https://su2code.github.io,https://github.com/su2code/SU2/pull/914,1,['simpl'],['simplified']
Usability,"ith SU2. libROM captures solution data and either computes the proper orthogonal decomposition (POD) over the data, or saves the solution ""snapshot"" in an hdf5 file for later POD computation. The POD matrix is also saved in an hdf5 file. ## Related Work; There are a couple projects using libROM:; - For projection-based model order reduction (PROM) in the branch feature_MOR; - It is also being used with the NEMO solver to further test the PROM capabilities; - libROM was used in a prior project that used the POD matrix as input to a neural network (to be published). - libROM also has other features, like help choosing the hyper-parameter nodes (a PROM step) and under development are black-box modeling methods like dynamic mode decomposition (DMD). Please let me know if you have any questions / comments / recommendations!. I have tested this on macOS and linux. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. ## Steps to Compile:. 1. Compile libROM; 2. Compile SU2 with the following meson options:; `./meson.py build --prefix=/your/prefix -Denable-librom=true -Dlibrom_root=/path/to/libROM`; 3. You may need to add the environment variable:; `export LD_LIBRARY_PATH=/path/to/libROM/build/:$LD_LIBRARY_PATH`; 4. You can test by adding `SAVE_LIBROM=YES` to the Quickstart config",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1310:1177,guid,guide,1177,https://su2code.github.io,https://github.com/su2code/SU2/pull/1310,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"ither. Some settings which are kinda optimal:; - Mach 0.6, AoA 2 degrees;; - SST (1st order);; - CFL 20 (higher and residuals would limit-cycle (regardless of linear solver settings); - Roe;; - MUSCL - Green-Gauss and Venkat-Wang;; - FGMRES + LU_SGS to 0.05 residual (about 3 iters on avg.);; - 2 levels of MG (1,1,2 iterations, all zeros for other stuff and 0.7 damping both ways);. The case is light on the linear solver and therefore stands to benefit the most from better data layout. Conversely, applications that can take higher CFL / or use central schemes will not benefit as much. **Running this from scratch to residual of 10^-8 on a couple of Xeon E5-2650v4 (24c total) shows a speedup of 1.4 and just over 10% lower memory usage.**; Those numbers will be better for an equivalent 2D case since the ratio of useful data to pointers and vtables is lower. After a celebratory dance I attempted to profile the code using [Perf](https://en.wikipedia.org/wiki/Perf_(Linux)) which I ""learned how to use"" from [a YouTube video](https://www.youtube.com/watch?v=nXaxk27zwlk&t=2052s).; In a nutshell compile the code as usual but with the `-fno-omit-frame-pointer` cxx flag (so perf can figure out the name of the functions, debug symbols are not required).; Run `perf record -g [command]` where command can be your usual `mpirun...` (I did not recompile my mpi with the aforementioned flag), for 2-3 minutes for hundreds of MB of record (hence the 500k mesh...).; Run `perf report -g ""fractal,0.5,caller""`, this will show % of time spent in a function relative to its caller and you can expand each function to see what are its children, grandchildren, etc. Like so:; ![image](https://user-images.githubusercontent.com/38071223/63290949-725e5080-c2ba-11e9-90aa-ffc834e726db.png); How cool is that!! Pro-tip hit ""a"" to look at some assembly, honestly sliced bread has nothing on perf. NOTE: By and large Perf is not an intrusive tool, as such the accuracy of the measurements is limited i.e. it is pr",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-522730951:2187,learn,learned,2187,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-522730951,1,['learn'],['learned']
Usability,"ix updates without colouring by setting only the off-diagonal coefficients and then setting the diagonal entries to the column sum.; It turns out that this is worse (by about 10%), maybe if the matrix were symmetric (row sum) but a column sum accesses blocks very far apart. Also we want to interleave compute and load/stores as much as possible to allow the CPU pipelining magic to mask the latency of the latter (even if it looks like you can only write the block after it is computed, CPU's have all kinds of buffers that allow the next loop iteration to begin while data is in flight). **Therefore colouring is the way to go.**. _Note: With vectorized numerics we insert blocks for 4 or 8 edges into the matrix at a time, the data for those inserts will be in a slightly weird format, which will make `SparseMatrix::updateBlocks` a bit harder on the eye, more on that later._. ## MUSCL Reconstruction; The MUSCL reconstruction, characteristic of upwind schemes, is the simplest building block to show the (negative) implications of storing the data as structures of arrays (SoA) on the performance of some operations.; Here is the most basic numerics you can think of, reconstruct and average (the dummy matrix loop was to benchmark the writes this is to benchmark the reads); ```c++; void computeResidual(size_t nVar,; size_t nDim,; const vector<size_t>& colorStart,; const vector<size_t>& edgeIdx,; const vector<pair<size_t,size_t> >& connectivity,; const Matrix& coords,; const Matrix& phi,; const VectorOfMatrix& grad,; const Matrix& limiter,; Matrix& residual); {; residual.setZero();. for(size_t color=0; color<colorStart.size()-1; ++color); #pragma omp parallel for schedule(dynamic,CHUNK_SIZE); for(size_t k=colorStart[color]; k<colorStart[color+1]; ++k); {; size_t iEdge = edgeIdx[k];; size_t iPoint = connectivity[iEdge].first;; size_t jPoint = connectivity[iEdge].second;. double d_ij[MAXNDIM];; for(size_t iDim=0; iDim<nDim; ++iDim); d_ij[iDim] = 0.5*(coords(jPoint,iDim)-coords(iPoint",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:5680,simpl,simplest,5680,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,1,['simpl'],['simplest']
Usability,"k's 2Temperature model. The system of equations to solve is the conservation of each chemical species mass, momentum, total energy and vibrational energy. Both inviscid and viscous simulations are available, respectively, solver NEMO_EULER and NEMO_NAVIER_STOKES. Most of the changes consisted in the addition of new files (listed below), and all the necessary changes in the high-level classes (drivers, integration, config).; ; new files concerning this solver:; output/CNEMOCompOutput.cpp; variables/CNEMOEulerVariable.cpp; variables/CNEMONSVariable.cpp; solvers/CNEMOEulerSolver.cpp; solvers/CNEMONSSolver.cpp; numerics/NEMO/convection/lax.cpp; numerics/NEMO/convection/roe.cpp; numerics/NEMO/convection/ausm.cpp; numerics/NEMO/convection/ausmplusup2.cpp; numerics/NEMO/convection/ausmpwplus.cpp; numerics/NEMO/convection/msw.cpp; numerics/NEMO/NEMO_diffusion.cpp; numerics/NEMO/NEMO_sources.cpp. Future/ongoing work is looking into making use of the CFluidModel class , introducing a new child class CNEMOGas to handle all mixture/thermodynamics/transport/chemistry related computations - follwing the generic SU2 structure. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [not yet] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1014:1660,guid,guide,1660,https://su2code.github.io,https://github.com/su2code/SU2/pull/1014,1,['guid'],['guide']
Usability,"k. This leads to a lot of if-conditions and special cases we have to consider and its hard to actually see what their overall task actually is. One example that I also used to demonstrate a possible solution is the Fixed CL computation. We have routines in CIteration and in CEulerSolver and they modify certain behavior of the baseline code. But its complicated to figure out which routines actually belong together, what they do and when they are called. ### Possible solution. To solve that problem I propose a modular structure that puts all routines that are responsible for a certain functional task together in the same class. At certain predefined places in the code they can modify things by overloading certain functions. These functions are called *Hooks*. What arguments these hooks provide can be different depending on where they are called. As an example I did a quick implementation of such a framework and defined a Fixed CL module. . Right now, I defined a global list of modules (with only one module currently). We can also define modules lists per class, e.g. for CDriver, CIteration, CSolver. But that would mean that we have to provide potentially more than one class per module, which kind of defeats the purpose again. I will add some further comments below. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/982:1806,guid,guide,1806,https://su2code.github.io,https://github.com/su2code/SU2/pull/982,1,['guid'],['guide']
Usability,"k.a. ""RPM"")](https://doi.org/10.1137/0730057) using the computational graph for precise derivative information. This preliminary result with one basis vector indicates that the procedure can be effective at very low additional cost (for n basis vectors, it mainly reduces to n scalar products of the current fixed-point iterate with the basis vectors, the Newton step is cheap as n is small). The residuals are obtained from a fully coupled adjoint CHT problem (2d heated cylinder in laminar flow) with a heatflux objective function. ![plot](https://user-images.githubusercontent.com/22639394/122736716-9ad18000-d280-11eb-9983-c2d47d434dc5.png). (Purple: No correction applied, Green/Blue: Usage of 1-dim. basis after extraction of one basis vector at around 500 iterations, Yellow: MPI run with two processes using the manual but MPI-compatible Gram-Schmidt-QR-decomposition for identification of basis vectors.); ; **The code is WIP.** It needs a lot of additions, changes and testing, though the overall structure should be clear from what's already implemented. ToDo's:; - Remove Eigen dependencies, not needed anymore; - Add a meaningful testcase; - Add eigenvalue estimation / QR criterion values to screen and history output fields; - Implement a basisMaintenance()-routine; - Figure out a proper base class for both `CQuasiNewtonInvLeastSquares` and `CNewtonUpdateOnSubspace`; - Figure out further algorithmic strategies for multiphysics problems, now the default is to create the basis in the outer loop, and to apply it for corrections in the inner. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-bo",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1217:1579,clear,clear,1579,https://su2code.github.io,https://github.com/su2code/SU2/pull/1217,1,['clear'],['clear']
Usability,"linux-gnu/7.3.0/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: ../configure --disable-multilib --enable-languages=c,c++,fortran --prefix=/opt/ohpc/pub/compiler/gcc/7.3.0 --disable-static --enable-shared; Thread model: posix; gcc version 7.3.0 (GCC) ; mpicxx version:-------------------------------------------------; Using built-in specs.; COLLECT_GCC=/opt/ohpc/pub/compiler/gcc/7.3.0/bin/g++; COLLECT_LTO_WRAPPER=/opt/ohpc/pub/compiler/gcc/7.3.0/libexec/gcc/x86_64-pc-linux-gnu/7.3.0/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: ../configure --disable-multilib --enable-languages=c,c++,fortran --prefix=/opt/ohpc/pub/compiler/gcc/7.3.0 --disable-static --enable-shared; Thread model: posix; gcc version 7.3.0 (GCC) ; mpirun version:-------------------------------------------------; mpirun (Open MPI) 1.10.7. Report bugs to http://www.open-mpi.org/community/help/; python version:-------------------------------------------------; ~/miniconda3/bin/python; Python 3.9.1. *Give a clear and concise description of what the bug is and what you expect the behavior to be instead. Please provide enough instructions and data for a developer to reproduce the problem (config, mesh, commands, etc.). Please provide the smallest working example that reproduces the problem.*. **Bug report checklist**; *Please make sure that you have followed the checklist below, many common problems can be solved by:*. - [ x] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [x ] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [ x] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: [e.g., Linux (Redhat 6.6)]; - C++ compiler and version: [e.g., g++ (GCC) 4.8.5]; - MPI implementation and version: [e.g., OpenMPI 3.0.0]; - SU2 Version: [e.g., v6.2.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2265:2032,clear,clear,2032,https://su2code.github.io,https://github.com/su2code/SU2/issues/2265,1,['clear'],['clear']
Usability,location.; - Merge branch 'feature_MarkerMax' into develop; - Time and date in the header.; - Small fix to the latest commit.; - Simplification of entropy correction; - Critical stability improvement.; - Minor release 3.2.7.2; - Fixing issues to run with the latest intel compiler; - Fix for Tecplot binary solutions for unsteady flows. Fixes #150.; - Now SU2 should work with the latest version of the Intel compiler.; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Working on the O3 stuff; - Small change.; - Add another check to improve stability.; - Collection of improvements.; - Updated actuator disk; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Preliminary implementation of the Neg SA; - Minor updates; - Preliminary implementation of the Negative SA; - Bug fixing; - Fixed memory issued for very large meshes with ParMETIS.; - Clear evaluation of Vorticity and StrainMag; - Viscous limiter; - Updated RELAXATION_FACTOR; - RANS MG; - Partial fix to no MPI output; - Updated I/O; - Updated Adapt CFL; - Updated Adaptive CFL number; - Release 3.2.8; - Updated SetCFL_Number; - Small update; - Small change; - Small adjustments; - Minor changes; - Updated release 3.2.8; - MPI disabled by default in build. Added --enable-mpi flag to configure.; - Merged the ParMETIS implementation. Updated the build files.; - bootstrap; - Started parallel CGNS reader.; - Memory fix.; - Minor change; - Merge branch 'develop' of https://github.com/su2code/SU2 into develop; - Updated binaries; - Small change to configure.ac. Bootstrap.; - Small change; - Cleaning the code; - Updated grid deformation subroutine; - Fixing the mesh deformation; - Updated SU2_MSH; - Bug fixing; - Initial implementation of parallel CGNS reader. Works on 1 rank.; - Merged in recent changes to geometry_structure.cpp.; - Periodic BC working in serial; - Update option_structure.hpp; - Merge pull request #154 from su2code/fixCOptionEnumList; - Bug fixing (periodic bc);,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:5392,Clear,Clear,5392,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,1,['Clear'],['Clear']
Usability,"looks like there is an array overflow in solver_structure.cpp (line 2347). ` ; while (getline (solution_file, text_line) ) {; istringstream point_line(text_line);; ; /*--- Retrieve local index. If this node from the restart file lives; on a different processor, the value of iPoint_Local will be -1, as; initialized above. Otherwise, the local index for this node on the; current processor will be returned and used to instantiate the vars. ---*/; ; iPoint_Local = Global2Local[iPoint_Global];; if (iPoint_Local >= 0) {; ; /*--- The PointID is not stored --*/; //cout << iPoint_Local << endl;; point_line >> index;; ; /*--- Store the solution (starting with node coordinates) --*/; ; for (iField = 0; iField < nVar; iField++); point_line >> Solution[iField];; ; node[iPoint_Local]->SetSolution(Solution);; ; ; }; iPoint_Global++;; }; ` . I had a brief look at it and seems the issue can be solved by simply adding the condition ""&& iPoint_Global < geometry[iZone]->GetnPointDomain()"" to the outer while loop, but I'm not completely sure this is the best way to fix the code.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/325#issuecomment-262186418:900,simpl,simply,900,https://su2code.github.io,https://github.com/su2code/SU2/pull/325#issuecomment-262186418,1,['simpl'],['simply']
Usability,"lve this issue:; - Stop removing multigrid levels in CMultiGridGeometry::CMultiGridGeometry() or improve the function. Why do we need to check whether the ratio is below a certain level? We should just check if the coarse level is empty, i.e., no control volumes.; - When removing a MG level in CMultiGridGeometry::CMultiGridGeometry() subtract one to the index of the finest grid, i.e., config->SubtractFinestMesh();. What are your thoughts?. After solving the previous issues, with mpirun and depending on the number of cores to be used SU2 will still produce a segmentation fault when using Full MG. This problem is not present when using mpiexec. I traced it back and found that in CFVMFlowSolverBase<V, FlowRegime>::Friction_Forces the method GetNormal_Neighbor() from CVertex returns a non existing point. Before delving into the problem would be nice if you could corroborate these findings. My versions of mpirun and mpiexec are 3.1.3 and 3.3 respectively. ## Additional Work; Additionally I have corrected the description of the variable Convergence_FullMG in CIntegration.hpp. Related to this same variable, what is the definition of convergence for the full multigrid?; Further, this parameter, Convergence_FullMG, is set to false in CIntegration::CIntegration() and never updated i.e., there is no evaluation whether the FullMG has converged or not. Consequently, the function SetProlongated_Solution() in CMultiGridIntegration::MultiGrid_Iteration() is never executed. ## PR Checklist; - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1362:3243,simpl,simply,3243,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362,1,['simpl'],['simply']
Usability,"m_j = phiMax(jPoint,iVar);. const double eps = numeric_limits<double>::epsilon();. if(proj_i <= 0.0); {; lim_i = phiMin(iPoint,iVar);; proj_i = min(proj_i, -eps);; }. if(proj_j <= 0.0); {; lim_j = phiMin(jPoint,iVar);; proj_j = min(proj_j, -eps);; }. lim_i = (lim_i-phi(iPoint,iVar))/proj_i;; limiter(iPoint,iVar) = min(limiter(iPoint,iVar), lim_i);. lim_j = (lim_j-phi(jPoint,iVar))/proj_j;; limiter(jPoint,iVar) = min(limiter(jPoint,iVar), lim_j);; }; }. for(size_t iPoint=0; iPoint<nPoint; ++iPoint); {; for(size_t iVar=0; iVar<nVar; ++iVar); {; double lim = limiter(iPoint,iVar);; limiter(iPoint,iVar) = lim*(lim+2)/(lim*lim+lim+2);; }; }; }; ```; Something in the code above is a bit different from the implementation in SU2, namely:; ```C++; double lim_i = phiMax(iPoint,iVar);; if(proj_i <= 0.0) {; lim_i = phiMin(iPoint,iVar);; proj_i = min(proj_i, -eps);; }; ```; This is the bit of code that selects the right delta based on the sign of the projection and avoids division by zero, this less readable version does the same with one branch instead of three, simplifying ""if"" statements is essential for vectorization, so to make the comparison fair I used the same strategy in the scalar code. To make this post shorter I will show the SIMD and parallel version of the code right away. Trying to process multiple edges instead of multiple variables has all the problems I mentioned for the gradients, so again we use the trick of templating on the number of variables.; ```C++; template<size_t nVar>; void computeLimiters_impl(size_t nPoint,; size_t nDim,; const vector<size_t>& colorStart,; const vector<size_t>& edgeIdx,; const vector<pair<size_t,size_t> >& connectivity,; const Matrix& coords,; const Matrix& phi,; const VectorOfMatrix& grad,; Matrix& phiMax,; Matrix& phiMin,; Matrix& limiter); {; // initialize; #pragma omp parallel for schedule(dynamic,TARGET_CHUNK_SIZE); for(size_t iPoint=0; iPoint<nPoint; ++iPoint); {; #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); {; phiM",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530593912:3108,simpl,simplifying,3108,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530593912,1,['simpl'],['simplifying']
Usability,"metric formulation. In the baseline model, the only term that has an impact is:; ![image](https://github.com/su2code/SU2/assets/65549824/2afb2da5-4fb5-460d-86da-dfec60fb689f); Rewriting it in cylindrical coordinates, an additional source term is obtained:; ![image](https://github.com/su2code/SU2/assets/65549824/7e2a7f15-acae-49b7-9db7-7e65630c0045). In the Negative variant of the model, this source varies slightly due to the presence of $f_n$:; ![image](https://github.com/su2code/SU2/assets/65549824/fdb23203-1c0a-45ea-94ce-e0e6190293db). The compressibility correction also requires a new source. Rewriting; ![image](https://github.com/su2code/SU2/assets/65549824/a639b5a9-18a8-4c6a-aa5a-dfdac00a2e38); in cylindrical coordinates yields the new source; ![image](https://github.com/su2code/SU2/assets/65549824/2c2d7c80-2db3-4a6c-bdd8-68a5e76aaa46). For the other model variants, it looks like the modification of strain magnitude (done for SST) takes care of the differences, but I might be mistaken. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; #1565 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2197:1509,guid,guide,1509,https://su2code.github.io,https://github.com/su2code/SU2/pull/2197,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"nd swirl distributions across the propeller disc and is coupled to the SU2 solver. The blade loading and changes to the flow-field are calculated recursively. Propeller geometry details, airfoil characteristics, propeller speed and set blade angle are required as inputs. Using the thrust and power along the blade from BEM, and following the procedure of VLAD, axial and tangential velocities are imposed at the interface. BEM method is verified against the experimental results [Veldhuis, 2005] and found to be performing well. ## Related Work. This work was presented at; SU2 Conference 2022, 5--7 Sept 2022,; Propeller blade load calculation for actuator disk using blade element method.; https://www.youtube.com/watch?v=otM_Lz2MV4U. and published in; International Journal of Aeronautical and Space Sciences; https://doi.org/10.1007/s42405-023-00593-5. The grid file for the test case is in the new branch on the fork at; https://github.com/josy-nal/su2codeTestCases/tree/feature-actuatordisk-bem. This implementation is under active development seeking reviews, instructions and suggestions to meet SU2 code standards. References:. Saetta E, Russo L, Tgnaccini R (2020); Implementation and validation of a new actuator disk model in SU2.; SU2 conference 2020, virtual event. Veldhuis L (2005) Propeller-wing aerodynamic interface,; Ph.D. thesis, Delft University of Technology, Delft, Netherlands. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2142:2420,Guid,Guide,2420,https://su2code.github.io,https://github.com/su2code/SU2/pull/2142,1,['Guid'],['Guide']
Usability,"ng restarts for prescribed massflow in streamwise periodic simulations (primal and adjoint). The massflow is achieved by dialing a pressure drop which is written and read to/from the `flow.meta` file. That file was used mainly for fixed CL stuff as far as I am aware of. The story is not done though really with this one change. There is still the restart-should-contain-everything-in-the-first-iteration-for-the-adjoint-taping issue which is currently not the case ... and not super straightforward to solve -> see https://github.com/su2code/SU2/commit/c11354115757d673a771e04562e6920024e013a2 description for more info. (EDIT: I will not tackle the massflow adjoint part in this PR, as with the PerSurf output it contains enough stuff which I like to have merged); - I added a `weight` to heat-solid zone OF's; - when `pressure_drop` is used, the first two entries of `MARKER_ANALYZE` are used as out-inlet but more than two markers are allowed. This comes in handy with `FLOW_COEFF_SURF` imo; - Adding per surface output for multizone cases. Was not working before in the way that `_SURF[0]` fields were reported to be ignored. A regression test is updated for that.; - Little fix to the regression system where Testcase.py had unsuitable default values such that failing reg tests were reported passing. So I will continue fiddling a little bit with massflow restarts but i already successfully optimized with that setup so it is not completely useless. ## Related Work; #773 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1527:1763,simpl,simply,1763,https://su2code.github.io,https://github.com/su2code/SU2/pull/1527,1,['simpl'],['simply']
Usability,"ns"", CURRENT_FUNCTION);"" in the code. I am currently working on the optimization of axial turbine stage. I have revised the code for ENTROPY_GENERATION and Total toal efficiency output in the history output file and run the tutorial case ""transonic_stator_2D"" using ""shape_optimization.py"" successfully. But I failed to run ""discrete_adjoint.py -f xxx.cfg"" for turbiens stage optimization, whist the flow simulation using ""SU2_CFD xxx.cfg"" runs successfully. Seem the currect develop version is not applicable to the problem. **Describe the solution you'd like**; *A clear and concise description of what you want to happen.*. May I ask for the implementation of multizone discrete adjoint solve for turbomachinery? Or if there is any solution for it.; I found the work from Vitale's paper in 2020 includes such capability in SU2 at https://github.com/su2code/SU2/tree/ feature_turbomachinery, yet I fail to run the multizone case. **Describe alternatives you've considered**; *A clear and concise description of any alternative solutions or features you've considered.*. I would like to try FADO for alternatives and may concern about the solver of the discrete adjoint for multizone problems in turbomachinery will still be needed. . **Additional context**; *Add any other context or screenshots about the feature request here.*. Here is the function I have added for turbo coeffcient output in CFlowOutput.cpp:. void CFlowOutput::AddTurbomachineryCoefficients(const CConfig* config) {; ; if (!config->GetBoolTurbomachinery()) return;; /// BEGIN_GROUP: AERO_COEFF, DESCRIPTION: Sum of the aerodynamic coefficients and forces on all surfaces (markers) set with MARKER_MONITORING.; /// DESCRIPTION: Drag coefficient; AddHistoryOutput(""ENTROPY_GENERATION"", ""ENTROPY_GENERATION"", ScreenOutputFormat::SCIENTIFIC, ""TURBO_COEFF"", ""Entropy generation coefficient of the whole turbomachinery"", HistoryFieldType::COEFFICIENT);; /// DESCRIPTION: Lift coefficient; AddHistoryOutput(""TT_EFFICIENCY"", ""TT_EFFICIE",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1720:1346,clear,clear,1346,https://su2code.github.io,https://github.com/su2code/SU2/issues/1720,1,['clear'],['clear']
Usability,"ntly playing around. This new version has the same EOS as NIST. It also comes with a variety of bug fixes and improvements. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - The code generates quite a few warning when compiling on Debian 12, which uses GCC12 , but none were introduced in this commit. I tested the compilation using an Apptainer/Singularity container.; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - I changed the Python code, for which I saw no entry in the style guide.; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - I did not run it as I did not know about it, but I do not think it applies for this (though maybe it does); - [ ] I have added a test case that demonstrates my contribution, if necessary.; - Not necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.; - No documentation related to SU2 should be affected. I do have one question which is not directly related to this PR. I have an Apptainer/Singularity container for SU2 which has most of the bells and whistles. I saw that you have docker containers, but for HPC (and normal computers) Docker [can have a large performance penalty](https://www.youtube.com/watch?v=2FPB74YB-ng). Would you like for me to contribute my Apptainer recipes? . Any and all feedback welcome!. P.S: I did not know that even after updating the hash commit of CoolProp in the meson script, I also had to update the submodule, that is not very intuitive. In this current state, the Meson commit hash has little to no value if it gets changed independently afterwards :); P.P.S: I also did not know that SU2 v8.0 was going to be released this earlier, otherwise I would have tried to get it updated earlier!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2136:1955,feedback,feedback,1955,https://su2code.github.io,https://github.com/su2code/SU2/pull/2136,2,"['feedback', 'intuit']","['feedback', 'intuitive']"
Usability,"o identify the symmetry planes and mirror the flux through the faces. ; Blazek continues: ""The second methodology computes the fluxes for the halved control volume (but not accross the boundary). The components of **the residual normal to the symmetry plane** are then zeroed out. It is also necessary to correct normal vectors of those faces of the control volume, which touch the boundary. The modification consists of removing all components of the face vector, which are normal to the symmetry plane. The gradients also have to be corrected according to Eq. (8.40) [points 2,3,4 above]"". 1. Modify Green-Gauss and Least-Squares gradient computation for symmetry planes; -> This seems to work fine; 2. Fix normal components of edges connected to symmetry plane; -> This seems to work fine; 3. Fix residual components of velocity on the symmetry plane; -> This seems to work fine; 4. Multiple symmetry planes, including Euler walls; -> This seems to work fine; 6. multigrid; -> Works fine now that we use the agglomeration as in the paper of Diskin.; 7. grid movement; 8. -> Works fine with the new fix to the residuals (energy update). ## Related Work; #1168 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2194:2506,guid,guide,2506,https://su2code.github.io,https://github.com/su2code/SU2/pull/2194,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"ode>f1e993d</code></a> update artifact license</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/4881bfd3f27855c63733d8cfff17721cc0ad611f""><code>4881bfd</code></a> updating dist:</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/a30777e2653648a0a7bbd3efb5c96ef9131b96cc""><code>a30777e</code></a> <a href=""https://github.com/eggyhead""><code>@​eggyhead</code></a></li>; <li><a href=""https://github.com/actions/upload-artifact/commit/3a8048248f2f288c271830f8ecf2a1c5d8eb0e9a""><code>3a80482</code></a> Merge pull request <a href=""https://redirect.github.com/actions/upload-artifact/issues/511"">#511</a> from actions/robherley/migration-docs-typo</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/9d63e3f2f81d9dc4e13d83fc330408f8a94b79d1""><code>9d63e3f</code></a> Merge branch 'main' into robherley/migration-docs-typo</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/dfa1ab292d2fdd78d056187f11c568c16ab53de9""><code>dfa1ab2</code></a> fix typo with v3 artifact downloads in migration guide</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/d00351bf698398c17253d21cf8f90e57a344e14b""><code>d00351b</code></a> Merge pull request <a href=""https://redirect.github.com/actions/upload-artifact/issues/509"">#509</a> from markmssd/patch-1</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/707f5a7b71e0fb01c5df1e16e9679a3292606ef2""><code>707f5a7</code></a> Update limitation of <code>10</code> artifacts upload to <code>500</code></li>; <li><a href=""https://github.com/actions/upload-artifact/commit/26f96dfa697d77e81fd5907df203aa23a56210a8""><code>26f96df</code></a> Merge pull request <a href=""https://redirect.github.com/actions/upload-artifact/issues/505"">#505</a> from actions/robherley/merge-artifacts</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/upload-artifact/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2231:5122,guid,guide,5122,https://su2code.github.io,https://github.com/su2code/SU2/pull/2231,1,['guid'],['guide']
Usability,"ogramming may become an entrance barrier to new additions to the community. As I wrote in the preamble of #789:; ""But please participate even if you never heard of these topics, your opinion about readability and ""developability"" of the code is important! I think the code-style should be accessible to people starting a PhD (after they read a bit about C++...).""; I try to encapsulate and hide the tricky bits as much as possible to make the code as readable as possible, whether I am succeeding or not is for the community to decide, in all these PR's I've been pointing to the areas I think are trickier, if someone, anyone, feels they are absolutely incomprehensible please say something... either here, or trough slack, or by email (I think it shows in the commits) (I understand not everyone is keen on github exposure). > I'm aware that you have been doing very well at documenting the code and the various PRs, but I'd say we should try to find an strategy to ease the learning curve on potential new developers (maybe some developer tutorials? a collection of the comments/discussions on the PRs moved to the wiki? a list of links/useful resources?). I agree with documentation of broad design decisions, that is the intent of #789, and developer tutorials (how to implement a new X) once we are content with the restructurings, otherwise they will quickly go outdated... or actually...; We should probably first think about the answers to ""how to implement a new X"" and restructure/refactor as a function of that.; Based on previous efforts of maintaining wiki's updated while code is being developed, I much prefer this github style where you can clearly tell what version of the code the comments refer to. A collection of comments/discussions organized by topic and linked to a feature is somewhat what I had in mind when I opened a ""big PR"" (#824) with little branches such as this one, I can try to complete that with a list of links/useful resources, references as it were, good idea!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/843#issuecomment-577684728:5261,clear,clearly,5261,https://su2code.github.io,https://github.com/su2code/SU2/pull/843#issuecomment-577684728,1,['clear'],['clearly']
Usability,"ompilation & linking from both the master branch, and the latest release with the same result. The steps I followed here were:. 1. Meson configuration:; ```bash; ./meson.py build -Denable-autodiff=true -Denable-pywrapper=true -Dwith-mpi=enabled --prefix=/local/temp/DifferentiableProgramming/SU2/python-build --optimization=3 --buildtype=release; ```. 2. Building with ninja:; ```bash; cd build && ninja; ```. 3. Getting an error at the linking stage (the full command is at the bottom of the issue):4. ; ```bash; /usr/bin/ld: /usr/lib/x86_64-linux-gnu/libz.a(zutil.o): warning: relocation against `z_errmsg' in read-only section `.text'; /usr/bin/ld: /usr/lib/x86_64-linux-gnu/libz.a(deflate.o): relocation R_X86_64_PC32 against symbol `z_errmsg' can not be used when making a shared object; recompile with -fPIC; /usr/bin/ld: final link failed: bad value; ```; But looking at the linking command `-fPIC` is already used, so I am a little lost for advice here. . Does anyone have any intuition or suggestions what this could be due to?. **Desktop:**; - OS: Ubuntu 22.04; - C++ compiler and version: g++ 11.2.0; - MPI implementation and version: OpenMPI v4.1.4; - SU2 Version: master & v7.3.1. ### Full linking command. ```bash; Linking target SU2_PY/pySU2/_pysu2ad.so; FAILED: SU2_PY/pySU2/_pysu2ad.so ; g++ -o SU2_PY/pySU2/_pysu2ad.so SU2_PY/pySU2/_pysu2ad.so.p/meson-generated_pySU2ad.cxx.o SU2_CFD/src/libSU2core_AD.a.p/definition_structure.cpp.o SU2_CFD/src/libSU2core_AD.a.p/python_wrapper_structure.cpp.o SU2_CFD/src/libSU2core_AD.a.p/CMarkerProfileReaderFVM.cpp.o SU2_CFD/src/libSU2core_AD.a.p/fluid_CFluidModel.cpp.o SU2_CFD/src/libSU2core_AD.a.p/fluid_CIdealGas.cpp.o SU2_CFD/src/libSU2core_AD.a.p/fluid_CPengRobinson.cpp.o SU2_CFD/src/libSU2core_AD.a.p/fluid_CVanDerWaalsGas.cpp.o SU2_CFD/src/libSU2core_AD.a.p/fluid_CNEMOGas.cpp.o SU2_CFD/src/libSU2core_AD.a.p/fluid_CMutationTCLib.cpp.o SU2_CFD/src/libSU2core_AD.a.p/fluid_CSU2TCLib.cpp.o SU2_CFD/src/libSU2core_AD.a.p/output_COutputFact",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1707:1172,intuit,intuition,1172,https://su2code.github.io,https://github.com/su2code/SU2/issues/1707,1,['intuit'],['intuition']
Usability,"output classes, we should find a common level of abstraction for all the different physical problems we might want to have. Right now there isn't even a unified way of specifying the kind of problem for each zone (what is fluid, what is solid etc) and the kind of coupling. This might also affect the actual implementation/restructuring since we somehow have to decide what driver we have to instantiate and so on. Hopefully we can gather all the people involved to have a discussion on that. Since we have a lot of people working in their branches on multizone problems we should tackle that better sooner than later. As Edwin already suggested, maybe it is a good idea to put some people in charge of organizing some of the bigger structural changes. Furthermore in case some people don't know, we have a slack channel for the dev team. I think that makes it easier to communicate, arrange meetings, discuss problems and ask questions. In case you need an invite, let me know, everybody who wants to contribute is welcome. Thanks for the discussion, I still think that communication is the key of success !. Tim. On Sep 13, 2017 10:30 AM, Edwin van der Weide <notifications@github.com> wrote:. Hi Tom,. Sounds like a plan then to have a look at CIntegration to see what we can do to generalize the time integration. I definitely want to help with this, but I don't think I am the appropriate person to take the lead, because I simply don't have a good overview of all the multi-physics options. Tom, are you willing to take the lead for this?. Furthermore, it is good to have other people involved as well, preferably with detailed knowledge of the different disciplines. Any volunteers?. Thanks,. Edwin. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/437#issuecomment-329096830>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AEtI5MkXdqhqPPMuaDziLuDRzWCJfYwrks5sh5KagaJpZM4PQ90s>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437#issuecomment-329146567:1471,simpl,simply,1471,https://su2code.github.io,https://github.com/su2code/SU2/issues/437#issuecomment-329146567,1,['simpl'],['simply']
Usability,"ow match much better (although still diffreent) but both differ quite significantly from the X+1st ground truth. 10 Iter; ```; -4.926899175 -7.918963781 -8.148204896 1.135311148 -4.163756124; -4.926899175 -7.918963781 -8.148204896 1.135311148 -4.163756124; -4.926899175 -7.918963781 -8.148204896 1.135311148 -4.472390292; ```. 200 Iter; ```; -16.0186192 -18.98207162 -19.03351791 -2.806755076 -5.585674129; -16.00510692 -18.97843574 -19.03334954 -2.806755076 -5.585674129; -16.00510692 -18.97843574 -19.03334954 -2.806755076 -5.602103211; ```. 2000 Iter; ```; -16.50635481 -19.9763931 -20.42969871 -10.29288196 -14.21416876; -16.44211089 -19.76100653 -20.35694756 -10.23037364 -13.79321985; -16.44211089 -19.76100653 -20.35694756 -10.23037364 -13.79321861; ```. Note that for this specific 2000 Iter case the adjoint(-primal)-residual for the solid_T is worse compared to the ground truth X+1 ... which is the other way round for all other here seen cht cases (the ""no-coupling"" case shouldnt be counted for this I feel). **To Reproduce**; I post my setups later here. Cannot upload through vpn. I also use a simple bash script to do these comparisons for me. So the chance for manual errors is much lower. **Additional Notes**; A few things ahead, I run FGMRES+ILU for all configurations. No periodic boundaries at all. I went without turbulence for the cht cases to make it simpler. In the past and now we were able to see some good gradient validation against FD. So this issue is not super dramatic (although I am pretty annoyed by that) and I think I simply overlooked it in the past. In case there is sth unclear pls let me know, I'll will try to clarify asap. I still have some debugging to do but I appreciate all hints as I am currently more poking into the fog. . Thanks already , Tobi. **Desktop (please complete the following information):**; - OS: [RHELS 7.6 Maipo]; - C++ compiler and version: [g++ (GCC) 5.3.0]; - MPI implementation and version: [OpenMPI 3.1.6]; - SU2 Version: [#1394]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1395:6180,simpl,simple,6180,https://su2code.github.io,https://github.com/su2code/SU2/issues/1395,3,['simpl'],"['simple', 'simpler', 'simply']"
Usability,"p towards an automatic identification of the aerodynamic transfer functions for state-space models.; * Some changes in the outputs; * The introduction of a test case for this feature. Regarding the last point, I am having issues trying to understand how to appropriately set up the regression. In particular, the fsi interface needs two additional packages to run (libspatialindex and petsc) with their counterparts in python (rtree and petsc4py). @pcarruscag suggested me to add the apt-get lines in the regression.yml file, but I am really not sure where to place them and I do not want to mess it up. ; Further, the files in the tutorial folder cannot be used for this scope. Indeed, in the tutorial, there are the cfg files that can be used to reproduce the same behaviour predicted by the theory of Theodorsen. However, in order to do so, some iterations of fluid only simulation must be performed before the coupling. This takes time so I prepared a test case where the two solvers (fluid and structure) are coupled from the beginning. Unfortunately, the mesh is ignored by git in the TestCase folder, so I am not sure how to make it run. I would really appreciate if you could help me with this last point.; ; ## Related Work; #1124 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1148:1609,guid,guide,1609,https://su2code.github.io,https://github.com/su2code/SU2/pull/1148,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"p, which was occurring even with smaller meshes (7 million cells). The solution to (2) appears to be to change `geometry->node[iPoint]->GetnNeighbor()` to `geometry->node[iPoint]->GetnPoint()` at line 3759 of CEulerSolver.cpp, in the `CEulerSolver::SetUpwind_Ducros_Sensor()` method. I made this change locally, and attempted to run on our large mesh. Issue (2) seems to be fixed, but we still run into issue (1). I have now gone through the read restart routines, and have found a potential issue:. For reference, the restart file for our large mesh with averaging data included consists of:; 39 fields * 75,107,967 points = 2,929,210,713 variable values (which is larger than `INT_MAX`). Beginning at line 3931 of CSolver.cpp, in method `CSolver::Read_SU2_Restart_Binary(...)`, we have the following:. ```; int *blocklen = new int[geometry->GetnPointDomain()];; int *displace = new int[geometry->GetnPointDomain()];; int counter = 0;; for (iPoint_Global = 0; iPoint_Global < geometry->GetGlobal_nPointDomain(); iPoint_Global++ ) {; if (geometry->GetGlobal_to_Local_Point(iPoint_Global) > -1) {; blocklen[counter] = nFields;; displace[counter] = iPoint_Global*nFields;; counter++;; }; }; MPI_Type_indexed(geometry->GetnPointDomain(), blocklen, displace, MPI_DOUBLE, &filetype);; ```; The problem here is that for our case, where `iPoint_Global` can get up to 75,107,967 and `nFields` = 39, the value assigned to `displace[counter]` in the loop can over-run `INT_MAX`. This would result in potential garbage / incorrect displace values being passed to `MPI_Type_indexed(...)`. Unfortunately, simply changing `displace` to a `long int *` won't work, as the expected argument type for `MPI_Type_indexed(...)` is `int`. It may be that, given the limitations of MPI here, reading such large restart information requires the restart file to be read serially by one rank, and the data split and broadcast to the other ranks?. I am not an MPI expert, so there may be another way to do this. Thoughts?. -Paul",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/949#issuecomment-622026420:1909,simpl,simply,1909,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-622026420,1,['simpl'],['simply']
Usability,"pecifically from the Testcases I tried:; ; - `turbomachinery/APU_turbocharger/Jones_rst.cfg`; - `sliding_interface/rotating_cylinders/rot_cylinders_WA.cfg` (I saw a regression test failing for @economon which I was able to reproduce). I did some debugging and I think the code is wrong in `CBaseLineSolver::LoadRestart(...)` in solver_structure.cpp starting in line 3925. Inside that routine the `geometry` container is called as `geometry[iZone]` to address the final `C(Physical)Geometry` object. I think that the addressable level is the instance level i.e. it should be `geometry[iInst]`. ; As the Jones_rst case has two zones but only one instance the object `geometry[iZone=1]` in LoadRestart refers to what is `geometry_container[iZone=1][iInst=1]` in SU2_SOL.cpp - which does not exists and should be `geometry_container[iZone=1][iInst=0]`. Unfortunately it does not fail there directly for as it reaches (I guess) valid memory and simply interprets what it finds which leads to wrong evaluation of e.g. `GetnDim()=2376` or so. . I extracted a patch (apply with `patch -p1 < _patchfile_ ` in the root of the code directory) for the current develop branch which fixes the segfault problem for the above mentioned cases but I don't know whether it works correctly if multiple Instances are computed. ; [SU2_SOL_segfault_patch.txt](https://github.com/su2code/SU2/files/2328459/SU2_SOL_segfault_patch.txt) (github does not accept *.patch files...). Is there a testcase which covers multiple zones and multiple instances. At best with nZones!=nInstances? Can somebody confirm that this is actually a bug and if the patch fixes it? I probably don't know if it occurs somewhere else, so if somebody thinks their problems are related let me know. It is no problem to do a PR if I get some feedback. The (possible) bug was introduced here https://github.com/su2code/SU2/commit/1a75ebd0343694977a98c945833928bcc96932c1 . I hope my explanation of the bug above is somewhat understandable :); Cheers Tobi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/568:1906,feedback,feedback,1906,https://su2code.github.io,https://github.com/su2code/SU2/issues/568,1,['feedback'],['feedback']
Usability,"pers/sobolev.pdf); This is done by solving an elliptic PDE with the sensitivities, i.e., ( e1 Id - e2 Laplace) delta_x = - dF / dx, with different weights e1, e2. Inserting the sensitivities from the discrete adjoint solver for (dF / dx) leads to the gradient in a Sobolev space.; The method can be extended to incorporate the parameterization of the mesh cells x=M(p) with design values p, [see here.](https://arxiv.org/abs/2109.15279) Using the projected gradient w.r.t. the design values the systems takes the form; (dM/dp)^T (e1 Id - e2 Laplace) (dM/dp) = - dF/dp. Such treatment can help prevent noise in the derivative computation and leads to smoother design updates. Especially, when working in a One-Shot optimization context.; Here the optimization is done with inexact function values and gradients, i.e., the flow and adjoint solvers are only partially converged between design updates. For this setting simple gradient descent with too large update steps will not work, since a few flow iterations are not enough to recover a solution from the restart file from the last optimization step.; See the graphic below for drag minimization of a NACA 0012 airfoil with constant lift, where the Sobolev solver for the gradient leads to smoother deformations and better optimization.; ![pullrequest1](https://user-images.githubusercontent.com/16785869/143250126-e5bdd360-e265-40ca-9d24-5811ecbb759c.jpg). Application is done as a post-processing step in the SU2_DOT_AD executable.; The new solver constructs the necessary operator and solves it using the features of the finite element implementation in SU2. For this, it uses the same elements as the FEA solver but extends the definitions of the Gauss quadrature to be second order.; It can operate in two different modes:. 1) The smoothing can be applied to the mesh sensitivities, either in the complete mesh or only design boundaries. See the picture below for an example of this.; ![PicforSU2](https://user-images.githubusercontent.com/167",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1446:1225,simpl,simple,1225,https://su2code.github.io,https://github.com/su2code/SU2/pull/1446,1,['simpl'],['simple']
Usability,"ple dataset, I have run some; variations on the jobs, and my findings were:; (Please note that *all* ""markers"" I have mentioned in the next items refer; to solid walls in the mesh, using the RANS solver); 1- When I impose HEATFLUX=0 *and* ISOTHERMAL=290 Kelvin, for the same; markers, there are no complaints from SU2. It shows that SU2 ignores the; imposition of HEATFLUX=0, in this case.; 2- Just setting ISOTHERMAL=290 Kelvin (using all of the same markers as in; (item 1), above), without any HEATFLUX setting, then SU2 produces the same; results as in (item1).; 3- When some markers are set with HEATFLUX=0 and the rest of them are set; with ISOTHERMAL=290 Kelvin (so that each wall marker in the mesh is; referenced), there are no complaints from SU2, and the job goes as expected.; 4-The error message mentioned earlier, appears when one or more solid wall; markers *is not marked* concerning HEATFLUX or ISOTHERMAL; .; My conclusion then is that the error message appeared when I mistakenly; have not included a wall marker (assigning it as a HEATFLUX or an; ISOTHERMAL marker!); Does it make sense?; Kind regards,. On Mon, Oct 23, 2023 at 7:48 PM Jairo Cavalcante ***@***.***>; wrote:. > Unfortunately, my example involves a swirler and nozzle for the; > Navier-Stokes solver with Menter model, so the dataset is relatively large.; > Let me check whether some older small Euler mesh exhibits the same message!; > I will let you know! Thank you very much.; >; > On Mon, Oct 23, 2023 at 6:34 PM Pedro Gomes ***@***.***>; > wrote:; >; >> Is there a simple example to reproduce the issue?; >>; >> —; >> Reply to this email directly, view it on GitHub; >> <https://github.com/su2code/SU2/pull/2109#issuecomment-1776057496>, or; >> unsubscribe; >> <https://github.com/notifications/unsubscribe-auth/AHGXZUV3DNRF3O55YAWT563YA3PETAVCNFSM6AAAAAA3QKLVDWVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTONZWGA2TONBZGY>; >> .; >> You are receiving this because you commented.Message ID:; >> ***@***.***>; >>; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2109#issuecomment-1777018035:1595,simpl,simple,1595,https://su2code.github.io,https://github.com/su2code/SU2/pull/2109#issuecomment-1777018035,1,['simpl'],['simple']
Usability,"ps in reducing numerical diffusion offered by the scheme. Results from the literature shows that using the vorticity confinement technique, a better resolution is achieved in the problems like flow behind bluff bodies, rotors, wings etc. References. J. Steinhoff and D. Underhill, ``Modification of the euler equations for vorticity confinement: Application to the computation of interacting vortex rings,'' Physics of Fluids, vol.6, no.8, pp. 2738--2744, 1994. https://doi.org/10.1063/1.868164. D. A. Caughey and M. M. Hafez, Frontiers of Computational Fluid Dynamics 2006. WORLD SCIENTIFIC, 2005. https://www.worldscientific.com/doi/abs/10.1142/5963. R. Loehner and C. Yang, Vorticity confinement on unstructured grids, 40th AIAA Aerospace Sciences Meeting &amp; Exhibit, 2002. [Online]. Available: https://arc. aiaa.org/doi/abs/10.2514/6.2002-137. A. Povitsky and K. C. Pierson, ``Vorticity confinement applied to accurate prediction of convection of wing tip vortices and induced drag,'' International Journal of Computational Fluid Dynamics, vol. 35, no. 3, pp. 143--156, 2021. https://doi.org/10.1080/10618562.2020.1856822. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1854:2135,guid,guide,2135,https://su2code.github.io,https://github.com/su2code/SU2/pull/1854,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"r DualTimeStepping 1st order. ; 1. The solution for timestep n-1 should be loaded instead of n-2 -> I added an if statement there.; 2. solution_old is used as a temporary container for the freshly loaded solution. Then the solution which is currently at solution_time_n is pushed to be the ""main"" solution n+1. Afterwards the solution_old is put in the solution_time_n container -> That last step was wrong such that the loaded solution never gets involved. I used the regression test in disc_adj_rans/cylinder which covers DualTimeStepping 2nd order and reused it for a new Testcase which covers 1st order. ; For now, the .travis.yml has a different su2code/Testcases branch in it such that other are not hindered by this PR when running travis. If this PR is merged with the new Testcase, the TestCases repo has to be updated and the .travis.yml needs to be reverted. ; Let me know if adding a new TestCase is OK. I am aware that not every detail can get its own regression test. . I checked my changes against finite differences for that Testcase. I'll post the result below. Additionally I suppressed the output of .csv files in driver_structure.cpp for unsteady simulations if `WRT_CSV_SOL= NO` is set. . Regards, Tobi. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; Nothing I know of. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/554:1687,guid,guide,1687,https://su2code.github.io,https://github.com/su2code/SU2/pull/554,1,['guid'],['guide']
Usability,"ratio, and mask the latency of those operations by being able to start computing as soon as the first element of data is available. **What elements should we try to process simultaneously?**; The choice is between multiple geometric primitives (edges/points) or multiple solution primitives (variables). The latter sounds like a sensible idea until we get to areas of the code where different primitives require different treatment, that and the fact that the number of variables might not fit evenly in the number of lanes can lead to very tricky and non-generic code. Nevertheless if the same code were to be applied to e.g. 4 solution variables, this strategy would likely perform better as it avoids the pesky gather/scatter operations.; Processing multiple geometric primitives can make full utilization of whatever register size (important on GPU's), the code is just as readable (as I hope to show), but gather/scatter cannot be avoided. ### Intro to SPMD; This one is simpler, in a nutshell multiple threads operate on the sub domain of an MPI rank.; The typical implementation has each thread executing a chunk of an edge or cell loop. **Why should we care about SPMD?**; Reduce the communication overhead resulting from domain decomposition and improve load balancing, important for strong scaling.; Some algorithms are more efficient that way, e.g. the ADT (as mentioned by Edwin), the current MG also seems to work better on fewer partitions, and additive versions of preconditioners like the ILU or LU-SGS lose effectiveness with number of partitions.; Optimum hardware utilization, for routines that are bandwidth-bound it may be beneficial to use all threads available, while for compute-bound or ""algorithm-bound"" ones this may not be the case. **Relation with algorithms**; A typical edge loop reads from 2 locations and writes to 2 locations (gather / scatter access pattern, not to be confused with the instructions) processing multiple edges at the same time can therefore result i",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-529662724:2888,simpl,simpler,2888,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-529662724,1,['simpl'],['simpler']
Usability,"rding the Test Cases and Tutorial files. I; apologize if this is the wrong place or this has been discussed already,; but still will give it a try:; - Test cases folder from SU2/su2code repository shall be moved to the; SU2/TestCases repository. Rationale: this makes one repository to store the; test case *.cfg files and mesh files.; - There shall be a TestCases/Mesh folder to store all the meshes needed for; Test Cases files, without subdivisions for RANS, Euler etc subfolders.; Considering that multiple test cases use the same mesh and all the mesh; files are distinct, this solution generates one place to store all the mesh; files. Should a user perform a test case, he/she will find the mesh by name; referenced in the *.cfg file instead searching thru multiple folders. This; will also help avoiding unnecessary copies of mesh files.; - The same should be done for Tutorial files: Tutorial/Mesh folder for; storing meshes (duplicating these few files from TestCases/Mesh should not; be a problem IMO, but will really help a new user to get up to speed with; SU2); - I have no clear opinion on where the Tutorial files folder should be; stored. But considering moving written tutorials to main repository i think; that tutorial files should also be stored in main SU2/su2code repository. Best regards and Happy New Year; Jędrzej. 2017-12-30 23:45 GMT+01:00 Tim Albring <notifications@github.com>:. > What do you think of moving the written tutorials also to the main; > repository ? Then we can have links in the wiki to the markdown files like; > this (the link will be much shorter if the files are in the master branch):; > https://github.com/su2code/SU2/blob/0e36facc031aaf6b411fd30a0aab80; > 29ebe325d8/Tutorials/Inviscid_Bump/Inviscid_Bump.md; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/485#issuecomment-354572803>, or mute; > the thread; > <https://github.co",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/485#issuecomment-354736415:1591,clear,clear,1591,https://su2code.github.io,https://github.com/su2code/SU2/pull/485#issuecomment-354736415,1,['clear'],['clear']
Usability,"re when you try to build AD. I think it's due to a simple problem - the exact error I see in preconf.err is:. ```; --2017-12-08 17:18:47-- https://github.com/scicompkl/CoDiPack/archive/2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13.zip; Resolving github.com... 192.30.255.112, 192.30.255.113; Connecting to github.com|192.30.255.112|:443... connected.; HTTP request sent, awaiting response... 302 Found; Location: https://codeload.github.com/SciCompKL/CoDiPack/zip/2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13 [following]; --2017-12-08 17:18:48-- https://codeload.github.com/SciCompKL/CoDiPack/zip/2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13; Resolving codeload.github.com... 192.30.255.120, 192.30.255.121; Connecting to codeload.github.com|192.30.255.120|:443... connected.; HTTP request sent, awaiting response... 200 OK; Length: unspecified [application/zip]; Saving to: `2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13'. 0K .......... .......... .......... .......... .......... 223K; 50K .......... .......... .......... .......... .......... 442K; 100K .......... .......... .......... .......... .......... 441K; 150K .......... .......... .......... .......... .......... 443K; 200K .......... .......... .......... .......... ...... 9.79M=0.6s. Last-modified header missing -- time-stamps turned off.; 2017-12-08 17:18:49 (435 KB/s) - `2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13' saved [252908]. unzip: cannot find or open 2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13.zip, 2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13.zip.zip or 2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13.zip.ZIP.; ```; It seems `unzip` searches for various endings, such as '.zip, '.zip.zip', and '.zip.ZIP' but I suspect these are failing because the downloaded file (that I can see in externals) has no file ending. A workaround was to download the files manually (as suggested in the post) or, on failing, simply to add a `.zip` to the end of the files `2ec7cccf3ccd4b052f9d4ef95d6dc69244484f13` and `31b2267c3a55a391a37d830369f2e0dba09008d1` for now.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/483:2164,simpl,simply,2164,https://su2code.github.io,https://github.com/su2code/SU2/issues/483,1,['simpl'],['simply']
Usability,"res python 3, so implicitly we get this requirement now. But I think it is less of a problem than some of you probably might think. A lot of problems we have come from the fact the we support python 2 and python 3. As I was setting up travis (getting there in a moment) I noticed that is easily possible to compile the code with python 3 (for the python wrapper) and run the python scripts with python 2 and vice versa, which eventually leads to errors and crashes. If we require(!) version 3 (which should be installed on all machines now ...) we can avoid such problems from the beginning. Furthermore, python 2 is deprecated anyway ... - I already changed travis to use the new build system. This as one major advantage: we can now properly use ccache and the caching feature of travis (that means only files that have changed will be compiled if a cache is available). This should speed up the runs by a lot. . - automake and meson can coexist without any problems. Maybe we can keep this compatibility for version 7 and remove it later if we all agree. Also the preconfigure.py should not be necessary anymore then. - (unit) tests can be easily added and integrated into the build process. - I will add a proper documentation soon. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. #685 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/745:3796,guid,guide,3796,https://su2code.github.io,https://github.com/su2code/SU2/pull/745,1,['guid'],['guide']
Usability,"rom CSolver constructors to dedicated LoadRestart() routines within each CSolver class. This is purely a refactoring of the code, so all previous functionality should stay the same. . There are two goals:. 1. Consistency for reading of restarts and minimizing duplicated code. LoadRestart() routines already existed for some solvers, but not others. They were being used in some cases, but not all. In addition, by having the restarts read in the constructor, they were tied to the instantiation of the CVariable class, but this is unnecessary and caused some odd behavior in corner cases. Now, the solver constructors always instantiate the CVariable classes with free-stream / uniform initial conditions, and the LoadRestart() routine in each solver is the only place where restart files are loaded, which is first done in CDriver::Solver_Preprocessing(). 2. Now that the reading of restarts is isolated in one routine of each CSolver class (out of the CSolver constructor and separated from instantiating CVariable), new versions of the LoadRestart() routines can be written alongside the ASCII originals for reading binary restart files (e.g., LoadRestart_Binary() ), which are coming next. ~~**Important** (@fpalacios, all): the metadata that was being written to the bottom of the ASCII restart files for updating parameters has been moved to its own file for now so that we can start writing the data portion of the restarts in binary. It will be written to/read from either “restart.meta” or “restart_adj.meta” if the new option UPDATE_RESTART_PARAMS= YES is set. I would like some feedback about this. I am open to doing something different with that information, e.g., putting it in the cfg file somehow since they are config options for the most part. Please let me know what you think.~~. Please check your own cases to make sure that restarts and SU2_SOL are working for you as before. Next up: Parallel writing of binary restart files with new LoadRestart_Binary() routines for loading.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/374:1640,feedback,feedback,1640,https://su2code.github.io,https://github.com/su2code/SU2/pull/374,1,['feedback'],['feedback']
Usability,"rrently working on the backward facing step and I will work on the flatplate too. The choice of the validation test cases is key since the computational cost is quite large, thus if you have any suggestions that may speed up this part then feel free to write them down. . Implemented versions:; - SST-DDES; - SST-IDDES; - SST-SIDDES. I am also working on the Scale Adaptive Simulations (SAS) implementations for SST, following the work in ""ON URANS SOLUTIONS WITH LES-LIKE BEHAVIOUR"", Travis et al., and ""[Evaluation of scale-adaptive simulation for transonic cavity flows"", Babu et al., (https://www.inderscienceonline.com/doi/abs/10.1504/IJESMS.2016.075510). The last one, especially, is quite tricky due to the computation of the velocity laplacian. I tried computing it in Paraview as the divergence of the gradient field and it seems quite similar, but it is the first time that I've touched that section of the code, thus some work might still be needed. Implemented versions:; - SST-SAS_Simple (better naming is necessary), from the article of Travis et al.; - SST-SAS_Complicated (better naming is necessary), it is related to the article from Babu et al. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2150:1676,guid,guide,1676,https://su2code.github.io,https://github.com/su2code/SU2/pull/2150,2,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"s NOT lead to same results as above. The grid velocities look right though, both on the temporary screen output and when plotting them by slicing through the volume results, but the amplitude of the lift coefficient is too small. I guess that the velocities are not set properly / mixed up / require a call to some update function or similar. **I'm stuck at this point. Does someone have any idea what I'm doing wrong?? I feel that I am missing an important step here...**~~; - [ ] ~~final test: mesh deformation + moving grid + gust~~; - [x] final test: mesh deformation + gust. Apart from the steps above, the following questions / tasks remain:; - [ ] ~~The the Split Velocity Method (classes SetWind_GustField and CSourceWindGust) is not used in SU2 as far a I understand and for all gust types, the inputs are zero. Instead, the Field Velocity Method is used, but when trying to remove the functions SetWindGust and SetWindGustDer, I broke the code elsewhere. In order to enable 3D meshes, I simply set the outputs to zero for now. I believe that we should clean up the code, but my C++ skills are the limiting factor here, so I need some help with that.~~ --> In a new, dedicated pull request. ## Related Work; The gust encounter for 3D meshes was requested in #1319 and in the Forum https://www.cfd-online.com/Forums/su2/234021-gusts-3d.html and https://www.cfd-online.com/Forums/su2/225914-no-slip-condition-3d-gust.html. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case tha",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1954:3613,simpl,simply,3613,https://su2code.github.io,https://github.com/su2code/SU2/pull/1954,1,['simpl'],['simply']
Usability,"s pyBeam, a non-linear open source beam solver, into the SU2 infrastructure as a subproject, and adds support for coupled FSI simulations using SU2's flow solver and pyBeam's structural solver. Tutorials on how to use the implementation will come soon. At this point, only minor changes to the compilation and the python scripts are required. The impact to the core of the code is minor. I will be away for a few days, but please go ahead and have a look/comment/find room for improvement in the meantime :) I will reply to your comments as soon as I'm back to office. I also added a couple of test cases, but I haven't yet found the best way to hook them to our regression test system. I'll definitely look into it before the PR is merged, but due to personal time constraints, it'd be great if this could be integrated for 7.0.3. ## Related Work; This work is the result of a collaboration with @RoccoBombardieri and @crauno from the University Carlos III Madrid. . Please refer to a recent [paper at EUROGEN 2019](https://www.researchgate.net/publication/335972259_Towards_an_open-source_framework_for_aero-structural_design_and_optimization_within_the_SU2_suite) with regards to this work. Full reference will be provided here upon publication in an Springer ECCOMAS book series. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/902:1494,guid,guide,1494,https://su2code.github.io,https://github.com/su2code/SU2/pull/902,1,['guid'],['guide']
Usability,"ses CMake to find system libraries and compilers (MKL, Mutationpp, MPI and Python currently). No longer need to specify paths to compilers/libraries if they are in standard locations. In addition, compile flags can be modified from CMake. There is no need to use preconfigure.py anymore since downloading/unpacking is handled by CMake and is system-agnostic. At the moment, all library targets are static but that could be easily changed to be configurable from CMake. The installation directory is ${CMAKE_PREFIX_PATH}/bin. Similarly to autotools, some build options are disabled if built with Codi forward/reverse datatypes or without MPI. Note that SWIG fails to compile pySU2ad with Nothing known about namespace 'medi' in Common/include/mpi_structure.hpp:57 without -includeall SWIG option but then it takes forever to generate the wrapper (more than 15 minutes on my machine, stopped early). I suggest removing using namespace declarations and either importing used symbols explicitly with using or prepending namespace name, clang-tidy warns against them by default and it makes the code clearer. SU2 CMake options are:. * Build modules:; * SU2_BUILD_CFD: ON|OFF; * SU2_BUILD_DEF: ON|OFF, disabled when building with Codi; * SU2_BUILD_DOT: ON|OFF, disabled when building with Codi forward; * SU2_BUILD_GEO: ON|OFF, disabled when building with Codi; * SU2_BUILD_MSH: ON|OFF, disabled when building with Codi; * SU2_BUILD_PY_WRAPPER: ON|OFF, disabled when building with Codi forward; * SU2_BUILD_SOL: ON|OFF, disabled when building with Codi; * Enable modules:; * SU2_ENABLE_CGNS:; * SU2_CGNS_CPPFLAGS: flags to pass when compiling CGNS; * SU2_ENABLE_CODI: no|forward|reverse; * SU2_CODI_CPPFLAGS: flags to pass to SU2 modules when compiling with Codi; * SU2_ENABLE_METIS: ON|OFF; * SU2_METIS_CPPFLAGS: flags to pass when compiling Metis; * SU2_ENABLE_MKL: ON|OFF; * SU2_ENABLE_MPI: ON|OFF; * SU2_ENABLE_MUTATIONPP: ON|OFF; * SU2_ENABLE_PARMETIS: ON|OFF, only available when SU2_ENABLE_MPI is ON",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814#issuecomment-552242380:1671,clear,clearer,1671,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380,1,['clear'],['clearer']
Usability,"shell = false doesn't seem to work in this particular case (symbolic linking) but it might in others. There seem more secure ways to run commands but they need case by case treatment. As in the solution for a `cp` command is different from a `ln -s` command. . We can also replace the `os.system` calls with other python functions (for example `os.symlink` for symbolic linking). . Either way, it wont be a simple search and replace. There seem to be about 25 `os.system` calls across the python scripts. Let me try and replace them.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/781#issuecomment-533410018:407,simpl,simple,407,https://su2code.github.io,https://github.com/su2code/SU2/pull/781#issuecomment-533410018,1,['simpl'],['simple']
Usability,"sing `SU2_MSH` for periodic mesh construction can be buggy due to its sorting of nodes. Under certain conditions, nodes can be duplicated and/or missing from the output *.su2 file. This pull request implements a more robust sorting process, where the sorting occurs in the following steps:. 1. Send/receive nodes are explicitly identified; 2. The sorted list is created without any send/receive nodes.; 3. The receive and then send nodes are added to the sorted list. Here's a few comments about the pull request:; + Since this routine is only run once, I felt the usability of std::vector outweighed the computational efficiency of raw arrays.; + I had to create two lists, NewSort and ReverseSort, instead of the original one list (NewSort). That's because two different mappings between node numbers need to occur. In the old code, where the list was sorted by switching elements, the two mappings _should_ have been identical. Since the improved method does not use switching, two lists are necessary.; + There's a lot of memory leaks/uninitialized values when checking this pull request with Valgrind. I checked them, and this pull request doesn't create any _new_ memory issues. Apparently both `SU2_CFD` and `SU2_MSH` have memory issues. #### Verification; Since none of the existing regression tests run `SU2_MSH`, I created a separate case to verify both the bug and the fix. It's a simple 3x3 cube that's periodic in the z-direction. I've attached the files below. Here's the steps:. 1. Run `SU2_MSH MSH.cfg`; 2. Run `SU2_CFD per_CFD_dev.cfg`. Using the existing develop branch, the verification case runs into a segfault when writing the output. This pull request allows the verification case to complete successfully. You can also check the original test case from Issue #431 to verify the bug fix. If any of you know of additional verification tests I could run, then please let me know. Test case: [cube.tar.gz](https://github.com/su2code/SU2/files/1639835/cube.tar.gz). This fixes #431",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/500:1421,simpl,simple,1421,https://su2code.github.io,https://github.com/su2code/SU2/pull/500,1,['simpl'],['simple']
Usability,site-packages; checking for python extension module directory... ${exec_prefix}/lib64/python2.7/site-packages; checking for python2.7-config... /usr/bin/python2.7-config; checking python include flags... -I/usr/include/python2.7 -I/usr/include/python2.7; checking how to run the C preprocessor... /usr/lib64/mpich/bin/mpicc -E; checking for grep that handles long lines and -e... /usr/bin/grep; checking for egrep... /usr/bin/grep -E; checking for ANSI C header files... yes; checking for sys/types.h... yes; checking for sys/stat.h... yes; checking for stdlib.h... yes; checking for string.h... yes; checking for memory.h... yes; checking for strings.h... yes; checking for inttypes.h... yes; checking for stdint.h... yes; checking for unistd.h... yes; checking size of short int... 2; checking size of int... 4; checking size of unsigned int... 4; checking size of long int... 8; checking size of float... 4; checking size of double... 8; checking size of void *... 8; checking X11/Intrinsic.h usability... no; checking X11/Intrinsic.h presence... no; checking for X11/Intrinsic.h... no; <<< Configuring library with Metis support >>>; <<< Configuring library with Parmetis support >>>; <<< Configuring library with CGNS support >>>; checking for ../externals/codi/include/codi.hpp... yes; checking for ../externals/medi/include/medi/medi.hpp... yes; checking that generated files are newer than configure... done; configure: creating ./config.status; config.status: creating externals/tecio/Makefile; config.status: creating externals/metis/Makefile; config.status: creating externals/parmetis/Makefile; config.status: creating externals/cgns/Makefile; config.status: creating Makefile; config.status: creating externals/Makefile; config.status: creating Common/lib/Makefile; config.status: creating SU2_CFD/obj/Makefile; config.status: creating SU2_DOT/obj/Makefile; config.status: creating SU2_MSH/obj/Makefile; config.status: creating SU2_DEF/obj/Makefile; config.status: creating SU2_SOL/obj/M,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:5479,usab,usability,5479,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['usab'],['usability']
Usability,"sting './SU2/mesh'...; Listing './SU2/opt'...; Listing './SU2/run'...; Listing './SU2/util'...; Compiling './SU2/util/filter_adjoint.py'...; *** File ""./SU2/util/filter_adjoint.py"", line 182; raise Exception, 'unknown filter type'; ^; SyntaxError: invalid syntax. Compiling './compute_uncertainty.py'...; *** File ""./compute_uncertainty.py"", line 69; print ""\n\n =================== Performing "" + str(comp) + "" Component Perturbation =================== \n\n""; ^; SyntaxError: invalid syntax. Compiling './fsi_computation.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (fsi_computation.py, line 77); Listing './pySU2'...; ```; After fixing them and running `python -m compileall .` again the next set of similar error messages appears. This patch fix such `TabError`, `SyntaxError` (for `raise` and `print` functions), replace some indent tabs with spaces (generally with 8 spaces) before comments, remove trailing spaces where needed. Please fix this small issue as resulting patch to fix it for distributive build script is rather huge (~ 100 Kb). Many changes are in `SU2_PY/FSI/FSIInterface.py` and the `Split` mode of github change preview is more suitable to compare and to recheck the correctness of new indentation (or via Meld application). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/983:2730,guid,guide,2730,https://su2code.github.io,https://github.com/su2code/SU2/pull/983,1,['guid'],['guide']
Usability,"sts. If you compile SU2 using `ninja -C builddir`, then the test executable will automatically be compiled. You then have three options for running the tests:. + `meson test` (see documentation [here](https://mesonbuild.com/Unit-tests.html)); + `ninja test`; + Run the exectuable manually: `./UnitTests/test_driver`. When running the executable manually, there are many customization options. Run `./UnitTests/test_driver --help` to see them all. ### How to add unit tests. I have already included a single unit-test example (`UnitTests/SU2_CFD/src/numerics/CNumerics_tests.cpp`). Aside from the headaches with CConfig, this example should be clear. If not, raise questions and I will answer them. ~~I plan on adding a few more example tests, as well as a ""How-To"" page on the website.~~ Please see the PR on the website repo for more documentation. To learn more, check out the [great tutorial](https://github.com/catchorg/Catch2/blob/master/docs/tutorial.md) for Catch2. You can also find more in-depth documentation there. ### I still don't understand unit tests. Where can I learn more?. I highly recommend reading at least one of these two books:. + ""Working Effectively with Legacy Code,"" by Michael Feathers; + ""Modern C++ Programming with Test-Driven Development,"" by Jeff Langr. ## Remaining work. + ~~Add unit-testing to Travis CI~~; + ~~Add support for unit testing in AD builds~~; + ~~Add more examples of unit tests~~; + ~~Add ""How-To Add Unit Tests"" documentation~~. ## Related Work; This resolves issue #698. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/850:3545,learn,learn,3545,https://su2code.github.io,https://github.com/su2code/SU2/pull/850,1,['learn'],['learn']
Usability,"t iterate with the basis vectors, the Newton step is cheap as n is small). The residuals are obtained from a fully coupled adjoint CHT problem (2d heated cylinder in laminar flow) with a heatflux objective function. ![plot](https://user-images.githubusercontent.com/22639394/122736716-9ad18000-d280-11eb-9983-c2d47d434dc5.png). (Purple: No correction applied, Green/Blue: Usage of 1-dim. basis after extraction of one basis vector at around 500 iterations, Yellow: MPI run with two processes using the manual but MPI-compatible Gram-Schmidt-QR-decomposition for identification of basis vectors.); ; **The code is WIP.** It needs a lot of additions, changes and testing, though the overall structure should be clear from what's already implemented. ToDo's:; - Remove Eigen dependencies, not needed anymore; - Add a meaningful testcase; - Add eigenvalue estimation / QR criterion values to screen and history output fields; - Implement a basisMaintenance()-routine; - Figure out a proper base class for both `CQuasiNewtonInvLeastSquares` and `CNewtonUpdateOnSubspace`; - Figure out further algorithmic strategies for multiphysics problems, now the default is to create the basis in the outer loop, and to apply it for corrections in the inner. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1217:2284,guid,guide,2284,https://su2code.github.io,https://github.com/su2code/SU2/pull/1217,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"te well as shown below. I haven't finished calculating for all design variables, but I think it is enough. ![Comparison_gradient](https://user-images.githubusercontent.com/18245846/129564585-d7812108-d315-4606-83d9-e39a8c9403b3.png). In terms of flow field, the capture below is from the current develop branch. The boundary between structured grid and unstructured gird is a nearfield boundary. An object is above this capture and pressure wave propagates from there. Since this grid is inclined by Mach angle, pressure distribution on the nearfield should be fairly similar to the region above but this capture shows some strange pressure disturbance. Limiter: VAN_ALBADA_EDGE; ![NF_before](https://user-images.githubusercontent.com/18245846/129564639-030fe1b7-7e50-4bb1-9951-21f5ea27bb52.png). Limiter: VENKATAKRISHNAN_WANG; ![NF_before_VEN](https://user-images.githubusercontent.com/18245846/129568934-137681db-04db-40f1-819f-7bcc8c7e0d88.png). The capture below is from the branch with this PR. The issue I mentioned above does not exist. Limiter: VAN_ALBADA_EDGE; ![NF_after](https://user-images.githubusercontent.com/18245846/129564659-cec5a848-1b0b-4051-8298-e3d383dacc6d.png). I think the residuals for direct solver will be different like the adjoint if you run it for some hundreds more iterations (currently, the test case has only 20 iterations). However, since the nearfield boundary is a bit far from an object, it takes some iterations for pressure waves to reach the nearfield boundary. This PR also solves an issue with VENKATAKRISHNAN_WANG limiter. It seems to be much easier for convergence than VAN_ALBADA_EDGE, so it is fairly useful. I still have a gradient un-match issue with my bigger mesh but I believe it is coming from something else. > I'm sorry that you had to spend time fixing that MPI code... But at least we found out we could clean all this obsolete code. Yeah, I noticed it had been deleted. It's OK. It was still a good opportunity for me to learn how MPI works.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1351#issuecomment-899498618:2450,learn,learn,2450,https://su2code.github.io,https://github.com/su2code/SU2/pull/1351#issuecomment-899498618,1,['learn'],['learn']
Usability,"terms of abstraction, particularly regarding the input/output. At this time, I have removed some inconsistencies in the definition of the Zone structure, by incorporating the concept of “Instances” to the code. Until now, the concept “Zones” could refer to either different subdomains in space (interacting with each other over a common interface, e.g. for conjugate heat transfer, turbomachinery or FSI), or to copies (or instances) of the same domain evaluated under different conditions (e.g., for Harmonic Balance there are several time instances). . The previous concepts are now separated, allowing for a consistent definition of zones and instances in the code which can potentially be used simultaneously, and without the loss of any functionality. The proposed scheme is better explained in the attached [diagram](https://github.com/su2code/SU2/files/1955507/zones_vs_instances.pdf). ## Related Work. - Further work will involve improvements in the config definition, to make it more clear for the community of users of SU2 (particularly in cases involving multiple zones/instances). The output will also be reorganized, to be consistent with the abstraction of the rest of the code. - I have adapted the HB problems to the new definition, so @arubino and @sravya91, if you have some time please do double check that this PR looks good to you! Apart from the regression tests, which should be passing, I have also double checked that the file output for these particular problems wasn’t affected by the changes. - Additionally, I have removed some warnings that were in the code from a recent PR. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wal",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/528:1172,clear,clear,1172,https://su2code.github.io,https://github.com/su2code/SU2/pull/528,1,['clear'],['clear']
Usability,"the calculation of `Baux`, which leads `Baux` to have units of 1/time. That throws off the nondimensionalization of the blending constant.; + The square root in the calculation of `Lturb` is in the wrong place. Travin only takes the square root of the denominator.; + Travin _et al._ took the variables `Lturb` and `g` and used them to build a new variable, `A`, that was used to set the blending parameter. In the code, `LTurb` is simply multiplied by `Gaux`. This doesn't match the paper, and it's not going to scale correctly either. `Lturb` should have units of length, and multiplying a length by a nondimensional parameter does not give you a nondimensional parameter.; + The variable `Omega` isn't consistent with `StrainMag`. `StrainMag` has a factor of sqrt(2) built in, but `Omega` doesn't. The original paper actually doesn't specify if the factor of sqrt(2) should be included, but the code should at least be consistent.; + The value of the variable `ch3` is 2 in the code, but 0.5 in the paper. I've corrected these mistakes, but I wanted to get feedback on the results. This section of code was not covered by any existing regression tests, and the validation cases in the [SU2-DDES paper](http://dx.doi.org/10.2514/6.2017-4284) don't use the NTS blending. Meaningful verification and validation of hybrid RANS/LES is both tricky and computationally expensive (compared to RANS). So any input (especially from @EduardoMolina) on what tests to use would be appreciated. Otherwise, I'll come up with my own test. ## Related Work; This hybrid upwind/central blending was introduced by @EduardoMolina as part of PR #490. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/532:1800,feedback,feedback,1800,https://su2code.github.io,https://github.com/su2code/SU2/pull/532,1,['feedback'],['feedback']
Usability,"thing to do. So let’s indeed do something like what Tom suggests (in the spirit of MARKER_MONITORING) so that one can control which markers get wall functions applied. If a list of markers is not specified in the config file, the default behavior should be that all no-slip walls get wall function BCs. If a list of markers is specified, then those and only those markers listed get wall function Bfs (with the others getting integration to the wall treatment). Now, what you point out in the second half of your message is the ultimate in flexibility: not only specifying wall functions in a subset of the no-slip wall markers, but also allowing for different kinds of wall functions to be used in those markers. I imagine that this would be a seldom used capability…but someone out there might have the need. I guess it does not seem to me that the coding of the most flexible logic is that much more complicated, so we may as well do that. If you guys think it is too complicated, the advertised options in the config file can allow some simpler behavior. My two cents,. Juan. On Sep 5, 2017, at 9:58 PM, Edwin van der Weide <notifications@github.com<mailto:notifications@github.com>> wrote:. Juan,. I think that having the flexibility to apply wall functions on only a subset of the viscous wall boundaries would be useful. E.g., if you are interested in a wing, you can apply integration to the wall there, but apply wall functions on the fuselage. My preference would be to have a dedicated BC type for that, i.e. Tom's second suggestion. Apart from this, we can have the different wall model types as a single input parameter, i.e. you apply the same wall model type for all viscous boundaries. Or would you like to have the flexibility to specify this as well per individual marker?. Edwin. —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/399#issuecomment-327374728>, or mute the thread<https://github.co",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-327377108:1371,simpl,simpler,1371,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-327377108,1,['simpl'],['simpler']
Usability,"this is a very nice contribution.. we’re working on the regressions and will pull this in once we have everything straightened out (and this branch passes). In the meantime, you got me thinking: the scale, rotate, translate options might be confusing now if a user doesn’t know whether to include the markers or not. Perhaps this is a chance for separating some of the “design” options from “mesh” options. One way I could see us do this is by moving the implementation I had just committed for the “volume” scale, rotate, and translate options over into the SU2_MSH executable, which might be a more logical home for it. However, this would require adding an extra set of config options for reading in a scale/rotate/translate options for SU2_MSH. The nice thing here is that we keep the intent separate, i.e., only design variables are listed with the other design variables while the mesh transformations are elsewhere. A different, possibly simpler way would be to just create separate names for these two types in the list of available options so that there is no ambiguity. Any thoughts?. On Aug 16, 2015, at 9:21 AM, Heather Kline <notifications@github.com<mailto:notifications@github.com>> wrote:. Some illustrative images/output in case my description was hard to understand:; [image]https://cloud.githubusercontent.com/assets/5167760/9294050/52a764b2-440f-11e5-8681-b68318da0ce7.png. SU2_DEF output when only ""airfoil"" marker included:. ------------------------- Surface grid deformation ----------------------; Performing the deformation of the surface grid. ----------------------- Volumetric grid deformation ---------------------; Performing the deformation of the volumetric grid. # FGMRES residual history. # Residual tolerance target = 4.14044e-11. # Initial residual norm = 15.8102. ```; 0 1; 50 2.17385e-06; 100 1.08998e-10; ```. # FGMRES final (true) residual:. # Iteration = 105: |res|/|res0| = 3.50764e-11. Non-linear iter.: 1/1. Linear iter.: 105. Min. area: 4.1019e-08. Error: ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/187#issuecomment-132065067:997,simpl,simpler,997,https://su2code.github.io,https://github.com/su2code/SU2/pull/187#issuecomment-132065067,1,['simpl'],['simpler']
Usability,"tions are equivalent for smooth surfaces and clearly surface neighbors are always volume neighbors as well. However, at surfaces with sharp edges, two vertices can be volume neighbors without being surface neighbors. This happens when the edge of the volume element connecting the vertices lies inside the domain. `CInterpolator::ReconstructBoundary` is called from `CSlidingMesh::SetTransferCoeff`, which then hands the connectivity structure to `CSlidingMesh::Build_3D_surface_element`. The latter function forms a circular ordering of the neighbors of each vertex s: e.g. if there are four neighbors a,b,c,d of s with connectivity a-b,c-d,b-c,a-d then it performs an iteration over e.g. a-b-c-d. If we understand ""neighbors"" as ""surface neighbors"", the neighbors of any vertex s can be brought into a ""closed circle"" or ""open chain"" ordering where each of them is neighbor only to its direct predecessor and successor. This is not true for the volume neighbor relation however, and in this case the iteration might enter an infinite loop e-a-b-c-d-a-b-... (until the access to `element[ iElementNode ]` segfaults). That's approximately how we (@maxaehle,@mcmorelli,@BeckettZhou,@EduardoMolina) noticed the bug.; ; ## Related Work; #1344 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1346:1940,guid,guide,1940,https://su2code.github.io,https://github.com/su2code/SU2/pull/1346,2,"['guid', 'simpl']","['guide', 'simply']"
Usability,"trix.subBlock(jPoint, jPoint, blk_j);; matrix.subBlock(jPoint, iPoint, blk_i);; }; }; ```; This and a few more memory reads is why we can't have nice things, i.e. massive speedups with vectorization. Believe it or not this loop sets ~75% of the maximum speed at which the residual edge loop can run (bandwidth bottleneck).; Don't be sad though, we can make a few things about it better:; - We can store the blocks we insert contiguously so the writes can be vectorized (this would be done using a container so that we still have `(i,j)` access syntax);; - On each insertion we have to first look for the block by traversing the `colInd` (column index) array, we can instead map the diagonal blocks to the corresponding points and the off-diagonal blocks to the edge (remember we insert ""by the edge"").; - We can fuse numerics (possibly using the [decorator](https://en.wikipedia.org/wiki/Decorator_pattern) pattern) so that we write to the matrix only once per iteration, which means we only need to clear the diagonal blocks and not the entire matrix because we can **set** the off-diagonals instead of **updating** them. Assuming these modification our dummy loop becomes; ```c++; void testLoop2(const vector<size_t>& colorStart,; const vector<size_t>& edgeIdx,; const vector<pair<size_t,size_t> >& connectivity,; const double* blk_i, const double* blk_j,; SparseMatrix& matrix); {; matrix.setDiagZero();. for(size_t color=0; color<colorStart.size()-1; ++color); #pragma omp parallel for schedule(dynamic,CHUNK_SIZE); for(size_t k=colorStart[color]; k<colorStart[color+1]; ++k); {; size_t iEdge = edgeIdx[k];; size_t iPoint = connectivity[iEdge].first;; size_t jPoint = connectivity[iEdge].second;. matrix.updateBlocks(iEdge, iPoint, jPoint, blk_i, blk_j);; }; }; ```; where; ```c++; STRONGINLINE void SparseMatrix::updateBlocks(size_t edge,; size_t row, size_t col, const double* blk_i, const double* blk_j); {; size_t bii = diagMap[row], bij = edgeMap[edge].first,; bjj = diagMap[col], bji = edgeM",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:3122,clear,clear,3122,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,1,['clear'],['clear']
Usability,"tude (or more) are possible for most problems. Experiment yourselves.. sometimes you can get even more performance, sometimes less, case depending. I could use help testing this one with your cases, since I think almost all regression tests will change. As a start, I have run all of the NASA TMR 2D bump-in-channel cases. Everything looks good with that (see figures). I have also checked that the inviscid and laminar MMS give 2nd-order accuracy properly. ![bump_cd_gridconv](https://user-images.githubusercontent.com/4896083/64910870-09f36b00-d6d0-11e9-9e1c-553fd09b42c8.png); ![bump_cf_0p63_gridconv](https://user-images.githubusercontent.com/4896083/64910871-09f36b00-d6d0-11e9-8148-f211260dbf8f.png); ![bump_cf_0p75_gridconv](https://user-images.githubusercontent.com/4896083/64910872-09f36b00-d6d0-11e9-8772-6e26a8bd08b0.png); ![bump_cf_0p87_gridconv](https://user-images.githubusercontent.com/4896083/64910873-0a8c0180-d6d0-11e9-8c61-208809ff64e0.png); ![bump_cl_gridconv](https://user-images.githubusercontent.com/4896083/64910874-0a8c0180-d6d0-11e9-8add-2489b1c42a5c.png); ![residual_convergence](https://user-images.githubusercontent.com/4896083/64910875-0a8c0180-d6d0-11e9-8c0c-0ec2008734a2.png). ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Gradient method strategy in #789 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790:4699,guid,guide,4699,https://su2code.github.io,https://github.com/su2code/SU2/pull/790,1,['guid'],['guide']
Usability,"uch lower level, namely where the spatial residual is computed. At least, this should be the case for the fluid dynamics part. I don't know whether this is also the case for other disciplines, like structures. What about the following high level structure?. - Loop over the number of iterations, or time steps for unsteady problems.; - Loop over the number of pseudo-time steps for implicit time integration schemes; (DT_STEPPING_1ST and DT_STEPPING_2ND). For other cases this loop is 1.; - Loop over the number of disciplines involved; Call iterate for each of the disciplines.; In iterate: ; - Loop over the (Runge-Kutta) stages; - Loop over the zones of a single discipline; Compute spatial residual.; Update the state vector.; - End loop over the zones of a single discipline.; Exchange halo data. This includes the halo data between zones of a single discipline.; - End loop over the (Runge-Kutta) stages ; - End loop over the disciplines; - End loop over the pseudo time steps.; - End loop over the number of iterations, or time steps for unsteady problems. The weakness of this approach is that it still does not work when one would like to employ multi-stage time integration schemes for an unsteady, multi-disciplinary problem (does not work for the current implementation either), but maybe this is something we simply have to accept. The alternative is that all the details of the different time integration schemes have to be moved to the driver classes, which is highly undesirable, I think. The structure above implies that the iteration_container and the integration_container should be defined per discipline and not per zone anymore. The geometry_container and solver_container should still be defined per zone. Well, I suppose this leaves plenty of room for discussion, so I would say to continue the online discussion a bit further, such that things become a bit clearer how to tackle this issue. After that having a telecon would be good to iron out the details. . Regards,. Edwin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437#issuecomment-328368371:1666,simpl,simply,1666,https://su2code.github.io,https://github.com/su2code/SU2/issues/437#issuecomment-328368371,2,"['clear', 'simpl']","['clearer', 'simply']"
Usability,"ucidate it with an example:. > Suppose I am trying to optimize a wing for a given flight condition but I want more design freedom than altering the airfoil shapes along the wing using FFDs. I want to be able to control wing span, taper ratio, dihedral angle, twist, and any number of other geometrical representations of the wing. Currently, I would have to create a new Design Variable (DV) for most of those variables. If anyone has tried this, they know it is a tedious task with having to make alterations in various parts of the code.; >; > But all of these design variables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for r",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/922:1607,simpl,simple,1607,https://su2code.github.io,https://github.com/su2code/SU2/pull/922,2,['simpl'],['simple']
Usability,"uctures. What about the following high level structure?. * Loop over the number of iterations, or time steps for unsteady problems.; * Loop over the number of pseudo-time steps for implicit time integration schemes; (DT_STEPPING_1ST and DT_STEPPING_2ND). For other cases this loop is 1.; * Loop over the number of disciplines involved; Call iterate for each of the disciplines.; In iterate:; * Loop over the (Runge-Kutta) stages; * Loop over the zones of a single discipline; Compute spatial residual.; Update the state vector.; * End loop over the zones of a single discipline.; Exchange halo data. This includes the halo data between zones of a single discipline.; * End loop over the (Runge-Kutta) stages; * End loop over the disciplines; * End loop over the pseudo time steps.; * End loop over the number of iterations, or time steps for unsteady problems. The weakness of this approach is that it still does not work when one would like to employ multi-stage time integration schemes for an unsteady, multi-disciplinary problem (does not work for the current implementation either), but maybe this is something we simply have to accept. The alternative is that all the details of the different time integration schemes have to be moved to the driver classes, which is highly undesirable, I think. The structure above implies that the iteration_container and the integration_container should be defined per discipline and not per zone anymore. The geometry_container and solver_container should still be defined per zone. Well, I suppose this leaves plenty of room for discussion, so I would say to continue the online discussion a bit further, such that things become a bit clearer how to tackle this issue. After that having a telecon would be good to iron out the details. Regards,. Edwin. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/437#issuecomment-328368371>, or mute the thread<",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437#issuecomment-328403160:3175,simpl,simply,3175,https://su2code.github.io,https://github.com/su2code/SU2/issues/437#issuecomment-328403160,1,['simpl'],['simply']
Usability,"unning SU2_SOL on problems with multiple Zones for the develop branch. Specifically from the Testcases I tried:; ; - `turbomachinery/APU_turbocharger/Jones_rst.cfg`; - `sliding_interface/rotating_cylinders/rot_cylinders_WA.cfg` (I saw a regression test failing for @economon which I was able to reproduce). I did some debugging and I think the code is wrong in `CBaseLineSolver::LoadRestart(...)` in solver_structure.cpp starting in line 3925. Inside that routine the `geometry` container is called as `geometry[iZone]` to address the final `C(Physical)Geometry` object. I think that the addressable level is the instance level i.e. it should be `geometry[iInst]`. ; As the Jones_rst case has two zones but only one instance the object `geometry[iZone=1]` in LoadRestart refers to what is `geometry_container[iZone=1][iInst=1]` in SU2_SOL.cpp - which does not exists and should be `geometry_container[iZone=1][iInst=0]`. Unfortunately it does not fail there directly for as it reaches (I guess) valid memory and simply interprets what it finds which leads to wrong evaluation of e.g. `GetnDim()=2376` or so. . I extracted a patch (apply with `patch -p1 < _patchfile_ ` in the root of the code directory) for the current develop branch which fixes the segfault problem for the above mentioned cases but I don't know whether it works correctly if multiple Instances are computed. ; [SU2_SOL_segfault_patch.txt](https://github.com/su2code/SU2/files/2328459/SU2_SOL_segfault_patch.txt) (github does not accept *.patch files...). Is there a testcase which covers multiple zones and multiple instances. At best with nZones!=nInstances? Can somebody confirm that this is actually a bug and if the patch fixes it? I probably don't know if it occurs somewhere else, so if somebody thinks their problems are related let me know. It is no problem to do a PR if I get some feedback. The (possible) bug was introduced here https://github.com/su2code/SU2/commit/1a75ebd0343694977a98c945833928bcc96932c1 . I hope my ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/568:1057,simpl,simply,1057,https://su2code.github.io,https://github.com/su2code/SU2/issues/568,1,['simpl'],['simply']
Usability,update style guide,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/89:13,guid,guide,13,https://su2code.github.io,https://github.com/su2code/SU2/issues/89,1,['guid'],['guide']
Usability,"updating solver_direct_tne2.cpp. ## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/556:447,guid,guide,447,https://su2code.github.io,https://github.com/su2code/SU2/pull/556,1,['guid'],['guide']
Usability,"urbed solution).; This linear system is much more ill-conditioned, and so in addition to the classical linear preconditioners, it is possible to use the traditional linear system as the preconditioner (you gotta love the kind of stuff SU2 lets you get away with sometimes).; This nesting makes each iteration potentially very expensive, it is crucial not to ""over solve"" the linear systems, and to use adaptive CFL to run always at the highest CFL possible. Notwithstanding the preconditioner madness, this also works for explicit solvers, but that may only be good enough for dual time methods with relatively small time steps. This seems to be good at converging problems that would otherwise not get past a limit cycle.; I do not expect it to be faster when that is not a problem. Some references:; https://arc.aiaa.org/doi/abs/10.2514/6.2021-0857; https://arc.aiaa.org/doi/10.2514/1.J052255. Example config for the RANS ONERA M6 in the repo: [turb_ONERAM6_nk.txt](https://github.com/su2code/SU2/files/5947580/turb_ONERAM6_nk.txt); It contains the explanation and recommendations for the different parameters. The initial idea was to couple all solvers (flow, turbulence, etc.) but that makes the problem even more ill-conditioned and so I took a step back (as that also makes the implementation simpler...).; The skeleton of the coupled iteration exists in commit c97221b6f7dfd315dfceb9f59f8928790c78e0ce and it was functional... if anyone wants to take it further, it's there. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1183:1586,simpl,simpler,1586,https://su2code.github.io,https://github.com/su2code/SU2/pull/1183,2,['simpl'],"['simpler', 'simply']"
Usability,"when running an optimisation process, when the solution files are arranged in the /DESIGNS/DSN_001/DIRECT/ directory tree, if the option RESTART_SOLUTION is set to YES in the cfg file, the solution does not restart from a previous restart file! instead it simply deletes all old designs and runs the process from scratch again. ; for example: if i want to run the first N design iterations, then stop the process on the Nth iteration and change something in the config file -e.g. cfl num- (including setting the restart option to YES), upon resubmitting the job all N design iterations are lost and the process starts again from DSN_001. this has proven to be quite an expensive problem for large 3D optimisations, and i am not sure wether this is a bug or something which has been hardcoded for a reason? ; it could be quite useful to have an option of where to restart the solution from? (e.g. restart from DSN_00X); Cheers, T.P.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/290:256,simpl,simply,256,https://su2code.github.io,https://github.com/su2code/SU2/issues/290,1,['simpl'],['simply']
Usability,"when you've installed python packages in two different locations. This could be due to installing some python packages in a system directory (e.g. `/usr/lib/`) and some in a user directory (e.g. `~/.local/`). SU2's build process is set to automatically detect the default package location, but it's not equipped to handle multiple package locations. There are some hardcoded includes, but these only work for python 2.7. I don't consider this a bug *per se* because multiple python package directories is not a standard use case. #### The symptoms. When building SU2 with the python wrapper you'll see the following error during the swig build:; ```; <install directory>/../SU2_PY/pySU2/pySU2.i:64: Error: Unable to find 'mpi4py/mpi4py.i'; ```; But mpi4py is indeed installed on your system and it's on your python path, as confirmed by opening a python terminal and running `import mpi4py`. #### The easiest workaround. Switch to a [virtualenv](https://packaging.python.org/guides/installing-using-pip-and-virtual-environments/). This will ensure that all of your python packages are stored in single location. #### Alternate workaround. In this method, you change the hardcoded includes to match mpi4py's package location. First I figure out where my mpi4py is installed. I start a terminal session of python using the python environment I want to use (in this case, it's python 3.6), and then run:; ```; from mpi4py import MPI; MPI; ```. Since I have mpi4py installed on your system and it's on my python path, I see something like:; ```; <module 'mpi4py.MPI' from '/home/clarkpede/.local/lib/python3.6/site-packages/mpi4py/MPI.cpython-34m.so'>; ```. The `/home/clarkpede/.local/lib/python3.6/` directory is where my mpi4py package is installed. But the swig compile command includes `/home/clarkpede/.local/lib/python2.7/`. That's not the right directory! So first I find the hardcoded paths of the makefile by running (on a bash terminal):; ```; grep -rn python2\.7 SU2_PY/ ; ```; On my system, t",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/722#issuecomment-515693590:1105,guid,guides,1105,https://su2code.github.io,https://github.com/su2code/SU2/issues/722#issuecomment-515693590,1,['guid'],['guides']
Usability,"wing:; - A new fluid model for incompressible ideal gas with variable Cp via polynomial fit as Cp(T) : b0 + b1.T + b2.T^2 + b3.T^3 + b4.T^4 where the user specifies b coefficients.; - Polynomial viscosity model (incompressible only) with Mu(T) : b0 + b1.T + b2.T^2 + b3.T^3 + b4.T^4 (user specifies b's).; - Polynomial laminar thermal conductivity model (incompressible only) with Kt(T) : b0 + b1.T + b2.T^2 + b3.T^3 + b4.T^4 (user specifies b's).; - New option for TURBULENT_CONDUCTIVITY_MODEL, which is CONSTANT_PRANDTL_TURB by default, but gives flexibility for more options in the future. This was not exposed before, which can be dangerous, depending on the choice of laminar conductivity model. Now, any of the laminar models can still include the effect of turbulence on heat transfer with a constant turbulent Prandtl number, or it can be deactivated.; - A few fixes for FFD parameterization, including ParaView output and handling of symmetry planes. The polynomial models have only been added to the incompressible solver to start. However, one could activate them in the compressible solver(s) too, since they are in the shared fluid/transport model classes. A cylinder test case has been added for the polynomial fluid models. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/624:1684,guid,guide,1684,https://su2code.github.io,https://github.com/su2code/SU2/pull/624,1,['guid'],['guide']
Usability,"xecutable is only run once, sweeping through all the unit tests. The result only shows a single failure or a single success. If more detail is desired, then the test executable can be run manually.; + The relevant SU2 code is compiled as a library (e.g. `libSU2core`) and then linked into both the main executable (`SU2_CFD`) and the test program (`test_driver`). ### How to Run Unit Tests. If you compile SU2 using `ninja -C builddir`, then the test executable will automatically be compiled. You then have three options for running the tests:. + `meson test` (see documentation [here](https://mesonbuild.com/Unit-tests.html)); + `ninja test`; + Run the exectuable manually: `./UnitTests/test_driver`. When running the executable manually, there are many customization options. Run `./UnitTests/test_driver --help` to see them all. ### How to add unit tests. I have already included a single unit-test example (`UnitTests/SU2_CFD/src/numerics/CNumerics_tests.cpp`). Aside from the headaches with CConfig, this example should be clear. If not, raise questions and I will answer them. ~~I plan on adding a few more example tests, as well as a ""How-To"" page on the website.~~ Please see the PR on the website repo for more documentation. To learn more, check out the [great tutorial](https://github.com/catchorg/Catch2/blob/master/docs/tutorial.md) for Catch2. You can also find more in-depth documentation there. ### I still don't understand unit tests. Where can I learn more?. I highly recommend reading at least one of these two books:. + ""Working Effectively with Legacy Code,"" by Michael Feathers; + ""Modern C++ Programming with Test-Driven Development,"" by Jeff Langr. ## Remaining work. + ~~Add unit-testing to Travis CI~~; + ~~Add support for unit testing in AD builds~~; + ~~Add more examples of unit tests~~; + ~~Add ""How-To Add Unit Tests"" documentation~~. ## Related Work; This resolves issue #698. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My con",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/850:3109,clear,clear,3109,https://su2code.github.io,https://github.com/su2code/SU2/pull/850,1,['clear'],['clear']
Usability,"you are correct, there is a discussion on CFD-online about it. we impose 0 heat flux, but report an ""apparent heat flux"" most codes will simply give you back the imposed heat flux value you specify, nevertheless there will probably be a temperature gradient close to the wall",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2109#issuecomment-1740118992:137,simpl,simply,137,https://su2code.github.io,https://github.com/su2code/SU2/pull/2109#issuecomment-1740118992,1,['simpl'],['simply']
Usability,"ze_t iPoint = connectivity[iEdge].first;; size_t jPoint = connectivity[iEdge].second;. // i to j vector; double d_ij[3] = {0.0, 0.0, 0.0};. for(size_t iDim=0; iDim<nDim; ++iDim); d_ij[iDim] = 0.5*(coords(jPoint,iDim)-coords(iPoint,iDim));. // projections; double proj_i[nVar], proj_j[nVar];. #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); proj_i[iVar] = proj_j[iVar] = 0.0;. for(size_t iDim=0; iDim<nDim; ++iDim); {; #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); {; proj_i[iVar] += d_ij[iDim]*grad(iPoint,iVar,iDim);; proj_j[iVar] -= d_ij[iDim]*grad(jPoint,iVar,iDim);; }; }. // choose the ""right"" delta based on sign of projection; // and avoid division by zero; double lim_i[nVar], lim_j[nVar];. #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); {; lim_i[iVar] = phiMax(iPoint,iVar);; lim_j[iVar] = phiMax(jPoint,iVar);; }. const double eps = numeric_limits<double>::epsilon();. // very simple if's are required to get vectorization; // trough vector comparisons and masked blends; #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); {; if(proj_i[iVar] <= 0.0); {; lim_i[iVar] = phiMin(iPoint,iVar);; proj_i[iVar] = min(proj_i[iVar], -eps);; }. if(proj_j[iVar] <= 0.0); {; lim_j[iVar] = phiMin(jPoint,iVar);; proj_j[iVar] = min(proj_j[iVar], -eps);; }; }. #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); {; lim_i[iVar] = (lim_i[iVar]-phi(iPoint,iVar))/proj_i[iVar];; limiter(iPoint,iVar) = min(limiter(iPoint,iVar), lim_i[iVar]);. lim_j[iVar] = (lim_j[iVar]-phi(jPoint,iVar))/proj_j[iVar];; limiter(jPoint,iVar) = min(limiter(jPoint,iVar), lim_j[iVar]);; }; }. #pragma omp parallel for schedule(dynamic,TARGET_CHUNK_SIZE); for(size_t iPoint=0; iPoint<nPoint; ++iPoint); {; #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); {; double lim = limiter(iPoint,iVar);; limiter(iPoint,iVar) = lim*(lim+2)/(lim*lim+lim+2);; }; }; }; ```; Again to keep things short here is the parallel and SIMD point-loop version (like for gradients it is very similar to the",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530593912:6356,simpl,simple,6356,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530593912,1,['simpl'],['simple']
